[
    {
        "id": "1krvg9l",
        "title": "when will they learn?",
        "author": "SureResort6444",
        "subreddit": "dataengineering",
        "content": "",
        "score": 1005,
        "upvote_ratio": 0.98,
        "num_comments": 30,
        "url": "https://i.redd.it/xl03tfrke42f1.png",
        "created_utc": 1747826876.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksrydm",
        "title": "When i was a Data Analyst i enjoyed life, when i transitioned to Data Engineer i feel like i aged 10 years in a year",
        "author": "HMZ_PBI",
        "subreddit": "dataengineering",
        "content": "It's been a year now as a Data Engineer and i feel like i aged 10 years, my hair started falling, i don't get enough sleep, my face is aging\n\nIs it just me or a common thing in this field?",
        "score": 395,
        "upvote_ratio": 0.97,
        "num_comments": 131,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksrydm/when_i_was_a_data_analyst_i_enjoyed_life_when_i/",
        "created_utc": 1747923703.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktpgcf",
        "title": "New data engineer getting paid more than me, a senior DE",
        "author": "Yoyo_Baggins",
        "subreddit": "dataengineering",
        "content": "I found out that a new data engineer coming onto my team is making a few thousand more than me (a senior thats been with the company several years) annually, despite this new DE having less direct/applicable experience than me. Having to be a bit vague for obvious reasons. I have been a top individual contributor on my team every year. Every review I've received from management is overwhelmingly positive. This new DE and I are in the same geographic area, so thats not the explanation. \n\nHow should I broach this with my management without: \n - revealing that I am 100% sure what this new DE is making, \n - threatening to leave if they don't up my pay,\n - getting myself on the short list for layoffs\n\nWe just finished our annual reviews. This pay disparity is even after I received a meager merit raise. \n\nAnyone else navigated this? Am I really going to have to company hop just to get paid a fair market salary? I want to stay at this company. I like what I do, but I also need more money to make ends meet.\n\nEDIT (copying a comment I left): I guess I should have said this in the original post, but I already tried this before our annual reviews. I provided evidence of my contribution, asked for a specific annual salary increase, and wanted it to be part of my annual increase which had a specific deadline. \n\nWhat I ended up getting was a bunch of excuses as to why it wasn't possible, empty promises of things they might be able to do for me later this year, and a meager merit raise well below inflation.\n\nSo, to take your advice and many others here, sounds like I should just start looking elsewhere.",
        "score": 236,
        "upvote_ratio": 0.93,
        "num_comments": 149,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktpgcf/new_data_engineer_getting_paid_more_than_me_a/",
        "created_utc": 1748021463.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvtz7d",
        "title": "scrum is total joke in DE & BI development",
        "author": "betonaren",
        "subreddit": "dataengineering",
        "content": "My current responsibility is databricks + power bi. Now don't get me wrong, our scrum process is not correct scrum and we have our super benevolent rules for POs and we are planning everything for 2 upcoming quarters (?!!!), but even without this stupid future planning I found out we are doing anything but agile. Scrum turned to: give me estimation for everything, Dev or PO can change task during sprint because BI development is pretty much unpredictable. And mostly how the F\\*\\*\\* I can give estimate in hours for something I have no clue! Every time developer needs to be in defend position AKA why we are always underestimate, lol. BI development takes lots of exploration and prototyping and specially with tool like Power BI. In the end we are not delivering according to plan but our team is always overcommitted. I don't know any person who is actually enjoying scrum including devs, manegers and POs. What's your attitude towards scrum? cheers",
        "score": 237,
        "upvote_ratio": 0.91,
        "num_comments": 96,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvtz7d/scrum_is_total_joke_in_de_bi_development/",
        "created_utc": 1748265030.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kuwzs9",
        "title": "My databricks exam got suspended",
        "author": "_lady_forlorn",
        "subreddit": "dataengineering",
        "content": "Feeling really down as my data engineer professional exam got suspended one hour into the exam.\n\nBefore that, I got a warning that I am not allowed to close my eyes. I didn't. Those questions are long and reading them from top to bottom might look like I'm closing my eyes. I can't help it. \n\nThey then had me show the entire room and suspended the exam without any explanantion.\n\nI prefer Microsoft exams to this. At least, the virtual tour happens before the exam begins and there's an actual person constantly proctoring. Not like Kryterion where I think they are using some kind of software to detect eye movement.\n\n",
        "score": 169,
        "upvote_ratio": 0.91,
        "num_comments": 46,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuwzs9/my_databricks_exam_got_suspended/",
        "created_utc": 1748158831.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvegva",
        "title": "Could someone explain how data engineering job openings are down so much during this AI hype",
        "author": "Jazzlike_Middle2757",
        "subreddit": "dataengineering",
        "content": "https://preview.redd.it/pefijjqa403f1.png?width=1138&format=png&auto=webp&s=d26e72f944bde942a6246067471b46554d27ad74\n\nGranted this was data from 2023-2024, but its still strange. Why did data engineers get hit the hardest?\n\nSource: [https://bloomberry.com/how-ai-is-disrupting-the-tech-job-market-data-from-20m-job-postings/](https://bloomberry.com/how-ai-is-disrupting-the-tech-job-market-data-from-20m-job-postings/)",
        "score": 145,
        "upvote_ratio": 0.92,
        "num_comments": 69,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvegva/could_someone_explain_how_data_engineering_job/",
        "created_utc": 1748210933.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kuq56n",
        "title": "Career Move: Switching from Databricks/Spark to Snowflake/Dbt",
        "author": "OrganizationTop1668",
        "subreddit": "dataengineering",
        "content": "Hey everyone,\n\nI wanted to get your thoughts on a potential career move. I've been working primarily with Databricks and Spark, and I really enjoy the flexibility and power of working with distributed compute and Python pipelines.\n\nNow I’ve got a job offer from a company that’s heavily invested in the Snowflake + Dbt stack. It’s a solid offer, but I’m hesitant about moving into something that’s much more SQL-centric. I worry that going \"all in\" on SQL might limit my growth or pigeonhole me into a narrower role over time.\n\nI feel like this would push me away from core software engineering practices, given that SQL lacks features like OOP, unit testing, etc...\n\nIs Snowflake/Dbt still seen as a strong direction for data engineering, or would it be a step sideways/backwards compared to staying in the Spark ecosystem?\n\nAppreciate any insights!",
        "score": 124,
        "upvote_ratio": 0.97,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuq56n/career_move_switching_from_databricksspark_to/",
        "created_utc": 1748133642.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krmviy",
        "title": "it has to work this time…",
        "author": "EntrancePrize682",
        "subreddit": "dataengineering",
        "content": "",
        "score": 120,
        "upvote_ratio": 0.92,
        "num_comments": 12,
        "url": "https://i.redd.it/nagx3637p12f1.jpeg",
        "created_utc": 1747794097.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksw491",
        "title": "I don’t know how Dev & Prod environments work in Data Engineering",
        "author": "Reddit-Kangaroo",
        "subreddit": "dataengineering",
        "content": "Forgive me if this is a silly question. I recently started as a junior DE.\n\nSay we have a simple pipeline that pulls data from Postgres and loads into a Snowflake table. \n\nIf I want to make changes to it without a Dev environment - I might manually change the \"target\" table to a test table I've set up (maybe a clone of the target table), make updates, test, change code back to the real target table when happy, PR, and merge into the main branch of GitHub. \n\nI'm assuming this is what teams do that don't have a Dev environment?\n\nIf I did have a Dev environment, what might the high level process look like? \n\nWould it make sense to:\n- have a Dev branch in GitHub\n- some sort of overnight sync to clone all target tables we work with to a Dev schema in Snowflake, using a mapping file of some sort \n- paramaterise all scripts so that when they're merged to Prod (Main) they are looking at the actual target tables, but in Dev they're looking at the the Dev (cloned) tables? \n\nOf course this is a simple example assuming all target tables are in Snowlake, which might not always be the case\n",
        "score": 98,
        "upvote_ratio": 0.94,
        "num_comments": 43,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksw491/i_dont_know_how_dev_prod_environments_work_in/",
        "created_utc": 1747933772.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krb45d",
        "title": "Which SQL editor do you use?",
        "author": "Hungry_Ad8053",
        "subreddit": "dataengineering",
        "content": "Which Editor do you use to write SQL code. And does that differ for the different flavours of SQL.\n\nI nowadays try to use vim dadbod or vscode with extensions.\n\n",
        "score": 98,
        "upvote_ratio": 0.97,
        "num_comments": 159,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krb45d/which_sql_editor_do_you_use/",
        "created_utc": 1747762884.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krcm3p",
        "title": "Anyone working on cool side projects?",
        "author": "alexstrehlke",
        "subreddit": "dataengineering",
        "content": "Data engineering has so much potential in everyday life, but it takes effort. Who’s working on a side project/hobby/hustle that you’re willing to share?",
        "score": 96,
        "upvote_ratio": 0.97,
        "num_comments": 68,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krcm3p/anyone_working_on_cool_side_projects/",
        "created_utc": 1747766423.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kw25lj",
        "title": "The skills no one teaches engineers: mindset, people smarts, and the books that rewired me",
        "author": "Eastern_Ticket2157",
        "subreddit": "dataengineering",
        "content": "I got laid off from Amazon after COVID when they outsourced our BI team to India and replaced half our workflow with automation. The ones who stayed weren’t better at SQL or Python - they just had better people skills. \n\nFor two months, I applied to every job on LinkedIn and heard nothing. Then I stopped. I laid in bed, doomscrolled 5+ hours a day, and watched my motivation rot. I thought I was just tired. Then my girlfriend left me - and that cracked something open.\n\nIn that heartbreak haze, I realized something brutal: I hadn’t grown in years. Since college, I hadn’t finished a single book - five whole years of mental autopilot. \n\nMeanwhile, some of my friends - people who foresaw the layoffs, the AI boom, the chaos - were now running startups, freelancing like pros, or negotiating raises with confidence. What did they all have in common? They never stop self growth and they read. Daily.\n\nSo I ran a stupid little experiment: finish one book. Just one. I picked a memoir that mirrored my burnout. Then another. Then I tried a business book. Then a psychology one. I kept going. It’s been 7 months now, and I’m not the same person.\n\nReading daily didn’t just help me “get smarter.” It reprogrammed how I think. My mindset, work ethic, even how I speak in interviews - it all changed. I want to share this in case someone else out there feels as stuck and brain-fogged as I did. You’re not lazy. You just need better inputs. Start feeding your mind again.\n\nAs someone with ADHD, reading daily wasn’t easy at first. My brain wanted dopamine, not paragraphs. I’d reread the same page five times. That’s why these tools helped - they made learning actually stick, even on days I couldn’t sit still. Here’s what worked for me:\n- The Almanack of Naval Ravikant: This book completely rewired how I think about wealth, happiness, and leverage. Naval’s mindset is pure clarity.\n\n- Principles by Ray Dalio: The founder of Bridgewater lays out the rules he used to build one of the biggest hedge funds in the world. It’s not just about work - it’s about how to think. Easily one of the most eye-opening books I’ve ever read.\n\n- Can’t Hurt Me by David Goggins: NYT Bestseller. His brutal honesty about trauma and self-discipline lit a fire in me. This book will slap your excuses in the face.\n\n- Deep Work by Cal Newport: Productivity bible. Made me rethink how shallow my work had become. Best book on regaining focus in a distracted world.\n\n- The Psychology of Money by Morgan Housel:  Super digestible. Helped me stop making emotional money decisions. Best finance book I’ve ever read, period.\n\n\nOther tools & podcasts that helped \n- Lenny’s Newsletter: the best newsletter if you're in tech or product. Lenny (ex-Airbnb PM) shares real frameworks, growth tactics, and hiring advice. It's like free mentorship from a top-tier operator.\n\n- BeFreed: A friend who worked at Google put me on this. It’s a smart reading & book summary app that lets you customize how you read/listen: 10 min skims, 40 min deep dives, 20 min podcast-style explainers, or flashcards to help stuff actually stick. \n\nit also remembers your favs, highlights, goals and recommend books that best fit your goal.\n\n I tested it on books I’d already read and the deep dives covered ~80% of the key ideas. Now I finished 10+ books per month and I recommend it to all my friends who never had time or energy to read daily.\n\n- Ash: A friend told me about this when I was totally burnt out. It’s like therapy-lite for work stress - quick check-ins, calming tools, and mindset prompts that actually helped me feel human again.\n\n- The Tim Ferriss Show - podcast – Endless value bombs. He interviews top performers and always digs deep into their habits and books.\n\nTbh, I used to think reading was just a checkbox for “smart” people. Now I see it as survival. It’s how you claw your way back when your mind is broken.\n\nIf you’re burnt out, heartbroken, or just numb - don’t wait for motivation. Pick up any book that speaks to what you’re feeling. Let it rewire you. Let it remind you that people before you have already written the answers.\n\nYou don’t need to figure everything out alone. You just need to start reading again.",
        "score": 91,
        "upvote_ratio": 0.77,
        "num_comments": 40,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kw25lj/the_skills_no_one_teaches_engineers_mindset/",
        "created_utc": 1748285171.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krkt28",
        "title": "DataLemur vs strataScratch vs NamasteSQL vs LeetCodeSQL, How would you rate these platforms for SQL practice in 2025 DE job market?",
        "author": "NefariousnessSea5101",
        "subreddit": "dataengineering",
        "content": "What's your experience been across each platform?\n\nEDIT :  Forgot to include **InterviewQuery**",
        "score": 82,
        "upvote_ratio": 0.95,
        "num_comments": 24,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krkt28/datalemur_vs_stratascratch_vs_namastesql_vs/",
        "created_utc": 1747787690.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ks73tc",
        "title": "Do you comment everything?",
        "author": "WishyRater",
        "subreddit": "dataengineering",
        "content": "Was looking at a coworker's code and saw this:\n\n`# we import the pandas package`  \n`import pandas as pd`\n\n`# import the data`  \n`df = pd.read_csv(\"downloads/data.csv\")`\n\nGotta admit I cringed pretty hard. I know they teach in schools to 'comment everything' in your introductory programming courses but I had figured by professional level pretty much everyone understands when comments are helpful and when they are not.\n\nI'm scared to call it out as this was a pretty senior developer who did this and I think I'd be fighting an uphill battle by trying to shift this. Is this normal for DE/DS-roles? How would you approach this?",
        "score": 74,
        "upvote_ratio": 0.84,
        "num_comments": 83,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ks73tc/do_you_comment_everything/",
        "created_utc": 1747856609.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kt1mqm",
        "title": "Should I Stick With Data Engineering or Explore Backend?",
        "author": "Leather-Band2983",
        "subreddit": "dataengineering",
        "content": "I'm a 2024 graduate and have been working as a Data Engineer for the past year. Initially, my work involved writing ETL jobs and SQL scripts, and later I got some exposure to Spark with Databricks. However, I find the work a bit monotonous and not very challenging — the projects seem fairly straightforward, and I don’t feel like there’s much to learn or grow from technically.\n\nI'm wondering if others have felt the same way early in their data engineering careers, or if this might just be my experience. On the positive side, everything else in the team is going well — good pay, work-life balance, and supportive colleagues.\n\nI'm considering whether I should explore a shift towards core backend development, or if I should stay and give it more time to see if things become more engaging. I’d really appreciate any thoughts or advice from those who’ve been in a similar situation.",
        "score": 56,
        "upvote_ratio": 0.97,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kt1mqm/should_i_stick_with_data_engineering_or_explore/",
        "created_utc": 1747947099.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kuajtp",
        "title": "Reflecting on your journey, what is something you wish you had when you started as a Data Engineer?",
        "author": "georchry_",
        "subreddit": "dataengineering",
        "content": "I’m trying to better understand the key learnings that only come with experience.\n\nWhether it’s a technical skill, a mindset shift, a lesson or any relatable piece of knowledge, I’d love to hear what you wish you had known early on.",
        "score": 51,
        "upvote_ratio": 0.94,
        "num_comments": 44,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuajtp/reflecting_on_your_journey_what_is_something_you/",
        "created_utc": 1748090014.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kthcrg",
        "title": "How is an actual data engineering project executed?",
        "author": "BricksData",
        "subreddit": "dataengineering",
        "content": "Hi,\n\nI am new to data engineering and am trying to learn it by myself. \n\nSo far, I have learnt that we generally process data in three stages:\n- bronze/ raw/ a snapshot of original data with very little modification. \n\n- Silver/ performing transformations for our business purpose\n\n- Gold / dimensionally modelling our data to be consumed by reporting tools. \n----------\nI used :\n- Azure Data Factory to ingest data into bronze,\n then \n\n- Azure DataBricks to store the raw data as delta tables and them perfomed transformations on that data in Silver layer\n\n- Modelled Data for Gold Layer\n-----------\nI want to understand, how an actual real world project is executed. I see companies processing petabytes of data. How do you do that at your job?\n\nWould really be helpful to get an overview of your execution of a project. \n\nThanks.  ",
        "score": 52,
        "upvote_ratio": 0.94,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kthcrg/how_is_an_actual_data_engineering_project_executed/",
        "created_utc": 1748000354.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ku1s5h",
        "title": "DevOps knowledge as a DE",
        "author": "Gohan_24",
        "subreddit": "dataengineering",
        "content": "All senior DEs with 10-15 YOE can guide how much devOps should the DEs should know and if we learn Devops what are the benefits plus career path we can have down the line . ",
        "score": 50,
        "upvote_ratio": 0.95,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ku1s5h/devops_knowledge_as_a_de/",
        "created_utc": 1748055976.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvthrx",
        "title": "How important is it to be \"full-stack\" in data?",
        "author": "Impossible-Gear-4365",
        "subreddit": "dataengineering",
        "content": "Hey everyone,\n\nI wanted to start a conversation about the growing expectation for data professionals to become more \"full-stack.\" Especially in the Brazilian market, I've noticed a trend, or even a pressure, for people to take on more responsibilities across the entire data workflow, sometimes beyond their original role.\n\nI’ve been working as a Data Engineer for a little over a year now, focusing mainly on EL processes, building data pipelines and delivering datasets to the primary layer. From there, Analytics Engineers usually take over and apply transformations. I hold certifications in Airflow (Astronomer) and Databricks Data Engineer Fundamentals, and I’m currently thinking about diving into DBT, mainly through personal projects.\n\nRecently, I received the suggestion that being full-stack in data is the ideal, or even necessary, path to follow. That got me thinking:\n\nHow far should we go in expanding our technical scope?  \nAre we sacrificing depth for breadth?  \nIs this expectation more common for Data Engineers than for AEs or Data Scientists?  \nIs being full-stack really an advantage in the long run, or just a sign of immaturity or lack of process in some organizations?\n\nI’d love to hear your thoughts, especially from those who have faced this kind of situation or work in more structured data teams.",
        "score": 45,
        "upvote_ratio": 0.97,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvthrx/how_important_is_it_to_be_fullstack_in_data/",
        "created_utc": 1748263657.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvjqqh",
        "title": "'Close to impossible' for Europe to escape clutches of US hyperscalers -- \"Barriers stack up: Datacenter capacity, egress fees, platform skills, variety of cloud services. It won't happen, say analysts\"",
        "author": "throwaway16830261",
        "subreddit": "dataengineering",
        "content": "",
        "score": 45,
        "upvote_ratio": 0.92,
        "num_comments": 21,
        "url": "https://www.theregister.com/2025/05/22/ditching_us_clouds_for_local/",
        "created_utc": 1748227510.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksnoaa",
        "title": "I never use OOP or functional approach in my pipelines. Its just neatly organized procedural programming. Should i change my approach(details in the comments)?",
        "author": "PrideVisual8921",
        "subreddit": "dataengineering",
        "content": "Each \"codebase\" (imagine it as DAGs that consist of around 8-10 pipelines each) has around 1000-1500 lines in total, spread in different notebooks. Ofc each \"codebase\" also has a lot of configuration lines.\n\n Currently it works fine but im thinking if i should start trying to adhere to certain practices, e.g. OOP or functional. For example if it will be needed due to scaling.\n\n What are your experiences with this?",
        "score": 43,
        "upvote_ratio": 0.93,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksnoaa/i_never_use_oop_or_functional_approach_in_my/",
        "created_utc": 1747911039.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksifmz",
        "title": "[Meta] Feels like there's a noticeable rise in low effort content by fresh accounts",
        "author": "Captain_Strudels",
        "subreddit": "dataengineering",
        "content": "( please direct me to the relevant meta thread if one exists)\n\nPer title - without beating around the bush, they look like either AI posts or posts out to market their own shit, maybe trying to raise karma or something idk. I called one of them out the other day but I swear every other day there is a garbage front of r/all meme vaguely related to data engineering. Maybe I should give them the benefit of the doubt and assume DEs aren't the funniest people. \n\nBut I swear the accounts are always like 3 months old top, or if they are years old, they haven't posted except in the past 4 weeks. I don't want to link each one and start a witch hunt, esp when there's JUST ENOUGH plausible deniability. But the quality of this subreddit feels kinda garbage with those kinds of posts in it. Real speedrunning dead internet theory vibes.\n\nIdk what's the solution. Do other people notice it too? Do the mods notice it? I'm not here to say I make lots of quality posts myself (I made \"How do I transition from analytics\" post #999000 2ish months ago - although I then went and did it) but I'd at least like to lurk in a place with quality posts. It's not just this subreddit, I know tons of them are getting spammed. Is reddit just kinda done as a forum?",
        "score": 39,
        "upvote_ratio": 0.91,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksifmz/meta_feels_like_theres_a_noticeable_rise_in_low/",
        "created_utc": 1747889431.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krth0g",
        "title": "Onyxia: open-source EU-funded software to build internal data platforms on your K8s cluster",
        "author": "garronej",
        "subreddit": "dataengineering",
        "content": "Code’s here: [github.com/InseeFrLab/onyxia](https://github.com/InseeFrLab/onyxia)\n\nWe're building Onyxia: an open source, self-hosted environment manager for Kubernetes, used by public institutions, universities, and research organizations around the world to give data teams access to tools like Jupyter, RStudio, Spark, and VSCode without relying on external cloud providers.\n\nThe project started inside the French public sector, where sovereignty constraints and sensitive data made AWS or Azure off-limits. But the need — a simple, internal way to spin up data environments, turned out to be much more universal. Onyxia is now used by teams in Norway, at the UN, and in the US, among others.\n\nAt its core, Onyxia is a web app (packaged as a Helm chart) that lets users log in (via OIDC), choose from a service catalog, configure resources (CPU, GPU, Docker image, env vars, launch script…), and deploy to their own K8s namespace.\n\nHighlights:\n- Admin-defined service catalog using Helm charts + `values.schema.json` → Onyxia auto-generates dynamic UI forms.\n- Native S3 integration with web UI and token-based access. Files uploaded through the browser are instantly usable in services.\n- Vault-backed secrets injected into running containers as env vars.\n- One-click links for launching preconfigured setups (widely used for teaching or onboarding).\n- DuckDB-Wasm file viewer for exploring large parquet/csv/json files directly in-browser.\n- Full white label theming, colors, logos, layout, even injecting custom JS/CSS.\n\nThere’s a public instance at [datalab.sspcloud.fr](https://datalab.sspcloud.fr) for French students, teachers, and researchers, running on real compute (including H100 GPUs).\n\nIf your org is trying to build an internal alternative to Databricks or Workbench-style setups — without vendor lock-in, curious to hear your take.",
        "score": 41,
        "upvote_ratio": 0.92,
        "num_comments": 18,
        "url": "https://www.youtube.com/watch?v=FvpNfVrxBFM",
        "created_utc": 1747819299.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kszdqn",
        "title": "Claude Opus 4 is better than any other popular model at SQL generation",
        "author": "itty-bitty-birdy-tb",
        "subreddit": "dataengineering",
        "content": "We added Opus 4 to our SQL generation benchmark. It's really good -> [https://llm-benchmark.tinybird.live/](https://llm-benchmark.tinybird.live/)",
        "score": 30,
        "upvote_ratio": 0.73,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kszdqn/claude_opus_4_is_better_than_any_other_popular/",
        "created_utc": 1747941634.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kt45y6",
        "title": "What do you call your data mart layer/schema?",
        "author": "Such_Market2566",
        "subreddit": "dataengineering",
        "content": "What naming conventions do you typically use for the reporting/data mart layer when implementing a data warehouse? \n\nMy buddy ChatGPT recommended \"semantic\",\"consumption\", and \"presentation\" but I'm interested in hearing how other engineers/architects approach this. \n\nThanks",
        "score": 29,
        "upvote_ratio": 0.94,
        "num_comments": 35,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kt45y6/what_do_you_call_your_data_mart_layerschema/",
        "created_utc": 1747953645.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksokxd",
        "title": "Why are there two Apache Spark k8s Operators??",
        "author": "menishmueli",
        "subreddit": "dataengineering",
        "content": "Hi, wanted to share an article I wrote about Apache Spark K8S Operators:\n\n[https://bigdataperformance.substack.com/p/apache-spark-on-kubernetes-from-manual](https://bigdataperformance.substack.com/p/apache-spark-on-kubernetes-from-manual)  \n\n\nI've been baffled lately by the existence of TWO Kubernetes operators for Apache Spark. If you're confused too, here's what I've learned:\n\n **Which one should you use?**\n\n**Kubeflow Spark-Operator:** The battle-tested option (since 2017!) if you need production-ready features NOW. Great for scheduled ETL jobs, has built-in cron, Prometheus metrics, and production-grade stability.\n\n**Apache Spark K8s Operator:** Brand new (v0.2.0, May 2025) but it's the official ASF project. Written from scratch to support long-running Spark clusters and newer Spark 3.5/4.x features. Choose this if you need on-demand clusters or Spark Connect server features.\n\nApparently, the Apache team started fresh because the older Kubeflow operator's Go codebase and webhook-heavy design wouldn't fit ASF governance. Core maintainers say they might converge APIs eventually.\n\nWhat's your take? Which one are you using in production?",
        "score": 28,
        "upvote_ratio": 0.9,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksokxd/why_are_there_two_apache_spark_k8s_operators/",
        "created_utc": 1747914217.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kuajtf",
        "title": "Data Engineer or AI/ML Engineer - which role has the brighter future?",
        "author": "Different-Earth4080",
        "subreddit": "dataengineering",
        "content": "Hi All!  \n\nI was looking for some advice.  I want to make a career switch and move into a new role.  I am torn between **AI/ML Engineer** and **Data Engineer.**\n\nI read recently that out of those two roles, DE might be the more 'future-proofed' role as it is less likely to be automated.  Whereas with the AI/ML Engineer role, with AutoML and foundation models reducing the need for building models from scratch, and many companies opting to use pretrained models rather than build custom ones, the AI/ML Engineer role might start to be at risk.\n\nWhat do people think about the future of these two roles, in terms of demand and being \"future-proofed\"?  Would you say one is \"safer\" than the other?",
        "score": 26,
        "upvote_ratio": 0.73,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuajtf/data_engineer_or_aiml_engineer_which_role_has_the/",
        "created_utc": 1748090013.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktvdwj",
        "title": "Curious about your background before getting into data engineering",
        "author": "No_Chest_5294",
        "subreddit": "dataengineering",
        "content": "If you’re now working as a data engineer but didn’t start your career in this role, what were you doing before?\n\nWas it software dev, analytics, sysadmin, academia, something totally unrelated? What pushed you toward data engineering, and how was the transition for you?\n\n",
        "score": 26,
        "upvote_ratio": 1.0,
        "num_comments": 39,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktvdwj/curious_about_your_background_before_getting_into/",
        "created_utc": 1748036446.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kt2uwh",
        "title": "feeling anxious as a DE with 10 YOE",
        "author": "Aggressive-Practice3",
        "subreddit": "dataengineering",
        "content": "Hey folks,\nFeeling a bit on edge. My manager set up a probation discussion meeting 4 days in advance and won’t give any feedback before then. It kinda feels like the decision is already made, and it’s just a few days before my probation ends.\n\nHe’s also been acting very very wierd the last 4 to 5 days. Cancelled all our meetings and has been ghosting me as well.\n\nHonestly, it’s making me really nervous and anxious. Last time it took me 4 months to find a job, and it’s hard not to spiral a bit.\n\nI’m a DE with 10 years of experiance, so trying to remind myself I’ve been through rough patches before. Just needed to vent a little.\n\nThanks for listening.",
        "score": 27,
        "upvote_ratio": 0.94,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kt2uwh/feeling_anxious_as_a_de_with_10_yoe/",
        "created_utc": 1747950170.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kux14t",
        "title": "DE in Financial Industry career path",
        "author": "His-Holiness",
        "subreddit": "dataengineering",
        "content": "I’m 26, based in London, have 3 years experience in data engineering, just started a new role in a fintech - base salary £70k.\n\nTrying to map out a bit of a career path that I can look to as a guide, goal is frankly just to make as much money as possible over the next 5-10 years. \n\nShould I be looking to move into a bank in a couple years time, and then maybe a trading firm? I’d like to stay in finance ideally. \n\nWondering at what level does the London market max out, and whether should I be looking to move to the US sooner than later? \n\nAny thoughts you guys have would be much appreciated! ",
        "score": 23,
        "upvote_ratio": 0.93,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kux14t/de_in_financial_industry_career_path/",
        "created_utc": 1748158992.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krfoh4",
        "title": "Does dbt have a language server?",
        "author": "wallyflops",
        "subreddit": "dataengineering",
        "content": "dbt seems to be getting locked more and more into Visual Studio Code, there new addon means the best developer experience will probably be VSCode followed by their dbt Cloud offering.\n\n  \nI don't really mind this but as a hobbyist tinkerer, it feels a bit closed for my liking.\n\nIs there any community effort to build out an LSP or other integrations for the vim users, or other editors I could explore?\n\nChatGPT seems to suggest FiveTran had an attempt at it but it seems like it was discontinued.",
        "score": 24,
        "upvote_ratio": 0.89,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krfoh4/does_dbt_have_a_language_server/",
        "created_utc": 1747773839.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvrs7l",
        "title": "Why would experienced data engineers still choose an on-premise zero-cloud setup over private or hybrid cloud environments—especially when dealing with complex data flows using Apache NiFi?",
        "author": "mikehussay13",
        "subreddit": "dataengineering",
        "content": "Using NiFi for years and after trying both hybrid and private cloud setups, I still find myself relying on a full on-premise environment. With cloud, I faced challenges like unpredictable performance, latency in site-to-site flows, compliance concerns, and hidden costs with high-throughput workloads. Even private cloud didn’t give me the level of control I need for debugging, tuning, and data governance. On-prem may not scale like the cloud, but for real-time, sensitive data flows—it’s just more reliable.\n\n Curious if others have had similar experiences and stuck with on-prem for the same reasons.",
        "score": 23,
        "upvote_ratio": 0.82,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvrs7l/why_would_experienced_data_engineers_still_choose/",
        "created_utc": 1748258040.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktu9ru",
        "title": "Amazon L4 or Stable, Comfortable Job as New Grad?",
        "author": "Interesting_Tea6963",
        "subreddit": "dataengineering",
        "content": "Hello fellow data engineers,\n\nHoping for some guidance on how to evaluate an offer I just got from Amazon.\n\nCurrently working hybrid (1-2 days), \\~120k in VHCOL city, offer is for \\~160 in HCOL city.\n\nMy current job has been alright, but I am a team of one, and there is very little \"data engineering\" to do around here. Feel a little bit stagnant in that regard. Often just uploading Excel files and running some stored procedure/ETL. I'm looking at around 35 hours a week, pretty lax.\n\nNot sure what to expect at Amazon, 50 hours a week, 60? I know the experience would probably be huge for my career, but not sure if I'm willing to pay with my life. I am also aware that I would go from hardly going into the office to going in every day.\n\nAny current or prior Amazon DE's that could weigh in here? Am I walking into a death trap?",
        "score": 22,
        "upvote_ratio": 0.8,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktu9ru/amazon_l4_or_stable_comfortable_job_as_new_grad/",
        "created_utc": 1748033577.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksyj2m",
        "title": "Best practice for scd type 2",
        "author": "Constant-Gear1206",
        "subreddit": "dataengineering",
        "content": "I just started at a company where my fellow DE’s want to store history of all the data that’s coming in. This team is quite new and has done one project with scd type2 before. \n\nThe use case is that history will be saved in scd format in the bronze layer. I’ve noticed that a couple of my colleagues have different understandings of what goes in the valid_from and valid_to columns. \nOne says that they get snapshots of the day before and that the business wants the reports based on the day that the data was in the source system and therefore we should put current_date -1 in the valid_from.\n\nThe other colleague says that it should be the current_date because that’s when we are inserting it in the dwh. Argument is that when a snapshot hasn’t been delivered you are missing that data and the next day it is delivered, you’re telling the business that’s the day it was active in the source system, while that might not be the case.\n\nPersonally, second argument sounds way more logical and bullet proof since the burden won’t be on us, but I also get the first argument.\n\nWondering how you’re doing this in your projects.\n\n",
        "score": 23,
        "upvote_ratio": 0.96,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksyj2m/best_practice_for_scd_type_2/",
        "created_utc": 1747939565.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kut02f",
        "title": "How many data model daily",
        "author": "ketopraktanjungduren",
        "subreddit": "dataengineering",
        "content": "I'm curious as to how many data models you build in a day or week and why\n\nDo you think the number of data models per month can be counted as your KPI?",
        "score": 20,
        "upvote_ratio": 0.84,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kut02f/how_many_data_model_daily/",
        "created_utc": 1748143398.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kr4jcg",
        "title": "Early-career Data Engineer",
        "author": "NoIntroduction9767",
        "subreddit": "dataengineering",
        "content": "Right after graduating, I landed a role as a DBA/Data Engineer at a small but growing company. Until last year, they had been handling data through file shares until they had a consultancy company build them Synapse workspace with daily data refreshes. While I was initially just desperate to get my foot in the door, I’ve genuinely come to enjoy this role and the challenges that come with it. I am the only one working as a DE and while my manager is somewhat knowledgeable in IT space, I can't truly consider him as my DE mentor. That said, I was pretty much thrown into the deep end, and while I’ve learned a lot through trial and error, I do wish that I had started under a senior who could be a mentor for me.\n\nFiguring out things myself has sort of a double edge, where on one hand, the process of figuring out has sometimes lead to new learning endeavours while sometimes I'm just left wondering: Is this really the optimal solution? \n\nSo, I’m hoping to get some advice from this community:\n\n# 1. Mentorship & Guidance\n\n* How did you find a mentor (internally or externally)?\n* Are there communities (Slack, Discord, forums) you’d recommend joining?\n* Are there folks in the data space worth following (blogs, LinkedIn, GitHub, etc.)? I currenlty follow Zack wilson and a few others who can be found by surface level research into the space.\n\n# 2. Conferences & Meetups\n\n* Have any of you found value in attending data engineering or analytics conferences?\n* Any recommendations for events that are beginner-friendly and actually useful for someone in a role like mine?\n\n# 3. Improving as a Solo Data Engineer\n\n* Any learning paths or courses that helped you understand more than just what works but also *w*hy?",
        "score": 22,
        "upvote_ratio": 0.83,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kr4jcg/earlycareer_data_engineer/",
        "created_utc": 1747746774.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktkqj6",
        "title": "Modular Data Pipeline (Microservices + Delta Lake) for Live ETAs – Architecture Review of La Poste’s Case",
        "author": "Typical-Scene-5794",
        "subreddit": "dataengineering",
        "content": "In a recent blog, the team at La Poste (France’s postal service) shared how they redesigned their real-time package tracking pipeline from a monolithic app into a modular microservice architecture. The goal was to provide more accurate ETA predictions for deliveries while making the system easier to scale and monitor in production. They describe splitting the pipeline into multiple decoupled stages (using Pathway – an open-source streaming ETL engine) connected via Delta Lake storage and Kafka. This revamped design not only improved performance and reliability, but also significantly cut costs (the blog cites a 50% reduction in total cost of ownership for the IoT data platform and a projected 16% drop in fleet capital expenditures, which is huge). Below I’ll outline the architecture, key decisions, and trade-offs from the blog in an engineering-focused way.\n\nFrom Monolith to Microservices: Originally, a single streaming pipeline handled everything: data cleansing, ETA calculation, and maybe some basic monitoring. That monolith worked for a prototype, but it became hard to extend – for instance, adding continuous evaluation of prediction accuracy or integrating new models would make the one pipeline much more complex and fragile. The team decided to decouple the concerns into separate pipelines (microservices) that communicate through shared data layers. This is analogous to breaking a big application into microservices – here each Pathway pipeline is a lightweight service focused on one part of the workflow.\n\nThey ended up with four main pipeline components:\n\n1. Data Acquisition & Cleaning: Ingest raw telemetry from delivery vehicles and clean it. IoT devices on trucks emit location updates (latitude/longitude, speed, timestamp, etc.) to a Kafka topic. This first pipeline reads from Kafka, applies a schema, and filters out bad data (e.g. GPS (0,0) errors, duplicates, out-of-order events). The cleaned, normalized data is then written to a Delta Lake table as the “prepared data” store. Delta Lake was used here to persist the stream in a queryable table format (every incoming event gets appended as a new row). This makes the downstream processing simpler and the intermediate data reusable. (Notably, they chose Delta Lake over something like chaining another Kafka topic for the clean data – a design choice we’ll discuss more below.)\n\n2. ETA Prediction: This stage consumes two things – the cleaned vehicle data (from that Delta table) and incoming ETA requests. ETA request events come as another stream (Kafka topic) containing a delivery request ID, the target destination, the assigned vehicle ID, and a timestamp. The topic is partitioned by vehicle ID so all requests for the same vehicle are ordered (ensuring the sequence of stops is handled correctly). The Pathway pipeline joins each request with the latest state of the corresponding vehicle from the clean data, then computes an estimated arrival time. The blog kept the prediction logic straightforward (e.g., basically using current location to estimate travel time to the destination), since the focus was architecture. The important part is that this service is stateless with respect to historical data – it relies on the up-to-date clean data table as its source of truth for vehicle positions. Once an ETA is computed for a request, the result is written out to two places: a Kafka topic (so that whoever requested the ETA gets the answer in real-time) and another Delta Lake table storing all predictions (for later analysis).\n\n3. Ground Truth Extraction: This pipeline waits for deliveries to actually be completed, so they can record the real arrival times (“ground truth” data for model evaluation). It reads the same prepared data table (vehicle telemetry) and the requests stream/table to know what destinations were expected. The logic here tracks each vehicle’s journey and identifies when a vehicle has reached the delivery location for a request (and has no further pending deliveries for that request). When it detects a completed delivery, it logs the actual time of arrival for that specific order. Each of these actual arrival records is written to a ground-truth Delta Lake table. This component runs asynchronously from the prediction one – an order might be delivered 30 minutes after the prediction was made, but by isolating this in its own service, the system can handle that naturally without slowing down predictions. Essentially, the ground truth job is doing a continuous join between live positions and the list of active delivery requests, looking for matches to signal completion.\n\n4. Evaluation & Monitoring: The final stage joins the predictions with their corresponding ground truths to measure accuracy. It reads from the predictions Delta table and the ground truths table, linking records by request ID (each record pairs a predicted arrival time with the actual arrival time for a delivery). The pipeline then computes error metrics. For example, it can calculate the difference in minutes between predicted and actual delivery time for each order. These per-delivery error records are extremely useful for analytics – the blog mentions calculating overall Mean Absolute Error (MAE) and also segmenting error by how far in advance the prediction was made (predictions made closer to the delivery tend to be more accurate). Rather than hard-coding any specific aggregation in the pipeline, the approach was to output the raw prediction-vs-actual data into a PostgreSQL database (or even just a CSV file), and then use external tools or dashboards for deeper analysis and alerting. By doing so, they keep the streaming pipeline focused and let data analysts iterate on metrics in a familiar environment. (One cool extension: because everything is modular, they can add an alerting microservice that monitors this error data stream in real-time – e.g. trigger a Slack alert if error spikes – without impacting the other components.)\n\nKey Architectural Decisions:\n\nDecoupling via Delta Lake Tables: A standout decision was to connect these microservice pipelines using Delta Lake as the intermediate store. Instead of passing intermediate data via queues or Kafka topics, each stage writes its output to a durable table that the next stage reads. For example, the clean telemetry is a Delta table that both the Prediction and Ground Truth services read from. This has several benefits in a data engineering context:\n\nData Reusability & Observability: Because intermediate results are in tables, it’s easy to query or snapshot them at any time. If predictions look off, engineers can examine the cleaned data table to trace back anomalies. In a pure streaming hand-off (e.g. Kafka topic chaining), debugging would be harder – you’d have to attach consumers or replay logs to inspect events. Here, Delta gives a persistent history you can query with Spark/Pandas, etc.\n\nMultiple Consumers: Many pipelines can read the same prepared dataset in parallel. The La Poste use case leveraged this to have two different processes (prediction and ground truth) independently consuming the prepared\\_data table. Kafka could also multicast to multiple consumers, but those consumers would each need to handle data cleaning or maintaining state. With the Delta approach, the heavy lifting (cleaning) is done once and all consumers get a consistent view of the results.\n\nFailure Recovery: If one pipeline crashes or needs to be redeployed, the downstream pipelines don’t lose data – the intermediate state is stored in Delta. They can simply pick up from the last processed record by reading the table. There’s less worry about Kafka retention or exactly-once delivery mechanics between services, since the data lake serves as a reliable buffer and single source of truth.\n\nOf course, there are trade-offs. Writing to a data lake introduces some latency (micro-batch writes of files) compared to an in-memory event stream. It also costs storage – effectively duplicating data that in a pure streaming design might be transient. The blog specifically calls out the issue of many small files: frequent Delta commits (especially for high-volume streams) create lots of tiny parquet files and transaction log entries, which can degrade read performance over time. The team mitigated this by partitioning the Delta tables (e.g. by date) and periodically compacting small files. Partitioning by a day or similar key means new data accumulates in a separate folder each day, which keeps the number of files per partition manageable and makes it easier to run vacuum/compaction on older partitions. With these maintenance steps (partition + compact + clean old metadata), they report that the Delta-based approach remains efficient even for continuous, long-running pipelines. It’s a case of trading some complexity in storage management for a lot of flexibility in pipeline design.\n\nSchema Management & Versioning: With data passing through tables, keeping schemas in sync became an important consideration. If the schema of the cleaned data table changes (say they add a new column from the IoT feed), then the downstream Pathway jobs reading that table must be updated to expect that schema. The blog notes this as an increased maintenance overhead compared to a monolith. They likely addressed it by versioning their data schemas and coordinating deployments – e.g. update the writing pipeline to add new columns in parallel with updating readers, or use schema evolution features of Delta Lake. On the plus side, using Delta Lake made some aspects of schema handling easier: Pathway automatically stores each table’s schema in the Delta log, so when a job reads the table it can fetch the schema and apply it without manual definitions. This reduces code duplication and errors. Still, any intentional schema changes require careful planning across multiple services. This is just the nature of microservices – you gain modularity at the cost of more coordination.\n\nIndependent Scaling & Fault Isolation: A big reason for the microservice approach was scalability and reliability in production. Each pipeline can be scaled horizontally on its own. For example, if ETA requests volume spikes, they could scale out just the Prediction service (Pathway supports parallel processing within a job as well, but logically separating it is an extra layer of scalability). Meanwhile, the data cleaning service might be CPU-bound and need its own scaling considerations, separate from the evaluation service which might be lighter. In a monolithic pipeline, you’d have to scale the whole thing as one unit, even if only one part is the bottleneck. By splitting them, only the hot spots get more resources. Likewise, if the evaluation pipeline fails due to, say, a bug or out-of-memory error, it doesn’t bring down the ingestion or prediction pipelines – they keep running and data accumulates in the tables. The ops team can fix and redeploy the evaluation job and catch up on the stored data. This isolation is crucial for a production system where you want to minimize downtime and avoid one component’s failure cascading into an outage of the whole feature.\n\nPipeline Extensibility: The modular design also opened up new capabilities with minimal effort. The case study highlights a few:\n\nThey can easily plug in an anomaly detection/alerting service that reads the continuous error metrics (from the evaluation stage) and sends notifications if something goes wrong (e.g., if predictions suddenly become very inaccurate, indicating a possible model issue or data drift).\n\nThey can do offline model retraining or improvement by leveraging the historical data collected. Since they’re storing all cleaned inputs and outcomes, they have a high-quality dataset to train next-generation models. The blog mentions using the accumulated Delta tables of inputs and ground truths to experiment with improved prediction algorithms offline.\n\nThey can perform A/B testing of prediction strategies by running two prediction pipelines in parallel. For example, run the current model on half the vehicles and a new model on a subset of vehicles (perhaps by partitioning the Kafka requests by transport\\_unit\\_id hash). Because the infrastructure supports multiple pipelines reading the same input and writing results, this is straightforward – you just add another Pathway service, maybe writing its predictions to a different topic/table, and compare the evaluation metrics in the end. In a monolithic system, A/B testing could be really cumbersome or require building that logic into the single pipeline.\n\n  \nOperational Insights: On the operations side, the team did have to invest in coordinated deployments and monitoring for multiple services. There are four Pathway processes to deploy (plus Kafka, plus maybe the Delta Lake storage on S3 or HDFS, and the Postgres DB for results). Automated deploy pipelines and containerization likely help here (the blog doesn’t go deep into it, but it’s implied that there’s added complexity). Monitoring needs to cover each component’s health as well as end-to-end latency. The payoff is that each component is simpler by itself and can be updated or rolled back independently. For instance, deploying a new model in the Prediction service doesn’t require touching the ingestion or evaluation code at all – reducing risk. The scaling benefits were already mentioned: Pathway allows configuring parallelism for each pipeline, and because of the microservice separation, they only scale the parts that need it. This kind of targeted scaling can be more cost-efficient.\n\nThe La Poste case is a compelling example of applying software engineering best practices (modularity, fault isolation, clear data contracts) to a streaming data pipeline. It demonstrates how breaking a pipeline into microservices can yield significant improvements in maintainability and extensibility for data engineering workflows. Of course, as the authors caution, this isn’t a silver bullet – one should adopt such complexity only when the benefits (scaling, flexibility, etc.) outweigh the overhead. In their scenario of continuously improving an ETA prediction service, the trade-off made sense and paid off.\n\nI found this architecture interesting, especially the use of Delta Lake as a communication layer between streaming jobs – it’s a hybrid approach that combines real-time processing with durable data lake storage. It raises some great discussion points: e.g., would you have used message queues (Kafka topics) between each stage instead, and how would that compare? How do others handle schema evolution across pipeline stages in production? The post provides a concrete case study to think about these questions. If you want to dive deeper or see code snippets of how Pathway implements these connectors (Kafka read/write, Delta Lake integration, etc.), I recommend checking out the original blog and the Pathway GitHub. Links below. Happy to hear others’ thoughts on this design!",
        "score": 22,
        "upvote_ratio": 0.93,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktkqj6/modular_data_pipeline_microservices_delta_lake/",
        "created_utc": 1748009914.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktc6so",
        "title": "N8n in Data engineering.",
        "author": "Different-Future-447",
        "subreddit": "dataengineering",
        "content": "where exactly does n8n fit into your data engineering stack, if at all?\n\nI’m evaluating it for workflow automation and ETL coordination. Before I commit time to wiring it in, I’d like to know:\n\t•\tIs n8n reliable enough for production-grade pipelines?\n\t•\tAre you using it for full ETL (extract, transform, load) or just as an orchestration and alerting layer?\n\t•\tWhere has it actually added value vs. where has it been a bottleneck?\n\t•\tAny use cases with AI/ML integration like anomaly detection, classification, or intelligent alerting?\n\nNot looking for marketing fluff—just practical feedback on how (or if) it works for serious data workflows.\n\nThanks in advance. Would appreciate any sample flows, gotchas, or success stories.",
        "score": 19,
        "upvote_ratio": 0.79,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktc6so/n8n_in_data_engineering/",
        "created_utc": 1747979562.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksrnzf",
        "title": "Looking for fellow Data Engineers to learn and discuss with (Not a mentorship)",
        "author": "Significant_Corner41",
        "subreddit": "dataengineering",
        "content": "Hi,\nI am a junior DE but have been cursed with a horrible job and management that speak LinkedIn-ology. I have been with this team for over 1.5 years now and I haven’t learned anything useful and cannot learn much colleagues who are offshore and have 2 hour overlap time. \n\nI was hoping to get on this subreddit to meet other DE online and form connections. I have so many ideas to help my work issues but I am not being heard or maybe don’t have enough expertise to present my case/suggestions coherently.\n\nI would love to meet other people and discuss their experiences/life as DE. At least this way get more second hand knowledge. Anyone wants to chat? ",
        "score": 19,
        "upvote_ratio": 0.95,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksrnzf/looking_for_fellow_data_engineers_to_learn_and/",
        "created_utc": 1747922969.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv5bvz",
        "title": "Dealing with the idea that ERP will solve all business problem",
        "author": "ketopraktanjungduren",
        "subreddit": "dataengineering",
        "content": "The company I am working at is implementing their first ERP system. They easily took the \"promise\" that ERP will solve all of their analytics problem and that dashboards are just \"half ERP\".\n\nLater on the implementation process they realized that the ERP cannot process the data by itself and needs third party tools like Power BI and Looker.\n\n  \nDo you have similar experience to me? \n\nHow do you convince business users that ERP is just another source system to every data engineer?",
        "score": 17,
        "upvote_ratio": 0.89,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv5bvz/dealing_with_the_idea_that_erp_will_solve_all/",
        "created_utc": 1748187138.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krxba3",
        "title": "Simplified Airflow 3.0 Docker Compose Setup Walkthrough",
        "author": "DataSling3r",
        "subreddit": "dataengineering",
        "content": "[https://youtu.be/PbSIVDou17Q](https://youtu.be/PbSIVDou17Q)",
        "score": 18,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krxba3/simplified_airflow_30_docker_compose_setup/",
        "created_utc": 1747832656.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krz867",
        "title": "Solid ETL pipeline builder for non-devs?",
        "author": "redvioletgold",
        "subreddit": "dataengineering",
        "content": "I’ve been looking for a no-code or low-code ETL pipeline tool that doesn’t require a dev team to maintain. We have a few data sources (Salesforce, HubSpot, Google Sheets, a few CSVs) and we want to move that into BigQuery for reporting.  \nTried a couple of tools that claimed to be \"non-dev friendly\" but ended up needing SQL for even basic transformations or custom scripting for connectors. Ideally looking for something where:  \n\\- the UI is actually usable by ops/marketing/data teams  \n\\- pre-built connectors that just work  \n\\- some basic transformation options (filters, joins, calculated fields)  \n\\- error handling & scheduling that’s not a nightmare to set up\n\nAnyone found a platform that ticks these boxes?",
        "score": 17,
        "upvote_ratio": 0.84,
        "num_comments": 59,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krz867/solid_etl_pipeline_builder_for_nondevs/",
        "created_utc": 1747837717.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kro76m",
        "title": "How would you tame 15 years of unstructured contracting files (drawings, photos & invoices) into a searchable, future-proof library?",
        "author": "morhope",
        "subreddit": "dataengineering",
        "content": "First time poster long time lurker.  Inherited ~15 years of digital chaos:\n\t•\t2 TB of PDFs (plan sets, specs, RFIs)\n\t•\t~ job-site photos (mixed EXIF, no naming rules)\n\t•\tFinancial docs (QuickBooks exports, scanned invoices, lien waivers)\n\nI’ve helped developed a better way forward yet don’t want to miss an opportunity to fix what’s here or at least learn from it: everything created from 2025 onward must follow a single taxonomy and stay searchable. I have:\n\t•\tWindows 11 & Microsoft 365 E5 (so SharePoint, Syntex, Purview are on the table)\n\t•\tBudget & patience to self-host FOSS if that’s cleaner (Alfresco, Mayan EDMS, etc.)\n\t•\tBasic Python chops for scripting bulk imports / Tika metadata extraction\n\nLooking for advice on:\n\t1.\tPractical taxonomy schemes for a business GC (project, phase, CSI division, doc-type…).\n\t2.\tWar-stories on SharePoint + Syntex vs. self-hosted EDMS for 1–3 TB archives.\n\t3.\tGotchas when bulk OCR’ing 10k scanned drawings or mixing vector PDFs with raster scans.\n\t4.\tTools that make ongoing discipline idiot-proof drop folders, retention rules, dupe detection.\n\nAny “wish I’d known this first” lessons appreciated. Thanks!",
        "score": 18,
        "upvote_ratio": 0.91,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kro76m/how_would_you_tame_15_years_of_unstructured/",
        "created_utc": 1747798293.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kr6009",
        "title": "Passing from a empty period, with low creativity as a DE",
        "author": "HMZ_PBI",
        "subreddit": "dataengineering",
        "content": "In the last few weeks i am low at creativity, i am no learning anything or doing enough efforts, i feel emptiness at my job rn as a DE, i am not capable of completing tasks on schedule, or solving problems by myself instead everytime someone needs to step in and give me a hand or solve it while i am watching like some idiot\n\nBefore this period, i was super creative, solving crazy problems, fast on schedule, and required minimum help from my collegues, and very motivated\n\nIf anyone passed from this situation can share his experience",
        "score": 18,
        "upvote_ratio": 0.75,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kr6009/passing_from_a_empty_period_with_low_creativity/",
        "created_utc": 1747750677.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kut4ba",
        "title": "Building a Full-Fledged Data Engineering Learning Repo from Scratch Feedback Wanted!",
        "author": "Alex_0004",
        "subreddit": "dataengineering",
        "content": "Hey everyone,\n\nI'm currently a **Data Engineering intern + final-year CS student** with a strong passion for building real-world DE systems.\n\nOver the past few weeks, I’ve been diving deep into ETL, orchestration, cloud platforms (Azure, Databricks, Snowflake), and data architecture. Inspired by some great Substacks and events like **OpenXData**, I’m thinking of starting a **public learning repository** focused on :\n\nI’ve structured it into **three project levels** each one more advanced and realistic than the last:\n\nBasic -> 2 projects -> Python, SQL, Airflow, PostgreSQL, basic ETL| \n\nIntermediate -> 2 projects -> Azure Data Factory, Databricks (batch), Snowflake, dbt\n\nAdvanced -> 2 projects -> Streaming pipelines, Kafka + PySpark, Delta Lake, CI/CD, monitoring\n\n* Not just dashboards or small-scale analysis\n* Projects designed to **scale from 100 rows → 1 billion rows**\n* Focus on **workflow orchestration**, **data modeling**, and **system design**\n* Learning-focused but aligned with **production-grade design principles**\n* Built to **learn, practice, and showcase** for real interviews & job prep\n\nFeedback on project ideas, structure, or tech stack, Suggestions for **realistic use cases** to build, Tips from experienced engineers who’ve built at scale, Anyone who wants to follow or contribute you're welcome!\n\nWould love any thoughts you all have thanks for reading 🙏",
        "score": 16,
        "upvote_ratio": 0.81,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kut4ba/building_a_fullfledged_data_engineering_learning/",
        "created_utc": 1748143807.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kt6ndz",
        "title": "How does your team decide who gets access to what data?",
        "author": "exact-approximate",
        "subreddit": "dataengineering",
        "content": "This is a question I've wondered for a while - simply put, given a data warehouse several facts, dimensions etc. \n\nHow does your company decide who gets access to what data? \n\nIf someone from Finance requests data which is typically used for Marketing - just because they say they need it. \n\nWhat are your processes like? How do you decide? \n\n\nAt least to me it seems completely arbitrary with my boss just deciding depending on how much pressure he has for a project.",
        "score": 18,
        "upvote_ratio": 0.95,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kt6ndz/how_does_your_team_decide_who_gets_access_to_what/",
        "created_utc": 1747960932.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksukyo",
        "title": "Don’t Let Apache Iceberg Sink Your Analytics: Practical Limitations in 2025",
        "author": "jakozaur",
        "subreddit": "dataengineering",
        "content": "",
        "score": 15,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://quesma.com/blog-detail/apache-iceberg-practical-limitations-2025",
        "created_utc": 1747930095.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv5cph",
        "title": "Reducing Peak Memory Usage in Trino: A SQL-First Approach",
        "author": "sanji-vs",
        "subreddit": "dataengineering",
        "content": "Hi all, full disclosure I’m looking for feedback on my first Medium post: https://medium.com/@shuu1203/reducing-peak-memory-usage-in-trino-a-sql-first-approach-fc687f07d617\n\nI’m fairly new to Data Engineering (or actually, Analytics Engineering) (began in January with moving to a new project) and was wondering if I could write something up I found interesting to work on. I’m unsure if the nature of the post is even something of worthy substance to anyone else.\n\nI appreciate any honest feedback.",
        "score": 11,
        "upvote_ratio": 0.78,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv5cph/reducing_peak_memory_usage_in_trino_a_sqlfirst/",
        "created_utc": 1748187199.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ku636f",
        "title": "How We Solved the Only 10 Jobs at a Time Problem in Databricks – My First Medium Blog!",
        "author": "javabug78",
        "subreddit": "dataengineering",
        "content": "really appreciate your support and feedback!\n\nIn my current project as a Data Engineer, I faced a very real and tricky challenge — we had to schedule and run 50–100 Databricks jobs, but our cluster could only handle 10 jobs in parallel.\n\nMany people (even experienced ones) confuse the max_concurrent_runs setting in Databricks. So I shared:\n\nWhat it really means\n\nOur first approach using Task dependencies (and what didn’t work well)\n\nAnd finally…\n\nA smarter solution using Python and concurrency to run 100 jobs, 10 at a time\n\n\nThe blog includes real use-case, mistakes we made, and even Python code to implement the solution!\n\nIf you're working with Databricks, or just curious about parallelism, Python concurrency, or running jar files efficiently, this one is for you.\nWould love your feedback, reshares, or even a simple like to reach more learners!\n\nLet’s grow together, one real-world solution at a time",
        "score": 12,
        "upvote_ratio": 0.71,
        "num_comments": 2,
        "url": "https://medium.com/@adarshyadav482/how-to-achieve-parallelism-in-databricks-jobs-tasks-hi-all-d847b4d5e84b",
        "created_utc": 1748072388.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ks5jkw",
        "title": "Those of you who interviewed/working at big tech/finance, how did you prepare for it? Need advice pls.",
        "author": "potatotacosandwich",
        "subreddit": "dataengineering",
        "content": "title. Im a data analyst  with \\~3yoe currently work at a bank. lets say i have this golden time period where my work is low stress/pressure and I can put time into preparing for interviews. My goal is to get into FAANG/finance/similar companies in data science/engg roles. How do I prepare for interviews? Did you follow a specific structure for certain companies? How/what did you allocate time into between analytics/sql/python, ML, GenAI(if at all) or other stuff and how did you prepare? Im good w sql, currently practicing ML and GenAI projects on python. I have very basic understanding of data engg from self projects. What metrics you use to determine where you stand?\n\nI get the job market is shit but Im not ready anyway. My aim is to start interviewing by fall, say august/september. I'd highly appreciate any help i can get. thx. ",
        "score": 11,
        "upvote_ratio": 0.71,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ks5jkw/those_of_you_who_interviewedworking_at_big/",
        "created_utc": 1747852846.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kukx4f",
        "title": "MongoDB vs Cassandra vs ScyllaDB for highly concurrent chat application",
        "author": "Attitudemonger",
        "subreddit": "dataengineering",
        "content": "We are working on a chat application for enterprise (imagine Google Workspace chat or Slack kinda application - for desktop and mobile). Of course we are just getting started, so one might suggest choosing a barebone DB and some basic tools to launch the app, but anticipating traffic, we want to distill the best knowledge available out there and choose the best stack to build our product from the beginning.\n\nFor our chat application, where all typical user behaviors are there - messages, spaces, \"last seen\" or \"active\" statuses, message notifications, read receipts, etc. we need to choose a database to store all our chats. We also want to enable chat searches, and since search will inevitably lead to random chats, we want that perf to be consistently excellent.\n\nWe are planning to use Django (with channels) as our backend. What database is recommended to use with Django to persist the messages? I read that Discord used to use Cassandra, but then it started acting up due to garbage collection, so they switched rto Scylla, and they are very happy with trillions of messages on it. Is ScyllDB a good candidate for our purpose to use with Django? Do these two work together well? Can MongoDB do it (my preferred choice, but I read that it starts acting up with high number of reads or writes at the same time - which would be a basic use case for enterprise chat scenario)?",
        "score": 9,
        "upvote_ratio": 0.76,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kukx4f/mongodb_vs_cassandra_vs_scylladb_for_highly/",
        "created_utc": 1748118208.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krxmln",
        "title": "Code coverage in Data Engineering",
        "author": "OkCream4978",
        "subreddit": "dataengineering",
        "content": "I'm working in a project where we ingest data from multiple sources, stage them as parquet files, and then use Spark to transform the data.\n\nWe do two types of testing: black box testing and manual QA. \n\nFor black box testing, we just have an input with all the data quality scenarios that we encountered so far, call the transformation function and compare the output to the expected results.\n\nNow, the principal engineer is saying that we should have at least 90% code coverage. Our coverage is sitting at 62% because we're just basically calling the master function to call all the other private methods associated with the transformation (deduplication, casting, etc.).\n\nWe pushed back and said that the core transformation and business logic is already being captured by the tests that we have and that our effort will be best spent on refining our current tests (introduce failing tests, edge cases, etc.) instead of trying to get 90% code coverage.\n\nDid anyone experienced this before? \n\n",
        "score": 11,
        "upvote_ratio": 0.92,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krxmln/code_coverage_in_data_engineering/",
        "created_utc": 1747833529.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kuc0iu",
        "title": "Personal project: handle SFTP uploads and get clean API-ready data",
        "author": "Neutronpr0",
        "subreddit": "dataengineering",
        "content": "https://preview.redd.it/d3i71nv0kq2f1.jpg?width=3584&format=pjpg&auto=webp&s=25f84c3295ddb2b3ae06de97a0f28697c31073bd\n\nI built a tool called SftpSync that lets you spin up an SFTP server with a dedicated user in one click.  \nYou can set how uploaded files should be processed, transformed, and validated — and then get the final result via API or webhook.\n\nMain features:\n\n* SFTP server with user access\n* File transformation and mapping\n* Schema validation\n* Webhook when processing is done\n* Clean output available via API\n\nWould love to hear what you think — do you see value in this? Would you try it?\n\n[sftpsync.io](http://sftpsync.io)",
        "score": 8,
        "upvote_ratio": 0.73,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuc0iu/personal_project_handle_sftp_uploads_and_get/",
        "created_utc": 1748094421.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kut9e6",
        "title": "Ideas on how to handle deeply nested json files",
        "author": "BlueAcronis",
        "subreddit": "dataengineering",
        "content": "My application is distributed across several AWS accounts, and it writes logs to Amazon CloudWatch Logs in the `.json.gz` format. These logs are streamed using a subscription filter to a centralized Kinesis Data Stream, which is then connected to a Kinesis Data Firehose. The Firehose buffers, compresses, and delivers the logs to Amazon S3 following the flow:  \n**CloudWatch Logs → Kinesis Data Stream → Kinesis Data Firehose → S3**\n\nI’m currently testing some scenarios and encountering challenges when trying to write this data directly to the AWS Glue Data Catalog. The difficulty arises because the JSON files are deeply nested (up to four levels deep) as shown in the example below.\n\n  \nI would like to hear suggestions on how to handle this. I have tested Lambda Transformations but I am getting errors since my json is 12x longer than that. I wonder if Kinesis Firehose can handle that without any coding. I researched but it appears not to handle that nested level.\n\n    {\n      \"order_id\": \"ORD-2024-001234\",\n      \"order_status\": \"completed\",\n      \"customer\": {\n        \"customer_id\": \"CUST-789456\",\n        \"personal_info\": {\n          \"first_name\": \"John\",\n          \"last_name\": \"Doe\",\n          \"phone\": {\n            \"country_code\": \"+1\",\n            \"number\": \"555-0123\"\n          }\n        }\n      }\n    }\n    ",
        "score": 9,
        "upvote_ratio": 0.91,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kut9e6/ideas_on_how_to_handle_deeply_nested_json_files/",
        "created_utc": 1748144303.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktr6u3",
        "title": "A no-code tool to explore & clean datasets",
        "author": "enzineer-reddit",
        "subreddit": "dataengineering",
        "content": "Hi guys,\n\nI’ve built a small tool called [**DataPrep**](https://data-prep.app) that lets you visually **explore and clean datasets** in your browser without any coding requirement.\n\nYou can try the live demo here (no signup required):  \n [demo.data-prep.app](https://demo.data-prep.app)\n\n  \nI work with data pipelines and I often needed a quick way to inspect raw files, test cleaning steps, and get some insights into my data without jumping into Python or SQL and for that I started working on **DataPrep**.  \nThe app is in its **MVP / Alpha** stage.\n\nIt'd be really helpful if you guys can try it out and provide some feedback on some topics like :\n\n* Would this save time in your workflows ?\n* What features would make it more useful ?\n* Any integrations or export options that should be added to it ?\n* How can the UI / UX be improved to make it more intuitive ?\n* Bugs encountered\n\nThanks in advance for giving it a look. Happy to answer any questions regarding this.",
        "score": 9,
        "upvote_ratio": 0.81,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktr6u3/a_nocode_tool_to_explore_clean_datasets/",
        "created_utc": 1748025724.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ks748e",
        "title": "Does anyone know any good blogs for dbt?",
        "author": "Wonderful_Self_2285",
        "subreddit": "dataengineering",
        "content": "Hi.\n\nDo you guys know blogs or someone who posts / shares new ideas regarding dbt models? \n\nI know dbt community is great, but I'm looking more for something with tricks, or amazing macros to make our lives easier, or other out-of-the-box ideas. \n\n",
        "score": 11,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ks748e/does_anyone_know_any_good_blogs_for_dbt/",
        "created_utc": 1747856638.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kr78ax",
        "title": "Conduit v0.13.5 with a new Ollama processor",
        "author": "raulb_",
        "subreddit": "dataengineering",
        "content": "* [Add a new Ollama Processor as built-in processor](https://github.com/ConduitIO/conduit/pull/2227).\n* [Add the ability to easily configure Processor Plugins when building a custom Conduit](https://github.com/ConduitIO/conduit/pull/2260). Check out the [documentation page for more information](https://conduit.io/docs/using/processors/additional-built-in-plugins). Thanks [u/nickchomey](https://github.com/nickchomey) for the contribution!\n* [New configuration option `preview.pipeline-arch-v2-disable-metrics` to disable metrics for the new pipeline architecture](https://github.com/ConduitIO/conduit/pull/2271).\n* [Fixes a bug where the ENV variable `CONDUIT_CONFIG_PATH` didn't seem to work propertly](https://github.com/ConduitIO/ecdysis/issues/25).\n* [Fixes a bug when using the default processor middleware](https://github.com/ConduitIO/conduit-processor-sdk/issues/111).",
        "score": 8,
        "upvote_ratio": 0.73,
        "num_comments": 0,
        "url": "https://conduit.io/changelog/2025-05-20-conduit-0-13-5-release",
        "created_utc": 1747753683.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kr4wtk",
        "title": "A Distributed System from scratch, with Scala 3 - Part 3: Job submission, worker scaling, and leader election & consensus with Raft",
        "author": "otter-in-a-suit",
        "subreddit": "dataengineering",
        "content": "",
        "score": 8,
        "upvote_ratio": 0.76,
        "num_comments": 6,
        "url": "https://chollinger.com/blog/2025/05/a-distributed-system-from-scratch-with-scala-3-part-3-job-submission-worker-scaling-and-leader-election-consensus-with-raft/",
        "created_utc": 1747747804.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kr1azg",
        "title": "How to build an API on top of a dbt model?",
        "author": "bebmfec",
        "subreddit": "dataengineering",
        "content": "I have quite a complex SQL query within DBT which I have been tasked to build an API 'on top of'.\n\nMore specifically, I want to create an API that allows users to send input data (e.g., JSON with column values), and under the hood, it runs my dbt model using that input and returns the transformed output as defined by the model.\n\nFor example, suppose I have a dbt model called `my_model` (in reality the model is a lot more complex):\n\n    select \n        {{ macro_1(\"col_1\") }} as out_col_1,\n        {{ macro_2(\"col_1\", \"col_2\") }} as out_col_2\n    from \n        {{ ref('input_model_or_data') }}\n    \n\nNormally, `ref('input_model_or_data')` would resolve to another dbt model, but I’ve seen in dbt unit tests that you can inject synthetic data into that `ref()`, like this:\n\n    - name: test_my_model\n      model: my_model\n      given:\n        - input: ref('input_model_or_data')\n          rows:\n            - {col_1: 'val_1', col_2: 1}\n      expect:\n        rows:\n          - {out_col_1: \"out_val_1\", out_col_2: \"out_val_2\"}\n    \n\nThis allows the test to override the input source. I’d like to do something similar via an API: the user sends input like `{col_1: 'val_1', col_2: 1}` to an endpoint, and the API returns the output of the dbt model (e.g., `{out_col_1: \"out_val_1\", out_col_2: \"out_val_2\"}`), having used that input as the data behind `ref('input_model_or_data')`.\n\nWhat’s the recommended way to do something like this?",
        "score": 9,
        "upvote_ratio": 0.91,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kr1azg/how_to_build_an_api_on_top_of_a_dbt_model/",
        "created_utc": 1747736149.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kulfzw",
        "title": "One big project that you interate on as you learn more or many smaller projects that will quickly go out of date as you learn more?",
        "author": "godz_ares",
        "subreddit": "dataengineering",
        "content": "Hey all, \n\nI am working on a project right now, it was supossed to be culmination of everything I learnt so far. Applying stuff I learnt in courses \n\nBut as I've gone through the project I've gone through writing the code but I keep on bumping into things that'll improve my project e.g. Threading, Spark, Great Expectations, maybe FastAPI for a front end? \n\nNot to mention that in order to use a tool you intend to you have to learn something else, which means learning another thing, which means watching a video and down the rabbit hole you go. An example for me was having to learn Docker in order get Airflow working properly. \n\nI plan on finishing the project but adding on bits and pieces as I go on. However this will mean I won't be applying my skills on a diverse range of use cases. \n\nMy goal is to kick-start a DE career in the distant future. \n\nSo I was wondering what is the best approach? Iteration or finalisation?",
        "score": 7,
        "upvote_ratio": 0.9,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kulfzw/one_big_project_that_you_interate_on_as_you_learn/",
        "created_utc": 1748119664.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kuabfw",
        "title": "Which MSc would you recommend?",
        "author": "Different-Earth4080",
        "subreddit": "dataengineering",
        "content": "Hi All.  I am looking to make the shift towards a career as a Data Engineer.\n\nTo help me with this, I am looking to do a Masters Degree.  \n\nOut of the following, which MSc do you think would give me the best shot at finding a Data Engineering role?\n\nOption 1 - [https://www.napier.ac.uk/courses/msc-data-engineering-postgraduate-online-learning](https://www.napier.ac.uk/courses/msc-data-engineering-postgraduate-online-learning)  \nOption 2 - [https://www.stir.ac.uk/courses/pg-taught/big-data-online/?utm\\_source=chatgpt.com#panel\\_1\\_2](https://www.stir.ac.uk/courses/pg-taught/big-data-online/?utm_source=chatgpt.com#panel_1_2)\n\nThanks,  \nMatt",
        "score": 8,
        "upvote_ratio": 0.73,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuabfw/which_msc_would_you_recommend/",
        "created_utc": 1748089229.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv5znf",
        "title": "Development using the company tech stack vs CV-driven development",
        "author": "oscarmch",
        "subreddit": "dataengineering",
        "content": "Hi guys.\n\nI just came out from an int. with a software development company for a Data Engineering position.\n\nI received feedback (which surprised me tbh) that said that \"I must have experience with Airflow, Spark, Kafka\" and so on \"because it's what the market is expecting you to know\".\n\nMy question is, how do you handle getting experience with these tool when Business doesn't need to? More often than not, companies don't need to deploy an Airflow server for Orchestration or a Kafka one for Streaming because they don't need to do Streaming, or even the Orchestration could be done by using Glue or ADF (for example). I see many post regarding poorly architectured solutions that rely on pyspark when the processing could've been done using pandas, and so on.\n\nSo, how do maintain relevant in a Business that apparently needs those tools, when in reality, a large part of companies doesn't need them at all, or even the tech stack is not in favor of using those tools?\n\nThanks.",
        "score": 9,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv5znf/development_using_the_company_tech_stack_vs/",
        "created_utc": 1748188852.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv54t6",
        "title": "Career Transition Advice: From SAP Developer (13 YOE) to Amazon Data Engineer – Need Guidance",
        "author": "BlacksmithDowntown73",
        "subreddit": "dataengineering",
        "content": "I’m currently working as an SAP developer with 13 years of experience, mostly focused on ABAP, SAP EWM, and backend logic. I’m now planning a career transition into data engineering, and my target is a Data Engineer role at Amazon.\n\nI already have strong experience in SQL and database design, and I’ve worked with complex data flows in enterprise environments. I’m planning to take a Data Engineering Bootcamp on Coursera to build a solid foundation in modern tools and frameworks.\n\nBefore I go all in, I’d love some advice:\n\t•\tWhich specific skills or tools should I focus on to break into a DE role at Amazon?\n\t•\tAre there any must-have certifications or project ideas that can help me stand out?\n\t•\tHow much weight does my SAP experience carry when applying to cloud data roles?\n\t•\tAny recommendations for open-source projects or hands-on practice platforms?\n\nWould appreciate any input from folks who made similar transitions or are working in the DE space at big tech.\n\nThanks in advance!\n",
        "score": 9,
        "upvote_ratio": 0.84,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv54t6/career_transition_advice_from_sap_developer_13/",
        "created_utc": 1748186628.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksu7nd",
        "title": "Best practices for exporting large datasets (30M+ records) from DBMS to S3 using python?",
        "author": "VariousReading3349",
        "subreddit": "dataengineering",
        "content": "I'm currently working on a task where I need to extract a large dataset—around 30 million records—from a SQL Server table and upload it to an S3 bucket. My current approach involves reading the data in batches, but even with batching, the process takes an extremely long time and often ends up being interrupted or stopped manually.\n\nI'm wondering how others handle similar large-scale data export operations. I'd really appreciate any advice, especially from those who’ve dealt with similar data volumes. Thanks in advance!",
        "score": 8,
        "upvote_ratio": 0.79,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksu7nd/best_practices_for_exporting_large_datasets_30m/",
        "created_utc": 1747929225.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kr3wb2",
        "title": "Reverse Sampling: Rethinking How We Test Data Pipelines",
        "author": "growth_man",
        "subreddit": "dataengineering",
        "content": "",
        "score": 6,
        "upvote_ratio": 0.76,
        "num_comments": 0,
        "url": "https://moderndata101.substack.com/p/reverse-sampling-rethinking-data-pipelines",
        "created_utc": 1747744932.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kupvm8",
        "title": "Next steps for portfolio project?",
        "author": "notgrassnotgas",
        "subreddit": "dataengineering",
        "content": "Hello everyone! I am an early career SWE (2.5 YoE) trying to land an early or mid-level data engineering role in a tech hub. I have a Python project that pulls dog listings from one of my local animal shelters daily, cleans the data, and then writes to an Azure PostgreSQL database. I also wrote some APIs for the db to pull schema data, active/recently retired listings, etc. I'm at an impasse with what to do next. I am considering three paths:\n\n1. Build a frontend and containerize. Frontend would consist of a Django/Flask interface that shows active dog listings and/or links to a Tableau dashboard that displays data on old listings of dogs who have since left the shelter.\n\n2. Refactor my code with PySpark. Right now I'm storing data in basic Pandas dataframes so that I can clean them and push them to a single Azure PostgreSQL node. It's a fairly small animal shelter, so I'm only handling up to 80-100 records a day, but refactoring would at least prove Spark skills.\n\n3. Scale up and include more shelters (would probably follow #2). Right now, I'm only pulling from a single shelter that only has up to ~100 dogs at a time. I could try to scale up and include listings from all animal shelters within a certain distance from me. Only potential downside is increase in cloud budget if I have to set up multiple servers for cloud computing/db storage.\n\nWhich of these paths should I prioritize for? Open to suggestions, critiques of existing infrastructure, etc.",
        "score": 7,
        "upvote_ratio": 0.83,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kupvm8/next_steps_for_portfolio_project/",
        "created_utc": 1748132744.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktuzlu",
        "title": "Is DE cyclical?",
        "author": "serverlessmom",
        "subreddit": "dataengineering",
        "content": "As people complain about visual tools removing Data Engineering jobs, I'm wondering if you agree that there are cycles to the industry:\n\n1 - we need someone to organize and control access (e.g. DBAs)\n2 - we're losing velocity, fire the data people and let people make their own integrations/tables/schemas\n3 - we just had another outage, we're not scaling well, we need expert advice\n4 - lets create a team to enable everyone to use the data stores efficiently and correctly\n5 - but now there are great tools to handle that automatically, do we really need this whole team?\n\nI've seen at least two phases of this, first with tools like SSIS, and now with all these generative tools for writing integrations and queries.",
        "score": 6,
        "upvote_ratio": 0.76,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktuzlu/is_de_cyclical/",
        "created_utc": 1748035406.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kttnvm",
        "title": "How valuable do you guys find structured learning vs learning/improving on the job?",
        "author": "Reddit_Account_C-137",
        "subreddit": "dataengineering",
        "content": "I am a mechanical engineer slowly converted into an analytics/data engineer. I'm only around 1.5 years into data engineering and 3 years into working closely with data.\n\nMy team primarily works almost exclusively in Databricks, ADF, and Power BI. I've taken a variety of Databricks courses and I recently finished reading Fundamental of Data Engineering but I feel like neither of those have been quite as valuable as I would have hoped. Yes I get small nuggets of info that I didn't know here and there but it feels like a large majority of the info Is not really relevant or is very surface level. Yet it takes a lot of time to go through.   \n  \nI feel like I have gotten significantly more value out of simply learning on the job. Doing projects and researching questions as they come up. I'm sure there are very nuanced, highly technical questions that come up when working with specific scenarios like IoT or banking information but I don't really experience that.\n\nI've also worked on some wed development side projects in the past that require a DB on that backend and that real life experience has also taught me a lot about both programming principles and optimizing DBs/Queries.\n\nI have three other books that I would consider reading:\n\n* Pragmatic Programmer\n* Designing Data Intensive Applications\n* Kimball's Data Warehouse Guide\n\n  \nI know at least the bottom two are way more technical but is it worth fully reading through from someone who learns better so hands on? Should I just skim through them and look up some basics that I can further deep dive once I know I need it? Or is there really value in reading through it and taking notes? How do you guys approach learning at different points in your career?",
        "score": 7,
        "upvote_ratio": 1.0,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kttnvm/how_valuable_do_you_guys_find_structured_learning/",
        "created_utc": 1748031984.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kteklu",
        "title": "Bytebase 3.6.2 released -- Database DevSecOps for MySQL/PG/MSSQL/Oracle/Snowflake/Clickhouse",
        "author": "op3rator_dec",
        "subreddit": "dataengineering",
        "content": "",
        "score": 5,
        "upvote_ratio": 0.78,
        "num_comments": 2,
        "url": "https://www.bytebase.com/changelog/bytebase-3-6-2/",
        "created_utc": 1747989529.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktc9oy",
        "title": "Data strategy",
        "author": "Different-Future-447",
        "subreddit": "dataengineering",
        "content": "If you’ve ever been part of a team that had to rewrite a large, complex ETL system that’s been running for year what was your overall strategy?\n\t•\tHow did you approach planning and scoping the rewrite?\n\t•\tWhat kind of questions did you ask upfront?\n\t•\tHow did you handle unknowns buried in legacy logic?\n\t•\tWhat helped you ensure improvements in cost, performance, and data quality?\n\t•\tDid you go for a full re-architecture or a phased refactor?\n\nCurious to hear how others tackled this challenge, what worked, and what didn’t.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktc9oy/data_strategy/",
        "created_utc": 1747979889.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krbz8o",
        "title": "Easiest/most affordable way to move data from Snowflake to Salesforce.",
        "author": "biga410",
        "subreddit": "dataengineering",
        "content": "Hey yall,\n\nI'm a one man show at my company and I've been tasked with helping pipe data from our Snowflake warehouse into Salesforce. My current tech stack is Fivetran, dbt cloud, and Snowflake and I was hoping there would be some integrations that are affordable amongst these tools to make this happen reliably and affordably without having to build out a bunch of custom infra that I'd have to maintain. The options I've seen (specifically salesforce connect) are not affordable.\n\nThanks!",
        "score": 6,
        "upvote_ratio": 0.81,
        "num_comments": 22,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krbz8o/easiestmost_affordable_way_to_move_data_from/",
        "created_utc": 1747764888.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvo54d",
        "title": "Databricks Orchestration: Databricks Workflows, Azure Data Factory, and Airflow",
        "author": "4DataMK",
        "subreddit": "dataengineering",
        "content": "",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 1,
        "url": "https://medium.com/@mariusz_kujawski/databricks-orchestration-databricks-workflows-azure-data-factory-and-airflow-fb44560fac08",
        "created_utc": 1748243314.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktxryz",
        "title": "Starting from scratch with automation",
        "author": "bmiller201",
        "subreddit": "dataengineering",
        "content": "Hello, \n\nI am not really a dataengineer but after looking at what I'm going to be working on I may be one soon. \n\n  \nOk to start with the project, I work for a clinical research company and we currently are pulling reports manually and working with them in excel (occasionally making visualizaitons).  We pull from two sources, one we own but can't access (we could probably ask but we want a proof of concept first) but the other source we can use their API to access our data on their system.  \n\nI am looking for open-source (free) programs I can use to take the information given in the API break it into a full database (dataset tables) and keep in constantly updated in a gateway.  In this phase of the project I am more invested in being able to do an API call and automatically pulling the data to set it into the appropriate schema. \n\nI have a really good understanding of dataset creation put I am new to the scripting an API side.  \n\nI don't really know what else to add but if you have any follow up questions please comment. \n\n  \nI appreciate any help or advice you can give me. (I will be using our lord and savior youtube to learn as much as I can about whatever you suggest). ",
        "score": 3,
        "upvote_ratio": 0.72,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktxryz/starting_from_scratch_with_automation/",
        "created_utc": 1748043155.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktn8tv",
        "title": "Should I switch teams? Manager limiting my growth opportunities",
        "author": "eatdrinksleepp",
        "subreddit": "dataengineering",
        "content": "Background: \n\nI’m on a support data engineering team and have recently been working on a full stack project that helped me learn new tools and skills that I was really interested in. I really enjoyed the work and felt like I was growing in the right direction. I also expressed my interest in this work with my manager and he said he would forward any similar projects to me as they come. \n\nThe issue: \n\nHowever, now my manager seems to have changed his mind and told me that any future full stack opportunities will go to other team members instead of me because “I’ve had enough.” His reasoning is that projects should rotate through the team members one by one before coming back to me. While I understand wanting to give everyone opportunities, this feels like it’s limiting my ability to build expertise and grow in areas where I’m performing well.\n\nI’m also sensing some tension from teammates who seem to think I’m being “greedy” for wanting to continue with this type of work, even though I’m just trying to advance my career like anyone else would.\n\nMy question: I’m considering talking to the director of data engineering about potentially switching to a different team that focuses more on core data engineering work rather than support. Is this a reasonable move, or should I try to work things out with my current manager first?\n\nAdditional context:\n- I’ve been doing well in the full stack/data engineering work and it aligns with my career goals\n- This seems to be part of a broader pattern where I feel like growth opportunities are being limited\n- The team culture feels like it discourages ambition or self-advocacy\n\nHas anyone been in a similar situation? How did you handle it?\n\nTL;DR: Manager is rotating opportunities away from me after I had success with a project. Considering switching teams. Good idea or should I try to resolve this first?",
        "score": 6,
        "upvote_ratio": 0.88,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktn8tv/should_i_switch_teams_manager_limiting_my_growth/",
        "created_utc": 1748016101.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kqyceq",
        "title": "Designing Robust Schema Registry Systems for On-Premise Data Infrastructure",
        "author": "ScienceInformal3001",
        "subreddit": "dataengineering",
        "content": "I'm building an entirely on-premise conversational AI agent that lets users query SQL, NoSQL (MongoDB), and vector (Qdrant) stores using natural language. We rely on an embedded schema registry to:\n\n1. Drive natural language to query generation across heterogeneous stores\n2. Enable multi-database joins in a single conversation\n3. Handle schema evolution without downtime\n\n**Key questions:**\n\n* How do you version and enforce compatibility checks when your registry is hosted in-house (e.g., in SQLite) and needs to serve sub-100 ms lookups? For smaller databases, it's not a problem, but for multiple databases, each with millions of rows, how do you make this validation quick?\n* What patterns keep adapters \"pluggable\" and synchronized as source schemas evolve (think Protobuf → JSON → Avro migrations)?\n* How have you handled backward compatibility when deprecating fields while still supporting historical natural language sessions?\n\nI'd especially appreciate insights from those who have built custom registries/adapters in regulated environments where cloud services aren't an option.\n\nThanks in advance for any pointers or war stories!",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kqyceq/designing_robust_schema_registry_systems_for/",
        "created_utc": 1747723531.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvbr5b",
        "title": "Learning About GCP BigQuery Table Schema - Please help me understand the real world use cases of when and how often you use \"Nested & Repeating Schema\" and \"normalized relational schema\" when constructing your GCP BigQuery tables.",
        "author": "Original_Chipmunk941",
        "subreddit": "dataengineering",
        "content": "**Question:**\n\nI am currently learning Google Cloud Platform for data engineering. I learned that there are three types of schemas that I can use when constructing tables in BigQuery: 1) Normalized relational schema, 2) Nested & Repeating Schema, 3) Denormalized schema. I am trying to understand when I will realistically use \"Nested & Repeating Schema\" instead of \"normalized relational schema\" for the tables that I construct in BigQuery.\n\n\n\nPlease answer both of these questions below:\n\n1. When do you use \"Nested & Repeating Schema\" over \"normalized relational schema\" when you construct tables in BigQuery?\n\n2. When constructing tables within BigQuery data warehouses, how often do you use \"Nested & Repeating Schema\"? How often do you use \"normalized relational schema\"? If possible, please provide me a ballpark percentage (Ex. 40% Nested & Repeating Schema vs. 60% normalized relational schema).\n\n  \n\n\n**My Current Rationale:**\n\nI understand that BigQuery is a columnar oriented database. I learned that \"Nested & Repeating Schema\" is a more cost-effective for querying and more efficient than \"normalized relational schema\". However, even after researching it, I do not fully understand the real life advantages of \"Nested & Repeating Schema\" over a \"normalized relational schema\".\n\nAlthough \"Nested & Repeating Schema\" is more efficient and cost-effective for querying, I think a \"normalized relational schema\" makes more sense because it allows you to update records more easily like a traditional SQL RDBMS.\n\nI understand that columnar oriented databases are great when your historical data within the BigQuery table does not change. However, from my experience on working as a data analyst, historical data frequently needs to change. For example, lets say you have an external OLTP RDBMS that feeds into BigQuery daily. This external OLTP RDBMS contains a table named sales data. This table contains a column named \"Member Status\" and returns either one of two outputs: \"Active\" or \"Inactive\". \"Member ID\" 123456 has a \"Member Status\" of \"Active\". The data for that daily load is sent from the external OLTP RDBMS to the BigQuery table containing the data of \"Member ID\" 123456 with a \"Member Status\" of \"Active\". Three months later, the \"Member Status\" of \"Member ID\" 123456 changes to \"Inactive\" within the external OLTP RDBMS.\n\nFrom my understanding, now I cannot change that data easily within the BigQuery table if it has \"Nested & Repeating Schema\" . If my BigQuery table had \"normalized relational schema\", it should be able to update the \"Member Status\" of \"Member ID\" 123456 very easily.\n\nThis is my rationale on why I think a \"normalized relational schema\" is better than \"Nested & Repeating Schema\" for the majority of real world use cases. \n\nPlease let me know if you agree, disagree, etc. I would love to hear your thoughts. I am still learning GCP and data engineering.\n\n  \nThank you for reading.    :)",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvbr5b/learning_about_gcp_bigquery_table_schema_please/",
        "created_utc": 1748203648.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv3qym",
        "title": "Inside Data Engineering with Daniel Beach",
        "author": "mjfnd",
        "subreddit": "dataengineering",
        "content": "Sharing my latest ‘Inside Data Engineering’ article featuring veteran Daniel Beach, who’s been working in Data Engineering since before it was cool.\n\nThis would help if you are looking to break into Data Engineering.\n\n**What to Expect:**\n\n* Inside the Day-to-Day – See what life as a data engineer really looks like on the ground.\n* Breaking In – Explore the skills, tools, and career paths that can get you started.\n* Tech Pulse – Keep up with the latest trends, tools, and industry shifts shaping the field.\n* Real Challenges – Uncover the obstacles engineers tackle beyond the textbook.\n* Myth-Busting – Set the record straight on common data engineering misunderstandings.\n* Voices from the Field – Get inspired by stories and insights from experienced pros.\n\n**Reach out if you like:**\n\n* To be the guest and share your experiences & journey.\n* To provide feedback and suggestions on how we can improve the quality of questions.\n* To suggest guests for the future articles.",
        "score": 5,
        "upvote_ratio": 0.78,
        "num_comments": 2,
        "url": "https://www.junaideffendi.com/p/inside-data-engineering-with-daniel",
        "created_utc": 1748182967.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktzcgu",
        "title": "Airflow +dbt w/docker container",
        "author": "pstrysloth",
        "subreddit": "dataengineering",
        "content": "Company has the setup in the title. Why would our data engineering team use amundsen for documentation  and another program that’s tied to a Google sheet (the name which escapes me) and not just use dbt documentation and tests? Especially with the dbt power user VS Code extension? Am I missing something? I asked around and folks can only say “it is what it is.” It’s frustrating too at times when I can’t even run dbt commands because docker doesn’t like to play nice with my mandated vpn. \nWhat’s the purpose of not using dbt to its fullest extent? \n\nEdit: I meant dbt Power User for VS Code. Not dbt hero. ",
        "score": 5,
        "upvote_ratio": 0.73,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktzcgu/airflow_dbt_wdocker_container/",
        "created_utc": 1748047983.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktqbov",
        "title": "Sharing cache between spark executors, possible?",
        "author": "AartaXerxes",
        "subreddit": "dataengineering",
        "content": "Hi,\n\n  \nI'm trying to make parallel API calls using pyspark RDD.  \nI have list of tuples like : (TableName, URL, Offset) . I'm making RDD out of it. So the structure looks like something like this :  \n\n\n|TableName|URL|Offset|\n|:-|:-|:-|\n|Invoices|[https://api.example.com/invoices](https://api.example.com/invoices)|0|\n|Invoices|[https://api.example.com/invoices](https://api.example.com/invoices)|100|\n|Invoices|[https://api.example.com/invoices](https://api.example.com/invoices)|200|\n|PurchaseOrders|[https://api.example.com/purchaseOrders](https://api.example.com/purchaseOrders)|0|\n|PurchaseOrders|[https://api.example.com/purchaseOrders](https://api.example.com/purchaseOrders)|150|\n|PurchaseOrders|[https://api.example.com/purchaseOrders](https://api.example.com/purchaseOrders)|300|\n\n For each RDD, a function is called to extract data from API and returns a dictionary of data.\n\nLater on I want to filter RDD based on table name and create separate dataframes out of it. Each table has a different schema, so I'm avoiding creating a data frame that could include extra irrelevant schemas for my tables\n\n    rdd = spark.sparkContext.parallelize(offset_tuple_list)\n    fetch_rdd = rdd.flatMap(lambda tuple:get_data(tuple,extraction_date,token)).cache()\n    \n    ## filter RDD per table\n    invoices_rdd = fetch_rdd.filter(lambda row: row[\"table\"] == \"Invoices\")\n    purchaseOrders_rdd = fetch_rdd.filter(lambda row: row[\"table\"] == \"PurchaseOrders\")\n    \n    ## convert it to json for automatic schema inference by read.json\n    invoices_json_rdd = invoices_rdd.map(lambda row: json.dumps(row))\n    purchaseOrders_json_rdd = purchaseOrders_rdd.map(lambda row: json.dumps(row))\n    \n    invoices_df = spark.read.json(invoices_json_rdd)\n    purchaseOrders_df = spark.read.json(purchaseOrders_json_rdd)\n\nI'm using cache() to avoid multiple API calls and do it only once.  \nMy problem is that caching won't work for me if **invoices\\_df and purchaseOrders\\_df**  are running by different executors. If they are run on the same executor then one takes 3 min and the other a few seconds, since it uses the cache(). If not both take 3 min + 3 min = 6min calling API twice.  \n  \nThis behaviour is random, sometimes it runs on separate executors and I can see locality becomes RACK\\_LOCAL instead of PROCESS\\_LOCAL  \n\n\nAny idea how I can make all executors use the same cached RDD? ",
        "score": 2,
        "upvote_ratio": 0.67,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktqbov/sharing_cache_between_spark_executors_possible/",
        "created_utc": 1748023580.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krylnt",
        "title": "DagDroid: Native Android App for Apache Airflow (Looking for Beta Users!)",
        "author": "razeghi71",
        "subreddit": "dataengineering",
        "content": "Hey everyone,\n\nI'm excited to share **DagDroid**, a native Android app I've been working on that lets you manage and monitor your Apache Airflow environments on the go.\n\nIf you've ever struggled with pinching and zooming on Airflow's web UI from your phone, this app is designed specifically to solve that pain point with a fast, fluid interface built for mobile.\n\n**What the Beta currently offers:**\n\n* Connect to your Airflow clusters (supports Google OAuth for Google Cloud composer and Basic Auth)\n* Browse your DAGs list\n* View latest DAG runs\n* See task status in a clean Graph View\n* Access logs for different task retry numbers\n* Mark tasks as success/failed/skipped\n* Clear tasks to retry runs\n* Pause/unpause DAGs with a tap\n* Trigger DAGs manually\n\nWe're still early in development and looking for data engineers and Airflow users to test the app and provide feedback to help shape its future.\n\nIf you're interested in trying the beta:\n\n* Visit our site: [**dagdroid.marz.no**](http://dagdroid.marz.no)\n* Or DM me directly and I'll get you set up\n\nWould love to hear what features would be most valuable to you as we continue development!",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krylnt/dagdroid_native_android_app_for_apache_airflow/",
        "created_utc": 1747836141.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krsqnk",
        "title": "Efficient Graph Storage for Entity Resolution Using Clique-Based Compression",
        "author": "tilo-dev",
        "subreddit": "dataengineering",
        "content": "",
        "score": 4,
        "upvote_ratio": 0.84,
        "num_comments": 0,
        "url": "https://towardsdatascience.com/efficient-graph-storage-for-entity-resolution-using-clique-based-compression/",
        "created_utc": 1747816117.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krml8r",
        "title": "Using Apache OpenDAL to Design Iceberg Rust's Universal Storage Layer",
        "author": "Ill_Force756",
        "subreddit": "dataengineering",
        "content": "",
        "score": 2,
        "upvote_ratio": 0.63,
        "num_comments": 0,
        "url": "https://www.hackintoshrao.com/one-interface-many-backends-the-design-of-iceberg-rusts-universal-storage-layer-with-opendal/",
        "created_utc": 1747793202.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kqwy6k",
        "title": "Attribute/features extraction logic for ecommerce product titles",
        "author": "Problemsolver_11",
        "subreddit": "dataengineering",
        "content": "Hi everyone,\n\nI'm working on a **product classifier** for ecommerce listings, and I'm looking for advice on the best way to **extract specific attributes/features** from product titles, such as the **number of doors in a wardrobe**.\n\nFor example, I have titles like:\n\n* 🟢 *\"BRAND X Kayden Engineered Wood 3 Door Wardrobe for Clothes, Cupboard Wooden Almirah for Bedroom, Multi Utility Wardrobe with Hanger Rod Lock and Handles,1 Year Warranty, Columbian Walnut Finis*h\"\n* 🔵 *\"BRAND X Kayden Engineered Wood 5 Door Wardrobe for Clothes, Cupboard Wooden Almirah for Bedroom, Multi Utility Wardrobe with Hanger Rod Lock and Handles,1 Year Warranty, Columbian Walnut Finis*h\"\n\nI need to design a logic or model that can correctly **differentiate between these products** based on the number of doors (in this case, **3 Door** vs **5 Door**).\n\nI'm considering approaches like:\n\n* Regex-based rule extraction (e.g., extracting `(\\d+)\\s+door`)\n* Using a tokenizer + keyword attention model\n* Fine-tuning a small transformer model to extract structured attributes\n* Dependency parsing to associate numerals with the right product feature\n\nHas anyone tackled a similar problem? I'd love to hear:\n\n* What worked for you?\n* Would you recommend a rule-based, ML-based, or hybrid approach?\n* How do you handle generalization to other attributes like material, color, or dimensions?\n\nThanks in advance! 🙏",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kqwy6k/attributefeatures_extraction_logic_for_ecommerce/",
        "created_utc": 1747717832.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kw9ku2",
        "title": "Group by on large dataset [Over 1 TB]",
        "author": "fmoralesh",
        "subreddit": "dataengineering",
        "content": "Hi everyone, I'm currently using an NVIDIA Tesla V100  32GB with CUDF to do som transformation on a dataset. The response  time for the operations I'm doing is good, however, I'm wondering what is the best approach to do some grouping operations in some SQL database.  Assuming I'm allowed to create a DB architecture from scratch, what is my best option? Is Indexing a good idea or is there something else (better) for my use case? \n\n  \nThanks in advance.",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kw9ku2/group_by_on_large_dataset_over_1_tb/",
        "created_utc": 1748304507.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvybjn",
        "title": "Anyone using Snowflake + Grafana to track Airflow job/task status?",
        "author": "NefariousnessSea5101",
        "subreddit": "dataengineering",
        "content": "Curious if any data teams are using **Snowflake as a tracking layer for Airflow DAG/task statuses**, and then visualizing that in **Grafana**?\n\nWe’re exploring a setup where:\n\n* Airflow task-level or DAG-level statuses (success/failure/timing) are written to a **Snowflake table** using custom callbacks or logging tasks\n* Grafana dashboards are built directly over Snowflake to monitor job health, trends, and SLAs\n\nHas anyone done something similar?\n\n* How’s the performance and cost of Snowflake for frequent inserts?\n* Any tips for schema design or batching strategies?\n* Would love to hear what worked, what didn’t, and whether you moved away from this approach.\n\nThanks in advance!",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvybjn/anyone_using_snowflake_grafana_to_track_airflow/",
        "created_utc": 1748275988.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvxm6c",
        "title": "automate Alteryx runs without scheduler",
        "author": "Legacicycling",
        "subreddit": "dataengineering",
        "content": "Is anyone using Alteryx and able to make scheduled runs without the scheduler they are discontinuing?  They have moved to a server option but at $80k that is cost prohibitive for our company in order to just schedule automated runs.",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvxm6c/automate_alteryx_runs_without_scheduler/",
        "created_utc": 1748274291.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvqajs",
        "title": "How to know which files have already been loaded into my data warehouse?",
        "author": "thomastc",
        "subreddit": "dataengineering",
        "content": "_Context: I'm a professional software engineer, but mostly self-taught in the world of data engineering. So there are probably things I don't know that I don't know! I've been doing this for about 8 years but only recently learned about DBT and SQLMesh, for example._\n\nI'm working on an ELT pipeline that converts input files of various formats into Parquet files on Google Cloud Storage, which subsequently need to be loaded into BigQuery tables (append-only).\n\n- The Extract processes drop files into GCS at unspecified times.\n\n- The Transform processes convert _newly created_ files to Parquet and drops the result back into GCS.\n\n- The Load process needs to load the _newly created_ files into BigQuery, making sure to load every file exactly once.\n\nTo process only new (or failed) files, I guess there are two main approaches:\n\n1. Query the output, see what's missing, then process that. Seems simple, but has scalability limitations because you need to list the entire history. Would need to query both GCS and BQ to compare what files are still missing.\n\n2. Have some external system or work queue that keeps track of incomplete work. Scales better, but has the potential to go out of sync with reality (e.g. if Extract fails to write to the work queue, the file is never transformed or loaded).\n\nI suppose this is a common problem that everyone has solved already. What are the best practices around this? Is there any (ideally FOSS) tooling that could help me?",
        "score": 4,
        "upvote_ratio": 0.83,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvqajs/how_to_know_which_files_have_already_been_loaded/",
        "created_utc": 1748252185.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvjl4s",
        "title": "Getting into MLE/AIE",
        "author": "Tiny_Adhesiveness_88",
        "subreddit": "dataengineering",
        "content": "I’m a data engineer (yoe 10+)with a strong background and experience in SQL, ETL development, data warehousing , analytics. Also have strong cloud experience and credentials. \nNot  strong on the programming side, but can get the work done. Done some certifications and courses in ML. Have theoretical knowledge and done some poc projects but have no production experience in it yet. \n\nHow can I transition to ML Engineering and AI Engineering? What do I need to be up skilled in? Any bootcamps, certifications, courses etc. that I can pursue. ",
        "score": 3,
        "upvote_ratio": 0.67,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvjl4s/getting_into_mleaie/",
        "created_utc": 1748226948.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvafkw",
        "title": "I built a digital asset manager with no traditional database — using Lance + Cloudflare R2",
        "author": "gram3000",
        "subreddit": "dataengineering",
        "content": "I’ve been experimenting with data formats like Parquet and Iceberg, and recently came across [Lance](). I wanted to try building something around it.\n\nSo I put together a simple Digital Asset Manager (DAM) where:\n\n* Images are uploaded and vectorized using CLIP\n* Vectors are stored in Lance format directly on Cloudflare R2\n* Search is done via Lance, comparing natural language queries to image vectors\n* The whole thing runs on [Fly.io](http://Fly.io) across three small FastAPI apps (upload, search, frontend)\n\nNo Postgres or Mongo. No AI, Just object storage and files.\n\nYou can try it here: [https://metabare.com/](https://metabare.com/)  \nCode: [https://github.com/gordonmurray/metabare.com](https://github.com/gordonmurray/metabare.com)\n\nWould love feedback or ideas on where to take it next — I’m planning to add image tracking and store that usage data in Parquet or Iceberg on R2 as well.",
        "score": 4,
        "upvote_ratio": 0.7,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvafkw/i_built_a_digital_asset_manager_with_no/",
        "created_utc": 1748200201.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv6s6m",
        "title": "Databricks Academy Labs - Is it worth it?",
        "author": "AcanthisittaBroad765",
        "subreddit": "dataengineering",
        "content": "Hello Data Engineers,   \n  \nI am interested in getting your review of the Databricks Academy Labs?   \n  \nPlease if you work for or affiliated to Databricks you aren't invited to provide feedback/review.",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv6s6m/databricks_academy_labs_is_it_worth_it/",
        "created_utc": 1748190879.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kv520y",
        "title": "Decentralised vs distributed architecture for ETL batches",
        "author": "Historical_Ad4384",
        "subreddit": "dataengineering",
        "content": "Hi,\n\nWe are a traditional software engineering team having sole experience in developing web services so far using Java with Spring Boot. We now have a new requirement in our team to engineer data pipelines that comply with standard ETL batch protocol. \n\nSince our team is well equipped in working with Java and Spring Boot, we want to continue using this tech stack to establish our ETL batches. We do not want to pivot away from our regular tech stack for ETL requirements. We found Spring Batch  helps us to establish ETL compliant batches without introducing new learning friction or $ costs.\n\nNow comes the main pain point that is dividing our team politically. \n\nSome team members are advocating towards decentralised scripts that are knowledgeable enough to execute independently as a standard web service in tandem with a local cron template to perform their concerned function and operated manually by hand on each of our horizontally scaled infrastructure. Their only argument is that it prevents a single point of failure without caring for the overheads of a batch manager. \n\nWhile the other part of the team wants to use the remote partitioning job feature from a mature batch processing framework (Spring Batch for example) to achieve the same functionality as of the decentralized cron driven script but in a distributed fashion over our already horizontally scaled infrastructure to have more control on the operational concerns of the execution. Their argument is deep observability, easier run and restarts, efficient cron synchronisation over different timezones and servers while risking a single point of failure.\n\nWe have a single source of truth that contains the infrastructure metadata of all servers where the batch jobs would execute so leveraging it within a batch framework makes more sense IMO to dynamically create remote partitions to execute our ETL process.\n\nI would like to get your views on what would be the best approach to handle the implementation and architectural nature of our ETL use case?\n\nWe have a downstream data warehouse already in place for our ETL use case to write data but its managed by a different department so we can't directly integrate into it but have to do it with a non industry standard company wide red tape bureaucratic process but this is a story for another day.",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv520y/decentralised_vs_distributed_architecture_for_etl/",
        "created_utc": 1748186426.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktpa5a",
        "title": "Public data analysis using PostgresSQL and Power BI",
        "author": "0sergio-hash",
        "subreddit": "dataengineering",
        "content": "Hey guys!\n\nI just wrapped up a data analysis project looking at publicly available development permit data from the city of Fort Worth.\n\nI did a manual export, cleaned in Postgres, then visualized the data in a Power Bi dashboard and described my findings and observations.\n\nThis project had a bit of scope creep and took about a year. I was between jobs and so I was able to devote a ton of time to it.\n\nThe data analysis here is part 3 of a series. The other two are more focused on history and context which I also found super interesting.\n\nI would love to hear your thoughts if you read it. \n\nThanks ! \n\nhttps://medium.com/sergio-ramos-data-portfolio/city-of-fort-worth-development-permits-data-analysis-99edb98de4a6  ",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktpa5a/public_data_analysis_using_postgressql_and_power/",
        "created_utc": 1748021053.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ktjkf6",
        "title": "Should I do the AWS SAA Certification or skip and go straight to AWS DE Certification?",
        "author": "rudimentaryblues",
        "subreddit": "dataengineering",
        "content": "Bit of a background: I am currently working in Amazon as a business intelligence engineer. I plan on eventually switching to DE in 2-3 years time but first would like to gain some experience in my current role first. The main reason for doing these certifications is not only to help bolster my internal move to a DE role in amazon but outside as well when I move out of Amazon in the future. I have minimal interaction with AWS data tools except for quicksights (visualization tool). AWS DE certification is the ultimate prize but should I do the AWS SAA first? I'm still relatively new in the BIE role and have lots to learn about DE practices and core technical skills around that role. I also already have an AWS CCP certification but we all know how basic that is compared to SAA.",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktjkf6/should_i_do_the_aws_saa_certification_or_skip_and/",
        "created_utc": 1748006868.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksrajo",
        "title": "Data career advice: compensation boost and skill prioritization",
        "author": "peteer76",
        "subreddit": "dataengineering",
        "content": "I'm a Senior Data Engineer with 8 years in data (2 years DE, previously DS/MLE). I'm currently feeling stagnant due to limited project scope and seeking my next move to increase compensation and technical growth.\n\n**Current tech stack:** Python, GCP, Terraform, DBT, Airflow\n\nSpecific questions:\n\n1. **High-ROI skills:** Which emerging technologies/skills command the highest salary premiums for senior DEs? (Thinking GenAI/LLMs, real-time streaming, platform engineering)\n2. **Market positioning:** How do I best showcase my unique DS→MLE→DE progression to stand out? Should I target hybrid roles or pure DE positions?\n3. **Interviews preparation strategy:** For senior DE roles, how much should I focus on leetcode vs. system design vs. data architecture case studies?\n4. **Compensation benchmarking:** What salary ranges should I target in Europe with my background? (feel free to mention your location/market)\n5. **Linkedin Keyword optimization:** Which specific terms should I emphasize for DE roles ?\n\nLooking for insights from those who've made similar transitions or hiring managers in the space.",
        "score": 3,
        "upvote_ratio": 0.71,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksrajo/data_career_advice_compensation_boost_and_skill/",
        "created_utc": 1747922039.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ksmb9c",
        "title": "How to timeout apprun fastapi ?",
        "author": "Resident_Set204",
        "subreddit": "dataengineering",
        "content": "Hi,\n\ni have deployed DBT core and present it as an API for my MWAA Dag.  \nI wonder how i can set a timeout on my apprun.\n\nWhen i did it with cloud run on GCP, i set directly a 10 min timeout.\n\nWhen the API is not called whithin 10 minutes it stops.\n\nIs it possible to do the same with apprun ?",
        "score": 3,
        "upvote_ratio": 1.0,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ksmb9c/how_to_timeout_apprun_fastapi/",
        "created_utc": 1747905572.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1ks81wb",
        "title": "Batch contracts to streaming contracts?",
        "author": "DoomsdayMcDoom",
        "subreddit": "dataengineering",
        "content": " I’ve been consulting for quite a while from full stack development, data engineering, and machine learning.  However, every gig that I’ve been able to get a contact for has been batch.  I’ve received my professional GCP data engineering cert, which I’ve had to learn quite a bit around data flow (beam),composer with airflow, data proc (spark), and pub/sub.  However, I haven’t been able to land a contract around streaming data.  All I can do is pet projects showing proof of work, but that doesn’t seem to matter to businesses.  What does it take to get the contract for experience at building out a streaming data pipeline?",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ks81wb/batch_contracts_to_streaming_contracts/",
        "created_utc": 1747858894.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krqtao",
        "title": "Canada data engineering",
        "author": "Lonely_Letterhead716",
        "subreddit": "dataengineering",
        "content": "Hello folks!\n\nHow it's the market for roles of data engineer in Canada? I'm a data engineer with 7 years of exp. in consultancy services and I'm planning to go to Canada next year with working holiday and I would like to know how its the market for the role, do you think there are any opportunities?\n\nThanks!",
        "score": 3,
        "upvote_ratio": 0.72,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krqtao/canada_data_engineering/",
        "created_utc": 1747807838.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1krq51i",
        "title": "log based CDC for Oracle databases",
        "author": "Hot_While_6471",
        "subreddit": "dataengineering",
        "content": "Hey, i see there are 3 options as of now:\n\n1. LogMiner\n\n2. Xstream \n\n3. OpenLogReplicator\n\n  \nOracle is pushing for the XStream because of GoldenGate and their licesing, is support for LogMiner decreasing? I plan to use Debezium Connector with one of these adapters. What is the industry standard here?",
        "score": 3,
        "upvote_ratio": 1.0,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1krq51i/log_based_cdc_for_oracle_databases/",
        "created_utc": 1747805191.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvvzdh",
        "title": "How did you create your cloud inventory?",
        "author": "kekekepepepe",
        "subreddit": "dataengineering",
        "content": "anyone that needed to create a cloud inventory (for cloud resources such as EC2, RDS, etc), using some kind of an ETL (hand written or by using a paid product or opensource) - how did you build it?\n\nI have been using CloudQuery and very happy about it - concurrent requests, schemas and a lot more is taken care for you - but its price is too unpredictable especially looking forward.  \nSteamPipe s mode ad-hoc and feels less suited for production workloads, at least not without substantial effort.",
        "score": 2,
        "upvote_ratio": 0.76,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvvzdh/how_did_you_create_your_cloud_inventory/",
        "created_utc": 1748270276.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kvsdt5",
        "title": "How does create or replace table work exactly in BigQuery (table got deleted in STG using DBT)",
        "author": "Daniearp",
        "subreddit": "dataengineering",
        "content": "So first of all, it's not \"urgent\", this happened in a non prod environment, while running tests.\n\nI don't know if DBT did this or if it was me hitting the task on airflow to run a model two times in a row.\n\nWe have an airflow connected to DBT using astronomer. One of our models is a simple materialized = table model.\n\nI was testing some changes in it and hit the clear task in airflow, maybe I did it twice, I don't know. But checking the BigQuery job logs, I can see that the query was tried two times, within 20 seconds of each other, this particular query takes around 1 minute to run, but this change I made had a partitioning error, so it failed very quickly with error **\\[PARTITION BY expression must be DATE(<timestamp\\_column>) etc...\\]**. timestamps for creation and end time for both queries were:\n\n|| || |2025-05-25 13:00:35.436000 UTC|2025-05-25 13:00:36.598000 UTC |\n\n|| || |2025-05-25 13:00:55.847000 UTC|2025-05-25 13:00:56.810000 UTC |\n\nThe table definitely existed previous to 2025-05-25 13:00:35.436000 UTC, we test on it all the time. I went to check the table in stg today and it doesn't exist anymore.\n\nI don't know if it matters but the SA that uses DBT was also running other jobs/queries in bigquery, non related to dbt, but those other jobs started 1 minute after my DBT queries were tried, probably doesn't affect this whole thing.\n\nMy questions are:\n\n1. **how on earth did this happen? Is it possible that during CREATE OR REPLACE TABLE the table was dropped and not recreated, because of the invalidQuery? How does CREATE OR REPLACE TABLE work under the hood?**\n2. **Can I recover a deleted table like this in the future? I worry about this happening in PRD environment - I don't need to recover this one, I can just re run the DBT model with the correct partition and it's fine, after all it's a materialized = table model and I have the data to repopulate it. I worry about this happening on incremental models in the future, though.**\n\nThanks in advance!\n\nEDIT: I found out that, a few milliseconds before the CREATE OR REPLACE TABLE took place, there was a delete request (saw it in the log explorer), by the same service account that DBT uses, I'm assuming DBT did this? I don't know.",
        "score": 2,
        "upvote_ratio": 0.76,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvsdt5/how_does_create_or_replace_table_work_exactly_in/",
        "created_utc": 1748260164.0,
        "extracted_at": "2025-05-27 01:40:25"
    },
    {
        "id": "1kujmka",
        "title": "New to programming?  Don't fall for the myth of the genius programmer.",
        "author": "Loremporium",
        "subreddit": "learnprogramming",
        "content": "This was a video from Google I/O way back in 2009 that I still think about it to this day.  It discusses the way we hide our work,  our questions, and our projects until one day we just showcase something amazing that built, first try, no errors,  ya know because we're geniuses.\n\n[https://www.youtube.com/watch?v=0SARbwvhupQ](https://www.youtube.com/watch?v=0SARbwvhupQ)  \n  \n The talk was hosted by Brian Fitzpatrick and Ben Collins-Sussman, in which they give this introductory description of the talk:\n\n\"A pervasive elitism hovers in the background of collaborative software development:  everyone secretly wants to be seen as a genius.  In this talk, we discuss how to avoid this trap and gracefully exchange personal ego for personal growth and super-charged collaboration.  We'll also examine how software tools affect social behaviors, and how to successfully manage the growth of new ideas.\"\n\nOne part that resonated with me greatly was regarding the human developer.  \"I will toil in this cave and no one will know this code exists until it is perfect,  at which point I will emerge and be recognized for the genius I am.\"   On reddit,  have you ever done some quick research before clicking that \"post\" button,  out of concern you may be wrong or fearful of backlash?  Same concept.\n\nThe consequence of this (among others) is that neither your team nor the newer generation of programmers will get to see all of the failure you had to endure, to achieve that one cool thing,  because of the way we want to be viewed.  Enduring those failures and overcoming them,  I believe,  is more important then, and required by, any programming language, framework, tool, etc.\n\nNewcomers have all the resources, AI, and work previous generations have accomplished to look up to but we are doing those people a disservice by hiding our failures due to human emotion wether thats how we want to be viewed or general fear of negative feedback from our work.\n\nHopefully this doesn't offend anyone or become divisive,  it's just some unspoken honesty that I have appreciation for and it stuck with me because honestly... it hit close to home when I saw it back then.\n\n\n\n",
        "score": 687,
        "upvote_ratio": 0.96,
        "num_comments": 50,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kujmka/new_to_programming_dont_fall_for_the_myth_of_the/",
        "created_utc": 1748114604.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kw6aia",
        "title": "This sub has turned into AI slop",
        "author": "Tinnit3s",
        "subreddit": "learnprogramming",
        "content": "the excessive \"–\" or overly formatted is a dead giveway. Even the comments are Ai generated. \n\nTruly is dystopian",
        "score": 303,
        "upvote_ratio": 0.85,
        "num_comments": 109,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw6aia/this_sub_has_turned_into_ai_slop/",
        "created_utc": 1748295433.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kumb2q",
        "title": "Do programmers actually know how to touch type every symbol like []()",
        "author": "Aqueous_Ammonia_5815",
        "subreddit": "learnprogramming",
        "content": "I'm learning cpp and i don't know how to type. I get by fine since writing code isn't streaming of thought like worrying a novel. My question is about every symbol used in programming-a lot of which require the shift key - do you just type it without looking? Might be a stupid question but I really don't know",
        "score": 159,
        "upvote_ratio": 0.84,
        "num_comments": 185,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kumb2q/do_programmers_actually_know_how_to_touch_type/",
        "created_utc": 1748122048.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku6bu3",
        "title": "Are Tech Books still relevant to read those days?",
        "author": "Outside_Condition395",
        "subreddit": "learnprogramming",
        "content": "I read some books like ​: \n\n- Clean Code [Uncle Bob] \n- Clean Coder [Uncle Bob] \n- Refactoring existing code [Martin Fowler]\n- Pragmatic Thinking and Learning  [David Thomas] \n- Pragmatic Programmer [Andrew Hunt, David Thomas] \n- TDD [Kent Beck] \n- Mythical Man Month [Fred Brooks] \n\n*Currently*\n- Design Patterns \n\nBut, there are some sort of things and principles still confuse Me and I thought it misleading in some way... eg: \n- The concept of __SMART objectives__ I havn't really touch the real pinfit from it untill  now.\n\nany advice will help?\n\nThans for raching to the end of post  :>  \n",
        "score": 147,
        "upvote_ratio": 0.95,
        "num_comments": 58,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku6bu3/are_tech_books_still_relevant_to_read_those_days/",
        "created_utc": 1748073424.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krsyuq",
        "title": "Things you regret you didn't learn before starting programming",
        "author": "Worldly-Weekend7618",
        "subreddit": "learnprogramming",
        "content": "I am interested in constant learning and getting deeper into stuff, but there so much to know. Usually you have to get information about some related topic to later learn about some programming concept. So my question is what was the important for you to know before programming for having strong foundations(not DSA). I'm talking about general knowledge about text editors, internet, OS and etc.",
        "score": 141,
        "upvote_ratio": 0.97,
        "num_comments": 33,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krsyuq/things_you_regret_you_didnt_learn_before_starting/",
        "created_utc": 1747817128.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kr3xe5",
        "title": "i'm a CS student graduating in 2027, but I feel lost. any advice?",
        "author": "jeeeiya",
        "subreddit": "learnprogramming",
        "content": "i’m currently a cs student and will be graduating in 2027. i haven’t learned much in the past two years because i didn’t pay much attention in class and i mostly just studied enough to pass.\n\nnow i want to take programming seriously and start learning properly because i want to begin earning money as soon as possible.\n\ni'm familiar with Java, so i’m thinking of sticking with it and going deep into it. but there are so many languages, resources, and career paths in computer science that I feel completely overwhelmed and don’t know where to start. \n\nany tips or course recommendations would be greatly appreciated. if you were in my position, what would you do? i really wish someone could just tell me clearly that “do this and that, and you’ll become a programmer and start earning money.”\n\n\nP.S: just to clarify, i made this post to hear what you guys did when you were just starting out. any specific courses you found helpful? if you had to start from scratch today, how would you go about becoming a programmer?\n\nalso, i know i’m not job-ready right now and that’s the whole point of this post. i want to change that. and no, i’m not planning to switch careers or drop out or anything like that lol, so i’d really appreciate if the advice could stay focused on programming. ",
        "score": 135,
        "upvote_ratio": 0.85,
        "num_comments": 95,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kr3xe5/im_a_cs_student_graduating_in_2027_but_i_feel/",
        "created_utc": 1747745025.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kqsuoi",
        "title": "I'm 23M, been stuck in learning/programming for 3 years. I configure tools, jump stacks, and still don't earn. I’m lost — need clarity.",
        "author": "No_Appointment3667",
        "subreddit": "learnprogramming",
        "content": "I've been learning programming since around 2020. I'm 23 now, and for almost 3 years, I’ve been deep in configs, tutorials, and switching tools — but I’ve made no real money.\n\nI use Arch Linux with tmux, Neovim, ST, DWM, qutebrowser — not because it's cool, but because I genuinely enjoy it. I don’t play games, don’t use social media, don’t waste time. I stopped talking to friends to avoid distractions. YouTube and AI chatbots are my only source of learning and motivation.\n\nI started with C++ via BroCode, then jumped to PHP (watched freeCodeCamp playlist), then to JavaScript. Found PHP easier, went back to it. Now PHP feels hard again. I just realized how deep things like modern PHP (OOP, PDO, MVC) really go.\n\nI'm stuck in a loop:\n\n* I configure more than I code.\n* I jump stacks/tools as soon as I get frustrated.\n* I keep telling myself I’ll start earning once I “master” something — but that day never comes.\n\nI’ve built login forms, basic POS systems, and some admin panels with PHP/MySQL. But I don’t ship projects, or try freelancing because I feel like “it’s not good enough.”\n\nBefore tech, I worked jobs in hotels (cashier, counter helper), and I even did graphic design, video editing, 2D/3D animation. But I gave those up because I had a weak PC. Now I’ve got an i5 2nd gen with GTX 750 and 8GB RAM. It’s decent, but not great for creative work.\n\nI'm not asking for money or help. I’m just tired. I want to help my family financially, but I’m failing to pick one skill and stick with it.\n\nI love tech, but I’m also thinking of doing odd jobs again, just to survive. I feel like I’m wasting my best years watching tutorials and configuring my editor.\n\n**My questions to this community**:\n\n* Has anyone been through this kind of burnout or paralysis?\n* How do you stop jumping stacks/tools and just commit?\n* How do I finally start earning — even $100/month — to break this cycle?\n\nIf you made it this far, thank you. I’m posting this not to complain, but to hear from real people. This is my first time posting. Maybe I just want to feel seen by people who understand.",
        "score": 119,
        "upvote_ratio": 0.86,
        "num_comments": 96,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kqsuoi/im_23m_been_stuck_in_learningprogramming_for_3/",
        "created_utc": 1747704388.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktmnr1",
        "title": "Which parts of programming are the \"rest of the f*** owl\"?",
        "author": "gallez",
        "subreddit": "learnprogramming",
        "content": "Some programming languages are very beginner-friendly, like Python. It doesn't take a lot of learning to make your first basic scripts. There are user-friendly IDEs and frameworks to help you build nicer apps. But then, when you try to make more complex things, you run into a very steep learning curve.\n\nWhich parts of programming do you consider to be the equivalent of \"the rest of the f***ing owl\"?",
        "score": 113,
        "upvote_ratio": 0.93,
        "num_comments": 95,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktmnr1/which_parts_of_programming_are_the_rest_of_the_f/",
        "created_utc": 1748014687.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvkyk8",
        "title": "Is becoming a programmer a safe option?",
        "author": "BlacksmithNo5665",
        "subreddit": "learnprogramming",
        "content": "I am in high school and want to study computer science in college and go on to become a software developer. Growing up, that always seemed like a safe path, but now with the rise of AI I'm not sure anymore. It seems to me that down the road the programming field will have been significantly reduced by AI and I would be fighting to have a job. Is it safe to go into the field with this issue? ",
        "score": 112,
        "upvote_ratio": 0.78,
        "num_comments": 170,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvkyk8/is_becoming_a_programmer_a_safe_option/",
        "created_utc": 1748231605.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kv6owi",
        "title": "Older guy wanting to learn to develop apps",
        "author": "ekaj862000",
        "subreddit": "learnprogramming",
        "content": "40 year old with experience with computers wanting to learn to create apps. Have little to no knowledge and experience in coding. I just want to learn how to do it for fun and maybe make an actual app either web or IOS app. \n\nWhere do I even begin to learn this?\n\nDo I need to get a bachelors degree to learn how to do it?\n\nIs there a free or paid place to learn as well?\n\nNot looking to make tons of money or become famous just want to learn for fun.\n\nThanks in advance!\n\n\n",
        "score": 91,
        "upvote_ratio": 0.9,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv6owi/older_guy_wanting_to_learn_to_develop_apps/",
        "created_utc": 1748190641.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ks72oe",
        "title": "How do I get past understanding code and learn to actually write it?",
        "author": "16yearswasted",
        "subreddit": "learnprogramming",
        "content": "I'm taking the Harvard CS50 course online and, while I am able to understand the code I'm seeing and writing (based on examples during the lesson), I struggle to write any of it from scratch.\n\nIt's kind of like being able to understand a human language by sight, but not being able to write it. \n\nI imagine with practice I'll get better, but I'm wondering if anyone has any tips to help me get over this hump a little faster.",
        "score": 92,
        "upvote_ratio": 0.96,
        "num_comments": 53,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ks72oe/how_do_i_get_past_understanding_code_and_learn_to/",
        "created_utc": 1747856531.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktqklt",
        "title": "Still don’t fully understand how CORS actually works.",
        "author": "Prize_Signature_6444",
        "subreddit": "learnprogramming",
        "content": "I feel its implemented in a weird way.\n\nthings I am clear on(I think I am clear) :   \n\\- If bowsers do strict SOP, it leads to some limitations where genuine cross site requests wouldn't                       work.   \nSo CORS came in to loosen this up a bit, where the backend when returning a response, adds few headers saying who all can access it.   \nBut the backend takes the cross site request, runs the request, and sends a proper response like how it would do for a genuine request.  \n\n\n  \nso now I don't understand what if [bank.com](http://bank.com) has some endpoint like /sendmoney, that returns success or failure.  \nand [evil.com](http://evil.com) makes cross site request to that endpoint.  \nWill the backend still execute the /sendmoney?   \nwhat I understand is, backend does the work and returns response, then browser blocks [evil.com](http://evil.com) from seeing the response(which doesnt matter in this case).\n\nso if this is how it works,   \nCORS is to stop [evil.com](http://evil.com) from only viewing resources/responses of [bank.com](http://bank.com)  \nit wont stop from making it hit some endpoints?\n\nI have read about CSRF tokens. I feel CSRF token is the real thing, CORS isnt.",
        "score": 90,
        "upvote_ratio": 0.97,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktqklt/still_dont_fully_understand_how_cors_actually/",
        "created_utc": 1748024202.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku13ww",
        "title": "Career change at 36",
        "author": "No-Photograph-5204",
        "subreddit": "learnprogramming",
        "content": "I am 36 and currently work as a project manager at a translation company, and I also work as a freelance interpreter. However, I'm considering a career change because AI is starting to replace many jobs in my field.\n\nI'm an immigrant and now a U.S. citizen. I've recently started a bachelor's degree in Computer Science at the University of the People. I'm learning Python and Java, but I'm still at a very beginner level.\n\nDo I have a real chance of making a successful transition into tech? What are the fastest and most effective steps I can take to break into the tech industry, especially since I have no prior experience?",
        "score": 66,
        "upvote_ratio": 0.82,
        "num_comments": 59,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku13ww/career_change_at_36/",
        "created_utc": 1748053704.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kspdzz",
        "title": "Why does Stripe use POST for updating customer details instead of PATCH or PUT?",
        "author": "_Hemlo",
        "subreddit": "learnprogramming",
        "content": "I was reviewing the Stripe API documentation, particularly the [Update a Customer endpoint](https://docs.stripe.com/api/customers/update), and noticed that it uses a POST request to update customer details.  This struck me as unconventional since, in RESTful APIs, PUT is typically used for full updates and PATCH for partial updates. \n\nWhy might Stripe have chosen to use POST for this operation? \n\nEdit: Thanks to everyone who took the time to answer my question! ",
        "score": 58,
        "upvote_ratio": 0.93,
        "num_comments": 22,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kspdzz/why_does_stripe_use_post_for_updating_customer/",
        "created_utc": 1747916757.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksjv0u",
        "title": "Feeling lost in tech. Burned out, falling behind, and scared I’ll stay mediocre forever.",
        "author": "idk-who-you-are",
        "subreddit": "learnprogramming",
        "content": "Hi everyone,\n\nI’m 22 and about to graduate with a Master’s in Computer Applications. I don’t have a job yet, and honestly, I feel completely stuck and left behind.\n\nWhen I was 14, I found out about software engineering after my neighbor moved to the US. That lit a fire in me—I started dreaming of becoming a great engineer, moving abroad, doing something meaningful. I pushed hard through 9th and 10th grades believing that hard work now would lead to success later.\n\nThen the lockdown hit just as I entered my Bachelor's. I learned a bit of programming, but I also wasted a lot of time—watching movies, helping at home, and losing direction.\n\nIn 2022, I tried learning web development. I got a job I didn’t enjoy, then an internship where I couldn’t perform well. I tried React, but it felt overwhelming. Since then, I’ve bounced between DSA, frontend, Golang, and trying to build projects—but nothing sticks. Most projects remain unfinished. I’m not proud of anything I’ve built.\n\nI try starting projects, but I lose interest after two or three days. The initial excitement fades quickly, and I struggle to push through once things get repetitive or challenging. I feel stuck in a loop—excited to begin, but unable to finish. This keeps happening, and it kills my confidence even more.\n\nNow it’s 2025, and I feel like I’ve lost the **curiosity and excitement** that got me into tech in the first place. Programming doesn’t excite me anymore—it feels like just another boring subject I’m forcing myself through. I accept that YouTube and social media made tech look glamorous, and I got pulled into that version. But now I realize—it’s only fulfilling if you truly love the work.\n\nI have a short attention span. I give up easily when I hit bugs. I don’t learn frameworks or concepts as fast as I think I should. I feel like I’m not cut out for this.\n\nThe worst part? I’m scared I’ll be stuck as someone mediocre forever. I lie awake at night thinking, *What if I’m falling behind in this race? What if I missed the boat? What if I end up like someone who fell out during the dot-com bubble and never recovered?*\n\nMeanwhile, I see people younger than me building amazing things, earning well, learning fast. It crushes me.\n\nMy family—especially my parents and older brother—are amazing and supportive. They never pressure me, but I know deep down they want me to start earning. A few days ago, my mom quietly said, *“I thought you’d do something to change things at home, but you couldn’t.”* That sentence shattered me. I want to help them financially and emotionally. But I haven’t earned a single **dime** yet.\n\nI’ve been cold-emailing founders, CTOs, and employees on LinkedIn, and applying to jobs almost every day—but I keep getting rejections or no responses at all. It’s disheartening.\n\nSometimes, I want to give up. But I also don’t want to. There’s still a small part of me that wants to break through, to build something meaningful, and to prove to myself that I *can* do it.\n\nI want to make it in tech. I want to be good at it. I still dream of building cool products and figuring out how things work. But I just don’t know how to keep going when everything feels overwhelming. I want to feel motivated again. I want to believe it’s not too late for me.\n\nLately, I’ve been interested in backend development, but I know frontend is important too—and after failing so many times at it, frontend feels boring and intimidating. Starting again feels stupid and exhausting.\n\nSorry if I sound like a complaint box or just another burnt-out CS guy. I just needed to get this off my chest.\n\nIf anyone has been through this—or made it out of this kind of mental/emotional/technical rut—please let me know:  \n**How do you stay consistent when your confidence is shattered?**  \n**How do you bring back the excitement and curiosity for tech?**  \n**How do you stop feeling like a failure?**\n\nThanks for reading.\n\n**TL;DR:**  \n22, finishing MCA. Lost interest and motivation in programming. Tried web dev, Go, DSA—nothing sticks. Projects remain incomplete. Haven’t earned a dime yet. Family is supportive but I feel like I’ve let them down. Programming feels boring now; glamorized YouTube content pulled me in. I’m cold emailing founders, CTOs, employees and applying for jobs—but facing rejections. I’m scared of falling behind forever. Still want to succeed in tech but don’t know how. Backend interests me, frontend feels overwhelming. Looking for advice, support, or just someone who understands.",
        "score": 59,
        "upvote_ratio": 0.94,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksjv0u/feeling_lost_in_tech_burned_out_falling_behind/",
        "created_utc": 1747895008.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kr69hv",
        "title": "Should I start with CS50 as a complete beginner?",
        "author": "Commercial-You-9925",
        "subreddit": "learnprogramming",
        "content": "Hi everyone!\nI'm 17 and completely new to programming. I'm planning to study Computer Systems and Networks soon (a kind of vocational degree), and I want to start learning programming now on my own.\n\nI've heard great things about Harvard's CS50 course, but I'm wondering:\nWould you recommend starting with the full CS50 if I'm a complete beginner?\nOr would it be better to begin with something simpler, like the CS50's Introduction to Python course?\n\nI'm really interested in getting into the world of programming and want to build a solid foundation.\n\nThanks in advance!",
        "score": 49,
        "upvote_ratio": 0.92,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kr69hv/should_i_start_with_cs50_as_a_complete_beginner/",
        "created_utc": 1747751327.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krj6dx",
        "title": "2nd year engineer, is it supposed to feel like I don't know anything for this long?",
        "author": "natewilcox",
        "subreddit": "learnprogramming",
        "content": "I understand that it takes time to get all of the required knowledge of being a full stack developer/engineer but I feel as though there is an insurmountable gap between what I DO know now and what the rest of my team thinks I SHOULD know already. I came into this job with my Associate's degree and am working remotely from my team. What sorts of projects helped other engineers to go from academia to corporate programming?",
        "score": 44,
        "upvote_ratio": 0.98,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krj6dx/2nd_year_engineer_is_it_supposed_to_feel_like_i/",
        "created_utc": 1747782941.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvp1uq",
        "title": "Stuck in a Crappy IT Job, Chasing My First Dev Role — Am I Too Late or Just Lost?",
        "author": "lreeze",
        "subreddit": "learnprogramming",
        "content": "I’m 23 and feeling a bit lost.\n\nI graduated with a computer engineering degree but couldn’t land a software dev job after school. Now I’m stuck in a soul-sucking IT help desk role that I really, really hate. This year, I’ve made it my goal to finally break into software development — I don’t even care if it’s frontend, backend, whatever. I just want to *start*.\n\nLately, I’ve been rebuilding my skills. I’ve gone back to the basics:\n\n* Reviewed **HTML/CSS**\n* Got comfortable with **JavaScript**\n* Next up: learning **TailwindCSS** and **React**\n\nThe good news: I’m not stuck in tutorial hell. I build my own small projects, use GPT only for guidance (no code), and refer to documentation often.\n\nHere’s what I’ve made so far:\n\n* To-do list app\n* Calculator\n* CSS Bento grid layouts\n* Currently working on an Amazon clone with plain HTML/CSS/JS\n\nI code *every single day* after work (even if it’s just a bit) and spend my *entire weekends* learning — sometimes 12 hours straight. I’m pushing commits to GitHub, writing code, and learning consistently.\n\n**But here’s where I’m struggling:**\n\n* I feel like my projects are still too “basic” to put on a resume\n* I don’t have anything I’m proud of yet\n* I don’t know what to build next or what roadmap to follow after React\n* I feel like a fraud compared to others who seem more confident with less effort\n\nI *know* I can learn on the job. I just need a chance — even one interview. But I’m not getting any callbacks, and I’m unsure how to make my resume or GitHub stand out. I see people applying with basic portfolios and getting traction, and it makes me wonder if I’m overthinking things.\n\nAny advice on how to move forward from here? What should I focus on after React? How do I turn these mini projects into something real and impressive?",
        "score": 46,
        "upvote_ratio": 0.7,
        "num_comments": 41,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvp1uq/stuck_in_a_crappy_it_job_chasing_my_first_dev/",
        "created_utc": 1748246998.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kuqlpe",
        "title": "Professional Coders, SWE’s..what was your ah-hah moment or the moment when you felt you were really successful in your work?",
        "author": "EmilieDeClermont",
        "subreddit": "learnprogramming",
        "content": "I know we see a lot of posts in here with the do’s, don’t’s, and how to’s.. I just wanted to see some people who eat sleep and breathe this and LOVE it. Or, others who’ve found moments that really shine. ",
        "score": 38,
        "upvote_ratio": 0.95,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuqlpe/professional_coders_sweswhat_was_your_ahhah/",
        "created_utc": 1748135178.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktl0vq",
        "title": "But…Where do you write the code? (Moving away from VBA)",
        "author": "BallJar91",
        "subreddit": "learnprogramming",
        "content": "I feel incredibly stupid asking this question, but I don’t understand where you write code? I am not a programmer by any stretch of the imagination, but I’m working on a project for my job and the best solution I keep ending up at is to just try to learn programming so I can create a system from scratch instead of manipulating tools that can never quite do what I need. \n\nRight now, I’m working in Excel, and I’ve had some decent success writing basic code for vba, but Excel has limits, and it’s really not where I want to end up. VBA (as I understand it) is only compatible with Excel, so if I wanted to create my own desktop or web based program I’d need to put my code…. Somewhere else…. \n\nAgain, I feel absolutely stupid asking, so please feel free to poke fun in a kind way, but know that if I could’ve asked in a way concisely enough to just google it I would have taken that route months ago. \n\nDo I need an app, to create an app? Or a specific website? Is Java a language and a program? And for someone with rudimentary knowledge of VBA and a past life on MySpace, where would you recommend I start?",
        "score": 40,
        "upvote_ratio": 0.88,
        "num_comments": 49,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktl0vq/butwhere_do_you_write_the_code_moving_away_from/",
        "created_utc": 1748010661.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kw9jct",
        "title": "Free Tech Mentorship",
        "author": "ItsProfOz",
        "subreddit": "learnprogramming",
        "content": "I’m Ryan, a senior backend engineer with \\~8 years of experience (largely in APIs, infra, DevOps, and Python development, but I’ve done a bit of everything).\n\nI’ve mentored and managed junior engineers in the past but my current role is lacking opportunities for this. I really miss it, so I’m opening up **free 1:1 mentorship slots** for a few early-career devs or students who would like to learn from an experienced engineer.\n\n**What I can help with:**\n\n* How to be an effective, impactful engineer\n* Writing clean, readable, maintainable code (especially in Python)\n* General career guidance and advice\n* Resume feedback\n* Local dev setup, how to use AI tooling, tips and tricks\n* Soft skills: how to communicate well, stay organized, and grow intentionally\n\n**What I** ***can’t*** **help with:**\n\n* Leetcode-style interview prep\n* Doing your homework for you lol\n* Frontend-heavy stuff\n\nThis is **100% free**, just something I’m doing to give back.\n\nDM me a little about yourself if you're interested. If it seems like a good fit, we'll setup a time for an introductory Zoom call and go from there. Ideally we meet once a week for \\~30 minutes, but I'm flexible in scheduling and cadence.\n\nI have a full-time job, so I’ll likely pick a few people max to start.\n\nEDIT: A good number of people have already reached out - please feel free to DM me if you're interested, it just may take a little bit of time for me to respond.",
        "score": 40,
        "upvote_ratio": 0.92,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw9jct/free_tech_mentorship/",
        "created_utc": 1748304382.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku4f2u",
        "title": "What exactly does it take to use \"1 GB\" in Programming on Github Pages?",
        "author": "CLIMdj",
        "subreddit": "learnprogramming",
        "content": "Hello everyone,I've lately been trying to find a free website hosting thing,and found Github Pages.\\\nIt has almost no limits,no premium features(except website visibillity,but i dont care about that),can support any language,and more,but there is a problem..\\\nI looked at the limitations,and it said two things:\n* Github Pages cannot use more than 1GB total.\n* Github Pages cannot produce more than 100GB per month.\\\n(Or something along the lines of this)\\\nSo,i came to ask:\\\nWhat exactly does it take to use up 1GB?is it a huge amount?is it like 30 lines of code?like,can anyone give me examples of what takes 1GB?\\\nI just...am unfamilliar with how much storage do programming languages use,how many files or folders is 1GB. ",
        "score": 28,
        "upvote_ratio": 0.86,
        "num_comments": 33,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku4f2u/what_exactly_does_it_take_to_use_1_gb_in/",
        "created_utc": 1748065556.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktdeuw",
        "title": "Python or Go for backend?",
        "author": "Nama_One",
        "subreddit": "learnprogramming",
        "content": "Hey!, \n\nI'm a freelance MERN developer and I'm currently thinking on learning a new language for backend, the two options in thinking are Python and Go, but I'm not sure which one is best for me.\n\nI know that learning python would be good in case I switch to other field in the future, as there are a ton of libraries and documentation. And on the Go side, I think it's built for speed in the backend, which sounds nice when thinking I'm a web developer.\n\nWhat do you think would be the best option to learn?\n\nThanks in advance! ",
        "score": 28,
        "upvote_ratio": 0.86,
        "num_comments": 63,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktdeuw/python_or_go_for_backend/",
        "created_utc": 1747984522.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksynm8",
        "title": "What useful and essential applications do you consider always having installed on your Windows PC?",
        "author": "alexfreemanart",
        "subreddit": "learnprogramming",
        "content": "I'm referring to those applications you know you'll always install every time you buy a new PC because you know they're very useful and you'll use them daily or at crucial times.",
        "score": 30,
        "upvote_ratio": 0.86,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksynm8/what_useful_and_essential_applications_do_you/",
        "created_utc": 1747939885.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kumill",
        "title": "When You're Great at Programming, But You Suck at Programming",
        "author": "Voxmanns",
        "subreddit": "learnprogramming",
        "content": "In my 10 years so far with tech, I have had the absolute pleasure to work alongside some brilliantly talented and well educated programmers. However, I have seen those same developers have their arguments and perspectives fall flat, despite their technical prowess, while less technically gifted minds withhold tremendously valuable ideas for fear of being caught on a technicality or unknown detail.\n\nTL;DR - We are taught that cleanliness and efficiency of code is the earmark of a quality solution. While important, we fail to educate programmers on the importance of factors beyond the code and how to navigate the complexity and priorities of a real application. This post is for anyone who is truly curious about what \"good code\" really means, and for those who suspect the answer has more to do with the problems you solve than the language you use to do it.\n\n**Introduction**\n\nGoodhart's Law - \"When a measure becomes a target, it ceases to be a good measure.\"\n\nI think most of us have experienced those often frustrating debates between programmers where one is claiming the other has an inferior approach because \"I could write it faster by doing x.\" or \"I could write it with less complexity by doing y.\"\n\nMy goal with this post is to primarily open up discussion around this topic and hopefully provide something valuable from my 10 years of doing software development.\n\nBefore I dig in, I think it's only fair to say where I come from. I have worked the last 10 years in cloud development, working with a lot of different SaaS, PaaS, and IaaS technologies. I have dabbled a LITTLE in hardware and lower level languages - but never really had to do much in terms of deploying code for a new piece of hardware and have, admittedly, been a bit spoiled on not having to deal with things like managing pointers or resolving memory errors at a lower level. However, what I want to talk about should be a fair bit removed from that level of granularity and speaks more to how we as programmers approach a problem. That being said, I have worked as an admin using declarative tools, managed code bases of several million lines, and successfully implemented several medium and large scale system architectures in my time. That is to say, I've seen a lot of shit in the last decade.\n\n**Conflating personal skills with solution quality**\n\nWith the preface out of the way, let me put my assertion straight. I see a lot of programmers conflating their proficiency with coding (speed to write code, initial resilience of code, complexity mitigation, readability, testability, etc.) as a reflection of solution quality. It is a frequent and concerning problem that many programmers are taught or conclude that the quality of how the code is written is above the functionality of the existing application.\n\nFor clarity, I am not saying that things like readability are irrelevant to the measurement of a solution's quality. Of course, all other things equal, a solution with more readable code is a better solution than the same with less readable code. What I am saying is that the actual influence of these metrics varies depending on the environment and context of the implemented solution.\n\nFor example, a small scale and local utility (such as a simple script for managing files in a folder) does not gain nearly as much proportional benefit from more readable code as a large scale ETL job managed by multiple people from multiple teams working in multiple frameworks. We could deliberate endlessly on what the \"correct\" weighting of these metrics are for any given project, but the real issue is when these metrics become surrogates for the strategic goal of the application.\n\nThe reality is that, when it comes down to the application running and doing its job, the only thing that matters is how well it does its job: How efficiently does it succeed when it is provided valid inputs, how effectively does it recover from unexpected inputs/results, and how safely does it fail in the event of an unrecoverable error?\n\nNobody cares that you made it super readable if it doesn't work. Nobody cares that you wrote it faster if it's laden with bugs. No one is happy that you reduced 30 lines to 2 lines if it makes the application a total resource hog. Similarly, nobody cares if it runs 500ms faster UNLESS that 500ms makes a difference in the grand scheme of the tech.\n\nSimply put, there is an important and clear distinction between your skills as a programmer, and the quality of the solution you produce. While your technical skills as a programmer are EXTREMELY important, they do not necessarily ensure that the solutions you produce are quality solutions. It's a mistake I have seen a lot of developers make, and it leaves them bewildered because they felt they did everything right. It reminds me of the classic Indiana Jones scene when Jones simply shoots the guy showing off all his fancy moves. It looks cool, super impressive, but totally useless in the wrong context.\n\n**Programming and solution quality is impacted by the real world and supporting relationships.**\n\n\"I would've never written it this way. They could've easily done x to make this better.\"\n\nWe've all felt that way at least once. You are SO blessed to finally work on that bit of code that hasn't been touched in 25 years just to find it is such a convoluted mess of outdated checks, redundant assignments, tightly coupled classes, et al. The feat of the developers goes from \"This is really nice and sensible code that I can work with.\" to \"How the hell did the last guy keep this thing running at all?\"\n\nThis sentiment that you would've done it better by doing it your way is almost always a lie you're telling yourself. Here's why:\n\nProgramming, as we all hopefully understand by now, is an iterative process. That means to reach your ideal state, you necessarily cannot jump from step 0 to the final step. There are checkpoints you must cross in order to get there. However, these checkpoints are marked by the application's functionality, and the structure/ease of the code is loosely implied by the business/client at best.\n\nIn other words, the developer will always be pressured to produce functional code over \"clean\" code. I am not referring to the actual principles of Clean Code necessarily, just whatever your idea of the \"right way to write the code\" is.\n\nThis means that leading into these checkpoints, there are always unanswered questions and missing pieces of context that we wish we would have had in the beginning. I just recently was working on a report generation tool for a friend when, just a week before we needed it to be done, they decided to clarify that certain parts of the report needed to have dynamic labeling and columns when we had already understood them as static elements. As you can imagine, that's a totally different approach than I had originally planned for. With not enough time to totally rewrite the program, I had a choice:\n\n1. Quickly refactor the code, accept that it'll be a bit messy, defer proper restructuring, happy client because it works.\n2. Ask for an extension to the deadline, customer misses their reporting window, blame them for not being clear and not knowing that information at the beginning?\n\nI, of course, asked for the extension. They, of course, denied the request. So, I went with option 1. Why? Because the relationship was more valuable to me than the structure of my code. I will absolutely take on a bit of a messier solution on the backend to secure another future project and ensure the client is happy **in this scenario**.\n\nThat's not to say it's always the right answer. I have refused to deploy changes that were of security or regulatory concern because not going to jail was more important than winning another project. I'm not even saying I am always right in which options I take for these situations. My point, as highlighted by the title of this section, is that the world around the application matters a LOT. Assuming you would have done it better without knowing all of the context for why those decisions were made is not only unfair to the previous developers, but is simply a conclusion driven by ego.\n\nTying this back to our main theme, you are measuring the quality of the solution based on metrics which are not the goal. The goal was a functional app that satisfied the defined requirements within the allotted timeline. That's it.\n\n**Programmers have limitations. It's okay to not be a superhuman.**\n\nI'm going to pivot the focus a bit and talk more about you - the programmer. I'm not going to say that every programmer is an antisocial basement dweller who would never suffer the presence of another human being or (God-forbid) a team building exercise. We know that already (jk).\n\nSeriously, though, there are some INCREDIBLE programmers out there. I've seen people who have mastered a multitude of frameworks, seem to 100x processing times every time they touch something, and can build a decent MVP, if given all the info up front, at a break-neck pace.\n\nBut, I have also seen programmers who are incredible in a different way. They may be slower on the keyboard, but they do a much better job at diagnosing issues and getting to the root cause of a problem. Some of them are incredible at interpersonal relationship building (very valuable in tech as a programmer, just saying). Some can understand a seemingly limitless amount of complexity and boil things down to a simple direction that everyone understands. I've met and managed a few that seemed to be able to do all of it and more entirely on their own (usually 25+ YoE on those guys/gals).\n\nWe say this all the time, but I think we forget to take our own advice: Programming is so much more than the code. For every rockstar programmer I have had the pleasure of working with, I could identify several issues working with them. Even the guy who does it all tends to be a victim of their own success and struggles to not dominate the room when collaboration is a must. Everyone has their gaps in knowledge and that's okay. Programming is an absurdly broad, dense, and deep discipline.\n\nI say this, because I still see it as a big issue in tech today. I think AI has really inflamed the issue too (I won't be getting into that) because of how many different ways there are to use this, frankly, very powerful tool. Please, for the sake of your sanity and enjoyment of programming, do not measure yourself OR OTHERS on a single dimension. It is my belief that a pillar of a good programmer is the ability to appreciate solutions and strengths which they do not possess nor understand, and the ability to keep the big picture in mind when addressing a potential weakness in themselves, the solution, or another programmer. Remember, comparison is the thief of joy.\n\n**What leads to the surrogation of goals in software?**\n\nI think it takes a lot of tolerance for uncertainty to work in tech. After all, your job is to essentially invent things that don't exist yet. Sure, there's a million pdf parsers out there, but there isn't one that does EXACTLY what you need the EXACT way you need it. There are 1000s of security camera models out there, but your new camera design (hopefully) taps into something the market is being starved of.\n\nBut, what the hell do you do when something like blockchain hits it big? What if you're required to use a library you've never even heard of? What if Maggie in accounting can't so much as find the damn Windows start button, yet she's the VP of your project and wants to know every little technical detail just to ridicule things she doesn't understand? Dammit Maggie, it's a REST call! IT'S JUST A....\n\nOn top of that, we hardly have much consensus on what \"good code\" even is - or the \"right\" way to do it. We had waterfall for some 30 years, then Agile happened, but we still have waterfall and now we have hybrid Waterfall/Agile teams with varying adherence to either paradigm. Sometimes they just make up their own rules and call it Agile because they do stuff on a bi-weekly cadence.\n\nPlus, you have Scrum and Kanban muddying the waters. But, you also have standards like TOGAF and ITIL. Let's also not forget how SaaS providers like Jira have their own rules to abide by. Honorable mention to the books and onslaught of professionals saying \"I have figured it out! Buy my shit.\" That's all before you even get to the framework you're going to be working in. It's a freaking mess!\n\nThe reality is, we just don't know what perfect code is. We can generally approximate when code is written poorly or well, and we can loosely articulate the reasons and speculations around that approximation, but we don't \\*know\\* if it's right except for very specific cases (of which there are still many examples). Nearly everything is up to debate, and it can be really hard to be certain that the code we write is good. Except, it doesn't need to be.\n\n**Preventing surrogation of goals.**\n\nIronically, one of the most important lessons I have learned in tech has been from the least technical users I have encountered. I learned that there are two questions that should always be guiding a solution.\n\n1. Why does this work?\n2. Why doesn't this work?\n\nIf you're underwhelmed, you probably should be. If you're enraged because of questions like -\n\n1. What about the code structure and efficiency?\n2. What about security?\n3. How does this help me implement design patterns into my work?\n\n\\- bear with me.\n\nAs I mentioned in the beginning of this post, I have seen many programmers prioritize the quality of the code over the functionality of the app. I've seen it in practice as well as in conversations/debates amongst programmers. These questions still matter, but their relevance is predicated on how it answers the question of \"Why does this work,\" and/or \"Why doesn't this work?\"\n\nWhat about structure and efficiency? Is that why it does/doesn't work? If the current code structure does not significantly impact the solutions ability to work or not work, then it's a moot question. It's moot, because it has no meaningful bearings on how well the app does its job (or fails to do its job).\n\nFor a personal utility script where the focus is on development efficiency and functionality, not raw execution speed, a few seconds' difference in runtime is inconsequential. So the practical value of a faster script is diminished if it sacrifices development efficiency. Ultimately, **the script's success is defined by whether or not it works as intended.** In that regard, a 'slower' script developed in one hour can be a more pragmatic solution than a 'faster' one that took three hours to build.\n\nNow, I said a lot about strengths and weaknesses of a programmer. So let's take it a step further and address the speed at which coding is done. I, frankly, am not a super fast coder. I'm not the slowest in the room, but I was never the guy who could just churn code like a factory (pattern).\n\nI know, way to show my ass to the crowd. The thing is, I am simply stronger in analysis and communication than I am in writing code. I'm cool with being that guy. I love working with developers who are code factories and don't want to deal with people as much, because that's a complementary counterpart to what I bring to the table. So, while I focus on drafting demos and POCs and diagrams and all of these things about the application, they can focus on the real meat of the application, preventing backdoors, scaling efficiency, obscure mathematical theorems, etc.\n\nHowever, since we are talking about a collaborative environment, it is important to note that this is not a siloed effort. I NEED to write production code because I NEED to understand what goes into it, pitfalls, and tricks. I may be subordinate to the code master next to me, but I cannot circumvent the necessity of actually doing the work. The same goes for the code master. They NEED to create diagrams and explain concepts because they NEED to understand how the customer feels, whether or not their idea can conceptually make sense to another person, and so on. Just like they bail me out if I back myself into a corner, I bail them out if they start fumbling the presentation. It goes both ways, and we both become exceptional for it.\n\n**The True Programmer, and respecting your colleagues**\n\nI know advocating for respect on an internet forum is a quintessential example of \"screaming into the void,\" but I'd be remiss if I didn't mention it.\n\nJust like how I said we don't know a lot of things, we (as a society) don't know what a true programmer is. Something to do with writing code, something to do with building applications. I'm not here to claim that I have the be-all-end-all answer to what a true programmer is. Quite the opposite.\n\nThe literal definition of a programmer is pretty vague when you look at it from a technical perspective. There's a lot of nuance and layers to writing a computer program that we could spend a long time deliberating over. That is precisely why we must be very careful, or downright avoid, the argument that \"someone who does x\" or \"someone who doesn't know y\" is or is not a \"true programmer.\" Fans of the True-Scotsman fallacy will know exactly what I mean here. It's an argument that leads to nowhere.\n\nThe reality is technology is a part of everyone's life, and everyone's perspective on it matters. We need non-technical users to break our apps and force us to come up with more resilient and intuitive designs. We need semi-technical users to help translate the real world to technical ideas with new and creative inspirations outside of the conventional walls. We need deeply technical users to navigate the gritty details of building the applications when they're 9 layers removed from the original problem. Most importantly, we need all of them to work together to build anything meaningful.\n\nEveryone gets into tech with their own perspective for their own reasons. But what technology is, fundamentally, doesn't change. Whether it's writing a new business integration or starting a SaaS company or building robots or even developing new devices that don't require a plug - the whole idea of technology is rooted in discovery. We take the chaos the world presents us, and learn how to contain it and use it to achieve our goals. Fire became torches, circuits became software, and Maggie became a great lesson for me in what really matters in software.\n\nI hope this post serves as a valuable reminder of all the things we still don't know in software and technology as a whole. I hope it reassures newcomers that it's okay to feel like everything is a hot mess - because it is. I also hope it helps to soothe some of the hardened veterans who know things and learned lessons that the vast majority of society could hardly understand, let alone be expected to know. Finally, I hope it helps everyone make better applications by focusing on what really matters. Whether it's an actual project, or just discussing ideas with a stranger, we should always focus on why it does or doesn't work first, and remember that what is most valuable to us as programmers is not always what's most valuable to the applications themselves.\n\n**P.S. Counter arguments and the importance of taking different approaches**\n\nI am acutely aware that there are many software that are vastly different than the cushy business applications I have come to know. Even banks have a higher tolerance of failure than, say, the technology responsible for safely landing your aircraft. Furthermore, there is a very real snowball effect poorly written code has where tech debt and developer morale go in the wrong directions quickly.\n\nThis is not me advocating for haphazardly writing code and being complacent with what we do not know. If you've got 30 layers of if statements in your method, I'm inclined to believe that you did something wrong and should have fixed it a long time ago. Getting the job done tomorrow matters as well as getting it done today, usually. You'll never solve for everything, so you always try to solve what matters the most first, and there are times that your application can \"get the job done\" today, but should absolutely not see the light of production until it is completely reworked into a sensible architecture.\n\nThe answer to \"Why doesn't this work?\" can very likely be \"Because it's so impossible to understand that we won't know why it fails.\" or \"Because this bug introduces a 0.1% chance that the plane slams into the ground upside down and kills everyone on board.\"\n\nThis is a bit more philosophical, but I am of the mind that you should always have unresolved reasons for why something doesn't work. If you don't, you probably don't know your application very well. This ultimately gets into risk assessment and whether or not the risk/reward is worth it. A tiny risk of a minor issue, like a script running a few seconds slow, may not be worth hours of work. However, a tiny risk of a major disaster, like a plane crash, is unacceptable and must be addressed. Deciding what risks to tackle is a judgment call based on the severity of the potential outcome.\n\nRemember, the definition of what does and does not work varies. You need to be aware of it and set your own standards (at least, as much as you're able to) to ensure that the software you produce is to the quality it needs to be. Knowing the implications of not following a best practice, and accurately determining if it's a meaningful risk, is an extremely delicate decision. You need to know the rules and respect the rules before you go off deciding to intentionally break them.",
        "score": 26,
        "upvote_ratio": 0.82,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kumill/when_youre_great_at_programming_but_you_suck_at/",
        "created_utc": 1748122636.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku26l8",
        "title": "Is learning to code worth it?",
        "author": "FriendshipPresent686",
        "subreddit": "learnprogramming",
        "content": "Hi everyone. My 12 year old brother has expressed interest in becoming a software engineer when he grows up. I myself was not introduced to coding until much later in life which I wish I was, stuff would’ve been easier for me. I was thinking of enrolling him into a scratch course to help him get ‘head start’ into the field. He has done some scratch animation projects in school however I came across a course which teaches scratch more in depth with more projects. He said he would be interested in doing it, however I was relaying the information to some people and they’ve said that programming is dead now because of AI and a lot of people are not able to make use of their skills anymore. They said that it’s not worth it to learn how to code. I’m really conflicted because I would like my brother to learn skills early on that will help him in his later schooling and career and he isn’t struggling to grasp basic concepts in college like I was. I still want to enroll him in scratch course because I know in the end he will learn something and it’s worth it rather than him not doing anything at all. I wanted to know if anyone had any advice on how I can help him learn early on about the IT industry, software engineering, etc. so he already has basic knowledge beforehand. Any courses, classes, activities for middle schoolers? I know about code ninjas but I’m not a fan of those learning center franchises. I have tried them out, They are super expensive and barely learn anything while they are there. TIA!",
        "score": 27,
        "upvote_ratio": 0.76,
        "num_comments": 50,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku26l8/is_learning_to_code_worth_it/",
        "created_utc": 1748057319.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvn9h3",
        "title": "Experienced Programmers, If you were starting out learning to program and could do it at your own pace, how would you go about it?",
        "author": "NonsenseAndNothings",
        "subreddit": "learnprogramming",
        "content": "Programming resources change so often that knowing\n what the best current options are is a constantly moving target. I want a good foundation. I'm not young, not old either, I understand some things about programming.  \nI do not know what I don't know. Instead of jumping in too fast and paying for it later, I want to find something (a course or guide without actually being physically present).  I can work from that gives me a solid foundation.  I definitely need to do it on my own and at my own pace. I will always program in an independent manner.",
        "score": 24,
        "upvote_ratio": 0.87,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvn9h3/experienced_programmers_if_you_were_starting_out/",
        "created_utc": 1748239937.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kr7uoi",
        "title": "I want to learn coding",
        "author": "Easy-Philosophy-335",
        "subreddit": "learnprogramming",
        "content": "The title is pretty self explanatory. But I want to stay accountable. I know a couple of years ago people used to blog their journey. Nowadays people make YouTube videos. But I am not very comfortable with vlogging. Is there any other way where I can keep on being accountable and it will also help other absolute beginners like me? Any good natured advice is welcome. Thank you in advance!",
        "score": 28,
        "upvote_ratio": 0.74,
        "num_comments": 46,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kr7uoi/i_want_to_learn_coding/",
        "created_utc": 1747755183.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kr62yx",
        "title": "How can I let my client edit their website content without touching code? (I’m a beginner)",
        "author": "destinaah",
        "subreddit": "learnprogramming",
        "content": "Hey everyone,\nI’m pretty new to web development and just finished coding a website for a client (he runs a small driving school). Right now, it’s just a simple static site (HTML/CSS/JS), and I deployed it on Netlify.\n\nNow he wants to be able to change text on the site himself — like edit paragraphs, titles, or service descriptions — without asking me each time or having to touch any code.\n\nI’ve heard about things like Netlify CMS and headless CMSs in general, but I’m still a bit confused about:\n\n\t•\tHow non-technical-friendly Netlify CMS actually is for a client?\n\n\t•\tWhether it’s really free to use (for one client)?\n\n\t•\tIf it’s the best option for simple use cases like this?\n\nI just want to give him a clean admin panel where he can log in and update text without breaking anything. I’d really appreciate your advice, tips, or examples if anyone has done this before — especially something beginner-friendly.\n\nThanks in advance!\n",
        "score": 23,
        "upvote_ratio": 0.78,
        "num_comments": 33,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kr62yx/how_can_i_let_my_client_edit_their_website/",
        "created_utc": 1747750887.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvwaqd",
        "title": "freeCodeCamp or TheOdinProject?",
        "author": "Plus-Strength-3053",
        "subreddit": "learnprogramming",
        "content": "I am a complete beginner, literally no knowledge or background about programming. I did some research on free courses on the internet and these two - freeCodeCamp and TheOdinProject - are the ones where I don't feel so lost lol\n\nFor some background, I want to focus as a web developer (fullstack)\n\nSo, which course should I take? The freeCodeCamp (the Certified Full Stack Developer Curriculum) or the full curriculum of TheOdinProject?\n",
        "score": 27,
        "upvote_ratio": 0.97,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvwaqd/freecodecamp_or_theodinproject/",
        "created_utc": 1748271068.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kv1udw",
        "title": "What language to learn for getting a job with less competition",
        "author": "Swoyer12",
        "subreddit": "learnprogramming",
        "content": "Hi,\n\nI'm a recent math grad and have been trying to get a job in the programming field, I have 4+ years experience with python, around a year of experience with C and SQL.\n\nI have been struggling finding a job and am curious if the fact that the languages I know are so common, if that could be hurting my odds. I was wondering if learning a less known but still used language would be a good idea. I was thinking something like Rust or maybe an older language that still is used in industry but not taught as much in academia. \n\nI would appreciate any thoughts, and am very open to the idea that I'm just wrong :)",
        "score": 24,
        "upvote_ratio": 0.73,
        "num_comments": 38,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv1udw/what_language_to_learn_for_getting_a_job_with/",
        "created_utc": 1748177653.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksq0jt",
        "title": "Computer Science graduate not sure what to do next",
        "author": "VibePoliceKing",
        "subreddit": "learnprogramming",
        "content": "Hi,\n\nI am a computer science student, graduating at the start of July. I completed a placement year at a company, using C# the whole year, however, I am finding it difficult to secure a job right now.\n\nI am also not great at doing the interview questions leetcode provides. Is there anyone who has some advice as to how to get a job and what I should do/language I should learn instead of c#. I am using freecodecamp at the moment to try and sharpen my skills.\n\nAll help appreciated.",
        "score": 23,
        "upvote_ratio": 0.83,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksq0jt/computer_science_graduate_not_sure_what_to_do_next/",
        "created_utc": 1747918625.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krct2u",
        "title": "As an experienced JavaScript developer looking to expand my skill set, which language would be most beneficial to learn next: Go, Python, or Java?",
        "author": "Hot_Tie2783",
        "subreddit": "learnprogramming",
        "content": "I’ve been working professionally with JavaScript for several years now, mainly in full-stack development using frameworks like React, Node.js, and Express. Now, I’m looking to broaden my horizons by learning a new programming language that not only complements my current skill set but also helps me grow professionally.  \nwhich language would be most beneficial to learn next: Go, Python, or Java?",
        "score": 25,
        "upvote_ratio": 0.88,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krct2u/as_an_experienced_javascript_developer_looking_to/",
        "created_utc": 1747766882.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktsh09",
        "title": "I want to get into computer programming but I don't know where to start",
        "author": "Top_Librarian_2813",
        "subreddit": "learnprogramming",
        "content": "I majored in theatre but I started playing around with Lua in my last semester. Pretty basic code I know, but I really think I could find myself getting into this stuff. I dabbled a lot with it in middleschool through making games but I was discouraged into really getting into it due to some pretty awful bullying I experienced from friends (who actually ended up going into cs). If anyone could give me advice as to where I can start or what sort of applications I could use...that would be lovely!",
        "score": 21,
        "upvote_ratio": 0.88,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktsh09/i_want_to_get_into_computer_programming_but_i/",
        "created_utc": 1748028936.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krpbes",
        "title": "I'm 16 and interested in getting into cyber security/ethical hacking",
        "author": "Stock-Reaction2393",
        "subreddit": "learnprogramming",
        "content": "I currently have nearly no experience besides knowing how to use a computer and watching a couple youtube videos on what i should look into. I just wanna know what skills I need to work on and learn and what paths I should take in high school/college to get a grip on it.",
        "score": 21,
        "upvote_ratio": 0.69,
        "num_comments": 44,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krpbes/im_16_and_interested_in_getting_into_cyber/",
        "created_utc": 1747802195.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kqsuv0",
        "title": "My Motivation to Become a Programmer",
        "author": "nosredna21",
        "subreddit": "learnprogramming",
        "content": "As a 28 years old man, I am going to tell you guys the reasons why I want to be a programmer and please let me know what you guys think about it:\n\n1. I love learning new things. I constantly have to learn something and I do not care if it is about a social science, scientific science or about astrology, history, feminism. So I think that coding enables me to satisfy that curiosity \n\n2. I’m drawn to the kind of routine a programmer can have.; I like spending time in front of a computer, I like office work, remote work; I especially appreciate the flexibility that tech jobs often provide\n\n3. Although it can be hard to handle frustration, I like being challenged by a problem\n\n4. Another important reason is the financial stability that programming can offer.\n\n5. I genuinely enjoy coding\n\nI have been learning Python for 4 months; I am very interested in data science, data analysis, machine learning and back-end development. I am not sure if these reasons alone are enough to guaranteed success, but I am determined to make happen ",
        "score": 22,
        "upvote_ratio": 0.92,
        "num_comments": 29,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kqsuv0/my_motivation_to_become_a_programmer/",
        "created_utc": 1747704404.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kv9jgu",
        "title": "Feeling stuck as a Java developer due to weak fundamentals — need guidance",
        "author": "Nika_00_11",
        "subreddit": "learnprogramming",
        "content": "Hi everyone,\nI'm a 24-year-old Java developer with around 4 years of experience in web development. Lately, I’ve come to realize that my fundamentals in programming—especially data structures and problem-solving—aren’t as strong as they should be. I feel like this gap is holding me back from reaching the next level in my career.\n\nI’ve finally accepted this and I really want to work on it, but I’m confused about how to go about it. It feels tough to look back and rebuild the basics after coming this far, but I know it’s necessary.\n\nCan anyone suggest a practical roadmap or approach to strengthen my core programming and problem-solving skills? Any resources, habits, or tips that worked for you would be greatly appreciated.",
        "score": 23,
        "upvote_ratio": 0.85,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv9jgu/feeling_stuck_as_a_java_developer_due_to_weak/",
        "created_utc": 1748197879.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktcoaf",
        "title": "Am I extremely behind and is it too late to catch up?",
        "author": "bullet_ballet_",
        "subreddit": "learnprogramming",
        "content": "Junior year CS undergrad student and realizing that I might not be cut out for this. For providing context to my concern, these are the courses I’ve had so far: \n\nFoundation of Comp Sci I & II, Data Struct & Alg, Assembly Lang, Discrete Math I & II, Calc I\n\nAnd I will be taking these courses in the upcoming semester:\nComp Sys Fundamentals, Calc II, Object Oriented Prog, Comp Sys Architecture\n\nI have seen my peers taking on hackathons, programming projects, creating apps, glorifying their githubs etc all while Im here barely understanding C++\nMy problem is I get the concept of things but I suck at implementation. Like I can learn and know the basic functions of a programming language but if you ask me to make something out of it Im totally blank. It’s so embarrassing because I am not even eligible for internships because I don’t know how to code anything while sophomores are out here landing Amazon SDE internships in my courses. Where do I even go from here? People tell me to make projects but I don’t even know how to work github. Im like a one year old in the world of comp sci despite only having 1 year left to complete my degree. Who will even hire me once I graduate when I don’t know how to do anything. Am I too dumb for comp sci? Honestly I don’t even know how I’ve made it this far. ",
        "score": 21,
        "upvote_ratio": 0.82,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktcoaf/am_i_extremely_behind_and_is_it_too_late_to_catch/",
        "created_utc": 1747981506.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvhdyr",
        "title": "why am I not getting better",
        "author": "Repulsive_Act_5491",
        "subreddit": "learnprogramming",
        "content": "I got probably the lowest score in a class of 200 people on my first data structures and algorithms midterm and then despite working my ass off and improving 33%, still failed my second midterm. I went to professor and TA office hours, did and redid worksheets and practice tests, and went to peer tutoring. I don't even know where else to start improving. Also the teacher's lectures are all prerecorded which for some reason make it hard for me to understand. I think the content is interesting and despite being bad at it I still like CS, so I don't know what I should do now. ",
        "score": 18,
        "upvote_ratio": 0.8,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvhdyr/why_am_i_not_getting_better/",
        "created_utc": 1748219698.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvewfd",
        "title": "Is the GeeksforGeeks DSA (Algorithms & Data Structures) section still bad?",
        "author": "Mother-Ad-6297",
        "subreddit": "learnprogramming",
        "content": "\nfour years ago a reddit post highlighted issues with the problem solutions on GeeksforGeeks and shared three links as examples\n however when I check those links now, I don't see any problems\nit seems geeksforgeeks has been updating these tutorials since 2024\n\ndespite this does learning from geeks4geeks worth?\n If not, could you recommend similar platforms which\ncategorize algorithmic topics clearly\nprovide complete tutorials for each problem \nallow testing code directly on the platform?  \n\n\n\nThanks in advance!\n",
        "score": 19,
        "upvote_ratio": 0.85,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvewfd/is_the_geeksforgeeks_dsa_algorithms_data/",
        "created_utc": 1748212186.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krouk0",
        "title": "Programming in other fields",
        "author": "CheekSpiritual5639",
        "subreddit": "learnprogramming",
        "content": "Recently, I've been gone through the course for university and found out that many engineering program requires programming skills. So here's my question: what are the differences between the programming you learn in CS and in other engineering fields. Also, although I'm a beginner in programming, but I do find it fun. However, the knowledge you learn in CS are not only just programming: data structures, data algorithm, statistics, linear algebra, compilers etc. How do you apply these knowledges in workplace? And do you recommend me to do CS or engineering?",
        "score": 19,
        "upvote_ratio": 0.95,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krouk0/programming_in_other_fields/",
        "created_utc": 1747800530.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvdhw3",
        "title": "Advice on escaping tutorial hell",
        "author": "Healthy-Version8841",
        "subreddit": "learnprogramming",
        "content": "Just tried building a portfolio but realized I couldn't write any code outside what was shown in tutorial video. advice on how to make it on my own",
        "score": 17,
        "upvote_ratio": 0.92,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvdhw3/advice_on_escaping_tutorial_hell/",
        "created_utc": 1748208268.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kumrjp",
        "title": "Is my university unreasonable for asking us to do this project?",
        "author": "MikyMuch",
        "subreddit": "learnprogramming",
        "content": "So basically, I'm studying first year of CS, we're at the end of the year and we learnt about the basics of c++, using simple data structures like maps, or binary trees, or lists, pointers , and classes.\n\n  \nAs a part of a final project we have been tasked to create a Finder class that accepts pointers to any type of object. It assumes the object has a get rectangle function that gives it's left, right, top and bottom coordinates. It must be able to add, erase, and update the positions.\n\nThe last function  must return a set that contains the pointers to the objects that are inside or intersect with a given rectangle. and the problem is we have to do it in O(log n) with n being the number of rectangles on the container.\n\nIn my research I've found that to accomplish  this I've gotta use complex (at least for me) data structures like rtrees or quadtrees, which doesn't seem very reasonable to me. And we haven't been given any more guidelines how or what we can and cannot do. Do you guys think I should investigate and implement one of these tree structures? Or is there a simpler alternative?\n\nThanks in advance to everyone.\n\n\nUpdate: I wasn't expecting this many responses, wow. So I took your advice and spent the whole day learning and implementing this quad tree fucker because I had to deliver it for today, it works and all the automatic test give the ok. And within the two weeks we had to do this I started to do it yesterday because I'm too lazy.\nI asked my friend and it seems most people have implemented a grid system with maps, but the tree seems to be better and more elegant \nI learnt a lot today so, again, thanks.",
        "score": 17,
        "upvote_ratio": 0.78,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kumrjp/is_my_university_unreasonable_for_asking_us_to_do/",
        "created_utc": 1748123367.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktflsh",
        "title": "Industry level Code",
        "author": "Sweaty_Interest_8774",
        "subreddit": "learnprogramming",
        "content": "How did you people learn to write code. I know practice makes code better but as a beginner how can one learn to write code. For example take the case of a web app MERN for example How to know to structure the backend code. They dont teach such stuff in uni and dont want to get stuck in tutorial hell. So how can i learn to structure my Web app",
        "score": 16,
        "upvote_ratio": 0.87,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktflsh/industry_level_code/",
        "created_utc": 1747993988.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kt2r9g",
        "title": "What is the best way to learn new frameworks/libraries/languages in 2025?",
        "author": "Wooofed",
        "subreddit": "learnprogramming",
        "content": "Hey all,\n\nI'm a new computer science grad this May 2025. I'm looking for some perspective on how to approach this topic moving forward. Through research, I've learned that most senior developers learn new frameworks and such from reading the documentation and playing around with them in their code environments. This is the root of my question. How are you guys learning new technologies? Is your learning largely based on using AI? How much code is AI writing for you?\n\nLooking forward to hearing your perspectives on this. Also, any other perspectives you might share?\n\nThanks",
        "score": 18,
        "upvote_ratio": 0.86,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kt2r9g/what_is_the_best_way_to_learn_new/",
        "created_utc": 1747949911.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvtilp",
        "title": "Complete novice here. How far into learning C++ should I start learning python?",
        "author": "Far-Mind140",
        "subreddit": "learnprogramming",
        "content": "My current long-term goal is learning python, but I don't really like not knowing how things work \"under the hood\", so I thought I should learn C++ first since I heard it's going to be easier to learn python afterwards anyway.\n\nIs there even an advantage to doing this? Or am I just unnecessarily lengthening my timeline?\n\nEdit: I still would like to learn C++, I'm just having second-thoughts on which language to learn first.\n\nEdit 2: Thanks for the reply guys, I already have my questions answered.",
        "score": 15,
        "upvote_ratio": 0.7,
        "num_comments": 35,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvtilp/complete_novice_here_how_far_into_learning_c/",
        "created_utc": 1748263727.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvkbt7",
        "title": "Learning Javascript for 3 weeks in bootcamp, still not able to apply it to real-project. No coding background. Any advice?",
        "author": "Left_Story5591",
        "subreddit": "learnprogramming",
        "content": "I have started my coding journey 3 weeks ago in a bootcamp. It was fun in the beginning. But I'm struggling now as it started to required us to build a webpage/app from scratch. Any advice from the experienced? I'm feeling so demotivated now.",
        "score": 16,
        "upvote_ratio": 0.81,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvkbt7/learning_javascript_for_3_weeks_in_bootcamp_still/",
        "created_utc": 1748229495.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krbjng",
        "title": "i don't know if i like web dev anymore",
        "author": "DoctorTenmathis",
        "subreddit": "learnprogramming",
        "content": "been doing web dev for 3 years. it was fine at first, but now i just force myself to do projects. i don’t even care if i understand the code — i just use cursor/ai to finish stuff and move on.\n\ni’ve tried everything to be more productive, but i can never get to the level of those passionate devs who seem to love every second of it.  \ni’m starting to wonder if i ever actually liked it or if i’m just stuck in it.",
        "score": 16,
        "upvote_ratio": 0.78,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krbjng/i_dont_know_if_i_like_web_dev_anymore/",
        "created_utc": 1747763873.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kuyfqt",
        "title": "Is CSS \"kinda\" confusing.",
        "author": "Typical-Life-216",
        "subreddit": "learnprogramming",
        "content": "so after messing around with web dev, I was able to understand html (basic). when i moved to css things got little interested and messy tbh. Is css like this or is there a better way to work around and learn css more  efficiently.",
        "score": 17,
        "upvote_ratio": 0.77,
        "num_comments": 37,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuyfqt/is_css_kinda_confusing/",
        "created_utc": 1748164915.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kshfdb",
        "title": "I’m worried",
        "author": "Affectionate_Sea_758",
        "subreddit": "learnprogramming",
        "content": "I’m studying computer engineering I’m in my third year and I have a worried, I’m learning how to programming and language of programming but chat gpt can do all the things that I’m learning and normally without any mistake. My fear is fishing my career and be replaced for the IA. I want to now their thoughts ",
        "score": 16,
        "upvote_ratio": 0.7,
        "num_comments": 34,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kshfdb/im_worried/",
        "created_utc": 1747885819.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kru5yb",
        "title": "What programming language to learn?",
        "author": "IQMATIC",
        "subreddit": "learnprogramming",
        "content": "Hi I started to leearn the basics of python and I am wondering what programming language I should learn.   \nWhat language has the best perspectives in the job market as a developer?  \nOpen to suggestions and discussions.",
        "score": 13,
        "upvote_ratio": 0.7,
        "num_comments": 40,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kru5yb/what_programming_language_to_learn/",
        "created_utc": 1747822121.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kv6cvk",
        "title": "How can I encourage my coding students to try coding contests? I think it would sharpen their skills.",
        "author": "Complete-Swim-2304",
        "subreddit": "learnprogramming",
        "content": "For many years, I have been teaching kids to code (ages 6–18), and I’m always looking for ways to help my students improve. I’m convinced that competitive programming offers a fantastic opportunity for them to sharpen their coding skills and boost their problem-solving abilities, confidence, and creativity. The problem is, most of them seem hesitant to even try or aren’t enthusiastic about it. Any advice or insights you could share?",
        "score": 12,
        "upvote_ratio": 0.85,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv6cvk/how_can_i_encourage_my_coding_students_to_try/",
        "created_utc": 1748189790.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktvzm2",
        "title": "Do you program in a different language when studying than the one you use at work?",
        "author": "Jinbouu",
        "subreddit": "learnprogramming",
        "content": "I’ve been thinking about getting back into studying programming (not a specific language, but revisiting some foundational concepts), but I wouldn’t want to use Java for it. It’s the language I use at work, and I consider myself a junior/mid-level developer in it, but the mere thought of programming in Java in my free time makes me nauseous. I’m considering either going back to Python (haven’t written any in about 6 months) or learning Go and studying those concepts while I pick up Go. At first, I won’t be using either Python or Go at work, so it would just be for studying in my free time. So here’s the question:\n\n1. In your free time, do you use a different language than the one you use at work, or do you stick with the same one to stay sharp?\n2. Should I stick with Java to improve as a Java developer, or could switching tools be a good idea? ",
        "score": 14,
        "upvote_ratio": 0.9,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktvzm2/do_you_program_in_a_different_language_when/",
        "created_utc": 1748038055.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ks7yy6",
        "title": "first time programming. What is wrong?",
        "author": "VastPossibility1117",
        "subreddit": "learnprogramming",
        "content": "Hello,\n\nI am simply trying to code HelloWorld but get this error message. What could be wrong?\n\n  \n[https://imgur.com/a/BKKoLC1](https://imgur.com/a/BKKoLC1)",
        "score": 12,
        "upvote_ratio": 0.89,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ks7yy6/first_time_programming_what_is_wrong/",
        "created_utc": 1747858699.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kr0ku2",
        "title": "I'm confused about the future...",
        "author": "shountyplayz",
        "subreddit": "learnprogramming",
        "content": "Hi y'all, I'm in 9th grade and love programming. A few days ago, I won a robotics competition and discussed with my dad about the future of programming. His view is that in the next 5 years, programmers won't be necessary due to AI, and robotics will be a growing field, as people would want robots to replace their labor workers, which robots can do... \n\nBut I'm not sure if I want to straight up quit programming and shift to robotics, as I already completed my frontend (JS, HTML, CSS, React) along with Python basics and C++. soon so learn node, sql-nosql, and Express... \n\nWhat should I do? Should I continue programming this, or should I maybe work on neural networks, or should I just focus on robotics???",
        "score": 11,
        "upvote_ratio": 0.71,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kr0ku2/im_confused_about_the_future/",
        "created_utc": 1747733189.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvsbws",
        "title": "Is it good practice to have a polling system connected to some endpoint every x seconds or so to save the user's data to the database?",
        "author": "5Ping",
        "subreddit": "learnprogramming",
        "content": "Im new to backend side of things, but if you want to save the current user at all times is polling a good way to do that? For example on the frontend id have a setinterval under a use effect that does a post request to the appropriate endpoint that does the query for saving the data in the db.\n\nIs this good practice? What are alternatives of always syncing a users data to the db? Also for polling is it common for people to add like a warning sign if a user tries to exists off and they still have unsynced changes due to the setinterval timer not getting hit?",
        "score": 11,
        "upvote_ratio": 0.93,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvsbws/is_it_good_practice_to_have_a_polling_system/",
        "created_utc": 1748259988.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kuizhl",
        "title": "Just started learning to code — everything feels overwhelming but also kinda exciting?",
        "author": "DeathFoeX",
        "subreddit": "learnprogramming",
        "content": "Hey all! I’m a beginner IT student and just getting my feet wet with programming. Honestly, sometimes it feels like I’m drowning in all the new stuff — languages, frameworks, best practices — but then I build something tiny that actually works and I’m like, “Whoa, maybe I got this?” What helped you not freak out when starting out? Any tips for a total newbie?",
        "score": 11,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuizhl/just_started_learning_to_code_everything_feels/",
        "created_utc": 1748112902.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku07tt",
        "title": "Expired certificate on jetbrains IDEs",
        "author": "Red_Birdly",
        "subreddit": "learnprogramming",
        "content": "Today i randomly got a popup on both jetbrains IDEs i had saying that the server's certificate has expired  \nServer address: [analytics.services.jetbrains.com](http://analytics.services.jetbrains.com) (port 443)  \nIt says that it is unsafe to connect to the server, what do i do? This popup keeps appearing every 10 or something minutes",
        "score": 13,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku07tt/expired_certificate_on_jetbrains_ides/",
        "created_utc": 1748050783.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ks78hj",
        "title": "Really need advice",
        "author": "decode_r",
        "subreddit": "learnprogramming",
        "content": "I am about to graduate in 2027 and from past 2 years (1st and 2nd year) I haven't did anything in my college. I am average at coding, no development, no hackathons, average cg just wasted time with friends and on screen. \n\nI had 2 months vacations right now and I really want to change things, but don't know how to start and what should I do.\n\nPlease help me to make these vacations useful as there is going to be internship season in my college just after this vacation.",
        "score": 12,
        "upvote_ratio": 1.0,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ks78hj/really_need_advice/",
        "created_utc": 1747856933.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krfekx",
        "title": "What projects should I do as a beginner of java",
        "author": "New-Profession9731",
        "subreddit": "learnprogramming",
        "content": "Hi,\n\nIve been learning java over the past year and have just finished my first year of computer science. \n\nI have learned the basics and fundamentals of java and OOP.\n\nI feel that I'm decent at coding but also not that good at times and want to do projects to understand better. When I see people talking about projects they talk about Java swing and others but I've been told that learning java swing now is not that useful.\n\nAnd as java swing is for gui's and frontend too which would be better for me to learn HTML,css,Js or Java swing because I want to more go into back end development but also want to know how to do frontend if I ever want to build an app.\n\nI was thinking to learn Springboot but I'm not sure if I should already start it or learn something else before.\n\nCould anyone guide me/give me advice?\n\nSorry for the confusion",
        "score": 10,
        "upvote_ratio": 0.83,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krfekx/what_projects_should_i_do_as_a_beginner_of_java/",
        "created_utc": 1747773162.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kr0uqi",
        "title": "Reliable online HTML IDE without login?",
        "author": "Gavus_canarchiste",
        "subreddit": "learnprogramming",
        "content": "Hi,  \nI'm teaching website development to high school beginners (about 15 yo).  \nDespite my efforts, I couldn't find an online HTML IDE with the specific requirements:\n\n1. no account creation needed\n2. preview available\n3. the files should be accessible by link\n\n[onecompiler.com](http://onecompiler.com) seemed perfect but it's unreliable (a quarter of my students got issues with the links that kept being modified erratically, or random 401 errors; I couldn't find a fix).\n\nIf I'm asking too much, requirement 1 can be ditched if the login procedure is simple and reliable (looking at you, glitch.com).\n\nThanks a lot for your help, have a nice day.  \nEdit: jsfiddle it is!",
        "score": 12,
        "upvote_ratio": 0.88,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kr0uqi/reliable_online_html_ide_without_login/",
        "created_utc": 1747734353.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kw3e0u",
        "title": "What made front end development easier for you?",
        "author": "driverone1013",
        "subreddit": "learnprogramming",
        "content": "I’m mostly a backend developer, and I occasionally have to work on frontend vue components. Whenever I start working on a personal project or anything front end, my brain just starts to melt with how complicated it starts to get. \n\nLike it can take me 30 minutes to get the layout how I want it but by the end of it I have no clue how my concoction of css and bootstrap made it work.\n\nI’m not sure if it’s just my mindset but I get frustrated that just setting up a button to handle a click takes me longer than all the backend coding.\n\nIm assuming the answer to this is going to be I just need to practice frontend development more but are there any tips anyone could give me to make it less painful?\n",
        "score": 12,
        "upvote_ratio": 0.93,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw3e0u/what_made_front_end_development_easier_for_you/",
        "created_utc": 1748288168.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kv5isk",
        "title": "If I am a complete beginner and starting CS50 what is the further route?",
        "author": "Zealousideal_Ice9136",
        "subreddit": "learnprogramming",
        "content": "I am doing cs50 right now but I am like how to reach to competitive programming level and like Ik cs50 will give me a over-all idea of the coding field but still what are other course to check out",
        "score": 8,
        "upvote_ratio": 0.71,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv5isk/if_i_am_a_complete_beginner_and_starting_cs50/",
        "created_utc": 1748187642.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktl0fg",
        "title": "Learning programming",
        "author": "glizzykevv",
        "subreddit": "learnprogramming",
        "content": "Hey guys so I’m trying to learn c++ currently taking a class for it in college but I was wondering am I expected to just know all the syntax and keyword commands and stuff ? \n\nThere is so many commands and ways to use them it’s very overwhelming I remember one person telling me that you are expected to know the syntax and keywords by memory but how did you guys even learn of them all how did you go about learning how to program ?",
        "score": 11,
        "upvote_ratio": 0.91,
        "num_comments": 37,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktl0fg/learning_programming/",
        "created_utc": 1748010630.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kqsmt2",
        "title": "What’s the best way to start learning secure coding practices early as a beginner?",
        "author": "Minute-Kitchen5892",
        "subreddit": "learnprogramming",
        "content": "I’ve been learning programming for a while now, mostly web development (JavaScript, Python, and some SQL). Recently, I came across the idea of “secure coding,” and it got me thinking: why don’t beginner tutorials emphasize security more?\n\nA lot of beginner-friendly content focuses on syntax, logic, and building fun projects, which is great—but I’ve never once seen a course say *“here’s how to prevent XSS”* or *“this is why storing passwords in plain text is a terrible idea.”*\n\nSo I wanted to ask the community:\n\n* At what point in your learning did you start thinking about security?\n* Are there specific concepts or practices that beginners should learn *early* rather than later?\n* Any recommended resources or mental models that helped you understand the importance of secure coding?\n\nI’ve started checking out some content from EC-Council, it seems like they focus heavily on cybersecurity and ethical hacking. That’s a bit ahead of where I am right now, but it got me wondering if there’s a more beginner-friendly path to learning secure coding practices from the start.",
        "score": 8,
        "upvote_ratio": 0.84,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kqsmt2/whats_the_best_way_to_start_learning_secure/",
        "created_utc": 1747703725.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksrxuf",
        "title": "Im in high school and want to learn",
        "author": "Fit-Step-7892",
        "subreddit": "learnprogramming",
        "content": "Im currently in high school and want to learn how to code, can you guys tell me how and what programming language i should learn as a newbie, also which  degree is better compsci or compengr.",
        "score": 8,
        "upvote_ratio": 0.76,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksrxuf/im_in_high_school_and_want_to_learn/",
        "created_utc": 1747923665.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krv16b",
        "title": "Beginner question: Did I go overboard splitting CSS into so many files? (screenshot inside)",
        "author": "EnricoFiora",
        "subreddit": "learnprogramming",
        "content": "Hey everyone,\n\nSuper beginner here (apologies in advance if this sounds dumb).  \nA bit of context, my dad was a programmer for the Romanian naval systems. He passed away a while ago, but he left behind this old coding book he wrote notes in. I’ve been learning from it, bit by bit, trying to make sense of how to build stuff from scratch.\n\nNow I’m trying to make my own web project (“Obscuria Terminal”, don’t laugh, I know it sounds dramatic 😂). Instead of putting everything in one CSS file, I ended up splitting it into a bunch of smaller files like `header.css`, `utilities.css`, `modals.css`, and so on.  \nHere’s a screenshot of what my VS Code looks like:\n\n[https://prnt.sc/eauZsZQNvkXP](https://prnt.sc/eauZsZQNvkXP)\n\nI just thought it would be easier to keep things organized, but now it feels like maybe I’m making it harder for myself?\n\nSo here are my questions:\n\n* Is this normal, or way too much for a beginner?\n* Is this something actual devs do, or am I going down the wrong path?\n* Would you have stuck with one big CSS file instead, or split things up differently?\n\nSorry if this sounds clueless. Just want to make sure I’m not starting out with bad habits.  \nThanks for reading and for any advice you can share!",
        "score": 7,
        "upvote_ratio": 0.9,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krv16b/beginner_question_did_i_go_overboard_splitting/",
        "created_utc": 1747825428.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kw6t6b",
        "title": "I developed a todo GUI using only C and the Win32 API. I'm open to suggestions and contributions.",
        "author": "efe17ckc",
        "subreddit": "learnprogramming",
        "content": "[https://github.com/Efeckc17/simple-todo-c](https://github.com/Efeckc17/simple-todo-c) \n\n",
        "score": 7,
        "upvote_ratio": 0.82,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw6t6b/i_developed_a_todo_gui_using_only_c_and_the_win32/",
        "created_utc": 1748296783.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kt48sm",
        "title": "Help with start of code",
        "author": "Vegetable-Peach2676",
        "subreddit": "learnprogramming",
        "content": "I’m in my second bootcamp, and we’re currently learning Python. But I find that my main issue, across languages, is starting the code. For instance, when given a problem to solve, even after writing out an outline, I still struggle with how to write the first line of code which would help to write the rest. Does anyone have any best practices or suggestions for how to narrow down the best way to start? Sorry if this seems vague or stupid and I know a big part of it is understanding the functions, syntax, etc and I do on a basic level to solve the basic problems I’m given, but usually can’t start without looking at someone else’s code and that’s making me doubt myself tremendously. Thanks in advance ",
        "score": 6,
        "upvote_ratio": 0.76,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kt48sm/help_with_start_of_code/",
        "created_utc": 1747953871.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kqsiaf",
        "title": "Career guidance",
        "author": "awa_brki",
        "subreddit": "learnprogramming",
        "content": "Hi everyone,\nI’m Abdul Waheed, a final-year CS student graduating this summer. I’m currently learning Flutter + backend, planning to move into Cloud Engineering and DevOps.\n\nBut I’m confused between this path and Cybersecurity or AI/Data Science, especially with so much hype around these fields. I rarely hear about Flutter’s future, which makes me anxious.\n\nPlease help me decide:\n\nShould I continue with Flutter → Backend → Cloud/DevOps?\n\nCan I learn Cloud or DevOps without backend experience?\n\nIs Cybersecurity better? What are the pros, cons, and learning challenges?\n\n\nI’d love to hear real advice from working professionals or experienced learners about:\n\nJob demand, future scope, and AI risk\n\nLearning difficulty and required skills\n\nWhich path suits someone who wants financial freedom and international work opportunities (UK, US, etc.)\n\nThanks in advance for guiding me like a younger brother!\n",
        "score": 9,
        "upvote_ratio": 0.91,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kqsiaf/career_guidance/",
        "created_utc": 1747703350.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kw4fqy",
        "title": "6 Months into Learning Python & Software Engineering — Not Sure What to Learn Next (SaaS & AI Goals",
        "author": "Mitchellholdcroft",
        "subreddit": "learnprogramming",
        "content": "Hey everyone,\n\nI’m about 6 months into learning Python and software engineering. I’ve built a few small projects, covered the fundamentals, and dipped into areas like web scraping, basic Flask apps, and some data manipulation with pandas.\n\nRight now, I feel like I’m at a bit of a crossroads. My long-term goal is to be able to:\n\t•\tBuild and launch SaaS products solo or with a small team\n\t•\tEventually create AI agents that can interact with data or perform tasks intelligently\n\t•\tBecome a really solid software engineer before diving too deep into advanced AI work\n\nI’m trying to map out the most effective learning path from here. I don’t want to rush into building AI stuff without a strong foundation. But I also don’t want to get stuck in “tutorial purgatory” or waste time on things I don’t need yet.\n\nA few things I’m wondering:\n\t•\tWhat areas of software engineering should I focus on next if my goal is to build real, scalable products (like SaaS)?\n\t•\tHow do I transition from learning to building things that people actually use?\n\t•\tWhen is a good time to dive into AI/ML agent development?\n\t•\tHow do you know you’re “ready” to work on these more complex systems?\n\nAlso, if you’ve been down this road yourself and wouldn’t mind being a bit of a mentor (even informally), I’d be super grateful. Just having someone to bounce questions off would be a huge help.\n\nAppreciate any thoughts, advice, or resources you can share.",
        "score": 6,
        "upvote_ratio": 0.75,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw4fqy/6_months_into_learning_python_software/",
        "created_utc": 1748290814.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ks61v4",
        "title": "Is there a way to verify file accuracy after creating a zip file?",
        "author": "rawaka",
        "subreddit": "learnprogramming",
        "content": "Hello. I have been making a VB .Net WinForms app to archive project directories at work to a different storage raid by scanning all the files/folders recursively and ensuring everything is older than a specified date. It then copies the files to our archive drive. then, it does a binary comparison of the source and copied files to ensure everything was 100% successful before deleting the source file. All that functionality works PERFECTLY. (Picture a shared drive full of folders, each of which is a complete project. If no changes have happened to a project in at least a year, it's safe to archive. Stuff on the archive drive is read-only for most of the company to keep it safe for record keeping and not cluttering up daily work)\n\nFor the next phase, I want it to go through that archive drive and put all the archived directories into compressed files (Zip or 7Zip). So, each project folder becomes its own zip file. Our data is highly compressible, and we can save about 30% space by compressing files that we don't need to be regularly accessing.\n\nI see that this line of code easily creates the zip file for me:\n\n    System.IO.Compression.ZipFile.CreateFromDirectory(FolderPath, OutputZipPath, CompressionLevel.SmallestSize, True)\n\nMy questions are:\n\n* Is there a way to verify the file accuracy after zipped before I delete the source files?\n   * I may be over-cautious, but I don't want to risk any file corruptions\n* Is there a different way to compress folders that I should research?\n   * I did my proof-of-concept testing using a batch file that triggered 7zip, but I prefer to keep everything integrated into a single program if possible unless there's a good reason not to.\n\n  \n\n\nedit: minor error: i flipped the percentage of saved space, sorry. they compress to 70% of original size, saving 30%.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ks61v4/is_there_a_way_to_verify_file_accuracy_after/",
        "created_utc": 1747854059.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krkqdk",
        "title": "Code formatting",
        "author": "post_hazanko",
        "subreddit": "learnprogramming",
        "content": "Do you think separating lines is too much. I separate blocks of code for readability.\n\nFor example in JS if I have:\n\n```\nfunctionCall();\n\nvarAssign = 'thing';\n\nanotherFcnCall();\n\nblockOfCode({\n...,\n...\n});\n```\n\nVs.\n\n```\nfunctionCall();\nvarAssign = 'thing';\nanotherFcnCall();\n\nblockOfCode({\n...,\n...\n});\n```\n\nWhere the three lines are together despite being different eg. method call vs. assignment.",
        "score": 8,
        "upvote_ratio": 0.83,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krkqdk/code_formatting/",
        "created_utc": 1747787470.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krgbw2",
        "title": "How could I make a python program into a desktop/modible app?",
        "author": "TerraPixelYT",
        "subreddit": "learnprogramming",
        "content": "I'm a first year CS student and I wanted to use the python skills I've learned to develop an app to track the videogames I play. I am fine with coding a python program that I can interact with on the command line for this, but I was just wondering how would be best to turn it into an app that I can have on my desktop and phone?\n\nI saw that I could use flask to turn it into a website, and then turn it into a web app for mobile from there, but is this the best way to go about it, or are there other routes that I am missing? \n\nI covered a bit of flask this year, but I would need to do a lot of learning abut CSS & HTML to be able to fully implement the program as a website. I would be happy to do this but I wanted to check if there were any other routes I should go down instead before comitting to Flask.",
        "score": 7,
        "upvote_ratio": 0.83,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krgbw2/how_could_i_make_a_python_program_into_a/",
        "created_utc": 1747775457.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krdg5h",
        "title": "Want to start a new career programming",
        "author": "Sea-Journalist2524",
        "subreddit": "learnprogramming",
        "content": "About 2 years ago, I found a process at work using a Google Sheet way too complicated and wanted to automate it, so I started with playing about in Apps Script and solved that problem at work, found out I really liked this stuff and that I'm good at logical problem solving.\n\nI've since learned quite a bit of JavaScript and automated a bunch more stuff at work using the API's that our systems offer, to the point where I basically came up with the idea to create a centralised software that connects all of our systems together using all their API's and data. I did not do that personally, our IT guy did, but I came up with the vision etc and I put in a few lines of code myself but will not take credit for what he's done.\n\nI've completed Foundational C# with Microsoft/freeCodeCamp and I'm like halfway through Harvard's free CS50 course.\n\nI'm still quite unfamiliar with Git or GitHub, but I kind of know how it's used and what it's purposes are.\n\nI really feel like I would be happy doing this as a career, but I am now 31 and I don't have a CS degree under my belt, I have a music production degree instead. How hard will it be to change careers to a programming one? I know I like more of the backend, logical problem solving. I'm not a big fan of designing websites using HTML/CSS although I'm somewhat familiar with them and would learn them more thoroughly quite quickly should I need to.\n\nI also have just had my first child last year and don't want to take too much of a paycut, I'm currently earning like 32k a year (this is in the UK) and maybe for the sake of it I'd go down to 28k but starting a programming job for 25k is a bit out of the question for me at the moment I feel, due to family commitments.\n\nCould anyone give me some words of advice please and maybe encouragement lol. I feel like I've been learning for so long and I want the ball to start rolling, as I know working in this field will only speed up my learning.\n\nShould I just start applying for jobs and see if can get anything or listen to their feedback? How hard are these interview coding problems I hear about? Got so many questions I can't even fit them all here.\n\nI'd appreciate any words of wisdom I could get",
        "score": 6,
        "upvote_ratio": 0.7,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krdg5h/want_to_start_a_new_career_programming/",
        "created_utc": 1747768405.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvrwn4",
        "title": "Hey need to know more about open source",
        "author": "Nandani-18",
        "subreddit": "learnprogramming",
        "content": "I’m unable to crack interviews in my college placements. I’m in third year of my CSE Degree. I find it too late to develop new skills. Recently I got to know about open source but I don’t know how to contribute in that and how will it help me land a job. Also I want to work on real life projects with other developers.",
        "score": 6,
        "upvote_ratio": 0.62,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvrwn4/hey_need_to_know_more_about_open_source/",
        "created_utc": 1748258479.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kuyo2u",
        "title": "Hi everyone",
        "author": "Brilliant_Hat7434",
        "subreddit": "learnprogramming",
        "content": "Hi everyone!! I'm a college student studying CS and I want to learn java more, I'm a kind of student that want to study but slow learner and I thought of buying some course online to begin with I'm a first year and currently in second sem and for those months I don't much to learn can anyone help me and recommend me some course even if there was a premium or free and can make suggestions also to me for learning java or any other programming languages. Thank you guys, appreciate y,all.",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuyo2u/hi_everyone/",
        "created_utc": 1748165887.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kutwh9",
        "title": "In 64-bit windows why is long and int both 4 bytes in C?",
        "author": "multitrack-collector",
        "subreddit": "learnprogramming",
        "content": "I know that in many 32-bit systems, windows or linux, int and long are both 4 bytes, but in a 64-bit linux distro, int remains 4 bytes while long is 8-bytes. \n\nSo why does 64-bit windows make both int and long 4 bytes in C? Why can't long be 8-bytes? Is this a compiler thing or some \"standard\" for the operating system?\n\nI'm using mingw btw and turns out that even the official Microsoft docs for the c/c++ compiler state that both int and long are 4-bytes.",
        "score": 5,
        "upvote_ratio": 0.7,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kutwh9/in_64bit_windows_why_is_long_and_int_both_4_bytes/",
        "created_utc": 1748146617.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ktupnt",
        "title": "Beginner Web Dev Eager to Contribute & Learn | HTML, CSS, JS, React",
        "author": "Aisheair",
        "subreddit": "learnprogramming",
        "content": "I'm a beginner web developer currently learning React. I am building many small projects on my own, but now I really want to start applying what I’ve learned in more practical, real world settings.\nI would love to contribute to beginner friendly projects whether it’s open source or just a personal/team project someone working on.\nI’m mainly just looking to learn, grow, and connect with others. If you know any projects I could jump into or if you’re also learning and want to build something together feel free to reach out.",
        "score": 5,
        "upvote_ratio": 0.79,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktupnt/beginner_web_dev_eager_to_contribute_learn_html/",
        "created_utc": 1748034687.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kt95ad",
        "title": "have a large dataset of 40000 samples each being a big 5000 dimension numpy file too big for my ram how do I work with it",
        "author": "Practical_Luck_3368",
        "subreddit": "learnprogramming",
        "content": "I received the dataset in the format of 45150 .hea and.mat files I looped through them and read them now I have 45150 samples the data in each being a numpy array of shape (5000,12) and the labels being a multihot numpy array one dimension 63 elements. how do I save such a behemoth data set so that I don't have to loop through it again?  how do I then load all this data and fit a model based on them?\n\nI tried saving them to a csv doesn't work csv just loses the data pandas didn't work either couldn't save to a parquetand basically every file type I tried took too much memory like 20gb of memory which I don't have so it crashed",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kt95ad/have_a_large_dataset_of_40000_samples_each_being/",
        "created_utc": 1747968807.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksipdw",
        "title": "Which Full-Stack Web path do you recommend?",
        "author": "hkz-01",
        "subreddit": "learnprogramming",
        "content": "Hey guys, I'm learning web development, and I already know the basics (HTML, CSS, vanilla JS, and I've built a few things with Tailwind and Astro.js—I love Astro, btw).\n\nMy plan is to become a Full-Stack developer and specialize in the tech stack: React, Next.js, Node.js... (and Astro.js for static sites). But sometimes I get stuck when I see all the alternatives out there for becoming Full-Stack, and I'm not sure which one to choose.\n\nI'd love to know which path you followed and which routes you recommend (in as much detail as possible, if you can).",
        "score": 3,
        "upvote_ratio": 0.67,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksipdw/which_fullstack_web_path_do_you_recommend/",
        "created_utc": 1747890450.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksh9gs",
        "title": "Student Project Review…",
        "author": "ProgrammingLife96",
        "subreddit": "learnprogramming",
        "content": "Hello everyone I recently created a Wordpress Site for a college assignment during our Linux and Wordpress hosting course! I used mainly custom HTML Blocks to create this site with the basic Twenty Seventeen Wordpress Theme as a start. It was a fun project and I decided to base the site on the TV Series Mr. Robot. \n\nIf anyone is interested in checking it out and letting me know what you think here’s the Wordpress link - https://fsocietyfanhub.wordpress.com/",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksh9gs/student_project_review/",
        "created_utc": 1747885263.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krgy2a",
        "title": "Trying to figure out if this book is good learning material",
        "author": "Ace405030",
        "subreddit": "learnprogramming",
        "content": "I obtained a C++ textbook for free, and I’m curious if it will be good to learn from. It’s called “the C++ programming language fourth edition” by Barney Stroustrup. It focuses on C++ 11. I’m just not sure if it’s too outdated to be beneficial or if it would be more detrimental \n\nEdit:\n\nI also have another book “data structures and other objects using C++” by “Michael Main” and “Walter Savitch” I was wondering if this one would be good to learn from if I disregard the example code",
        "score": 3,
        "upvote_ratio": 0.68,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krgy2a/trying_to_figure_out_if_this_book_is_good/",
        "created_utc": 1747777005.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kv0wov",
        "title": "How do i find project ideas.",
        "author": "SahilPatel_",
        "subreddit": "learnprogramming",
        "content": "I am a first uear student learning full stack development using mern. I recently made a cp platform dashboard and i want to make more projects to learn more. But i just cant find good ideas to start with. People say find a problem in your life and solve it but i just can't think of any idea like that. I am willing to learn even orher techs if needed for my project and am not like just sticking to mern. For me develolment is just getting there with efficiency and great user experience (at least what i am capable of).",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv0wov/how_do_i_find_project_ideas/",
        "created_utc": 1748174584.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kua0hi",
        "title": "Need Help",
        "author": "kavin_nope",
        "subreddit": "learnprogramming",
        "content": "Just finished school and I’ll be starting college at the end of July. I’ve got a lot of free time, so I figured I’d start learning Python. I began with the ‘Python Course for Beginners 2025’ by Programming with Mosh on YouTube. Now I’m kinda stuck and not sure what to do next. Any suggestions on how to continue or what to learn after this? Would really appreciate some help!",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kua0hi/need_help/",
        "created_utc": 1748088223.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku50fm",
        "title": "Best language for UI design",
        "author": "VINcy1590",
        "subreddit": "learnprogramming",
        "content": "So I've been thinking about getting into programming again, as a hobby and as a skill. I thought about doing python because of its versatility and wanting to create things using automation or machine learning, for example, but I realized that what I truly like is design, especially with regards to websites. I see so many amazing looking websites, and I like graphic design, although I have no ability in that field, and if I could code UIs for fun, making cool webpages, that would be great, both on the creative side and the learning side.\n\nThe FAQ says that HTML, CSS and Javascripts are the languages to use to make websites, but which of these is the most important for UIs? Should I still learn all 3? From the UI design crowd, it seems I don't have to learn to code, and I could just use figma without coding, but I'm still interested in seeing what I could do.",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku50fm/best_language_for_ui_design/",
        "created_utc": 1748067937.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku3yua",
        "title": "Game Library Compiler",
        "author": "10codepink10",
        "subreddit": "learnprogramming",
        "content": "Game Library Compiler\n\nI’m looking to make a list of what games I own across Steam, itchio, gog, legacy games, epic games, etc…. Possibly look at adding PlayStation xbox and Nintendo games?\n\nI want to program something that’ll dump them into a notion database or spreadsheet or something and have it be kept up with automatically. Like run a script that fetches them every now and again or check for games that haven’t been added.\n\nAs I’ve been doing so research it seems really only Steam and itchio have the APIs for this. Does anyone have any advice on how to retrieve the rest? Are there ways without breaking terms of service?",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku3yua/game_library_compiler/",
        "created_utc": 1748063794.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ku2qbb",
        "title": "What have you been working on recently? [May 24, 2025]",
        "author": "AutoModerator",
        "subreddit": "learnprogramming",
        "content": "What have you been working on recently? Feel free to share updates on projects you're working on, brag about any major milestones you've hit, grouse about a challenge you've ran into recently... Any sort of \"progress report\" is fair game!\n\nA few requests:\n\n1. If possible, include a link to your source code when sharing a project update. That way, others can learn from your work!\n\n2. If you've shared something, try commenting on at least one other update -- ask a question, give feedback, compliment something cool... We encourage discussion!\n\n3. If you don't consider yourself to be a beginner, include about how many years of experience you have.\n\nThis thread will remained stickied over the weekend. [Link to past threads here](https://www.reddit.com/r/learnprogramming/search?q=%22What+have+you+been+working+on+recently%3F%22&sort=new&restrict_sr=on).",
        "score": 3,
        "upvote_ratio": 0.72,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku2qbb/what_have_you_been_working_on_recently_may_24_2025/",
        "created_utc": 1748059242.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kts72z",
        "title": "Need some advice on choosing a first job",
        "author": "None",
        "subreddit": "learnprogramming",
        "content": "I'm finishing my Bachelor's degree and currently have a few job offers and some ongoing interview processes. I'd love to hear your thoughts on which path would be best to start my career. Ideally, I’d like to stay flexible and be able to explore different areas in the future if my curiosity changes, so I don't want an area that will specialize me too much too early. I have always heard BE engineering seems to be the best role for this kind of felxibility, but please let me know what you think!\n\nHere's the list of opportunities, ordered from most attractive to least (in my opinion):\n\n### Backend Engineer Internship at a Product Company\n- **Duration:** 9-month internship, with a possibility of a full-time offer afterwards.\n- **Tech stack:** Spring, Kafka, SQL and NoSQL databases.\n- **Pros:** I love everything about this—tech stack, company culture, team vibe.\n- **Cons:** The pay is lower than the other (non-internship) offers for the first 9 months.\n\n---\n\n### Site Reliability Engineer (SRE) at a Product Company\n- **Status:** Interview scheduled next week.\n- **Details:** The company was acquired by a major player, so it seems relatively stable.\n- **Pros:** I find SRE work interesting.\n- **Concerns:** I'm worried that starting my career in SRE might limit my ability to change into other areas later on.\n\n---\n\n### Backend Engineer at an Outsourcing Consultancy\n- **Status:** Passed HR round; they're waiting on salary expectations.\n- **Details:** They want to move me forward to client interviews.\n- **Pros:** I expect to learn a lot, and they were open to salary negotiations—even with my slightly above-entry-level ask.\n- **Cons:** Still unclear which client or project I'd end up on.\n\n---\n\n### Data Scientist at a Consulting Company\n- **Status:** Just received the message; haven't responded yet.\n- **Details:** Seems to involve in-house consulting, with a focus on machine learning.\n- **Pros:** They seem very enthusiastic about some ML stuff in my CV and my Python experience (pretty advanced for an entry level).\n- **Cons:** I’m not particularly interested in data roles right now. I'd only consider it for a very high salary (mid-level developer range), which might be unrealistic for an entry-level hire.\n\n---\n\n### Internship at a Startup\n- **Status:** Offer available.\n- **Details:** The startup recently closed a big contract and is expanding.\n- **Pros:** I'd probably learn a lot quickly.\n- **Cons:** Very low pay. Feels unstable. Work would include a mix of backend, data, and no-code frontend (only one other dev on the team). Might make transitioning to more traditional jobs harder later on.\n\nThank you so much in advance! :)\n\nEdit: forgot to turn on markdown mode",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kts72z/need_some_advice_on_choosing_a_first_job/",
        "created_utc": 1748028210.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kt6num",
        "title": "POS system",
        "author": "DisfunctionalPattern",
        "subreddit": "learnprogramming",
        "content": "Hey everyone, I want to build a restaurant POS system for a personal capstone project. I just started college (just gen ed classes so far) and plan to complete this by graduation. I do have a little (very little) experience so far, TOP foundations and 3/4 of C# players guide. I have two goals 1) An app that shows potential to employers and 2) to use different technologies then school will teach (Java, Python, Js) to broaden my knowledge. My question is should I stick with .net and use blazor or maui, or switch to something else like flutter and go, or does it really even matter? There is lots of .net jobs in my area but that may change in four years. I guess my concern would be that this will be a very large project and I would hate in a few years to realize I should've done something different. Any thoughts it guidance would be very appreciated. ",
        "score": 6,
        "upvote_ratio": 0.8,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kt6num/pos_system/",
        "created_utc": 1747960973.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kssmwv",
        "title": "Looking for daily dsa practice accountability buddies",
        "author": "ByteMeNot19",
        "subreddit": "learnprogramming",
        "content": "Hey all, I'm a college freshman moving into second year. I'm looking to practice dsa in summers and am searching for a buddy.\n\nI am familiar with Python so probably will do the Strivers SDE Sheet and try to build some projects. So, if you are active here and want to keep in touch and keep yourself accountable, HMU!",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kssmwv/looking_for_daily_dsa_practice_accountability/",
        "created_utc": 1747925375.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksjit6",
        "title": "How is a Reddit-like Site's Database Structured?",
        "author": "Strange_Bonus9044",
        "subreddit": "learnprogramming",
        "content": "Hello! I'm learning Postgresql right now and implementing it in the node.js express framework. I'm trying to build a reddit-like app for a practice project, and I'm wondering if anyone could shed some light on how a site like reddit would structure its data? \n\nOne schema I thought of would be to have: a table of users, referencing basic user info; a table for each user listing communities followed; a table for each community, listing posts and post data; a table for each post listing the comments. Is this a feasible structure? It seems like it would fill up with a lot of posts really fast. \n\nOn the other hand, if you simplified it and just had a table for all users, all posts, all comments, and all communities, wouldn't it also take forever to parse and get, say, all the posts created by a given user? Thank you for your responses and insight.",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksjit6/how_is_a_redditlike_sites_database_structured/",
        "created_utc": 1747893631.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kshlc6",
        "title": "Coding accessibility",
        "author": "FitMaximum9945",
        "subreddit": "learnprogramming",
        "content": "I don't really have the best sight and I've been trying to get into coding but there has been a huge issue due to my sight. Its hard to find anything that's has more visuals that I can use, anything that has color good defecation would work. Any suggestions would be great thanks :\\]\n\nforgot to add that I mostly have been learning python and java",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kshlc6/coding_accessibility/",
        "created_utc": 1747886399.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1ksgesb",
        "title": "Language C",
        "author": "Affectionate_Sea_758",
        "subreddit": "learnprogramming",
        "content": "Hi, I’m a student of computer engineering and I’m taking programing language 1. We are learning language C in the course but for me it is very difficult, I don’t understand so many things in the language and now we are learning gtk, some advice to learn the language, tutorials or pages I’m really despered",
        "score": 4,
        "upvote_ratio": 0.71,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ksgesb/language_c/",
        "created_utc": 1747882525.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krtdes",
        "title": "What kind of problems did you encounter when you first started programming?",
        "author": "Nice_Tourist2677",
        "subreddit": "learnprogramming",
        "content": "I am new to the programming industry, I wonder what difficulties the old heads of this industry went through to get here. What do you recommend?",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krtdes/what_kind_of_problems_did_you_encounter_when_you/",
        "created_utc": 1747818874.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1krgr1c",
        "title": "Github Education learning paths",
        "author": "monok8i",
        "subreddit": "learnprogramming",
        "content": "Hi everyone!   \n  \nI recently learned about GitHub Education, and so I immediately took it, but a small problem arose. I am probably not the first to write about such a problem, but the courses do not finish completely.   \n  \nMy first attempt to complete the \"GitHub Deep Dive\" course was successful, in my issue I saw that the course was really completed, but it was not updated on the training site.   \n  \nAfter looking at the repository with this course again, I saw that first you had to make a **fork**, and only then **create a repository** using the template (by clicking on the \"copy exercise\" button, and then \"start\"). But this time it was not counted as completed for me either.   \n  \nMaybe some of you have already encountered this problem and know how to solve it? I even wrote to support about this problem, but no one has answered me yet. There were also similar questions from other users, but I still have not found a clear answer. Or, if some post already answered my question, please let me know.  \n  \nI would be grateful for your answer!",
        "score": 4,
        "upvote_ratio": 0.76,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1krgr1c/github_education_learning_paths/",
        "created_utc": 1747776512.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kqudsi",
        "title": "30 day Coding Challenge",
        "author": "Cheetoman0_0",
        "subreddit": "learnprogramming",
        "content": "I have seen these people do little challenges to improve certain skills such as drawing or minecraft building and I am inspired to do something similar. I want to challenge myself to code a new (or continued, depending on if I finished a prompt the previous day) program every single day for the next 30 days.\nDo you all have any recommendations for me? I have a relatively decent beginner experience regarding programming. I was slightly active in a robotics programming team, I passed APCSA with a 3, and I know a fair amount of Java and Python. If you know any good resources for prompts, that'd be helpful as well. Thank you all!",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kqudsi/30_day_coding_challenge/",
        "created_utc": 1747709065.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kqu20w",
        "title": "Is Focusing on Cloud Computing a Good Move in Today’s Job Market?",
        "author": "PromotionVisible2314",
        "subreddit": "learnprogramming",
        "content": "I'm currently studying a Computer Programming program, but with the way the job market is evolving — especially with the growth of AI — I'm thinking it might be smarter to focus more on cloud computing. I'm genuinely more interested in it and considering learning more on my own to improve my job prospects.\n\nDo you think focusing on cloud computing is a good move right now? ",
        "score": 2,
        "upvote_ratio": 0.6,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kqu20w/is_focusing_on_cloud_computing_a_good_move_in/",
        "created_utc": 1747708042.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kw042l",
        "title": "What is the solution to this interview question?",
        "author": "dhk1d3h2",
        "subreddit": "learnprogramming",
        "content": "I had an interview today and I got this question related to version control.\n\nThe master branch passes all tests. You go on vacation. During that time, others commit countless times and when you come back, tests are failing. You want to find the latest commit that passes the tests. Building takes several hours, so you can build only once. Git dif and history doesn't help because there are billions of changes. How do you find it?",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw042l/what_is_the_solution_to_this_interview_question/",
        "created_utc": 1748280262.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kvqy2s",
        "title": "bored programmer",
        "author": "pieter855",
        "subreddit": "learnprogramming",
        "content": "hi dear programmers\ni want to know what do ypu do when you are bored or exhausted from learning or coding? ",
        "score": 4,
        "upvote_ratio": 0.63,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvqy2s/bored_programmer/",
        "created_utc": 1748254849.0,
        "extracted_at": "2025-05-27 01:40:26"
    },
    {
        "id": "1kslf3b",
        "title": "After 4 years at Google, here's my honest take on why their work culture and processes didn't work for me.",
        "author": "dethstrobe",
        "subreddit": "cscareerquestions",
        "content": "I recently left Google after nearly four years. I wish I could say it lives up to all the hype, but it didn't. I honestly felt like I did some of the worst work of my career there. The environment, the processes, and team dynamics simply didn't align with my approach for how to collaborate and ship software. I've been reflecting on exactly why I wasn't able to make it work for me.\n\nJust to brace you, I know just how ranty this is going to sound. I'm not writing this as a condemnation of Google, because I know there are people that thrive and enjoy working there. This is just my own personal perspective on it. Take it with a grain of salt.\n\n# Agile is a Sin\n\nI come from companies that do agile processes. It's not perfect, but it's empowering and very adaptive to change. I've been told that agile processes do not scale. So when I joined Google, I was extremely interested in learning how and what Google does to ship software. They must be doing something slightly different or better to ship software at scale, right?\n\nWrong. They quite literally don't have processes around collaboration. It's basically waterfall. Product writes up a doc. Gets buy-in from leadership. Tosses it at engineering. And then we never see them again, so we're left to implement it as we see fit.\n\nIt is literally the most expensive and high risk software development I've seen in my entire career. They basically have blind faith they've hired super smart people that will just magically build the perfect product. Which to be fair, they do quite literally have a lot of *rock star* developers. But relying on purely heroics to ship software is a recipe for burn out and knowledge silos.\n\nAlso, they don't ship software. Deadlines are arbitrary. There are so many times when we approach a deadline only for \"X\" feature needs to absolutely be there on release so we'll just push out the release. I think deadlines are stupid, so I don't want to pretend like I care about them. But I do care about shipping software. The sooner you ship, the sooner you can start to learn and prove that your core assumptions are right or wrong. So to ship sooner, you need to downscope. If your MVP (minimal viable product) requires several really difficult features to implement, maybe it's not an MVP anymore. But then again, I guess no one called it an MVP, but me, who is used to shipping software regularly.\n\n# The Doc Machine\n\nSo, if you're not regularly shipping software, how can you possibly measure impact?\n\nDocs.\n\nEndless docs.\n\nCountless docs.\n\nSo many docs that it can be impossible to find what doc says what you did.\n\nGoogle's mission is to \"organize the world's information.\" Internally in Google, they generate a lot of information in docs, and it's very hard to search and find the information you're looking for.\n\nWhat's the point of docs no one reads? Well, since software doesn't get shipped, I assume it just acts as a laundry list of links when attempting to show impact for your performance reviews or promotions. You might not have shipped anything, but at least you left a paper trail of what you didn't ship.\n\nYou want to know the worst part of it? They want you to write a doc on a system you don't understand. So you write it up, make some assumptions and send it out for approval. No one reads it to approve it. Let's say you get your single approver and start implementing. Guess what, your core assumption is wrong. The data isn't in the right place, or the data you thought had what you needed, doesn't. Now you need to rewrite the doc.\n\nWhat's the point of getting approval? What's the point of a doc that is wrong from the start? What's the point of upfront design that is wrong? Why not just implement and find out what actually is going on and make it work?\n\nThe point is, it's just theater to make it look like we're doing our jobs. Why isn't the software the evidence we're doing our job?\n\nI'm not trying to say docs are bad, and everything should just be tribal knowledge. But I am saying docs that need to be rewritten from the get-go are a waste of time.\n\n# Bad docs\n\nIronically, despite needing to write so many docs to implement things. When you read other people's docs, you might notice something. They're very high-level. They're more like a thesis, then like actual documentation on how to use an API.\n\nWhat is the point of docs that don't answer how to use an API?\n\nFocusing on the high-level philosophy of a service is honestly distracting and unhelpful. I think I understand why this happens. It's hard to keep docs up to date. So if you keep them high-level, they won't become obsolete or need to be updated. But I don't care about your thesis defense; I just want to use your software to solve my problem.\n\nAnd I know Google can write good docs. [Angular](https://angular.dev/overview) has fantastic documentation. [Proto Buffers](https://protobuf.dev/overview/) have great docs. Both of these are made by Google. I guess the difference is they're public facing and Google doesn't prioritize internal docs like they do their external facing ones.\n\n# A Culture of Silence\n\nSo, there is a lot of lip service towards how open Google is. Say how they're trying to encourage employees in fireside chats to not ask anonymous questions so that leadership can follow up with the individual to gain more context. (This, by the way, does not prevent people from asking anonymously, which they do.)\n\nThere is also a culture of no-blame retrospectives. They don't run regularly, even when I advocate for them. And worst of all, when we finally do run retrospectives, we don't discuss challenges and problems we are encountering. So, what's the point of a retrospective that doesn't talk about pain points and mitigation strategies? From my perspective, it just looks like theater and a way to paint a false view that everything is good and we have nothing to complain about. Or worse, that we are helpless and we really cannot change anything.\n\nComing from companies with genuinely open cultures where we fostered candid and open discussions, it's baffling to me that no one seems willing to put in the minimal effort to improve everyone's lives.\n\nIt is better to be positive about a broken system and keep the status quo than it is to ask people to put in a laughable small level of effort to make everyone's life better. Not everything is going smoothly all the time. And assuming we **want** it to run smoothly, we should probably discuss the pain points and workarounds or solutions to them. Knowledge silos are bad. More open discussions can reduce knowledge silos which reduces the burden on individuals and gives everyone a balance for job responsibilities.\n\n# A Culture of Bottom-Up (but only if it's top-down)\n\nSo, in meetings with leadership. They emphasize that our *bottom-up culture* is how we do such great work. And by *bottom-up*, they apparently mean *top-down*.\n\n# When Bottom-Up Meets Brick Wall\n\nSo, let's say our UXR (user experience research team) has come up with an obvious gap in our offerings. What would you do? Perhaps gather some people from multiple disciplines and brainstorm a solution. Or maybe you just get leadership and design in a room and iterate on who knows what behind closed doors for literal months, before you ever even involve engineering. And for those few months, you pull engineering off their current teams in a large-scale reorg and don't give them marching orders instead just give them a bunch of vague ideas of what they might want to build. Like...what is engineering supposed to do? Build against an invisible moving target? The answer is, that is exactly what we do. Not because it's a good use of our time, but because we have nothing better to do and we have no input into the vision of the product.\n\nSo let's say, you're an engineer, like yours truly, and you think that process is stupid, and instead you really do want to try to implement a bottoms up initiative. So maybe, see a feature, we originally spec'd out but was dropped because they didn't see the current value in implementing it. But it sounds kind of cool, and shouldn't be that difficult to get an MVP for this feature. Maybe you go to reach out across teams, pull in people that own data you need, a team that works on Android and iOS, and try to get people from the backend team so you can make an e2e MVP to demonstrate this feature is doable. Also, act as a test bed to show smaller agile processes work and probably how we should handle work in the org.\n\nSounds pretty encouraging, right? But here is the real problem, one of the teams is a no-show. Not only are they a no-show, they also refuse to work with you and ignore your messages. You escalate to your manager and tech lead, and that team also ignores them too. You work with the other teams and implement everything, but say the one thing to tie everything together and make it work e2e. Let's say a backend team refused to work with you. So, naturally, offer to do the work for them. And they tell you to not do that. Because it's not my code base, I'm not on call, and I don't have to maintain it. So what do you do?\n\nWhat I did was create a video demo that made it look like it should work and presented it to leadership. We were reorged before this demo was even presented, so the feature died on the vine.\n\n# The Only MVP Is Minimum Viable Plausible Deniability\n\nLet's say that you do still believe in the rhetoric that, *the organization really does believe in bottom-up*. So you take some time and write up a doc (which is an activity you don't enjoy but if that's how the game is played, and you want to play ball, you do it). The doc outlines an open source initiative that is coincidentally attempting to solve the space we just tried to fill. But since there's an open-source community trying to solve the same problem space, maybe we can just leverage that and even help them grow at the same time. Anyway, it was super nice to have leadership hear me out, but they didn't want to go with it, because it turns out that one of the reasons we hamstrung our last project was because we were attempting to skirt a legal definition that the open source project is tackling head on. Suddenly, it made more sense: The original project was destined to fail, not because it was a bad idea, but because they were trying to handicap the implementation to avoid legal scrutiny.\n\nFundamentally, we're not trying to build good software or solve problems. We're just trying to do something without bringing legal scrutiny to Google.\n\nI understand getting sued sucks, and the law is often weaponized against Google. But why handicap ourselves? There are so many other ideas out there. Why not pursue things that are higher value and lower risk? I cynically believe it could just be virtue signaling to investors, to show Google is trying new things and still taking risks. But their risks seem high-risk, low-reward, compared to the normal practices I'm used to, which focus on mitigating risk and prioritizing high value. Taking risks here seems to be about signaling growth, but are they truly growing? Wouldn't the more obvious path be to take the calculated legal risk to solve a real problem and potentially achieve genuine growth? I don't know; I'm not in leadership. I just had a worm's-eye view of the machine.\n\n# Grassroots Agility, Stomped by Apathy\n\nLet's say you came from an agile background and you even believe it. Because you've seen it solve very obvious communication issues that you see arise in large organizations. You've experienced it firsthand, you know it works. You go and explain it to your manager, they say that there are organization issues and leadership is resistant to change. They don't discourage you from trying, but they kind of set the expectations that nothing will change. But, what else are you supposed to do? Nothing?\n\nSo you have a meeting with your skip manager (your manager's manager) once again advocating to adopt agile processes and maybe get more stakeholder buy-in. And they give you the advice to do it locally with your team. You know, \"bottom-up\" kind of stuff.\n\nYou present it to the team. They hate it. They don't want processes. They don't want collaboration or more communication. They say agile practices are dehumanizing and that we are not interchangeable cogs in the machine. A bit of a disservice towards agile processes. But they are willing to try some of the ceremonies.\n\nBut literally, for any reason whatsoever, they cancel meetings, like retrospectives or stand-ups. Maybe we need more time to finish a feature, or maybe it's a holiday, or we get reorged. And we never start up the meeting again, at least until I ask for it. Followed by it once again being canceled at the drop of a hat. And no one cares. They don't see the value in it. And to be honest, the ceremonies are toothless because we don't discuss actual problems, we don't discuss work progress to reduce knowledge silos, and action items are never done and are also usually not meaningful anyway.\n\nThe reason people don't see the value of agile processes is not that it's not a good framework to address communication gaps, but because just doing the ceremonies without the communication makes them pointless. There is value in the ceremonies if they're being used to address the problems. But actively ignoring the problems, even with ceremonies, means we're now just wasting people's time.\n\n# Bottom-Up, Top-Down, and Going Nowhere\n\nIf there is a bottom-up culture at Google, it is self sabotaging. There is so much momentum for the status quo that actual process change is near impossible. The only change that appears to work is a top-down mandate, which they try every year with constant reorgs and get the same results.\n\n# There is No Team in I\n\nSo, coming from an agile background (I know I sound like I'm in a cult, with how much I bring it up, but bear with me), I've come to the understanding that I as an individual do not necessarily matter. It's about putting aside ego and working together on a larger goal. This also comes with a nice benefit of distributing responsibility, and reducing burn out.\n\nThat's pretty damn *ungoogley*. At Google, they're rugged cowboys. They pull themselves up by the bootstrap and don't care about your collaboration. You need to own everything. Your work, your feature, your project, your process, your career. No one is here to help you. You need to just do it yourself. Which is ironic, as [googley-ness](https://staffeng.medium.com/being-googly-62b75dd642df) should theoretically not embody it. But the performance evaluation surely doesn't emphasize trying to make teamwork work.\n\n[A bus factor](https://en.wikipedia.org/wiki/Bus_factor) of 1 is seen as a positive thing. It means you've made yourself invaluable. You are the sole point of contact, and despite that sounding like a lot of annoying responsibility, it's perceived as good because you *own* it.\n\nI hate knowledge silos. I do not believe it makes anyone more valuable. I fought against the hoarding of knowledge. I'd include people into meetings to make sure I'm not the only one with context. I'd ask stupid questions and repeat talking points in meetings to make sure I understood and we were aligned. These are all considered negative things at Google. Because it is seen as wasting everyone's time in the meeting. It is better to repeat yourself with several dozen 1:1s (or I guess write yet another doc no one will read) than it is to talk it over in a group and make sure there is no ambiguity.\n\nIt could just be me though. But it sure felt like it, when my manager said I was *\"leaning on others too much.\"* How else am I supposed to read that?\n\nI've never seen such an environment that is literally so hostile to collaboration.\n\n# Performative Theater\n\nI hate 1:1s. I think they're a waste of time. I would even argue that most 1:1s are a waste of time in every context. I'm probably being hyperbolic, as I'm sure there must be cases where 1:1s are beneficial. But I'm struggling to think of one right now.\n\n1:1s are a bottleneck to communication. And judging by how often my 1:1s were canceled with my managers, I'd have to say they don't value them either.\n\nSo, I'm a huge advocate for openness and transparency. And after one reorg (I went through 5 reorgs in my 4 years at Google, and been through 7 managers, chaos is the norm) leadership was attempting to be more open and transparent and so allowed anyone to join their meetings. So, since I felt like I did not have enough context to understand their decisions, I joined those meetings.\n\nWhen they asked if everyone had context on a doc, I was the only person to raise my hand and said I did not. I guess this was a sin to acknowledge my own ignorance, because it turns out after the next meetings I was removed from the subsequent meetings. I asked my manager if I could be brought back to gain more context, and he told me I had enough context to do my job. While probably true, I had a suspicion that my work was not very high priority. Maybe we should work on something else. Anyway, this taught me that it's all optics. I think my manager wanted to control the narrative. If he wasn't there to be a middle man, what is his job? Like, seriously, what *is* his job? I still don't understand what value he brought.\n\n# Tech Debt Forever\n\nTo say Google's code base is complex is an understatement. Not only is it complicated, it's also a mess. Not only is it a mess, but it's also poorly documented. And not only that, but it actively fights you as you make changes and try to understand it.\n\nCryptic compile errors. Cryptic build errors. Cryptic run time errors. And just when you think you've finally got it working. There are blockers on merging the code because of invisible linting errors you didn't know you were violating. Or there is some weird test case that broke, but only after 3 hours of running tests in the CI pipeline. Or maybe, you just want to delete some code, but it turns out that the code you're trying to delete has a different release schedule, so it cannot be deleted with other code. And the other code is dependent on the first bit of code that you cannot delete being deleted. The code is constantly fighting you. And maybe if we could discuss these issues in a group, we could understand the problems quicker or come up with strategies to mitigate them...but it turns out talking about how much it sucks to write code is frowned upon. So you just need to keep it to yourself. And I'm left wondering, *am I the problem?* Is my career a lie? Do I have imposter syndrome if I don't actually know what I'm doing? It makes you question everything.\n\nSo I talked with my director (the skip’s manager) about my challenges. And I was candid about it. And he said, \"It sounds like you need mentorship.\" And I said, that's exactly what I need. And he said he'd help get me some. I messaged him every week for a few months. He offloaded this responsibility to my manager, who naturally, did nothing. By the time I left, I made the request 8 months prior. I was clearly not getting the mentorship I asked for. My manager's *wonderful* feedback was, \"maybe you should find your own mentorship.\" And it does make me wonder, \"what is *your* job if it is not to help me do *my* job better?\" Anyway, I also was unable to find mentorship on my own. And it does make me wonder, does anyone truly understand the beast that is Google's complex internally built tech stack with poor documentation? Even the internal AI that is usually pretty good at explaining some of the code, will just straight-up hallucinate how the code works and then it becomes very hard to understand. The AI will tell you a very convincing lie, but you won't know it's a hallucination or how to possibly fix it, because the documentation is poor and the only way to learn how it really works is to reverse-engineer it by performing code archaeology.\n\n# I'm out\n\nSo I left Google. It was amicable. This was, of course, also only my personal experience in my particular organization. I've been told different parts of the org and different teams are said to have different cultures. Heck, even some people might even thrive in the culture I described. But it's not for me.\n\nThey gave me severance, which was honestly extremely nice. I tried so hard to bring cultural change to Google, but there is no willingness to change. Honestly, with the amount of money they're printing with ads and search, there is no pressure for them to make any changes.\n\nThere is a clear cultural mismatch between what I value and what Google values. Even if Google pays lip service that they value the same things I value, their actions clearly show they do not. And so, I am honestly happy to be free from them and given the time to look for a place that values what I want.\n\nI used to believe I was *a mercenary for hire to the highest bidder*. But you know what? Apparently, within reason. I just want to work, collaborate, and iterate on software. Is that asking for too much? The one thing I can take away from my time at Google is that I now have a clearer understanding of what I'm looking for in my next step.",
        "score": 2206,
        "upvote_ratio": 0.96,
        "num_comments": 343,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kslf3b/after_4_years_at_google_heres_my_honest_take_on/",
        "created_utc": 1747901638.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksbp4b",
        "title": "Walmart Eliminates About 1,500 Jobs on Its Technology Team",
        "author": "i-say-sure",
        "subreddit": "cscareerquestions",
        "content": "[https://www.bloomberg.com/news/articles/2025-05-21/walmart-eliminates-about-1-500-jobs-on-technology-team](https://www.bloomberg.com/news/articles/2025-05-21/walmart-eliminates-about-1-500-jobs-on-technology-team)",
        "score": 1683,
        "upvote_ratio": 0.97,
        "num_comments": 285,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksbp4b/walmart_eliminates_about_1500_jobs_on_its/",
        "created_utc": 1747868225.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktuvxf",
        "title": "Meta is about to start rating more workers as 'below expectations,' internal memo shows",
        "author": "BigShotBosh",
        "subreddit": "cscareerquestions",
        "content": "https://www.businessinsider.com/internal-memo-meta-increases-employees-rated-below-expectations-2025-5",
        "score": 1164,
        "upvote_ratio": 0.98,
        "num_comments": 283,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktuvxf/meta_is_about_to_start_rating_more_workers_as/",
        "created_utc": 1748035139.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv232l",
        "title": "H-1B visa applications for 2026 drop 25%, hit 4-year low under Trump",
        "author": "Affectionate_Nose_35",
        "subreddit": "cscareerquestions",
        "content": "[H-1B visa applications for 2026 drop 25%, hit 4-year low under Trump | Immigration News - Business Standard](https://www.business-standard.com/immigration/h-1b-visa-applications-for-2026-drop-25-hit-4-year-low-under-trump-125052100808_1.html)\n\n  \nThe number of H-1B visa applications for the financial year 2026 has fallen to its lowest in four years, according to data from the United States Citizenship and Immigration Services (USCIS). Only 358,737 applications were received this year — a sharp drop from over 480,000 in FY2025 and the lowest since FY2022, which recorded 308,613 applications. Out of these, 120,141 registrations were selected to move forward in the process. \n\nThe H-1B visa programme, used heavily by Indian IT professionals and US tech firms, grants 85,000 visas annually, including a 20,000 carve-out for those with US master’s degrees.",
        "score": 1044,
        "upvote_ratio": 0.93,
        "num_comments": 257,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv232l/h1b_visa_applications_for_2026_drop_25_hit_4year/",
        "created_utc": 1748178365.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv8jzy",
        "title": "Popular college major has the highest unemployment rate",
        "author": "Additional_Sleep_560",
        "subreddit": "cscareerquestions",
        "content": "\"Every kid with a laptop thinks they're the next Zuckerberg, but most can't debug their way out of a paper bag,\" https://www.newsweek.com/computer-science-popular-college-major-has-one-highest-unemployment-rates-2076514 ",
        "score": 942,
        "upvote_ratio": 0.95,
        "num_comments": 337,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv8jzy/popular_college_major_has_the_highest/",
        "created_utc": 1748195400.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvbrao",
        "title": "At Amazon, Some Coders Say Their Jobs Have Begun to Resemble Warehouse Work",
        "author": "self-fix",
        "subreddit": "cscareerquestions",
        "content": "\nNYT: Pushed to use artificial intelligence, software developers at the e-commerce giant say they must work faster and have less time to think. Others welcome the shift.\n\nhttps://www.nytimes.com/2025/05/25/business/amazon-ai-coders.html",
        "score": 825,
        "upvote_ratio": 0.95,
        "num_comments": 187,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvbrao/at_amazon_some_coders_say_their_jobs_have_begun/",
        "created_utc": 1748203660.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krj6jc",
        "title": "Article: \"Sorry, grads: Entry-level tech jobs are getting wiped out\" What do you guys think about this article? Is there really such a bottleneck on entry level that more experienced devs don't see? Will this subside, and is a CS degree becoming less worth it? Interested to hear everyone's thoughts",
        "author": "Joller2",
        "subreddit": "cscareerquestions",
        "content": "[https://sfstandard.com/2025/05/20/silicon-valley-white-collar-recession-entry-level/](https://sfstandard.com/2025/05/20/silicon-valley-white-collar-recession-entry-level/)",
        "score": 591,
        "upvote_ratio": 0.93,
        "num_comments": 247,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krj6jc/article_sorry_grads_entrylevel_tech_jobs_are/",
        "created_utc": 1747782951.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktrprg",
        "title": "Booz Allen lays off 2500 employees.",
        "author": "metalreflectslime",
        "subreddit": "cscareerquestions",
        "content": "https://www.wsj.com/business/earnings/booz-allen-hamilton-revenue-outlook-below-estimates-96a293cc",
        "score": 567,
        "upvote_ratio": 0.96,
        "num_comments": 158,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktrprg/booz_allen_lays_off_2500_employees/",
        "created_utc": 1748026997.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krjik0",
        "title": "If you guys are unemployed for over a year you honestly might as well just chase after your dreams",
        "author": "YsDivers",
        "subreddit": "cscareerquestions",
        "content": "The chance of it coming true is probably similar to finding another tech job anytime soon",
        "score": 572,
        "upvote_ratio": 0.87,
        "num_comments": 192,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krjik0/if_you_guys_are_unemployed_for_over_a_year_you/",
        "created_utc": 1747783917.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kupmqq",
        "title": "Why is the industry ok with this?",
        "author": "flash_am",
        "subreddit": "cscareerquestions",
        "content": "I have been a PHP Developer for 10+ years. Last year, I left my company after being presented with scenarios that went against my ethics and being told there would never be room for growth for me again.\n\nSo, I have been applying to 100s of jobs, have had probably 20 interviews at least, but a recent interview really brought up a question for me. This interview required a 4 hour coding assessment. It was sent to the final 15 candidates. That's 4 hours of wasted time for 14 people. Why is the industry OK with wasting 56 hours of people's time like this? Why isn't there at least some sort of payment for all those hours?\n\nI understand coding assessments are common place, but I knew going in it was very unlikely those 4 hours would actually get me the job. A week later, and wouldn't you know it, I was right and was passed on. Just curious what causes this to be fine for everyone?",
        "score": 551,
        "upvote_ratio": 0.91,
        "num_comments": 231,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kupmqq/why_is_the_industry_ok_with_this/",
        "created_utc": 1748131946.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksxljy",
        "title": "Just Received a Fully Remote Job Offer as a Self Taught SWE - Spreading Some Positivity and Hope",
        "author": "yan_kh",
        "subreddit": "cscareerquestions",
        "content": "For anyone looking at my Reddit post history, it would be easy to notice that I have been struggling to land a new job in this tough market.\n\nAs a completely self-taught backend engineer, without a university degree nor boot camp, rather just a love for technologies and programming from a young age, and a few years of experience in a very small non-profit organization, the market has not been easy on me at all. During my job hunting journey, I have applied for more than 800 jobs, conducted more than 70 interviews, and was a finalist in the hiring process about 10 times. Yet regardless of that, there was always a candidate more favorable than me which got chosen, until this exact day.\n\nToday I have received an email which was quite unexpected. I have been offered a full-time remote position as a junior software engineer in an international mid-sized company, with big customer base and highly distributed systems. The offer I received is realistic and slightly above average for my years of experience and the consideration it's a fully remote position, therefore I have gladly signed it and accepted it.\n\nThe agenda of my post is first and foremost spreading some positivity and hope in this Subreddit in these tough market conditions, because I feel like many people can use it here as a motivation to keep trying. Secondly, I would like to celebrate this moment here in this Subreddit and post about the good times, the same as I did when I posted about the bad times.\n\nI wish everyone out there the best of luck in their job hunting journey, and as I said I want to shed some light and spread positivity proving that it is possible to get offers with the right skills, hard work, consistency, and a bit of luck.\n\nGood luck everyone!",
        "score": 527,
        "upvote_ratio": 0.93,
        "num_comments": 94,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksxljy/just_received_a_fully_remote_job_offer_as_a_self/",
        "created_utc": 1747937287.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kt5304",
        "title": "Just refused a job",
        "author": "Apart_Savings_6429",
        "subreddit": "cscareerquestions",
        "content": "Location: ON, Canada job is Canada remote. \n\nJust had an interview with HR about a senior devops python engineer position. This is interview 3 after a video interview, technical test and HR casually drops that it's a being your own device company. Like are you guys for real? You go through the hassle of looking for a senior engineer and you can't get them a dedicated laptop separate from their own personal life not to mention the safety of your IP? I find that shocking and disrespectful. I've been applying for jobs for months and I would rather continue my freelance practice than be subjected to the equivalent of a sweatshop. Needless to say I just dead face told her I'm not going to waste your time after she mentioned this is company policy. Rant over. \n\nEdit : as some of you noted I didn't get an offer, apologies about the unclear title\n\nEdit 2: i will expand on this in a few hrs cause I've written most of my comments with a 6m old trying to eat my phone \n\nEdit 3: OK now that I can sit on my PC, let me just explain a few things that have caused some confusion in the comments. I'm mostly a python/ML/AI freelancer who wants to get into a full time position. I've worked with many big names in this industry and generally take every interview that I'm given whether it is a small company or not. This particular company is based in Mississauga, ON and has about 30 employees and is in the information systems for transport/logistics. It has about 2.1 stars on Glassdoor in their recent reviews and honestly, I wasn't expecting too much from the job but was giving them the opportunity to show themselves for who they are. I don't really care too much about buying my own laptop per se. It's about how they approach onboarding new employees. I've worked in companies where I was thrown into legacy systems from the first day and I can see the signs written on the wall from a mile away, which is why I decided that I shouldn't proceed. For those of you who say that I'm spoiled and entitled. Bruh, I literally make less than average salary working as a freelancer, all of this while paying 100% more the taxes for CCP of what full time employees pay while having to do my own accounting. In general I do not prefer working freelance but I would rather have the ability to say no than to work on things that will make my life utterly miserable which is why I refer to this kind of environment as a \"sweatshop\".",
        "score": 406,
        "upvote_ratio": 0.85,
        "num_comments": 176,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kt5304/just_refused_a_job/",
        "created_utc": 1747956246.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktpdje",
        "title": "Why do people here make Amazon seem like a walk in the park? My final round was hard as hell.",
        "author": "Vivid_Tennis6983",
        "subreddit": "cscareerquestions",
        "content": "So I just finished my onsite for Amazon L5 and I already have a couple of offers but the this on-site was harder than most of the companies I have been through. or my experience at least.\n\nI went in kind of relaxed because I had assumed with the way people disrespect amazon and how they make it seem like its easy, but I got absolutely bodied I think.\n\nIs the amazon hate and easiness exaggerated here, or was that just me?",
        "score": 341,
        "upvote_ratio": 0.94,
        "num_comments": 96,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktpdje/why_do_people_here_make_amazon_seem_like_a_walk/",
        "created_utc": 1748021272.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks3pch",
        "title": "Know that self harm is never the answer! An experienced SWE friend of mine failed a self-harm attempt. You can always make more money, switch careers, eventually get a career in SWE, etc. Your career is not your life.",
        "author": "SomewhereNormal9157",
        "subreddit": "cscareerquestions",
        "content": "Many new grads and even experienced folks who have been unemployed for a while may have entered depression. Remember the tech industry goes through booms and busts. SWE or related job is not the end all be all. Seek help from therapy, family, trusted friends, or even the anonymous help lines. Ask anyone from the financial crisis or Dotcom crash. ",
        "score": 343,
        "upvote_ratio": 0.9,
        "num_comments": 163,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks3pch/know_that_self_harm_is_never_the_answer_an/",
        "created_utc": 1747848473.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks82wa",
        "title": "Younger Senior Software Engineers a trend?",
        "author": "moogedii",
        "subreddit": "cscareerquestions",
        "content": "I noticed a lot of Senior Software Engineers these days are younger than 30 and have 2-3 years of experience. How common is this? What is the reason?",
        "score": 312,
        "upvote_ratio": 0.92,
        "num_comments": 181,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks82wa/younger_senior_software_engineers_a_trend/",
        "created_utc": 1747858962.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktyp1e",
        "title": "Workers need to start suing companies for defamation for these \"not layoffs\" where they say they are firing bad performers.",
        "author": "Legitimate-mostlet",
        "subreddit": "cscareerquestions",
        "content": "It is pretty obvious there is a new trend in tech for past few years where companies have all got on board with this idea of hiding layoffs behind the phrase \"letting go of poor performers\".\n\nIt is obvious this is not actually happening and they are really just laying off people without calling it that. These types of firing often come with less or no severance than if you were laid off. Also, often times no healthcare coverage paid for that a layoff would provide.\n\nBut the biggest thing is it comes with you being labelled a \"bad worker\" in the press, which other hiring managers will see. Even though it was just a way to lay you off in secret. \n\nIf you were not a bad performer, then this is defamation of character and is affecting you financially. Both from losing benefits you would receive from a normal layoff, as well as the potential financial pain that comes from not being hired due to being falsely labeled a \"poor performer\".\n\nIt is time employees start suing these companies. Most people at these companies can afford to sue as well given their salaries. \n\nWhat do others think?",
        "score": 296,
        "upvote_ratio": 0.87,
        "num_comments": 135,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktyp1e/workers_need_to_start_suing_companies_for/",
        "created_utc": 1748045944.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv9eqy",
        "title": "For those who didn't find a job in tech/software, what are you doing now?",
        "author": "dillpill4",
        "subreddit": "cscareerquestions",
        "content": "New grad. I have some research and internship (sorta) experience but 100 apps in and I still haven't been moved forward with a single application. Just wondering what others are doing in the long term and if pivoting to another industry makes sense. I genuinely don't want to keep digging in the steaming pile of shit that is the tech industry in front of me if it's not worth it",
        "score": 265,
        "upvote_ratio": 0.96,
        "num_comments": 139,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv9eqy/for_those_who_didnt_find_a_job_in_techsoftware/",
        "created_utc": 1748197534.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv6wdg",
        "title": "Hiring managers: how’s the market right now?",
        "author": "shankar86",
        "subreddit": "cscareerquestions",
        "content": "I’m a software engineer with 12 years of production experience at mid-size SaaS shops. Based in Atlanta. I’m cleaning up the resume and want a gut check on the 2025 job market from people who actually screen candidates.\n\n**If you hire or interview engineers, I’d love your take on:**\n\n1. **Application volume** Rough ballpark per opening: dozens, hundreds? Any trend since late 2024?\n2. **Instant resume killers** Typos, messy job hops, obvious AI fluff, whatever makes you hit \"deny\"?\n3. **Interview deal-breakers vs. things that really pop** Behaviors or answers that sink an otherwise solid candidate, and anything that pushes someone to the front of the line.",
        "score": 244,
        "upvote_ratio": 0.91,
        "num_comments": 200,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv6wdg/hiring_managers_hows_the_market_right_now/",
        "created_utc": 1748191186.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksuk2f",
        "title": "Anyone else who considers themselves smart feel dumb in this field?",
        "author": "Ok-Cartographer-5544",
        "subreddit": "cscareerquestions",
        "content": "Since I was a kid, people have told me that I'm smart. I easily excelled in most of school without really trying. Went into a non-tech career and was promoted quickly before switching to CS/ SWE.\n\nI currently work at a F*ANG and did my degree at a top 10 CS university. I often feel like a complete idiot compared to some of my coworkers/ classmates. I often have situations where I'm still figuring out step 1, and they're already on step 3.\n\nDoes this field just tend to attract very smart people? This has made me seriously start to question if this field is the right fit for me, as I am used to excelling/ being a top performer without really trying. \n\nWondering if others have experienced the same, or if it's just me. I want to be in a field that I can compete and excel in. I'm willing to put in the work, but want to know that it will eventually pay off. ",
        "score": 201,
        "upvote_ratio": 0.9,
        "num_comments": 88,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksuk2f/anyone_else_who_considers_themselves_smart_feel/",
        "created_utc": 1747930036.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv4mcw",
        "title": "Are wages going down?",
        "author": "StillPurpleDog",
        "subreddit": "cscareerquestions",
        "content": "Since AI is getting better and there’s an over saturation of people studying and working in cs. Does this mean wages will go down?",
        "score": 195,
        "upvote_ratio": 0.85,
        "num_comments": 129,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv4mcw/are_wages_going_down/",
        "created_utc": 1748185281.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krae6n",
        "title": "Those who became a SWE before ChatGPT, do you believe GPT would have positively or negatively impacted your journey to become a SWE?",
        "author": "ZinChao",
        "subreddit": "cscareerquestions",
        "content": "Just curious how other people feel about this. If you became a SWE before ChatGPT, do you think having something like GPT back then would’ve helped you learn faster or made you cut corners? Would it have made you better, or maybe a bit lazier or less hands-on?",
        "score": 191,
        "upvote_ratio": 0.95,
        "num_comments": 175,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krae6n/those_who_became_a_swe_before_chatgpt_do_you/",
        "created_utc": 1747761207.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kt3mfw",
        "title": "Where do senior software developers hide if they’re not on linkedin?",
        "author": "Aarasidia",
        "subreddit": "cscareerquestions",
        "content": "I’m sourcing for a position in Seattle but I would like to take an unconventional route that includes platforms other than LinkedIn and the like. :]\n\nEdit: If you happen to be a senior software developer who’s looking for a position please feel free to shoot a DM and I’m happy to share details! ",
        "score": 158,
        "upvote_ratio": 0.84,
        "num_comments": 119,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kt3mfw/where_do_senior_software_developers_hide_if/",
        "created_utc": 1747952149.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks6o5d",
        "title": "It doesn't count if you stay for 1 year. How true is this today?",
        "author": "moogedii",
        "subreddit": "cscareerquestions",
        "content": "In the scope of a 30 year long software engineering career, staying at a high-impact role for 1 year can be a major red flag. Does this still apply to the Software Engineering field today, or has the industry adopted to a more modern trend? I am an early-mid career software engineer with 4 jobs under my belt, each lasting about 1 year in duration. Some of these roles are at startups, and some at F500 corporations. Can the short duration of each of these roles even be put on a respectable software engineering resume?",
        "score": 160,
        "upvote_ratio": 0.89,
        "num_comments": 84,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks6o5d/it_doesnt_count_if_you_stay_for_1_year_how_true/",
        "created_utc": 1747855551.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kur4bn",
        "title": "I hope vibe coding has not turned into an attempt to re-energize the \"learn to code\" movement",
        "author": "ExpWebDev",
        "subreddit": "cscareerquestions",
        "content": "Had to re-post to change the title to be more accurate.\n\nVibe coding got out of control and turned into something it wasn't meant to be. I hope we don't see micro-courses on \"learning to vibe code\" which will make bootcamps look like legit 4 year colleges",
        "score": 136,
        "upvote_ratio": 0.86,
        "num_comments": 57,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kur4bn/i_hope_vibe_coding_has_not_turned_into_an_attempt/",
        "created_utc": 1748136920.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks1ixp",
        "title": "Transitioning into Big Tech",
        "author": "Different-Train-3413",
        "subreddit": "cscareerquestions",
        "content": "I am about to sign a FAANG offer. I am currently @ 2 YOE, working for a super chill no name making 90k. My work days range from 0.1-10 hours with the majority of days closer to the left bound. I'm on pace to crack 100k this year. \n\nThe company I am about to join is going to be a very different experience. It is stack ranked and I was upleveled so the expectations are likely high. For those who have done something similar, how did you handle the added work pressure? \n\nThanks!",
        "score": 133,
        "upvote_ratio": 0.92,
        "num_comments": 87,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks1ixp/transitioning_into_big_tech/",
        "created_utc": 1747843292.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kw07yp",
        "title": "Why is job market for backend generally considered better than frontend?",
        "author": "tuckfrump69",
        "subreddit": "cscareerquestions",
        "content": "title",
        "score": 136,
        "upvote_ratio": 0.88,
        "num_comments": 164,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kw07yp/why_is_job_market_for_backend_generally/",
        "created_utc": 1748280526.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktuxoy",
        "title": "Just Got Blindsided by a Layoff",
        "author": "JawRool",
        "subreddit": "cscareerquestions",
        "content": "I don't know exactly what to do or where to start preparing for interviews. I'm terrible at resumes. I've only had one job in the field at 2.5yoe that I got because I did a coding bootcamp and I knew the owner personally from my last line of work. I'm tied into a lease for another year in a small-ish city in my state.\n\nIs there a good resource to start? I know I should do the NeetCode 150 or whatever it is. Sorry still in shock.",
        "score": 133,
        "upvote_ratio": 0.9,
        "num_comments": 38,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktuxoy/just_got_blindsided_by_a_layoff/",
        "created_utc": 1748035269.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktz2xa",
        "title": "Is the chance of getting a job for mediocre new grads effectively zero",
        "author": "throwaway10015982",
        "subreddit": "cscareerquestions",
        "content": "My degree just cleared and will be awarded soon so I'm genuinely wondering if It's Over For New Grads. I realized that I currently don't know what to do. I don't really have anything to put on my resume. I don't even understand what is considered a \"reasonable\" project. I've known people growing up who were bonkers good at programming, like building up a basic 3D engine from scratch as a teenager. Is that where you should be?   I've been told that no internships is essentially auto reject where I'm at.\n\nI'm glad I didn't pay anything for my degree but it's really weird having my family be proud of me realizing that I'm probably just going to keep working the same shitty retail job forever. I don't have particularly high salary expectations either, for the Bay Area I'd settle for anything at or above $70,000 lol...\n\nI've been looking at different careers my whole last semester and just considered my CS degree as \"personal enrichment\" and waffled through it knowing there weren't really any employment opportunities for the average person but it's weird thinking about how you're completely soft locked out of the industry if you don't do everything right. If I wanted that I would have gone into finance or something.\n\nWhatever.",
        "score": 111,
        "upvote_ratio": 0.88,
        "num_comments": 154,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktz2xa/is_the_chance_of_getting_a_job_for_mediocre_new/",
        "created_utc": 1748047158.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuiv7b",
        "title": "7 yoe full stack dev, burnt out after 100s of applications, thinking of giving up tech, Which field can I pivot into ?",
        "author": "maknom_66",
        "subreddit": "cscareerquestions",
        "content": "I’ve been doing full stack dev for 7 years. Nothing flashy, just solid, real-world experience: frontend, backend, a bit of devops. The kind of stuff that keeps products running. No flashy startups or MAANG names on my resume. Just regular jobs at regular companies.\n\nWhile I am still currently employed, I wanted to increase my income due to rising expenses and no appraisal since last 2 years, so I started looking for a switch. Over the past 3 months, I’ve applied to hundreds of jobs ( I know it's not enough ). I’ve rewritten my resume, practiced for interviews, tried reaching out recruiters on linkedin, tried to get some freelance work. Still, nothing worked out, the responses are either ghosting or rejections, or nothing at all.\n\nWhile I've built some solid products in my current company, I have no idea how to use it to stand out. I never got the time to work on any side projects which I can showcase. I know for the matter of fact and have accepted it that my resume will never stand out amongst 100s if not 1000s of applications on every job post.\n\nI’m not the type to post on X or LinkedIn every day to build a personal brand ( I did started a youtube channel though). I don’t have what it takes to contribute to open source just to maybe get noticed ( I know open source contribution is not meant to seen as a way to get job, but it is what it is). I just wanted to quietly do good work, but that doesn’t seem to count for much anymore.\n\nI feel like I’m shouting into the void. I used to love building things, but now it just feels like I’m stuck. No one wants experience unless it’s from a specific company or school maybe.\n\nI’m seriously wondering if it’s time to walk away, and leave tech entirely. I don’t even know what I’d do instead, and that scares me.\n\nHas anyone been through this? Which field do you think I can pivot into as a tech guy, so that I can earn almost similar and more in the longer run ?\n\np.s: I took help of gpt to write this post, to express what I am actually feeling.",
        "score": 98,
        "upvote_ratio": 0.86,
        "num_comments": 44,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuiv7b/7_yoe_full_stack_dev_burnt_out_after_100s_of/",
        "created_utc": 1748112588.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv1fuo",
        "title": "Do any of you work with someone 60+ that still codes on a daily basis?",
        "author": "Celcius_87",
        "subreddit": "cscareerquestions",
        "content": "Im a senior dev and don’t plan to move up the ladder any higher. I’m thinking about someday when I get older (60) but I’m not quite ready to retire yet (65) and what life would be like coding on a daily basis, working with people far younger, etc…\n\nAre any of you already at this point in life, or work with someone who is?\n\nDo they still enjoy coding or the job, or do they seem disinterested and burned out?\n\nI know many people at that age have either moved into management or higher engineering roles like architect/principal so just wondering what it’s like to still be coding on a daily basis at that age.",
        "score": 81,
        "upvote_ratio": 0.96,
        "num_comments": 100,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv1fuo/do_any_of_you_work_with_someone_60_that_still/",
        "created_utc": 1748176356.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ku098r",
        "title": "What’s the funniest comment you’ve ever found in Code?",
        "author": "An_Engineer_Near_You",
        "subreddit": "cscareerquestions",
        "content": "Like in the documentation describing a class or function?",
        "score": 83,
        "upvote_ratio": 0.9,
        "num_comments": 92,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ku098r/whats_the_funniest_comment_youve_ever_found_in/",
        "created_utc": 1748050910.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks4zs9",
        "title": "To those who aren’t in a computer science role or unemployed, what are you doing and what are your plans going forward?",
        "author": "NewLegacySlayer",
        "subreddit": "cscareerquestions",
        "content": "The market is still pretty bad and the future market outlook doesn’t look that good right now either. What are you doing right now and what’re your plans going forward? ",
        "score": 68,
        "upvote_ratio": 0.95,
        "num_comments": 44,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks4zs9/to_those_who_arent_in_a_computer_science_role_or/",
        "created_utc": 1747851541.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks3vrh",
        "title": "Free access to all the problems in Beyond Cracking the Coding Intrview",
        "author": "alinelerner",
        "subreddit": "cscareerquestions",
        "content": "Hey folks, I'm Aline, one of the authors of *Beyond Cracking the Coding Interview*. We just compiled every problem (and solution) in the book and made them available for free. There are \\~230 problems in total. Some of them are classics like n-queens, but almost all are new and not found in the original CTCI.\n\nYou can read through the problems and solutions, or you work them with our AI Interviewer, which is also free. I'd recommend doing AI Interviewer before you read the solutions, but you can do it in whichever order you like. When you first get into AI Interviewer, you can configure which topics you want problems on, and at what difficulty level.\n\nHere's the link: [http://bctci.co/problems](http://bctci.co/problems) (You'll have to create an account if you don't already have one, but there's nothing else you need to do to access all the things.)",
        "score": 70,
        "upvote_ratio": 0.92,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks3vrh/free_access_to_all_the_problems_in_beyond/",
        "created_utc": 1747848895.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvod9h",
        "title": "Laid off C++/Unreal Engine dev, unsure where to go next",
        "author": "PRAXULON",
        "subreddit": "cscareerquestions",
        "content": "Can't sleep, felt like posting. I have about 6 years of experience, multiple shipped titles with AA/AAA studios. Issue is I've pretty much only programmed in Unreal Engine and because of that I'm at a disadvantage looking outside the industry, but the game industry is more on fire than the rest of tech right now. \n\nSeems like the only option is grinding leetcode and hoping for the best, but holy fuck I'm rusty. I used to be a good Lil leetcode robot when I graduated but now God damn. Not sure what I can do to upskill or what to reskill into. \n\nI have a somewhat decent contract gig right now but when that ends idk what Im gonna do lol. ",
        "score": 70,
        "upvote_ratio": 0.94,
        "num_comments": 47,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvod9h/laid_off_cunreal_engine_dev_unsure_where_to_go/",
        "created_utc": 1748244209.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuiqe7",
        "title": "Do you just continuously grind/study while working?",
        "author": "Dazzling-Rooster2103",
        "subreddit": "cscareerquestions",
        "content": "With the risk and fear of layoffs looming over everyone, do you just continuously grind and study for interviews? I am coming up on a year at my current job and have not touched any interview style questions in a while, and am getting a little scared.",
        "score": 58,
        "upvote_ratio": 0.85,
        "num_comments": 58,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuiqe7/do_you_just_continuously_grindstudy_while_working/",
        "created_utc": 1748112225.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvcv4u",
        "title": "Is it worth it to study a field in computer science nowadays?",
        "author": "EstablishmentNo816",
        "subreddit": "cscareerquestions",
        "content": "I plan on studying either cybersecurity or software engineering but considering the recent developments in AI and the horror stories I hear about CS majors being homeless, I’m wondering if I should study this or go into a trade. ",
        "score": 63,
        "upvote_ratio": 0.72,
        "num_comments": 103,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvcv4u/is_it_worth_it_to_study_a_field_in_computer/",
        "created_utc": 1748206592.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kt42um",
        "title": "Incredible amount of downtime at internship",
        "author": "Felix_Todd",
        "subreddit": "cscareerquestions",
        "content": "So I am starting my first internship at a bank. I got tasked with a simple frontend feature for the whole 3 weeks sprint and I have my PR approved after 3 days. \nI kind of dont have anything to do rn and am confused as to if this is normal for other people in internships???",
        "score": 57,
        "upvote_ratio": 0.91,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kt42um/incredible_amount_of_downtime_at_internship/",
        "created_utc": 1747953397.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kscroh",
        "title": "AI Hype vs My reality",
        "author": "phy2go",
        "subreddit": "cscareerquestions",
        "content": "Several teams at the company I left were genuinely excited that I had a solid understanding of data, training processes, and model architecture. You’d think that, given this enthusiasm, the company’s careers page would be full of job postings for machine learning engineers. But no — not a single opening mentioned ML.\n\nBillionaires often say, “If I were young today, I’d learn AI!”\n\nWell, I am young, I’ve earned a master’s degree with a focus in ML, and I’m actively in the field — yet I’m struggling to find a job. I apply over and over again, but get no responses.\n\nThe media urges everyone to “learn ML as soon as possible.” But from where I’m standing, on the other side of that advice, I’m not seeing the promised benefits.\n\nSide note: I should be fine for the next few months thanks to my emergency fund. Left my old company because I know if I stayed I wouldn’t see career growth. ",
        "score": 52,
        "upvote_ratio": 0.83,
        "num_comments": 56,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kscroh/ai_hype_vs_my_reality/",
        "created_utc": 1747871251.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvrs94",
        "title": "What's the advice you actually need?",
        "author": "capn-hunch",
        "subreddit": "cscareerquestions",
        "content": "How can people with more experience help you? Tell us directly. I may not be the one to help, but someone who knows what you need may see it.\n\nEdit: please upvote for visibility, let’s help folks out",
        "score": 52,
        "upvote_ratio": 0.91,
        "num_comments": 43,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvrs94/whats_the_advice_you_actually_need/",
        "created_utc": 1748258044.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krah5g",
        "title": "How common is it to bomb a technical?",
        "author": "HalcyonHaylon1",
        "subreddit": "cscareerquestions",
        "content": "Is it just me of has anyone bombed a technical? Tell me your experience.",
        "score": 54,
        "upvote_ratio": 0.87,
        "num_comments": 52,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krah5g/how_common_is_it_to_bomb_a_technical/",
        "created_utc": 1747761399.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kszhl9",
        "title": "Medicaid cuts affect on Hospital employment",
        "author": "Nomski88",
        "subreddit": "cscareerquestions",
        "content": "With Trumps recent cuts to Medicaid how will this affect hospitals and healthcare? I work in healthcare IT and was confident in it being somewhat recession proof but now it looks like no industry is safe. Thoughts?",
        "score": 44,
        "upvote_ratio": 0.81,
        "num_comments": 42,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kszhl9/medicaid_cuts_affect_on_hospital_employment/",
        "created_utc": 1747941888.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksf1yd",
        "title": "Why do people love talking about scale?",
        "author": "jeddthedoge",
        "subreddit": "cscareerquestions",
        "content": "Everywhere I go I see people talking about problems of scale. It's a core component of system design interviews, and LinkedIn bios are quick to mention they worked on systems with 10mil DAU, MAU etc. Some advice I see on what makes an impressive personal project disregard the project itself but rather focus on the number of actual users and how they scaled when their user base exploded. Is this just a big tech thing? Or are people who have handled scale actually more skilled? Especially since many companies outside of big tech don't have scalability as their main problem.",
        "score": 44,
        "upvote_ratio": 0.89,
        "num_comments": 66,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksf1yd/why_do_people_love_talking_about_scale/",
        "created_utc": 1747878228.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kts6zr",
        "title": "I wish people wouldn't downplay the effort as developer",
        "author": "MoneySounds",
        "subreddit": "cscareerquestions",
        "content": "Preface: I am still a junior dev in terms of YoE and would consider myself an average-level dev, in that I can read code, debug, navigate through the codebase, figure out what questions to ask. \n\nBut I wouldn't be able to implement something from scratch with ambiguous to no information or even rewrite or refactor a module.\n\nOK. So, i've been browsing this sub for maybe 3 years? and I would sometimes read opinons here or other subs just how easy their software dev job is and that the challenging part is just passing the interview..\n\nAnd I feel like that is a lie.. obviously jobs differ from company to company, project to project etc.. \n\nIn my case I was lucky enough to deal with good people, managers, business analysts, stuff people would complain about but if there is something I would complain is the work itself.\n\nThere were moments where I would ask myself wtf am I doing working as a developer because some tasks just made me feel like I was staring at a wall, I had no idea how to approach this issue, I would have an idea but going deeper I would eventually get lost and forget why I went down the path the first place.\n\nRight now i'm on a new project which is basically rewrite from scratch of an older project that was done in a couple of years and they want some core functionality implemented in a matter of months..\n\nYou might think, oh that doesn't sound so bad.. the logic is already there. Well imagine that programming paradigm changed so from functional to OOP and that you need to integrate 3rd party vendors as well.\n\nOh yeah I forgot, nobody really talks about how most projects IRL deviate in some way from the online tutorials you're used to, that medium article you though is relevant to your problem? yeah nah. How about that StackOverflow answer? how inconvenient it can't be applied to that one specific use-case you're dealing with.\n\nRight now, i'm questiong myself and my ability to continue a career in this industry, I invested way too much time learning and investing time in another degree will be quite a setback in terms of career growth as well as age. And given the current state of the industry I am counting my blessings but damn can it be challenging.",
        "score": 38,
        "upvote_ratio": 0.78,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kts6zr/i_wish_people_wouldnt_downplay_the_effort_as/",
        "created_utc": 1748028204.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krfnud",
        "title": "Worth getting CS degree after having 6+ years professional experience?",
        "author": "NetParking1057",
        "subreddit": "cscareerquestions",
        "content": "Lost my job 2 months ago and the job search has been pretty abysmal.\n\nMy story is I have no college degree, worked as a chef, then got into a bootcamp and found my first software developer job 6 years ago. I've been in professional development since then.\n\nThis go-around trying to find my next position has been rough, even worse than when I was first started looking for jobs after graduating from the bootcamp. By this time in my search 6 years ago I already had around 9 interviews under my belt. I was applying as routinely as I am today and I had no experience whatsoever, my resume was shit, and I had no solid personal projects to my name. This time around I have gotten 1 interview which seems somewhat promising, but have heard almost nothing beyond that.\n\nToday I FINALLY got in touch with a recruiter who has a (potential) position for me, but he suggested that I may be having a hard time because I do not have a degree and I might be \"filtered out\".\n\nDo people think it's worth getting a CS degree as someone who already has 6+ years pro experience? I know the obvious answer is \"it couldn't hurt\", but is the time and energy put towards a CS degree something that will be particularly beneficial for someone in my position?\n\nOne of the benefits of this career for me was that a degree wasn't necessary to be successful. Is the tide turning against people like me?",
        "score": 37,
        "upvote_ratio": 0.92,
        "num_comments": 68,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krfnud/worth_getting_cs_degree_after_having_6_years/",
        "created_utc": 1747773798.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvabv3",
        "title": "Got a new job offer, am I safe to quit?",
        "author": "Cosmodocus",
        "subreddit": "cscareerquestions",
        "content": "So I got a job offer for Frontend developer at a new company and the start date will be on Jun 9th. \n\nThey’ve sent me the offer letter, which I’ve signed and had signed back by them. \n\nI’ve also completed the background screening and payroll, and I’m only waiting for the laptop to be delivered. I plan on quitting my current work tomorrow so that I can finally get some break in between and spend time with my gf. \n\nAm I safe to resign from my current role? ",
        "score": 33,
        "upvote_ratio": 0.87,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvabv3/got_a_new_job_offer_am_i_safe_to_quit/",
        "created_utc": 1748199926.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kqw9zb",
        "title": "Is my tech career officially toast? 15 years in support, trying to pivot.",
        "author": "cauliflowerindian",
        "subreddit": "cscareerquestions",
        "content": "Hey all,\n\nI’m in a tough spot and could really use some perspective from people in the trenches.\n\nI’ve been in Level 3 support for 15 years—mostly enterprise environments, handling production down issues, root cause analysis, debugging, and code analysis. I’ve developed solid expertise in Java/Linux etc and untangling hairy production problems. I'm the go-to when things go sideways, but… I’m tired.\n\nFor the past 2 years, I’ve been putting in the time:\n\nGrinding Leetcode\n\nStudying system design\n\nTrying to shift my thinking from reactive (support) to proactive (engineering)\n\nI have got 3 on-sites so far but they fell through. Getting an interview seems to be rough. \n\n\nI’m 42 now, with a family, and working in a toxic environment that’s mentally exhausting. The longer I stay, the harder it feels to focus. \n\n\nIs it too late for me to pivot into a dev or system design-heavy role? Or should I double down on my support experience and build a niche consulting gig around that instead?\n\nAnyone here made a late-career pivot from support to dev? Or managed to reposition their career meaningfully after 40? I’m open to hard truths and honest advice.\n\nThanks in advance.",
        "score": 33,
        "upvote_ratio": 0.83,
        "num_comments": 55,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kqw9zb/is_my_tech_career_officially_toast_15_years_in/",
        "created_utc": 1747715373.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksju9t",
        "title": "How are CS majors going into help desk roles?",
        "author": "SignificantTheory263",
        "subreddit": "cscareerquestions",
        "content": "I feel like I was never taught anything in college regarding tech support. I don’t know how to fix those kinds of issues, at least not at a high level. Not to mention, help desk positions are extremely competitive as it is, so wouldn’t employers prefer someone with an IT-related degree to someone with a CS degree? ",
        "score": 32,
        "upvote_ratio": 0.94,
        "num_comments": 38,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksju9t/how_are_cs_majors_going_into_help_desk_roles/",
        "created_utc": 1747894921.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksy3s9",
        "title": "Is being bored of the work a good reason to job hop?",
        "author": "k032",
        "subreddit": "cscareerquestions",
        "content": "My job history has been a like...\n\n* First Job: 2.5 years\n* Second Job: 3.5 years\n* Third Job: Almost 1 year\n\nMy first job to second job I hopped for a salary boost. My last job to this job, I hopped because I was bored of what I was doing. It was a struggle just to wake up and work anymore. I liked the team and the people, but switching projects would have meant possibly moving to a new office. \n\nBut I'm starting to see the same thing again now with the 3rd job...but also it turned into work I wasn't interested in. Development that's just not interesting to me. A team that doesn't really care just putting out slop to collect a paycheck. Lot of micromanaged bullshit of what is developed and bureaucracy. I have some regrets now taking this job and not just staying at my last one.\n\nI'm looking at new positions, specifically trying to leave what I don't like about this current job.\n\nBut I have this fear in my mind like, what if every job just sucks? These positions I've interviewed for have sounded really interesting...but so did this 3rd job to some degree.\n\nSo idk, hopping to a 4th job really salary and pay isn't what I care about. I just want to not be bored.\n\nAnyone have insight on it or thoughts about job hopping to not be bored?",
        "score": 28,
        "upvote_ratio": 0.76,
        "num_comments": 29,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksy3s9/is_being_bored_of_the_work_a_good_reason_to_job/",
        "created_utc": 1747938525.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kszys3",
        "title": "How to get hired as a senior engineer?",
        "author": "Any-Independent-8274",
        "subreddit": "cscareerquestions",
        "content": "I’ve been kind of trapped in a mid level software development position for my past few roles.\n\nI do everything if not more than our seniors do at work. Still the interview process seems to funnel me\nInto mid level when it comes to head knowledge.\n\n\nGranted every company is different and uses senior title interchangeably. Still I feel like it doesn’t look good on my resume as it seems many people get promoted to senior after a few years at their work.",
        "score": 28,
        "upvote_ratio": 0.86,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kszys3/how_to_get_hired_as_a_senior_engineer/",
        "created_utc": 1747943063.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks0med",
        "title": "Is Game Dev a bad idea?",
        "author": "24Gokartracer",
        "subreddit": "cscareerquestions",
        "content": "Recently graduated earlier this month and like many have not gotten a job after hundreds of applications and probably bombed my only OA that I’ve gotten. I was feeling down and was in my thoughts and was remembering the reason why I wanted to do computer science in the first place and that was to make games. Which I feel many of us did but then lost that joy from classwork or maybe a job. Though I was thinking it could be a fun experience, it would help me keep my code and math game up to date, and potentially projects to put on resume. Maybe this could be a good niche to pick out in the software dev world? Would recruiters just dismiss it because it’s “games” and not some spectacular system design? Idk I’ve been thinking about this the past few weeks and wondering if I should just jump into learning on unity or something like that. \n\nAny help or insight is appreciated.",
        "score": 28,
        "upvote_ratio": 0.9,
        "num_comments": 28,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks0med/is_game_dev_a_bad_idea/",
        "created_utc": 1747841112.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksxsmx",
        "title": "Seeking some advice. CS degree, working retail job.",
        "author": "whoami_jav",
        "subreddit": "cscareerquestions",
        "content": "Seeking some advice… \n\nIn March 2023, I completed my B.S. in Computer Science from a UC in Southern California after returning to school following a break in 2019. While in college, I completed an internship at a local tech company doing software engineering and also picked up some freelance web development work.\n\n\n\nAfter graduation, I spent about five months preparing for technical interviews and applying for jobs. Unfortunately, I drained my limited savings during that time and didn’t land any offers. I eventually stepped away from the job search, partly due to frustration and loss of professional motivation and because I really needed money quickly.\n\n\n\nSince then, I’ve been working at an organics grocery store (the rain forest one) for the past year and eight months. I currently make $18.67 per hour, working 30 to 35 hours a week. I’ve recently been offered a leadership-track role that would bump my pay to around $21.50 per hour with a 40-hour workweek. Still, I’m not happy with my financial situation or this job.\n\n\n\nDespite working in retail, I continue to code and try to learn software engineering topics on my days off or when I have the energy after work. That said, it has been difficult to maintain momentum, and I feel like I’ve lost touch with many of the CS fundamentals needed in the field.\n\n\n\nPart of me regrets not going all in on the job search earlier and settling for a grocery store job. Another part of me is grateful for the soft skills I’ve developed in the meantime.\n\n\n\nNow, I want to pivot back into tech and become a software engineer. At this point, I’d take almost any role in the field just to gain experience and start building a network. I know the job hunt will require time, discipline, and financial commitment. Preparing through LeetCode, system design, and personal projects is going to be time consuming, but it’s necessary. I am rusty on a lot topics. That said, reading about the current job market has me feeling anxious.\n\nI’m at a crossroads and feel completely lost. My options are:\n\n1. **Stay in my current role**, working 30–35 hours per week. Continue saving and use my days off or evenings to focus on technical prep (LeetCode and NeetCode). Once I feel ready, start applying.\n\n2. **Accept the leadership position**, work full-time for six months, and save aggressively. This will net me roughly $20,000 in savings considering holiday pay and OT. After that, step back to part-time (I’m able to work from 4 to 24 hours a week) and use my savings to support myself while focusing full-time on interview prep and project work. \n\nI know I made mistakes and as a result I feel so behind on EVERYTHING. Am I about to make another mistake?\n\n",
        "score": 26,
        "upvote_ratio": 0.89,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksxsmx/seeking_some_advice_cs_degree_working_retail_job/",
        "created_utc": 1747937764.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kv7k4v",
        "title": "Graduated December 2022, severely ill since then and am now recovering, what's my best route to get back into the field?",
        "author": "lexiclysm",
        "subreddit": "cscareerquestions",
        "content": "Hi,  \nI (29F, American) graduated college in December 2022 with a BS in computer science. I got severely ill shortly afterwards and was unable to work for the previous two and a half years thanks to that, and I don't have any work experience as a result (no internships either, COVID really screwed me in that regard). I'd really appreciate advice with getting into the workforce now that I'm recovering from my illness.   \nTY in advance!",
        "score": 25,
        "upvote_ratio": 0.89,
        "num_comments": 49,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv7k4v/graduated_december_2022_severely_ill_since_then/",
        "created_utc": 1748192893.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktt92w",
        "title": "Is LinkedIn necessary to land a job?",
        "author": "buttercreamramen",
        "subreddit": "cscareerquestions",
        "content": "Almost everyone I know has a LinkedIn account. I only have a fake one as of now I barely use. Personally, I don’t want anybody to know my full name, everywhere I’ve worked, when I graduated and what I’m doing. I’m a private person. But am I missing out on a lot if I *don’t* create one? I would prefer only employers see it but that’s not possible. Would this put me super far behind on potential opportunities? Especially with how things are right now? I’d like to know how many of you had success or no success with this platform. ",
        "score": 26,
        "upvote_ratio": 0.86,
        "num_comments": 35,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktt92w/is_linkedin_necessary_to_land_a_job/",
        "created_utc": 1748030928.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krd289",
        "title": "Software engineer for 2 years now, but not specialized in anything",
        "author": "Tundratic",
        "subreddit": "cscareerquestions",
        "content": "So far I’ve worked for the same company for 2 years now, out of college, and I’ve had a few different projects using different things, like a react nodejs web app, java applications, bash and C scripts here and there, we also have a very old code base and old system that everything runs on, actually we still use Motif for our main software that we maintain and build for our company. I’ve been fortunate to work on other things though like a web app and Java apps for help doing other things, just being broad because I don’t know if I should go into too much detail on here. But I want to work in more modern state of the art stuff and learn and grow, everyday is pretty boring most of the time im doing nothing. The pay is nice though. But I don’t really specialize in anything, I think I might be full stack? As when I made the applications I’ve made so far; I’ve done both front end and backend. Not really sure what to do any advice for a young engineer like me?",
        "score": 25,
        "upvote_ratio": 0.91,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krd289/software_engineer_for_2_years_now_but_not/",
        "created_utc": 1747767497.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktq6uw",
        "title": "Question for people in their 20s who were recently hired: where did you find the job listing?",
        "author": "amaxingmilk",
        "subreddit": "cscareerquestions",
        "content": "I just can’t take the LinkedIn data farm anymore, so I’m consulting the oracles here on Reddit. Here’s my situation:\n\nI’m 25 years old living in the pacific northwest. I graduated in 2022 with a BS in Mathematics & Computer Science. Currently, I have five years of experience working as an IT consultant. Two of those years were on campus in university, and three of them have been for an MSP after graduation. I’ve also had a hand in a number of DevOps projects at my current employer, so I do have some professional experience with programming and managing CS-related projects.\n\nI want to move onto greener pastures. My current job has no path for promotion and I’m so tired of IT help desk… but I’m pretty sure every job listing on LinkedIn is fake. I’m just not sure where I should be looking instead.\n\nSo, if you’ve recently been in a situation similar to mine and you’ve managed to land a position: where did you find it? Do you work onsite or remote? How long did the process take you?\n\nIf it helps, I’m especially interested in the field of healthcare and biotech. If you have experience there, I’d love to hear from you. :)\n\nThank you!!",
        "score": 23,
        "upvote_ratio": 0.87,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktq6uw/question_for_people_in_their_20s_who_were/",
        "created_utc": 1748023264.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krje7u",
        "title": "What would you say to someone who just started a degree in CS?",
        "author": "Embarrassed_Tower_52",
        "subreddit": "cscareerquestions",
        "content": "Hey everyone,  \n\n\nI'm in my early 30s and recently decided to pivot into computer science after spending my entire working life doing physically demanding jobs. I'm trying to specialize in something that won’t wear down my body and ideally lets me have stronger financial security.\n\nI'm only a semester into the degree but I have to be honest spending time on this subreddit and others related to tech careers has been discouraging. Even other industries display the same issues. It seems like everywhere you look whether it's CS & IT, business & finance, Legal & Administrative or any other white collar alternatives for a career that there’s this overwhelming doom and gloom narrative. High applicant pool causing requirements for consideration to rise, pay not commensurate with job responsibilities, essentially a prime employers market with desperate qualified candidates at their disposal. \n\nWith all this noise, it’s hard to know what’s actually true and with this level of uncertainty about the future it's starting really feel like it doesn't matter what you go for anymore. \n\nWhat advice would you give to help someone navigating these turbulent waters?",
        "score": 23,
        "upvote_ratio": 0.77,
        "num_comments": 101,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krje7u/what_would_you_say_to_someone_who_just_started_a/",
        "created_utc": 1747783565.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kukjya",
        "title": "Adaface is the worst exam",
        "author": "controlpad008",
        "subreddit": "cscareerquestions",
        "content": "Had a coding assessment through Adaface. They give you like 6 multiple choice questions and one coding question. I figured that’s not too bad, multiple choice makes it easier? \n\nWrong. I’ve never had a more challenging exam. Each of the multiple choice questions gives you 4 minutes, which goes by VERY fast when youre thinking through the problem. This was a Python exam. They had a multiple choice question  that was the typical “what does the following code output?” Except it was a convoluted mess of METACLASSES and DECORATORS! Never thought I would see those on a test. \n\nThen the coding question was at least at the level of LC Medium. Anagram type question with multiple arrays. Had to be done efficiently. I kept getting time limit exceeded. And here’s the part that makes me say that Adaface specifically is the worst. They were giving me “advice” to try to put print statements in my code to debug. So I did, ran the tests again… zero visible output. There was no separate console, I clicked around everywhere, either it was hidden somewhere or not explained in the demo but I was out of luck. Couldn’t see what I printed anywhere. Eventually I had to give up and there’s no way I’m getting an interview from this.\n\nGood luck out there guys.",
        "score": 20,
        "upvote_ratio": 0.9,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kukjya/adaface_is_the_worst_exam/",
        "created_utc": 1748117200.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kso3zd",
        "title": "Employers are equally demanding when it comes to non-dev tech roles e.g. QA and devops etc..",
        "author": "razza357",
        "subreddit": "cscareerquestions",
        "content": "I always see advice here telling grads to apply for devops and QA/SDET roles, because they might have an easier time securing the role than they would applying for dev roles.\n\nHiring managers are really selective when it comes to those roles too. They want people with 2+ years experience in those roles who can hit the ground running.\n\nI don't know why grads are being told that they might have an easier time applying for those roles?",
        "score": 19,
        "upvote_ratio": 0.78,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kso3zd/employers_are_equally_demanding_when_it_comes_to/",
        "created_utc": 1747912583.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks2hlz",
        "title": "How many hours a week do you spend studying?",
        "author": "SirSleepsALatte",
        "subreddit": "cscareerquestions",
        "content": "For those who are employed, how many hours a week do you spend studying either refining existing knowledge or learning new tech? Just changed jobs in my previous I did 0 hours of self studying and had to pick up the pace when I was laid off. Now that I am going into another one (onsite) want to make sure I am always on the top of things (knowledge wise). Just dont know how to balance it, work - gym/sports - adulting - social life etc ",
        "score": 17,
        "upvote_ratio": 0.83,
        "num_comments": 56,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks2hlz/how_many_hours_a_week_do_you_spend_studying/",
        "created_utc": 1747845582.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krqwwm",
        "title": "Possible Ray of Hope in Trying Times: Let’s Build Our Own Opportunity",
        "author": "Redgeraraged",
        "subreddit": "cscareerquestions",
        "content": "I was reflecting on [u/SnooTangerines9703](https://www.reddit.com/user/SnooTangerines9703/)'s [post on building startups](https://www.reddit.com/r/cscareerquestions/comments/1kq8hq3/fk_it_lets_build_startups/). It's something that’s been on my mind for a while. I used to think it was too tedious or far-fetched, but lately, desperation and a deep hunger to make something real have completely overridden that imposter syndrome I carried. Reading their post was like hearing my own thoughts said out loud made me hyperfocus on it.\n\nSo here’s what I’m proposing (and may even build myself if I get enough support behind me):\n\n**One group. One community.**  \nLet’s stop being divided and conquered in a dog-eat-dog grind. Let’s build *together*. Learn together. Grow together.\n\nThe idea is to start a community, on Slack, WhatsApp, Discord, Reddit, wherever there's traction where anyone who's serious about learning and building can join. No gatekeeping, just mutual accountability.\n\n**How it would work:**\n\n* Each member logs their learning journey with a start and end date, plus their chosen path (e.g. [`MOOC.fi`](http://MOOC.fi) `Java => Java Internship (3 months) & Java II (3 months)`, `Harvard CS50 => (3 months) => w: Web Dev Internship, ai: AI Internship`, etc.).\n* Proof of completion is required (certs, GitHub commits, demo videos). This isn’t about fluff, it’s about **real growth**\n* Every Thursday or Friday we could have a community event like DSA Thursday/Friday\n* After internship, or if you want to skip it would be **Entry-Level** (the initial commitment would be **6 to 12 months**)\n* Everyone begins by building a **personal project** to set a baseline and gauge their current level.\n* If possible, everyone at this stage is assigned an accountability buddy, preferably one that isn't on the same team so that one person isn't doing the work of another. \n* After that, we begin and transition into **collaborative projects** run in an agile team format. Everyone keeps their main role they want and rotates any unused/unsure roles: designer, dev, PM, tester, to build real-world skills.\n\n# The exposure strategy:\n\nOnce a project is finished, we create a **video breakdown** and post it on LinkedIn, X (Twitter), YouTube, or wherever else makes sense. \n\nEach person is credited for their work and gets the exposure they deserve.\n\nLet’s be real:  \nMost of us are **introverts**.  \nSome of us are **highly skilled**.  \nAnd many of us are **still unemployed**, even while being more capable than folks earning six figures.\n\nThis isn't just about skill, it's about being **seen**.  \nWe need a system that clears the dust off our shine.  \nMany of us are grasping at straws.  \n**Maybe this is what we actually need: real experience, real proof, and real support.**\n\n# Long-term vision:\n\n* After 6+ months, or if your **personal project** stands out, you transition into a **junior developer role** within the group.\n* You start to take on leadership responsibilities and begin developing those soft skills like communication, initiative, and mentoring.\n* By then, or even earlier, you should be ready for a paid role. If not, you’ll still have a strong portfolio, exposure, and momentum to start freelancing or even launch your own thing.\n\n# What a full journey might look like (if starting from zero):\n\n1. **Internship Phase (Learning Phase):** \n   * Java I & II (MOOC.fi), or Full-Stack, or Python, or 2x+ CS50 courses, etc.\n   * \\~6 months total (self-paced)\n   * Initial project (\\~1 month)\n   * Career development + feedback\n2. **Entry-Level Phase**\n   * 3 to 12 projects built with team\n   * Weekly GitHub updates, project demos, and social proof\n   * Lasts 6 to 12 months\n3. **Junior Phase**\n   * \\~6+ months of group work and possible freelancing\n   * Exposure, mentorship, and leadership opportunities\n\nIn total, you’d have **about 2 years of experience**, real-world projects, team collaboration skills, leadership development, and consistent exposure. With that kind of portfolio and growth, **you'd be hard-pressed to find someone who wouldn’t hire you**.\n\nI may start this, but I obviously can’t do it alone.  \nIf you’re interested, or if you have suggestions to improve the idea, **drop a comment or DM me**. Please share this with anyone you think may benefit from this style of rigor, discipline and community.\n\nLet's stop moping and wallowing away our best years in self pity.\n\nLet’s stop waiting for experience and start **building it**.",
        "score": 20,
        "upvote_ratio": 0.71,
        "num_comments": 45,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krqwwm/possible_ray_of_hope_in_trying_times_lets_build/",
        "created_utc": 1747808247.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvfiz4",
        "title": "Software Engineer doing Data Engineer and DevOps Engineer tasks",
        "author": "moogedii",
        "subreddit": "cscareerquestions",
        "content": "As a Software Engineer I find myself doing a lot of Data Engineering or DevOps Engineering tasks. I had several questions about this:\n\n1. Is this common? Is it preferable? Is it a necessary part of becoming a T-shaped candidate, or is it typically considered a downgrade?\n2. Can the small amount of data engineering or devops engineering work I have done be used to pivot into one of those fields, about \\~5 years into software engineering?\n3. Should I be omitting these tasks from my Software Engineering resume?",
        "score": 16,
        "upvote_ratio": 0.83,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvfiz4/software_engineer_doing_data_engineer_and_devops/",
        "created_utc": 1748214036.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksjie0",
        "title": "\"What have you been doing?\"",
        "author": "explosiv109",
        "subreddit": "cscareerquestions",
        "content": "<< Laid off in August 2024 +4 yoe. I started to get questions similar to the title as early as November in my job search... now in May with close to 10 months of unemployment I pretty much always get this question. and I feel like the honest answer is not getting a good response.\n\nThe honest answer is I got laid off when my daughter was only 6 months old and I decided to lean into enjoying being a father... I ramped up applications closer to the end of January when companies had their new budgets for the year and I might see an improvement in my job search. Ive started a sales job about a month ago because $$ keeps the house. \n\nSo my question is what's a good BS response to this question that people might like in interviews?\n\nThis is something I feel tempted to rant about but what am I to do... I knew this industry made the demand that you keep up with learning modern practices and things like that but it's easy to feel bitter about it... To look at your toddler thinking about how much longer things can continue as they are before you lose the roof to then taking a phone interview where they ask in fewer words \"What work have you done to keep your skills fresh for no money?\"... I dunno I feel like the time sink the job search is in itself is enough.",
        "score": 16,
        "upvote_ratio": 0.9,
        "num_comments": 25,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksjie0/what_have_you_been_doing/",
        "created_utc": 1747893589.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuvonc",
        "title": "Software engineer wanting to learn actual hands on skills - what worked for you?",
        "author": "spacecowboy0117",
        "subreddit": "cscareerquestions",
        "content": "Burned out SWE in Arizona. Want a side hustle that teaches me something I can touch, not another screen job.\n\nConsidering: electrical work, solar installation, woodworking, car services.\n\nWhat trade skills actually made you money?\nHow long to profitability?\nGood for analytical thinkers?\n\nHave $3-5K for training/tools. Evenings/weekends only.\n\nAnyone successfully transition from desk job to trades even as a side gig ? ",
        "score": 12,
        "upvote_ratio": 0.76,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuvonc/software_engineer_wanting_to_learn_actual_hands/",
        "created_utc": 1748153429.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kssm38",
        "title": "New grad job worries",
        "author": "Blazerified",
        "subreddit": "cscareerquestions",
        "content": "Hi all,\n\nI had two job offers recently and I took one at company A over B. It had a higher salary and seemed better on paper, company B has a new grad training program but a lower salary. I chose company A and I’m on my 4th day here and my whole team is Indian and while they seem nice, there are a lot of contractors and I’m worried about being excluded and not being able to learn. I rescinded my offer with company B on monday. Could I renegotiate with company B perhaps to work there instead? I’ve heard bad things about all indian teams and i didn’t realize I would be the only white person.  Not trying to be racist but the company advocates diversity",
        "score": 13,
        "upvote_ratio": 0.79,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kssm38/new_grad_job_worries/",
        "created_utc": 1747925318.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks7s4q",
        "title": "How hard is it to get a job in data science if you get a masters?",
        "author": "N0T_an_ape",
        "subreddit": "cscareerquestions",
        "content": "I have a bachelor's in computer science and I got a job with it at the beginning of last year. Then I got laid off and I've had a hard time finding a new job. I started thinking about going back to school to get a masters in data science so that I can sit out the troubles going on right now. Once I complete my masters hopefully the troubles will be over and I'll have a masters to boot\n\n\n\nI have heard that data science jobs can be hard to come by because people usually stay for a long time when they get those jobs. Is that true?\n\nHow bad are the troubles for potential data scientists?\n\nHow hard is it to find an internship in data science?\n\nAre there other ways into a data science job besides having a software engineering job?",
        "score": 13,
        "upvote_ratio": 1.0,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks7s4q/how_hard_is_it_to_get_a_job_in_data_science_if/",
        "created_utc": 1747858240.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuhu65",
        "title": "What kinds of work are Jr developers expected to do these days?",
        "author": "CooperNettees",
        "subreddit": "cscareerquestions",
        "content": "lately I was reflecting that a lot of the work I did the first few years of my career wouldn't really need devs as much anymore.\n\nI started my career off translating phd produced matlab scripts into c code running on accelerated hardware and then comparing the output of their scripts against my rewritten code. i spent 3 years doing this. these days, it would be possible to capture 95% of the value I brought to that role by annotating their python code with numba annotations. and I think it would be good enough to ship.\n\nand this is the broader pattern ive noticed; the tooling is way, way better than when I started. a lot of people focus on AI but I just think about how difficult every little thing was before. I never saw a researcher get their work out to production early on in my career, and now it seems like ops is an expectation of the ML / researcher role. part of the reason thats possible is how good the tooling is now. not everything has to be rewritten to c, or created from scratch in a matrix compatible arrangement of html + css + vanilla js.\n\nI havent worked with young devs since 2018. so I guess I am wondering, what kinds of work are jr developers being expected to do today? is there still a lot of the same kind of work I started out doing or is it different? appreciate any insights people might offer.",
        "score": 12,
        "upvote_ratio": 0.85,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuhu65/what_kinds_of_work_are_jr_developers_expected_to/",
        "created_utc": 1748109834.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kshi1e",
        "title": "Should I be worried?",
        "author": "Glum_Worldliness4904",
        "subreddit": "cscareerquestions",
        "content": "Recently started as a tech lead on a contract basis, hired 4 devs (2 senior, 2 mid) and successfully delivered 2 milestones.\n\nYesterday our CTO simply said \"here's our new dev\" that join my team. I've not interviewed them neither was aware that we're still hiring. Today CTO started working on a roadmap with the new dev and without consulting me handed over to them 1 of the 2 initiatives my team was working on. \n\nIs it a common practice? How should I react?\n\nThere's been some miscommunication with the CTO sometimes, but we mostly work well together and deliver good result. I'm slightly confused.",
        "score": 12,
        "upvote_ratio": 1.0,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kshi1e/should_i_be_worried/",
        "created_utc": 1747886080.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krixfv",
        "title": "Will unpaid internships become the norm for software engineering in the future?",
        "author": "squatSquatbooty",
        "subreddit": "cscareerquestions",
        "content": "A group of coworkers brought up the idea of unpaid internships for new grads and students to prove their worth. By law, most states say the employee must be the beneficiary of it to be unpaid but we all know new grads aren’t very productive. Would you new grads or students participate in a few years of unpaid internships to prove your skills to hopefully get a full time paid  offer? The coworkers came from Europe and said unpaid internships for many fields are common. It seems the USA is going to late stage capitalism which Japan and the more developed parts of Europe are already at. ",
        "score": 11,
        "upvote_ratio": 0.57,
        "num_comments": 55,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krixfv/will_unpaid_internships_become_the_norm_for/",
        "created_utc": 1747782266.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kslp2o",
        "title": "Anyone took the Java 17 IKM Test? It's impossible.",
        "author": "InsomniaEmperor",
        "subreddit": "cscareerquestions",
        "content": "I'm applying to a company and they asked me to take this test. I have 3 years of experience with Java. But the questions are mostly really niche stuff that I have never encountered in my career. It's not even things that would assess if you got a basic understanding of Java. To make things worse, the test format is select up to 3 correct answers out of 5 so you practically have to memorize every single property of a class and know all the combinations that would produce the output that they give. I have never encountered this level of bullshit in my line of work because you're not actually expected to memorize methods and such. Somehow you have to think like a compiler. Not even LeetCode tests are this bullshit.",
        "score": 11,
        "upvote_ratio": 0.79,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kslp2o/anyone_took_the_java_17_ikm_test_its_impossible/",
        "created_utc": 1747902890.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvcpcr",
        "title": "People who have always worked in the lower US salary bands, are you also feeling the drop in wages too?",
        "author": "ExitingTheDonut",
        "subreddit": "cscareerquestions",
        "content": "I've seen several times that overall CS salaries are dropping, but they're usually just comparing the salaries that are close to the average or higher than average. But what about the ones in the below average salary bands, like the people who live in the lowest cost of living parts of the US, in the lower bands? If the roof is slowly collapsing, how are the people at the ground floor, so to speak, feeling it? Average has dropped from $125k to $109k in my area but I have never reached that far. I'm more used to $50k to $70k salaries since I've started so I'd like to see how others in that range are feeling the drop.",
        "score": 9,
        "upvote_ratio": 0.7,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvcpcr/people_who_have_always_worked_in_the_lower_us/",
        "created_utc": 1748206172.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks6orw",
        "title": "Seniors, what is your pass/fail ratio?",
        "author": "ffekete",
        "subreddit": "cscareerquestions",
        "content": "I am applying to some roles and so far I failed all three interviews. I just had a technical I feel like I failed - I was not focused, babbling like a child, couldn't clearly articulate my thoughts. This is a job I really liked and really wanted, yet I bombed it and I feel like a loser.\n\nWhen I think back my past experience it always took me about 10-15 attempts to get one offer. Every company I interviewed with asks completely different questios, one is super focused on networking, other is on multithreading, third is on kubernetes, etc... I feel like I don't deserve to be a senior dev as I just fail all my technicals and once I finally pass it feels like sheer luck.\n\nHow many technicals do you failed before landing an offer?",
        "score": 10,
        "upvote_ratio": 1.0,
        "num_comments": 37,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks6orw/seniors_what_is_your_passfail_ratio/",
        "created_utc": 1747855592.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kurjg4",
        "title": "How likely am I to hear back from recruiters who hold my information for a later?",
        "author": "Fluenzia",
        "subreddit": "cscareerquestions",
        "content": "Like everyone else I've been applying to many jobs and I've had 2 replies that weren't the boiler plate \"we have decided to move on with other candidates\".\n\nOne was an email from someone at the company saying they'd like to stay in touch in case anything comes up.\n\nThe other was a phone call where I found out I was unable to interview for the job because of my citizenship and security clearance requirements. They also said they'd like to stay in touch.\n\nMy question is, how likely are these to go anywhere? Obviously I'm still applying and will send a follow-up email in a couple months to touch base, but just wanted to know where I stand.",
        "score": 7,
        "upvote_ratio": 0.74,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kurjg4/how_likely_am_i_to_hear_back_from_recruiters_who/",
        "created_utc": 1748138361.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ku6hdx",
        "title": "I feel like I'm spread too thin",
        "author": "NamNGB",
        "subreddit": "cscareerquestions",
        "content": "Recently, as graduation is approaching, I've been feeling like I'm spread too thin. I know a bit about cybersecurity, embedded systems, and machine learning. I feel like I'm learning too many different things, which might be bad for employability. I feel like listening to the saying \"Jack of all trades, master of none, oftentimes better than master of one\" might be coming back to bite me in the butt.\n\nI'm currently working at a cybersecurity company as an intern and I feel like I'm worse than the other interns in terms of cybersecurity skills but I know more about embedded systems and machine learning than them.\n\nI'm looking into how to combine my skills together but I feel like the intersection between cybersecurity, embedded systems, and machine learning doesn't have much jobs outside of being a researcher in academia.",
        "score": 8,
        "upvote_ratio": 0.83,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ku6hdx/i_feel_like_im_spread_too_thin/",
        "created_utc": 1748074063.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktiue4",
        "title": "I’m struggling to learn & grow in my first dev job - how can I improve and get hired elsewhere?",
        "author": "elsa-mom8",
        "subreddit": "cscareerquestions",
        "content": "Hi everyone, I’m a graduate software engineer working in a Big 4 consulting firm. I’m about 9 months into my first role, and while things have improved a bit, I’m still really struggling and could use some career advice.\n\nSo heres a bit about my background. I started in tech through a conversion Master’s and landed a graduate role in a Big 4 consultancy. The first few months were rough. I was getting minimal work, no mentorship, and I felt totally lost. I nearly quit, but after speaking to management, I was paired with a senior dev and shifted to frontend (React), which I’m more comfortable with.\n\n\n\nMy problem is that I’m still not learning like I want to. I lean too heavily on ChatGPT and feel like I don’t really understand what I’m doing. I feel stuck and like I’m not becoming a better software engineer. I’m constantly being rejected from even other graduate level dev jobs, and I don’t know what I’m doing wrong. I have completed a couple of interviews, one company was kind of a dream role which I do think I was pretty unqualified for but I did get to the final stage of the process. I actually pulled out of another interview process because I realised during the first interview that this wasn’t the right job for me.\n\n\n\nSo here’s what I’m doing to try to learn and get better. I have an active github with personal projects, and a publicly available CV website. I attempt most leetcode daily challenges, and complete online udemy courses. I also attend local tech meetups and listen to tech podcasts to expand my knowledge.\n\n\n\nSo these are my questions:\n\n* *How do I get better as a software engineer when I feel like I’m just guessing or relying on AI?*\n* *What do other junior devs do to actually learn rather than just getting by?*\n* *Why do I keep getting rejected from other jobs/how can I make myself stand out?*\n\nAny advice, resources or honest stories from other devs would really help. Thanks!\n\n  \n",
        "score": 9,
        "upvote_ratio": 0.91,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktiue4/im_struggling_to_learn_grow_in_my_first_dev_job/",
        "created_utc": 1748004862.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktdr5c",
        "title": "Should I leave boring but relatively safe job for a temporary startup job?",
        "author": "Interesting_Gate_963",
        "subreddit": "cscareerquestions",
        "content": "Fullstack software engineer with 5 YOE here.\n\nI have a relatively stable job in a mid-large sized corporation. They pay pretty ok, nothing crazy, but more than enough for my needs.\n\nThe benefits are really good though. I.e. all in all I have about 35 days of PTO, I get a yearly bonus, budget for entertainment etc.\n\nI've got an offer to join a startup. It's almost certain that the job in the startup will be gone in two years from now. They base pay is around 100% bigger than my current one. \n\nIf I calculate every benefit and split the pay by the number of working days in the year - start-up pays around 65% more per working day.\n\nI'm a type of the person that prefers stability. The stories of people sending 500 CV and getting invited to 2-3 interviews scares me a lot.\n\nOn the other hand - no job guarantees endless stability - I know it. However something is stopping me from losing it on purpose.\n\nAny thoughts?",
        "score": 7,
        "upvote_ratio": 0.77,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktdr5c/should_i_leave_boring_but_relatively_safe_job_for/",
        "created_utc": 1747985975.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks2tf1",
        "title": "How much willingness and desire to work can one project?",
        "author": "Cool_Difference8235",
        "subreddit": "cscareerquestions",
        "content": "I was asked by a recruiter in a video interview what my salary range is.  I said I was open and that should not be an issue.  He said \"Well if i I said I had a job for 60K, you would not be thrilled with that.\"  I said \"In this market I will take a job in the field at any salary\"  There was an awkward silence and I have yet to hear back from them.  A friend told me that my comment was a huge candidate No-No.  Isn't what I said just common sense at this point?  Or are we supposed to pretend that it isn't. ",
        "score": 8,
        "upvote_ratio": 0.83,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks2tf1/how_much_willingness_and_desire_to_work_can_one/",
        "created_utc": 1747846371.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krql53",
        "title": "Entry level jobs outside of webdev",
        "author": "Outrageous_World_868",
        "subreddit": "cscareerquestions",
        "content": "Which CS-RELATED jobs EXIST that can be found on ENTRY-FUCKING-LEVEL that are not webdev?\n\nDevops is for people wth 290451372 years of experience only. Same for data engineering. Same for security. Hardware programming hardly exists at all.",
        "score": 9,
        "upvote_ratio": 0.84,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krql53/entry_level_jobs_outside_of_webdev/",
        "created_utc": 1747806957.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kw8bep",
        "title": "Going back to school for computer science.",
        "author": "Ditysora4589",
        "subreddit": "cscareerquestions",
        "content": "Good day all.\n\n I'm on my way to start school by fall this year and looking at the computer science degree. I'm just nervous about all the doom and gloom of the industry. It feels uneasy knownthat the only thing I'd he interested in getting a degree in is potentially worthless. \n\nIs the fear well warranted? Should I consider something else? I really want this. \n\nAny advice will be much appreciated.",
        "score": 12,
        "upvote_ratio": 0.75,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kw8bep/going_back_to_school_for_computer_science/",
        "created_utc": 1748300826.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvow4w",
        "title": "Best way to cram system design FAST?",
        "author": "kellojelloo",
        "subreddit": "cscareerquestions",
        "content": "Up until this point, I’ve focused 100% on leetcoding in order to pass the screening. \n\nNow that I’ve started passing screening, I’m lost with the system design interview. I have minimal system design experience and 0 prep. \n\nI might be able to push the next rounds out a bit, but not much.  What is the best way to approach this?  The fastest and most efficient way. How much time will I need? \n\nWill appreciate any help or insights. \n\nThank you ",
        "score": 8,
        "upvote_ratio": 0.73,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvow4w/best_way_to_cram_system_design_fast/",
        "created_utc": 1748246358.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuv608",
        "title": "Should I ask to switch teams at my SWE internship? (Go vs Rust)",
        "author": "Ludo7777",
        "subreddit": "cscareerquestions",
        "content": "Starting a SWE internship soon and got placed on a team using Rust, but I was hoping for Go. I'm worried because:\n\n1. **Job market:** Rust seems way less in-demand than Go if I don't get a return offer\n2. **Side projects:** I have zero personal projects and want to learn something I can build with quickly (web apps, APIs, etc.)\n3. **Learning curve:** Rust looks hard and slow for prototyping vs Go's simplicity\n\nBackground: CS student, mostly coursework experience (Python/Java/C), been self-learning Go. Not interested in systems/gaming stuff where Rust shines.\n\nIs it worth asking for a team switch this late in the process? Will I look incompetent? Or should I just not mention this and stay in my assigned team?\n\n**TL;DR:** Got placed on Rust team, wanted Go team. Worried Rust won't help with job prospects or side projects. Ask to switch or deal with it?",
        "score": 6,
        "upvote_ratio": 0.81,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuv608/should_i_ask_to_switch_teams_at_my_swe_internship/",
        "created_utc": 1748151410.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktt4ng",
        "title": "AI Engineer vs Mobile Dev - Should I Switch Careers ? (For less pay )",
        "author": "HitoriBochi1999",
        "subreddit": "cscareerquestions",
        "content": "Let me get to the point — I'd really like to hear opinions from Senior devs especially.\n\n I'm an Argentinean Mid-level Mobile Developer, specializing in native Android, but I’ve also worked quite a bit with React Native.\n\nI got offered a job as an AI Engineer thanks to a friend who works there, but it would be as a Junior. The thing is:\n\n1. They pay less\n\n2. It’s for a US-based startup , and there aren’t many real benefits\n\n3. It’s full-time (not contractor)\n\n4. It’s kind of weird because the technical interview is basically a classic FullStack mini-project, nothing AI-related… it seems like the position is more oriented towards FullStack work and consuming LLMs. My friend told me he’s now learning TensorFlow/PyTorch (which is actually what interests me the most, same as Architecture modeling), but apparently he doesn’t work strictly with that.\n\n----------------------------------------\nI’ve been looking for Senior Mobile jobs in my stack for the past 6 months — they obviously pay more and have better benefits (though I haven't been lucky, I always make it to the 3rd interview only).\n\n---My questions are:\n\n1- What future do you see for Mobile? With AI and the current market, I’m seeing fewer open roles (in LATAM more than anything). Do you think it makes sense to pivot to something with more demand? Or should I double down and specialize in Mobile?\n\n2- Do you think it’s worth switching to AI Engineering? What future do you see in working with TensorFlow/PyTorch? Or other AI branches ?\n\nP.S. According to a professor I had in college (who’s head of the AI department at a major multinational Spanish company), he said that regardless of what you choose, the future trend is to become an Architect and be an expert in the big picture.",
        "score": 7,
        "upvote_ratio": 0.89,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktt4ng/ai_engineer_vs_mobile_dev_should_i_switch_careers/",
        "created_utc": 1748030624.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksvrpz",
        "title": "a background that doesn't get a single call back",
        "author": "Ready_Plastic1737",
        "subreddit": "cscareerquestions",
        "content": "for some context, im applying for full time roles (not going for FANNG) -- thankfully i have an internship over the summer (friend helped me get this) which I will try to turn into a full time contract (also is that reasonable? or am i shooting for the moon?)\n\nanyways heres my background --> a background in which you dont get a single call back:\n\nBS Physics + MS Computer Engineering with ML/CV focus + 1.9 YOE as ML Engineer.\n\n",
        "score": 7,
        "upvote_ratio": 0.82,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksvrpz/a_background_that_doesnt_get_a_single_call_back/",
        "created_utc": 1747932951.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1krge3f",
        "title": "Is computer science worth pursuing at 50?",
        "author": "BudgetWestern1307",
        "subreddit": "cscareerquestions",
        "content": "I got a Computer Information Systems degree from DeVry (don't judge, I didn't know any better back then), in the early 2000s. Ended up taking a job doing insurance claims because the pay was better than the entry- level CS jobs and because most employers didn't really take my expensive, but largely worthless, degree all that seriously...\n\nThen I moved to another state where there were no insurance companies, so I did various jobs until landing on a freelance writing gig that I did until ChatGpt put that company out of business. Now I'm looking for work and I'm considering trying to get a degree in something from a legit college, but I'm not sure how hard it is to find an entry level job period, let alone find an entry level job at 50 in the tech field.\n\nThe school I'm considering will count the degree I have toward the common core stuff, so basically I'd need just the classes specific to my major. Is it worth spending the money on or am I better off hoping to catch on to some random job that doesn't require a relevant degree?\n\n  \nETA:\n\nThanks to everyone who provided constructive and helpful feedback. To answer some questions: No, CS isn't my dream. I had an interest and aptitude for it when I was young, but I really don't care about it anymore. This is just a terrible job market and I'm trying to find some way to improve my resume in the hopes of finding a halfway decent job, like lots of people.\n\nSo why CS? because believe or not, it keeps getting recommended by people as a \"good field for career changers and older workers.\" Even the silly aptitude test thing they make new students take at the University recommends it and frankly, my impression of the tech field has always been that it's crowded, being heavily outsourced and potentially negatively impacted by AI in the same way my old profession as a writer has been. So, the point of this post was to find out from people who actually work in the field if my impression was wrong and all the people recommending it are right or full of shit. Seems the consensus is that my impression was right and I should look at other options.",
        "score": 6,
        "upvote_ratio": 0.53,
        "num_comments": 111,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1krge3f/is_computer_science_worth_pursuing_at_50/",
        "created_utc": 1747775604.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kt12kw",
        "title": "What's the best way to get through AI job filters?",
        "author": "BlackBeard558",
        "subreddit": "cscareerquestions",
        "content": "I want to know how to get my resume through because I keep applying and getting rejected for jobs I have most or sometimes all ths requirements for. I need to change my resume seems to be the problem but I'm not sure how.",
        "score": 7,
        "upvote_ratio": 0.82,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kt12kw/whats_the_best_way_to_get_through_ai_job_filters/",
        "created_utc": 1747945749.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks51uv",
        "title": "On the job hunt.  What does the community thinks about each of the different job listing platforms?",
        "author": "MrAckerman",
        "subreddit": "cscareerquestions",
        "content": "Recently joined the ranks of the laid off.  I'm an Los Angeles based Sr. Dev with \\~9 YOE.  Haven't been on the hunt in a while, so I wanted opinions on each of the job listing sites and their pros/cons.\n\n\n\nLinkedIn was king last time I was looking.  I used to have multiple recruiters DMing me every day, but that's all in the past.  Even jobs that have been posted < 4 hours ago have 100+ applications.  However, applying here is really simple.  So maybe this lends itself to bots, etc.\n\n\n\nDice/Indeed seemed very scammy with overall lower quality postings than the last time I tried using them.   I also remember it being a pain in the ass to use and apply, but maybe that's changed in the last couple years.\n\n\n\nWhat are people gravitating towards these days?",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks51uv/on_the_job_hunt_what_does_the_community_thinks/",
        "created_utc": 1747851681.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kr89y8",
        "title": "Any desk recs for long hours coding?",
        "author": "FlanTravolta",
        "subreddit": "cscareerquestions",
        "content": "You know fixing bugs and cleaning code is never ending game. I have chronic neck tension and sciatica when im now just 29. Both my job as developer and works on a side startup project make me sit for really long hour. I’m guessing from poor posture and my sports injury from the past \n\nSo I’m trying to fix this and bought a nice Aeron from reddit reviews here. Exercise with YT every morning. It has been alright, but curious if standing desk that gonna help me to deal with back problems and worth spending money on, I guess if 500 could save my back so it's no big deal. \n\nI’d love to hear your real life experience as ads does not seem to be trustworthy. Thanks",
        "score": 6,
        "upvote_ratio": 0.88,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kr89y8/any_desk_recs_for_long_hours_coding/",
        "created_utc": 1747756208.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kw9c6z",
        "title": "Where to go now?",
        "author": "MMForTheWin",
        "subreddit": "cscareerquestions",
        "content": "I’ve been a Native iOS/Android SWE for 15/8 years respectively. I’m currently employed, but I’m getting super stressed about the current/future employment climate. I’m wondering what positions others have pivoted to after spending so much time as a dev. I have no project/people management experience. So I’m trying to figure out what in the world to do.",
        "score": 7,
        "upvote_ratio": 0.74,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kw9c6z/where_to_go_now/",
        "created_utc": 1748303801.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvo497",
        "title": "Is master’s degree worth it?",
        "author": "ummetinlideri",
        "subreddit": "cscareerquestions",
        "content": "I’m a CS graduate and I have several years of experience. I’m currently employed and I have enough free time to study for this. The degree will be free, however is it worth it? Can a master’s degree help me in the future for new job opportunities? ",
        "score": 5,
        "upvote_ratio": 0.69,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvo497/is_masters_degree_worth_it/",
        "created_utc": 1748243215.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuovaf",
        "title": "Anyone here works for Apple as a contractor?",
        "author": "elle_c12",
        "subreddit": "cscareerquestions",
        "content": "It would great if I find anybody here who works as a contractor for Apple for some advice. Here is a producer role that I am so interested in and need some guidance on the application process: https://directsource.magnitglobal.com/us/applecontingentworkforce/jobs/88610-producer-remote-remote?utm_source=LinkedIn&utm_medium=Manual_Posting\n",
        "score": 6,
        "upvote_ratio": 0.61,
        "num_comments": 32,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuovaf/anyone_here_works_for_apple_as_a_contractor/",
        "created_utc": 1748129540.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kuo36c",
        "title": "9 years experience, minimal system design experience",
        "author": "kellojelloo",
        "subreddit": "cscareerquestions",
        "content": "I have 9 years experience, mostly developing niche desktop applications in dinosaur companies using antiquated frameworks, and minimal system design experience.\n\nI’ve also developed a few simple CRUD web applications from end to end, but never had to scale.\n\nI feel very badly positioned in this market. How should I be approaching interviews and position myself better in this market overall? Any advice is appreciated! Please help me. Thank you",
        "score": 5,
        "upvote_ratio": 0.79,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuo36c/9_years_experience_minimal_system_design/",
        "created_utc": 1748127208.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kt933m",
        "title": "Cybersecurity with a CS degree?",
        "author": "cojode6",
        "subreddit": "cscareerquestions",
        "content": "I'm entering my 2nd year of a CS degree, and no university near me offers a cybersecurity degree, but there is a cybersecurity certification program I might try to do after (Plus I love my school I'm at). I wouldn't hate SWE and I have tons of experience coding and developing already, but I have a huge interest in cybersecurity. I'm just wondering if I have any chance of a cybersecurity degree with a CS bachelor's (maybe master's if I can afford it). Anybody out there doing security or pentesting with a CS degree?",
        "score": 7,
        "upvote_ratio": 0.89,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kt933m/cybersecurity_with_a_cs_degree/",
        "created_utc": 1747968607.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ksuzrx",
        "title": "Should I stay where I'm at in the cloud or attempt to move into a  pure software engineer role, mostly backend development? How bad is it out there?",
        "author": "buclaoboii",
        "subreddit": "cscareerquestions",
        "content": "I've been in a cloud software infrastructure position for over a decade going from on prem then moving into the cloud. I been picking up Springboot and took some time building a couple web app projects over the months to learn the framework and supplement my deployment knowledge of my current role. I like it and want to move into purely development. I know the market is a bloodbath, but I want to know what are my chances in getting maybe an entry level or beyond entry level (not senior) software engineer role? Anyone been in similar situation wanting to move into a different branch of this field in the current market?",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ksuzrx/should_i_stay_where_im_at_in_the_cloud_or_attempt/",
        "created_utc": 1747931077.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks05ut",
        "title": "How do you explain your thought process while programming?",
        "author": "djmax121",
        "subreddit": "cscareerquestions",
        "content": "I absolutely suck at this on a comical level. SWE with 3 almost 4 years of industry experience with a good amount of projects and some Leetcode practice also. I can program. Doing it live, in 15 minutes, while explaining what I’m thinking, with 3 other engineers watching over me though? Feels like a 30 IQ debuff at the very least.\n\nIt’s honestly like language processing and logical reasoning exist on separate threads, in different languages in my brain. So not only do I have to interrupt the logic thread which is necessary for a coherent, correct solution, I also need to translate it into English language to be presentable and make sense, on the fly. But also keep enough reference of the logic to have something to return to once I explain a point. \n\nThe result is both threads are interrupted frequently and produce incoherent responses. On top of the pressure of being watched and judged for it.\n\nThat’s why I can program a solution in whole, then I can explain it well after it’s all done. Each thread can complete one by one without loss of context mid execution.\n\n\nDoes anyone have any advice? Ideally if you used to be bad at this, but got significantly better? Is it just a matter of more exposure? This feels insurmountable since I’ve always been this way. Top of math class, but teacher asks me to walk through a solution on the whiteboard? Brain fires blanks.",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks05ut/how_do_you_explain_your_thought_process_while/",
        "created_utc": 1747840026.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvkwe8",
        "title": "Is this domain knowledge?",
        "author": "M1DN1GHTDAY",
        "subreddit": "cscareerquestions",
        "content": "Hello folks, I am having trouble in preparing for interviews and need your help. I can't seem to keep an idea of things like polymorphism, SOLID, oop, and especially the dreaded language features and other unknown (to me) unknowns. Does anyone know what these types of concepts are called and how I can maybe find some YT videos talking about them so I can try to learn? (My languages of interest in case it matters are JavaScript, Python, Java). Tia!",
        "score": 4,
        "upvote_ratio": 0.84,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvkwe8/is_this_domain_knowledge/",
        "created_utc": 1748231408.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktrop2",
        "title": "Help choosing my first tech job – backend, SRE, or data?",
        "author": "None",
        "subreddit": "cscareerquestions",
        "content": "I'm finishing my Bachelor's degree and currently have a few job offers and some ongoing interview processes. I'd love to hear your thoughts on which path would be best to start my career. Ideally, I’d like to stay flexible and be able to explore different areas in the future if my curiosity changes, so I don't want an area that will specialize me too much too early. I have always heard BE engineering seems to be the best role for this kind of felxibility, but please let me know what you think!\n\nHere's the list of opportunities, ordered from most attractive to least (in my opinion):\n\n### Backend Engineer Internship at a Product Company\n- **Duration:** 9-month internship, with a possibility of a full-time offer afterwards.\n- **Tech stack:** Spring, Kafka, SQL and NoSQL databases.\n- **Pros:** I love everything about this—tech stack, company culture, team vibe.\n- **Cons:** The pay is lower than the other (non-internship) offers for the first 9 months.\n\n---\n\n### Site Reliability Engineer (SRE) at a Product Company\n- **Status:** Interview scheduled next week.\n- **Details:** The company was acquired by a major player, so it seems relatively stable.\n- **Pros:** I find SRE work interesting.\n- **Concerns:** I'm worried that starting my career in SRE might limit my ability to change into other areas later on.\n\n---\n\n### Backend Engineer at an Outsourcing Consultancy\n- **Status:** Passed HR round; they're waiting on salary expectations.\n- **Details:** They want to move me forward to client interviews.\n- **Pros:** I expect to learn a lot, and they were open to salary negotiations—even with my slightly above-entry-level ask.\n- **Cons:** Still unclear which client or project I'd end up on.\n\n---\n\n### Data Scientist at a Consulting Company\n- **Status:** Just received the message; haven't responded yet.\n- **Details:** Seems to involve in-house consulting, with a focus on machine learning.\n- **Pros:** They seem very enthusiastic about some ML stuff in my CV and my Python experience (pretty advanced for an entry level).\n- **Cons:** I’m not particularly interested in data roles right now. I'd only consider it for a very high salary (mid-level developer range), which might be unrealistic for an entry-level hire.\n\n---\n\n### Internship at a Startup\n- **Status:** Offer available.\n- **Details:** The startup recently closed a big contract and is expanding.\n- **Pros:** I'd probably learn a lot quickly.\n- **Cons:** Very low pay. Feels unstable. Work would include a mix of backend, data, and no-code frontend (only one other dev on the team). Might make transitioning to more traditional jobs harder later on.\n\nThank you so much in advance! :)\n",
        "score": 4,
        "upvote_ratio": 0.67,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktrop2/help_choosing_my_first_tech_job_backend_sre_or/",
        "created_utc": 1748026925.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktck8m",
        "title": "Should I take a position as A Technical Support Specialist?",
        "author": "SlippinTrippin",
        "subreddit": "cscareerquestions",
        "content": "I am a new comp sci grad and am unsure if I should take a Technical Support Specialist role that seems to pay decently but I am unsure on if I should take it as I don't know if it would be a dead end for me. I would have preferred a dev role that has more opportunities of career advancement. So I just wanted to get other's opinions on roles like this and what they would recommend I do. I am lucky enough to be in a position where I don't need a job urgently but am unsure if i should just take this job or try to tough it out for something more related to software engineering?",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktck8m/should_i_take_a_position_as_a_technical_support/",
        "created_utc": 1747981060.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ktbegu",
        "title": "Can I still get an Internship if I graduate this Summer?",
        "author": "HI8OI",
        "subreddit": "cscareerquestions",
        "content": "I took summer courses all throughout my school years so I can graduate faster in 3 years and I'm kinda regretting it. I was thinking I could use that 1 extra free year to work on projects and getting experience but maybe I should've just gotten summer internships instead. Is it too late for me?",
        "score": 4,
        "upvote_ratio": 0.75,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktbegu/can_i_still_get_an_internship_if_i_graduate_this/",
        "created_utc": 1747976512.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1ks3v4k",
        "title": "Comp engineering vs comp sci major",
        "author": "rory_244",
        "subreddit": "cscareerquestions",
        "content": "Which degree is more useful in the long run. I’m starting college this summer and I’m in a dilemma whether to choose comp engineering or comp sci. I’m currently in comp engineering but might wanna change to comp sci before college starts. I feel comp engineering is more difficulty compared to comp sci. Which one is light and easier ? ",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ks3v4k/comp_engineering_vs_comp_sci_major/",
        "created_utc": 1747848855.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kvyjqt",
        "title": "Professionals, How Should An Intern Present \"Extra\" Work?",
        "author": "Colehut25",
        "subreddit": "cscareerquestions",
        "content": "Hello everyone, \n\nRight now, I am a current security engineer intern at a heavily regulated company.  It's been going great, but the work is relatively easy and fast. I have had extra time to work on features that are adjacent to our main project. For example, me and another intern are building a internal dashboard that shows certain security metrics within the company on a daily basis and we figured out a way to use AI to give a debrief to the person that will be using the dashboard (For example: \"X has increased Y% from Z location in the past A days, resulting in aprox $B loss.\"). We worked with the person who is using the dashboard to understand what his wants are, so we are confident he will like the new addition. \n\nWith that said, we don't know the best way to go about presenting this work to our manager in hopes that we can boost our chances of getting a return offer. She never talked about doing things on our own time and she has quite the attitude. Im not interested in the money, more about making an impact/helping people at the company out and growing skills. I also don't want to get our work stolen by her, which unfortunately is a possibility I fear. \n\nDo both of us just set a meeting with her? Do we write a proposal? Do we just go up to her at lunch? For those of you that have been in the industry, what works when talking to a manager/exec? For those of you in the position of managing interns, what do you wish they would do? Current interns, what have you done that works? \n\n  \nThank you, I appreciate every response and additional thoughts. ",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvyjqt/professionals_how_should_an_intern_present_extra/",
        "created_utc": 1748276551.0,
        "extracted_at": "2025-05-27 01:40:27"
    },
    {
        "id": "1kujluv",
        "title": "Cloud Engineer Intern or SWE",
        "author": "Independent_Humor685",
        "subreddit": "cscareerquestions",
        "content": "Hey, I’m a student about to go into a cloud engineering internship this summer and I know I’m kinda just looking for self-validation here but I want you guys to please be honest with me.\n\nI just want to know if as a hiring manager or something similar, would you hire a new grad student with either a cloud internship or a normal swe internship?\n\nI just wanna know basically by chance would anyone actually prefer a new grad that knows the infrastructure/cloud side of development. If not please let me know, be honest pls 🙏🙏.",
        "score": 3,
        "upvote_ratio": 0.67,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kujluv/cloud_engineer_intern_or_swe/",
        "created_utc": 1748114553.0,
        "extracted_at": "2025-05-27 01:40:27"
    }
]