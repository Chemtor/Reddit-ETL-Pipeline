[
    {
        "id": "1kwojc4",
        "title": "Salesforce agrees to buy Informatica for 8 billion",
        "author": "putt_stuff98",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 412,
        "upvote_ratio": 0.99,
        "num_comments": 183,
        "url": "https://www.cnbc.com/amp/2025/05/27/salesforce-informatica-deal.html",
        "created_utc": "2025-05-27 14:22:50",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwiihm",
        "title": "I just nuked all our dashboards",
        "author": "SocioGrab743",
        "subreddit": "dataengineering",
        "content": "This just happened and I don't know how to process it.Context:I am not a data engineer, I work in dashboards, but our engineer just left us and I was the last person in the data team under a CTO. I do know SQL and Python but I was open about my lack of ability in using our database modeling too and other DE tools. I had a few KT sessions with the engineer which went well, and everything seemed straightforward.Cut to today:I noticed that our database modeling tool had things listed as materializing as views, when they were actually tables in BigQuery. Since they all had 'staging' labels, I thought I'd just correct that. I created a backup, asked ChatGPT if I was correct (which may have been an anti-safety step looking back, but I'm not a DE needed confirmation from somewhere), and since it was after office hours, I simply dropped all those tables. Not 30 seconds later and I receive calls from upper management, every dashboard just shutdown. The underlying data was all there, but all connections flatlined. I check, everything really is down. I still don't know why. In a moment of panic I restore my backup, and then rerun everything from our modeling tool, then reran our cloud scheduler. In about 20 minutes, everything was back. I suspect that this move was likely quite expensive, but I just needed everything to be back to normal ASAP.I don't know what to think from here. How do I check that everything is running okay? I don't know if they'll give me an earful tomorrow or if I should explain what happened or just try to cover up and call it a technical hiccup. I'm honestly quite overwhelmed by my own incompetenceEDIT more backstoryI am a bit more competent in BigQuery (before today, I'd call myself competent) and actually created a BigQuery ETL pipeline, which the last guy replicated into our actual modeling tool as his last task. But it wasn't quite right, so I not only had to disable the pipeline I made, but I also had to re-engineer what he tried doing as a replication. Despite my changes in the model, nothing seemed to take effect in the BigQuery. After digging into it, I realized the issue: the modeling tool treated certain transformations as views, but in BigQuery, they were actually tables. Since views can't overwrite tables, any changes I made silently failed.To prevent this kind of conflict from happening again, I decided to run a test to identify any mismatches between how objects are defined in BigQuery vs. in the modeling tool, fix those now rather than dealing with them later. Then the above happened",
        "score": 382,
        "upvote_ratio": 0.96,
        "num_comments": 150,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwiihm/i_just_nuked_all_our_dashboards/",
        "created_utc": "2025-05-27 08:58:31",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvtz7d",
        "title": "scrum is total joke in DE & BI development",
        "author": "betonaren",
        "subreddit": "dataengineering",
        "content": "My current responsibility is databricks + power bi. Now don't get me wrong, our scrum process is not correct scrum and we have our super benevolent rules for POs and we are planning everything for 2 upcoming quarters (?!!!), but even without this stupid future planning I found out we are doing anything but agile. Scrum turned to: give me estimation for everything, Dev or PO can change task during sprint because BI development is pretty much unpredictable. And mostly how the F\\*\\*\\* I can give estimate in hours for something I have no clue! Every time developer needs to be in defend position AKA why we are always underestimate, lol. BI development takes lots of exploration and prototyping and specially with tool like Power BI. In the end we are not delivering according to plan but our team is always overcommitted. I don't know any person who is actually enjoying scrum including devs, manegers and POs. What's your attitude towards scrum? cheersedit: thanks to all of you guys, appreciate all feedbacks ... and there is a lot!as I said, I know we are not doing correct scrum but even after proper implementing scrum, if any agile method could/should work, maybe only Kanban",
        "score": 326,
        "upvote_ratio": 0.92,
        "num_comments": 117,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvtz7d/scrum_is_total_joke_in_de_bi_development/",
        "created_utc": "2025-05-26 13:10:30",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktpgcf",
        "title": "New data engineer getting paid more than me, a senior DE",
        "author": "Yoyo_Baggins",
        "subreddit": "dataengineering",
        "content": "I found out that a new data engineer coming onto my team is making a few thousand more than me (a senior thats been with the company several years) annually, despite this new DE having less direct/applicable experience than me. Having to be a bit vague for obvious reasons. I have been a top individual contributor on my team every year. Every review I've received from management is overwhelmingly positive. This new DE and I are in the same geographic area, so thats not the explanation. How should I broach this with my management without: - revealing that I am 100% sure what this new DE is making, - threatening to leave if they don't up my pay, - getting myself on the short list for layoffsWe just finished our annual reviews. This pay disparity is even after I received a meager merit raise. Anyone else navigated this? Am I really going to have to company hop just to get paid a fair market salary? I want to stay at this company. I like what I do, but I also need more money to make ends meet.EDIT (copying a comment I left): I guess I should have said this in the original post, but I already tried this before our annual reviews. I provided evidence of my contribution, asked for a specific annual salary increase, and wanted it to be part of my annual increase which had a specific deadline. What I ended up getting was a bunch of excuses as to why it wasn't possible, empty promises of things they might be able to do for me later this year, and a meager merit raise well below inflation.So, to take your advice and many others here, sounds like I should just start looking elsewhere.",
        "score": 239,
        "upvote_ratio": 0.93,
        "num_comments": 154,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktpgcf/new_data_engineer_getting_paid_more_than_me_a/",
        "created_utc": "2025-05-23 17:31:03",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kuwzs9",
        "title": "My databricks exam got suspended",
        "author": "_lady_forlorn",
        "subreddit": "dataengineering",
        "content": "Feeling really down as my data engineer professional exam got suspended one hour into the exam.Before that, I got a warning that I am not allowed to close my eyes. I didn't. Those questions are long and reading them from top to bottom might look like I'm closing my eyes. I can't help it. They then had me show the entire room and suspended the exam without any explanantion.I prefer Microsoft exams to this. At least, the virtual tour happens before the exam begins and there's an actual person constantly proctoring. Not like Kryterion where I think they are using some kind of software to detect eye movement.",
        "score": 176,
        "upvote_ratio": 0.91,
        "num_comments": 52,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuwzs9/my_databricks_exam_got_suspended/",
        "created_utc": "2025-05-25 07:40:31",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwnx2o",
        "title": "DuckLake - a new datalake format from DuckDb",
        "author": "lozinge",
        "subreddit": "dataengineering",
        "content": "Hot off the press:* [https://ducklake.select/](https://ducklake.select/) * [https://duckdb.org/2025/05/27/ducklake](https://duckdb.org/2025/05/27/ducklake) * Associated podcasts: [https://www.youtube.com/watch?v=zeonmOO9jm4](https://www.youtube.com/watch?v=zeonmOO9jm4) Any thoughts from fellow DEs?",
        "score": 161,
        "upvote_ratio": 0.99,
        "num_comments": 69,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwnx2o/ducklake_a_new_datalake_format_from_duckdb/",
        "created_utc": "2025-05-27 13:56:42",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvegva",
        "title": "Could someone explain how data engineering job openings are down so much during this AI hype",
        "author": "Jazzlike_Middle2757",
        "subreddit": "dataengineering",
        "content": "https://preview.redd.it/pefijjqa403f1.png?width=1138&format=png&auto=webp&s=d26e72f944bde942a6246067471b46554d27ad74Granted this was data from 2023-2024, but its still strange. Why did data engineers get hit the hardest?Source: [https://bloomberry.com/how-ai-is-disrupting-the-tech-job-market-data-from-20m-job-postings/](https://bloomberry.com/how-ai-is-disrupting-the-tech-job-market-data-from-20m-job-postings/)",
        "score": 161,
        "upvote_ratio": 0.92,
        "num_comments": 77,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvegva/could_someone_explain_how_data_engineering_job/",
        "created_utc": "2025-05-25 22:08:53",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kuq56n",
        "title": "Career Move: Switching from Databricks/Spark to Snowflake/Dbt",
        "author": "OrganizationTop1668",
        "subreddit": "dataengineering",
        "content": "Hey everyone,I wanted to get your thoughts on a potential career move. I've been working primarily with Databricks and Spark, and I really enjoy the flexibility and power of working with distributed compute and Python pipelines.Now I’ve got a job offer from a company that’s heavily invested in the Snowflake + Dbt stack. It’s a solid offer, but I’m hesitant about moving into something that’s much more SQL-centric. I worry that going \"all in\" on SQL might limit my growth or pigeonhole me into a narrower role over time.I feel like this would push me away from core software engineering practices, given that SQL lacks features like OOP, unit testing, etc...Is Snowflake/Dbt still seen as a strong direction for data engineering, or would it be a step sideways/backwards compared to staying in the Spark ecosystem?Appreciate any insights!",
        "score": 122,
        "upvote_ratio": 0.97,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuq56n/career_move_switching_from_databricksspark_to/",
        "created_utc": "2025-05-25 00:40:42",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxdsgq",
        "title": "Duckberg - The rise of medium sized data.",
        "author": "sockdrawwisdom",
        "subreddit": "dataengineering",
        "content": "I've been playing around with duckdb + iceberg recently and I think it's got a huge amount of promise. Thought I'd do a short blog about it. Happy to awnser any questions on the topic!",
        "score": 120,
        "upvote_ratio": 0.95,
        "num_comments": 41,
        "url": "https://medium.com/@trew.josh/duckberg-e310d9541bf2",
        "created_utc": "2025-05-28 10:37:15",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwy13s",
        "title": "$10,000 annually for 500MB daily pipeline?",
        "author": "quasirun",
        "subreddit": "dataengineering",
        "content": "Just found out our IT department contracted a pipeline build that moves 500MB daily. They're pretending to manage data (insert long story about why they shouldn't). It's costing our business $10,000 per year. Granted that comes with theoretical support and maintenance. I'd estimate the vendor spends maybe 1-6 hours per year doing support. They don't know what value the company derives from it so they ask me every year about it. It does generate more value than it costs.I'm just wondering if this is even reasonable? We have over a hundred various systems that we need to incorporate as topics into the \"warehouse\" this IT team purchased from another vendor (it's highly immutable so really any ETL is just filling other databases in the same server). They did this stuff in like 2021-2022 and have yet to extend further, including building pipelines for the other sources. At this rate, we'll be paying millions of dollars to manage the full suite (plus whatever custom build charges hit upfront) of ETL, no even compute or storage. The $10k isn't for cloud, it's all on prem on our computer and storage.There's probably implementation details I'm leaving out. Just wondering if this is reasonable.",
        "score": 101,
        "upvote_ratio": 0.94,
        "num_comments": 70,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwy13s/10000_annually_for_500mb_daily_pipeline/",
        "created_utc": "2025-05-27 20:33:38",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxk70r",
        "title": "dbt Labs' new VSCode extension has a 15 account cap for companies don't don't pay up",
        "author": "PandaUnicornAlbatros",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 86,
        "upvote_ratio": 0.93,
        "num_comments": 50,
        "url": "https://www.getdbt.com/dbt-assets/vscode-plugin-aup",
        "created_utc": "2025-05-28 15:35:19",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxb3ip",
        "title": "DBT slower than original ETL",
        "author": "Wise-Ad-7492",
        "subreddit": "dataengineering",
        "content": "This might be an open-ended question, but I recently spoke with someone who had migrated an old ETL process—originally built with stored procedures—over to DBT. It was running on Oracle, by the way. He mentioned that using DBT led to the creation of many more steps or models, since best practices in DBT often encourage breaking large SQL scripts into smaller, modular ones. However, he also said this made the process slower overall, because the Oracle query optimizer tends to perform better with larger, consolidated SQL queries than with many smaller ones.Is there some truth to what he said, or is it just a case of him not knowing how to use the tools properly",
        "score": 81,
        "upvote_ratio": 0.95,
        "num_comments": 37,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxb3ip/dbt_slower_than_original_etl/",
        "created_utc": "2025-05-28 07:33:44",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvthrx",
        "title": "How important is it to be \"full-stack\" in data?",
        "author": "Impossible-Gear-4365",
        "subreddit": "dataengineering",
        "content": "Hey everyone,I wanted to start a conversation about the growing expectation for data professionals to become more \"full-stack.\" Especially in the Brazilian market, I've noticed a trend, or even a pressure, for people to take on more responsibilities across the entire data workflow, sometimes beyond their original role.I’ve been working as a Data Engineer for a little over a year now, focusing mainly on EL processes, building data pipelines and delivering datasets to the primary layer. From there, Analytics Engineers usually take over and apply transformations. I hold certifications in Airflow (Astronomer) and Databricks Data Engineer Fundamentals, and I’m currently thinking about diving into DBT, mainly through personal projects.Recently, I received the suggestion that being full-stack in data is the ideal, or even necessary, path to follow. That got me thinking:How far should we go in expanding our technical scope? Are we sacrificing depth for breadth? Is this expectation more common for Data Engineers than for AEs or Data Scientists? Is being full-stack really an advantage in the long run, or just a sign of immaturity or lack of process in some organizations?I’d love to hear your thoughts, especially from those who have faced this kind of situation or work in more structured data teams.",
        "score": 70,
        "upvote_ratio": 0.98,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvthrx/how_important_is_it_to_be_fullstack_in_data/",
        "created_utc": "2025-05-26 12:47:37",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kx2hhr",
        "title": "Streamlit Is a Mess: The Framework That Forgot Architecture",
        "author": "tildehackerdotcom",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 67,
        "upvote_ratio": 0.88,
        "num_comments": 31,
        "url": "https://tildehacker.com/streamlit-is-a-mess",
        "created_utc": "2025-05-27 23:42:16",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kyjphq",
        "title": "Built a data quality inspector that actually shows you what's wrong with your files (in seconds)",
        "author": "Sea-Assignment6371",
        "subreddit": "dataengineering",
        "content": "You know that feeling when you deal with a CSV/PARQUET/JSON/XLSX and have no idea if it's any good? Missing values, duplicates, weird data types... normally you'd spend forever writing pandas code just to get basic stats. **So now in** [datakit.page](https://datakit.page/) **you can:** Drop your file → visual breakdown of every column. **What it catches:*** Quality issues (Null, duplicates rows, etc)* Smart charts for each column type**The best part:** Handles multi-GB files entirely in your browser. Your data never leaves your browser.Try it: [datakit.page](http://datakit.page/)**Question:** What's the most annoying data quality issue you deal with regularly?",
        "score": 72,
        "upvote_ratio": 0.93,
        "num_comments": 13,
        "url": "https://v.redd.it/b2l5jicwur3f1",
        "created_utc": "2025-05-29 19:25:02",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwrmmp",
        "title": "Spark 4 soon ?",
        "author": "qlhoest",
        "subreddit": "dataengineering",
        "content": "PySpark 4 is out on PyPi and I also found this link: [https://dlcdn.apache.org/spark/spark-4.0.0/spark-4.0.0-bin-hadoop3.tgz](https://dlcdn.apache.org/spark/spark-4.0.0/spark-4.0.0-bin-hadoop3.tgz), which means we can expect Spark 4 soon ?What are you mostly excited bout in Spark 4 ?",
        "score": 60,
        "upvote_ratio": 0.96,
        "num_comments": 5,
        "url": "https://i.redd.it/x501hzfcoc3f1.png",
        "created_utc": "2025-05-27 16:24:50",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kthcrg",
        "title": "How is an actual data engineering project executed?",
        "author": "BricksData",
        "subreddit": "dataengineering",
        "content": "Hi,I am new to data engineering and am trying to learn it by myself. So far, I have learnt that we generally process data in three stages:- bronze/ raw/ a snapshot of original data with very little modification. - Silver/ performing transformations for our business purpose- Gold / dimensionally modelling our data to be consumed by reporting tools. ----------I used :- Azure Data Factory to ingest data into bronze, then - Azure DataBricks to store the raw data as delta tables and them perfomed transformations on that data in Silver layer- Modelled Data for Gold Layer-----------I want to understand, how an actual real world project is executed. I see companies processing petabytes of data. How do you do that at your job?Would really be helpful to get an overview of your execution of a project. Thanks.",
        "score": 57,
        "upvote_ratio": 0.95,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kthcrg/how_is_an_actual_data_engineering_project_executed/",
        "created_utc": "2025-05-23 11:39:14",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kyccwt",
        "title": "Is new dbt announcement driving bigger wedge between core and cloud?",
        "author": "engineer_of-sorts",
        "subreddit": "dataengineering",
        "content": "I am not familiar with the elastic license but my read is that new dbt fusion engine gets all the love, dbt-core project basially dies or becomes legacy, now instead of having gated features just in dbt cloud you have gated features within VScode as well. Therefore driving bigger wedge between core and cloud since everyone will need to migrate to fusion which is not Apache 2.0. What do you all thin?",
        "score": 58,
        "upvote_ratio": 0.97,
        "num_comments": 42,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kyccwt/is_new_dbt_announcement_driving_bigger_wedge/",
        "created_utc": "2025-05-29 14:34:31",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvjqqh",
        "title": "'Close to impossible' for Europe to escape clutches of US hyperscalers -- \"Barriers stack up: Datacenter capacity, egress fees, platform skills, variety of cloud services. It won't happen, say analysts\"",
        "author": "throwaway16830261",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 55,
        "upvote_ratio": 0.94,
        "num_comments": 21,
        "url": "https://www.theregister.com/2025/05/22/ditching_us_clouds_for_local/",
        "created_utc": "2025-05-26 02:45:10",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxs2fu",
        "title": "Does anyone here use Linux as their main operating system, and do you recommend it?",
        "author": "maz_dex",
        "subreddit": "dataengineering",
        "content": "Just curious — if you're a data engineer using Linux as your main OS, how’s the experience been? Pros, cons, would you recommend it?",
        "score": 53,
        "upvote_ratio": 0.89,
        "num_comments": 74,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxs2fu/does_anyone_here_use_linux_as_their_main/",
        "created_utc": "2025-05-28 20:46:18",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kuajtp",
        "title": "Reflecting on your journey, what is something you wish you had when you started as a Data Engineer?",
        "author": "georchry_",
        "subreddit": "dataengineering",
        "content": "I’m trying to better understand the key learnings that only come with experience.Whether it’s a technical skill, a mindset shift, a lesson or any relatable piece of knowledge, I’d love to hear what you wish you had known early on.",
        "score": 54,
        "upvote_ratio": 0.96,
        "num_comments": 44,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuajtp/reflecting_on_your_journey_what_is_something_you/",
        "created_utc": "2025-05-24 12:33:34",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kych1l",
        "title": "Team wants every service to write individual records directly to Apache Iceberg - am I wrong to think this won't scale?",
        "author": "AlternativeTwist6742",
        "subreddit": "dataengineering",
        "content": "Hey everyone, I'm in a debate with my team about architecture choices and need a reality check from the community.**The Setup:** We're building a data storage system for multiple customer services. My colleagues implemented a pattern where:* Each service writes individual records directly to Iceberg tables via Iceberg python client (pyiceberg)* Or a solution where we leverage S3 for decoupling, where: * Every single S3 event triggers a Lambda that appends **one record** to Iceberg * They envision eventually using Iceberg for everything - both operational and analytical workloads**Their Vision:*** \"Why maintain multiple data stores? Just use Iceberg for everything\"* \"Services can write directly without complex pipelines\"* \"AWS S3 Tables handle file optimization automatically\"* \"Each team manages their own schemas and tables\"**What We're Seeing in Production:**We're currently handling hundreds of events per minute across all services. We put the S3 -> Lambda -> append individual record via pyiceberg to the iceberg table solution. What I see is lot of those concurrency errors: CommitFailedException: Requirement failed: branch main has changed: expected id 8495949892901736292 != 1625129874837118870Multiple Lambdas are trying to commit to the same table simultaneously and failing.**My Position**I originally proposed:* Using PostgreSQL for operational/transactional data* Periodically ingesting PostgreSQL data into Iceberg for analytics* Micro-Batching records for streaming dataMy reasoning:* Iceberg uses optimistic concurrency control - only one writer can commit at a time per table* We're creating hundreds of tiny files instead of fewer, optimally-sized files* Iceberg is designed for \"large, slow-changing collections of files\" (per their docs)* The metadata overhead of tracking millions of small files will become expensive (regardless of the fact that this is abstracted away from use by using managed S3 Tables)**The Core Disagreement:** My colleagues believe S3 Tables' automatic optimizations mean we don't need to worry about file sizes or commit patterns. They see my proposed architecture (Postgres + batch/micro-batch ingestion, i.e. using Firehose/Spark structured streaming) as unnecessary complexity.It feels we're trying to use Iceberg as both an OLTP and OLAP system when it's designed for OLAP.**Questions for the Community:**1. Has anyone successfully used Iceberg as their primary datastore for both operational AND analytical workloads?2. Is writing individual records to Iceberg (hundreds per minute) sustainable at scale?3. Do S3 Tables' optimizations actually solve the small files and concurrency issues?4. Am I overcomplicating by suggesting separate operational/analytical stores?Looking for real-world experiences, not theoretical debates. What actually works in production?Thanks!",
        "score": 52,
        "upvote_ratio": 1.0,
        "num_comments": 45,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kych1l/team_wants_every_service_to_write_individual/",
        "created_utc": "2025-05-29 14:39:07",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ku1s5h",
        "title": "DevOps knowledge as a DE",
        "author": "Gohan_24",
        "subreddit": "dataengineering",
        "content": "All senior DEs with 10-15 YOE can guide how much devOps should the DEs should know and if we learn Devops what are the benefits plus career path we can have down the line .",
        "score": 49,
        "upvote_ratio": 0.93,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ku1s5h/devops_knowledge_as_a_de/",
        "created_utc": "2025-05-24 03:06:16",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxlqfl",
        "title": "Meet the dbt Fusion Engine: the new Rust-based, industrial-grade engine for dbt",
        "author": "andersdellosnubes",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 47,
        "upvote_ratio": 0.85,
        "num_comments": 37,
        "url": "https://docs.getdbt.com/blog/dbt-fusion-engine",
        "created_utc": "2025-05-28 16:35:56",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwlvmf",
        "title": "How steep is the learning curve to becoming a DE?",
        "author": "Perfect83",
        "subreddit": "dataengineering",
        "content": "Hi all. As the title suggests… I was wondering for someone looking to move into a Data Engineering role (no previous experience outside of data analysis with SQL and Excel), how steep is the learning curve with regards to the tooling and techniques?Thanks in advance.",
        "score": 51,
        "upvote_ratio": 0.88,
        "num_comments": 48,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwlvmf/how_steep_is_the_learning_curve_to_becoming_a_de/",
        "created_utc": "2025-05-27 12:22:55",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxzk3f",
        "title": "How useful is dbt in real-world data teams? What changes has it brought, and what are the pitfalls or reality checks?",
        "author": "BankEcstatic8883",
        "subreddit": "dataengineering",
        "content": "I’m planning to adopt **dbt** soon for our data transformation workflows and would love to hear from teams who have already used it in production.* How has dbt changed your team’s **day-to-day work or collaboration**?* Which features of dbt (like `ref()`, tests, documentation, exposures, sources, macros, semantic layer.) do you find genuinely useful, and which ones tend to get underused or feel overhyped?* If you use **external orchestrators** like Airflow or Dagster, how do you balance dbt’s DAG with your orchestration logic?* Have you found dbt’s **lineage and documentation** features helpful for non-technical users or stakeholders?* What **challenges or limitations** have you faced with dbt—performance issues, onboarding complexity, workflow rigidities, or vendor lock-in (if using dbt Cloud)?* Does dbt **introduce complexity** in any areas it promises to simplify?* How has your experience been with **dbt Cloud’s pricing**? Do you feel it delivers fair value for the cost, especially as your team grows?* Have you found yourself hitting limits and wishing for more flexibility (e.g., stored procedures, transactions, or dynamic SQL)?* And most importantly: **If you were starting today, would you adopt dbt again?** Why or why not?Curious to hear both positive and critical perspectives so I can plan a smoother rollout and set realistic expectations. Thanks!PS: We are yet to finalise the tool. We are considering dbt core vs dbt cloud vs SQLMesh. We have a junior team who may have some difficulty understanding the concept behind dbt (and using CLI with dbt core) and then learning it. So, weighing the benefits with the costs and the learning curve for the team.",
        "score": 46,
        "upvote_ratio": 0.82,
        "num_comments": 49,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxzk3f/how_useful_is_dbt_in_realworld_data_teams_what/",
        "created_utc": "2025-05-29 02:24:45",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxqzcx",
        "title": "Introducing DEtermined: The Open Resource for Data Engineering Mastery",
        "author": "Heartsbaneee",
        "subreddit": "dataengineering",
        "content": "Hey Data Engineers :waving_hand:I recently launched [**DEtermined**](https://determinedeng.com/) – an open platform focused on *real-world Data Engineering prep* and hands-on learning.It’s built for the community, by the community – designed to cover the **6 core categories** that every DE should master:* SQL* ETL/ELT* Big Data* Data Modeling* Data Warehousing* Distributed SystemsEvery day, I break down a DE question or a real-world challenge on my **Substack newsletter** – [DE Prep](https://deprep.substack.com/) – and walk through the entire solution like a mini masterclass.:magnifying_glass_tilted_left: **Latest post:** **“Decoding Spark Query Plans: From Black Box to Bottlenecks”** → I dove into how Spark's query execution works, why your joins are slow, and how to interpret the physical plan like a pro. [Read it here](https://deprep.substack.com/p/prep-20-understanding-spark-query)This week’s focus? **Spark Performance Tuning.**If you're prepping for DE interviews, or just want to sharpen your fundamentals with real-world examples, I think you’ll enjoy this.Would love for you to check it out, subscribe, and let me know what you'd love to see next! And if you're working on something similar, I’d love to collaborate or feature your insights in an upcoming post!You can also follow me on [LinkedIn](https://www.linkedin.com/in/nvkanirudh/), where I share **daily updates** along with **visually-rich infographics** for every new Substack post. Would love to have you join the journey! :rocket:Cheers :raising_hands: *Data Engineer | Founder of DEtermined*",
        "score": 33,
        "upvote_ratio": 0.84,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxqzcx/introducing_determined_the_open_resource_for_data/",
        "created_utc": "2025-05-28 20:03:34",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxmcb2",
        "title": "Decentralized compute for AI is starting to feel less like a dream and more like a necessity",
        "author": "Future-Goose7",
        "subreddit": "dataengineering",
        "content": "Been thinking a lot about how broken access to computing has become in AI.We’ve reached a point where training and inference demand insane GPU power, but almost everything is gated behind AWS, GCP, and Azure. If you’re a startup, indie dev, or research lab, good luck affording it. Even if you can, there’s the compliance overhead, opaque usage policies, and the quiet reality that all your data and models sit in someone else’s walled garden.This centralization creates 3 big issues:* Cost barriers lock out innovation* Surveillance and compliance risks go up* Local/grassroots AI development gets stifledI came across a project recently, Ocean Nodes, that proposes a decentralized alternative. The idea is to create a permissionless compute layer where anyone can contribute idle GPUs or CPUs. Developers can run containerized workloads (training, inference, validation), and everything is cryptographically verified. It’s essentially DePIN combined with AI workloads.Not saying it solves everything overnight, but it flips the model: instead of a few hyperscalers owning all the compute, we can build a network where anyone contributes and anyone can access. Trust is built in by design, not by paperwork.Has anyone here tried running AI jobs on decentralized infrastructure or looked into Ocean Nodes? Does this kind of model actually have legs for serious ML workloads? Would love to hear thoughts.",
        "score": 29,
        "upvote_ratio": 0.86,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxmcb2/decentralized_compute_for_ai_is_starting_to_feel/",
        "created_utc": "2025-05-28 17:00:11",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvrs7l",
        "title": "Why would experienced data engineers still choose an on-premise zero-cloud setup over private or hybrid cloud environments—especially when dealing with complex data flows using Apache NiFi?",
        "author": "mikehussay13",
        "subreddit": "dataengineering",
        "content": "Using NiFi for years and after trying both hybrid and private cloud setups, I still find myself relying on a full on-premise environment. With cloud, I faced challenges like unpredictable performance, latency in site-to-site flows, compliance concerns, and hidden costs with high-throughput workloads. Even private cloud didn’t give me the level of control I need for debugging, tuning, and data governance. On-prem may not scale like the cloud, but for real-time, sensitive data flows—it’s just more reliable. Curious if others have had similar experiences and stuck with on-prem for the same reasons.",
        "score": 30,
        "upvote_ratio": 0.85,
        "num_comments": 65,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvrs7l/why_would_experienced_data_engineers_still_choose/",
        "created_utc": "2025-05-26 11:14:00",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kyffrm",
        "title": "What’s a Data Engineering hiring process like in 2025?",
        "author": "gbj784",
        "subreddit": "dataengineering",
        "content": "Hey everyone! I have a tech screening for a Data Engineering role coming up in the next few days. I’m at a semi-senior level with around 2 years of experience. Can anyone share what the process is like these days? What kind of questions or take-home exercises have you gotten recently? Any insights or advice would be super helpful—thanks a lot!",
        "score": 37,
        "upvote_ratio": 0.92,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kyffrm/whats_a_data_engineering_hiring_process_like_in/",
        "created_utc": "2025-05-29 16:37:33",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxnzb8",
        "title": "dbt-like features but including Python?",
        "author": "Khituras",
        "subreddit": "dataengineering",
        "content": "I have had eyes on dbt for years. I think it helps with well-organized processes and clean code. I have never used it further than a PoC though because my company uses a lot of Python for data processing. Some of it could be replaced with SQL but some of it is text processing with Python NLP libraries which I wouldn’t know how to do in SQL. And dbt Python models are only available for some cloud database services while we use Postgres on-prem, so no go here.Now finally for the question: can you point me to software/frameworks that- allow Python code execution- build a DAG like dbt and only execute what is required- offer versioning where you could „go back in time“ to obtain the state of data like it was half a year before- offer a graphical view of the DAG- offer data lineage - help with project structure and are not overly complicated It should be open source software, no GUI required. If we would use dbt, we would be dbt-core users.Thanks for hints!",
        "score": 30,
        "upvote_ratio": 0.86,
        "num_comments": 37,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxnzb8/dbtlike_features_but_including_python/",
        "created_utc": "2025-05-28 18:04:28",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kux14t",
        "title": "DE in Financial Industry career path",
        "author": "His-Holiness",
        "subreddit": "dataengineering",
        "content": "I’m 26, based in London, have 3 years experience in data engineering, just started a new role in a fintech - base salary £70k.Trying to map out a bit of a career path that I can look to as a guide, goal is frankly just to make as much money as possible over the next 5-10 years. Should I be looking to move into a bank in a couple years time, and then maybe a trading firm? I’d like to stay in finance ideally. Wondering at what level does the London market max out, and whether should I be looking to move to the US sooner than later? Any thoughts you guys have would be much appreciated!",
        "score": 28,
        "upvote_ratio": 0.97,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kux14t/de_in_financial_industry_career_path/",
        "created_utc": "2025-05-25 07:43:12",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kuajtf",
        "title": "Data Engineer or AI/ML Engineer - which role has the brighter future?",
        "author": "Different-Earth4080",
        "subreddit": "dataengineering",
        "content": "Hi All! I was looking for some advice. I want to make a career switch and move into a new role. I am torn between **AI/ML Engineer** and **Data Engineer.**I read recently that out of those two roles, DE might be the more 'future-proofed' role as it is less likely to be automated. Whereas with the AI/ML Engineer role, with AutoML and foundation models reducing the need for building models from scratch, and many companies opting to use pretrained models rather than build custom ones, the AI/ML Engineer role might start to be at risk.What do people think about the future of these two roles, in terms of demand and being \"future-proofed\"? Would you say one is \"safer\" than the other?",
        "score": 27,
        "upvote_ratio": 0.74,
        "num_comments": 38,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuajtf/data_engineer_or_aiml_engineer_which_role_has_the/",
        "created_utc": "2025-05-24 12:33:33",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktvdwj",
        "title": "Curious about your background before getting into data engineering",
        "author": "No_Chest_5294",
        "subreddit": "dataengineering",
        "content": "If you’re now working as a data engineer but didn’t start your career in this role, what were you doing before?Was it software dev, analytics, sysadmin, academia, something totally unrelated? What pushed you toward data engineering, and how was the transition for you?",
        "score": 25,
        "upvote_ratio": 0.97,
        "num_comments": 39,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktvdwj/curious_about_your_background_before_getting_into/",
        "created_utc": "2025-05-23 21:40:46",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky5gtt",
        "title": "Apache Iceberg vs Delta lake",
        "author": "Still-Butterfly-3669",
        "subreddit": "dataengineering",
        "content": "Hey everyone, I’ve been working more with data lakes lately and kept running into the question: Should we use Delta Lake or Apache Iceberg?I wrote a blog post comparing the two — how they work, pros and cons, stuff like that: :backhand_index_pointing_right: [Delta Lake vs Apache Iceberg – Which Table Format Wins?](https://www.mitzu.io/post/delta-lake-vs-apache-iceberg-which-table-format-wins)Just sharing in case it’s useful, but also genuinely curious what others are using in real projects. If you’ve worked with either (or both), I’d love to hear",
        "score": 23,
        "upvote_ratio": 0.85,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky5gtt/apache_iceberg_vs_delta_lake/",
        "created_utc": "2025-05-29 08:22:09",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kut02f",
        "title": "How many data model daily",
        "author": "ketopraktanjungduren",
        "subreddit": "dataengineering",
        "content": "I'm curious as to how many data models you build in a day or week and whyDo you think the number of data models per month can be counted as your KPI?",
        "score": 22,
        "upvote_ratio": 0.83,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kut02f/how_many_data_model_daily/",
        "created_utc": "2025-05-25 03:23:18",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktu9ru",
        "title": "Amazon L4 or Stable, Comfortable Job as New Grad?",
        "author": "Interesting_Tea6963",
        "subreddit": "dataengineering",
        "content": "Hello fellow data engineers,Hoping for some guidance on how to evaluate an offer I just got from Amazon.Currently working hybrid (1-2 days), \\~120k in VHCOL city, offer is for \\~160 in HCOL city.My current job has been alright, but I am a team of one, and there is very little \"data engineering\" to do around here. Feel a little bit stagnant in that regard. Often just uploading Excel files and running some stored procedure/ETL. I'm looking at around 35 hours a week, pretty lax.Not sure what to expect at Amazon, 50 hours a week, 60? I know the experience would probably be huge for my career, but not sure if I'm willing to pay with my life. I am also aware that I would go from hardly going into the office to going in every day.Any current or prior Amazon DE's that could weigh in here? Am I walking into a death trap?",
        "score": 22,
        "upvote_ratio": 0.82,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktu9ru/amazon_l4_or_stable_comfortable_job_as_new_grad/",
        "created_utc": "2025-05-23 20:52:57",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kut4ba",
        "title": "Building a Full-Fledged Data Engineering Learning Repo from Scratch Feedback Wanted!",
        "author": "Alex_0004",
        "subreddit": "dataengineering",
        "content": "Hey everyone,I'm currently a **Data Engineering intern + final-year CS student** with a strong passion for building real-world DE systems.Over the past few weeks, I’ve been diving deep into ETL, orchestration, cloud platforms (Azure, Databricks, Snowflake), and data architecture. Inspired by some great Substacks and events like **OpenXData**, I’m thinking of starting a **public learning repository** focused on :I’ve structured it into **three project levels** each one more advanced and realistic than the last:Basic -> 2 projects -> Python, SQL, Airflow, PostgreSQL, basic ETL| Intermediate -> 2 projects -> Azure Data Factory, Databricks (batch), Snowflake, dbtAdvanced -> 2 projects -> Streaming pipelines, Kafka + PySpark, Delta Lake, CI/CD, monitoring* Not just dashboards or small-scale analysis* Projects designed to **scale from 100 rows → 1 billion rows*** Focus on **workflow orchestration**, **data modeling**, and **system design*** Learning-focused but aligned with **production-grade design principles*** Built to **learn, practice, and showcase** for real interviews & job prepFeedback on project ideas, structure, or tech stack, Suggestions for **realistic use cases** to build, Tips from experienced engineers who’ve built at scale, Anyone who wants to follow or contribute you're welcome!Would love any thoughts you all have thanks for reading :folded_hands:",
        "score": 22,
        "upvote_ratio": 0.84,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kut4ba/building_a_fullfledged_data_engineering_learning/",
        "created_utc": "2025-05-25 03:30:07",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kv5bvz",
        "title": "Dealing with the idea that ERP will solve all business problem",
        "author": "ketopraktanjungduren",
        "subreddit": "dataengineering",
        "content": "The company I am working at is implementing their first ERP system. They easily took the \"promise\" that ERP will solve all of their analytics problem and that dashboards are just \"half ERP\".Later on the implementation process they realized that the ERP cannot process the data by itself and needs third party tools like Power BI and Looker. Do you have similar experience to me? How do you convince business users that ERP is just another source system to every data engineer?",
        "score": 22,
        "upvote_ratio": 0.97,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv5bvz/dealing_with_the_idea_that_erp_will_solve_all/",
        "created_utc": "2025-05-25 15:32:18",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktkqj6",
        "title": "Modular Data Pipeline (Microservices + Delta Lake) for Live ETAs – Architecture Review of La Poste’s Case",
        "author": "Typical-Scene-5794",
        "subreddit": "dataengineering",
        "content": "In a recent blog, the team at La Poste (France’s postal service) shared how they redesigned their real-time package tracking pipeline from a monolithic app into a modular microservice architecture. The goal was to provide more accurate ETA predictions for deliveries while making the system easier to scale and monitor in production. They describe splitting the pipeline into multiple decoupled stages (using Pathway – an open-source streaming ETL engine) connected via Delta Lake storage and Kafka. This revamped design not only improved performance and reliability, but also significantly cut costs (the blog cites a 50% reduction in total cost of ownership for the IoT data platform and a projected 16% drop in fleet capital expenditures, which is huge). Below I’ll outline the architecture, key decisions, and trade-offs from the blog in an engineering-focused way.From Monolith to Microservices: Originally, a single streaming pipeline handled everything: data cleansing, ETA calculation, and maybe some basic monitoring. That monolith worked for a prototype, but it became hard to extend – for instance, adding continuous evaluation of prediction accuracy or integrating new models would make the one pipeline much more complex and fragile. The team decided to decouple the concerns into separate pipelines (microservices) that communicate through shared data layers. This is analogous to breaking a big application into microservices – here each Pathway pipeline is a lightweight service focused on one part of the workflow.They ended up with four main pipeline components:1. Data Acquisition & Cleaning: Ingest raw telemetry from delivery vehicles and clean it. IoT devices on trucks emit location updates (latitude/longitude, speed, timestamp, etc.) to a Kafka topic. This first pipeline reads from Kafka, applies a schema, and filters out bad data (e.g. GPS (0,0) errors, duplicates, out-of-order events). The cleaned, normalized data is then written to a Delta Lake table as the “prepared data” store. Delta Lake was used here to persist the stream in a queryable table format (every incoming event gets appended as a new row). This makes the downstream processing simpler and the intermediate data reusable. (Notably, they chose Delta Lake over something like chaining another Kafka topic for the clean data – a design choice we’ll discuss more below.)2. ETA Prediction: This stage consumes two things – the cleaned vehicle data (from that Delta table) and incoming ETA requests. ETA request events come as another stream (Kafka topic) containing a delivery request ID, the target destination, the assigned vehicle ID, and a timestamp. The topic is partitioned by vehicle ID so all requests for the same vehicle are ordered (ensuring the sequence of stops is handled correctly). The Pathway pipeline joins each request with the latest state of the corresponding vehicle from the clean data, then computes an estimated arrival time. The blog kept the prediction logic straightforward (e.g., basically using current location to estimate travel time to the destination), since the focus was architecture. The important part is that this service is stateless with respect to historical data – it relies on the up-to-date clean data table as its source of truth for vehicle positions. Once an ETA is computed for a request, the result is written out to two places: a Kafka topic (so that whoever requested the ETA gets the answer in real-time) and another Delta Lake table storing all predictions (for later analysis).3. Ground Truth Extraction: This pipeline waits for deliveries to actually be completed, so they can record the real arrival times (“ground truth” data for model evaluation). It reads the same prepared data table (vehicle telemetry) and the requests stream/table to know what destinations were expected. The logic here tracks each vehicle’s journey and identifies when a vehicle has reached the delivery location for a request (and has no further pending deliveries for that request). When it detects a completed delivery, it logs the actual time of arrival for that specific order. Each of these actual arrival records is written to a ground-truth Delta Lake table. This component runs asynchronously from the prediction one – an order might be delivered 30 minutes after the prediction was made, but by isolating this in its own service, the system can handle that naturally without slowing down predictions. Essentially, the ground truth job is doing a continuous join between live positions and the list of active delivery requests, looking for matches to signal completion.4. Evaluation & Monitoring: The final stage joins the predictions with their corresponding ground truths to measure accuracy. It reads from the predictions Delta table and the ground truths table, linking records by request ID (each record pairs a predicted arrival time with the actual arrival time for a delivery). The pipeline then computes error metrics. For example, it can calculate the difference in minutes between predicted and actual delivery time for each order. These per-delivery error records are extremely useful for analytics – the blog mentions calculating overall Mean Absolute Error (MAE) and also segmenting error by how far in advance the prediction was made (predictions made closer to the delivery tend to be more accurate). Rather than hard-coding any specific aggregation in the pipeline, the approach was to output the raw prediction-vs-actual data into a PostgreSQL database (or even just a CSV file), and then use external tools or dashboards for deeper analysis and alerting. By doing so, they keep the streaming pipeline focused and let data analysts iterate on metrics in a familiar environment. (One cool extension: because everything is modular, they can add an alerting microservice that monitors this error data stream in real-time – e.g. trigger a Slack alert if error spikes – without impacting the other components.)Key Architectural Decisions:Decoupling via Delta Lake Tables: A standout decision was to connect these microservice pipelines using Delta Lake as the intermediate store. Instead of passing intermediate data via queues or Kafka topics, each stage writes its output to a durable table that the next stage reads. For example, the clean telemetry is a Delta table that both the Prediction and Ground Truth services read from. This has several benefits in a data engineering context:Data Reusability & Observability: Because intermediate results are in tables, it’s easy to query or snapshot them at any time. If predictions look off, engineers can examine the cleaned data table to trace back anomalies. In a pure streaming hand-off (e.g. Kafka topic chaining), debugging would be harder – you’d have to attach consumers or replay logs to inspect events. Here, Delta gives a persistent history you can query with Spark/Pandas, etc.Multiple Consumers: Many pipelines can read the same prepared dataset in parallel. The La Poste use case leveraged this to have two different processes (prediction and ground truth) independently consuming the prepared\\_data table. Kafka could also multicast to multiple consumers, but those consumers would each need to handle data cleaning or maintaining state. With the Delta approach, the heavy lifting (cleaning) is done once and all consumers get a consistent view of the results.Failure Recovery: If one pipeline crashes or needs to be redeployed, the downstream pipelines don’t lose data – the intermediate state is stored in Delta. They can simply pick up from the last processed record by reading the table. There’s less worry about Kafka retention or exactly-once delivery mechanics between services, since the data lake serves as a reliable buffer and single source of truth.Of course, there are trade-offs. Writing to a data lake introduces some latency (micro-batch writes of files) compared to an in-memory event stream. It also costs storage – effectively duplicating data that in a pure streaming design might be transient. The blog specifically calls out the issue of many small files: frequent Delta commits (especially for high-volume streams) create lots of tiny parquet files and transaction log entries, which can degrade read performance over time. The team mitigated this by partitioning the Delta tables (e.g. by date) and periodically compacting small files. Partitioning by a day or similar key means new data accumulates in a separate folder each day, which keeps the number of files per partition manageable and makes it easier to run vacuum/compaction on older partitions. With these maintenance steps (partition + compact + clean old metadata), they report that the Delta-based approach remains efficient even for continuous, long-running pipelines. It’s a case of trading some complexity in storage management for a lot of flexibility in pipeline design.Schema Management & Versioning: With data passing through tables, keeping schemas in sync became an important consideration. If the schema of the cleaned data table changes (say they add a new column from the IoT feed), then the downstream Pathway jobs reading that table must be updated to expect that schema. The blog notes this as an increased maintenance overhead compared to a monolith. They likely addressed it by versioning their data schemas and coordinating deployments – e.g. update the writing pipeline to add new columns in parallel with updating readers, or use schema evolution features of Delta Lake. On the plus side, using Delta Lake made some aspects of schema handling easier: Pathway automatically stores each table’s schema in the Delta log, so when a job reads the table it can fetch the schema and apply it without manual definitions. This reduces code duplication and errors. Still, any intentional schema changes require careful planning across multiple services. This is just the nature of microservices – you gain modularity at the cost of more coordination.Independent Scaling & Fault Isolation: A big reason for the microservice approach was scalability and reliability in production. Each pipeline can be scaled horizontally on its own. For example, if ETA requests volume spikes, they could scale out just the Prediction service (Pathway supports parallel processing within a job as well, but logically separating it is an extra layer of scalability). Meanwhile, the data cleaning service might be CPU-bound and need its own scaling considerations, separate from the evaluation service which might be lighter. In a monolithic pipeline, you’d have to scale the whole thing as one unit, even if only one part is the bottleneck. By splitting them, only the hot spots get more resources. Likewise, if the evaluation pipeline fails due to, say, a bug or out-of-memory error, it doesn’t bring down the ingestion or prediction pipelines – they keep running and data accumulates in the tables. The ops team can fix and redeploy the evaluation job and catch up on the stored data. This isolation is crucial for a production system where you want to minimize downtime and avoid one component’s failure cascading into an outage of the whole feature.Pipeline Extensibility: The modular design also opened up new capabilities with minimal effort. The case study highlights a few:They can easily plug in an anomaly detection/alerting service that reads the continuous error metrics (from the evaluation stage) and sends notifications if something goes wrong (e.g., if predictions suddenly become very inaccurate, indicating a possible model issue or data drift).They can do offline model retraining or improvement by leveraging the historical data collected. Since they’re storing all cleaned inputs and outcomes, they have a high-quality dataset to train next-generation models. The blog mentions using the accumulated Delta tables of inputs and ground truths to experiment with improved prediction algorithms offline.They can perform A/B testing of prediction strategies by running two prediction pipelines in parallel. For example, run the current model on half the vehicles and a new model on a subset of vehicles (perhaps by partitioning the Kafka requests by transport\\_unit\\_id hash). Because the infrastructure supports multiple pipelines reading the same input and writing results, this is straightforward – you just add another Pathway service, maybe writing its predictions to a different topic/table, and compare the evaluation metrics in the end. In a monolithic system, A/B testing could be really cumbersome or require building that logic into the single pipeline. Operational Insights: On the operations side, the team did have to invest in coordinated deployments and monitoring for multiple services. There are four Pathway processes to deploy (plus Kafka, plus maybe the Delta Lake storage on S3 or HDFS, and the Postgres DB for results). Automated deploy pipelines and containerization likely help here (the blog doesn’t go deep into it, but it’s implied that there’s added complexity). Monitoring needs to cover each component’s health as well as end-to-end latency. The payoff is that each component is simpler by itself and can be updated or rolled back independently. For instance, deploying a new model in the Prediction service doesn’t require touching the ingestion or evaluation code at all – reducing risk. The scaling benefits were already mentioned: Pathway allows configuring parallelism for each pipeline, and because of the microservice separation, they only scale the parts that need it. This kind of targeted scaling can be more cost-efficient.The La Poste case is a compelling example of applying software engineering best practices (modularity, fault isolation, clear data contracts) to a streaming data pipeline. It demonstrates how breaking a pipeline into microservices can yield significant improvements in maintainability and extensibility for data engineering workflows. Of course, as the authors caution, this isn’t a silver bullet – one should adopt such complexity only when the benefits (scaling, flexibility, etc.) outweigh the overhead. In their scenario of continuously improving an ETA prediction service, the trade-off made sense and paid off.I found this architecture interesting, especially the use of Delta Lake as a communication layer between streaming jobs – it’s a hybrid approach that combines real-time processing with durable data lake storage. It raises some great discussion points: e.g., would you have used message queues (Kafka topics) between each stage instead, and how would that compare? How do others handle schema evolution across pipeline stages in production? The post provides a concrete case study to think about these questions. If you want to dive deeper or see code snippets of how Pathway implements these connectors (Kafka read/write, Delta Lake integration, etc.), I recommend checking out the original blog and the Pathway GitHub. Links below. Happy to hear others’ thoughts on this design!",
        "score": 21,
        "upvote_ratio": 0.9,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktkqj6/modular_data_pipeline_microservices_delta_lake/",
        "created_utc": "2025-05-23 14:18:34",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky7983",
        "title": "\"Normal\" amount of data re-calculation",
        "author": "Familiar-Monk9616",
        "subreddit": "dataengineering",
        "content": "I wanted to pick your brain concerning a situation I've learnt about.It's about a mid-size company. I've learnt that every night they are processing 50 TB data for analytical/ reporting purposes in their transaction data -> reporting pipeline (bronze + silver + gold). This sounds like a lot to my not-so-experienced ears.The amount seems to have to do with their treatment of SCD: they are re-calculating all data for several years every night in case some dimension has changed.What's your experience?",
        "score": 19,
        "upvote_ratio": 0.88,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky7983/normal_amount_of_data_recalculation/",
        "created_utc": "2025-05-29 10:21:06",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwyqyi",
        "title": "DuckDB’s new data lake extension",
        "author": "Phenergan_boy",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 21,
        "upvote_ratio": 0.86,
        "num_comments": 1,
        "url": "https://ducklake.select/",
        "created_utc": "2025-05-27 21:02:06",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktc6so",
        "title": "N8n in Data engineering.",
        "author": "Different-Future-447",
        "subreddit": "dataengineering",
        "content": "where exactly does n8n fit into your data engineering stack, if at all?I’m evaluating it for workflow automation and ETL coordination. Before I commit time to wiring it in, I’d like to know:•Is n8n reliable enough for production-grade pipelines?•Are you using it for full ETL (extract, transform, load) or just as an orchestration and alerting layer?•Where has it actually added value vs. where has it been a bottleneck?•Any use cases with AI/ML integration like anomaly detection, classification, or intelligent alerting?Not looking for marketing fluff—just practical feedback on how (or if) it works for serious data workflows.Thanks in advance. Would appreciate any sample flows, gotchas, or success stories.",
        "score": 21,
        "upvote_ratio": 0.82,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktc6so/n8n_in_data_engineering/",
        "created_utc": "2025-05-23 05:52:42",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxg3xs",
        "title": "Ducklake with dbt or sqlmesh",
        "author": "Additional_Pea412",
        "subreddit": "dataengineering",
        "content": "Hiya. The duckdb's Ducklake is just fresh out of the oven. The ducklake uses a special type of 'attach' that does not use the standard 'path' (instead ' data_path'), thus making dbt and sqlmesh incompatible with this new extension. At least that is how I currently perceive this.However, I am not an expert in dbt or sqlmesh so I was hoping there is a smart trick i dbt/sqlmesh that may make it possible to use ducklake untill an update comes along.Are there any dbt / sqlmesh experts with some brilliant approach to solve this?EDIT:Is it possible to handle the attach ducklake with macros before each model?",
        "score": 18,
        "upvote_ratio": 0.9,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxg3xs/ducklake_with_dbt_or_sqlmesh/",
        "created_utc": "2025-05-28 12:43:17",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kw9ku2",
        "title": "Group by on large dataset [Over 1 TB]",
        "author": "fmoralesh",
        "subreddit": "dataengineering",
        "content": "Hi everyone, I'm currently using an NVIDIA Tesla V100 32GB with CUDF to do som transformation on a dataset. The response time for the operations I'm doing is good, however, I'm wondering what is the best approach to do some grouping operations in some SQL database. Assuming I'm allowed to create a DB architecture from scratch, what is my best option? Is Indexing a good idea or is there something else (better) for my use case?Thanks in advance. EDIT: Thank you very much for the response to all of you, I tried Clickhouse as many of you suggested and holy cow, it is insane what it does. I didn't bulk all the data into the DB yet, but I tried with a subset of 145 GB, and got the following metrics: 465 rows in set. Elapsed: 4.333 sec. **Processed 1.23 billion rows**, 47.36 GB (284.16 million rows/s., 10.93 GB/s.). Peak memory usage: 302.26 KiB. I'm not sure if there is any way to even improve the response time, but I think I'm good with what I got. By the way, the database is pretty simple: | DATE | COMPANY\\_ID | FIELD 1 | ..... | .... | ......| .... | ..... | FIELD 7 | The query I was: SELECT FIELD 1, FIELD 2, COUNT(\\*) FROM test\\_table GROUP BY FIELD 1, FIELD 2;",
        "score": 15,
        "upvote_ratio": 0.85,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kw9ku2/group_by_on_large_dataset_over_1_tb/",
        "created_utc": "2025-05-27 00:08:27",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwsazd",
        "title": "pg_pipeline : Write and store pipelines inside Postgres :magic_wand::elephant: - no Airflow, no cluster",
        "author": "mattlianje",
        "subreddit": "dataengineering",
        "content": "You can now define, run and monitor data pipelines inside Postgres :magic_wand::elephant: Why setup Airflow, compute, and a bunch of scripts just to move data around your DB?[https://github.com/mattlianje/pg\\_pipeline](https://github.com/mattlianje/pg_pipeline)\\- Define pipelines using JSON config \\- Reference outputs of other stages using \\~> \\- Use parameters with $(param) in queries \\- Get built-in stats and tracking Meant for the 80–90% case: internal ETL and analytical tasks where the data already lives in Postgres. It’s minimal, scriptable, and plays nice with pg\\_cron. Feedback welcome! :man_bowing:",
        "score": 17,
        "upvote_ratio": 0.87,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwsazd/pg_pipeline_write_and_store_pipelines_inside/",
        "created_utc": "2025-05-27 16:51:26",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky9xj5",
        "title": "Data Science VS Data Engineering",
        "author": "AvailableJob1557",
        "subreddit": "dataengineering",
        "content": "Hey everyoneI'm about to start my journey into the data world, and I'm stuck choosing between **Data Science** and **Data Engineering** as a career pathHere’s some quick context:* I’m good with **numbers, logic, and statistics**, but I also enjoy the **engineering side of things**—APIs, pipelines, databases, scripting, automation, etc. ( **I'm not saying i can do them but i like and really enjoy the idea of the work** )* I like solving problems and building stuff that actually works, not just theoretical models* I also don’t mind coding and digging into infrastructure/toolsRight now, I’m trying to plan my next 2–3 years around one of these tracks, build a strong portfolio, and hopefully land a job in the near futureWhat I’m trying to figure out* Which one has **more job stability, long-term growth**, and chances for **remote work*** Which one is more in demand* Which one is more Future proof ( some and even Ai models say that DE is more future proof but in the other hand some say that DE is not as good, and data science is more future proof so i really want to know )I know they overlap a bit, and I could always pivot later, but I’d rather go all-in on the right path from the startIf you work in either role (or switched between them), I’d really appreciate your take especially if you’ve done both sides of the fenceThanks in advance",
        "score": 16,
        "upvote_ratio": 0.86,
        "num_comments": 31,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky9xj5/data_science_vs_data_engineering/",
        "created_utc": "2025-05-29 12:48:26",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxfi6c",
        "title": "Data Engineering Design Patterns by Bartosz Konieczny",
        "author": "JTags8",
        "subreddit": "dataengineering",
        "content": "I saw this book was recently published. Anyone look into this book and have any opinions? Already reading through DDIA and always looking for books and resources to help improve at work.",
        "score": 13,
        "upvote_ratio": 0.94,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxfi6c/data_engineering_design_patterns_by_bartosz/",
        "created_utc": "2025-05-28 12:13:26",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kukx4f",
        "title": "MongoDB vs Cassandra vs ScyllaDB for highly concurrent chat application",
        "author": "Attitudemonger",
        "subreddit": "dataengineering",
        "content": "We are working on a chat application for enterprise (imagine Google Workspace chat or Slack kinda application - for desktop and mobile). Of course we are just getting started, so one might suggest choosing a barebone DB and some basic tools to launch the app, but anticipating traffic, we want to distill the best knowledge available out there and choose the best stack to build our product from the beginning.For our chat application, where all typical user behaviors are there - messages, spaces, \"last seen\" or \"active\" statuses, message notifications, read receipts, etc. we need to choose a database to store all our chats. We also want to enable chat searches, and since search will inevitably lead to random chats, we want that perf to be consistently excellent.We are planning to use Django (with channels) as our backend. What database is recommended to use with Django to persist the messages? I read that Discord used to use Cassandra, but then it started acting up due to garbage collection, so they switched rto Scylla, and they are very happy with trillions of messages on it. Is ScyllDB a good candidate for our purpose to use with Django? Do these two work together well? Can MongoDB do it (my preferred choice, but I read that it starts acting up with high number of reads or writes at the same time - which would be a basic use case for enterprise chat scenario)?",
        "score": 13,
        "upvote_ratio": 0.86,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kukx4f/mongodb_vs_cassandra_vs_scylladb_for_highly/",
        "created_utc": "2025-05-24 20:23:28",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kweo8p",
        "title": "Airflow observability",
        "author": "omscsdatathrow",
        "subreddit": "dataengineering",
        "content": "What do people use here for airflow observability needs besides the UI?",
        "score": 12,
        "upvote_ratio": 0.88,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kweo8p/airflow_observability/",
        "created_utc": "2025-05-27 04:41:08",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kv5cph",
        "title": "Reducing Peak Memory Usage in Trino: A SQL-First Approach",
        "author": "sanji-vs",
        "subreddit": "dataengineering",
        "content": "Hi all, full disclosure I’m looking for feedback on my first Medium post: https://medium.com/@shuu1203/reducing-peak-memory-usage-in-trino-a-sql-first-approach-fc687f07d617I’m fairly new to Data Engineering (or actually, Analytics Engineering) (began in January with moving to a new project) and was wondering if I could write something up I found interesting to work on. I’m unsure if the nature of the post is even something of worthy substance to anyone else.I appreciate any honest feedback.",
        "score": 14,
        "upvote_ratio": 0.86,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv5cph/reducing_peak_memory_usage_in_trino_a_sqlfirst/",
        "created_utc": "2025-05-25 15:33:19",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ku636f",
        "title": "How We Solved the Only 10 Jobs at a Time Problem in Databricks – My First Medium Blog!",
        "author": "javabug78",
        "subreddit": "dataengineering",
        "content": "really appreciate your support and feedback!In my current project as a Data Engineer, I faced a very real and tricky challenge — we had to schedule and run 50–100 Databricks jobs, but our cluster could only handle 10 jobs in parallel.Many people (even experienced ones) confuse the max_concurrent_runs setting in Databricks. So I shared:What it really meansOur first approach using Task dependencies (and what didn’t work well)And finally…A smarter solution using Python and concurrency to run 100 jobs, 10 at a timeThe blog includes real use-case, mistakes we made, and even Python code to implement the solution!If you're working with Databricks, or just curious about parallelism, Python concurrency, or running jar files efficiently, this one is for you.Would love your feedback, reshares, or even a simple like to reach more learners!Let’s grow together, one real-world solution at a time",
        "score": 14,
        "upvote_ratio": 0.74,
        "num_comments": 2,
        "url": "https://medium.com/@adarshyadav482/how-to-achieve-parallelism-in-databricks-jobs-tasks-hi-all-d847b4d5e84b",
        "created_utc": "2025-05-24 07:39:48",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxijri",
        "title": "etl4s: Turn Spark spaghetti code into whiteboard-style pipelines",
        "author": "mattlianje",
        "subreddit": "dataengineering",
        "content": "Hello all! etl4s is a tiny, zero-dep Scala lib: [https://github.com/mattlianje/etl4s](https://github.com/mattlianje/etl4s) (that plays great with Spark)We are now using it heavily @ Instacart to turn Spark spaghetti into clean, config-driven pipelinesYour veteran feedback helps a lot!",
        "score": 10,
        "upvote_ratio": 0.92,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxijri/etl4s_turn_spark_spaghetti_code_into/",
        "created_utc": "2025-05-28 14:29:31",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kx5ewy",
        "title": "Where is the value? Why do it? Business value and DE",
        "author": "J0hnDutt00n",
        "subreddit": "dataengineering",
        "content": "Title simple as that. What techniques and tools do you use to tie value to specific engineering tasks and projects? I'm talking beginning development and evolves to support all the way through the whole process from API to a platinum mart. If you're using Jira, is there a simpler way? How would you present a DEs teams value to those upstairs? Our team's efforts support several specific mature data products for analytics and more for other segments. The green manager is struggling on quantifying our value add (development and ongoing support ) to be able to request more people. There's now a renewed push towards overusing Jira. I have a good sense on how it would be calculated but the several layer abstraction seems to muddy the waters?",
        "score": 13,
        "upvote_ratio": 0.79,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kx5ewy/where_is_the_value_why_do_it_business_value_and_de/",
        "created_utc": "2025-05-28 02:05:33",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky80zh",
        "title": "ELT hobby project",
        "author": "gatornado420",
        "subreddit": "dataengineering",
        "content": "Hi all,I’m working as a marketing automation engineer / analyst and took interest in data engineering recently.I built this hobby project as a first thing to dip my toes in data engineering.1. Playwright for scraping apartment listings.2. Loading the data on Heroku Postgres with Psycopg2.3. Transformations using medallion architecture with DBT.Orchestration is done with Prefect. Not sure if that’s a valid alternative for Airflow.Any feedback would be welcome.Repo: https://github.com/piotrtrybus/apartments_pipeline",
        "score": 12,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky80zh/elt_hobby_project/",
        "created_utc": "2025-05-29 11:07:59",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kut9e6",
        "title": "Ideas on how to handle deeply nested json files",
        "author": "BlueAcronis",
        "subreddit": "dataengineering",
        "content": "My application is distributed across several AWS accounts, and it writes logs to Amazon CloudWatch Logs in the `.json.gz` format. These logs are streamed using a subscription filter to a centralized Kinesis Data Stream, which is then connected to a Kinesis Data Firehose. The Firehose buffers, compresses, and delivers the logs to Amazon S3 following the flow: **CloudWatch Logs → Kinesis Data Stream → Kinesis Data Firehose → S3**I’m currently testing some scenarios and encountering challenges when trying to write this data directly to the AWS Glue Data Catalog. The difficulty arises because the JSON files are deeply nested (up to four levels deep) as shown in the example below. I would like to hear suggestions on how to handle this. I have tested Lambda Transformations but I am getting errors since my json is 12x longer than that. I wonder if Kinesis Firehose can handle that without any coding. I researched but it appears not to handle that nested level. { \"order_id\": \"ORD-2024-001234\", \"order_status\": \"completed\", \"customer\": { \"customer_id\": \"CUST-789456\", \"personal_info\": { \"first_name\": \"John\", \"last_name\": \"Doe\", \"phone\": { \"country_code\": \"+1\", \"number\": \"555-0123\" } } } }",
        "score": 10,
        "upvote_ratio": 0.92,
        "num_comments": 38,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kut9e6/ideas_on_how_to_handle_deeply_nested_json_files/",
        "created_utc": "2025-05-25 03:38:23",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kuc0iu",
        "title": "Personal project: handle SFTP uploads and get clean API-ready data",
        "author": "Neutronpr0",
        "subreddit": "dataengineering",
        "content": "https://preview.redd.it/d3i71nv0kq2f1.jpg?width=3584&format=pjpg&auto=webp&s=25f84c3295ddb2b3ae06de97a0f28697c31073bdI built a tool called SftpSync that lets you spin up an SFTP server with a dedicated user in one click. You can set how uploaded files should be processed, transformed, and validated — and then get the final result via API or webhook.Main features:* SFTP server with user access* File transformation and mapping* Schema validation* Webhook when processing is done* Clean output available via APIWould love to hear what you think — do you see value in this? Would you try it?[sftpsync.io](http://sftpsync.io)",
        "score": 9,
        "upvote_ratio": 0.74,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuc0iu/personal_project_handle_sftp_uploads_and_get/",
        "created_utc": "2025-05-24 13:47:01",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktr6u3",
        "title": "A no-code tool to explore & clean datasets",
        "author": "enzineer-reddit",
        "subreddit": "dataengineering",
        "content": "Hi guys,I’ve built a small tool called [**DataPrep**](https://data-prep.app) that lets you visually **explore and clean datasets** in your browser without any coding requirement.You can try the live demo here (no signup required): [demo.data-prep.app](https://demo.data-prep.app) I work with data pipelines and I often needed a quick way to inspect raw files, test cleaning steps, and get some insights into my data without jumping into Python or SQL and for that I started working on **DataPrep**. The app is in its **MVP / Alpha** stage.It'd be really helpful if you guys can try it out and provide some feedback on some topics like :* Would this save time in your workflows ?* What features would make it more useful ?* Any integrations or export options that should be added to it ?* How can the UI / UX be improved to make it more intuitive ?* Bugs encounteredThanks in advance for giving it a look. Happy to answer any questions regarding this.",
        "score": 10,
        "upvote_ratio": 0.76,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktr6u3/a_nocode_tool_to_explore_clean_datasets/",
        "created_utc": "2025-05-23 18:42:04",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky5smd",
        "title": "Redshift query compilation is slow, will BigQuery fix this?",
        "author": "bergandberg",
        "subreddit": "dataengineering",
        "content": "My Redshift queries take 10+ seconds on first execution due to query planning overhead, but drop to <1sec once cached. A requirement is that first-query performance is also fast.Does BigQuery's serverless architecture eliminate this \"cold start\" compilation overhead?",
        "score": 8,
        "upvote_ratio": 0.84,
        "num_comments": 18,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky5smd/redshift_query_compilation_is_slow_will_bigquery/",
        "created_utc": "2025-05-29 08:44:44",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxo58r",
        "title": "Sequor: An open source SQL-centric framework for API integrations (like \"dbt for app integration\")",
        "author": "maxgrinev",
        "subreddit": "dataengineering",
        "content": "**TL;DR:** Open source \"dbt for API integration\" - SQL-centric, git-friendly, no vendor lock-in. Code-first approach to API workflows.Hey r/dataengineering,We built Sequor to solve a recurring problem: choosing between two bad options for API/app integration:1. Proprietary black-box SaaS connectors with vendor lock-in2. Custom scripts that are brittle, opaque, and hard to maintainAs data engineers, we wanted a solution that followed the principles that made dbt so powerful (code-first, git-based version control, SQL-centric), but designed specifically for API integration workflows.**What Sequor does:*** Connects APIs to your databases with an iterator model* Uses SQL for all data transformations and preparation* Defines workflows in YAML with proper version control* Adds procedural flow control (if-then-else, for-each loops)* Uses Python and Jinja for dynamic parameters and response mapping**Quick example:** * Data acquisition: Pull Salesforce leads → transform with SQL → push to HubSpot → all in one declarative pipeline.* Data activation (Reverse ETL): Pull customer behavior from warehouse → segment with SQL → sync personalized offers to Klaviyo/Mailchimp* App integration: Pull new orders from Amazon → join with SQL to identify new customers → create the customers and sales orders in NetSuite* App integration: Pull inventory levels from NetSuite → filter with SQL for eBay-active SKUs → update quantities on eBay**How it's different from other tools:**Instead of choosing between rigid and incomplete prebuilt integration systems, you can easily build your own custom connectors in minutes using just two basic operations (**transform** for SQL and **http\\_request** for APIs) and starting from prebuilt examples we provide.The project is open source and we welcome any feedback and contributions.**Links:*** Website: [https://sequor.dev/](https://sequor.dev/) (includes code examples)* Quickstart: [https://docs.sequor.dev/getting-started/quickstart](https://docs.sequor.dev/getting-started/quickstart)* GitHub: [https://github.com/paloaltodatabases/sequor](https://github.com/paloaltodatabases/sequor)* Examples of prebuilt integrations: [https://github.com/paloaltodatabases/sequor-integrations](https://github.com/paloaltodatabases/sequor-integrations)**Questions for the community:*** What's your current approach to API integrations?* What business apps and integration scenarios do you struggle with most?* Are there specific workflows that have been particularly challenging to implement?",
        "score": 9,
        "upvote_ratio": 0.92,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxo58r/sequor_an_open_source_sqlcentric_framework_for/",
        "created_utc": "2025-05-28 18:11:03",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kw2ljk",
        "title": "What is the best Python UI Tool for Data Visualization + CRUD?",
        "author": "Neel-reddit",
        "subreddit": "dataengineering",
        "content": "Hi All, I am working on a personal project to combine the transactions from my brokerage accounts and create a dashboard that will allow me to:1. View portfolio performance over time2. Drill down the holdings by brokerage account, asset type, geography, etc. 3. Performe performance attributionOn the backend, I am using sqlalchemy in python to create database models. As part of the database, I will be creating my own transaction types so that I can map differently name transactions from various brokerage to same type. I want to build a dashboard that will allow me to upload my monthly brokerage statements on the UI and also let me edit some fields in the database such as transaction types. I am mainly using python and sql. What is the industry standard tool/language used for creating dashboards and allow CRUD operations? Thank you in advance!",
        "score": 11,
        "upvote_ratio": 0.82,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kw2ljk/what_is_the_best_python_ui_tool_for_data/",
        "created_utc": "2025-05-26 19:04:03",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxvdxp",
        "title": "Snowflake Phasing out Single Factor Authentication + DBT",
        "author": "CingKan",
        "subreddit": "dataengineering",
        "content": "Just realised between snowflake phasing out single factor auth ie password only authentication and dbt only supporting keypair/oauth in their paid offerings, dbt core users on snowflake may well be screwed or at the very least wont benefit heavily from all the cool new changes we saw today. Anyone else in this boat? This is happening in November 2025 btw. I have MFA now and its aggresively slow having to authenticate every single time you run a model in VScode, or just dbt in general from the terminal",
        "score": 8,
        "upvote_ratio": 0.67,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxvdxp/snowflake_phasing_out_single_factor/",
        "created_utc": "2025-05-28 23:05:11",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxe0l5",
        "title": "Data Migration in Modernization Projects Still Feels Broken — How Are You Solving Governance & Validation?",
        "author": "Deep_Hotel_8039",
        "subreddit": "dataengineering",
        "content": "Hey folks,We’re seeing a pattern across modernization efforts: **Data migration** — especially when moving from legacy monoliths to microservices or SaaS architectures — is still **painfully ad hoc**.Sure, the core ELT pipeline can be wired up with AWS tools like **DMS**, **Glue**, and **Airflow**. But we keep running into these *repetitive, unsolved pain points*:* Pre-migration risk profiling (null ratios, low-entropy fields, unexpected schema drift)* Field-level data lineage from source → target* Dry run simulations for pre-launch sign-off* Post-migration validation (hash diffs, rules, anomaly checks)* Data owner/steward approvals (governance checkpoints)* Observability and traceability when things go wrongWe’ve had to script or manually patch this stuff over and over — across different clients and environments. Which made us wonder:# Are These Just Gaps in the Ecosystem?We're trying to validate:* Are others running into these same repeatable challenges?* How are you handling governance, validation, and observability in migrations?* If you’ve extended the AWS-native stack, how did you approach things like steward approvals or validation logic?* Has anyone tried solving this at the **platform level** — e.g., a reusable layer over AWS services, or even a standalone open-source toolset?* If AWS-native isn't enough, what **open-source options** could form the foundation of a more robust migration framework?We’re not trying to pitch anything — just seriously considering whether these pain points are universal enough to justify a more structured solution (possibly even SaaS/platform-level). Would love to learn how others are approaching it.Thanks in advance.",
        "score": 7,
        "upvote_ratio": 0.82,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxe0l5/data_migration_in_modernization_projects_still/",
        "created_utc": "2025-05-28 10:51:27",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kulfzw",
        "title": "One big project that you interate on as you learn more or many smaller projects that will quickly go out of date as you learn more?",
        "author": "godz_ares",
        "subreddit": "dataengineering",
        "content": "Hey all, I am working on a project right now, it was supossed to be culmination of everything I learnt so far. Applying stuff I learnt in courses But as I've gone through the project I've gone through writing the code but I keep on bumping into things that'll improve my project e.g. Threading, Spark, Great Expectations, maybe FastAPI for a front end? Not to mention that in order to use a tool you intend to you have to learn something else, which means learning another thing, which means watching a video and down the rabbit hole you go. An example for me was having to learn Docker in order get Airflow working properly. I plan on finishing the project but adding on bits and pieces as I go on. However this will mean I won't be applying my skills on a diverse range of use cases. My goal is to kick-start a DE career in the distant future. So I was wondering what is the best approach? Iteration or finalisation?",
        "score": 7,
        "upvote_ratio": 0.83,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kulfzw/one_big_project_that_you_interate_on_as_you_learn/",
        "created_utc": "2025-05-24 20:47:44",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kuabfw",
        "title": "Which MSc would you recommend?",
        "author": "Different-Earth4080",
        "subreddit": "dataengineering",
        "content": "Hi All. I am looking to make the shift towards a career as a Data Engineer.To help me with this, I am looking to do a Masters Degree. Out of the following, which MSc do you think would give me the best shot at finding a Data Engineering role?Option 1 - [https://www.napier.ac.uk/courses/msc-data-engineering-postgraduate-online-learning](https://www.napier.ac.uk/courses/msc-data-engineering-postgraduate-online-learning) Option 2 - [https://www.stir.ac.uk/courses/pg-taught/big-data-online/?utm\\_source=chatgpt.com#panel\\_1\\_2](https://www.stir.ac.uk/courses/pg-taught/big-data-online/?utm_source=chatgpt.com#panel_1_2)Thanks, Matt",
        "score": 9,
        "upvote_ratio": 0.81,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kuabfw/which_msc_would_you_recommend/",
        "created_utc": "2025-05-24 12:20:29",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxsxqv",
        "title": "Integrating GA4 + BigQuery into AWS-based Data Stack for Marketplace Analytics – Facing ETL Challenges",
        "author": "cadlx",
        "subreddit": "dataengineering",
        "content": "Hey everyone,I’m working as a data engineer at a large marketplace company. We process over 3 million transactions per month and receive more than 20 million visits to our website monthly.We’re currently trying to integrate data from Google Analytics 4 (GA4) and BigQuery into our AWS-based architecture, where we use S3, Redshift, dbt, and Tableau for analytics and reporting.However, we’re running into some issues with the ETL process — especially when dealing with the semi-structured NoSQL-like GA4 data in BigQuery. We’ve successfully flattened the arrays into a tabular model, but the resulting tables are huge — both in terms of columns and rows — and we can’t run dbt models efficiently on top of them.We attempted to create intermediate, smaller tables in BigQuery to reduce complexity before loading into AWS, but this introduced an extra transformation layer that we’d rather avoid, as it complicates the pipeline and maintainability.I’d like to implement an incremental model in dbt, but I’m not sure if that’s going to be effective given the way the GA4 data is structured and the performance bottlenecks we’ve hit so far.Has anyone here faced similar challenges with integrating GA4 data into an AWS ecosystem?How did you handle the schema explosion and performance issues with dbt/Redshift?Any thoughts on best practices or architecture patterns would be really appreciated.Thanks in advance!",
        "score": 6,
        "upvote_ratio": 0.81,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxsxqv/integrating_ga4_bigquery_into_awsbased_data_stack/",
        "created_utc": "2025-05-28 21:20:48",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxeg0i",
        "title": "How many of you succeed to bring RAG to your company for internal Analysis?",
        "author": "Substantial_Lab_5160",
        "subreddit": "dataengineering",
        "content": "I'm wondering how many people have tried to integrate an RAG agent to their business data and get on-demand analysis from it? What was the biggest challenge? What tech stack did you use? I'm asking because i'm in the same journey",
        "score": 8,
        "upvote_ratio": 0.8,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxeg0i/how_many_of_you_succeed_to_bring_rag_to_your/",
        "created_utc": "2025-05-28 11:16:33",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwqb87",
        "title": "The Role of the Data Architect in AI Enablement",
        "author": "growth_man",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 6,
        "upvote_ratio": 0.72,
        "num_comments": 3,
        "url": "https://moderndata101.substack.com/p/the-role-of-the-data-architect",
        "created_utc": "2025-05-27 15:33:51",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kv54t6",
        "title": "Career Transition Advice: From SAP Developer (13 YOE) to Amazon Data Engineer – Need Guidance",
        "author": "BlacksmithDowntown73",
        "subreddit": "dataengineering",
        "content": "I’m currently working as an SAP developer with 13 years of experience, mostly focused on ABAP, SAP EWM, and backend logic. I’m now planning a career transition into data engineering, and my target is a Data Engineer role at Amazon.I already have strong experience in SQL and database design, and I’ve worked with complex data flows in enterprise environments. I’m planning to take a Data Engineering Bootcamp on Coursera to build a solid foundation in modern tools and frameworks.Before I go all in, I’d love some advice:•Which specific skills or tools should I focus on to break into a DE role at Amazon?•Are there any must-have certifications or project ideas that can help me stand out?•How much weight does my SAP experience carry when applying to cloud data roles?•Any recommendations for open-source projects or hands-on practice platforms?Would appreciate any input from folks who made similar transitions or are working in the DE space at big tech.Thanks in advance!",
        "score": 7,
        "upvote_ratio": 0.82,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv54t6/career_transition_advice_from_sap_developer_13/",
        "created_utc": "2025-05-25 15:23:48",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktuzlu",
        "title": "Is DE cyclical?",
        "author": "serverlessmom",
        "subreddit": "dataengineering",
        "content": "As people complain about visual tools removing Data Engineering jobs, I'm wondering if you agree that there are cycles to the industry:1 - we need someone to organize and control access (e.g. DBAs)2 - we're losing velocity, fire the data people and let people make their own integrations/tables/schemas3 - we just had another outage, we're not scaling well, we need expert advice4 - lets create a team to enable everyone to use the data stores efficiently and correctly5 - but now there are great tools to handle that automatically, do we really need this whole team?I've seen at least two phases of this, first with tools like SSIS, and now with all these generative tools for writing integrations and queries.",
        "score": 8,
        "upvote_ratio": 0.84,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktuzlu/is_de_cyclical/",
        "created_utc": "2025-05-23 21:23:26",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky2ex7",
        "title": "Data Engineering Interns - what is/was your main complaint/disappointment about your internship?",
        "author": "Street_Challenge6834",
        "subreddit": "dataengineering",
        "content": "TL:DR: I’m a senior data engineer at a consulting firm and I’m one of the coordinators of the data engineering internship program. I also manage and mentor/teach some of the interns. I want to improve this aspect of my work so I’m looking for insight into common problems interns face. Advice from people who were/are in similar roles are also welcome!Further context: I’m a senior data engineer at a consulting firm and I’m one of the coordinators of the data engineering internship program and I also manage and mentor/teach some of the interns. The team responsible for the program includes data engineers and people from talent acquisition/hr. My work involves interviewing and selecting the interns, designing and implementing the program’s learning plan, mentoring/teaching interns among some other bureaucratic stuff.I’ve been working on the program for 3+ years, and it’s at a stage where we have some standard processes that streamline our work (like a standard learning plan that we evolve based on the feedback from each internship class, results and the observations from the team, and a well-defined selection process, which we also evolve based on similar parameters). Since I’ve been doing this for a while, I also have a kind of standard approach, which I obviously adapt to the context of each cohort and the specificities and needs of the intern I’m managing. This system works well the way it is, but there’s always room for improvement. So, I’m looking for broader insight from people who were/are data engineering interns into what major issues they faced, what were the problems in the way they were addressed, how would you improve it, or suggestions of thing you wished you had on your internship. Advice from people who were/are in similar roles are also welcome!",
        "score": 6,
        "upvote_ratio": 0.87,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky2ex7/data_engineering_interns_what_iswas_your_main/",
        "created_utc": "2025-05-29 05:01:00",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxzcuu",
        "title": "Should a lakehouse be theorigin for a dataset?",
        "author": "junglemeinmor",
        "subreddit": "dataengineering",
        "content": "I am relatively new to the world of data lake houses. I'm looking for some thoughts or guidance. In a solution that must be on prem, I have data arriving from multiple sources (files and databases) at the bronze layer. Now in order to get from bronze to silver and then gold, I need some rules based transformation. These rules are not available in a source system today, so the requirement is to create an editable dataset within the lakehouse. This isn't data that's bronze or will be transformed. Business also needs an UI to set these rules. While iceberg does have data editing capabilities, I'm somewhat convinced it's better to have another custom application take care of the rules definition and storage, and be a source of the rules data, instead of managing it all with iceberg and a query engine. To me, it sounds like management of rules is an OLTP use case. Till we decide on this, we are letting the rules be in a file, and that file acts as a source of data brought into the lakehouse. Does anyone else do this? Maintain some master data set that's only in the data lakehouse? Should lakehouses only have a copy of data sourced from somewhere, or can they be a store of completely new datasets created directly in the lake?",
        "score": 4,
        "upvote_ratio": 0.71,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxzcuu/should_a_lakehouse_be_theorigin_for_a_dataset/",
        "created_utc": "2025-05-29 02:14:39",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxkzvs",
        "title": "Transitioning from Data Engineering to DataOps — Worth It?",
        "author": "Individual_Suit5896",
        "subreddit": "dataengineering",
        "content": "**Hello everyone,**I’m currently a Data Engineer with 2 years of experience, mostly working in the Azure stack — Databricks, ADF, etc. I’m proficient in Python and SQL, and I also have some experience with Terraform.I recently got an offer for a DataOps role that looks really interesting, but I’m wondering if this is a good path for growth compared to staying on the traditional data engineering track.Would love to hear any advice or experiences you might have!Thanks in advance.",
        "score": 8,
        "upvote_ratio": 0.9,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxkzvs/transitioning_from_data_engineering_to_dataops/",
        "created_utc": "2025-05-28 16:06:55",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwg4jx",
        "title": "self serve analytics for our business users w/ text to sql. Build vs buy?",
        "author": "Narrow-Algae1455",
        "subreddit": "dataengineering",
        "content": "HeyWe want to give our business users a way to query data on their own. Business users = our operations team + exec team for nowWe have already documentation in place for some business definitions and for tables. And most of the business users already have a very bit of sql knowledge. From your experience: how hard is it to achieve this? Should we go for a tool like Wobby or Wren AI or build something ourselves?Would love to hear your insights on this. Thx!",
        "score": 7,
        "upvote_ratio": 0.77,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwg4jx/self_serve_analytics_for_our_business_users_w/",
        "created_utc": "2025-05-27 06:11:49",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvtmt1",
        "title": "Techniques to reduce pipeline count?",
        "author": "Cyborg078",
        "subreddit": "dataengineering",
        "content": "I'm working in a mid-sized FMCG company, I utilize Azure Data Factory (ADF). The current ADF environment includes 1,310 pipelines and 243 datasets. Maintaining this volume will become increasingly challenging. How can we reduce the number of pipelines without impacting functionality?Any advice on this ?",
        "score": 6,
        "upvote_ratio": 0.7,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvtmt1/techniques_to_reduce_pipeline_count/",
        "created_utc": "2025-05-26 12:54:31",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kv5znf",
        "title": "Development using the company tech stack vs CV-driven development",
        "author": "oscarmch",
        "subreddit": "dataengineering",
        "content": "Hi guys.I just came out from an int. with a software development company for a Data Engineering position.I received feedback (which surprised me tbh) that said that \"I must have experience with Airflow, Spark, Kafka\" and so on \"because it's what the market is expecting you to know\".My question is, how do you handle getting experience with these tool when Business doesn't need to? More often than not, companies don't need to deploy an Airflow server for Orchestration or a Kafka one for Streaming because they don't need to do Streaming, or even the Orchestration could be done by using Glue or ADF (for example). I see many post regarding poorly architectured solutions that rely on pyspark when the processing could've been done using pandas, and so on.So, how do maintain relevant in a Business that apparently needs those tools, when in reality, a large part of companies doesn't need them at all, or even the tech stack is not in favor of using those tools?Thanks.",
        "score": 7,
        "upvote_ratio": 0.89,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv5znf/development_using_the_company_tech_stack_vs/",
        "created_utc": "2025-05-25 16:00:52",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kupvm8",
        "title": "Next steps for portfolio project?",
        "author": "notgrassnotgas",
        "subreddit": "dataengineering",
        "content": "Hello everyone! I am an early career SWE (2.5 YoE) trying to land an early or mid-level data engineering role in a tech hub. I have a Python project that pulls dog listings from one of my local animal shelters daily, cleans the data, and then writes to an Azure PostgreSQL database. I also wrote some APIs for the db to pull schema data, active/recently retired listings, etc. I'm at an impasse with what to do next. I am considering three paths:1. Build a frontend and containerize. Frontend would consist of a Django/Flask interface that shows active dog listings and/or links to a Tableau dashboard that displays data on old listings of dogs who have since left the shelter.2. Refactor my code with PySpark. Right now I'm storing data in basic Pandas dataframes so that I can clean them and push them to a single Azure PostgreSQL node. It's a fairly small animal shelter, so I'm only handling up to 80-100 records a day, but refactoring would at least prove Spark skills.3. Scale up and include more shelters (would probably follow #2). Right now, I'm only pulling from a single shelter that only has up to ~100 dogs at a time. I could try to scale up and include listings from all animal shelters within a certain distance from me. Only potential downside is increase in cloud budget if I have to set up multiple servers for cloud computing/db storage.Which of these paths should I prioritize for? Open to suggestions, critiques of existing infrastructure, etc.",
        "score": 4,
        "upvote_ratio": 0.71,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kupvm8/next_steps_for_portfolio_project/",
        "created_utc": "2025-05-25 00:25:44",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kttnvm",
        "title": "How valuable do you guys find structured learning vs learning/improving on the job?",
        "author": "Reddit_Account_C-137",
        "subreddit": "dataengineering",
        "content": "I am a mechanical engineer slowly converted into an analytics/data engineer. I'm only around 1.5 years into data engineering and 3 years into working closely with data.My team primarily works almost exclusively in Databricks, ADF, and Power BI. I've taken a variety of Databricks courses and I recently finished reading Fundamental of Data Engineering but I feel like neither of those have been quite as valuable as I would have hoped. Yes I get small nuggets of info that I didn't know here and there but it feels like a large majority of the info Is not really relevant or is very surface level. Yet it takes a lot of time to go through. I feel like I have gotten significantly more value out of simply learning on the job. Doing projects and researching questions as they come up. I'm sure there are very nuanced, highly technical questions that come up when working with specific scenarios like IoT or banking information but I don't really experience that.I've also worked on some wed development side projects in the past that require a DB on that backend and that real life experience has also taught me a lot about both programming principles and optimizing DBs/Queries.I have three other books that I would consider reading:* Pragmatic Programmer* Designing Data Intensive Applications* Kimball's Data Warehouse Guide I know at least the bottom two are way more technical but is it worth fully reading through from someone who learns better so hands on? Should I just skim through them and look up some basics that I can further deep dive once I know I need it? Or is there really value in reading through it and taking notes? How do you guys approach learning at different points in your career?",
        "score": 7,
        "upvote_ratio": 1.0,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kttnvm/how_valuable_do_you_guys_find_structured_learning/",
        "created_utc": "2025-05-23 20:26:24",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kteklu",
        "title": "Bytebase 3.6.2 released -- Database DevSecOps for MySQL/PG/MSSQL/Oracle/Snowflake/Clickhouse",
        "author": "op3rator_dec",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 2,
        "url": "https://www.bytebase.com/changelog/bytebase-3-6-2/",
        "created_utc": "2025-05-23 08:38:49",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktc9oy",
        "title": "Data strategy",
        "author": "Different-Future-447",
        "subreddit": "dataengineering",
        "content": "If you’ve ever been part of a team that had to rewrite a large, complex ETL system that’s been running for year what was your overall strategy?•How did you approach planning and scoping the rewrite?•What kind of questions did you ask upfront?•How did you handle unknowns buried in legacy logic?•What helped you ensure improvements in cost, performance, and data quality?•Did you go for a full re-architecture or a phased refactor?Curious to hear how others tackled this challenge, what worked, and what didn’t.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktc9oy/data_strategy/",
        "created_utc": "2025-05-23 05:58:09",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxrzh5",
        "title": "Why are so many companies hiring for ML Model Infrastructure Teams?",
        "author": "Appropriate_Collar52",
        "subreddit": "dataengineering",
        "content": "I've done so many technical interviews, and there's one recurring pattern that I'm noticing.The need for developers who can write code or design systems to power infrastructure for machine learning model teams?But why is this so up-and-coming? We've tackled major infrastructure-related challenges in the past ( think Big Data, Hadoop, Spark, Flink, Map Reduce ), where we needed to deploy large clusters of distributed machines to do efficient computation?Can't the same set of techniques or paradigms - sourced from distributed systems or performance research into Operating Systems - also be applied to the ML model space? What gives?",
        "score": 3,
        "upvote_ratio": 0.68,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxrzh5/why_are_so_many_companies_hiring_for_ml_model/",
        "created_utc": "2025-05-28 20:43:15",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwh6rv",
        "title": "Suggest me some resources on system design related to data engineering",
        "author": "Routine-Force6263",
        "subreddit": "dataengineering",
        "content": "I am aws data engineer. I am struggling with system design rounds. Can you suggest me how to improve myself on this",
        "score": 5,
        "upvote_ratio": 0.73,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwh6rv/suggest_me_some_resources_on_system_design/",
        "created_utc": "2025-05-27 07:23:55",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvqajs",
        "title": "How to know which files have already been loaded into my data warehouse?",
        "author": "thomastc",
        "subreddit": "dataengineering",
        "content": "_Context: I'm a professional software engineer, but mostly self-taught in the world of data engineering. So there are probably things I don't know that I don't know! I've been doing this for about 8 years but only recently learned about DBT and SQLMesh, for example._I'm working on an ELT pipeline that converts input files of various formats into Parquet files on Google Cloud Storage, which subsequently need to be loaded into BigQuery tables (append-only).- The Extract processes drop files into GCS at unspecified times.- The Transform processes convert _newly created_ files to Parquet and drops the result back into GCS.- The Load process needs to load the _newly created_ files into BigQuery, making sure to load every file exactly once.To process only new (or failed) files, I guess there are two main approaches:1. Query the output, see what's missing, then process that. Seems simple, but has scalability limitations because you need to list the entire history. Would need to query both GCS and BQ to compare what files are still missing.2. Have some external system or work queue that keeps track of incomplete work. Scales better, but has the potential to go out of sync with reality (e.g. if Extract fails to write to the work queue, the file is never transformed or loaded).I suppose this is a common problem that everyone has solved already. What are the best practices around this? Is there any (ideally FOSS) tooling that could help me?",
        "score": 6,
        "upvote_ratio": 0.88,
        "num_comments": 34,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvqajs/how_to_know_which_files_have_already_been_loaded/",
        "created_utc": "2025-05-26 09:36:25",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvo54d",
        "title": "Databricks Orchestration: Databricks Workflows, Azure Data Factory, and Airflow",
        "author": "4DataMK",
        "subreddit": "dataengineering",
        "content": "No content",
        "score": 4,
        "upvote_ratio": 0.75,
        "num_comments": 1,
        "url": "https://medium.com/@mariusz_kujawski/databricks-orchestration-databricks-workflows-azure-data-factory-and-airflow-fb44560fac08",
        "created_utc": "2025-05-26 07:08:34",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvbr5b",
        "title": "Learning About GCP BigQuery Table Schema - Please help me understand the real world use cases of when and how often you use \"Nested & Repeating Schema\" and \"normalized relational schema\" when constructing your GCP BigQuery tables.",
        "author": "Original_Chipmunk941",
        "subreddit": "dataengineering",
        "content": "**Question:**I am currently learning Google Cloud Platform for data engineering. I learned that there are three types of schemas that I can use when constructing tables in BigQuery: 1) Normalized relational schema, 2) Nested & Repeating Schema, 3) Denormalized schema. I am trying to understand when I will realistically use \"Nested & Repeating Schema\" instead of \"normalized relational schema\" for the tables that I construct in BigQuery.Please answer both of these questions below:1. When do you use \"Nested & Repeating Schema\" over \"normalized relational schema\" when you construct tables in BigQuery?2. When constructing tables within BigQuery data warehouses, how often do you use \"Nested & Repeating Schema\"? How often do you use \"normalized relational schema\"? If possible, please provide me a ballpark percentage (Ex. 40% Nested & Repeating Schema vs. 60% normalized relational schema). **My Current Rationale:**I understand that BigQuery is a columnar oriented database. I learned that \"Nested & Repeating Schema\" is a more cost-effective for querying and more efficient than \"normalized relational schema\". However, even after researching it, I do not fully understand the real life advantages of \"Nested & Repeating Schema\" over a \"normalized relational schema\".Although \"Nested & Repeating Schema\" is more efficient and cost-effective for querying, I think a \"normalized relational schema\" makes more sense because it allows you to update records more easily like a traditional SQL RDBMS.I understand that columnar oriented databases are great when your historical data within the BigQuery table does not change. However, from my experience on working as a data analyst, historical data frequently needs to change. For example, lets say you have an external OLTP RDBMS that feeds into BigQuery daily. This external OLTP RDBMS contains a table named sales data. This table contains a column named \"Member Status\" and returns either one of two outputs: \"Active\" or \"Inactive\". \"Member ID\" 123456 has a \"Member Status\" of \"Active\". The data for that daily load is sent from the external OLTP RDBMS to the BigQuery table containing the data of \"Member ID\" 123456 with a \"Member Status\" of \"Active\". Three months later, the \"Member Status\" of \"Member ID\" 123456 changes to \"Inactive\" within the external OLTP RDBMS.From my understanding, now I cannot change that data easily within the BigQuery table if it has \"Nested & Repeating Schema\" . If my BigQuery table had \"normalized relational schema\", it should be able to update the \"Member Status\" of \"Member ID\" 123456 very easily.This is my rationale on why I think a \"normalized relational schema\" is better than \"Nested & Repeating Schema\" for the majority of real world use cases. Please let me know if you agree, disagree, etc. I would love to hear your thoughts. I am still learning GCP and data engineering. Thank you for reading. :)",
        "score": 5,
        "upvote_ratio": 0.79,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvbr5b/learning_about_gcp_bigquery_table_schema_please/",
        "created_utc": "2025-05-25 20:07:28",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kv3qym",
        "title": "Inside Data Engineering with Daniel Beach",
        "author": "mjfnd",
        "subreddit": "dataengineering",
        "content": "Sharing my latest ‘Inside Data Engineering’ article featuring veteran Daniel Beach, who’s been working in Data Engineering since before it was cool.This would help if you are looking to break into Data Engineering.**What to Expect:*** Inside the Day-to-Day – See what life as a data engineer really looks like on the ground.* Breaking In – Explore the skills, tools, and career paths that can get you started.* Tech Pulse – Keep up with the latest trends, tools, and industry shifts shaping the field.* Real Challenges – Uncover the obstacles engineers tackle beyond the textbook.* Myth-Busting – Set the record straight on common data engineering misunderstandings.* Voices from the Field – Get inspired by stories and insights from experienced pros.**Reach out if you like:*** To be the guest and share your experiences & journey.* To provide feedback and suggestions on how we can improve the quality of questions.* To suggest guests for the future articles.",
        "score": 7,
        "upvote_ratio": 0.89,
        "num_comments": 2,
        "url": "https://www.junaideffendi.com/p/inside-data-engineering-with-daniel",
        "created_utc": "2025-05-25 14:22:47",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktxryz",
        "title": "Starting from scratch with automation",
        "author": "bmiller201",
        "subreddit": "dataengineering",
        "content": "Hello, I am not really a dataengineer but after looking at what I'm going to be working on I may be one soon. Ok to start with the project, I work for a clinical research company and we currently are pulling reports manually and working with them in excel (occasionally making visualizaitons). We pull from two sources, one we own but can't access (we could probably ask but we want a proof of concept first) but the other source we can use their API to access our data on their system. I am looking for open-source (free) programs I can use to take the information given in the API break it into a full database (dataset tables) and keep in constantly updated in a gateway. In this phase of the project I am more invested in being able to do an API call and automatically pulling the data to set it into the appropriate schema. I have a really good understanding of dataset creation put I am new to the scripting an API side. I don't really know what else to add but if you have any follow up questions please comment. I appreciate any help or advice you can give me. (I will be using our lord and savior youtube to learn as much as I can about whatever you suggest).",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktxryz/starting_from_scratch_with_automation/",
        "created_utc": "2025-05-23 23:32:35",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktn8tv",
        "title": "Should I switch teams? Manager limiting my growth opportunities",
        "author": "eatdrinksleepp",
        "subreddit": "dataengineering",
        "content": "Background: I’m on a support data engineering team and have recently been working on a full stack project that helped me learn new tools and skills that I was really interested in. I really enjoyed the work and felt like I was growing in the right direction. I also expressed my interest in this work with my manager and he said he would forward any similar projects to me as they come. The issue: However, now my manager seems to have changed his mind and told me that any future full stack opportunities will go to other team members instead of me because “I’ve had enough.” His reasoning is that projects should rotate through the team members one by one before coming back to me. While I understand wanting to give everyone opportunities, this feels like it’s limiting my ability to build expertise and grow in areas where I’m performing well.I’m also sensing some tension from teammates who seem to think I’m being “greedy” for wanting to continue with this type of work, even though I’m just trying to advance my career like anyone else would.My question: I’m considering talking to the director of data engineering about potentially switching to a different team that focuses more on core data engineering work rather than support. Is this a reasonable move, or should I try to work things out with my current manager first?Additional context:- I’ve been doing well in the full stack/data engineering work and it aligns with my career goals- This seems to be part of a broader pattern where I feel like growth opportunities are being limited- The team culture feels like it discourages ambition or self-advocacyHas anyone been in a similar situation? How did you handle it?TL;DR: Manager is rotating opportunities away from me after I had success with a project. Considering switching teams. Good idea or should I try to resolve this first?",
        "score": 4,
        "upvote_ratio": 0.71,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktn8tv/should_i_switch_teams_manager_limiting_my_growth/",
        "created_utc": "2025-05-23 16:01:41",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kyhpq9",
        "title": "Public repositories to learn integration testing",
        "author": "YameteGPT",
        "subreddit": "dataengineering",
        "content": "Unit tests and integration tests in my team’s codebase are practically non existent, and so I’ve been working on trying to fix it. But I find myself stuck on how to set up the tests, and what to even test for in the first place. Are there any open source repositories where I can take a look and learn how to set up tests for data pipelines ? Our data stack is built around Dagster, Postgres, BigQuery, Polars and duckdbEDIT: I’d also appreciate it if anyone has any suggestions on tools, methodology, or tips from their own experiences.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kyhpq9/public_repositories_to_learn_integration_testing/",
        "created_utc": "2025-05-29 18:07:01",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxajwe",
        "title": "Iceberg and Hudi",
        "author": "TheYesVee",
        "subreddit": "dataengineering",
        "content": "I am trying to see which one is better iceberg or hudi in AWS environment. Any suggestions for handling peta byte scale data ?",
        "score": 4,
        "upvote_ratio": 0.76,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxajwe/iceberg_and_hudi/",
        "created_utc": "2025-05-28 06:57:30",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwvf6i",
        "title": "Feedback Wanted: What Topics Around Apache NiFi Flow Deployment(Management) Would Interest You Most?",
        "author": "suviapps",
        "subreddit": "dataengineering",
        "content": "I’m part of a small team that’s built an on-premise tool for Apache NiFi — aimed at making flow deployment and environment promotion way faster and error-free, especially for teams that deal with strict data control requirements (think banking, healthcare, gov, etc.).We’re prepping some educational content (blogs, webinars, posts), and I’d love to ask:What kinds of NiFi-related topics would actually interest you?More technical (e.g., automating version control, CI/CD for NiFi, handling large-scale deployments)?Or more strategic (e.g., cost-saving strategies, managing flows across regulated environments)?Also:- Which industries do you think care most about on-prem NiFi?- Who usually owns these problems in your world — data engineers, platform teams, DevOps?- Where do you usually go for info like this — Reddit, Slack communities, LinkedIn groups, or something else?Not selling anything — just trying to build content that’s actually useful, not fluff.Would seriously appreciate any insights or even pet peeves you’re willing to share. Thanks in advance!",
        "score": 3,
        "upvote_ratio": 0.64,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kwvf6i/feedback_wanted_what_topics_around_apache_nifi/",
        "created_utc": "2025-05-27 18:51:52",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvybjn",
        "title": "Anyone using Snowflake + Grafana to track Airflow job/task status?",
        "author": "NefariousnessSea5101",
        "subreddit": "dataengineering",
        "content": "Curious if any data teams are using **Snowflake as a tracking layer for Airflow DAG/task statuses**, and then visualizing that in **Grafana**?We’re exploring a setup where:* Airflow task-level or DAG-level statuses (success/failure/timing) are written to a **Snowflake table** using custom callbacks or logging tasks* Grafana dashboards are built directly over Snowflake to monitor job health, trends, and SLAsHas anyone done something similar?* How’s the performance and cost of Snowflake for frequent inserts?* Any tips for schema design or batching strategies?* Would love to hear what worked, what didn’t, and whether you moved away from this approach.Thanks in advance!",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvybjn/anyone_using_snowflake_grafana_to_track_airflow/",
        "created_utc": "2025-05-26 16:13:08",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kvxm6c",
        "title": "automate Alteryx runs without scheduler",
        "author": "Legacicycling",
        "subreddit": "dataengineering",
        "content": "Is anyone using Alteryx and able to make scheduled runs without the scheduler they are discontinuing? They have moved to a server option but at $80k that is cost prohibitive for our company in order to just schedule automated runs.",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kvxm6c/automate_alteryx_runs_without_scheduler/",
        "created_utc": "2025-05-26 15:44:51",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kv6s6m",
        "title": "Databricks Academy Labs - Is it worth it?",
        "author": "AcanthisittaBroad765",
        "subreddit": "dataengineering",
        "content": "Hello Data Engineers, I am interested in getting your review of the Databricks Academy Labs? Please if you work for or affiliated to Databricks you aren't invited to provide feedback/review.",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kv6s6m/databricks_academy_labs_is_it_worth_it/",
        "created_utc": "2025-05-25 16:34:39",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktzcgu",
        "title": "Airflow +dbt w/docker container",
        "author": "pstrysloth",
        "subreddit": "dataengineering",
        "content": "Company has the setup in the title. Why would our data engineering team use amundsen for documentation and another program that’s tied to a Google sheet (the name which escapes me) and not just use dbt documentation and tests? Especially with the dbt power user VS Code extension? Am I missing something? I asked around and folks can only say “it is what it is.” It’s frustrating too at times when I can’t even run dbt commands because docker doesn’t like to play nice with my mandated vpn. What’s the purpose of not using dbt to its fullest extent? Edit: I meant dbt Power User for VS Code. Not dbt hero.",
        "score": 3,
        "upvote_ratio": 0.67,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktzcgu/airflow_dbt_wdocker_container/",
        "created_utc": "2025-05-24 00:53:03",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ktqbov",
        "title": "Sharing cache between spark executors, possible?",
        "author": "AartaXerxes",
        "subreddit": "dataengineering",
        "content": "Hi, I'm trying to make parallel API calls using pyspark RDD. I have list of tuples like : (TableName, URL, Offset) . I'm making RDD out of it. So the structure looks like something like this : |TableName|URL|Offset||:-|:-|:-||Invoices|[https://api.example.com/invoices](https://api.example.com/invoices)|0||Invoices|[https://api.example.com/invoices](https://api.example.com/invoices)|100||Invoices|[https://api.example.com/invoices](https://api.example.com/invoices)|200||PurchaseOrders|[https://api.example.com/purchaseOrders](https://api.example.com/purchaseOrders)|0||PurchaseOrders|[https://api.example.com/purchaseOrders](https://api.example.com/purchaseOrders)|150||PurchaseOrders|[https://api.example.com/purchaseOrders](https://api.example.com/purchaseOrders)|300| For each RDD, a function is called to extract data from API and returns a dictionary of data.Later on I want to filter RDD based on table name and create separate dataframes out of it. Each table has a different schema, so I'm avoiding creating a data frame that could include extra irrelevant schemas for my tables rdd = spark.sparkContext.parallelize(offset_tuple_list) fetch_rdd = rdd.flatMap(lambda tuple:get_data(tuple,extraction_date,token)).cache() ## filter RDD per table invoices_rdd = fetch_rdd.filter(lambda row: row[\"table\"] == \"Invoices\") purchaseOrders_rdd = fetch_rdd.filter(lambda row: row[\"table\"] == \"PurchaseOrders\") ## convert it to json for automatic schema inference by read.json invoices_json_rdd = invoices_rdd.map(lambda row: json.dumps(row)) purchaseOrders_json_rdd = purchaseOrders_rdd.map(lambda row: json.dumps(row)) invoices_df = spark.read.json(invoices_json_rdd) purchaseOrders_df = spark.read.json(purchaseOrders_json_rdd)I'm using cache() to avoid multiple API calls and do it only once. My problem is that caching won't work for me if **invoices\\_df and purchaseOrders\\_df** are running by different executors. If they are run on the same executor then one takes 3 min and the other a few seconds, since it uses the cache(). If not both take 3 min + 3 min = 6min calling API twice. This behaviour is random, sometimes it runs on separate executors and I can see locality becomes RACK\\_LOCAL instead of PROCESS\\_LOCAL Any idea how I can make all executors use the same cached RDD?",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ktqbov/sharing_cache_between_spark_executors_possible/",
        "created_utc": "2025-05-23 18:06:20",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kyoxtk",
        "title": "General data movement question",
        "author": "OwnFun4911",
        "subreddit": "dataengineering",
        "content": "Hi, I am an analyst and trying to get a better understanding of data engineering designs. Our company has some pipelines that take data from Salesforce tables and loads it in to Snowflake. Very simple example, Table A from salesforce into Table A snowflake. I would think that it would be very simple just to run an overnight job of truncating table A in snowflake -> load data from table A salesforce and then we would have an accurate copy in snowflake (obviously minus any changes made in salesforce after the overnight job). Ive recently discovered that the team managing this process takes only \"changes\" in salesforce (I think this is called change data capture..?), using the salesforce record's last modified date to determine whether we need to load/update data in salesforce. I have discovered some pretty glaring data quality issues in snowflakes copy.. and it makes me ask the question... why cant we just run a job like i've described in the paragraph above? Is it to mitigate the amount of data movement? We really don't have that much data even.",
        "score": 3,
        "upvote_ratio": 1.0,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kyoxtk/general_data_movement_question/",
        "created_utc": "2025-05-29 23:04:04",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kylamm",
        "title": "SQL vs PySpark for Oracle on prem to AWS",
        "author": "Immediate_Cap7319",
        "subreddit": "dataengineering",
        "content": "Hi all,I wanted to ask if you have any rules for when you'd use SQL first and when you build tooling and fuller suites in PySpark.My company intend to copy some data from a very small (relatively) Oracle database to AWS. This won't be the entire DB copied, it will be just some of the data we want to use for analytical purposes (non-live, non-streaming, just weekly or monthly reporting). Therefore, it does not have to be migrated using RDS or into Redshift. The architects planned to dump some of the data into S3 buckets and then our DE team will take it from there. We have some SQL code written by a previous DE to query the on-prem DB and create views and new tables. My question is: I would prefer no-SQL if I could choose. My instinct would be to write the new code within AWS in PySpark and make it more structured, implement unit testing etc., and move away from SQL. Some team members, however, say the easiest thing is to use the SQL code we have to create the views which the analytics team are used to faster within AWS and why reinvent the wheel. But I feel like this new service is a good opportunity to improve the codebase and move away from SQL which I see as limiting.What would be your approach to this situation? Do you have a general rule for when SQL would be preferable and when you'd use PySpark?Thanks in advance for your advice and input!",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kylamm/sql_vs_pyspark_for_oracle_on_prem_to_aws/",
        "created_utc": "2025-05-29 20:28:45",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1ky3j50",
        "title": "Data connectors and BI for small team",
        "author": "qascevgd",
        "subreddit": "dataengineering",
        "content": "I am the solo tech at a small company and am currently trying to solve the problem of providing analytics and dashboarding so that people can stop manually pulling data out and entering it into spreadsheets.The platforms are all pretty standard SaaS, Stripe, Xero, Mailchimp, GA4, LinkedIn/Facebook/Google ads and a PostgreSQL DB, etc.I have been looking at Fivetran, Airbyte and Stitch, which all have connectors for most of my sources. Then using BigQuery as the data warehouse connected to Looker Studio for the BI.I am technically capable of writing and orchestrating connectors myself, but don't really have the time for it. So very interested something that can cover 90% of connectors out of the box and I can write custom connectors for the rest if needed.Just looking for any general advice. Should I steer clear of any of the above platforms and are there any others I should take a look at?",
        "score": 3,
        "upvote_ratio": 1.0,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/dataengineering/comments/1ky3j50/data_connectors_and_bi_for_small_team/",
        "created_utc": "2025-05-29 06:12:17",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kxo89k",
        "title": "Sql notebooks?",
        "author": "orru75",
        "subreddit": "dataengineering",
        "content": "Does anyone know if this exists in the open source space?- Jupyter or Jupyter like notebooks- Can run sql directly- Supports autocomplete of database schema- Language server for Postgres sql / syntax highlighting / linting etc.In other words: is there an alternative to jetbrains dataspell?Edit:Thanks for the suggestions! I tried out all of them but they all had something missing. Hex looks really slick but as far as I can tell it’s a service and not something you can just spin up locally. Duckdb ui was close to perfect. The issue there is that it only supports one schema when attaching to postgres. I could not get schema autocomplete to work with Jupyter and the various extensions.",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/dataengineering/comments/1kxo89k/sql_notebooks/",
        "created_utc": "2025-05-28 18:14:20",
        "extracted_at": "2025-05-30 01:39:36"
    },
    {
        "id": "1kwc5vo",
        "title": "“Vibe coding” is just AI startup marketing",
        "author": "Eastern_Ticket2157",
        "subreddit": "learnprogramming",
        "content": "I work at an AI agent startup and know several folks behind these “vibe coding” platforms. The truth? Most of it is just hype - slick marketing to attract investors and charge users $200/month.The “I vibe coded my dream app in 12 hours” posts? Mostly bots or exaggerated founder content. Reddit is flooded with it now. Just be cautious - don’t confuse marketing with actual PMF.",
        "score": 835,
        "upvote_ratio": 0.95,
        "num_comments": 73,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwc5vo/vibe_coding_is_just_ai_startup_marketing/",
        "created_utc": "2025-05-27 02:21:08",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kujmka",
        "title": "New to programming? Don't fall for the myth of the genius programmer.",
        "author": "Loremporium",
        "subreddit": "learnprogramming",
        "content": "This was a video from Google I/O way back in 2009 that I still think about it to this day. It discusses the way we hide our work, our questions, and our projects until one day we just showcase something amazing that built, first try, no errors, ya know because we're geniuses.[https://www.youtube.com/watch?v=0SARbwvhupQ](https://www.youtube.com/watch?v=0SARbwvhupQ) The talk was hosted by Brian Fitzpatrick and Ben Collins-Sussman, in which they give this introductory description of the talk:\"A pervasive elitism hovers in the background of collaborative software development: everyone secretly wants to be seen as a genius. In this talk, we discuss how to avoid this trap and gracefully exchange personal ego for personal growth and super-charged collaboration. We'll also examine how software tools affect social behaviors, and how to successfully manage the growth of new ideas.\"One part that resonated with me greatly was regarding the human developer. \"I will toil in this cave and no one will know this code exists until it is perfect, at which point I will emerge and be recognized for the genius I am.\" On reddit, have you ever done some quick research before clicking that \"post\" button, out of concern you may be wrong or fearful of backlash? Same concept.The consequence of this (among others) is that neither your team nor the newer generation of programmers will get to see all of the failure you had to endure, to achieve that one cool thing, because of the way we want to be viewed. Enduring those failures and overcoming them, I believe, is more important then, and required by, any programming language, framework, tool, etc.Newcomers have all the resources, AI, and work previous generations have accomplished to look up to but we are doing those people a disservice by hiding our failures due to human emotion wether thats how we want to be viewed or general fear of negative feedback from our work.Hopefully this doesn't offend anyone or become divisive, it's just some unspoken honesty that I have appreciation for and it stuck with me because honestly... it hit close to home when I saw it back then.",
        "score": 734,
        "upvote_ratio": 0.96,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kujmka/new_to_programming_dont_fall_for_the_myth_of_the/",
        "created_utc": "2025-05-24 19:23:24",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwbj94",
        "title": "Leetcode is not for the majority of software developers. Do not make it your core focus.",
        "author": "-LinusMechTips-",
        "subreddit": "learnprogramming",
        "content": "A little advice to developers who are starting out from a software architect with 15 years experience and a 2:1 Computer Science degree. Today was the first time I've ever seen Leetcode whilst I was watching a few YouTube videos about some updates to C# (My language of choice). For me, Leetcode is definitely not reflective at all of what you would do in the majority of programming jobs and is very algorithmically heavy. Most of these algorithms you will not need to know at all most of the time as most languages contain core libraries that do this stuff way more efficiently than most developers will be able to do. Case in point, I was stuck on the first question today for about 45 minutes mainly because the question was worded really badly. I managed to solve that pretty quickly after I understood what it was asking for although I will admit I did it in my IDE rather than in Leetcode as nobody codes in the equivalent of Notepad anymore (although that's how I started back in the day). The second question I was completely stumped and gave up because it was more maths than programming (and believe it or not, you do not need to be good at maths to be a good developer). It's really going to depend on what you end up doing as an actual job. If you are writing drivers or doing anything mathematically heavy in your job then yes Leetcode might be a good fit but mostly it's algorithmic nonsense that most developers will never even use. I've worked for some of the biggest banks, insurance providers doing APIs hooking up to some pretty complex business logic and never have I had to use anything close to Leetcode level solutions. My point is, don't be disappointed in yourself if you struggle with Leetcode. You can still be a success. Lead teams. Produce mobile applications and desktop systems that millions of users use and enjoy each year all without ever needing to worry about the types or problems shown on Leetcode.",
        "score": 271,
        "upvote_ratio": 0.91,
        "num_comments": 83,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwbj94/leetcode_is_not_for_the_majority_of_software/",
        "created_utc": "2025-05-27 01:49:04",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kumb2q",
        "title": "Do programmers actually know how to touch type every symbol like []()",
        "author": "Aqueous_Ammonia_5815",
        "subreddit": "learnprogramming",
        "content": "I'm learning cpp and i don't know how to type. I get by fine since writing code isn't streaming of thought like worrying a novel. My question is about every symbol used in programming-a lot of which require the shift key - do you just type it without looking? Might be a stupid question but I really don't know",
        "score": 172,
        "upvote_ratio": 0.84,
        "num_comments": 205,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kumb2q/do_programmers_actually_know_how_to_touch_type/",
        "created_utc": "2025-05-24 21:27:28",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ku6bu3",
        "title": "Are Tech Books still relevant to read those days?",
        "author": "Outside_Condition395",
        "subreddit": "learnprogramming",
        "content": "I read some books like ​: - Clean Code [Uncle Bob] - Clean Coder [Uncle Bob] - Refactoring existing code [Martin Fowler]- Pragmatic Thinking and Learning [David Thomas] - Pragmatic Programmer [Andrew Hunt, David Thomas] - TDD [Kent Beck] - Mythical Man Month [Fred Brooks] *Currently*- Design Patterns But, there are some sort of things and principles still confuse Me and I thought it misleading in some way... eg: - The concept of __SMART objectives__ I havn't really touch the real pinfit from it untill now.any advice will help?Thans for raching to the end of post :>",
        "score": 155,
        "upvote_ratio": 0.95,
        "num_comments": 61,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku6bu3/are_tech_books_still_relevant_to_read_those_days/",
        "created_utc": "2025-05-24 07:57:04",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwiwn3",
        "title": "With the way the CS job market looks today, if you had 4 years to start over, what would you genuinely focus on in programming to stay employable?",
        "author": "Slow-Accountant9717",
        "subreddit": "learnprogramming",
        "content": "If you could go back and spend 4 years building skills from scratch—knowing what the tech industry and hiring scene look like now—what would you prioritize?I’m really curious about what’s actually working for people who managed to dodge the layoffs and all -skills projects internships certifications whatever gave you real results.",
        "score": 151,
        "upvote_ratio": 0.95,
        "num_comments": 54,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwiwn3/with_the_way_the_cs_job_market_looks_today_if_you/",
        "created_utc": "2025-05-27 09:25:42",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwv5ce",
        "title": "What should my 12yo son learn nowadays?",
        "author": "Sorry_Mouse_1814",
        "subreddit": "learnprogramming",
        "content": "I learnt to program 30+ years ago; BASIC, C, ARM assembly and then C++ and Python etc. I occasionally use Python at work.My son has been learning to program games in C with a tutor on a Raspberry Pi. This works quite well.I’m conscious that there are newer languages which might be easier, and also Vibe coding. What do people recommend?Personally I can’t see the point in Vibe coding unless you know the language already. It won’t teach you much except perhaps mundane things like API interfaces etc.I could leave him learning C, which is sort-of fine. I wonder if he’d develop things more quickly in another language and that would increase his engagement.By the same token I think it’s pointless to teach him ARM assembly. It would be an awful lot of effort for limited output - learning lots of instructions and different register sets just so he could e.g. multiply two numbers together. Whereas I tended to use ARM assembly because I needed speed 30 years ago.What do people think? Thoughts welcome.",
        "score": 140,
        "upvote_ratio": 0.89,
        "num_comments": 98,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwv5ce/what_should_my_12yo_son_learn_nowadays/",
        "created_utc": "2025-05-27 18:41:10",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvkyk8",
        "title": "Is becoming a programmer a safe option?",
        "author": "BlacksmithNo5665",
        "subreddit": "learnprogramming",
        "content": "I am in high school and want to study computer science in college and go on to become a software developer. Growing up, that always seemed like a safe path, but now with the rise of AI I'm not sure anymore. It seems to me that down the road the programming field will have been significantly reduced by AI and I would be fighting to have a job. Is it safe to go into the field with this issue?",
        "score": 135,
        "upvote_ratio": 0.8,
        "num_comments": 196,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvkyk8/is_becoming_a_programmer_a_safe_option/",
        "created_utc": "2025-05-26 03:53:25",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktmnr1",
        "title": "Which parts of programming are the \"rest of the f*** owl\"?",
        "author": "gallez",
        "subreddit": "learnprogramming",
        "content": "Some programming languages are very beginner-friendly, like Python. It doesn't take a lot of learning to make your first basic scripts. There are user-friendly IDEs and frameworks to help you build nicer apps. But then, when you try to make more complex things, you run into a very steep learning curve.Which parts of programming do you consider to be the equivalent of \"the rest of the f***ing owl\"?",
        "score": 118,
        "upvote_ratio": 0.93,
        "num_comments": 109,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktmnr1/which_parts_of_programming_are_the_rest_of_the_f/",
        "created_utc": "2025-05-23 15:38:07",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwh71h",
        "title": "Is it really impossible to find your first job as a 32 year old and with no experience?",
        "author": "Ok_Property3321",
        "subreddit": "learnprogramming",
        "content": "Greetings. I want to get to the point right away in order not to be long.I am a 32-year-old teacher. I understand the logic of programming (I wrote a few small gui programs). I also know a little database. I am not very far from software. I have a lot of free time during the day and I want to make use of this time by learning programming. I studied Andrew ng's introduction to machine learning course for 1 month. it was going well, but then when some people said that it was very difficult for me to find my first job in a software company after this age without work experience, my motivation broke down and I stopped studying.How difficult is it to find your first job (and a remote job if possible)? What would you do if you were in my shoes? How realistic is the goal of continuing with mobile programming and making applications and earning passive income from them after making a certain distance in machine learning?Thank you for your answers.",
        "score": 111,
        "upvote_ratio": 0.9,
        "num_comments": 54,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwh71h/is_it_really_impossible_to_find_your_first_job_as/",
        "created_utc": "2025-05-27 07:24:28",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kv6owi",
        "title": "Older guy wanting to learn to develop apps",
        "author": "ekaj862000",
        "subreddit": "learnprogramming",
        "content": "40 year old with experience with computers wanting to learn to create apps. Have little to no knowledge and experience in coding. I just want to learn how to do it for fun and maybe make an actual app either web or IOS app. Where do I even begin to learn this?Do I need to get a bachelors degree to learn how to do it?Is there a free or paid place to learn as well?Not looking to make tons of money or become famous just want to learn for fun.Thanks in advance!",
        "score": 99,
        "upvote_ratio": 0.91,
        "num_comments": 52,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv6owi/older_guy_wanting_to_learn_to_develop_apps/",
        "created_utc": "2025-05-25 16:30:41",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktqklt",
        "title": "Still don’t fully understand how CORS actually works.",
        "author": "Prize_Signature_6444",
        "subreddit": "learnprogramming",
        "content": "I feel its implemented in a weird way.things I am clear on(I think I am clear) : \\- If bowsers do strict SOP, it leads to some limitations where genuine cross site requests wouldn't work. So CORS came in to loosen this up a bit, where the backend when returning a response, adds few headers saying who all can access it. But the backend takes the cross site request, runs the request, and sends a proper response like how it would do for a genuine request. so now I don't understand what if [bank.com](http://bank.com) has some endpoint like /sendmoney, that returns success or failure. and [evil.com](http://evil.com) makes cross site request to that endpoint. Will the backend still execute the /sendmoney? what I understand is, backend does the work and returns response, then browser blocks [evil.com](http://evil.com) from seeing the response(which doesnt matter in this case).so if this is how it works, CORS is to stop [evil.com](http://evil.com) from only viewing resources/responses of [bank.com](http://bank.com) it wont stop from making it hit some endpoints?I have read about CSRF tokens. I feel CSRF token is the real thing, CORS isnt.",
        "score": 94,
        "upvote_ratio": 0.97,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktqklt/still_dont_fully_understand_how_cors_actually/",
        "created_utc": "2025-05-23 18:16:42",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ky8gni",
        "title": "I have a Computer Science degree but absent from industry, want to get back in. Suggestions?",
        "author": "GoatGentleman",
        "subreddit": "learnprogramming",
        "content": "Hey guys, Im a guy in my late 20's that got a Computer Science degree when I was in my early 20's. I graduated around 4 years ago, and due to a combination of bad health circumstances and other such things, I was never really able to get into the industry and got by with other jobs. Im motivated to get into the industry now, but wondering how to get up to date fast, and how to differentiate myself from the new graduates popping up now with my rather empty resume. Does anyone have any suggestions on how to move forward, any courses that ramp up extremely quickly for someone who kind or more-so needs a reminder. I'm mostly looking for Python and backend advice.Thanks!",
        "score": 90,
        "upvote_ratio": 0.98,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ky8gni/i_have_a_computer_science_degree_but_absent_from/",
        "created_utc": "2025-05-29 11:32:22",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxncr5",
        "title": "How to learn Full stack in the easiest way?",
        "author": "sakashi_nakamoto333",
        "subreddit": "learnprogramming",
        "content": "Hello everyone, Im a beginner to the full stack development. Im actually planning to learn HTML, CSS, JAVASCRIPT, ANGULAR, REACT AND NODE.JS in 6 months of time. Is it possible and if yes, how can I practice it?",
        "score": 77,
        "upvote_ratio": 0.88,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxncr5/how_to_learn_full_stack_in_the_easiest_way/",
        "created_utc": "2025-05-28 17:40:07",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx4ruy",
        "title": "I feel stupid",
        "author": "Abigail3405",
        "subreddit": "learnprogramming",
        "content": "I am a second year computer science major and I feel lost and I’m stressing out because I feel like I not retaining what I’m learning. When it comes to solving problems I get overwhelmed because I don’t now what I’m doing, even though I know the syntax. I can’t put the pieces together and then I procrastinate afterwards. I jump from courses to tutorials and I’m constantly in a loop. I can’t even solve basic python and Java problems it takes me forever. I love computers and technology but I don’t know why it’s taking me so long. I’ve been thinking about switching careers but something in my heart is telling not to. Any advice or wisdom on how I should progress is very much appreciated. Edit: Thank you so much to everyone for the knowledge and support. You made me realize that I am not alone. I need to apply myself more, build projects and not shy away from difficult problems. I really appreciate all of you, even the AI-generated answers. :slightly_smiling_face:",
        "score": 75,
        "upvote_ratio": 0.95,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx4ruy/i_feel_stupid/",
        "created_utc": "2025-05-28 01:33:35",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxsrjo",
        "title": "If I gitignore my .env file, how can my website function if the database is essential?",
        "author": "Respect-Grouchy",
        "subreddit": "learnprogramming",
        "content": "Hello! I am currently making an online game that connects to a Postgres database. I am aware that gitignoring your .env file is best practice. However, if I gitignore this file and deploy it, my database connection will be severed to other users on the site, making the app useless to others. How can I set my app up such that it connects to a database for other online users but does not leak any .env variables?",
        "score": 70,
        "upvote_ratio": 0.87,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxsrjo/if_i_gitignore_my_env_file_how_can_my_website/",
        "created_utc": "2025-05-28 21:13:42",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx85rl",
        "title": "What do you wish you had done differently in college to better prepare for a career in programming?",
        "author": "chase_andersen",
        "subreddit": "learnprogramming",
        "content": "Hi everyone,I’m currently a college student studying Computer Science and trying to figure out the best way to use my time to set myself up for a future career in software development.For those of you already working in tech or even just further along in your journey I'm really curious:* What do you *wish you had done more of* during college to prepare for your career?* Were there certain **projects, internships, clubs, or habits** that made a big impact?* Is there anything you *regret not doing* or realizing too late?I’d love to learn from your experiences anything you can share would be super helpful. Thanks in advance!",
        "score": 65,
        "upvote_ratio": 0.93,
        "num_comments": 33,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx85rl/what_do_you_wish_you_had_done_differently_in/",
        "created_utc": "2025-05-28 04:29:32",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ku13ww",
        "title": "Career change at 36",
        "author": "No-Photograph-5204",
        "subreddit": "learnprogramming",
        "content": "I am 36 and currently work as a project manager at a translation company, and I also work as a freelance interpreter. However, I'm considering a career change because AI is starting to replace many jobs in my field.I'm an immigrant and now a U.S. citizen. I've recently started a bachelor's degree in Computer Science at the University of the People. I'm learning Python and Java, but I'm still at a very beginner level.Do I have a real chance of making a successful transition into tech? What are the fastest and most effective steps I can take to break into the tech industry, especially since I have no prior experience?",
        "score": 67,
        "upvote_ratio": 0.82,
        "num_comments": 68,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku13ww/career_change_at_36/",
        "created_utc": "2025-05-24 02:28:24",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvwaqd",
        "title": "freeCodeCamp or TheOdinProject?",
        "author": "Plus-Strength-3053",
        "subreddit": "learnprogramming",
        "content": "I am a complete beginner, literally no knowledge or background about programming. I did some research on free courses on the internet and these two - freeCodeCamp and TheOdinProject - are the ones where I don't feel so lost lolFor some background, I want to focus as a web developer (fullstack)So, which course should I take? The freeCodeCamp (the Certified Full Stack Developer Curriculum) or the full curriculum of TheOdinProject?",
        "score": 44,
        "upvote_ratio": 0.99,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvwaqd/freecodecamp_or_theodinproject/",
        "created_utc": "2025-05-26 14:51:08",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyogfk",
        "title": "All joking aside I'm considering teaching coding instead of getting a coding job after my course is over. My instructor's go to response is: \"Google it,\" and, \"Sorry, I have so many students so I can't help each one of you.\" Otherwise he just gives lectures and that's it. Seems made in the shade.",
        "author": "261c9h38f",
        "subreddit": "learnprogramming",
        "content": "The instructor took the same course as me, too, and as far as I understand it that's the only requirement to teach the course for this particular one. My friend took it, too, and now receives regular requests from them to come back and teach, and others who finished it say the same.So, I could get a job where I work for someone who expects me to show results and solve problems, write code, and so on, OR I could get a job where I only have to explain coding, using pre written curriculum and things I've already written and understand, and when questioned I can deflect students to google or just tell them I don't have time. This is ultimately better for the students so they learn to research which they will have to do in an actual job.Assuming I'm okay with lower pay, why on earth would I not do this? Very low stress, and very little demand put on me. Students are expected to self teach, and struggling through google rather than me teaching them, beyond lecture, is an important part of their learning process.Again, this is not a joke. I realize it sounds sarcastic lol! But I'm sincerely considering this but assume I'm missing something, so I want feedback :)",
        "score": 41,
        "upvote_ratio": 0.77,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyogfk/all_joking_aside_im_considering_teaching_coding/",
        "created_utc": "2025-05-29 22:41:55",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kuqlpe",
        "title": "Professional Coders, SWE’s..what was your ah-hah moment or the moment when you felt you were really successful in your work?",
        "author": "EmilieDeClermont",
        "subreddit": "learnprogramming",
        "content": "I know we see a lot of posts in here with the do’s, don’t’s, and how to’s.. I just wanted to see some people who eat sleep and breathe this and LOVE it. Or, others who’ve found moments that really shine.",
        "score": 37,
        "upvote_ratio": 0.95,
        "num_comments": 23,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuqlpe/professional_coders_sweswhat_was_your_ahhah/",
        "created_utc": "2025-05-25 01:06:18",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktl0vq",
        "title": "But…Where do you write the code? (Moving away from VBA)",
        "author": "BallJar91",
        "subreddit": "learnprogramming",
        "content": "I feel incredibly stupid asking this question, but I don’t understand where you write code? I am not a programmer by any stretch of the imagination, but I’m working on a project for my job and the best solution I keep ending up at is to just try to learn programming so I can create a system from scratch instead of manipulating tools that can never quite do what I need. Right now, I’m working in Excel, and I’ve had some decent success writing basic code for vba, but Excel has limits, and it’s really not where I want to end up. VBA (as I understand it) is only compatible with Excel, so if I wanted to create my own desktop or web based program I’d need to put my code…. Somewhere else…. Again, I feel absolutely stupid asking, so please feel free to poke fun in a kind way, but know that if I could’ve asked in a way concisely enough to just google it I would have taken that route months ago. Do I need an app, to create an app? Or a specific website? Is Java a language and a program? And for someone with rudimentary knowledge of VBA and a past life on MySpace, where would you recommend I start?",
        "score": 35,
        "upvote_ratio": 0.86,
        "num_comments": 49,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktl0vq/butwhere_do_you_write_the_code_moving_away_from/",
        "created_utc": "2025-05-23 14:31:01",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxv02s",
        "title": "Feeling like software dev is oversaturated considering R&D or AI, but unsure how to pivot",
        "author": "DistrictMedical5912",
        "subreddit": "learnprogramming",
        "content": "I genuinely love building software. But lately, I can’t shake the feeling that the field is becoming increasingly saturated. It seems like almost anyone can spin up a website or mobile app these days with minimal effort, and it’s starting to make me question the long-term value of what I’m doing.Because of that, I’ve been thinking about pivoting into something a bit more specialized, like research and development or artificial intelligence. But I’m kind of lost on how to approach that transition, and honestly, I’m not even sure if it’s the right move.Has anyone else felt this way? If you’ve made a similar shift, what helped you decide and how did you start? I’d love to hear your experiences or advice.",
        "score": 37,
        "upvote_ratio": 0.91,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxv02s/feeling_like_software_dev_is_oversaturated/",
        "created_utc": "2025-05-28 22:48:11",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kumill",
        "title": "When You're Great at Programming, But You Suck at Programming",
        "author": "Voxmanns",
        "subreddit": "learnprogramming",
        "content": "In my 10 years so far with tech, I have had the absolute pleasure to work alongside some brilliantly talented and well educated programmers. However, I have seen those same developers have their arguments and perspectives fall flat, despite their technical prowess, while less technically gifted minds withhold tremendously valuable ideas for fear of being caught on a technicality or unknown detail.TL;DR - We are taught that cleanliness and efficiency of code is the earmark of a quality solution. While important, we fail to educate programmers on the importance of factors beyond the code and how to navigate the complexity and priorities of a real application. This post is for anyone who is truly curious about what \"good code\" really means, and for those who suspect the answer has more to do with the problems you solve than the language you use to do it.**Introduction**Goodhart's Law - \"When a measure becomes a target, it ceases to be a good measure.\"I think most of us have experienced those often frustrating debates between programmers where one is claiming the other has an inferior approach because \"I could write it faster by doing x.\" or \"I could write it with less complexity by doing y.\"My goal with this post is to primarily open up discussion around this topic and hopefully provide something valuable from my 10 years of doing software development.Before I dig in, I think it's only fair to say where I come from. I have worked the last 10 years in cloud development, working with a lot of different SaaS, PaaS, and IaaS technologies. I have dabbled a LITTLE in hardware and lower level languages - but never really had to do much in terms of deploying code for a new piece of hardware and have, admittedly, been a bit spoiled on not having to deal with things like managing pointers or resolving memory errors at a lower level. However, what I want to talk about should be a fair bit removed from that level of granularity and speaks more to how we as programmers approach a problem. That being said, I have worked as an admin using declarative tools, managed code bases of several million lines, and successfully implemented several medium and large scale system architectures in my time. That is to say, I've seen a lot of shit in the last decade.**Conflating personal skills with solution quality**With the preface out of the way, let me put my assertion straight. I see a lot of programmers conflating their proficiency with coding (speed to write code, initial resilience of code, complexity mitigation, readability, testability, etc.) as a reflection of solution quality. It is a frequent and concerning problem that many programmers are taught or conclude that the quality of how the code is written is above the functionality of the existing application.For clarity, I am not saying that things like readability are irrelevant to the measurement of a solution's quality. Of course, all other things equal, a solution with more readable code is a better solution than the same with less readable code. What I am saying is that the actual influence of these metrics varies depending on the environment and context of the implemented solution.For example, a small scale and local utility (such as a simple script for managing files in a folder) does not gain nearly as much proportional benefit from more readable code as a large scale ETL job managed by multiple people from multiple teams working in multiple frameworks. We could deliberate endlessly on what the \"correct\" weighting of these metrics are for any given project, but the real issue is when these metrics become surrogates for the strategic goal of the application.The reality is that, when it comes down to the application running and doing its job, the only thing that matters is how well it does its job: How efficiently does it succeed when it is provided valid inputs, how effectively does it recover from unexpected inputs/results, and how safely does it fail in the event of an unrecoverable error?Nobody cares that you made it super readable if it doesn't work. Nobody cares that you wrote it faster if it's laden with bugs. No one is happy that you reduced 30 lines to 2 lines if it makes the application a total resource hog. Similarly, nobody cares if it runs 500ms faster UNLESS that 500ms makes a difference in the grand scheme of the tech.Simply put, there is an important and clear distinction between your skills as a programmer, and the quality of the solution you produce. While your technical skills as a programmer are EXTREMELY important, they do not necessarily ensure that the solutions you produce are quality solutions. It's a mistake I have seen a lot of developers make, and it leaves them bewildered because they felt they did everything right. It reminds me of the classic Indiana Jones scene when Jones simply shoots the guy showing off all his fancy moves. It looks cool, super impressive, but totally useless in the wrong context.**Programming and solution quality is impacted by the real world and supporting relationships.**\"I would've never written it this way. They could've easily done x to make this better.\"We've all felt that way at least once. You are SO blessed to finally work on that bit of code that hasn't been touched in 25 years just to find it is such a convoluted mess of outdated checks, redundant assignments, tightly coupled classes, et al. The feat of the developers goes from \"This is really nice and sensible code that I can work with.\" to \"How the hell did the last guy keep this thing running at all?\"This sentiment that you would've done it better by doing it your way is almost always a lie you're telling yourself. Here's why:Programming, as we all hopefully understand by now, is an iterative process. That means to reach your ideal state, you necessarily cannot jump from step 0 to the final step. There are checkpoints you must cross in order to get there. However, these checkpoints are marked by the application's functionality, and the structure/ease of the code is loosely implied by the business/client at best.In other words, the developer will always be pressured to produce functional code over \"clean\" code. I am not referring to the actual principles of Clean Code necessarily, just whatever your idea of the \"right way to write the code\" is.This means that leading into these checkpoints, there are always unanswered questions and missing pieces of context that we wish we would have had in the beginning. I just recently was working on a report generation tool for a friend when, just a week before we needed it to be done, they decided to clarify that certain parts of the report needed to have dynamic labeling and columns when we had already understood them as static elements. As you can imagine, that's a totally different approach than I had originally planned for. With not enough time to totally rewrite the program, I had a choice:1. Quickly refactor the code, accept that it'll be a bit messy, defer proper restructuring, happy client because it works.2. Ask for an extension to the deadline, customer misses their reporting window, blame them for not being clear and not knowing that information at the beginning?I, of course, asked for the extension. They, of course, denied the request. So, I went with option 1. Why? Because the relationship was more valuable to me than the structure of my code. I will absolutely take on a bit of a messier solution on the backend to secure another future project and ensure the client is happy **in this scenario**.That's not to say it's always the right answer. I have refused to deploy changes that were of security or regulatory concern because not going to jail was more important than winning another project. I'm not even saying I am always right in which options I take for these situations. My point, as highlighted by the title of this section, is that the world around the application matters a LOT. Assuming you would have done it better without knowing all of the context for why those decisions were made is not only unfair to the previous developers, but is simply a conclusion driven by ego.Tying this back to our main theme, you are measuring the quality of the solution based on metrics which are not the goal. The goal was a functional app that satisfied the defined requirements within the allotted timeline. That's it.**Programmers have limitations. It's okay to not be a superhuman.**I'm going to pivot the focus a bit and talk more about you - the programmer. I'm not going to say that every programmer is an antisocial basement dweller who would never suffer the presence of another human being or (God-forbid) a team building exercise. We know that already (jk).Seriously, though, there are some INCREDIBLE programmers out there. I've seen people who have mastered a multitude of frameworks, seem to 100x processing times every time they touch something, and can build a decent MVP, if given all the info up front, at a break-neck pace.But, I have also seen programmers who are incredible in a different way. They may be slower on the keyboard, but they do a much better job at diagnosing issues and getting to the root cause of a problem. Some of them are incredible at interpersonal relationship building (very valuable in tech as a programmer, just saying). Some can understand a seemingly limitless amount of complexity and boil things down to a simple direction that everyone understands. I've met and managed a few that seemed to be able to do all of it and more entirely on their own (usually 25+ YoE on those guys/gals).We say this all the time, but I think we forget to take our own advice: Programming is so much more than the code. For every rockstar programmer I have had the pleasure of working with, I could identify several issues working with them. Even the guy who does it all tends to be a victim of their own success and struggles to not dominate the room when collaboration is a must. Everyone has their gaps in knowledge and that's okay. Programming is an absurdly broad, dense, and deep discipline.I say this, because I still see it as a big issue in tech today. I think AI has really inflamed the issue too (I won't be getting into that) because of how many different ways there are to use this, frankly, very powerful tool. Please, for the sake of your sanity and enjoyment of programming, do not measure yourself OR OTHERS on a single dimension. It is my belief that a pillar of a good programmer is the ability to appreciate solutions and strengths which they do not possess nor understand, and the ability to keep the big picture in mind when addressing a potential weakness in themselves, the solution, or another programmer. Remember, comparison is the thief of joy.**What leads to the surrogation of goals in software?**I think it takes a lot of tolerance for uncertainty to work in tech. After all, your job is to essentially invent things that don't exist yet. Sure, there's a million pdf parsers out there, but there isn't one that does EXACTLY what you need the EXACT way you need it. There are 1000s of security camera models out there, but your new camera design (hopefully) taps into something the market is being starved of.But, what the hell do you do when something like blockchain hits it big? What if you're required to use a library you've never even heard of? What if Maggie in accounting can't so much as find the damn Windows start button, yet she's the VP of your project and wants to know every little technical detail just to ridicule things she doesn't understand? Dammit Maggie, it's a REST call! IT'S JUST A....On top of that, we hardly have much consensus on what \"good code\" even is - or the \"right\" way to do it. We had waterfall for some 30 years, then Agile happened, but we still have waterfall and now we have hybrid Waterfall/Agile teams with varying adherence to either paradigm. Sometimes they just make up their own rules and call it Agile because they do stuff on a bi-weekly cadence.Plus, you have Scrum and Kanban muddying the waters. But, you also have standards like TOGAF and ITIL. Let's also not forget how SaaS providers like Jira have their own rules to abide by. Honorable mention to the books and onslaught of professionals saying \"I have figured it out! Buy my shit.\" That's all before you even get to the framework you're going to be working in. It's a freaking mess!The reality is, we just don't know what perfect code is. We can generally approximate when code is written poorly or well, and we can loosely articulate the reasons and speculations around that approximation, but we don't \\*know\\* if it's right except for very specific cases (of which there are still many examples). Nearly everything is up to debate, and it can be really hard to be certain that the code we write is good. Except, it doesn't need to be.**Preventing surrogation of goals.**Ironically, one of the most important lessons I have learned in tech has been from the least technical users I have encountered. I learned that there are two questions that should always be guiding a solution.1. Why does this work?2. Why doesn't this work?If you're underwhelmed, you probably should be. If you're enraged because of questions like -1. What about the code structure and efficiency?2. What about security?3. How does this help me implement design patterns into my work?\\- bear with me.As I mentioned in the beginning of this post, I have seen many programmers prioritize the quality of the code over the functionality of the app. I've seen it in practice as well as in conversations/debates amongst programmers. These questions still matter, but their relevance is predicated on how it answers the question of \"Why does this work,\" and/or \"Why doesn't this work?\"What about structure and efficiency? Is that why it does/doesn't work? If the current code structure does not significantly impact the solutions ability to work or not work, then it's a moot question. It's moot, because it has no meaningful bearings on how well the app does its job (or fails to do its job).For a personal utility script where the focus is on development efficiency and functionality, not raw execution speed, a few seconds' difference in runtime is inconsequential. So the practical value of a faster script is diminished if it sacrifices development efficiency. Ultimately, **the script's success is defined by whether or not it works as intended.** In that regard, a 'slower' script developed in one hour can be a more pragmatic solution than a 'faster' one that took three hours to build.Now, I said a lot about strengths and weaknesses of a programmer. So let's take it a step further and address the speed at which coding is done. I, frankly, am not a super fast coder. I'm not the slowest in the room, but I was never the guy who could just churn code like a factory (pattern).I know, way to show my ass to the crowd. The thing is, I am simply stronger in analysis and communication than I am in writing code. I'm cool with being that guy. I love working with developers who are code factories and don't want to deal with people as much, because that's a complementary counterpart to what I bring to the table. So, while I focus on drafting demos and POCs and diagrams and all of these things about the application, they can focus on the real meat of the application, preventing backdoors, scaling efficiency, obscure mathematical theorems, etc.However, since we are talking about a collaborative environment, it is important to note that this is not a siloed effort. I NEED to write production code because I NEED to understand what goes into it, pitfalls, and tricks. I may be subordinate to the code master next to me, but I cannot circumvent the necessity of actually doing the work. The same goes for the code master. They NEED to create diagrams and explain concepts because they NEED to understand how the customer feels, whether or not their idea can conceptually make sense to another person, and so on. Just like they bail me out if I back myself into a corner, I bail them out if they start fumbling the presentation. It goes both ways, and we both become exceptional for it.**The True Programmer, and respecting your colleagues**I know advocating for respect on an internet forum is a quintessential example of \"screaming into the void,\" but I'd be remiss if I didn't mention it.Just like how I said we don't know a lot of things, we (as a society) don't know what a true programmer is. Something to do with writing code, something to do with building applications. I'm not here to claim that I have the be-all-end-all answer to what a true programmer is. Quite the opposite.The literal definition of a programmer is pretty vague when you look at it from a technical perspective. There's a lot of nuance and layers to writing a computer program that we could spend a long time deliberating over. That is precisely why we must be very careful, or downright avoid, the argument that \"someone who does x\" or \"someone who doesn't know y\" is or is not a \"true programmer.\" Fans of the True-Scotsman fallacy will know exactly what I mean here. It's an argument that leads to nowhere.The reality is technology is a part of everyone's life, and everyone's perspective on it matters. We need non-technical users to break our apps and force us to come up with more resilient and intuitive designs. We need semi-technical users to help translate the real world to technical ideas with new and creative inspirations outside of the conventional walls. We need deeply technical users to navigate the gritty details of building the applications when they're 9 layers removed from the original problem. Most importantly, we need all of them to work together to build anything meaningful.Everyone gets into tech with their own perspective for their own reasons. But what technology is, fundamentally, doesn't change. Whether it's writing a new business integration or starting a SaaS company or building robots or even developing new devices that don't require a plug - the whole idea of technology is rooted in discovery. We take the chaos the world presents us, and learn how to contain it and use it to achieve our goals. Fire became torches, circuits became software, and Maggie became a great lesson for me in what really matters in software.I hope this post serves as a valuable reminder of all the things we still don't know in software and technology as a whole. I hope it reassures newcomers that it's okay to feel like everything is a hot mess - because it is. I also hope it helps to soothe some of the hardened veterans who know things and learned lessons that the vast majority of society could hardly understand, let alone be expected to know. Finally, I hope it helps everyone make better applications by focusing on what really matters. Whether it's an actual project, or just discussing ideas with a stranger, we should always focus on why it does or doesn't work first, and remember that what is most valuable to us as programmers is not always what's most valuable to the applications themselves.**P.S. Counter arguments and the importance of taking different approaches**I am acutely aware that there are many software that are vastly different than the cushy business applications I have come to know. Even banks have a higher tolerance of failure than, say, the technology responsible for safely landing your aircraft. Furthermore, there is a very real snowball effect poorly written code has where tech debt and developer morale go in the wrong directions quickly.This is not me advocating for haphazardly writing code and being complacent with what we do not know. If you've got 30 layers of if statements in your method, I'm inclined to believe that you did something wrong and should have fixed it a long time ago. Getting the job done tomorrow matters as well as getting it done today, usually. You'll never solve for everything, so you always try to solve what matters the most first, and there are times that your application can \"get the job done\" today, but should absolutely not see the light of production until it is completely reworked into a sensible architecture.The answer to \"Why doesn't this work?\" can very likely be \"Because it's so impossible to understand that we won't know why it fails.\" or \"Because this bug introduces a 0.1% chance that the plane slams into the ground upside down and kills everyone on board.\"This is a bit more philosophical, but I am of the mind that you should always have unresolved reasons for why something doesn't work. If you don't, you probably don't know your application very well. This ultimately gets into risk assessment and whether or not the risk/reward is worth it. A tiny risk of a minor issue, like a script running a few seconds slow, may not be worth hours of work. However, a tiny risk of a major disaster, like a plane crash, is unacceptable and must be addressed. Deciding what risks to tackle is a judgment call based on the severity of the potential outcome.Remember, the definition of what does and does not work varies. You need to be aware of it and set your own standards (at least, as much as you're able to) to ensure that the software you produce is to the quality it needs to be. Knowing the implications of not following a best practice, and accurately determining if it's a meaningful risk, is an extremely delicate decision. You need to know the rules and respect the rules before you go off deciding to intentionally break them.",
        "score": 36,
        "upvote_ratio": 0.86,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kumill/when_youre_great_at_programming_but_you_suck_at/",
        "created_utc": "2025-05-24 21:37:16",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ky1e2a",
        "title": "Lets assume that you are a beginner on learning about sql and databases. What would be your beginner or intermediate type of project?",
        "author": "cahit135",
        "subreddit": "learnprogramming",
        "content": "I want to learn about databases like mysql, postgresql and mongodb but couldnt make the process more fun. So i think that i need to develop some projects.",
        "score": 29,
        "upvote_ratio": 0.92,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ky1e2a/lets_assume_that_you_are_a_beginner_on_learning/",
        "created_utc": "2025-05-29 04:01:39",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvn9h3",
        "title": "Experienced Programmers, If you were starting out learning to program and could do it at your own pace, how would you go about it?",
        "author": "NonsenseAndNothings",
        "subreddit": "learnprogramming",
        "content": "Programming resources change so often that knowing what the best current options are is a constantly moving target. I want a good foundation. I'm not young, not old either, I understand some things about programming. I do not know what I don't know. Instead of jumping in too fast and paying for it later, I want to find something (a course or guide without actually being physically present). I can work from that gives me a solid foundation. I definitely need to do it on my own and at my own pace. I will always program in an independent manner.",
        "score": 29,
        "upvote_ratio": 0.89,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvn9h3/experienced_programmers_if_you_were_starting_out/",
        "created_utc": "2025-05-26 06:12:17",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ku4f2u",
        "title": "What exactly does it take to use \"1 GB\" in Programming on Github Pages?",
        "author": "CLIMdj",
        "subreddit": "learnprogramming",
        "content": "Hello everyone,I've lately been trying to find a free website hosting thing,and found Github Pages.\\It has almost no limits,no premium features(except website visibillity,but i dont care about that),can support any language,and more,but there is a problem..\\I looked at the limitations,and it said two things:* Github Pages cannot use more than 1GB total.* Github Pages cannot produce more than 100GB per month.\\(Or something along the lines of this)\\So,i came to ask:\\What exactly does it take to use up 1GB?is it a huge amount?is it like 30 lines of code?like,can anyone give me examples of what takes 1GB?\\I just...am unfamilliar with how much storage do programming languages use,how many files or folders is 1GB.",
        "score": 30,
        "upvote_ratio": 0.87,
        "num_comments": 33,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku4f2u/what_exactly_does_it_take_to_use_1_gb_in/",
        "created_utc": "2025-05-24 05:45:56",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktdeuw",
        "title": "Python or Go for backend?",
        "author": "Nama_One",
        "subreddit": "learnprogramming",
        "content": "Hey!, I'm a freelance MERN developer and I'm currently thinking on learning a new language for backend, the two options in thinking are Python and Go, but I'm not sure which one is best for me.I know that learning python would be good in case I switch to other field in the future, as there are a ton of libraries and documentation. And on the Go side, I think it's built for speed in the backend, which sounds nice when thinking I'm a web developer.What do you think would be the best option to learn?Thanks in advance!",
        "score": 29,
        "upvote_ratio": 0.87,
        "num_comments": 64,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktdeuw/python_or_go_for_backend/",
        "created_utc": "2025-05-23 07:15:22",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ky7n2p",
        "title": "Why is hashmap preferred over direct array lookups in Two Sum?",
        "author": "infinitecosmos1583",
        "subreddit": "learnprogramming",
        "content": "Hi all,I’m trying to understand the Two Sum problem. The common efficient solution uses a hashmap like this:```for each index i in array: current = array[i] complement = target - current if complement in hashmap: return [hashmap[complement], i] else: hashmap[current] = i```But why not do this simpler approach instead?```for each index i in array: current = array[i] complement = target - current if complement in array and index_of(complement) != i: return [i, index_of(complement)]```What makes the hashmap solution better? Are there correctness issues with the second method?Thanks in advance!",
        "score": 28,
        "upvote_ratio": 0.88,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ky7n2p/why_is_hashmap_preferred_over_direct_array/",
        "created_utc": "2025-05-29 10:45:15",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ku26l8",
        "title": "Is learning to code worth it?",
        "author": "FriendshipPresent686",
        "subreddit": "learnprogramming",
        "content": "Hi everyone. My 12 year old brother has expressed interest in becoming a software engineer when he grows up. I myself was not introduced to coding until much later in life which I wish I was, stuff would’ve been easier for me. I was thinking of enrolling him into a scratch course to help him get ‘head start’ into the field. He has done some scratch animation projects in school however I came across a course which teaches scratch more in depth with more projects. He said he would be interested in doing it, however I was relaying the information to some people and they’ve said that programming is dead now because of AI and a lot of people are not able to make use of their skills anymore. They said that it’s not worth it to learn how to code. I’m really conflicted because I would like my brother to learn skills early on that will help him in his later schooling and career and he isn’t struggling to grasp basic concepts in college like I was. I still want to enroll him in scratch course because I know in the end he will learn something and it’s worth it rather than him not doing anything at all. I wanted to know if anyone had any advice on how I can help him learn early on about the IT industry, software engineering, etc. so he already has basic knowledge beforehand. Any courses, classes, activities for middle schoolers? I know about code ninjas but I’m not a fan of those learning center franchises. I have tried them out, They are super expensive and barely learn anything while they are there. TIA!",
        "score": 26,
        "upvote_ratio": 0.77,
        "num_comments": 51,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku26l8/is_learning_to_code_worth_it/",
        "created_utc": "2025-05-24 03:28:39",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx8xa6",
        "title": "becoming a hardware engineer after 20 years of experience as a software engineer",
        "author": "Eastern_Committee_38",
        "subreddit": "learnprogramming",
        "content": "Hi,I am working as a software engineer for the past 20 years and I am 51. I want to switch my field to hardware and work as a hardware engineer. I understand it's difficult to switch a career during the middle age. I have zero knowledge on hardware but how difficult is to become a hardware engineer? What are the steps required to become one ?",
        "score": 25,
        "upvote_ratio": 0.81,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx8xa6/becoming_a_hardware_engineer_after_20_years_of/",
        "created_utc": "2025-05-28 05:13:49",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwg1f8",
        "title": "Self taught in 2025?",
        "author": "Immediate_Mango4584",
        "subreddit": "learnprogramming",
        "content": "I wrote my first lines of code in 2020. During this time I wasn't trying to learn to code but just create things to do things that I wanted to be done. So I really wouldn't consider it experience. 2023 onward I have really taken coding seriously. I try to understand what I'm doing and understand things as if I was a professional. I just graduated HS and I honestly don't want to go to collage. I already know how to code. I feel like if I was on a team and we were building a feature I could do alright after I get used to it.I am currently building a social media app that is just a test of my skills. It's nothing unique just me trying to show I am capable of building something that has all these individual features. I also have some other small ideas that perhaps no one would actually use but could be good projects to show my skills. Everyone seems to say projects are more important than any degree. But what type of projects? How complex? How many projects?Does language matter? Like I've used javascript and ts. I still struggle with the node configs but I know how to write js, I've also made apps in kotlin with compose. I've written in python, i've made with flutter and dart. Like I feel like if I was told I needed to do something in x language I could do it.And lastly where would I even start trying to find a job?",
        "score": 26,
        "upvote_ratio": 0.81,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwg1f8/self_taught_in_2025/",
        "created_utc": "2025-05-27 06:06:08",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kv1udw",
        "title": "What language to learn for getting a job with less competition",
        "author": "Swoyer12",
        "subreddit": "learnprogramming",
        "content": "Hi,I'm a recent math grad and have been trying to get a job in the programming field, I have 4+ years experience with python, around a year of experience with C and SQL.I have been struggling finding a job and am curious if the fact that the languages I know are so common, if that could be hurting my odds. I was wondering if learning a less known but still used language would be a good idea. I was thinking something like Rust or maybe an older language that still is used in industry but not taught as much in academia. I would appreciate any thoughts, and am very open to the idea that I'm just wrong :)",
        "score": 28,
        "upvote_ratio": 0.75,
        "num_comments": 39,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv1udw/what_language_to_learn_for_getting_a_job_with/",
        "created_utc": "2025-05-25 12:54:13",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxi0yl",
        "title": "Free Harvard CS50 Courses",
        "author": "TemporaryView5045",
        "subreddit": "learnprogramming",
        "content": "Hello! I'm new to the field of Computer Science — my background is actually in Natural Resources. A friend recently told me about Harvard’s free CS courses, and I'm definitely open to taking advantage of them. I previously worked with the USDA, but my position was dissolved, so I'm currently exploring a career change.I'm wondering: Are these courses (like Intro to CS, Python, Databases, etc.) actually helpful in preparing for a new job in tech? If I complete them all, would that make me a competitive candidate for entry-level roles?",
        "score": 24,
        "upvote_ratio": 0.84,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxi0yl/free_harvard_cs50_courses/",
        "created_utc": "2025-05-28 14:08:04",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kv9jgu",
        "title": "Feeling stuck as a Java developer due to weak fundamentals — need guidance",
        "author": "Nika_00_11",
        "subreddit": "learnprogramming",
        "content": "Hi everyone,I'm a 24-year-old Java developer with around 4 years of experience in web development. Lately, I’ve come to realize that my fundamentals in programming—especially data structures and problem-solving—aren’t as strong as they should be. I feel like this gap is holding me back from reaching the next level in my career.I’ve finally accepted this and I really want to work on it, but I’m confused about how to go about it. It feels tough to look back and rebuild the basics after coming this far, but I know it’s necessary.Can anyone suggest a practical roadmap or approach to strengthen my core programming and problem-solving skills? Any resources, habits, or tips that worked for you would be greatly appreciated.",
        "score": 22,
        "upvote_ratio": 0.83,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv9jgu/feeling_stuck_as_a_java_developer_due_to_weak/",
        "created_utc": "2025-05-25 18:31:19",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kw6t6b",
        "title": "I developed a todo GUI using only C and the Win32 API. I'm open to suggestions and contributions.",
        "author": "efe17ckc",
        "subreddit": "learnprogramming",
        "content": "[https://github.com/Efeckc17/simple-todo-c](https://github.com/Efeckc17/simple-todo-c)",
        "score": 22,
        "upvote_ratio": 0.89,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw6t6b/i_developed_a_todo_gui_using_only_c_and_the_win32/",
        "created_utc": "2025-05-26 21:59:43",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktsh09",
        "title": "I want to get into computer programming but I don't know where to start",
        "author": "Top_Librarian_2813",
        "subreddit": "learnprogramming",
        "content": "I majored in theatre but I started playing around with Lua in my last semester. Pretty basic code I know, but I really think I could find myself getting into this stuff. I dabbled a lot with it in middleschool through making games but I was discouraged into really getting into it due to some pretty awful bullying I experienced from friends (who actually ended up going into cs). If anyone could give me advice as to where I can start or what sort of applications I could use...that would be lovely!",
        "score": 22,
        "upvote_ratio": 0.89,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktsh09/i_want_to_get_into_computer_programming_but_i/",
        "created_utc": "2025-05-23 19:35:36",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvtilp",
        "title": "Complete novice here. How far into learning C++ should I start learning python?",
        "author": "Far-Mind140",
        "subreddit": "learnprogramming",
        "content": "My current long-term goal is learning python, but I don't really like not knowing how things work \"under the hood\", so I thought I should learn C++ first since I heard it's going to be easier to learn python afterwards anyway.Is there even an advantage to doing this? Or am I just unnecessarily lengthening my timeline?Edit: I still would like to learn C++, I'm just having second-thoughts on which language to learn first.Edit 2: Thanks for the reply guys, I already have my questions answered.",
        "score": 21,
        "upvote_ratio": 0.75,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvtilp/complete_novice_here_how_far_into_learning_c/",
        "created_utc": "2025-05-26 12:48:47",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvhdyr",
        "title": "why am I not getting better",
        "author": "Repulsive_Act_5491",
        "subreddit": "learnprogramming",
        "content": "I got probably the lowest score in a class of 200 people on my first data structures and algorithms midterm and then despite working my ass off and improving 33%, still failed my second midterm. I went to professor and TA office hours, did and redid worksheets and practice tests, and went to peer tutoring. I don't even know where else to start improving. Also the teacher's lectures are all prerecorded which for some reason make it hard for me to understand. I think the content is interesting and despite being bad at it I still like CS, so I don't know what I should do now.",
        "score": 19,
        "upvote_ratio": 0.81,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvhdyr/why_am_i_not_getting_better/",
        "created_utc": "2025-05-26 00:34:58",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kumrjp",
        "title": "Is my university unreasonable for asking us to do this project?",
        "author": "MikyMuch",
        "subreddit": "learnprogramming",
        "content": "So basically, I'm studying first year of CS, we're at the end of the year and we learnt about the basics of c++, using simple data structures like maps, or binary trees, or lists, pointers , and classes. As a part of a final project we have been tasked to create a Finder class that accepts pointers to any type of object. It assumes the object has a get rectangle function that gives it's left, right, top and bottom coordinates. It must be able to add, erase, and update the positions.The last function must return a set that contains the pointers to the objects that are inside or intersect with a given rectangle. and the problem is we have to do it in O(log n) with n being the number of rectangles on the container.In my research I've found that to accomplish this I've gotta use complex (at least for me) data structures like rtrees or quadtrees, which doesn't seem very reasonable to me. And we haven't been given any more guidelines how or what we can and cannot do. Do you guys think I should investigate and implement one of these tree structures? Or is there a simpler alternative?Thanks in advance to everyone.Update: I wasn't expecting this many responses, wow. So I took your advice and spent the whole day learning and implementing this quad tree fucker because I had to deliver it for today, it works and all the automatic test give the ok. And within the two weeks we had to do this I started to do it yesterday because I'm too lazy.I asked my friend and it seems most people have implemented a grid system with maps, but the tree seems to be better and more elegant I learnt a lot today so, again, thanks.",
        "score": 19,
        "upvote_ratio": 0.79,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kumrjp/is_my_university_unreasonable_for_asking_us_to_do/",
        "created_utc": "2025-05-24 21:49:27",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwphy0",
        "title": "Sucks to sit for hours",
        "author": "Nandani-18",
        "subreddit": "learnprogramming",
        "content": "Initially when there no job and when we are hustling to get one, confused to choose development or dsa and end up on a decision to do both equally. Doing this is not easy, sitting for hours on laptops, mobiles and screen sucks. And there’s no thought where it will end and till what time it will go like this. Hours and hours of devotion and not even knowing where it will end.",
        "score": 18,
        "upvote_ratio": 0.71,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwphy0/sucks_to_sit_for_hours/",
        "created_utc": "2025-05-27 15:01:33",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxparp",
        "title": "What language(s) is right for me?",
        "author": "goodboylake",
        "subreddit": "learnprogramming",
        "content": "I’m planning to build a website for a project. I’m curious what language or languages would be best for the purpose. The site I’m trying to build would be an interactive timeline. The user would scroll down to find different time stamps and important events on those respective dates. There wouldn’t be anything like accounts or passwords or stuff that would need to be stored. I have mild knowledge of Java from a class and in the next school year I’ll be taking another java class, but I don’t know how to use any other languages. I’m currently working on trying to learn the basics of HTML & CSS. What language or languages would be right for this purpose? I’m open to learning anything and also open to both fullstack and separated backend/frontend. Thank you!",
        "score": 18,
        "upvote_ratio": 0.82,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxparp/what_languages_is_right_for_me/",
        "created_utc": "2025-05-28 18:56:46",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvewfd",
        "title": "Is the GeeksforGeeks DSA (Algorithms & Data Structures) section still bad?",
        "author": "Mother-Ad-6297",
        "subreddit": "learnprogramming",
        "content": "four years ago a reddit post highlighted issues with the problem solutions on GeeksforGeeks and shared three links as examples however when I check those links now, I don't see any problemsit seems geeksforgeeks has been updating these tutorials since 2024despite this does learning from geeks4geeks worth? If not, could you recommend similar platforms whichcategorize algorithmic topics clearlyprovide complete tutorials for each problem allow testing code directly on the platform? Thanks in advance!",
        "score": 17,
        "upvote_ratio": 0.82,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvewfd/is_the_geeksforgeeks_dsa_algorithms_data/",
        "created_utc": "2025-05-25 22:29:46",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwfq72",
        "title": "I'm SLOW, am I doomed?",
        "author": "Nullify_Undefined",
        "subreddit": "learnprogramming",
        "content": "I'm a freshman last year (well, not quite now). I had my first performance review with just about 6 months of experience, and the feedback was that I'm slow — I take more time to complete tasks compared to others, sometimes even exceeding the defined deadlines.After 1 year (1 year and 6 months of experience), I had another performance review. This time, I received a good review, possibly even being considered for promotion. No more comments about being slow.However, just 3 months after that latest performance review (at 1 year and 9 months of experience — which is now), I received feedback again from others saying that I'm slow. These comments came from a few different sprints, and possibly from different people as well.For more context, the \"slowness\" now refers to me taking a longer time to complete relatively simple tasks. I was asked why I needed so much time to finish a task that others completed in much less time. (Even though the task was simple, I still completed it on time.) While working on it, I encountered some hiccups — which were simple to fix — but it still took me some time to figure out the solutions. This might be because the issues were new to me, I quickly got the grasp of where are going wrong, but finding the workable fix take me sometime, or maybe because I'm just not good enough at logic or programming, which makes me slower than others.What can I do now?I'm starting to question myself about pursuing a career in programming. Does all of this mean I’m just NOT born to be a good programmer?I want to be the best — someone recognized and respected at work.",
        "score": 15,
        "upvote_ratio": 0.77,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwfq72/im_slow_am_i_doomed/",
        "created_utc": "2025-05-27 05:46:17",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvkbt7",
        "title": "Learning Javascript for 3 weeks in bootcamp, still not able to apply it to real-project. No coding background. Any advice?",
        "author": "Left_Story5591",
        "subreddit": "learnprogramming",
        "content": "I have started my coding journey 3 weeks ago in a bootcamp. It was fun in the beginning. But I'm struggling now as it started to required us to build a webpage/app from scratch. Any advice from the experienced? I'm feeling so demotivated now.",
        "score": 18,
        "upvote_ratio": 0.83,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvkbt7/learning_javascript_for_3_weeks_in_bootcamp_still/",
        "created_utc": "2025-05-26 03:18:15",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvdhw3",
        "title": "Advice on escaping tutorial hell",
        "author": "Healthy-Version8841",
        "subreddit": "learnprogramming",
        "content": "Just tried building a portfolio but realized I couldn't write any code outside what was shown in tutorial video. advice on how to make it on my own",
        "score": 18,
        "upvote_ratio": 0.93,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvdhw3/advice_on_escaping_tutorial_hell/",
        "created_utc": "2025-05-25 21:24:28",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kuyfqt",
        "title": "Is CSS \"kinda\" confusing.",
        "author": "Typical-Life-216",
        "subreddit": "learnprogramming",
        "content": "so after messing around with web dev, I was able to understand html (basic). when i moved to css things got little interested and messy tbh. Is css like this or is there a better way to work around and learn css more efficiently.",
        "score": 16,
        "upvote_ratio": 0.76,
        "num_comments": 47,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuyfqt/is_css_kinda_confusing/",
        "created_utc": "2025-05-25 09:21:55",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktflsh",
        "title": "Industry level Code",
        "author": "Sweaty_Interest_8774",
        "subreddit": "learnprogramming",
        "content": "How did you people learn to write code. I know practice makes code better but as a beginner how can one learn to write code. For example take the case of a web app MERN for example How to know to structure the backend code. They dont teach such stuff in uni and dont want to get stuck in tutorial hell. So how can i learn to structure my Web app",
        "score": 17,
        "upvote_ratio": 0.9,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktflsh/industry_level_code/",
        "created_utc": "2025-05-23 09:53:08",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwqfpp",
        "title": "My project progress is so slow, am I doing it wrong or is it just how the process is?",
        "author": "Atshoom",
        "subreddit": "learnprogramming",
        "content": "I'm making a native app in JS. A writing app to organize notes and documents, which is very feature heavy, with customization and I'm going for in-built WYSIWYG rich text editor (currently aiming to reproduce as much features of libreofffice and classic word processors) and some sort of in built version control. Among other features.I try to avoid having dependencies as much as I can, unless I find reliable ones, so I know this choice makes the process longer.I've been working on it for quite a while, but not full-time because it's not my job. Still it's been a lot of work, and even if I'm still hanging on, I'm having doubts on my process and abilities.When people ask me at what percentage of the progress I am on this project I cannot answer because I know every damn features takes so much more work than the basic prototype, especially for a good UX. It drives me crazy when people ask me such questions and are underwhelmed by how slow things actually goes. (Even if I'm grateful I know people who genuinely want to be users.)I don't know other devs and I've been recently asked by a friend if I was slow because I am self-taught, assuming that was the issue. I took several online course on my own and try to keep learning regularly in order to have better practice. I am still learning, so it's slower than an experienced dev with a lot of experience... but I'm assuming programming a good product is just long and difficult and the pace will always be underwhelming. Am I wrong for assuming that? I'm not against stepping up my game but I'm afraid I'll just burn myself out. Do anyone have any advice to keep one's sanity on such long-term project?",
        "score": 17,
        "upvote_ratio": 0.82,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwqfpp/my_project_progress_is_so_slow_am_i_doing_it/",
        "created_utc": "2025-05-27 15:38:43",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxx2e3",
        "title": "Someone please explain this to me in layman's terms",
        "author": "Alternative-Air-6982",
        "subreddit": "learnprogramming",
        "content": "For context: I'm working on a calculator (JS, HTML, CSS) and I'm pretty comfortable with what I have so far. When I run the program, it executes and all unary and binary operations fire. However I'm wanting to link a database to it in order to house previous calculations in case the user needs to walk back through their train of thought. My plan is to jump in with MongoDB and Node. I've tinkered with both of them but I'm still not grasping how to link the database once it's built to my front end. Can someone please give me some direction? 50 Schrute bucks on the table.Edit (adding more context): A database is **required** for this project.",
        "score": 14,
        "upvote_ratio": 0.79,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxx2e3/someone_please_explain_this_to_me_in_laymans_terms/",
        "created_utc": "2025-05-29 00:22:10",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxp265",
        "title": "This doesn't make sense to me",
        "author": "UpperPraline848",
        "subreddit": "learnprogramming",
        "content": "int dividend = 3; int divisor = 2; double result = dividend / divisor \\* 1.0; System.out.println(result); answer choices are: 3.0 2.0 1.5 1.0 I'm choosing 1.5, but it's saying the correct answer is 1.0. I guess I don't understand the logic? Why does: 3 / 2 \\* 1.0 = 1.0 but 1.0 \\* 3 / 2 = 1.5",
        "score": 15,
        "upvote_ratio": 0.75,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxp265/this_doesnt_make_sense_to_me/",
        "created_utc": "2025-05-28 18:47:23",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ky94z4",
        "title": "Develop An App",
        "author": "Capital-Strawberry",
        "subreddit": "learnprogramming",
        "content": "TL;DR: I want to make a notes taking app thats free to use, no premium, and works in a way that suits my organization, that most other apps don't. What programming language is best to use for this?~~~~~~~~~~~~~~~~~~~~~~I've been working on learning Python for a while, so I could make a game. Eventually I decided I wanted to make a discord bot, and decided to try JavaScript, since ive gotten pretty okay with Python, and ive gotten okay with JavaScript, but here is my problem.I have an issue where I constantly run into ideas for some small and some large things I want to work on. My newest idea is an app for taking notes, so I can organize all of my ideas.I am fully aware that apps like that exist, but the problem is, none of them organize how I want them to, I have very specific ideas, and all of them have adds or require premium purchases.I want to make my own app so I can have it how I want, and put it out for free, so others can also use it without ever adding adds or preventing anyone from being able to use it properly.Another idea was making a mod for SDV, but its a big idea, which requires me to learn C#, so all in all my question relates to the notes thing specifically. Which language would be best to program a notes taking app in? (Sorry for the very long and likely confusing explanation, I just wanted to explain everything properly.)",
        "score": 14,
        "upvote_ratio": 0.83,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ky94z4/develop_an_app/",
        "created_utc": "2025-05-29 12:08:30",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kw3e0u",
        "title": "What made front end development easier for you?",
        "author": "driverone1013",
        "subreddit": "learnprogramming",
        "content": "I’m mostly a backend developer, and I occasionally have to work on frontend vue components. Whenever I start working on a personal project or anything front end, my brain just starts to melt with how complicated it starts to get. Like it can take me 30 minutes to get the layout how I want it but by the end of it I have no clue how my concoction of css and bootstrap made it work.I’m not sure if it’s just my mindset but I get frustrated that just setting up a button to handle a click takes me longer than all the backend coding.Im assuming the answer to this is going to be I just need to practice frontend development more but are there any tips anyone could give me to make it less painful?",
        "score": 16,
        "upvote_ratio": 0.94,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw3e0u/what_made_front_end_development_easier_for_you/",
        "created_utc": "2025-05-26 19:36:08",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxxu13",
        "title": "Documentation doesn't work for me. Am i the problem?",
        "author": "Boring_Dish_7306",
        "subreddit": "learnprogramming",
        "content": "I can't understand anything by reading the documentation. I always have to find other sources, or make it simpler with AI. Am i stupid or just became lazy now that AI is around? Not newbie btw, always been this way..",
        "score": 12,
        "upvote_ratio": 0.71,
        "num_comments": 18,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxxu13/documentation_doesnt_work_for_me_am_i_the_problem/",
        "created_utc": "2025-05-29 00:59:31",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvsbws",
        "title": "Is it good practice to have a polling system connected to some endpoint every x seconds or so to save the user's data to the database?",
        "author": "5Ping",
        "subreddit": "learnprogramming",
        "content": "Im new to backend side of things, but if you want to save the current user at all times is polling a good way to do that? For example on the frontend id have a setinterval under a use effect that does a post request to the appropriate endpoint that does the query for saving the data in the db.Is this good practice? What are alternatives of always syncing a users data to the db? Also for polling is it common for people to add like a warning sign if a user tries to exists off and they still have unsynced changes due to the setinterval timer not getting hit?",
        "score": 13,
        "upvote_ratio": 1.0,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvsbws/is_it_good_practice_to_have_a_polling_system/",
        "created_utc": "2025-05-26 11:46:28",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx5xwp",
        "title": "Starting from zero now : is it possible to land a internship for summer 2026",
        "author": "DefiantLie8861",
        "subreddit": "learnprogramming",
        "content": "This summer, I’m focusing on trying to land a software engineering internship for Summer 2026. I have 11 distraction free weeks before the fall semester starts, and I plan on dedicating 7-9 hours 6 days per week for this. I’m starting completely from zero with no coding experience, so my plan is to spend the first 5 weeks learning Python/core programming concepts, and then spend the next 6 weeks learning DSA and beginning Leetcode problems for interview prep. I’ll also work on creating a resume and 2-3 projects , then eventually start applying in late August/early September. I wanted to know if this 11-week plan makes sense and is realistic — spending the first 5 weeks learning Python and core programming concepts(ex. Cs50, freecodecamp), then the next 6 weeks focusing on learning dsa/LeetCode and building projects. Is this a realistic/solid approach for someone starting from zero to become interview-ready and landing an internship in just 11 weeks?Worst case scenario, I’m prepared to keep applying until the latest which from what I’ve seen will be January. By then I should hopefully be fully ready for interviews with a complete resume ? I know the importance of applying early in august/early September so I was also wondering if applying in January would even be worth applying since it might be too late.Sorry for the long post, I’ve been thinking about this a lot and i feel like more experienced peoples opinion on this would help me gauge my situation better. Any advice or insight from people with knowledge or who’ve been in a similar spot would mean a lot. Thank you!",
        "score": 14,
        "upvote_ratio": 0.8,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx5xwp/starting_from_zero_now_is_it_possible_to_land_a/",
        "created_utc": "2025-05-28 02:31:39",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kv6cvk",
        "title": "How can I encourage my coding students to try coding contests? I think it would sharpen their skills.",
        "author": "Complete-Swim-2304",
        "subreddit": "learnprogramming",
        "content": "For many years, I have been teaching kids to code (ages 6–18), and I’m always looking for ways to help my students improve. I’m convinced that competitive programming offers a fantastic opportunity for them to sharpen their coding skills and boost their problem-solving abilities, confidence, and creativity. The problem is, most of them seem hesitant to even try or aren’t enthusiastic about it. Any advice or insights you could share?",
        "score": 13,
        "upvote_ratio": 0.93,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv6cvk/how_can_i_encourage_my_coding_students_to_try/",
        "created_utc": "2025-05-25 16:16:30",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktvzm2",
        "title": "Do you program in a different language when studying than the one you use at work?",
        "author": "Jinbouu",
        "subreddit": "learnprogramming",
        "content": "I’ve been thinking about getting back into studying programming (not a specific language, but revisiting some foundational concepts), but I wouldn’t want to use Java for it. It’s the language I use at work, and I consider myself a junior/mid-level developer in it, but the mere thought of programming in Java in my free time makes me nauseous. I’m considering either going back to Python (haven’t written any in about 6 months) or learning Go and studying those concepts while I pick up Go. At first, I won’t be using either Python or Go at work, so it would just be for studying in my free time. So here’s the question:1. In your free time, do you use a different language than the one you use at work, or do you stick with the same one to stay sharp?2. Should I stick with Java to improve as a Java developer, or could switching tools be a good idea?",
        "score": 14,
        "upvote_ratio": 0.9,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktvzm2/do_you_program_in_a_different_language_when/",
        "created_utc": "2025-05-23 22:07:35",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyj5yt",
        "title": "Planning to be ahead in College. (Your Advice)",
        "author": "saifah3807",
        "subreddit": "learnprogramming",
        "content": "I just finished high school today. I have plenty of time before starting college. I've decided to learn Python. I dream about being a *CyberSecurity Engineer,* as the love of technology comes deep from my heart. But I really want to be ahead in college, I don't want college to be my journey-kick off. I know I'm late already being 18 now and lacking coding knowledge. **I just want your tips and advice on how to best use these months before college**. \\*\\*\\*and forgive my English.",
        "score": 10,
        "upvote_ratio": 0.79,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyj5yt/planning_to_be_ahead_in_college_your_advice/",
        "created_utc": "2025-05-29 19:03:35",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kuizhl",
        "title": "Just started learning to code — everything feels overwhelming but also kinda exciting?",
        "author": "DeathFoeX",
        "subreddit": "learnprogramming",
        "content": "Hey all! I’m a beginner IT student and just getting my feet wet with programming. Honestly, sometimes it feels like I’m drowning in all the new stuff — languages, frameworks, best practices — but then I build something tiny that actually works and I’m like, “Whoa, maybe I got this?” What helped you not freak out when starting out? Any tips for a total newbie?",
        "score": 12,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuizhl/just_started_learning_to_code_everything_feels/",
        "created_utc": "2025-05-24 18:55:02",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ku07tt",
        "title": "Expired certificate on jetbrains IDEs",
        "author": "Red_Birdly",
        "subreddit": "learnprogramming",
        "content": "Today i randomly got a popup on both jetbrains IDEs i had saying that the server's certificate has expired Server address: [analytics.services.jetbrains.com](http://analytics.services.jetbrains.com) (port 443) It says that it is unsafe to connect to the server, what do i do? This popup keeps appearing every 10 or something minutes",
        "score": 12,
        "upvote_ratio": 0.94,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku07tt/expired_certificate_on_jetbrains_ides/",
        "created_utc": "2025-05-24 01:39:43",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxcv1p",
        "title": "O’reilly Online Portal, is it worth it?",
        "author": "technolaaji",
        "subreddit": "learnprogramming",
        "content": "Hello there, I have been seeing O’rielly offering on their education portal a subscription plan to check books and courses on demand They include books from other publishers like Packt and No Starch Press which honestly caught my attention even moreHas anyone subscribed to it? Is it worth the investment? Can you download books and have them as pdf/epub? (I don’t mind it being DRMed since I want them to be loaded on my Kindle)",
        "score": 8,
        "upvote_ratio": 0.8,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxcv1p/oreilly_online_portal_is_it_worth_it/",
        "created_utc": "2025-05-28 09:35:43",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwbw17",
        "title": "I want to make I N F I N I T E pong",
        "author": "Frothybuffalo41",
        "subreddit": "learnprogramming",
        "content": "I have never touched a single bit of code, but I would like to make a pong program that has two CPUs playing against each other, forever. Preferably I would be able to play, and interact, but it would be able to play the infinite game by itself. The program would run on a computer with the sole purpose of this. 1. Where would I start?2. How could I get a computer system to run this? What could I use?",
        "score": 9,
        "upvote_ratio": 1.0,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwbw17/i_want_to_make_i_n_f_i_n_i_t_e_pong/",
        "created_utc": "2025-05-27 02:07:04",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kw4fqy",
        "title": "6 Months into Learning Python & Software Engineering — Not Sure What to Learn Next (SaaS & AI Goals",
        "author": "Mitchellholdcroft",
        "subreddit": "learnprogramming",
        "content": "Hey everyone,I’m about 6 months into learning Python and software engineering. I’ve built a few small projects, covered the fundamentals, and dipped into areas like web scraping, basic Flask apps, and some data manipulation with pandas.Right now, I feel like I’m at a bit of a crossroads. My long-term goal is to be able to:•Build and launch SaaS products solo or with a small team•Eventually create AI agents that can interact with data or perform tasks intelligently•Become a really solid software engineer before diving too deep into advanced AI workI’m trying to map out the most effective learning path from here. I don’t want to rush into building AI stuff without a strong foundation. But I also don’t want to get stuck in “tutorial purgatory” or waste time on things I don’t need yet.A few things I’m wondering:•What areas of software engineering should I focus on next if my goal is to build real, scalable products (like SaaS)?•How do I transition from learning to building things that people actually use?•When is a good time to dive into AI/ML agent development?•How do you know you’re “ready” to work on these more complex systems?Also, if you’ve been down this road yourself and wouldn’t mind being a bit of a mentor (even informally), I’d be super grateful. Just having someone to bounce questions off would be a huge help.Appreciate any thoughts, advice, or resources you can share.",
        "score": 9,
        "upvote_ratio": 0.8,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw4fqy/6_months_into_learning_python_software/",
        "created_utc": "2025-05-26 20:20:14",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kv5isk",
        "title": "If I am a complete beginner and starting CS50 what is the further route?",
        "author": "Zealousideal_Ice9136",
        "subreddit": "learnprogramming",
        "content": "I am doing cs50 right now but I am like how to reach to competitive programming level and like Ik cs50 will give me a over-all idea of the coding field but still what are other course to check out",
        "score": 10,
        "upvote_ratio": 0.78,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kv5isk/if_i_am_a_complete_beginner_and_starting_cs50/",
        "created_utc": "2025-05-25 15:40:42",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktl0fg",
        "title": "Learning programming",
        "author": "glizzykevv",
        "subreddit": "learnprogramming",
        "content": "Hey guys so I’m trying to learn c++ currently taking a class for it in college but I was wondering am I expected to just know all the syntax and keyword commands and stuff ? There is so many commands and ways to use them it’s very overwhelming I remember one person telling me that you are expected to know the syntax and keywords by memory but how did you guys even learn of them all how did you go about learning how to program ?",
        "score": 9,
        "upvote_ratio": 0.9,
        "num_comments": 37,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktl0fg/learning_programming/",
        "created_utc": "2025-05-23 14:30:30",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyk16c",
        "title": "Beginner Podcast ideas??",
        "author": "SillyWillySchizo",
        "subreddit": "learnprogramming",
        "content": "Like the title says, any suggestions for good podcasts to listen to? I’m trying to learn and get into programming, but I work labour full time. Would be nice to have a podcast I could listen to, supplementing my learning. I’d rather not one just conversation based but rather more teaching/lecture but any good suggestions are welcome! Thank you",
        "score": 8,
        "upvote_ratio": 0.8,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyk16c/beginner_podcast_ideas/",
        "created_utc": "2025-05-29 19:38:00",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxhpf4",
        "title": "Ok, so this is my FIRST day of making a todo app in c++ as a complete beginner.",
        "author": "Informal-Call-5298",
        "subreddit": "learnprogramming",
        "content": "So im trying to make this project becuase ive been always watching tutorials and never doing anything myself, but this time im trying. anyways, i would love advice and also help with logic and how to move forward. #include using namespace std; #include enum class enAction {     Add_Task =1,     Remove_Task =2,     Complete_Task =3, }; // Function to store the list of tasks void tasks(){     cout << \"1. walk dog\" << endl;     cout << \"2. feed cat\" << endl;     cout << \"3. clean house\" << endl;     cout << \"4. buy groceries\" << endl; } // Function to list tasks and prompt for an action int list_tasks() {     int action;     cout << \"----------------------------\" << endl;     cout << \"       Current Tasks:\" << endl;     cout << \"----------------------------\" << endl;     tasks();     cout << \"----------------------------\" << endl;     cout << \"choose an action:\" << endl;     cout << \"1. Add Task, 2. Remove Task, 3. Complete Task\" << endl;     cin >> action;     if (action 3) {         cout << \"Invalid action. Please try again.\" << endl;         return list_tasks();     }     return action; } // Function to perform the action based on user input void add_task(string task) {     } // Function to remove a task based on its number void remove_task(int task_number) { } // Function to mark a task as complete based on its number void complete_task(int task_number) { } // Function to handle the action based on user input void do_action(int action){     string task;     int task_number;     if (action==1){         cout << \"Enter the task to add: \" <<endl;         cin.ignore();         getline(cin, task);         add_task(task);     }     else if (action==2){         cout << \"Enter the task number to remove: \" << endl;         cin >> task_number;         remove_task(task_number);     }     else if (action==3){         cout << \"Enter the task number to complete: \" << endl;         cin >> task_number;         complete_task(task_number);     } } int main(){     cout << \"Welcome to the Task Manager!\" << endl;     list_tasks();     return 0; }",
        "score": 9,
        "upvote_ratio": 0.77,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxhpf4/ok_so_this_is_my_first_day_of_making_a_todo_app/",
        "created_utc": "2025-05-28 13:54:46",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyfpo7",
        "title": "How to learn new students front-end in 2025?",
        "author": "Jazzlike_Carrot859",
        "subreddit": "learnprogramming",
        "content": "I’m a teacher and work with students daily and help them master front-end basics. We start with html, css and overall programming principles and work towards JavaScript, all in 20-30 weeks time.The learning curve used to be okay but with all the awesome ai tools available I notice a lot of students cutting corners; quicker in the end product but not exploring all the necessary hurdles along the way. Any ideas or own experiences? Resources online about this topic?Some disclaimer: - I actively explore and research ai’s with our students and showing all the do’s and dont’s - I don’t want to actively discourage using ai- I don’t want to asses their work in a way where students need to write down coding concepts without ai (that is not something you would do in the field either, feels forced)",
        "score": 9,
        "upvote_ratio": 0.92,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyfpo7/how_to_learn_new_students_frontend_in_2025/",
        "created_utc": "2025-05-29 16:48:12",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwtdzp",
        "title": "Need assistance with Bad DB design",
        "author": "Quin__Decim",
        "subreddit": "learnprogramming",
        "content": "Hi everyone, I am going through a bit of confusion. Previously I worked with educational institutions with focus on ML. So everything I designed and created including DB was under me and I used every naming conventions that is standard when designing a SQL DB. Now that I have moved to a small startup,this is the first time I am building something where DB design wasn't done by me so I am not even sure if this is the correct way but all these years of Machine Learning I have never seen a DB design like this.There is around 500 tables on the DB with no naming conventions, barely any primary key or foreign key. So I decided to do a compare to find common column names so it makes my work easier to extract the data, but turns out even the names of the columns that are joint is different it could be subscription_id in one column and original_subscription_id somewhere else. So many inconsistency that I am not able to find proper relationship. To further this issue many tables are many to many relationship. My question based on everything is1. Is there true in other organization? 2. Is there a way to fix this without refactoring the entire DB?3. As ML guy I rely on DB so pulling them and finding relationship is important. I thought of brute forcing the relationship by finding such similarities but the DB is vast.So I am not even sure how to approach it. 4. The last option is to build the entire DE pipeline and fix this but given that I am the only there and building it will take time,I am planning to do it on the sideThank you everyone for your assistance.P.S.:I tried asking this question on Software Engineering but it got removed.",
        "score": 8,
        "upvote_ratio": 1.0,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwtdzp/need_assistance_with_bad_db_design/",
        "created_utc": "2025-05-27 17:32:44",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyqtd6",
        "title": "I went to a hackathon with no experience and no friends, here's what I learned.",
        "author": "Wrongdoermore98",
        "subreddit": "learnprogramming",
        "content": "So I went to my first-ever hackathon this week. Actually... I went twice. Once by accident (misread the email), then again on the actual day. Yeah, I'm that guy.Honestly, I was super hesitant to go at all. I'd been reading horror stories online from people who went to hackathons alone and had terrible experiences - feeling isolated, overwhelmed, or just straight up ignored. As someone who's still pretty new to coding, I wasn't sure I'd be able to keep up or even contribute anything useful. But I figured worst case I'd learn something, best case I'd meet some cool people and have fun.Spoiler alert: it was actually one of the best things I've done all year.I was expecting some massive sweaty hall packed with caffeine-addicted programmers pulling all-nighters, but this one was way smaller - maybe 15 people total - and super chill. It was hosted by this company called Work IQ in Tallaght, run by this guy Eoghan Powell who was honestly amazing. Super charismatic and warm, you could tell he genuinely cared about bringing people together and making everyone feel welcome.We started with some casual icebreakers which actually helped a ton with the nerves. The whole vibe was collaborative rather than competitive, which was such a relief. The challenge was to come up with solutions to real Dublin problems - traffic, homelessness, car dependency, that kind of stuff. We got split into three teams and mine tackled the traffic issue.Our team dynamic was... interesting. One girl showed up, quietly built her own app from scratch without really talking to anyone, then bounced before presentations. She was clearly talented, maybe just there to build something for her portfolio or flex her skills, which honestly fair enough - everyone's got their own goals.Then somehow I ended up being the unofficial project coordinator, which I definitely didn't see coming. People kept going off and working on their own sections without syncing up, so every few hours I'd have to wrangle everyone together and make sure we were all on the same page. I never planned to lead anything but I guess sometimes you just gotta step up when things need organizing.We also had three data scientists who were all super chill and easy to work with. The weird thing was that the biggest challenge wasn't actually the technical stuff - it was coming up with an idea that made any sense.We ended up building on something the Irish government is already doing - these transport hubs around the city where you can rent bikes, scooters, e-cars, whatever. But when we dug into the actual data, we realized something pretty interesting: the infrastructure for bikes and scooters already exists, people just aren't using it.So instead of proposing more hardware, we focused on improving usage through better user education, smarter incentives, and more strategic hub placement to get people actually cycling or scootering instead of driving everywhere. The solo dev on our team built this really slick app to visualize optimal locations for transport hubs which tied everything together nicely.The hackathon was supposed to run 9am-9pm but we wrapped up around 5pm. Part of me was a bit disappointed because I was curious what a \"real\" overnight hackathon would be like, but honestly this was probably the perfect introduction. There were snacks all day (healthy and junk food), pizza at the end, and after presentations every team got some kind of small award which was a nice touch - no losers, just different approaches.The space was really nice too - bright, colorful, comfortable with lots of different areas to work. Oh and there was a professional photographer taking pics the whole time which was cool for social media later.If you've been thinking about going to a hackathon but keep talking yourself out of it - seriously just go. Here's what I learned:* You don't need to be the strongest coder there. Hackathons need people who can communicate, organize, come up with ideas, design stuff - not just developers.* The hardest part isn't writing code, it's coming up with something creative and useful that actually solves a real problem.* Not everyone's there to collaborate and that's totally fine. Focus on connecting with the people who do want to build something together.* Every team needs someone to be the glue that holds things together. That can be you even if you're new.* Don't overthink it. You don't need some master plan, just show up with curiosity and an open mind.Some practical tips if you're going to your first one:* Bring a laptop (or at least a tablet)* Pack water* Stretch regularly - your back will hate you otherwise* Know what your strengths are even if they're not technical* Be ready to step into leadership even if nobody asks* Keep an open mind about what role you'll end up playingI almost didn't go because of all those negative stories I'd read online. Really glad I ignored them because the reality is hackathons can be awesome even if you're new, even if you're going alone, even if you're not a full-time developer. Most people are there to build cool stuff and connect with others, and they're usually happy to help and collaborate. You just have to show up.So if you're on the fence about going to one, consider this your sign. You never know what you'll end up doing or who you'll meet.**TL;DR**: Was scared to go to first hackathon alone as a coding newbie, accidentally showed up twice, ended up becoming unofficial team lead, had an amazing time, would definitely recommend to anyone hesitating.",
        "score": 11,
        "upvote_ratio": 0.7,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyqtd6/i_went_to_a_hackathon_with_no_experience_and_no/",
        "created_utc": "2025-05-30 00:32:48",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyl2s5",
        "title": "Self-studying HTML, CSS and PHP but hitting massive roadblocks. Is hiring a private tutor worth it?",
        "author": "umbrofer",
        "subreddit": "learnprogramming",
        "content": "Hey guys, I'm feeling really frustrated. I've been self-studying HTML, CSS and PHP, but I keep hitting these mental blocks that make me feel like I'm not making progress or that I'm too dumb to ever get this.My question is: Does anyone have experience with or know platforms where I can hire an online tutor? Like, private PHP lessons? Would it be worth it?If anyone's been through this or has tips to overcome these blocks, I'd really appreciate the help!So here's my story... I started by training my programming logic and spent about 3 months watching video lessons and studying basics: operators, conditionals, loops, variables, functions, arrays. Up to that point, it was okay - I could do exercises (some were hard, but I could work through them).The problems started when I got to callbacks, Promises, async/await and try/catch. These concepts just wouldn't click no matter how many explanations I watched.I got so tired of just doing exercises and watching videos that I switched to PHP (because I wanted to build something real to stay motivated). The basics (operators, loops, functions) were fine since they're similar to JS. (Not sure if this was the right choice, but I thought about creating a login system and saw PHP would work well - just needed to download Laragon and start, and I'm actually liking PHP.)But when it came time to actually code and start the project, I froze. I'd search online, I could understand what the code was doing - like I understood how the database connection worked conceptually - but when I went to type it out, I just couldn't remember the whole code. I felt like I was just copying and pasting, even if the code worked in the end, and everyone says this hurts real learning.To make it worse, a coworker (who also studies) told me that in 3 months he was already way beyond this and that I should try harder. This gave me a massive mental block - it feels like no matter how much I study, I'm not getting anywhere.",
        "score": 6,
        "upvote_ratio": 0.73,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyl2s5/selfstudying_html_css_and_php_but_hitting_massive/",
        "created_utc": "2025-05-29 20:20:18",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyizni",
        "title": "Do online courses and certifications matter?",
        "author": "partisani_",
        "subreddit": "learnprogramming",
        "content": "Do all of these thousands of repeated online programming courses and certificates help towards getting a job in 2025? And if not, how can i explain it to someone who works in the IT industry, where certifications are almost required to work?Lastly, are there better things that i should look for instead of courses and \"certificates\"?",
        "score": 7,
        "upvote_ratio": 0.83,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyizni/do_online_courses_and_certifications_matter/",
        "created_utc": "2025-05-29 18:56:50",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxcmin",
        "title": "Choosing next language to learn",
        "author": "Mike_Paradox",
        "subreddit": "learnprogramming",
        "content": "Hi there. As cs student I try to learn as much as possible to be prepared for the career and just for fun. Nevertheless it sounds like no much fun for a great deal of people I love C++ and it's main language to learn for me in long run (about 2.5 years in process now). I'm trying to get into high performance and data-intensive application development, but for the summer I have some free time to learn something apart curricula and C++ related stuff I learn myself. The plan is to improve math skills like discrete math and calculus, finish CLRS, and get some of parallel programming techniques. But also I'd like to learn another programming language. Apart from C++ I have some knowledge of C#, Python and Ruby. Next year I have a DSA course in Java. So main candidates are C# or Java as they somewhere in between of C++ and Python. But I also consider Rust. Does it sufficient to know some Rust along with C++ or it's better to gain some expertise in a quite different language?",
        "score": 6,
        "upvote_ratio": 0.88,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxcmin/choosing_next_language_to_learn/",
        "created_utc": "2025-05-28 09:19:43",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvrwn4",
        "title": "Hey need to know more about open source",
        "author": "Nandani-18",
        "subreddit": "learnprogramming",
        "content": "I’m unable to crack interviews in my college placements. I’m in third year of my CSE Degree. I find it too late to develop new skills. Recently I got to know about open source but I don’t know how to contribute in that and how will it help me land a job. Also I want to work on real life projects with other developers.",
        "score": 5,
        "upvote_ratio": 0.59,
        "num_comments": 27,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvrwn4/hey_need_to_know_more_about_open_source/",
        "created_utc": "2025-05-26 11:21:19",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyo0ey",
        "title": "Am not understanding Password Hashing/Validation",
        "author": "case_steamer",
        "subreddit": "learnprogramming",
        "content": "Hi all,I'm learning Python, but lately the questions I've been asking in r/learnpython are more advanced, and I've been advised to seek my answers elsewhere. I've spent my afternoon arguing with GPT and it's not giving good answers, so I hope someone can help me here. Anyway, right now I'm learning about password hashing, and I'm not understanding it. So here is the function I'm using to return a hashed password: def hash_password(password): hashed = generate_password_hash(password=password, method='pbkdf2:sha256', salt_length=8) return hashedThe example password I'm practicing with is 123456. Every time I iterate, I get a different output. So here's two examples: Input 1: 123456 Output 1: pbkdf2:sha256:600000$VZFLVGeP$19a1c6d59ac7599b17ccfb6f5726d6204d0fdabc56fab6b6395649da1521da97 Input 2: 123456 Output 2: pbkdf2:sha256:600000$ddXkU5qY$ff1b8146cfcdf3399589eedb1435f0633d2d159400534d977dae91cb949177d2 My question is, (assuming my function is written correctly) if my function is returning a different output every time, how is it possible for the password to reliably be validated when a user tries to login?",
        "score": 4,
        "upvote_ratio": 0.76,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyo0ey/am_not_understanding_password_hashingvalidation/",
        "created_utc": "2025-05-29 22:21:49",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyn72i",
        "title": "What is a good IDE?",
        "author": "CircularCube_",
        "subreddit": "learnprogramming",
        "content": "I want to try learning C++ programming. I have no experience at all in programming, and I’m using learncpp.com right now, and it says I need an IDE. The website has two suggestions: Visual Studio, and Code::Blocks. It says Visual Studio is not good for beginners because it’s difficult to configure, so I tried downloading Code::Blocks, but Microsoft Defender says it might be dangerous to open. So did I do something wrong? Should I try Visual Studio or a different IDE?Thanks for helping if you can.",
        "score": 7,
        "upvote_ratio": 0.72,
        "num_comments": 26,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyn72i/what_is_a_good_ide/",
        "created_utc": "2025-05-29 21:46:42",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyavrd",
        "title": "Can code (script?) be \"smart\"/adaptable?",
        "author": "Electronic_Drama_727",
        "subreddit": "learnprogramming",
        "content": "Hi all, to preface, I have almost zero \"coding\" experience or knowledge other than such surface/basic level of how to read HTML and inspect elements etc.I am wanting to publish a paper on how certain weightlifting strategies have changed overtime, but I need results from all competitions over the years to do this kind of analysis.What I'm doing, is trying to use Claude 4 to help write a python code that scrapes a certain website and all it's published competitions. the problem I have, is the competitions all have slightly different formatting and what they report etc. and I cannot for the life of me get this code to work.Can anyone advise, ~~other than \"speak to an expert\"~~ (edit: I meant I want to attempt this myself first, try to learn something), on what I may be able to ask/say to the LLM that will help with this situation?",
        "score": 4,
        "upvote_ratio": 0.67,
        "num_comments": 29,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyavrd/can_code_script_be_smartadaptable/",
        "created_utc": "2025-05-29 13:31:58",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx1wnt",
        "title": "What's better for an intelligence? Arduino or Pi? Maybe both?",
        "author": "hypergamer93",
        "subreddit": "learnprogramming",
        "content": "Hi all, I'm currently studying software development and am specialising in AI. I have a future goal which I'd like to start working towards after my current assessment is completed, however I'm not sure whether I want to use an arduino board, or a raspberry pi.My goal to start with is essentially a \"chatbot\" which uses voice input to store and process data and then produce an audio output.I've read that arduino has less processing power than a raspberry pi, however I have also read somewhere that you can use multiple arduino boards essentially in parallel? (Not sure if that's the correct terminology)My question to you is which of these would you recommend I look further into for the start of this project?Thank you, kind Redditors :)",
        "score": 7,
        "upvote_ratio": 0.67,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx1wnt/whats_better_for_an_intelligence_arduino_or_pi/",
        "created_utc": "2025-05-27 23:15:40",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwhwk4",
        "title": "Roadmap for web dev",
        "author": "Ok_Loquat_8483",
        "subreddit": "learnprogramming",
        "content": "i am starting my journey on web dev. Just wanna know what to learn and form where to learn .as per the current requirement and future which i know that know one knows but still that you think learning is better for the future",
        "score": 6,
        "upvote_ratio": 0.87,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwhwk4/roadmap_for_web_dev/",
        "created_utc": "2025-05-27 08:14:53",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kw7lln",
        "title": "Keeping my room (computer) clean when installing frameworks",
        "author": "Healthy_Yogurt_3955",
        "subreddit": "learnprogramming",
        "content": "Greetings.How do you keep your computer clean when it comes to tracking softwares and frameworks that you install for a project, but want to uninstall later when you close a project or stop using a framework?I have just decided to stop using Expo to develop an android app (I am a beginner) and I don't remember every library and add-on that I installed for Expo, now I want to get rid of it all. This happened to me also when I needed to install various tools for my various comp sci classes.Thank you for your help.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw7lln/keeping_my_room_computer_clean_when_installing/",
        "created_utc": "2025-05-26 22:34:17",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kvypbh",
        "title": "W3school Good place to start for absolute beginner (HTML CSS And JavaScript)",
        "author": "Out-Of-Goon-Sauce",
        "subreddit": "learnprogramming",
        "content": "Learning HTML CSS and JavaScript. I don't know a thing about coding but i have read about system communication is W3school good place to start. Also i don't like watch tutorial i prefer reading docs over watching someone else teach. My mom is a CSE professor and i can ask her if i get confused with reading material, but she doesn't have an idea about market trends and hiring.",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kvypbh/w3school_good_place_to_start_for_absolute/",
        "created_utc": "2025-05-26 16:28:48",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kuyo2u",
        "title": "Hi everyone",
        "author": "Brilliant_Hat7434",
        "subreddit": "learnprogramming",
        "content": "Hi everyone!! I'm a college student studying CS and I want to learn java more, I'm a kind of student that want to study but slow learner and I thought of buying some course online to begin with I'm a first year and currently in second sem and for those months I don't much to learn can anyone help me and recommend me some course even if there was a premium or free and can make suggestions also to me for learning java or any other programming languages. Thank you guys, appreciate y,all.",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kuyo2u/hi_everyone/",
        "created_utc": "2025-05-25 09:38:07",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kutwh9",
        "title": "In 64-bit windows why is long and int both 4 bytes in C?",
        "author": "multitrack-collector",
        "subreddit": "learnprogramming",
        "content": "I know that in many 32-bit systems, windows or linux, int and long are both 4 bytes, but in a 64-bit linux distro, int remains 4 bytes while long is 8-bytes. So why does 64-bit windows make both int and long 4 bytes in C? Why can't long be 8-bytes? Is this a compiler thing or some \"standard\" for the operating system?I'm using mingw btw and turns out that even the official Microsoft docs for the c/c++ compiler state that both int and long are 4-bytes.",
        "score": 4,
        "upvote_ratio": 0.68,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kutwh9/in_64bit_windows_why_is_long_and_int_both_4_bytes/",
        "created_utc": "2025-05-25 04:16:57",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ku2qbb",
        "title": "What have you been working on recently? [May 24, 2025]",
        "author": "AutoModerator",
        "subreddit": "learnprogramming",
        "content": "What have you been working on recently? Feel free to share updates on projects you're working on, brag about any major milestones you've hit, grouse about a challenge you've ran into recently... Any sort of \"progress report\" is fair game!A few requests:1. If possible, include a link to your source code when sharing a project update. That way, others can learn from your work!2. If you've shared something, try commenting on at least one other update -- ask a question, give feedback, compliment something cool... We encourage discussion!3. If you don't consider yourself to be a beginner, include about how many years of experience you have.This thread will remained stickied over the weekend. [Link to past threads here](https://www.reddit.com/r/learnprogramming/search?q=%22What+have+you+been+working+on+recently%3F%22&sort=new&restrict_sr=on).",
        "score": 7,
        "upvote_ratio": 0.99,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ku2qbb/what_have_you_been_working_on_recently_may_24_2025/",
        "created_utc": "2025-05-24 04:00:42",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1ktupnt",
        "title": "Beginner Web Dev Eager to Contribute & Learn | HTML, CSS, JS, React",
        "author": "Aisheair",
        "subreddit": "learnprogramming",
        "content": "I'm a beginner web developer currently learning React. I am building many small projects on my own, but now I really want to start applying what I’ve learned in more practical, real world settings.I would love to contribute to beginner friendly projects whether it’s open source or just a personal/team project someone working on.I’m mainly just looking to learn, grow, and connect with others. If you know any projects I could jump into or if you’re also learning and want to build something together feel free to reach out.",
        "score": 5,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1ktupnt/beginner_web_dev_eager_to_contribute_learn_html/",
        "created_utc": "2025-05-23 21:11:27",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kt95ad",
        "title": "have a large dataset of 40000 samples each being a big 5000 dimension numpy file too big for my ram how do I work with it",
        "author": "Practical_Luck_3368",
        "subreddit": "learnprogramming",
        "content": "I received the dataset in the format of 45150 .hea and.mat files I looped through them and read them now I have 45150 samples the data in each being a numpy array of shape (5000,12) and the labels being a multihot numpy array one dimension 63 elements. how do I save such a behemoth data set so that I don't have to loop through it again? how do I then load all this data and fit a model based on them?I tried saving them to a csv doesn't work csv just loses the data pandas didn't work either couldn't save to a parquetand basically every file type I tried took too much memory like 20gb of memory which I don't have so it crashed",
        "score": 3,
        "upvote_ratio": 0.72,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kt95ad/have_a_large_dataset_of_40000_samples_each_being/",
        "created_utc": "2025-05-23 02:53:27",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kylsng",
        "title": "Java/Spring dev looking for alternatives",
        "author": "akrylowy",
        "subreddit": "learnprogramming",
        "content": "HelloI have worked as a software engineer in java/kotlin, using spring, for about 2 years. The job required a lot of 'duct tape' fixing, including fixing GCP infrastructure configurations, making SQL queries to retireve data requesters wanted, etc, and mostly just plugging holes in a garbage codebase that management never ever has patience or budget to fix/rewrite/redesign correctly.Thus my skills aren't exactly stellar, Java/Spring-wise, as it was proven to me on my second project.Anyhow, in my spare time I tried out Rust and I loved it, but...the reality of job market.I'm looking to get back in, and I really don't want to go back to Java. Don't want to go to Spring. I especially don't want the OOP infested garbage, with Clean Code (TM) principles everywhere, forcing me to control+click through one tiny function that calls three functions, each of them calling three functions, making me completely forget what it was I was following/debugging by the fourth class/file I have to open and read through.At the same time I am familiar with crazyness of Javascript (which Typescript would alleviate somewhat), I don't want Microsoft products (C#, .NET). I am considering Golang at the moment, and I would really not be against Rust or something purely FP even (I have played around with Elm a bit and damn does that thing seem immune to errors)But, once again, realities of job market. I am not a senior dev, mid at best, and I'd rather have higher odds of finding a job within a few months, rather than low odds in a year+ after grueling amount of learning.Should I just grit my teeth, brush up on my Java/Spring starting from fundamentals (which are lacking in my case), or don't listen to naysayer-thoughts and keep up with Rust and maybe Golang on the side as it's easy enough to be complementary, or something else entirely?",
        "score": 4,
        "upvote_ratio": 0.68,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kylsng/javaspring_dev_looking_for_alternatives/",
        "created_utc": "2025-05-29 20:48:58",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kyinla",
        "title": "Suggestions for getting up to speed on coding skills",
        "author": "armandocelayajr",
        "subreddit": "learnprogramming",
        "content": "Hello everyone, I just finished my second year of my computer science/software engineering degree at DePaul Uni and I feel like I have dug myself a deep hole. My first year I was pretty proficient with coding all on my own for assignments and in-class projects up until my last quarter (3 months) with Data Structures 1. Once I started to struggle, I immediately turned to AI to code these assignments for me, and it sent me down a bad path. This entire past school year, I could not complete any of my coding assignments, no matter how hard I sat and stared at the screen. I understand all terminology, algorithms, data structures, and any other concepts that I have learned thus far, but I am afraid that I am falling severely behind in the coding skill factor, and am asking for suggestions on what would be the best course of action to catch back up to my class level. Any help would be appreciated, TIA.",
        "score": 4,
        "upvote_ratio": 0.76,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kyinla/suggestions_for_getting_up_to_speed_on_coding/",
        "created_utc": "2025-05-29 18:43:34",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kydanp",
        "title": "Title: Need help choosing language for DSA (Python or C++?) – beginner here",
        "author": "Slow_Spare_1764",
        "subreddit": "learnprogramming",
        "content": "Hey everyone,I'm currently moving into my 2nd year of college. In my 1st year, I learned the basics of Python and C—just enough to solve very basic problems. But to be honest, I still get confused with concepts like loops and overall logic-building. So yeah, you can guess where I stand in terms of coding skills: beginner level.Now, I have a one-month break, and I was planning to revise both C and Python from the basics so I don't struggle in my 2nd year. The main reason is that in the 3rd semester, we have to study DSA (Data Structures and Algorithms) using Python and C.But here's where I'm confused:Everyone is saying \"Don't waste time relearning basics, start with DSA directly in one language. Once you master DSA in one language, switching to another isn't a big deal.\"Some suggest doing DSA in Python, and others say C++ is better for DSA.As someone who's just starting out and hasn't really explored much in the coding world yet, I’m feeling stuck. I don’t know which path to follow. I just want to be confident and not fall behind when DSA classes begin.So please, any guidance would mean a lot:Should I revise Python/C basics first?Which language is better to start DSA with as a beginner: Python or C++?What would you do if you were in my place?Please don’t ignore this post – I genuinely need advice from those who’ve been through this. :folded_hands:",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kydanp/title_need_help_choosing_language_for_dsa_python/",
        "created_utc": "2025-05-29 15:12:02",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxxtbo",
        "title": "Opengl/python/pygame/c++",
        "author": "pj2x",
        "subreddit": "learnprogramming",
        "content": "Should i make a game by learning opengl and c++, Or python and pygame? for a beginner. I want to move to machine learning w python one day. And game creation with c++ and unreal.",
        "score": 4,
        "upvote_ratio": 0.67,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxxtbo/openglpythonpygamec/",
        "created_utc": "2025-05-29 00:58:31",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxsyoq",
        "title": "New to c++ and want to learn better",
        "author": "deltoramastr",
        "subreddit": "learnprogramming",
        "content": "Ok so I am currently in college and I am just starting a summer course on c++ I have minimal programming experience (some python) and was hoping for recommendations for a YouTube series and/or some games that teach c++ to work on in addition to my coursework. I am also curious for those that use windows if visual studio community is better to use than just visual studio or vice versa. Please let me know why so I can understand. I want to get better and actually understand what I'm doing.",
        "score": 4,
        "upvote_ratio": 0.76,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxsyoq/new_to_c_and_want_to_learn_better/",
        "created_utc": "2025-05-28 21:21:53",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxpcvw",
        "title": "Brand new to coding",
        "author": "NoZucchini4302",
        "subreddit": "learnprogramming",
        "content": "Hey I have some knowledge of how I,T works and things of that nature and have a base to start off of the problem is i wanna go into Computer science for game development and things like that problem is I'm going to college in like 2 years does anyone have tips, things I should explore I'm trying to learn C++, C#, python, java and maybe HTML considering I'd like to build a website as a portfolio for college",
        "score": 3,
        "upvote_ratio": 0.64,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxpcvw/brand_new_to_coding/",
        "created_utc": "2025-05-28 18:59:13",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxo1qu",
        "title": "MBA M3 assembly language",
        "author": "Internal-Address-696",
        "subreddit": "learnprogramming",
        "content": "i want to learn assembly i have macbook air m3 how should i do so? and which one x86 or arm",
        "score": 3,
        "upvote_ratio": 0.67,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxo1qu/mba_m3_assembly_language/",
        "created_utc": "2025-05-28 18:07:10",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxled9",
        "title": "I need some advice on creating a game.",
        "author": "Ignitious35",
        "subreddit": "learnprogramming",
        "content": "So, I have a card game I created with makeshift cards at home based on Top Trump card style, I was looking for an app to help me with being able to play this game online as we cannot find the time to meet much anymore. I couldn't find an app that helped fill my desires.So, I want to create an app that I can;1. Create my own cards onto a digital version and store them on the app,2. Be able to turn these into a game with custom rules which can be very specific. 3. Be able to host these custom cards and games with friends of 3 or more players. I have no knowledge of creating apps or coding either, I am open to take the time to learn. I would like any help or direction on how to start this and if this is even possible.",
        "score": 4,
        "upvote_ratio": 0.71,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxled9/i_need_some_advice_on_creating_a_game/",
        "created_utc": "2025-05-28 16:22:44",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kxjo8y",
        "title": "App Development career",
        "author": "CharlieBravo39",
        "subreddit": "learnprogramming",
        "content": "Where can i start programming apps? Which language should I learn?",
        "score": 5,
        "upvote_ratio": 0.74,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kxjo8y/app_development_career/",
        "created_utc": "2025-05-28 15:14:25",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx8dpj",
        "title": "CS Degree?",
        "author": "vazqe",
        "subreddit": "learnprogramming",
        "content": "I'm looking into going to college for some type of Computer science or programming degree but i also like how cybersecurity sounds. Would it be smart to start with CS and branch out from there? It looks like it covers all grounds and I can figure out the rest based off of my strengths but im not sure.",
        "score": 4,
        "upvote_ratio": 0.71,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx8dpj/cs_degree/",
        "created_utc": "2025-05-28 04:42:16",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kx5jkn",
        "title": "How would you design a \"relationships\" functionality in a social media app, efficiently?",
        "author": "simonbleu",
        "subreddit": "learnprogramming",
        "content": "Say for example there is a functionality on which you add another person, or several, and it tells you the interactions between you two exclusively and what you share ( say, subreddits, liked or commented posts and stuff like that). How do you do it? Id imagine not by having list of interactions and comparing them, right?",
        "score": 2,
        "upvote_ratio": 0.61,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kx5jkn/how_would_you_design_a_relationships/",
        "created_utc": "2025-05-28 02:11:56",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kwtnj8",
        "title": "Suggestions regarding career",
        "author": "New-Pear4670",
        "subreddit": "learnprogramming",
        "content": "Hey everyone,I'm pursuing a career in **aerospace tech (HPC, AI/ML, CAD/CAE)**, aiming for a **30 LPA+ technical role**. Since I won't have a [B.Tech](http://B.Tech) CS degree from a top institution, I've designed an extremely rigorous 4-year, 6-hour daily self-study curriculum to build deep technical expertise. I'll be combining this with either an **ECE/IT degree from a newer institution** or potentially a **B.Planning degree from a reputed institution.****My Core Self-Study Philosophy:** Build a foundational CS understanding, then specialize heavily in HPC, AI/ML, and computational engineering (CAD/CAE), applying insights from 'A Mind for Numbers' for effective long-term learning. pls reviewDaily Structure Reminder:6 Hours: Dedicated CS Self-Study Time (can be split into multiple blocks, e.g., 2x3 hours, 3x2 hours).**My 4-Year Self-Study Roadmap:****Year 1: Foundational Excellence & Core Programming (Approx. Months 1-12)*** **Goal:** Build unshakeable fundamentals in CS, master initial programming languages, foundational data structures & algorithms (DSA), and core mathematics.* **Key Areas:** * **Math:** Discrete Math, Linear Algebra, Calculus review, Intro Probability & Statistics. * **Programming:** Deep dive into Python and C++ (syntax, OOP, standard libraries). * **CS Basics:** Computer Org & Design (high-level), Linux CLI, Git, Intro to OS & Networking. * **DSA:** Arrays, Linked Lists, Stacks, Queues, Hash Tables, basic Sorting/Searching.* **Representative Projects:** Basic text-based games, simple command-line tools, fundamental DS/Algo implementations, solving easy LeetCode problems.**Year 2: Core CS Deep Dive & Software Engineering Maturity (Approx. Months 13-24)*** **Goal:** Master advanced CS concepts, introduce NoSQL databases, Design Patterns, DevOps tools (Docker, CI/CD), and foundational Distributed Systems. Elevate coding practices.* **Key Areas:** * **Advanced OS:** Process/thread management, memory management, concurrency. * **Advanced Networks:** TCP/IP deep dive, Socket programming. * **Databases:** Advanced SQL, NoSQL (MongoDB, CAP Theorem), Distributed DBs. * **SW Engineering:** Design Patterns, Test-Driven Development, Clean Code, Docker, CI/CD principles. * **Algorithms:** Advanced DSA (Trees, Graphs, DP, Greedy, Backtracking).* **Representative Projects:** Mini Shell, TCP Chat app, distributed key-value store concept, building/containerizing a web app, refactoring with design patterns. Intensify LeetCode practice (medium/hard).**Year 3: Specialization Deep Dive - HPC & AI/ML Fundamentals (Approx. Months 25-36)*** **Goal:** Dive deep into High-Performance Computing (HPC) and Artificial Intelligence/Machine Learning (AI/ML) fundamentals, building substantial projects.* **Key Areas:** * **HPC:** Parallel Programming (OpenMP, MPI for CPU), GPU Architecture & CUDA programming. Performance optimization. * **AI/ML:** Supervised/Unsupervised Learning, Neural Networks basics, Deep Learning (CNNs, RNNs), Data preprocessing. * **Applied Math:** Numerical Methods for Engineers (ODEs, PDEs, linear equations).* **Representative Projects:** Parallelized Matrix Multiplication (OpenMP/MPI), GPU-accelerated image processing (CUDA), implementing ML algorithms from scratch, simple CNN for image classification, basic numerical solver for PDEs.**Year 4: Specialization Mastery & Industry Readiness (Approx. Months 37-48)*** **Goal:** Consolidate knowledge, build 1-2 major, interdisciplinary portfolio-defining projects. Refine skills, focus on performance, and conduct intensive interview preparation.* **Key Areas:** * **Advanced AI/ML:** RL, advanced architectures, model optimization. * **Advanced HPC:** Performance profiling, distributed AI training, cluster management concepts. * **Computational Engineering (CAD/CAE):** CFD/FEA context, applying HPC/AI to aerospace simulations (surrogate models, generative design). * **Professional:** System Design, Research Acumen, Cloud for HPC/ML, Security basics, intense interview prep.* **Representative Projects:** Major project: Parallelized FEA Solver for simple structures (HPC + Numerical Methods). Major project: AI/ML model for aerospace design optimization/simulation prediction. Portfolio polish, mock interviews.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 13,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kwtnj8/suggestions_regarding_career/",
        "created_utc": "2025-05-27 17:43:11",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kw8pvz",
        "title": "What should I focus on over the summer?",
        "author": "Icebow-player",
        "subreddit": "learnprogramming",
        "content": "I'm trying to improve my programming skills this summer and was wondering what I should focus on.I just finished my sophomore year in college for a computer engineering degree and have learned some basic-intermediate C++. I've also dabbled in some Java and HTML before that. Anyone have any recommendations on what would be a good use of my time over the summer. I was thinking maybe trying Leetcode to improve my C++ skills, or learning some Java frameworks.Any advice is appreciated. Thanks!",
        "score": 4,
        "upvote_ratio": 0.84,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1kw8pvz/what_should_i_focus_on_over_the_summer/",
        "created_utc": "2025-05-26 23:26:22",
        "extracted_at": "2025-05-30 01:39:37"
    },
    {
        "id": "1kv232l",
        "title": "H-1B visa applications for 2026 drop 25%, hit 4-year low under Trump",
        "author": "Affectionate_Nose_35",
        "subreddit": "cscareerquestions",
        "content": "[H-1B visa applications for 2026 drop 25%, hit 4-year low under Trump | Immigration News - Business Standard](https://www.business-standard.com/immigration/h-1b-visa-applications-for-2026-drop-25-hit-4-year-low-under-trump-125052100808_1.html) The number of H-1B visa applications for the financial year 2026 has fallen to its lowest in four years, according to data from the United States Citizenship and Immigration Services (USCIS). Only 358,737 applications were received this year — a sharp drop from over 480,000 in FY2025 and the lowest since FY2022, which recorded 308,613 applications. Out of these, 120,141 registrations were selected to move forward in the process. The H-1B visa programme, used heavily by Indian IT professionals and US tech firms, grants 85,000 visas annually, including a 20,000 carve-out for those with US master’s degrees.",
        "score": 1207,
        "upvote_ratio": 0.93,
        "num_comments": 292,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv232l/h1b_visa_applications_for_2026_drop_25_hit_4year/",
        "created_utc": "2025-05-25 13:06:05",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktuvxf",
        "title": "Meta is about to start rating more workers as 'below expectations,' internal memo shows",
        "author": "BigShotBosh",
        "subreddit": "cscareerquestions",
        "content": "https://www.businessinsider.com/internal-memo-meta-increases-employees-rated-below-expectations-2025-5",
        "score": 1198,
        "upvote_ratio": 0.98,
        "num_comments": 291,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktuvxf/meta_is_about_to_start_rating_more_workers_as/",
        "created_utc": "2025-05-23 21:18:59",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kv8jzy",
        "title": "Popular college major has the highest unemployment rate",
        "author": "Additional_Sleep_560",
        "subreddit": "cscareerquestions",
        "content": "\"Every kid with a laptop thinks they're the next Zuckerberg, but most can't debug their way out of a paper bag,\" https://www.newsweek.com/computer-science-popular-college-major-has-one-highest-unemployment-rates-2076514",
        "score": 1041,
        "upvote_ratio": 0.95,
        "num_comments": 367,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv8jzy/popular_college_major_has_the_highest/",
        "created_utc": "2025-05-25 17:50:00",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvbrao",
        "title": "At Amazon, Some Coders Say Their Jobs Have Begun to Resemble Warehouse Work",
        "author": "self-fix",
        "subreddit": "cscareerquestions",
        "content": "NYT: Pushed to use artificial intelligence, software developers at the e-commerce giant say they must work faster and have less time to think. Others welcome the shift.https://www.nytimes.com/2025/05/25/business/amazon-ai-coders.html",
        "score": 895,
        "upvote_ratio": 0.95,
        "num_comments": 195,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvbrao/at_amazon_some_coders_say_their_jobs_have_begun/",
        "created_utc": "2025-05-25 20:07:40",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx47zm",
        "title": "Until salaries start crashing (very real possibility), people pursuing CS will continue to increase",
        "author": "McCringleberried",
        "subreddit": "cscareerquestions",
        "content": "My background is traditional engineering but now do CS. The amount of people I know with traditional engineering degrees (electrical, mechanical, civil, chemical, etc) who I know that are pivoting is increasing. These are extremely intelligent and competitive people who arguably completed more difficult degrees and despite knowing how difficult the market is, are still trying to break in. Just today, I saw someone bragging about pulling 200k TC, working fully remote, and working 20-25 hours a week. No other profession that I can think of has so much advertisement for sky high salaries, not much work, and low bar to entry.",
        "score": 676,
        "upvote_ratio": 0.86,
        "num_comments": 350,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx47zm/until_salaries_start_crashing_very_real/",
        "created_utc": "2025-05-28 01:06:13",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwti2h",
        "title": "Rejected because I was too willing to leave my current role",
        "author": "wh1psnake",
        "subreddit": "cscareerquestions",
        "content": "I joined a startup from FAANG a couple months and overall like the work and high impact/ownership but some of the other parts of the job are less desirable (lower pay, commute, RTO, etc). A recruiter reached out to me on LinkedIn about a role at a unicorn that seemed like a perfect fit (tech stack, better location, higher pay) I took the call and explained my situation and it went great, recruiter liked me and I was excited about the role and company. Got rejected the next day because the hiring manager was worried that I was willing to leave my current role in such a short amount of time. I get that they’re worried I might jump ship after joining, but seems wack when they’re the one who reached out? What do they expect me to do, respectfully decline the phone call because I just started a new role? What’s the alternative? Don’t mention I just started a new role and what, claim I’m still at my old company? Or claim that I’m unemployed? How do you think I should handle recruiter calls and interviews going forward?",
        "score": 586,
        "upvote_ratio": 0.96,
        "num_comments": 114,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwti2h/rejected_because_i_was_too_willing_to_leave_my/",
        "created_utc": "2025-05-27 17:37:12",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktrprg",
        "title": "Booz Allen lays off 2500 employees.",
        "author": "metalreflectslime",
        "subreddit": "cscareerquestions",
        "content": "https://www.wsj.com/business/earnings/booz-allen-hamilton-revenue-outlook-below-estimates-96a293cc",
        "score": 583,
        "upvote_ratio": 0.96,
        "num_comments": 164,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktrprg/booz_allen_lays_off_2500_employees/",
        "created_utc": "2025-05-23 19:03:17",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kupmqq",
        "title": "Why is the industry ok with this?",
        "author": "flash_am",
        "subreddit": "cscareerquestions",
        "content": "I have been a PHP Developer for 10+ years. Last year, I left my company after being presented with scenarios that went against my ethics and being told there would never be room for growth for me again.So, I have been applying to 100s of jobs, have had probably 20 interviews at least, but a recent interview really brought up a question for me. This interview required a 4 hour coding assessment. It was sent to the final 15 candidates. That's 4 hours of wasted time for 14 people. Why is the industry OK with wasting 56 hours of people's time like this? Why isn't there at least some sort of payment for all those hours?I understand coding assessments are common place, but I knew going in it was very unlikely those 4 hours would actually get me the job. A week later, and wouldn't you know it, I was right and was passed on. Just curious what causes this to be fine for everyone?",
        "score": 578,
        "upvote_ratio": 0.91,
        "num_comments": 238,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kupmqq/why_is_the_industry_ok_with_this/",
        "created_utc": "2025-05-25 00:12:26",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxvb65",
        "title": "Good news - Section 174 getting rolled back for domestic labor!",
        "author": "fuzzyp44",
        "subreddit": "cscareerquestions",
        "content": "In the \"Big Beautiful Bill\" they are changing the rules so that domestic companies can deduct R&D (aka software engineering salaries) immediately against profits for tax years 2025-2029.This is huge especially for the start-up space, as the previous section 174 rules caused large tax bills for non-profitable companies.",
        "score": 498,
        "upvote_ratio": 0.87,
        "num_comments": 196,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxvb65/good_news_section_174_getting_rolled_back_for/",
        "created_utc": "2025-05-28 23:01:47",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxvy1z",
        "title": "Will I get fired?",
        "author": "GovernmentJolly653",
        "subreddit": "cscareerquestions",
        "content": "Told a senior developer on slack in a public channel, after a long discussion with him where he refused to come with arguments, that his proposed changes (on a feature I implemented) \"will actually make the codebase worse.\"This escalated to a big thing.I'm a new hire on probation (probationary period/trial period) and I got hints that this way of communicating is a red flag.Is my behaviour problematic and will they sack me?",
        "score": 397,
        "upvote_ratio": 0.87,
        "num_comments": 247,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxvy1z/will_i_get_fired/",
        "created_utc": "2025-05-28 23:30:24",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktpdje",
        "title": "Why do people here make Amazon seem like a walk in the park? My final round was hard as hell.",
        "author": "Vivid_Tennis6983",
        "subreddit": "cscareerquestions",
        "content": "So I just finished my onsite for Amazon L5 and I already have a couple of offers but the this on-site was harder than most of the companies I have been through. or my experience at least.I went in kind of relaxed because I had assumed with the way people disrespect amazon and how they make it seem like its easy, but I got absolutely bodied I think.Is the amazon hate and easiness exaggerated here, or was that just me?",
        "score": 354,
        "upvote_ratio": 0.94,
        "num_comments": 96,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktpdje/why_do_people_here_make_amazon_seem_like_a_walk/",
        "created_utc": "2025-05-23 17:27:52",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxkbsi",
        "title": "I just bombed a first round technical by over-preparing, and I think a lot of you need to hear about it.",
        "author": "garyspzhn",
        "subreddit": "cscareerquestions",
        "content": "I’m a 10YOE dev who talks a big game, i fail interviews from time to time like anyone else but my success rate in recent years is particularly high, so I just tried my hand at a company whose job posting was way too good to be true, passed the initial screener and coding assessment with flying colors, but fumbled the opportunity in the most disheartening way. Here’s the story: The CS job market isn’t as black-and-white as you may imagine, there are still a lot of companies that don’t exactly know what they’re doing, they’ll offer you a competitive salary and put you through the ringer, but they’ll still manage to cut through candidates just by following due process and putting the pressure on them. I’ve been writing PHP for 13 years, and up until 2 years ago I’ve done PHP in production, on-and-off for 10 years, but I naturally moved on to JavaScript, Python, and Java because nobody wants us. In other words, I thought I’ll never see another PHP role again, so I stopped searching for them, stopped calling myself a PHP specialist, stopped reading up on latest versions, and got rusty, then a company that uses PHP found me, and they were offering me an insanely good deal, so I jumped at the role. The online assessment was easy, it was medium leet code that required PHP, and I’m great at PHP, so it took me 10 minutes. The screening interview was even easier, we were supposed to talk for 30 minutes, we spoke for 90 minutes, the guy told me what to expect in the technical interview (because I asked), he mentioned all the standards buzzwords like system design and application design, then went into the details, got more particular, told me to brush up on my redis and Java, MVC frameworks, MySQL and security protocols, so I did that - huge mistake. The technical interview was far more like a “screener” than anything else, we didn’t cover system design as intricately as I thought, a lot of what transpired was a pop quiz with questions like “do you know what traits are?” and “do you know what anonymous functions are and how they’re used?” This was supposed to take 45 minutes, I had him on the video chat for 2 hours, I acted clueless the whole time, not because I didn’t know what half the answers were, but because I didn’t study for a pop quiz, i was shocked, I was nervous, I was stressed, I was angry, and most importantly, I was disappointed in myself, because this was the luckiest break ever, and I ruined it. At one point I was so lost, I was second guessing myself, so he did me a favor and shared a codepen, I passed the little “coding challenge” he looked relieved, said “okay so you know this” then resumed the pop quiz, which again, I bombed. Guess what I did to prepare for this interview? Yep, you guessed it! Leet Code and online lectures. Why did i go this route? Tech forums convinced me the job market is an AI-driven rat race and the hiring manager confirmed the bias for me, but I would’ve passed the technical if I just opened and read PHP documentation like the good old days. So the moral of the story is, do all your general interview prep periodically, and when you get the actual interview, just read the documentation, because you never know what kind of interviewer you’re gonna get. Do not be me.",
        "score": 319,
        "upvote_ratio": 0.9,
        "num_comments": 77,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxkbsi/i_just_bombed_a_first_round_technical_by/",
        "created_utc": "2025-05-28 15:40:35",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktyp1e",
        "title": "Workers need to start suing companies for defamation for these \"not layoffs\" where they say they are firing bad performers.",
        "author": "Legitimate-mostlet",
        "subreddit": "cscareerquestions",
        "content": "It is pretty obvious there is a new trend in tech for past few years where companies have all got on board with this idea of hiding layoffs behind the phrase \"letting go of poor performers\".It is obvious this is not actually happening and they are really just laying off people without calling it that. These types of firing often come with less or no severance than if you were laid off. Also, often times no healthcare coverage paid for that a layoff would provide.But the biggest thing is it comes with you being labelled a \"bad worker\" in the press, which other hiring managers will see. Even though it was just a way to lay you off in secret. If you were not a bad performer, then this is defamation of character and is affecting you financially. Both from losing benefits you would receive from a normal layoff, as well as the potential financial pain that comes from not being hired due to being falsely labeled a \"poor performer\".It is time employees start suing these companies. Most people at these companies can afford to sue as well given their salaries. What do others think?",
        "score": 312,
        "upvote_ratio": 0.88,
        "num_comments": 135,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktyp1e/workers_need_to_start_suing_companies_for/",
        "created_utc": "2025-05-24 00:19:04",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kv9eqy",
        "title": "For those who didn't find a job in tech/software, what are you doing now?",
        "author": "dillpill4",
        "subreddit": "cscareerquestions",
        "content": "New grad. I have some research and internship (sorta) experience but 100 apps in and I still haven't been moved forward with a single application. Just wondering what others are doing in the long term and if pivoting to another industry makes sense. I genuinely don't want to keep digging in the steaming pile of shit that is the tech industry in front of me if it's not worth it",
        "score": 306,
        "upvote_ratio": 0.96,
        "num_comments": 191,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv9eqy/for_those_who_didnt_find_a_job_in_techsoftware/",
        "created_utc": "2025-05-25 18:25:34",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kv6wdg",
        "title": "Hiring managers: how’s the market right now?",
        "author": "shankar86",
        "subreddit": "cscareerquestions",
        "content": "I’m a software engineer with 12 years of production experience at mid-size SaaS shops. Based in Atlanta. I’m cleaning up the resume and want a gut check on the 2025 job market from people who actually screen candidates.**If you hire or interview engineers, I’d love your take on:**1. **Application volume** Rough ballpark per opening: dozens, hundreds? Any trend since late 2024?2. **Instant resume killers** Typos, messy job hops, obvious AI fluff, whatever makes you hit \"deny\"?3. **Interview deal-breakers vs. things that really pop** Behaviors or answers that sink an otherwise solid candidate, and anything that pushes someone to the front of the line.",
        "score": 271,
        "upvote_ratio": 0.92,
        "num_comments": 213,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv6wdg/hiring_managers_hows_the_market_right_now/",
        "created_utc": "2025-05-25 16:39:46",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kw07yp",
        "title": "Why is job market for backend generally considered better than frontend?",
        "author": "tuckfrump69",
        "subreddit": "cscareerquestions",
        "content": "title",
        "score": 270,
        "upvote_ratio": 0.89,
        "num_comments": 213,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kw07yp/why_is_job_market_for_backend_generally/",
        "created_utc": "2025-05-26 17:28:46",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kyn5cj",
        "title": "LinkedIn lays off 281 workers in California, including slew of Bay Area engineers",
        "author": "GeneralBend1",
        "subreddit": "cscareerquestions",
        "content": "https://www.sfgate.com/tech/article/linkedin-layoffs-california-including-engineers-20351870.php>Droves of software engineers are losing their jobs, the WARN filing shows. In Mountain View alone, three broad categories of software engineer, including titles with “staff” and “senior” in the name, will see 71 such positions cut. That doesn’t include coding specialists working on machine learning, devops and systems infrastructure, a scattering of whom are also being let go.",
        "score": 289,
        "upvote_ratio": 0.96,
        "num_comments": 58,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kyn5cj/linkedin_lays_off_281_workers_in_california/",
        "created_utc": "2025-05-29 21:44:41",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kv4mcw",
        "title": "Are wages going down?",
        "author": "StillPurpleDog",
        "subreddit": "cscareerquestions",
        "content": "Since AI is getting better and there’s an over saturation of people studying and working in cs. Does this mean wages will go down?",
        "score": 217,
        "upvote_ratio": 0.86,
        "num_comments": 132,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv4mcw/are_wages_going_down/",
        "created_utc": "2025-05-25 15:01:21",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwq4ml",
        "title": "Does experience eventually start working against you?",
        "author": "Cool_Difference8235",
        "subreddit": "cscareerquestions",
        "content": "I have been a Dev for over ten years but don't consider myself a senior and have never been a lead. Certainly not a manager. I like being part of the team and coding. I'm hearing this is prime \"Aged Out\" territory. Will managers really not hire people like that for mid-level roles? I'll do junior stuff and take low end salaries - but saying that at an interview does not help you...",
        "score": 200,
        "upvote_ratio": 0.99,
        "num_comments": 158,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwq4ml/does_experience_eventually_start_working_against/",
        "created_utc": "2025-05-27 15:26:31",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx9nfm",
        "title": "Mid-level to Seniors: What are you doing to future-proof?",
        "author": "Daburtle",
        "subreddit": "cscareerquestions",
        "content": "What has been is not what will be. Dun dun dunnnnn. Those that have been working for a few years now, what are your future plans for your career as we face the incoming AI onslaught? It's wild witnessing such a paradigm shift that will literally affect almost every aspect of our lives. We got a bit of a sneak preview, working in tech. Now AI tools are becoming more mainstream and everyone that's trying to make a buck is rushing to either incorporate AI into their product, or make a new AI product. At some point the barrier to entry for coding will be completely mitigated by AI. As long as you can articulate the concepts in natural speech, your idea can be created. We're not there yet, but quickly trending toward it. I personally try to take all the AI hype with a grain of salt, especially with claims like \"AI wrote 30% of Google's new code\" and such that talk up the very same products they're trying to sell. But it can still do plenty of coding, I'm sure most of us know well by now. At this point you have to embrace or get left behind, it seems. Maybe some don't agree with this notion? I'm at 6 YOE and would like to continue in this industry as long as I can. I'm just not sure where on the spectrum of 'get good at React' and 'get good at spoon feeding chatgpt your project requirements\" we're at. Developer roles will look different in 5 years. So, just curious how others are approaching things. Do you feel comfortable in your current role? Continuing to learn new languages/frameworks/whatever as needed for the job? Or focusing on building an army of AI agents? Have you embraced AI into your workflow, or been resistant? Any long term projections?",
        "score": 167,
        "upvote_ratio": 0.86,
        "num_comments": 130,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx9nfm/midlevel_to_seniors_what_are_you_doing_to/",
        "created_utc": "2025-05-28 05:58:06",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwu66r",
        "title": "How to Nail Any System Design by a Staff Engineer at OpenAI",
        "author": "Organic-Pipe-8139",
        "subreddit": "cscareerquestions",
        "content": "I just did another mock interview with another Staff Engineer from Open AI I’d argue this is the near perfect solution for Design K Leaderboard for Facebook comments or videos. To be honest the design was so impressive, I was struggling to keep up.Here is the full video: [https://www.youtube.com/watch?v=zhyzIBVEIjo&](https://www.youtube.com/watch?v=zhyzIBVEIjo&)So this is exactly how a person of this caliber nailed the interview step by step:What I really liked is how he handled the ambiguity of the problem. He kept asking clarifying questions, gradually narrowing down what exactly the system needed to do. He started by defining the scope, deciding to track trending content globally and focusing mainly on real user reactions (ignoring edge cases like bot farms). He emphasized the need for real-time or near real-time updates, especially important when people refresh their pages a lot.He moved on to data modeling and decided to track each event (like user reactions) with details like user ID, post ID, reaction type, and timestamp (this one was critical as he spent an incredible amount of time later on discussing how bad clocks really are in a distributed system). Importantly, each user only has one reaction per post at any time, which simplifies some of the complexity.Then he dove into the scaling challenges. He chose a regional approach for data handling, using local timestamps for consistency within each region, and came up with this clever \"hot/cold\" key strategy. Basically, popular (\"hot\") posts update almost instantly, while less popular (\"cold\") posts don't need frequent updates. Regions share their top posts periodically to keep the global leaderboard updated.Interviewee didn't tie himself down to a specific database or any tools in general. Unlike mid level engineers, he actually used zero tools at all and just kept the interview on the conceptual level. He even mentioned a custom solution might be better than something traditional, highlighting using write-ahead logs and processing events separately from aggregating them. I bet this might be because he spent most of his career at Google (Youtube & Spanner) as well as Meta and OpenAI where tools are mostly proprietary and made in house.He implicitly acknowledged the CAP theorem, but explained that real systems don’t work like research papers referring to CRDB aka CockroachDB, which claims to be both available & consistent. Even when it “feels like” consistency is important, you almost always want to prioritize availability and default eventual consistency rather than absolute consistency. This practical decision means the system stays reliable even if it's not theoretically perfect.He showed how practical trade-offs matter more than absolute precision. Losing or misordering a small percentage of events is okay if it means the system stays fast and scalable.Interviewee leveraged the idea of data distribution, noting most posts have low engagement, while a few blow up. This influenced his \"hot/cold\" strategy, optimizing resources.One subtle yet powerful idea he stressed was \"monotonicity.\" By ensuring updates always move in one direction (like engagement always increasing), the system becomes much simpler to reconcile and scale.Finally, his incremental approach to design really stood out. He started broad, refined step by step, and wasn't afraid to revisit decisions. Overall, it's one of the best example of how real-world system design works and how a true staff engineer really behaves like. Managing complexity and making smart trade-offs rather than trying to build a theoretically perfect system. I definitely learned a ton from this one as an interviewer, but curious to hear what you all might think. TL;DR\\- Ask questions, don't make assumptions, don't use tools mindlessly, and use the experience you got on the job to impress the interviewer on the design.",
        "score": 156,
        "upvote_ratio": 0.87,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwu66r/how_to_nail_any_system_design_by_a_staff_engineer/",
        "created_utc": "2025-05-27 18:03:07",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kygisq",
        "title": "Is clean code a lost cause?",
        "author": "throwaway7789778",
        "subreddit": "cscareerquestions",
        "content": "I have 20 years of experience. Started as an infrastructure engineer (CCNP, MCSE, etc). Moved to development after 7 years of public and private sector consulting. Focused on whatever was hot at the time... BI/DW, Devops, IOT, architecture and orchestration. For the last 5 years I've been deeply engrained in technical debt and fragile code remediation and code architecture (not service, infra, or application orchestration architecture.. though I'm well experienced in those domains.. but deep raw internals and the architecture in-app). At around 2020 there seemed to be a solid push in the industry to move towards scalable, maintainable systems. I've saved / mitigated millions of dollars worth of the technical debt for companies by implementing standards, proper design patterns, reusable scalable internal code repositories, etc.But recently I've noticed colleagues... Even the grey beards, vendors, and the industry as a whole go \"we don't really give a shit anymore\". Vendors come in, dump some shit python, works, call it done. No concern for future state, maintainability, scaling. And everyone goes cool that was fast let's get more.Is clean code dead? It was difficult to convince the c-suite or board in the past that a modernization and technical debt remediation project and continuous improvement initiative was warranted, now those folks are being sold the idea that AI will let an intern create massive value streams. I've sat in those meetings and they are selling a wild idea as always but the ramifications are far removed from executive leadership ls understanding.If clean code is pretty much toast, I suppose a pivot to just doing orchestration is probably in my future. Then when all this shit blows up in a few years, I suppose it would be time to make bank going and fixing it all.Or am I just experiencing a culture transition that isn't negative as it seems like we've had so many times before? Maybe the gang of four isn't relevant anymore and design patterns should be considered a thing of the past. Embrace script it and go philosophy. I could do that I suppose.",
        "score": 161,
        "upvote_ratio": 0.93,
        "num_comments": 106,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kygisq/is_clean_code_a_lost_cause/",
        "created_utc": "2025-05-29 17:20:02",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kur4bn",
        "title": "I hope vibe coding has not turned into an attempt to re-energize the \"learn to code\" movement",
        "author": "ExpWebDev",
        "subreddit": "cscareerquestions",
        "content": "Had to re-post to change the title to be more accurate.Vibe coding got out of control and turned into something it wasn't meant to be. I hope we don't see micro-courses on \"learning to vibe code\" which will make bootcamps look like legit 4 year colleges",
        "score": 148,
        "upvote_ratio": 0.87,
        "num_comments": 61,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kur4bn/i_hope_vibe_coding_has_not_turned_into_an_attempt/",
        "created_utc": "2025-05-25 01:35:20",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxnyn7",
        "title": "Bill Gates vs AI 2027 predictions",
        "author": "earlgreyyuzu",
        "subreddit": "cscareerquestions",
        "content": "Bill Gates predicted recently that coder is one of the jobs that will not be automated by AI (and that doctors will be). However, the AI 2027 paper authors are confident that coding is one of the first jobs to be extinct. How could their predictions be totally contradictory? Which do you believe?",
        "score": 137,
        "upvote_ratio": 0.81,
        "num_comments": 156,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxnyn7/bill_gates_vs_ai_2027_predictions/",
        "created_utc": "2025-05-28 18:03:47",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktuxoy",
        "title": "Just Got Blindsided by a Layoff",
        "author": "JawRool",
        "subreddit": "cscareerquestions",
        "content": "I don't know exactly what to do or where to start preparing for interviews. I'm terrible at resumes. I've only had one job in the field at 2.5yoe that I got because I did a coding bootcamp and I knew the owner personally from my last line of work. I'm tied into a lease for another year in a small-ish city in my state.Is there a good resource to start? I know I should do the NeetCode 150 or whatever it is. Sorry still in shock.",
        "score": 137,
        "upvote_ratio": 0.9,
        "num_comments": 41,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktuxoy/just_got_blindsided_by_a_layoff/",
        "created_utc": "2025-05-23 21:21:09",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ky3l5w",
        "title": "Why is the job market in India still bad though you guys are saying all the jobs are getting offshore to India?",
        "author": "imwriter1",
        "subreddit": "cscareerquestions",
        "content": "Like, the availability of jobs seems worse off now than before. Barely any interview calls and stuff despite applying at the same frequency. If you check r/developersindia you'd see the same thing. Unless we've had an exponential growth in software engineers since the last year, things have got worse in India for IT than anything.... Do share your opinions about this situation.",
        "score": 133,
        "upvote_ratio": 0.75,
        "num_comments": 143,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ky3l5w/why_is_the_job_market_in_india_still_bad_though/",
        "created_utc": "2025-05-29 06:15:51",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktz2xa",
        "title": "Is the chance of getting a job for mediocre new grads effectively zero",
        "author": "throwaway10015982",
        "subreddit": "cscareerquestions",
        "content": "My degree just cleared and will be awarded soon so I'm genuinely wondering if It's Over For New Grads. I realized that I currently don't know what to do. I don't really have anything to put on my resume. I don't even understand what is considered a \"reasonable\" project. I've known people growing up who were bonkers good at programming, like building up a basic 3D engine from scratch as a teenager. Is that where you should be? I've been told that no internships is essentially auto reject where I'm at.I'm glad I didn't pay anything for my degree but it's really weird having my family be proud of me realizing that I'm probably just going to keep working the same shitty retail job forever. I don't have particularly high salary expectations either, for the Bay Area I'd settle for anything at or above $70,000 lol...I've been looking at different careers my whole last semester and just considered my CS degree as \"personal enrichment\" and waffled through it knowing there weren't really any employment opportunities for the average person but it's weird thinking about how you're completely soft locked out of the industry if you don't do everything right. If I wanted that I would have gone into finance or something.Whatever.",
        "score": 114,
        "upvote_ratio": 0.88,
        "num_comments": 155,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktz2xa/is_the_chance_of_getting_a_job_for_mediocre_new/",
        "created_utc": "2025-05-24 00:39:18",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwm0y2",
        "title": "Why do CS students and SWEs care about being “passionate” about CS?",
        "author": "Toasted_FlapJacks",
        "subreddit": "cscareerquestions",
        "content": "In your CS classes and on this sub you’ll hear how you have to be passionate to make it in CS, and if you’re not passionate, you’re likely to get bored, burn out, or worse.I’m still relatively early (6 YOE) in my career, and I’d consider it a successful start so far, but I would neither say that I’m passionate nor here for just the money.I do like CS, and I enjoy problem solving and building technical skills at work, but my energy is focused on improving to be better at work and my career.So why is it pushed so heavily that you need to be passionate about CS to succeed as a SWE?Let me note that this isn’t a knock on those that have been coding since they were 12 or those that just love working on side projects outside of work, but can we stop pushing the idea that you need to be like these people to succeed as a SWE? It’s just not true.EDIT: By passionate I'm referring to passion being equated to being a SWE even if it didn't pay well.",
        "score": 105,
        "upvote_ratio": 0.77,
        "num_comments": 149,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwm0y2/why_do_cs_students_and_swes_care_about_being/",
        "created_utc": "2025-05-27 12:30:18",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuiv7b",
        "title": "7 yoe full stack dev, burnt out after 100s of applications, thinking of giving up tech, Which field can I pivot into ?",
        "author": "maknom_66",
        "subreddit": "cscareerquestions",
        "content": "I’ve been doing full stack dev for 7 years. Nothing flashy, just solid, real-world experience: frontend, backend, a bit of devops. The kind of stuff that keeps products running. No flashy startups or MAANG names on my resume. Just regular jobs at regular companies.While I am still currently employed, I wanted to increase my income due to rising expenses and no appraisal since last 2 years, so I started looking for a switch. Over the past 3 months, I’ve applied to hundreds of jobs ( I know it's not enough ). I’ve rewritten my resume, practiced for interviews, tried reaching out recruiters on linkedin, tried to get some freelance work. Still, nothing worked out, the responses are either ghosting or rejections, or nothing at all.While I've built some solid products in my current company, I have no idea how to use it to stand out. I never got the time to work on any side projects which I can showcase. I know for the matter of fact and have accepted it that my resume will never stand out amongst 100s if not 1000s of applications on every job post.I’m not the type to post on X or LinkedIn every day to build a personal brand ( I did started a youtube channel though). I don’t have what it takes to contribute to open source just to maybe get noticed ( I know open source contribution is not meant to seen as a way to get job, but it is what it is). I just wanted to quietly do good work, but that doesn’t seem to count for much anymore.I feel like I’m shouting into the void. I used to love building things, but now it just feels like I’m stuck. No one wants experience unless it’s from a specific company or school maybe.I’m seriously wondering if it’s time to walk away, and leave tech entirely. I don’t even know what I’d do instead, and that scares me.Has anyone been through this? Which field do you think I can pivot into as a tech guy, so that I can earn almost similar and more in the longer run ?p.s: I took help of gpt to write this post, to express what I am actually feeling.",
        "score": 102,
        "upvote_ratio": 0.86,
        "num_comments": 45,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuiv7b/7_yoe_full_stack_dev_burnt_out_after_100s_of/",
        "created_utc": "2025-05-24 18:49:48",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvod9h",
        "title": "Laid off C++/Unreal Engine dev, unsure where to go next",
        "author": "PRAXULON",
        "subreddit": "cscareerquestions",
        "content": "Can't sleep, felt like posting. I have about 6 years of experience, multiple shipped titles with AA/AAA studios. Issue is I've pretty much only programmed in Unreal Engine and because of that I'm at a disadvantage looking outside the industry, but the game industry is more on fire than the rest of tech right now. Seems like the only option is grinding leetcode and hoping for the best, but holy fuck I'm rusty. I used to be a good Lil leetcode robot when I graduated but now God damn. Not sure what I can do to upskill or what to reskill into. I have a somewhat decent contract gig right now but when that ends idk what Im gonna do lol.",
        "score": 100,
        "upvote_ratio": 0.95,
        "num_comments": 72,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvod9h/laid_off_cunreal_engine_dev_unsure_where_to_go/",
        "created_utc": "2025-05-26 07:23:29",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kv1fuo",
        "title": "Do any of you work with someone 60+ that still codes on a daily basis?",
        "author": "Celcius_87",
        "subreddit": "cscareerquestions",
        "content": "Im a senior dev and don’t plan to move up the ladder any higher. I’m thinking about someday when I get older (60) but I’m not quite ready to retire yet (65) and what life would be like coding on a daily basis, working with people far younger, etc…Are any of you already at this point in life, or work with someone who is?Do they still enjoy coding or the job, or do they seem disinterested and burned out?I know many people at that age have either moved into management or higher engineering roles like architect/principal so just wondering what it’s like to still be coding on a daily basis at that age.",
        "score": 99,
        "upvote_ratio": 0.97,
        "num_comments": 105,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv1fuo/do_any_of_you_work_with_someone_60_that_still/",
        "created_utc": "2025-05-25 12:32:36",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ku098r",
        "title": "What’s the funniest comment you’ve ever found in Code?",
        "author": "An_Engineer_Near_You",
        "subreddit": "cscareerquestions",
        "content": "Like in the documentation describing a class or function?",
        "score": 84,
        "upvote_ratio": 0.9,
        "num_comments": 100,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ku098r/whats_the_funniest_comment_youve_ever_found_in/",
        "created_utc": "2025-05-24 01:41:50",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvrs94",
        "title": "What's the advice you actually need?",
        "author": "capn-hunch",
        "subreddit": "cscareerquestions",
        "content": "How can people with more experience help you? Tell us directly. I may not be the one to help, but someone who knows what you need may see it.Edit: please upvote for visibility, let’s help folks out",
        "score": 75,
        "upvote_ratio": 0.92,
        "num_comments": 53,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvrs94/whats_the_advice_you_actually_need/",
        "created_utc": "2025-05-26 11:14:04",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxpte1",
        "title": "Amazon or Apple New Grad",
        "author": "thename0fthewind",
        "subreddit": "cscareerquestions",
        "content": "Got a new grad SDE offer from Amazon (Seattle, \\~$170k TC) and recently finished final rounds at Apple (Austin, IS&T org, Java stack, expecting slightly lower comp).I need to make a decision in case Apple decides to extend me an offer.What would you choose if you were optimizing for resume growth, long-term opportunities, and work-life balance? Also, just how does Seattle compare to Austin?I prefer to work on something that'll be useful, and not some obscure tech stack. But honestly, I'm not too picky.Appreciate any insight. Thanks!",
        "score": 72,
        "upvote_ratio": 0.71,
        "num_comments": 81,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxpte1/amazon_or_apple_new_grad/",
        "created_utc": "2025-05-28 19:17:12",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvcv4u",
        "title": "Is it worth it to study a field in computer science nowadays?",
        "author": "EstablishmentNo816",
        "subreddit": "cscareerquestions",
        "content": "I plan on studying either cybersecurity or software engineering but considering the recent developments in AI and the horror stories I hear about CS majors being homeless, I’m wondering if I should study this or go into a trade.",
        "score": 70,
        "upvote_ratio": 0.72,
        "num_comments": 151,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvcv4u/is_it_worth_it_to_study_a_field_in_computer/",
        "created_utc": "2025-05-25 20:56:32",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuiqe7",
        "title": "Do you just continuously grind/study while working?",
        "author": "Dazzling-Rooster2103",
        "subreddit": "cscareerquestions",
        "content": "With the risk and fear of layoffs looming over everyone, do you just continuously grind and study for interviews? I am coming up on a year at my current job and have not touched any interview style questions in a while, and am getting a little scared.",
        "score": 63,
        "upvote_ratio": 0.86,
        "num_comments": 59,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuiqe7/do_you_just_continuously_grindstudy_while_working/",
        "created_utc": "2025-05-24 18:43:45",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwkzjx",
        "title": "Is it possible to get a job as a 1 YoE quitter in this market?",
        "author": "gamerVapeGod",
        "subreddit": "cscareerquestions",
        "content": "I got a decent job out of college paying 120 in HCOL. The issue is that the work has been very demanding. I’ve had to work nights and fully work for many weekends for the last 3 months of my job. Before that I was also sometimes working weekends and staying in the office very late too while still not meeting deadlines. I’m coming up on 1 YoE at the company. I’m feeling burnt out from the job. The project that my team was pushed to deliver too quickly is getting delivered this week and I’ve been on PTO for the past 2 weeks after telling them I’m tired of working every weekend. I think when I come back I’ll continue to have to work many weekends and nights and don’t want to keep the company a chance. We are very likely going to have a layoff in August (they have layoff every 6 months/ 1 year) and I think I may try to get laid off. If they don’t do it I may just quit if I continue to have to work long hours. Will it be possible for me to re enter the industry after only 1 YoE? I should also mention I have a 2.5 GPA so new grad applications that ask GPA won’t work. I’m thinking after I leave I’ll spend some time traveling and trying other non traditional careers to try and leave the industry but know it likely won’t work out. If I have 1 YoE and a one year gap will it be possible to get any swe job? I have a few connections from internships but those companies are all having tons of layoffs.",
        "score": 56,
        "upvote_ratio": 0.8,
        "num_comments": 56,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwkzjx/is_it_possible_to_get_a_job_as_a_1_yoe_quitter_in/",
        "created_utc": "2025-05-27 11:35:40",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxggai",
        "title": "CTO giving me a raise, but still underpaid. Do I bring that up?",
        "author": "leghairdontcare59",
        "subreddit": "cscareerquestions",
        "content": "My CTO is hiring several new senior engineers and I am part of the interviewing team. I see on our LinkedIn post the job is being advertised paying $140-150k. I am making around $105k with a $10k bonus. My buddy is my team lead and he tells me CTO is going to give me a raise to put me at 115 base. I appreciate the bump but I’m pretty upset about it. I know how these things are, you have to job hop to get more since internal raises are shit. But since I know what is being advertised, I really wanna be like “hey prick, why are you not paying me similar to what the new guys are getting. I mean I’ve been here 4 goddamn years and I’m the one onboarding and mentoring all these new guys, and doing way more work than what I’m supposed to be doing”. Anyways I obviously won’t call him a prick. In fact, I’m a total pushover and always way too nice. But when he mentions the pay bump, I really want to say I want more without coming off too strong. Is this a bad idea? (Yes I’m trying to get the heck out of here, been job hunting too long to admit)",
        "score": 57,
        "upvote_ratio": 0.85,
        "num_comments": 47,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxggai/cto_giving_me_a_raise_but_still_underpaid_do_i/",
        "created_utc": "2025-05-28 12:59:52",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxrz3a",
        "title": "Would you work for the big tech companies if they had mediocre salaries?",
        "author": "Arckonic",
        "subreddit": "cscareerquestions",
        "content": "I want to know what motivates people to want to join large tech companies if salary wasn't part of the equation. This question can be answered by anyone. Ex employees, students, or people who are passionate of programming.Is it truly passion and excitement for the future that drives you to work for them? Is it for the status or prestige that comes with working for them? Do you believe that their vision is good for the future? Do you think that the people who work for them are some of the most creative and hardworking people in the world?",
        "score": 52,
        "upvote_ratio": 0.79,
        "num_comments": 105,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxrz3a/would_you_work_for_the_big_tech_companies_if_they/",
        "created_utc": "2025-05-28 20:42:50",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxa9h9",
        "title": "Absolutely Terrified for my future and career.",
        "author": "timehascomeagainn",
        "subreddit": "cscareerquestions",
        "content": "I’ve been feeling lost and pretty low for the past few years, especially since I had to choose a university and course. Back in 2022, I was interested in Computer Science, so I chose the nearest college that offered a new BSc (Hons) in Artificial Intelligence. In hindsight, I realize the course was more of a marketing tactic — using the buzzword \"AI\" to attract students.The curriculum focused mainly on basic CS concepts but lacked depth. We skimmed over data structures and algorithms, touched upon C and Java programming superficially, and did a bit more Python — but again, nothing felt comprehensive. Even the AI-specific modules like machine learning and deep learning were mostly theoretical, with minimal mathematical grounding and almost no practical implementation. Our professors mostly taught using content from GeeksforGeeks and JavaTpoint. Hands-on experience was almost nonexistent.That said, I can’t blame the college entirely. I was dealing with a lot of internal struggles — depression, lack of motivation, and laziness — and I didn’t take the initiative to learn the important things on my own. I do have a few projects under my belt, mostly using OpenAI APIs or basic computer vision models like YOLO. But nothing feels significant. I also don’t know anything about front-end or back-end development. I’ve just used Streamlit to deploy some college projects.Over the past three years, I’ve mostly coasted through — maintaining a decent GPA but doing very little beyond that. I’ve just finished my third year, and I have one more to go.Right now, I’m doing a summer internship at a startup as an ML/DL intern, which I’m honestly surprised I got. The work is mostly R&D with a bit of implementation around Retrieval-Augmented Generation (RAG), and I’m actually enjoying it. But it's also been a wake-up call — I’m realizing how little I actually know. I’m still relying heavily on AI to write most of my code, just like I did for all my previous projects. It’s scary. I don’t feel prepared for the job market at all.I’m scared I’ve fallen too far behind. The field is so saturated, and there are people out there who are far more talented and driven. I have no fallback plan. I don't know what to do next. I’d really appreciate any guidance — where to start, what skills to focus on, which courses or certifications are actually worth doing. I want to get my act together before it's too late. Honestly, it feels like specializing this early might have been a mistake.",
        "score": 46,
        "upvote_ratio": 0.95,
        "num_comments": 25,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxa9h9/absolutely_terrified_for_my_future_and_career/",
        "created_utc": "2025-05-28 06:38:10",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kw8bep",
        "title": "Going back to school for computer science.",
        "author": "Ditysora4589",
        "subreddit": "cscareerquestions",
        "content": "Good day all. I'm on my way to start school by fall this year and looking at the computer science degree. I'm just nervous about all the doom and gloom of the industry. It feels uneasy knownthat the only thing I'd he interested in getting a degree in is potentially worthless. Is the fear well warranted? Should I consider something else? I really want this. Any advice will be much appreciated.",
        "score": 43,
        "upvote_ratio": 0.73,
        "num_comments": 94,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kw8bep/going_back_to_school_for_computer_science/",
        "created_utc": "2025-05-26 23:07:06",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvabv3",
        "title": "Got a new job offer, am I safe to quit?",
        "author": "Cosmodocus",
        "subreddit": "cscareerquestions",
        "content": "So I got a job offer for Frontend developer at a new company and the start date will be on Jun 9th. They’ve sent me the offer letter, which I’ve signed and had signed back by them. I’ve also completed the background screening and payroll, and I’m only waiting for the laptop to be delivered. I plan on quitting my current work tomorrow so that I can finally get some break in between and spend time with my gf. Am I safe to resign from my current role?",
        "score": 45,
        "upvote_ratio": 0.92,
        "num_comments": 24,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvabv3/got_a_new_job_offer_am_i_safe_to_quit/",
        "created_utc": "2025-05-25 19:05:26",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx1ow2",
        "title": "Worth it to get my CS Degree with 5YoE (already have unrelated B.A.)",
        "author": "Common-Pitch5136",
        "subreddit": "cscareerquestions",
        "content": "Basically, title. I'm getting sick of performing well at jobs but feeling like I'm perpetually on the chopping block anyways simply because I didn't get the right degree 10 years ago.Do you think getting my B.S. from WGU will result in a meaningful improvement in how peers see me (which would definitely affect promotion and types of projects/work I'm assigned)?Edit: there seems to be a strong consensus that a masters would be a better option. Will most definitely be looking into the masters now.Edit 2: I initially thought it might be fastest to just get through the bachelor's with my existing credits, but getting a Master's seems like it will be better for my career as many job listings prefer a Master's.",
        "score": 42,
        "upvote_ratio": 0.88,
        "num_comments": 159,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx1ow2/worth_it_to_get_my_cs_degree_with_5yoe_already/",
        "created_utc": "2025-05-27 23:05:37",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kyilbe",
        "title": "Does Amazon in US hire nearly as many fresh grads as it does interns?",
        "author": "WheresPlatypusPerry",
        "subreddit": "cscareerquestions",
        "content": "The number of CS interns Amazon hires is insane. By fresh grads I don't mean the return rate, I mean does it hire freshers in bulk too? If someone has never worked at Amazon",
        "score": 41,
        "upvote_ratio": 0.86,
        "num_comments": 19,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kyilbe/does_amazon_in_us_hire_nearly_as_many_fresh_grads/",
        "created_utc": "2025-05-29 18:41:06",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kts6zr",
        "title": "I wish people wouldn't downplay the effort as developer",
        "author": "MoneySounds",
        "subreddit": "cscareerquestions",
        "content": "Preface: I am still a junior dev in terms of YoE and would consider myself an average-level dev, in that I can read code, debug, navigate through the codebase, figure out what questions to ask. But I wouldn't be able to implement something from scratch with ambiguous to no information or even rewrite or refactor a module.OK. So, i've been browsing this sub for maybe 3 years? and I would sometimes read opinons here or other subs just how easy their software dev job is and that the challenging part is just passing the interview..And I feel like that is a lie.. obviously jobs differ from company to company, project to project etc.. In my case I was lucky enough to deal with good people, managers, business analysts, stuff people would complain about but if there is something I would complain is the work itself.There were moments where I would ask myself wtf am I doing working as a developer because some tasks just made me feel like I was staring at a wall, I had no idea how to approach this issue, I would have an idea but going deeper I would eventually get lost and forget why I went down the path the first place.Right now i'm on a new project which is basically rewrite from scratch of an older project that was done in a couple of years and they want some core functionality implemented in a matter of months..You might think, oh that doesn't sound so bad.. the logic is already there. Well imagine that programming paradigm changed so from functional to OOP and that you need to integrate 3rd party vendors as well.Oh yeah I forgot, nobody really talks about how most projects IRL deviate in some way from the online tutorials you're used to, that medium article you though is relevant to your problem? yeah nah. How about that StackOverflow answer? how inconvenient it can't be applied to that one specific use-case you're dealing with.Right now, i'm questiong myself and my ability to continue a career in this industry, I invested way too much time learning and investing time in another degree will be quite a setback in terms of career growth as well as age. And given the current state of the industry I am counting my blessings but damn can it be challenging.",
        "score": 39,
        "upvote_ratio": 0.78,
        "num_comments": 21,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kts6zr/i_wish_people_wouldnt_downplay_the_effort_as/",
        "created_utc": "2025-05-23 19:23:24",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxvd6d",
        "title": "Is it too risky to switch jobs right now?",
        "author": "Bucs__Fan",
        "subreddit": "cscareerquestions",
        "content": "I was let go and was luckily able to line up a job (that had a bit of a pay decrease) shortly after. I am in the final rounds of interviewing for a job that pays a decent amount more, but think things are going pretty well with my current role and I am getting a little nervous to switch jobs. The market is bad and I am seeing so many people laid off, I am wondering if I should stay with what I have.A new job brings new risks (you have to build your reputation all over) and I would be burning a bridge after only being at a place a few months, and the new place has invested in me so far (given me authority/responsibilities to grow in the role). The new role though would be a significant increase in pay and in an area I enjoy working though. Advice?",
        "score": 38,
        "upvote_ratio": 0.89,
        "num_comments": 22,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxvd6d/is_it_too_risky_to_switch_jobs_right_now/",
        "created_utc": "2025-05-28 23:04:14",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kv7k4v",
        "title": "Graduated December 2022, severely ill since then and am now recovering, what's my best route to get back into the field?",
        "author": "lexiclysm",
        "subreddit": "cscareerquestions",
        "content": "Hi, I (29F, American) graduated college in December 2022 with a BS in computer science. I got severely ill shortly afterwards and was unable to work for the previous two and a half years thanks to that, and I don't have any work experience as a result (no internships either, COVID really screwed me in that regard). I'd really appreciate advice with getting into the workforce now that I'm recovering from my illness. TY in advance!",
        "score": 35,
        "upvote_ratio": 0.9,
        "num_comments": 57,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kv7k4v/graduated_december_2022_severely_ill_since_then/",
        "created_utc": "2025-05-25 17:08:13",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxrbnn",
        "title": "Laid off 2 months ago, getting nothing but rejections - what am I doing wrong?",
        "author": "Moneymoneymoney1122",
        "subreddit": "cscareerquestions",
        "content": "Hey everyone, really struggling here and could use some perspective.**Background:*** Around 2 YOE as Application Engineer at major financial firm* Built data pipelines, APIs, worked with Python/AWS/SQL* Got laid off in March due to performance issues (yeah, not great)* Been unemployed 2 months, doing gig work to survive**Current situation:*** Applied to 200+ positions* Maybe 5 interviews total* Constant rejections or ghosting* Even staffing agencies are passing on me* Market feels absolutely brutal**What I'm considering:*** Taking a sales job just to survive (have interview tomorrow)* Going back to school - maybe community college then OMSCS do* Feel like I'm stuck between \"overqualified for junior\" and \"underqualified for mid-level\"**Questions:**1. Is 2 YOE really that bad in this market?2. Should I take the sales job or keep grinding tech applications?3. Anyone else with similar experience struggling this hard?4. Is going back to school a viable path or just delaying the inevitable?Really beating myself up here. Seeing peers getting promoted while I'm driving Uber is rough. Any advice appreciated.",
        "score": 32,
        "upvote_ratio": 0.86,
        "num_comments": 50,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxrbnn/laid_off_2_months_ago_getting_nothing_but/",
        "created_utc": "2025-05-28 20:17:19",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kw9c6z",
        "title": "Where to go now?",
        "author": "MMForTheWin",
        "subreddit": "cscareerquestions",
        "content": "I’ve been a Native iOS/Android SWE for 15/8 years respectively. I’m currently employed, but I’m getting super stressed about the current/future employment climate. I’m wondering what positions others have pivoted to after spending so much time as a dev. I have no project/people management experience. So I’m trying to figure out what in the world to do.",
        "score": 32,
        "upvote_ratio": 0.86,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kw9c6z/where_to_go_now/",
        "created_utc": "2025-05-26 23:56:41",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktt92w",
        "title": "Is LinkedIn necessary to land a job?",
        "author": "buttercreamramen",
        "subreddit": "cscareerquestions",
        "content": "Almost everyone I know has a LinkedIn account. I only have a fake one as of now I barely use. Personally, I don’t want anybody to know my full name, everywhere I’ve worked, when I graduated and what I’m doing. I’m a private person. But am I missing out on a lot if I *don’t* create one? I would prefer only employers see it but that’s not possible. Would this put me super far behind on potential opportunities? Especially with how things are right now? I’d like to know how many of you had success or no success with this platform.",
        "score": 28,
        "upvote_ratio": 0.85,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktt92w/is_linkedin_necessary_to_land_a_job/",
        "created_utc": "2025-05-23 20:08:48",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kylvbr",
        "title": "Such a strange industry sometimes.",
        "author": "Alcinous122",
        "subreddit": "cscareerquestions",
        "content": "I applied to a well known but mid-tier company and was able to land the first phone screen. The first call didn't go as well as I had hoped. The recruiter stated stated over the phone that the team was downgrading the SE II position to SE I position, but they would keep me in mind if anything came up. Undeterred I emailed back stating that I would be willing to interview for the entry level position. As a bit of a preface, I was recently laid-off with 7 years of SE II experience. I'm not proud, just hungry. The recruiter called back almost immediately after receiving the email sounding surprised that I would still be interested in interviewing for the position. We talk about why the interest in the company, we joke, recruiter is laughing. Then they ask about the tech stack and languages that I am have experience with: Jenkins pipelines, python, c/c++, C#, Jira. Do you have any work experience with Java? Unfortunately I don't, but I do have experience in C# which is another OOP language. \"I'm sorry,\" says the recruiter, \"but the position explicitly requires experience in Java. If something changes, I'll be sure to reach back out to you.\"It is wild to me that 7yoe < specific language experience.",
        "score": 28,
        "upvote_ratio": 0.94,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kylvbr/such_a_strange_industry_sometimes/",
        "created_utc": "2025-05-29 20:52:02",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ky2wpu",
        "title": "Is the oversaturation in web/backend/mobile also happening in other fields?",
        "author": "smo0thcr1m1nal",
        "subreddit": "cscareerquestions",
        "content": "It's pretty clear that there's serious oversaturation and excess supply in the web, backend, and mobile areas of software development. Even junior positions are rarely posted, and when they are, they ask for 5 years of experience. With tons of people graduating from bootcamps or learning frontend from Udemy, these areas have become extremely crowded.What I'm wondering is this:Is this oversaturation specific to these areas, or does the same apply across the entire software industry?For example, what about fields like:CybersecurityEmbedded systems / IoTData scienceMachine learningGame developmentDevOps / Cloud engineeringAre these fields also tough to get into?Or are there still real opportunities for people who are learning and actively working to improve themselves?",
        "score": 26,
        "upvote_ratio": 0.91,
        "num_comments": 36,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ky2wpu/is_the_oversaturation_in_webbackendmobile_also/",
        "created_utc": "2025-05-29 05:31:45",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktq6uw",
        "title": "Question for people in their 20s who were recently hired: where did you find the job listing?",
        "author": "amaxingmilk",
        "subreddit": "cscareerquestions",
        "content": "I just can’t take the LinkedIn data farm anymore, so I’m consulting the oracles here on Reddit. Here’s my situation:I’m 25 years old living in the pacific northwest. I graduated in 2022 with a BS in Mathematics & Computer Science. Currently, I have five years of experience working as an IT consultant. Two of those years were on campus in university, and three of them have been for an MSP after graduation. I’ve also had a hand in a number of DevOps projects at my current employer, so I do have some professional experience with programming and managing CS-related projects.I want to move onto greener pastures. My current job has no path for promotion and I’m so tired of IT help desk… but I’m pretty sure every job listing on LinkedIn is fake. I’m just not sure where I should be looking instead.So, if you’ve recently been in a situation similar to mine and you’ve managed to land a position: where did you find it? Do you work onsite or remote? How long did the process take you?If it helps, I’m especially interested in the field of healthcare and biotech. If you have experience there, I’d love to hear from you. :)Thank you!!",
        "score": 23,
        "upvote_ratio": 0.89,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktq6uw/question_for_people_in_their_20s_who_were/",
        "created_utc": "2025-05-23 18:01:04",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvfiz4",
        "title": "Software Engineer doing Data Engineer and DevOps Engineer tasks",
        "author": "moogedii",
        "subreddit": "cscareerquestions",
        "content": "As a Software Engineer I find myself doing a lot of Data Engineering or DevOps Engineering tasks. I had several questions about this:1. Is this common? Is it preferable? Is it a necessary part of becoming a T-shaped candidate, or is it typically considered a downgrade?2. Can the small amount of data engineering or devops engineering work I have done be used to pivot into one of those fields, about \\~5 years into software engineering?3. Should I be omitting these tasks from my Software Engineering resume?",
        "score": 23,
        "upvote_ratio": 0.87,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvfiz4/software_engineer_doing_data_engineer_and_devops/",
        "created_utc": "2025-05-25 23:00:36",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kukjya",
        "title": "Adaface is the worst exam",
        "author": "controlpad008",
        "subreddit": "cscareerquestions",
        "content": "Had a coding assessment through Adaface. They give you like 6 multiple choice questions and one coding question. I figured that’s not too bad, multiple choice makes it easier? Wrong. I’ve never had a more challenging exam. Each of the multiple choice questions gives you 4 minutes, which goes by VERY fast when youre thinking through the problem. This was a Python exam. They had a multiple choice question that was the typical “what does the following code output?” Except it was a convoluted mess of METACLASSES and DECORATORS! Never thought I would see those on a test. Then the coding question was at least at the level of LC Medium. Anagram type question with multiple arrays. Had to be done efficiently. I kept getting time limit exceeded. And here’s the part that makes me say that Adaface specifically is the worst. They were giving me “advice” to try to put print statements in my code to debug. So I did, ran the tests again… zero visible output. There was no separate console, I clicked around everywhere, either it was hidden somewhere or not explained in the demo but I was out of luck. Couldn’t see what I printed anywhere. Eventually I had to give up and there’s no way I’m getting an interview from this.Good luck out there guys.",
        "score": 20,
        "upvote_ratio": 0.9,
        "num_comments": 0,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kukjya/adaface_is_the_worst_exam/",
        "created_utc": "2025-05-24 20:06:40",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kyiugf",
        "title": "How do you keep work from taking over your life?",
        "author": "elves_cant_dance",
        "subreddit": "cscareerquestions",
        "content": "I have 7 years of work experience as a software engineer. I feel like I should've adapted to \"adult\" full time life by now, but I haven't. I've worked at big tech companies and startups, but the outcome is the same. I take as much vacation as I can, don't have a commute, have taken long breaks between jobs, and don't work outside of 9-5 (or 10-6) or weekends unless I'm oncall, but I still feel like I barely exist outside of work. I start doing my hobbies on autopilot rather than enjoying them. After work, I'm either so mentally drained from tech stuff, socially drained from meetings, or my brain just keeps firing about work stuff even when I don't want it to.My romantic relationships have suffered because of this because I can't find it in me to help with planning, nor am I good at being emotionally present. Even small things like cleaning feel like they take too much mental energy that I don't have. I've found ways to cope -- like getting meal subscription kits instead of cooking, buying a robovac + moving into a smaller space, but I'm only doing that: coping. When I was in college, even in the worst semesters, I was able to cook meals for myself and enjoy the process of cooking, enjoy my hobbies, and not feel constantly drained. I just want that back.I've been in therapy consistently, am on meds for ADHD, and while it's gotten marginally better since I left college, it still sometimes feels awful. A lot of my friends are in similar positions.Do any of yall have advice on how to make this better? How do I make job + life feel less overwhelming and more balanced?",
        "score": 16,
        "upvote_ratio": 0.84,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kyiugf/how_do_you_keep_work_from_taking_over_your_life/",
        "created_utc": "2025-05-29 18:51:06",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuvonc",
        "title": "Software engineer wanting to learn actual hands on skills - what worked for you?",
        "author": "spacecowboy0117",
        "subreddit": "cscareerquestions",
        "content": "Burned out SWE in Arizona. Want a side hustle that teaches me something I can touch, not another screen job.Considering: electrical work, solar installation, woodworking, car services.What trade skills actually made you money?How long to profitability?Good for analytical thinkers?Have $3-5K for training/tools. Evenings/weekends only.Anyone successfully transition from desk job to trades even as a side gig ?",
        "score": 14,
        "upvote_ratio": 0.8,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuvonc/software_engineer_wanting_to_learn_actual_hands/",
        "created_utc": "2025-05-25 06:10:29",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwtw5p",
        "title": "Has anyone moved from SWE to PM with zero experience?",
        "author": "jstaminax",
        "subreddit": "cscareerquestions",
        "content": "I’ve been working as a software engineer for a while, but I’m considering transitioning into a less technical role like project or product management like ideally without fully leaving the software space.I don’t have any formal experience in PM, though. I’m wondering if it’s even realistic to make that move in the current job market, especially without any background in management. Would getting a Scrum certification or something similar help, or is that not really enough?Has anyone here made this kind of transition? I’d love to hear how it went like whether it was a good decision or something you ended up regretting.",
        "score": 13,
        "upvote_ratio": 0.88,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwtw5p/has_anyone_moved_from_swe_to_pm_with_zero/",
        "created_utc": "2025-05-27 17:52:30",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwbg1q",
        "title": "English speaking is holding me back advice based on this report",
        "author": "Sand4Sale14",
        "subreddit": "cscareerquestions",
        "content": "I’m currently trying to improve my English speaking for better job opportunities, especially in tech. I took a short speaking test and got this feedback.The main issues: • I’m using mostly A1–A2 vocabulary • Way too many filler words • Pronunciation still needs improvementI feel like this is holding me back when I try to explain ideas in interviews or during networking.What’s the most efficient way to improve in these specific areas? Any resources, habits, or methods that worked for you? [https://imgur.com/a/rwtBkFC](https://imgur.com/a/rwtBkFC)",
        "score": 14,
        "upvote_ratio": 0.7,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwbg1q/english_speaking_is_holding_me_back_advice_based/",
        "created_utc": "2025-05-27 01:44:20",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwsvqy",
        "title": "Just got a full-time opportunity. Please help me on how to improve healthy attitude.",
        "author": "theepi_pillodu",
        "subreddit": "cscareerquestions",
        "content": "After working for 12 years as a contractor that gets kicked out after 18 or 24 months, just landed a full time employment. Please help me on what areas I have to improve to have a healthy attitude towards my work or company. PS. All my contracting jobs, I have worked until the last week of the contract and gave my best. Took my fair share of work and delivered on time. For the salary I took, I justified.",
        "score": 12,
        "upvote_ratio": 0.94,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwsvqy/just_got_a_fulltime_opportunity_please_help_me_on/",
        "created_utc": "2025-05-27 17:13:30",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuhu65",
        "title": "What kinds of work are Jr developers expected to do these days?",
        "author": "CooperNettees",
        "subreddit": "cscareerquestions",
        "content": "lately I was reflecting that a lot of the work I did the first few years of my career wouldn't really need devs as much anymore.I started my career off translating phd produced matlab scripts into c code running on accelerated hardware and then comparing the output of their scripts against my rewritten code. i spent 3 years doing this. these days, it would be possible to capture 95% of the value I brought to that role by annotating their python code with numba annotations. and I think it would be good enough to ship.and this is the broader pattern ive noticed; the tooling is way, way better than when I started. a lot of people focus on AI but I just think about how difficult every little thing was before. I never saw a researcher get their work out to production early on in my career, and now it seems like ops is an expectation of the ML / researcher role. part of the reason thats possible is how good the tooling is now. not everything has to be rewritten to c, or created from scratch in a matrix compatible arrangement of html + css + vanilla js.I havent worked with young devs since 2018. so I guess I am wondering, what kinds of work are jr developers being expected to do today? is there still a lot of the same kind of work I started out doing or is it different? appreciate any insights people might offer.",
        "score": 12,
        "upvote_ratio": 0.93,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuhu65/what_kinds_of_work_are_jr_developers_expected_to/",
        "created_utc": "2025-05-24 18:03:54",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwmizj",
        "title": "Which engineer roles should I focus on?",
        "author": "2048b",
        "subreddit": "cscareerquestions",
        "content": "Background: Former software developer/engineer.Aim: Looking for a career track change.Want to avoid:- No longer interested in application development (C#, Java app development)Interested in/aspires to do:- Infrastructure (virtual machines, containers)- System administration (Windows, Linux)- Configuration management (Ansible, Vagrant, Terraform, AWS CloudFormation)- Automation (bash shell, Python, Perl scripting)- Software deployment and packaging (docker, MSI, NSIS, Inno Setup etc.)What type of roles should I retrain for?- DevOps engineer?- Automation engineer?- Cloud engineer?- Systems administrator?- Systems engineer?Which one would come close to what I aspire to do?",
        "score": 11,
        "upvote_ratio": 0.93,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwmizj/which_engineer_roles_should_i_focus_on/",
        "created_utc": "2025-05-27 12:54:34",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxylwr",
        "title": "AI and it's future prospects.",
        "author": "Former_Commission233",
        "subreddit": "cscareerquestions",
        "content": "As a studentz interested genuinely in CS, but face a lot of AI related threads where people are struggling to get jobs for AI and keep up with the market. Is it really that bad? Will AI eliminate most developers? In such a case what should one pursue? Just want some clarification",
        "score": 10,
        "upvote_ratio": 0.72,
        "num_comments": 63,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxylwr/ai_and_its_future_prospects/",
        "created_utc": "2025-05-29 01:37:20",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwx6rw",
        "title": "Going into my 3rd summer without an internship, what can I do to still be productive?",
        "author": "Pengsu",
        "subreddit": "cscareerquestions",
        "content": "Hello, I'm a 3rd year CS student minoring in data science going into my senior year next year and I didn't get a job for the summer. What jobs can I find or what can I do over the summer that would be helpful to finding a job / look good on a resume?I have a 3.7 GPA at UofM, but my experience is really only projects from upper level classes and a remote job at an AI company (not an internship, i was just reading ai outputs all day and grading it). These are what I have on my resume, and I fear this isn't enough in todays job market.",
        "score": 11,
        "upvote_ratio": 0.79,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwx6rw/going_into_my_3rd_summer_without_an_internship/",
        "created_utc": "2025-05-27 20:00:45",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvow4w",
        "title": "Best way to cram system design FAST?",
        "author": "kellojelloo",
        "subreddit": "cscareerquestions",
        "content": "Up until this point, I’ve focused 100% on leetcoding in order to pass the screening. Now that I’ve started passing screening, I’m lost with the system design interview. I have minimal system design experience and 0 prep. I might be able to push the next rounds out a bit, but not much. What is the best way to approach this? The fastest and most efficient way. How much time will I need? Will appreciate any help or insights. Thank you",
        "score": 11,
        "upvote_ratio": 0.74,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvow4w/best_way_to_cram_system_design_fast/",
        "created_utc": "2025-05-26 07:59:18",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kydgtx",
        "title": "Software Engineering Pivot to Consulting?",
        "author": "NinjaSoop",
        "subreddit": "cscareerquestions",
        "content": "Hi everyone,I’m (~25M) currently a Software Engineer at Chase in a HCOL city. TC is about $125K. I went to a non-target school with a 3.5 GPA in Computer Science. I have 2 years of experience.I enjoy the logic of coding, and I’m pretty good at it, but I yearn for something more social. I really have grown dispassionate about the work due to its isolating nature. My soft skills are definitely my biggest strength. I love presenting and developing relationships.Do I need an MBA to switch into a good (tech?) consulting career? Or can I just directly apply?Any insight would be much appreciated. Thanks for reading!",
        "score": 8,
        "upvote_ratio": 0.73,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kydgtx/software_engineering_pivot_to_consulting/",
        "created_utc": "2025-05-29 15:18:53",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ky5i5u",
        "title": "Do hr know springboot is java, laravel is php, AWS is cloud service?",
        "author": "NiceGame2006",
        "subreddit": "cscareerquestions",
        "content": "I feel like I missed 80% of interview opportunity because I wrote the former instead latter",
        "score": 9,
        "upvote_ratio": 0.85,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ky5i5u/do_hr_know_springboot_is_java_laravel_is_php_aws/",
        "created_utc": "2025-05-29 08:24:42",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvo497",
        "title": "Is master’s degree worth it?",
        "author": "ummetinlideri",
        "subreddit": "cscareerquestions",
        "content": "I’m a CS graduate and I have several years of experience. I’m currently employed and I have enough free time to study for this. The degree will be free, however is it worth it? Can a master’s degree help me in the future for new job opportunities?",
        "score": 7,
        "upvote_ratio": 0.71,
        "num_comments": 20,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvo497/is_masters_degree_worth_it/",
        "created_utc": "2025-05-26 07:06:55",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvcpcr",
        "title": "People who have always worked in the lower US salary bands, are you also feeling the drop in wages too?",
        "author": "ExitingTheDonut",
        "subreddit": "cscareerquestions",
        "content": "I've seen several times that overall CS salaries are dropping, but they're usually just comparing the salaries that are close to the average or higher than average. But what about the ones in the below average salary bands, like the people who live in the lowest cost of living parts of the US, in the lower bands? If the roof is slowly collapsing, how are the people at the ground floor, so to speak, feeling it? Average has dropped from $125k to $109k in my area but I have never reached that far. I'm more used to $50k to $70k salaries since I've started so I'd like to see how others in that range are feeling the drop.",
        "score": 9,
        "upvote_ratio": 0.7,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvcpcr/people_who_have_always_worked_in_the_lower_us/",
        "created_utc": "2025-05-25 20:49:32",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ku6hdx",
        "title": "I feel like I'm spread too thin",
        "author": "NamNGB",
        "subreddit": "cscareerquestions",
        "content": "Recently, as graduation is approaching, I've been feeling like I'm spread too thin. I know a bit about cybersecurity, embedded systems, and machine learning. I feel like I'm learning too many different things, which might be bad for employability. I feel like listening to the saying \"Jack of all trades, master of none, oftentimes better than master of one\" might be coming back to bite me in the butt.I'm currently working at a cybersecurity company as an intern and I feel like I'm worse than the other interns in terms of cybersecurity skills but I know more about embedded systems and machine learning than them.I'm looking into how to combine my skills together but I feel like the intersection between cybersecurity, embedded systems, and machine learning doesn't have much jobs outside of being a researcher in academia.",
        "score": 10,
        "upvote_ratio": 0.86,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ku6hdx/i_feel_like_im_spread_too_thin/",
        "created_utc": "2025-05-24 08:07:43",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktiue4",
        "title": "I’m struggling to learn & grow in my first dev job - how can I improve and get hired elsewhere?",
        "author": "elsa-mom8",
        "subreddit": "cscareerquestions",
        "content": "Hi everyone, I’m a graduate software engineer working in a Big 4 consulting firm. I’m about 9 months into my first role, and while things have improved a bit, I’m still really struggling and could use some career advice.So heres a bit about my background. I started in tech through a conversion Master’s and landed a graduate role in a Big 4 consultancy. The first few months were rough. I was getting minimal work, no mentorship, and I felt totally lost. I nearly quit, but after speaking to management, I was paired with a senior dev and shifted to frontend (React), which I’m more comfortable with.My problem is that I’m still not learning like I want to. I lean too heavily on ChatGPT and feel like I don’t really understand what I’m doing. I feel stuck and like I’m not becoming a better software engineer. I’m constantly being rejected from even other graduate level dev jobs, and I don’t know what I’m doing wrong. I have completed a couple of interviews, one company was kind of a dream role which I do think I was pretty unqualified for but I did get to the final stage of the process. I actually pulled out of another interview process because I realised during the first interview that this wasn’t the right job for me.So here’s what I’m doing to try to learn and get better. I have an active github with personal projects, and a publicly available CV website. I attempt most leetcode daily challenges, and complete online udemy courses. I also attend local tech meetups and listen to tech podcasts to expand my knowledge.So these are my questions:* *How do I get better as a software engineer when I feel like I’m just guessing or relying on AI?** *What do other junior devs do to actually learn rather than just getting by?** *Why do I keep getting rejected from other jobs/how can I make myself stand out?*Any advice, resources or honest stories from other devs would really help. Thanks!",
        "score": 10,
        "upvote_ratio": 0.92,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktiue4/im_struggling_to_learn_grow_in_my_first_dev_job/",
        "created_utc": "2025-05-23 12:54:22",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx82lj",
        "title": "New Grad - Do I stop applying because its not in season?",
        "author": "WantToStudy777",
        "subreddit": "cscareerquestions",
        "content": "I know it sounds weird but I heard that new grad hiring season is closed so do I just quit applying and wait until october while doing side project?",
        "score": 8,
        "upvote_ratio": 0.63,
        "num_comments": 16,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx82lj/new_grad_do_i_stop_applying_because_its_not_in/",
        "created_utc": "2025-05-28 04:24:34",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kurjg4",
        "title": "How likely am I to hear back from recruiters who hold my information for a later?",
        "author": "Fluenzia",
        "subreddit": "cscareerquestions",
        "content": "Like everyone else I've been applying to many jobs and I've had 2 replies that weren't the boiler plate \"we have decided to move on with other candidates\".One was an email from someone at the company saying they'd like to stay in touch in case anything comes up.The other was a phone call where I found out I was unable to interview for the job because of my citizenship and security clearance requirements. They also said they'd like to stay in touch.My question is, how likely are these to go anywhere? Obviously I'm still applying and will send a follow-up email in a couple months to touch base, but just wanted to know where I stand.",
        "score": 9,
        "upvote_ratio": 0.85,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kurjg4/how_likely_am_i_to_hear_back_from_recruiters_who/",
        "created_utc": "2025-05-25 01:59:21",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktdr5c",
        "title": "Should I leave boring but relatively safe job for a temporary startup job?",
        "author": "Interesting_Gate_963",
        "subreddit": "cscareerquestions",
        "content": "Fullstack software engineer with 5 YOE here.I have a relatively stable job in a mid-large sized corporation. They pay pretty ok, nothing crazy, but more than enough for my needs.The benefits are really good though. I.e. all in all I have about 35 days of PTO, I get a yearly bonus, budget for entertainment etc.I've got an offer to join a startup. It's almost certain that the job in the startup will be gone in two years from now. They base pay is around 100% bigger than my current one. If I calculate every benefit and split the pay by the number of working days in the year - start-up pays around 65% more per working day.I'm a type of the person that prefers stability. The stories of people sending 500 CV and getting invited to 2-3 interviews scares me a lot.On the other hand - no job guarantees endless stability - I know it. However something is stopping me from losing it on purpose.Any thoughts?",
        "score": 7,
        "upvote_ratio": 0.77,
        "num_comments": 11,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktdr5c/should_i_leave_boring_but_relatively_safe_job_for/",
        "created_utc": "2025-05-23 07:39:35",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxtygk",
        "title": "First layoff and feeling lost on where to start",
        "author": "Firm_Afternoon_8463",
        "subreddit": "cscareerquestions",
        "content": "I just had my first career layoff about 2 weeks ago, was there for a little under 2 years. I spent the first week recovering from a sickness, then applied to unemployment, calfresh, and got my health insurance in order. Now I feel lost... I started Neetcode but I am so rusty and I want to start a project but no idea where to start. I feel so overwhelmed with everything and not sure what to prioritize first.. do I work on leetcode, start a project, or just apply to jobs first? I am doing a bit of all but I feel so lost with no goal.",
        "score": 8,
        "upvote_ratio": 0.83,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxtygk/first_layoff_and_feeling_lost_on_where_to_start/",
        "created_utc": "2025-05-28 22:02:41",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuv608",
        "title": "Should I ask to switch teams at my SWE internship? (Go vs Rust)",
        "author": "Ludo7777",
        "subreddit": "cscareerquestions",
        "content": "Starting a SWE internship soon and got placed on a team using Rust, but I was hoping for Go. I'm worried because:1. **Job market:** Rust seems way less in-demand than Go if I don't get a return offer2. **Side projects:** I have zero personal projects and want to learn something I can build with quickly (web apps, APIs, etc.)3. **Learning curve:** Rust looks hard and slow for prototyping vs Go's simplicityBackground: CS student, mostly coursework experience (Python/Java/C), been self-learning Go. Not interested in systems/gaming stuff where Rust shines.Is it worth asking for a team switch this late in the process? Will I look incompetent? Or should I just not mention this and stay in my assigned team?**TL;DR:** Got placed on Rust team, wanted Go team. Worried Rust won't help with job prospects or side projects. Ask to switch or deal with it?",
        "score": 7,
        "upvote_ratio": 0.82,
        "num_comments": 14,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuv608/should_i_ask_to_switch_teams_at_my_swe_internship/",
        "created_utc": "2025-05-25 05:36:50",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktt4ng",
        "title": "AI Engineer vs Mobile Dev - Should I Switch Careers ? (For less pay )",
        "author": "HitoriBochi1999",
        "subreddit": "cscareerquestions",
        "content": "Let me get to the point — I'd really like to hear opinions from Senior devs especially. I'm an Argentinean Mid-level Mobile Developer, specializing in native Android, but I’ve also worked quite a bit with React Native.I got offered a job as an AI Engineer thanks to a friend who works there, but it would be as a Junior. The thing is:1. They pay less2. It’s for a US-based startup , and there aren’t many real benefits3. It’s full-time (not contractor)4. It’s kind of weird because the technical interview is basically a classic FullStack mini-project, nothing AI-related… it seems like the position is more oriented towards FullStack work and consuming LLMs. My friend told me he’s now learning TensorFlow/PyTorch (which is actually what interests me the most, same as Architecture modeling), but apparently he doesn’t work strictly with that.----------------------------------------I’ve been looking for Senior Mobile jobs in my stack for the past 6 months — they obviously pay more and have better benefits (though I haven't been lucky, I always make it to the 3rd interview only).---My questions are:1- What future do you see for Mobile? With AI and the current market, I’m seeing fewer open roles (in LATAM more than anything). Do you think it makes sense to pivot to something with more demand? Or should I double down and specialize in Mobile?2- Do you think it’s worth switching to AI Engineering? What future do you see in working with TensorFlow/PyTorch? Or other AI branches ?P.S. According to a professor I had in college (who’s head of the AI department at a major multinational Spanish company), he said that regardless of what you choose, the future trend is to become an Architect and be an expert in the big picture.",
        "score": 7,
        "upvote_ratio": 0.89,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktt4ng/ai_engineer_vs_mobile_dev_should_i_switch_careers/",
        "created_utc": "2025-05-23 20:03:44",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxp8yu",
        "title": "Which of the four dsa courses would you recommend?",
        "author": "Apart_Set_8370",
        "subreddit": "cscareerquestions",
        "content": "I am going to be a 2nd year student , completed cs50 , and was introduced to a few other data structures in 2nd sem. I've narrowed it down to 4 courses:https://youtu.be/RBSGKlAvoiM?si=c36TH6YlqVPxuAhm - Freecodecamp - looks a bit short https://m.youtube.com/watch?v=ZA-tUyM_y7s&list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY - MIT 6.006 - Leaning towards this https://github.com/jwasham/coding-interview-university -the most structured - but has too much introductory stuff I already know https://www.youtube.com/playlist?list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O - most recommended - seems to only have algorithms (or am I missing something ?)Any general tips to learn and practice Dsa would be highly appreciated .",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxp8yu/which_of_the_four_dsa_courses_would_you_recommend/",
        "created_utc": "2025-05-28 18:54:47",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxh0ew",
        "title": "How to discuss job hopping too frequently",
        "author": "NoLongerALurker57",
        "subreddit": "cscareerquestions",
        "content": "Hey all, I’ve job hopped a bit more than most, and I think it’s really hurting my chances of getting hired despite being a strong hire otherwise.To be more specific - I’ve been at 5 different companies over about 5 years- First for 2.5 years (left for a big pay increase and more senior role at a competitor)- Second for 8 months (3 different managers joined and left my team, so I left because of management stability + a slightly better offer)- Third for 9 months (this one was honestly a bad decision and I should have stayed here, but I chose to go to a risky early-stage startup- Fourth for 1 year (95% of company laid off)- Fifth for 1 year (95% of company laid off, I lasted through 3 layoff rounds over this year)- Worked on my own startup this last year (didn’t work out)I’m really looking for something stable where I can stay put for the next 5+ years, and that’s what I tell recruiters, but my resume clearly doesn’t reflect that well.Any advice would be appreciated",
        "score": 5,
        "upvote_ratio": 0.67,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxh0ew/how_to_discuss_job_hopping_too_frequently/",
        "created_utc": "2025-05-28 13:24:31",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx5oo7",
        "title": "Starting from zero now : Is it possible for me to get a software engineering internship for summer 2026?",
        "author": "DefiantLie8861",
        "subreddit": "cscareerquestions",
        "content": "Recently, I switched my major from biology to cs. This summer, I’m focusing on trying to land a software engineering internship for Summer 2026. I have 11 distraction free weeks before the fall semester starts, and I plan on dedicating 7-9 hours 6 days per week for this. I’m starting completely from zero with no coding experience, so my plan is to spend the first 5 weeks learning Python/core programming concepts, and then spend the next 6 weeks learning DSA and beginning Leetcode problems for interview prep. I’ll also work on creating a resume and 2-3 projects , then eventually start applying in late August/early September. I wanted to know if this 11-week plan makes sense and is realistic — spending the first 5 weeks learning Python and core programming concepts(ex. Cs50, freecodecamp), then the next 6 weeks focusing on learning dsa/LeetCode and building projects. Is this a realistic/solid approach for someone starting from zero to become interview-ready and landing an internship in just 11 weeks? Worst case scenario, I’m prepared to keep applying until the latest which from what I’ve seen will be January. By then I should hopefully be fully ready for interviews with a complete resume ? I know the importance of applying early in august/early September so I was also wondering if applying in January would even be worth applying since it might be too late. Sorry for the long post, I’ve been thinking about this a lot and i feel like more experienced peoples opinion on this would help me gauge my situation better. Any advice or insight from people with knowledge or who’ve been in a similar spot would mean a lot. Thank you!",
        "score": 7,
        "upvote_ratio": 0.67,
        "num_comments": 30,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx5oo7/starting_from_zero_now_is_it_possible_for_me_to/",
        "created_utc": "2025-05-28 02:18:48",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kutyp2",
        "title": "palantir exit opps? or career suicide?",
        "author": "DJPandaSupreme",
        "subreddit": "cscareerquestions",
        "content": "Interviewing for palantir right now for an internship. want to know what my exit opps look like? will working for defense startup pigeon hole me? is palantir well reputated? what is its reputation? lmk tysm",
        "score": 6,
        "upvote_ratio": 0.53,
        "num_comments": 49,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kutyp2/palantir_exit_opps_or_career_suicide/",
        "created_utc": "2025-05-25 04:20:33",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuovaf",
        "title": "Anyone here works for Apple as a contractor?",
        "author": "elle_c12",
        "subreddit": "cscareerquestions",
        "content": "It would great if I find anybody here who works as a contractor for Apple for some advice. Here is a producer role that I am so interested in and need some guidance on the application process: https://directsource.magnitglobal.com/us/applecontingentworkforce/jobs/88610-producer-remote-remote?utm_source=LinkedIn&utm_medium=Manual_Posting",
        "score": 4,
        "upvote_ratio": 0.58,
        "num_comments": 33,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuovaf/anyone_here_works_for_apple_as_a_contractor/",
        "created_utc": "2025-05-24 23:32:20",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ky20kn",
        "title": "How do identify upcoming tech and in-demand skills",
        "author": "Arjeet_singh",
        "subreddit": "cscareerquestions",
        "content": "hey, i have been working on web development and ML. But, there were speculation regarding the overflow of people into these fields ( ML researchers, S/W devs etc and i dont have a nick for web dev). I want to understand how can I keep up with the in-demand skills, or how do I identify skills, job roles that are in-demand or they might be in demand later. Ik cloud architect is one of them but they are mostly for experienced individuals. How do i find skills i should learn, what kind of projects i should work on and lastly, i have some interest in the finance side of tech so how do i get into that ( what resources i should use and where can i apply for internships )",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 6,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ky20kn/how_do_identify_upcoming_tech_and_indemand_skills/",
        "created_utc": "2025-05-29 04:36:54",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx9nv0",
        "title": "I have worked on various projects but none seem relevant to a specific role. How do I proceed?",
        "author": "InfamousComputer404",
        "subreddit": "cscareerquestions",
        "content": "I have around 4 YOE and have been getting calls from Data Science, Data Analysis, Business Analyst and Data Engineering roles. But I don't have the exact experience for any of these roles.* In Data Science interviews, they ask about Deep Learning and Gen AI related questions, but I have just worked on building chatbot for one project. They also ask ML questions, but again my role was related to just fine tuning the models, that too only regression.* In Data Analyst and Business Analyst roles they ask hypothetical question about business, but I haven't directly interacted with the client. They also tend to ask about Tableau and Power BI, but I have only worked on tableau for a couple of months in one project.* In Data Engineering roles they dive deep into cloud concepts and pyspark. I have worked on Databricks and pyspark, but that was 2 years ago. And I don't remember much about the solution used.I am frustrated with these experiences and don't know what to study anymore. I want to be in Data Engineering but don't have the required skills asked. I know ML, but they aren't satisfied until I know DL and NLP and Gen AI. I have worked on MMM, but don't exactly know the internal workings. Combined with this I have a notice period of 60 days and most companies aren't willing to wait that long.How should I proceed from here? Studying DL, NLP, Pyspark, cloud tech is tough because I tend to forget them if I don't work on them in a project.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 1,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx9nv0/i_have_worked_on_various_projects_but_none_seem/",
        "created_utc": "2025-05-28 05:58:52",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kx27zb",
        "title": "What should I study/do to improve myself as a backend engineer ?",
        "author": "jetfire2K",
        "subreddit": "cscareerquestions",
        "content": "I'm currently working as a junior full-stack developer, but I’ve realized that I enjoy backend development much more. Over the past few months, I’ve been focusing on backend fundamentals to deepen my understanding and prepare for interviews. I’ve revisited and studied in depth key topics like SQL, databases, system design, object-oriented programming, design patterns, relevant networking concepts and important backend (middleware, authentication, authorization, etc...) most of which I had already studied at university. I've also studied lots of interview questions as a way to make sure I didn't miss any core concepts or information regarding those topics.I practice LeetCode regularly and my resume is in good shape, not exceptional at all since I only have 9 months of work experience, zero internships and 0 unique projects but what I do have is well written.Right now, I feel a bit lost on what to pursue next. I’ve gone through several backend roadmaps and found that I’m familiar with most topics (I'm not familiar with Kafka/RabbitMQ for example but that's about the only core thing I found that I didn't know about in the roadmaps) to some degree. For example, I use Docker at work but have never built a container from scratch. I know Redis is used for caching, but I’ve only interacted with it indirectly — I’m aware it’s there but haven’t configured or used it myself.I wouldn’t call myself an expert, and while I’m willing to dive deeper into tools or concepts if the need arises, I don’t want to study things “just to know them.” Recently, I’ve shifted my mindset to studying topics that genuinely interest me (with the exception of LeetCode, unfortunately). This approach has helped me avoid burnout and actually enjoy learning, I’ve had fun practicing some complex SQL queries and exploring system design lately as an example.Some options I’ve considered:* Learning AWS: I’ve only had minimal exposure to AWS. While it's useful and often mentioned in job listings, I don’t feel drawn to it, especially since I’m unlikely to use it in personal projects.* Building personal projects: I struggle to come up with backend-focused ideas that I’m genuinely excited about. Most of my current projects aren’t particularly unique. I tend to use AI for frontend work because I don’t enjoy it, but I’d prefer to avoid relying on AI in personal projects as the goal is to improve my skills.* Exploring Java & Spring Boot: Since I primarily use the MERN stack, learning Java Spring Boot could open up more job opportunities. I’ve considered making projects with it and creating two tailored resumes (one for Node.js, one for Java). However, the idea of learning a whole new stack solely for the resume is demotivating — it feels like something I have to do, not something I want to do. I’ve also heard it’s better to stick to one stack and get really good at it, and while I’m not an expert in Node.js, I know it well enough to build things and fill gaps as I go.* Learning React.js: This is probably the last thing I want to do which is to learn proper frontend to qualify as full stack engineer instead of using AI for frontend, I really enjoyed frontend at work because it had minimal css and minimal design implementation, most of the time I was working on things related to logic. I've tried to learn react several times before but I just get bored/ lose interest really quickly due to having to implement designs and using css, I enjoy logic just not anything related to styling.At this point, I’m looking for direction. Ideally, I’d like to strengthen my backend skills in a practical or theoretical way, add something to my resume that helps me stand out or both if possible since I'm trying to leave my current job to work more as a backend specialist.",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 8,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kx27zb/what_should_i_studydo_to_improve_myself_as_a/",
        "created_utc": "2025-05-27 23:30:19",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwwy5g",
        "title": "Hate working in banks, wanna bust out",
        "author": "billytimmy123",
        "subreddit": "cscareerquestions",
        "content": "Excuse me if I come across as whining, immature and/or petty. My thoughts are all over the place. I have been working for a large bank for nearly 4.5+ years up until now, ever since I graduated from college in May 2020. I was working in a Teradata Dev role nearly 4 years and internally transitioned to on Observability Engineering role about 2 months ago. I primarily accepted the opportunity to switch internally because it was offering a fat pay raise in my base comp, and I didn’t want to pigeonhole myself in one tech stack and get chance to learn new skills in the observability world and I also thought this role would be less red tape as my previous role.But now 2ish months into my current role, I can see similar patterns of corporate BS from my prior role: shaky communication with scrum masters, shitty documentation, lack of documentation for critical initiatives, a bit of unclear direction in certain tasks I’m working on, and being thrown into tasks without additional support, slow traction and approval for in POCs which my manager said would be in the pipelines, SREs trying to dump their work on Engineering side. Amidst this, I feel like I’m kinda forced and forcing myself to just maintain the optics of seeming like I’m doing work(proposing new initiatives, exploring self initiated POCs to bring to table, partaking in meetings, asking questions, engaging in code reviews/pull request reviews and trying to do the work assigned me to even if it entails some level of handholding). My team manager and tech leads who interviewed me , I clearly told them I don’t have experience in this stack being used in this role , and despite that they still offered the position and for the most part I’d say I’m pretty active in ramping up quickly and continuing to learn the tech stack used in this role. But right now my scrum master is kinda gate keeping some of the deliverables in our engineering team and I feel he’s sorta pushing tasks to me which he wants to be prioritized more heavily , but those certain tasks they’re kinda outta my reach and there’s very limited internal support to lean onto and shadow along side with them. All in all, I really came excited into this new role to really be plugged in to high impact work, with little to no corporate BS, red tape , crystal clear communication, and tasks where new onboarded folks can gradually pick up and ramp . But right now I feel like I’m thrown into a deep end and barely floating and treading water. I feel like even though I’ve delivered some tasks and my tech leads are supportive, my scrum master assigns certain in which there’s no meaningful documentation on nor internal support and I can’t seem to move much forward without butting heads into him (in a neutral manner)Overall what I’m trying to convey is , I feel like shit and I think I’m going to be perceived as a phony , regardless of how proactively I’m putting effort in.This is really taxing and taking a toll on my confidence in how I can deliver in a highly regulated ass environment like banking. Id really like to jump ship by next 4ish-6ish months by the end of the year and would love to work outside a banking environment , preferably a startup or industry outside of banking altogether.I need help fam. Idk what I just spilled. For those of whom were in similar situation or circumstances as me, what did you do ? Did you move out to a different industry altogether or a startup ? Is it possible to avoid these in a startup",
        "score": 5,
        "upvote_ratio": 0.78,
        "num_comments": 3,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwwy5g/hate_working_in_banks_wanna_bust_out/",
        "created_utc": "2025-05-27 19:51:18",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwwcy0",
        "title": "Pigeonhole question",
        "author": "BrbGettinCoffee1sec",
        "subreddit": "cscareerquestions",
        "content": "I have reached 2yoe working on a hardware focused company as a software developer. My primary language is C/C++ and some python for data analysis. At the time of performance reviews and promotions I was at 1yr 6mos so was not selected to the next level. I was then talking with my fiance and it seems like most jobs I see available are frontend/backend using Javascript, react, Django, etc. I do enjoy the work I do and the product I work on as the code is used on hardware which is really neat and fulfilling. My role is safe since it is a smaller company but if I ever want to switch paths I think it will be difficult. For example if companies require 2+yoe on web development or database knowledge, I will not have any experience on my resume to showcase that.I guess my question is, would it be a good idea to brush up on my full stack and leetcode to round out my experience? Or what other jobs require C/C++ development? Would this be robotics and other hardware focused companies? I dont mind RTO so not limited to remote only or anything although that's the preference.",
        "score": 4,
        "upvote_ratio": 0.84,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwwcy0/pigeonhole_question/",
        "created_utc": "2025-05-27 19:28:00",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kuo36c",
        "title": "9 years experience, minimal system design experience",
        "author": "kellojelloo",
        "subreddit": "cscareerquestions",
        "content": "I have 9 years experience, mostly developing niche desktop applications in dinosaur companies using antiquated frameworks, and minimal system design experience.I’ve also developed a few simple CRUD web applications from end to end, but never had to scale.I feel very badly positioned in this market. How should I be approaching interviews and position myself better in this market overall? Any advice is appreciated! Please help me. Thank you",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kuo36c/9_years_experience_minimal_system_design/",
        "created_utc": "2025-05-24 22:53:28",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktbegu",
        "title": "Can I still get an Internship if I graduate this Summer?",
        "author": "HI8OI",
        "subreddit": "cscareerquestions",
        "content": "I took summer courses all throughout my school years so I can graduate faster in 3 years and I'm kinda regretting it. I was thinking I could use that 1 extra free year to work on projects and getting experience but maybe I should've just gotten summer internships instead. Is it too late for me?",
        "score": 5,
        "upvote_ratio": 0.78,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktbegu/can_i_still_get_an_internship_if_i_graduate_this/",
        "created_utc": "2025-05-23 05:01:52",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kt933m",
        "title": "Cybersecurity with a CS degree?",
        "author": "cojode6",
        "subreddit": "cscareerquestions",
        "content": "I'm entering my 2nd year of a CS degree, and no university near me offers a cybersecurity degree, but there is a cybersecurity certification program I might try to do after (Plus I love my school I'm at). I wouldn't hate SWE and I have tons of experience coding and developing already, but I have a huge interest in cybersecurity. I'm just wondering if I have any chance of a cybersecurity degree with a CS bachelor's (maybe master's if I can afford it). Anybody out there doing security or pentesting with a CS degree?",
        "score": 5,
        "upvote_ratio": 0.86,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kt933m/cybersecurity_with_a_cs_degree/",
        "created_utc": "2025-05-23 02:50:07",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kyefhx",
        "title": "Feeling stuck at current job",
        "author": "GtSaysWhat",
        "subreddit": "cscareerquestions",
        "content": "Hi all, I've been working at Cognizant for the last 4 years as a data engineer. The first 2 years I was working in AWS and Databricks writing python scripts and creating data pipelines. And now doing some stuff in power bi and snowflake. This work is not something I am interested in, and I am sick of it. I want a job with better benefits, and manager that doesn't scrutinize me everytime I request pto. I've been applying for other roles but have not been getting any recruiters reaching out. Is the market just dead like that right now?",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 12,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kyefhx/feeling_stuck_at_current_job/",
        "created_utc": "2025-05-29 15:57:48",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kws5r1",
        "title": "Thinking of Going Back to School...Again",
        "author": "blocklung",
        "subreddit": "cscareerquestions",
        "content": "Hi EveryoneI currently have an MBA and a BA in Economics.I've always wanted to get a foot hold in computer science and software engineer. I can go to UofT and go down this path.Is this even a good idea? Can the knowledge be learned anywhere else to the same impact?",
        "score": 5,
        "upvote_ratio": 0.78,
        "num_comments": 15,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kws5r1/thinking_of_going_back_to_schoolagain/",
        "created_utc": "2025-05-27 16:45:48",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kwf824",
        "title": "Relocating",
        "author": "MrXReality",
        "subreddit": "cscareerquestions",
        "content": "Hi all,Looking for a job as a backend dev, im considering relocating from Georgia. What cities are better currently with the tech market? I think I remember hearing austin texas was better but not sure in the current climate Bay areA/california is off my list. Been there. Don’t want to again lol",
        "score": 6,
        "upvote_ratio": 1.0,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kwf824/relocating/",
        "created_utc": "2025-05-27 05:14:44",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kvkwe8",
        "title": "Is this domain knowledge?",
        "author": "M1DN1GHTDAY",
        "subreddit": "cscareerquestions",
        "content": "Hello folks, I am having trouble in preparing for interviews and need your help. I can't seem to keep an idea of things like polymorphism, SOLID, oop, and especially the dreaded language features and other unknown (to me) unknowns. Does anyone know what these types of concepts are called and how I can maybe find some YT videos talking about them so I can try to learn? (My languages of interest in case it matters are JavaScript, Python, Java). Tia!",
        "score": 4,
        "upvote_ratio": 1.0,
        "num_comments": 7,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kvkwe8/is_this_domain_knowledge/",
        "created_utc": "2025-05-26 03:50:08",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktrop2",
        "title": "Help choosing my first tech job – backend, SRE, or data?",
        "author": "None",
        "subreddit": "cscareerquestions",
        "content": "I'm finishing my Bachelor's degree and currently have a few job offers and some ongoing interview processes. I'd love to hear your thoughts on which path would be best to start my career. Ideally, I’d like to stay flexible and be able to explore different areas in the future if my curiosity changes, so I don't want an area that will specialize me too much too early. I have always heard BE engineering seems to be the best role for this kind of felxibility, but please let me know what you think!Here's the list of opportunities, ordered from most attractive to least (in my opinion):### Backend Engineer Internship at a Product Company- **Duration:** 9-month internship, with a possibility of a full-time offer afterwards.- **Tech stack:** Spring, Kafka, SQL and NoSQL databases.- **Pros:** I love everything about this—tech stack, company culture, team vibe.- **Cons:** The pay is lower than the other (non-internship) offers for the first 9 months.---### Site Reliability Engineer (SRE) at a Product Company- **Status:** Interview scheduled next week.- **Details:** The company was acquired by a major player, so it seems relatively stable.- **Pros:** I find SRE work interesting.- **Concerns:** I'm worried that starting my career in SRE might limit my ability to change into other areas later on.---### Backend Engineer at an Outsourcing Consultancy- **Status:** Passed HR round; they're waiting on salary expectations.- **Details:** They want to move me forward to client interviews.- **Pros:** I expect to learn a lot, and they were open to salary negotiations—even with my slightly above-entry-level ask.- **Cons:** Still unclear which client or project I'd end up on.---### Data Scientist at a Consulting Company- **Status:** Just received the message; haven't responded yet.- **Details:** Seems to involve in-house consulting, with a focus on machine learning.- **Pros:** They seem very enthusiastic about some ML stuff in my CV and my Python experience (pretty advanced for an entry level).- **Cons:** I’m not particularly interested in data roles right now. I'd only consider it for a very high salary (mid-level developer range), which might be unrealistic for an entry-level hire.---### Internship at a Startup- **Status:** Offer available.- **Details:** The startup recently closed a big contract and is expanding.- **Pros:** I'd probably learn a lot quickly.- **Cons:** Very low pay. Feels unstable. Work would include a mix of backend, data, and no-code frontend (only one other dev on the team). Might make transitioning to more traditional jobs harder later on.Thank you so much in advance! :)",
        "score": 5,
        "upvote_ratio": 0.73,
        "num_comments": 9,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktrop2/help_choosing_my_first_tech_job_backend_sre_or/",
        "created_utc": "2025-05-23 19:02:05",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ktck8m",
        "title": "Should I take a position as A Technical Support Specialist?",
        "author": "SlippinTrippin",
        "subreddit": "cscareerquestions",
        "content": "I am a new comp sci grad and am unsure if I should take a Technical Support Specialist role that seems to pay decently but I am unsure on if I should take it as I don't know if it would be a dead end for me. I would have preferred a dev role that has more opportunities of career advancement. So I just wanted to get other's opinions on roles like this and what they would recommend I do. I am lucky enough to be in a position where I don't need a job urgently but am unsure if i should just take this job or try to tough it out for something more related to software engineering?",
        "score": 4,
        "upvote_ratio": 0.84,
        "num_comments": 4,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ktck8m/should_i_take_a_position_as_a_technical_support/",
        "created_utc": "2025-05-23 06:17:40",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kyc4ko",
        "title": "DevOps vs. Web Development as a junior?",
        "author": "Crazy_Panda4096",
        "subreddit": "cscareerquestions",
        "content": "Hey all,I've been placed into the DevOps team in my company as a junior (graduated '24). For the past year i rotated through different software engineering teams, (web dev, api dev, and devOps). Ultimately the choice of where I was placed came down to budgeting/factors out of my control. From what I've read online, it seems that alot of people dont believe in having a junior working in DevOps lol. My interest has always been in Web Dev (backend) mostly because thats all ive worked on in my personal time/ internships. Im wondering though, would it be wise to embrace a new career path in DevOps, or should I look for a new web dev position?TLDR: In the long run, which career path (DevOps vs. Backend Web Dev) would offer more opportunities and stability?",
        "score": 3,
        "upvote_ratio": 0.81,
        "num_comments": 10,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kyc4ko/devops_vs_web_development_as_a_junior/",
        "created_utc": "2025-05-29 14:25:07",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ky6znb",
        "title": "Should I apply as an intern or volunteer?",
        "author": "InitiativePure787",
        "subreddit": "cscareerquestions",
        "content": "Background:A bit about me: before finishing school (I have about 1.5 yrs left), I was able to land a job as a software engineer and worked in the industry for 2.5 years. I was laid off in late 2022, and as I haven't been able to secure another position, I am currently in the process of returning to school to complete my business degree (at an ivy). I originally chose not to finish the degree it as I thought it wouldn't be relevant for a career in software, but I now realize that was a mistake.I still have a passion for software and hope to stay in this field, but I'm uncertain about which positions I can go for. Once I regain student status, should I be looking for a summer internship, volunteering during school, or focusing on finding a full-time role after graduation?(I just wanted to ask whether companies would even consider me for an intern position, given that I already have a few years of experience, and also due to my age)Thank you for your feedback :)",
        "score": 3,
        "upvote_ratio": 1.0,
        "num_comments": 5,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ky6znb/should_i_apply_as_an_intern_or_volunteer/",
        "created_utc": "2025-05-29 10:03:59",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1ky2mqq",
        "title": "Which offer should I take?",
        "author": "monglemeister",
        "subreddit": "cscareerquestions",
        "content": "Company A offer: $150k base + 10% bonus + $30k RSU package.It is a large well known tech company that has had good performance this year. This specific role will be remote. From what I’ve heard in interviews it is a fast pace company so not the type of job to coast.Company B offer: $160k baseIt is an AI startup that has already secured funding for the year and is actually already profitable. It’s a cool product and there is very strong demand for the product within the space and a very promising growth plan. It’s also a fast pace environment. The role is hybrid (3 days) and my commute is about 20 min but I can move walking distance to the office in 3 months.Both jobs are for a midlevel full stack dev and I have 3.5 YOE. Same tech stack which I have experience in. Mainly wondering if it is worth it to go for an AI startup due to growth potential even tho it is hybrid and pays less. It also feels like all of the pros of a startup without any of the risk. But I also know there can be a lot of chaos in a startup environment so I’m not sure if I am ignoring that.",
        "score": 4,
        "upvote_ratio": 0.7,
        "num_comments": 17,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1ky2mqq/which_offer_should_i_take/",
        "created_utc": "2025-05-29 05:14:02",
        "extracted_at": "2025-05-30 01:39:38"
    },
    {
        "id": "1kxroke",
        "title": "i need help making a decision",
        "author": "Select_Signature_390",
        "subreddit": "cscareerquestions",
        "content": "i’m a dev with 2-3 years now. still jr but with some experience. i have been thinking about getting a masters for a couple reasons: self-development, more knowledge if the field, possibly increasing my potential to get hired, and of course growing interest in the field. i’m doing promising work rn at my current place, working with blockchain, building apis, and devops work. the only thing is i’m not getting paid enough, as in, i can barely pay my rent, so i’m doing 1-2 part time jobs as well. it burns me out because i have to work every single day without a single moment to rest other than sleeping. i feel bad for my gf for sticking up to me but also thankful for the same reason.should the above reasons be the right things to be considering for grad school? i’m thinking of pursuing a masters for ai/ml, swe, or cybersecurity. i just need suggestions/recommendations from people in this field.",
        "score": 3,
        "upvote_ratio": 1.0,
        "num_comments": 2,
        "url": "https://www.reddit.com/r/cscareerquestions/comments/1kxroke/i_need_help_making_a_decision/",
        "created_utc": "2025-05-28 20:31:28",
        "extracted_at": "2025-05-30 01:39:38"
    }
]