id,body,author,created_utc,score,subreddit,parent_id,is_submitter,distinguished
n5ogb1b,">What’s changed?It's a bad job market. There have been waves and waves of layoffs across the industry. Even for experienced folks, there are lots more laid-off people looking for jobs in this market so it's just more competitive. Entry-level is fucked beyond belief.>Why are companies acting like jerks?They can afford to be more picky. Sometimes, it does seem quite ridiculous though and I do feel that many employers actually have unreasonable expectations and are so hostile/skeptical of others' work experience that they want perfection.",Illustrious-Pound266,2025-07-28 21:03:30,261,dataengineering,t3_1mbs1iw,False,
n5okh9y,"Yes 1000%. Data engineers are now expected to be a business analyst, data engineer and data analyst at the same time. I recently joined a new company and I'm absolutely blown away by the use of delivery teams, lack of anyone doing real work outside the data engineer and dashboard critiques from end users. Then they wonder why they can't find someone or when they do ends up telling them ""I haven't done that before"" and throws off the quarters goals, which is unacceptable. No idea how to deal with it but I really think they're just using the shit job market to expand our responsibilities to save money in the short term. In 5 years when the data no longer makes sense and they need to find another excuse for a redesign we will see the find out part of fuck around and find out.",SoggyGrayDuck,2025-07-28 21:24:06,109,dataengineering,t3_1mbs1iw,False,
n5pa727,"Agreed. The skill set required for data engineers has grown a lot faster than the pay. It’s basically the awful job market allowing employers to be more picky and hold out for unicorns.These days DE’s are also expected to have a deep knowledge of things that used to fall under DevOps, like CI/CD, and infrastructure as code. There’s also far more stakeholder management required as BAs and middle managers have gotten wiped out.",Acceptable-Wasabi429,2025-07-28 23:40:54,28,dataengineering,t3_1mbs1iw,False,
n5okjk6,Funny post history,Onaliquidrock,2025-07-28 21:24:24,99,dataengineering,t3_1mbs1iw,False,
n5oqt16,"The perks part is funny since you did have two full time jobs. That said, the job market is brutal. Healthcare is the main industry that is hiring but it is difficult to transition from one industry to another",shadow_moon45,2025-07-28 21:56:13,27,dataengineering,t3_1mbs1iw,False,
n5ofwxg,Tell me more about your Reddit post / comment history … how many jobs do you typically have at a time?,winsletts,2025-07-28 21:01:33,72,dataengineering,t3_1mbs1iw,False,
n5oubbo,"Bro, same. 10+ years. Was in the position where I was the one hiring a team last year. Now on a bullshit job search myself for 10 months.",Resquid,2025-07-28 22:14:43,12,dataengineering,t3_1mbs1iw,False,
n5ox80u,Willing to connect my fellow data engineers with two potential opportunities. DM me directly.,ahmer_amin,2025-07-28 22:30:15,9,dataengineering,t3_1mbs1iw,False,
n5pfzr5,It’s all data scientists or AI engineers now. Pipeline are taken for granted.,flyingbuta,2025-07-29 00:13:14,10,dataengineering,t3_1mbs1iw,False,
n5qc9jq,Most all of these interviews are performative so I try not to take them personally. I just got hired on mid-level and the technical interview question I had to answer was a LC easy question asking to return a min value from an array.I’ve done a bit of work in AWS and they liked that I understood the industry and had done extensive work in regulatory research and converting those to technical solutions. But what I think what actually got me hired was that a Senior Engineer at the company who is respected by my new boss vouched for me pretty hard.It’s dumb that we have to do a ridiculous song and dance for employers in the interviews but that’s the metric we’ve all collectively agreed to compete with each other in. When the person making the decision likes you they will scrutinize less over the petty things and hire you for those transferable skills and mostly that they could see themselves actually want to work with you.,bg_bearcules,2025-07-29 03:25:14,8,dataengineering,t3_1mbs1iw,False,
n6kjlr2,Before I started working full time with SQL and databases I believed it was easy. I mean why do we need sql devs any idiot can join two tables.Suddenly I started working at a company with a 20 year old legacy sql platform and I realized I knew nothing about sql and databases.,Middle_Ask_5716,2025-08-02 18:55:11,121,dataengineering,t3_1mfx209,False,
n6kbjer,I believe this is a good example of the Dunning-Kruger effect. I experience it often. It's not that I think less of others; it's just that I never fully understand the depth of a topic until I am fully immersed in it.,macaddictr,2025-08-02 18:10:28,111,dataengineering,t3_1mfx209,False,
n6kixh5,It is more of a specialty of systems engineering,dev_l1x_be,2025-08-02 18:51:22,31,dataengineering,t3_1mfx209,False,
n6ks2zk,Most data intensive initiatives at companies I’ve worked at are “lost in the weeds”. People are so fuckn tech infatuated that they can’t focus on the business problem. All cloud vendors prefer this state of confusion as it’s what fills up their coffers.,soundboyselecta,2025-08-02 19:42:33,20,dataengineering,t3_1mfx209,False,
n6ki4d6,I went from software to data Eng. It’s a journey. But many of the principles apply .. but need to be adapted.,botswana99,2025-08-02 18:46:44,14,dataengineering,t3_1mfx209,False,
n6lcu4c,The perception of data engineering as a subset of software engineering is common and badly misguided. SWEs rarely face the daily challenges faced by data engineers.,GreenWoodDragon,2025-08-02 21:37:07,14,dataengineering,t3_1mfx209,False,
n6lv2ct,Data engineering is the proper stacking and cleaning of haystacks so that the analyst can find that needle in the haystacks,lzwzli,2025-08-02 23:23:24,11,dataengineering,t3_1mfx209,False,
n6l60jh,"I originally started my career as a general software engineer and was so pissed when a lot of the work I did in my first internship and full-time software engineering role ended up being a bunch of data work that the other SWEs didn’t want to do. It seemed that I was just being thrown the scraps, and to them, I was.Then I got to do some CRUD app development that they were all doing - and I hated it. I much preferred all of the performance and scaling considerations I had to keep in mind when doing the data-related development. General business app development was extremely boring to me by comparison.Spent the past 20 years doing data engineering/data integration work - and while I’m sure the app development space has changed - I can’t see myself ever moving away from data - the problems still interest me to this day.",cloyd-ac,2025-08-02 20:59:10,10,dataengineering,t3_1mfx209,False,
n6koaxy,"As a Data Engineer, I can tell you: you’re not alone. But you have a key difference with most people: respect.I can tell you it’s a tad frustrating to face software engineer colleagues acting all snob thinking they know tech and you don’t. Always have to set things straight when coming into a new job. Glad to hear you’re not one of them.",FOXAcemond,2025-08-02 19:21:07,8,dataengineering,t3_1mfx209,False,
n6kmfeg,"Yes I hate the terminology.Data lakes, warehouses, discovery cubes, all these things where it's like... Ok, you can only describe it in metaphor? Truly?",Throwaway999222111,2025-08-02 19:10:42,17,dataengineering,t3_1mfx209,False,
n5tcbuh,Nice idea !! but please remove \_\_pycache\_\_ from the repo,Awkward-Cupcake6219,2025-07-29 16:05:51,81,dataengineering,t3_1mc9qcp,False,
n5u2qsq,You missed the chance to call your project `kafkaesque` :face_with_tongue:,sjcuthbertson,2025-07-29 18:06:23,84,dataengineering,t3_1mc9qcp,False,
n5u5e9v,Insufficient bureaucracy and alienation. Could be improved by implementing a dreamlike sequence where the code is inexplicably flogged in an attic.,Impressive_Bed_287,2025-07-29 18:18:44,40,dataengineering,t3_1mc9qcp,False,
n5u36x6,Show this over in r/apachekafka,kabooozie,2025-07-29 18:08:27,11,dataengineering,t3_1mc9qcp,False,
n5sy3oj,That theme is nice,duranium_dog,2025-07-29 14:59:15,10,dataengineering,t3_1mc9qcp,False,
n5uiqq2,"Awesome, the best way to learn!",calvincat123,2025-07-29 19:20:53,3,dataengineering,t3_1mc9qcp,False,
n5uzhqw,"That's so cool! I haven't done Kafka from scratch, but I did spend time automating some web tasks with Python. For proxies and scraping, Webodofy worked well for me. If you dive into automating Kafka tasks, those skills might come in handy too!",Anyofourclients,2025-07-29 20:40:08,2,dataengineering,t3_1mc9qcp,False,
n5v45xa,This is so cool! Great job!,anxietymeetsart,2025-07-29 21:01:45,2,dataengineering,t3_1mc9qcp,False,
n5wr283,"You built a simple somewhat queue with lots of flaws, could have just used -> https://docs.python.org/3/library/queue.html.You did not implement actually anything that makes Kafka unique such as topic partitioning, segmenting, storage, restrained pulling on the consumer side...What you built has NOTHING to do with kafka, not even a mini version. You implemented a simple observer pattern with a broker in between that is neither thread safe nor supports any form of concurrency (it's not even in a state to be called a queue)",liveticker1,2025-07-30 02:23:09,10,dataengineering,t3_1mc9qcp,False,
n5t6tvy,Where did you find the paper,k_schouhan,2025-07-29 15:40:27,1,dataengineering,t3_1mc9qcp,False,
n6egl0c,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-01 19:09:22,1,dataengineering,t3_1mf5ccy,False,moderator
n6ehe4g,The market is flooded with laid off over qualified people. They don’t need to hire with the expectation someone will grow into their role when there are many experienced people looking for work.,mplsbro,2025-08-01 19:13:21,271,dataengineering,t3_1mf5ccy,False,
n6ex8x1,"My company just put up a job ad for a DE position. In one day, received over 1000 applicants. Including very qualified applicants from direct competitors and internal transfers (with recommendations and introduction from their managers who know the hiring manager personally). The position is unlikely to go to anyone who is external. Direct competitor has a chance if they are beyond stellar. You are competing with applicants who have connections plus are experienced plus have direct knowledge of the domain.Another company I know put up a fake job posting for DE (the position was already hired, but needed to repost due to a migration to a new hiring systems). They purposely only posted the position on their public website and did not post on any job boards. Received 300 applicants in less than 1 day.Sad thing was, their automated rejection email says: “we have reviewed your background and qualifications and determined that we do not have a position for you” pretty fucked up considering that not a single applicant was reviewed since it was a fake posting.This position did go to someone who needs training though, that person had alot of experience in DA, but none in DE, and since high DA salaries are in-line with entry level DE, they know the applicant is capable and will stay. The company received many stellar applicants, but didn’t have the budget to pay for their asking salaries. Also, they wouldn’t lowball someone experienced since that person will quit the second the market improves.",-ChrisBlue-,2025-08-01 20:32:13,30,dataengineering,t3_1mf5ccy,False,
n6ej09v,Supply and demand. There’s more people with skills now and they can be picky.,ShiftySam,2025-08-01 19:21:17,85,dataengineering,t3_1mf5ccy,False,
n6ekg96,"They don’t even hire for experience, so even less for lack of experience.",a-vibe-coder,2025-08-01 19:28:29,60,dataengineering,t3_1mf5ccy,False,
n6ezxxv,"I mean, why should they? If I have 10 applicants, 5 are in india and require a visa, 3 have applicable work experience but no direct experience, and 2 are laid off senior engineers/scientists with a decade of relevant experience, which candidates would you be considering?",ChipsAhoy21,2025-08-01 20:45:35,17,dataengineering,t3_1mf5ccy,False,
n6elkwg,"There have been hundreds of thousands of tech layoffs the past few years. Hundreds of thousands of people with stem degrees who can do leetcode, work remotely, and learn on their own whatever it is you think you could learn on the job if only you were given the opportunity. Expect to see entry level jobs disappear as the job market grows more competitive and companies shift to hiring seniors who can automate most of the remaining jobs.Welcome to the future of tech.",Ralwus,2025-08-01 19:34:08,36,dataengineering,t3_1mf5ccy,False,
n6evzet,"I think it's just the nature of the uncertain job market and the wider economy right now. We're seemingly constantly on the edge of recession, and that mixed with the hype and fears around AI, I just think it's generally an uncertain time for companies. I recently found a DE role fresh out of a STEM PhD with a lot of Data Science/ML experience through the PhD. I faced 6 months of rejections for DS roles, even entry-level data analysis roles. Nobody would hire me. The company that finally did hire me were one of very few willing to take someone on with little hands-on experience, but a capable brain and decent skills in Python and SQL. I thought I kind of fumbled the interviews, but they offered me the job and told me they liked how I approached solving problems.",elmo_touches_me,2025-08-01 20:26:00,19,dataengineering,t3_1mf5ccy,False,
n6eosd1,"The jobs exist. I just hired one. Team culture matters.Offshore, on the other hand, isn't hired for potential. They're hired to crank out product as cheap as possible.Fundamentals matter. I ask conversational questions and I can tell if you're trainable based on the conversation. No take home test or live coding.",DistanceOk1255,2025-08-01 19:50:07,22,dataengineering,t3_1mf5ccy,False,
n6ep6jn,"""Learn to code bro"" was always going to age poorly",Brilliant-Gur9384,2025-08-01 19:52:06,13,dataengineering,t3_1mf5ccy,False,
n69uzx6,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-01 01:30:23,1,dataengineering,t3_1mejjjx,False,moderator
n69zicq,Lots of applicants have the tech skills. Far fewer have business skills. A data engineer who knows the ins and outs of the business area that generates and uses their data is worth their weight in gold.,OneMooreIdea,2025-08-01 01:57:47,225,dataengineering,t3_1mejjjx,False,
n69vmss,SQL for ever!,thinkingtitan,2025-08-01 01:34:16,257,dataengineering,t3_1mejjjx,False,
n69xgq8,"Honestly, there isn’t one magic skill that’ll make you layoff-proof but if I had to sum it up, it would be the ability to build fast, get things into production, and keep improving it.This field runs on business needs. They’ll hire the plumber who can build the pipeline, not the one who argues about pipe brands. They don’t care what language you write “Hello, World” in, just whether you can deliver something that actually makes their world better.Keep your skills sharp by building. Keep learning by doing. That’s the real edge.",barely_functional_de,2025-08-01 01:45:24,96,dataengineering,t3_1mejjjx,False,
n69wd69,Communication,One-Salamander9685,2025-08-01 01:38:44,129,dataengineering,t3_1mejjjx,False,
n6a9npi,Documentation and writing. It wont make you more marketable but will enamour yourself with everyone who uses your documentation. Data engineering is hard. The pieces that come together so that you can stand up a new application is often poorly-documented and the many pieces that it takes to stand up a new application can delay or demolish a project timeline. Clearly documenting the steps to get those pieces in place and showing your knowledgeability and attention to detail is a way to ensure you are someone who will be kept before those who just do their job. Parlaying your knowledge by helping other across your clients departments to tackle those challenges will build you a reputation that will help you advance or at the very least make you a must-keep.,AdFamiliar4776,2025-08-01 03:01:13,14,dataengineering,t3_1mejjjx,False,
n6aahjo,"Someone please correct me on this, but I feel like being able to **automate processes using parameterized templates** is a good skill to have. It's not really written on the apps I've seen, but they request ""DevOps"" skills and I think this is what they mean. This is a weak-spot for me that I need to get on.",palomino-ridin-21,2025-08-01 03:06:44,6,dataengineering,t3_1mejjjx,False,
n6ahlgs,"I’ve always said a good DE has 3 things:1) A good set of tools - SQL, Python, Airflow, etc - but be an expert in a couple and familiar with others. 2) Be able to make good data models - from storage, to AI, to reporting everyone will thank you. 3) Business knowledge - this is often overlooked but can set you apart from generic candidates.",MRWH35,2025-08-01 03:55:52,6,dataengineering,t3_1mejjjx,False,
n69w0gl,Python,PoochyPoochPooch,2025-08-01 01:36:35,4,dataengineering,t3_1mejjjx,False,
n69wrii,"Curious, what’s your current skill set and the tech stack used in your “big 4” company?",t2rgus,2025-08-01 01:41:09,5,dataengineering,t3_1mejjjx,False,
n5z38gq,Sane take. Ironically I'm pretty sure this was written by AI,One-Salamander9685,2025-07-30 13:20:14,60,dataengineering,t3_1md5wp9,False,
n5z62dt,"Great take. Large orgs are filled with sycophant middle managersI have had two F500 CTOs tell me “when one of my managers asks for headcount, I tell them they first need to explain why AI can’t do this job in a year” word for word. I know they all socialize with each other, so I’m sure the mindset will continue to spread until there’s an infamous AI-employee blow up",EazyE1111111,2025-07-30 13:35:34,13,dataengineering,t3_1md5wp9,False,
n5zh7zi,"I'm so glad we created a ruling class of idiot-kings convinced that bullshitting each other is the highest calling and the only way to manage a business, then built a machine that writes infinite sycophantic bullshit.Honestly we're lucky they aren't *all* worshipping ChatGPT yet.",GrandMasterSpaceBat,2025-07-30 14:32:02,8,dataengineering,t3_1md5wp9,False,
n6462vg,"This is a really great take. LLMs are great tools, but nowhere close to replacing anyone. Now we just have to convince management to pay for licenses *and* headcount lol",wombatsock,2025-07-31 05:34:03,2,dataengineering,t3_1md5wp9,False,
n661vy9,"I don't even go to my boss with questions anymore. He literally just types into ChatGPT, *prints it* then gives it to me. ![gif](giphy|Mp4hQy51LjY6A)",Drone_Worker_6708,2025-07-31 14:07:51,2,dataengineering,t3_1md5wp9,False,
n68pb1n,"> You won’t be replaced by a language model. But you can be displaced by the perception that one is “good enough.”I think the arguments on both sides of the LLM table are misplaced.Every conversation online about AI replacing humans is centered around looking at it from an individualistic perspective. But that’s not how labor works in the workplace.Essentially, both of the below statements can be true:- AI can’t be a drop-in replacement for Data Engineering- I, as a Data Engineer, can be replaced with AI.If a company begins using LLMs to perform tasks that are repetitive/boilerplate/specific to the strengths of the LLM, and that work makes up a X% of the labor of their data engineering department, allowing for more time from each individual data engineer to perform more work suited for the human DE, then justification for keeping ALL of the original labor isn’t there - assuming the same amount of work is being done.When looking at this from the macroeconomic scale, yes the usage of LLMs to increase productivity in the workplace - whether by agentic automation or simply by using it as a quicker and more efficient task-oriented search engine, WILL have an effect on the number of jobs available in DE and very well could lead to YOU being replaced by an AI, while not replacing all DEs.At any rate, I generally agree with your points on side-stepping being labeled for replacement by embracing and becoming the expert in the business with LLMs usage. It’s what I’ve done and led to me being promoted and now sitting in a much higher position within the company I work for.",cloyd-ac,2025-07-31 21:37:50,2,dataengineering,t3_1md5wp9,False,
n5zd8lb,"Sure it works ""well enough"" now but without experience and knowledge how will a user know when LLM goes sour or starts hallucinating. Without people to correct the output, what do you do when it does?  AI is a tool.  History's most expensive rubber duck.",CiDevant,2025-07-30 14:12:34,3,dataengineering,t3_1md5wp9,False,
n5z7hzk,"I used AI to clean up my brain dump a bit but it missed many points (LLMs do not understand what is important in a text for example, LLM summaries feel like random sampling sometimes) so I re-edited it and that's why it looks like a readable partly generated mess. Hence ""quick"" This take comes from talking to a ton of people in the industry from practitioners to vendors (i am a DE and a cofounder at dlthub and thus come in contact with a lot) and tying together what i see from people in different positions.",Thinker_Assignment,2025-07-30 13:43:17,13,dataengineering,t1_n5z38gq,True,
n5z96y5,"there's another character i didn't talk about in the above and that's the LLM ""oracle"" - the person who believes LLMs will solve everything, and believe LLMs are actually a replacement or on track to be a replacement for humans. Those are the most dangerous because they spread false ideas that are very attractive and get traction despite their incorrectness.This makes me think back to 2014? when consultants promised data science would predict the future and who wowed management in presentations because big words and pretty charts, but in practice charged for work that never worked.The good news is this won't change our outlook - the antidote to being scammed is having knowledgeable people in house to cut through the BS.",Thinker_Assignment,2025-07-30 13:52:13,9,dataengineering,t1_n5z62dt,True,
n5zm0li,I like the emphasis on *all*,Thinker_Assignment,2025-07-30 14:54:55,2,dataengineering,t1_n5zh7zi,True,
n5t92b0,"It's an unfortunate problem. I've been a DE for about 3 years and could probably list a lot of tools among my experience, but the coding in the actual day to day work of my job is little more than df = spark.read.parquet --> df.write.saveAsTable. I've done a fair amount of platform admin stuff, setting up and managing Unity Catalog in Databricks, but my team is mainly responsible for simple raw data ingestion. A lot of the stuff we use, even if it isn't AI, just abstracts away the parts that are interesting or challenging. I'm pretty close to looking for a new job and I'm not optimistic about it. For now I'm trying to supplement my work with projects.",TheSocialistGoblin,2025-07-29 15:50:42,58,dataengineering,t3_1mce29s,False,
n5t97fs,"As someone on both sides of the table, I get the frustration. There's a huge gap between listing every tool under the sun and actually understanding core data engineering concepts. And yeah it’s very obvious when someone’s leaning too hard on AI-generated answers.Honestly, the best interviews I’ve seen (or given) focus on real-world tradeoffs: pipeline design, data modeling, debugging stuff you can’t fake with Chat GPT. Tooling comes and goes, but critical thinking and basic coding skill are non-negotiable.",eb0373284,2025-07-29 15:51:21,24,dataengineering,t3_1mce29s,False,
n5t7e7m,"I just reject them all until I find a genuine person. 10-15 minutes phone screens for resumes that don’t look keyword stuffed or chatGPT’d. Technicals for people who sound like they know what they’re talking about and don’t sound like a robot. Canned/vague answers instant reject. I wrote a long technical about data validation with ambiguous instructions to prompt conversation and clarifications, candidate is not expected to finish and is expected to communicate and think about the problem.I’ve had candidates who just type out the “perfect” solution in silence without asking a single question. Instant reject.Also recruiters are ass and send me horrible resumes. Also sometimes I can’t believe people aren’t embarrassed by the mess of a resume they send out (not the contents, the horrible formatting, unreadable fonts, badly formatted, 10 densely packed pages or jargon, etc.)",MonochromeDinosaur,2025-07-29 15:43:04,18,dataengineering,t3_1mce29s,False,
n5u1icu,How else does someone get past the recruitment filter? I have two years of engineering experience and I've built projects to showcase that I have the appropriate skills to become a good data engineer. My resume might not be great but I don't even get interview calls. I'm open to any criticism on my resume if you're willing to have a look. It feels like recruiters see my two years and put them in the garbage. How else am I supposed to get any experience without landing any interviews or roles. I don't believe your post is extremely helpful for those who genuinely have put in efforts and don't get any callbacks. It's hard for people to see or understand our perspective. I have the skills and projects to back up my argument. I'm not saying I'm the best data engineer with limited experience but I believe I can get the job done. I just need a chance to prove that which doesn't come by often if at all.,deathstroke3718,2025-07-29 18:00:39,11,dataengineering,t3_1mce29s,False,
n5u0sql,"If you’re looking for a senior/lead, I’ve been having a bad time applying, just saying :disappointed_face:",EarthGoddessDude,2025-07-29 17:57:27,9,dataengineering,t3_1mce29s,False,
n5tla7x,"I see this all the time with candidates. It shocks me how the majority of candidates don’t even have basic SQL or Python skills. It’s on their resumes and they say all the right things to our recruiters but can’t pass basic coding tests. I understand that people can be great at using tools, but not knowing the basics is a nonstarter.",Greendaysgood,2025-07-29 16:47:37,5,dataengineering,t3_1mce29s,False,
n5tbn9u,"It's simple, all of a sudden the hiring processed is totally divorced to daily work of a data engineerSpecs now create an impression from my DE work experience anyway, that a data engineer is involved in ALL implementation stages of taking data from the source to the final dashboard.Not saying that does not happen or is not something worthy of aspiration but I just did not see this in my experienceWhat I saw is the delegation of tasks based on random team dynamics and of course strengths, where one will focus on complicated sql transformations in one project in another configure data factory tasks in some pipeline, process this weird file format with really data and insert it to this delta table, write this api whose data source is some ancient Google backed up file system, automate these views based on some ill defined metadata table and so on",xahkz,2025-07-29 16:02:38,3,dataengineering,t3_1mce29s,False,
n5vrf8r,"Yeah I seriously appreciate fairness in hiring. There have been some interviews I was rejected from where I felt like it was a learning experience and totally fair. Others, it felt like they had unrealistic expectations or that they created problems from unrealistic situations. Those have just been demoralizing",ironmagnesiumzinc,2025-07-29 23:00:43,3,dataengineering,t3_1mce29s,False,
n5ue9zw,Companies are pushing AI just as heavily. I feel it is disingenuous to ask candidates to stop coding using AI when that's what my company is asking our engineers to do (code as heavily with AI as possible).,Toastbuns,2025-07-29 18:59:50,4,dataengineering,t3_1mce29s,False,
n5zw0ak,But dude I’m trying to get a vibe job/s,Dielawnv1,2025-07-30 15:43:09,2,dataengineering,t3_1mce29s,False,
n5j7q7u,"That's the neat thing, they all become data swamps",programaticallycat5e,2025-07-28 01:22:06,291,dataengineering,t3_1mb3280,False,
n5ja2a0,The sick joke is that it’s whatever will land you your next job. The reality is that for 99% of cases if you’ve only got a few TBs to manage and 10-100 users you could get by with postgres with some decent data modeling.,farmf00d,2025-07-28 01:36:54,79,dataengineering,t3_1mb3280,False,
n5j8syf,"You don’t. That decision is made at a golf course that you’re not invited to. The quicker you learn this, the better for you.",domestic_protobuf,2025-07-28 01:28:56,176,dataengineering,t3_1mb3280,False,
n5ja44m,"Use the right data model for the job. If you’re torn, use a database because it’ll force you to have structure and if you denormalize your data—performance. Call me a luddite or something.",shockjaw,2025-07-28 01:37:13,27,dataengineering,t3_1mb3280,False,
n5jydq6,"Database for transactional stuff, warehouse/lake/lakehouse based on whatever long term contract your executives signed",MateTheNate,2025-07-28 04:21:41,26,dataengineering,t3_1mb3280,False,
n5kg1oy,"Database: your mom cleaning your bedroom as a kid. she knows what this is an where to put it. You don't know where it is now or how to get it.Datalake: you try cleaning your own bedroom, by shoving everything into a cupboard. DO NOT open that door or try to look inside. Ever.Data Warehouse: you finally think you can tidy it like your mom. Organised, scheduled, you have a place for everything.Data lakehouse: what you actually built instead of a warehouse. Some of it makes sense, but then you got bored before finishing the job and just shoved all the rest into a cupboard. You proudly tell mom you tidied your room just like her, and show her the warehouse only bit of it.",umognog,2025-07-28 06:54:55,46,dataengineering,t3_1mb3280,False,
n5kacqt,I just call them all database so I dont have to worry about that,NoleMercy05,2025-07-28 06:02:45,24,dataengineering,t3_1mb3280,False,
n5jlu6i,Personally I like the data cesspool.,Just-A-Thoughts,2025-07-28 02:51:44,15,dataengineering,t3_1mb3280,False,
n5m27am,"This is really funny and really sad at the same time. You are getting confused by marketing terms and, unfortunately, that is by design. I think you can spot me what a database is. That's pretty straight forward. A data warehouse is just a very, very large database. There are two different database areas, operational and analytic. They are characterised by the SLAs you have on the data. Smaller databases are normally used for operational because you need fast response times. In analytic, the response times aren't normally as critical but they handle quite a bit more data; much of it historic. In a perfect world, if you could do both with the same system, you would. The problem is the cost to do them all in one. Of course, these are gross oversimplifications but it gets the idea across. In addition to the database component, the surrounding data ecosystems are different but they have many commonalities.Data Lake and Lakehouse are both marketing BS. Nothing more. The same is true of ""medalion architecture."" It is an attemp to make the standard three tier (staging, core, semantic) into to something different by giving it a new coat of paint. Someone noticed that you can store quite a bit of extra ""stuff"" in the staging layer beyond what the database needs. Of course, the marketing folks thought that needed a new name. I think we are at the point now where we just keep adding buzzwords to the names. It's like a technical pin the tail on the donkey. The latest is ""now with more AI!."" A data ecosystem is a complicated enough of an endeavor without all the confusion that is being pushed on it purposefully. I haven't even started in on Inmon, Kimball, Stars, Snowflakes, the various normal forms, ETL/ELT, etc. Good luck on your journey.",marketlurker,2025-07-28 14:17:25,7,dataengineering,t3_1mb3280,False,
n5k77wj,Whoever answers these questions without an “it depends” shouldn’t be near any of these systems with an access policy beyond reader.,Old-Scholar-1812,2025-07-28 05:34:50,11,dataengineering,t3_1mb3280,False,
n6710gn,"Depends how good you are in programming and SQL. And nothing wrong becoming max an analytics engineer. But yeah, if you really want to go into platforming, then that would be tricky. But most of the things you will learn on the job. Is there an option for you to enroll in the DE team?",yellowmamba_97,2025-07-31 16:53:30,50,dataengineering,t3_1me6rsv,False,
n67a0jz,Depends on where the **job you are applying to** is in the data engineering spectrum.Unfortunately Data Engineering is not a well defined concept across companies. It’s a title whose responsibilities are on spectrum that can range from full blown software engineering all the way to and including analytics engineering. There’s more money the closer you are to the software engineering side. That is true. I just got 2 competing 200K+ offers this week (still deciding) due to my software and DevOps experience. Looking at the SQL side of the spectrum when doing compensation comparisons for this decision compensation was closer to 100-130K which is what I currently make doing waaaay more than just SQL. I wasn’t looking for a job but my network reached out to me and clearly I was undervaluing my skills because I was comfortable.,MonochromeDinosaur,2025-07-31 17:34:04,22,dataengineering,t3_1me6rsv,False,
n6789sj,"u/informatica6 I have been in BI & DE since 2008 and I have seen and built on-prem to on cloud solutions.You can go forever in BI & DE considering you acquire the new concepts, new platforms and new technologies consistently. Now when it comes to networking, security & alogs those are required in Solution Architect or Enterprise data architect roles. If you are aspiring such roles you will have to learn all of those. Also you can learn those gradually as you will elevating in your role and learn the advance skills over the period of time.Keep learning, keep working and keep earning.",Intelligent-Pie-2994,2025-07-31 17:26:13,8,dataengineering,t3_1me6rsv,False,
n671ou9,"Currant...Not that it's wrong to know, it's always good, especially architecture in my opinion, a huge difference, but whoever told you this weighed in, it goes from company to company, I dare say that in large companies the work will be so segmented that you won't even have space to ""think""",AfroTsundere,2025-07-31 16:56:35,7,dataengineering,t3_1me6rsv,False,
n679psk,"Ultimately, it’s about how much you can learn and the depths you take it. But I will say typical data engineering in my experience is very different than software engineering. We just care about optimizing for different things, usually. I was a DS for 5-6 years, decided it wasn’t for me but got reaaaaally good at SQL. Got an Analytics Engineer position where I got really good at dbt without knowing any dbt prior (like power user doing crazy jinja gymnastics). I then moved to the internal analytics data architecture team as basically a DE/architect but officially “lead AE” with an expertise in ML and dbt. Now I’m a staff DE at a a huge company making dbt models still, but also creating data pipelines. I basically picked something that could be used across other disciplines and got really good at those things. If I picked something to learn, I learned the shit out of it.",ImJustMedium,2025-07-31 17:32:42,5,dataengineering,t3_1me6rsv,False,
n67xwxj,How far can you get into Wood Working without Working?,numbsafari,2025-07-31 19:26:07,4,dataengineering,t3_1me6rsv,False,
n671xjs,"You are fine as long as you stay in the Analytic side (data warehousing), because everything is preserved in an upstream source for a certain number of days/weeks/months, and you can always scrape and do it from scratch if you messed things up (hopefully not though).But once you go upstream then SWE principles immediately become more than a good-to-have, a mandatory.",redditthrowaway0315,2025-07-31 16:57:40,4,dataengineering,t3_1me6rsv,False,
n672ppc,Data & software are different fields in my country (EUW),Wingedchestnut,2025-07-31 17:01:11,5,dataengineering,t3_1me6rsv,False,
n679zx5,"I have no software engineering background and managed to become a senior data engineer. Mostly because I was a junior DE on the reporting side. So it was mostly sql and some python. I then became an advanced user on the tooling we used (dbt, snowflake, databricks, terraform, etc) and by simply doing my job plus having an engineer mindset, I learned to become a proficient data engineer. Also Im sure If I change companies to a more streaming and real time data engineering I would be completely lost BUT i will figure it out eventually",rudboi12,2025-07-31 17:34:00,3,dataengineering,t3_1me6rsv,False,
n68ew62,Just need Python and SQL down. Rest are tools and UI. I am learning myself as well.,tojeparty123,2025-07-31 20:46:57,3,dataengineering,t3_1me6rsv,False,
n64awle,"Absolutely yes. This isn't even internal users, extends to clients also. After an initial period of usage, no one uses them.The only exception is when dashboards provide actions that they need to take on a near daily basis. Anything purely analytical just gets exported.",junglemeinmor,2025-07-31 06:15:49,54,dataengineering,t3_1mdtjv7,False,
n65jmyv,"I agree with your premise and support the article. That said, this is not a great article. I understand that this is more of a blog post than an academic paper, but you make multiple claims without backing them up with evidence.> Tableau's $15.7B acquisition by Salesforce (in 2019) hasn't changed the fact that 75% of dashboards are crap and go unused within weeks.If you're going to use a number like 75%, you need to back that up with evidence.> Elite leaders like Jeff Bezos, Warren Buffett, and Jason Fried rely on alternative methods—narrative memos, deep reading, and gut checks—to make effective strategic decisions.Appeal to authority fallacy. Those methods may be better, but you don't explain why. Instead you hide behind the world's richest as justification.> They create decision bottlenecks. ""We need more data"" becomes the excuse for indecision.While the second sentence is true, that isn't the fault of dashboarding.Remember, I'm on your side, I agree with what you said, but you're not going to convince the non-believers without improving your arguments.",Automatic_Red,2025-07-31 12:29:50,40,dataengineering,t3_1mdtjv7,False,
n659r67,"I think exporting to excel should be considered a win. It’s users making use of a joined up database using correct business logic. They may not have direct db access or the knowledge or tools to correctly replicate metrics. And they export to excel because they’re trying to make a decision or get more insight. For the rest? Yeah if a dashboard is for information only, it is used rarely at best. If it packages all the information someone needs to make a decision, it will.",HumerousMoniker,2025-07-31 11:26:20,30,dataengineering,t3_1mdtjv7,False,
n64m7p7,"It presents a good argument though it misses a few basics of people.A lot of leaders don't want accountability, dashboards and metrics allow them to obfuscate that, the percentage of leaders who'd even be willing to embrace a test like this is very much in the minority.",Alogan19,2025-07-31 08:00:13,17,dataengineering,t3_1mdtjv7,False,
n65h3ib,"I don't disagree with the general point being made but I can't say the other media being offered offer much transferrable practical insight - it just comes across as more specious management course claptrap.> But more revealing is Bezos's ""70% rule"" for decision-making. He advocates making decisions when you have about 70% of the information you wish you hadOk, and how much is that, exactly? A lot of decisions don't have a massive checklist of ""all the things I need to know"" that, when you get to 70% acts as a threshold triggering the decision. A lot of decisions rely on knowledge and experience and attempting to quantify that at all ends up falling into the same trap that dashboards do: Qualitative judgements are only loosely connected to quantitative amounts.I don't doubt Jeff Bezos knows what he's doing up to a point but I have my doubts his actual working practice bears much resemblance to the principle he's expressing here. Plus I expect there's a healthy amount of survivorship bias going on when analysing whatever Bezos is doing - 100th idiot syndrome if you will. Just because it worked for him doesn't mean it will work for anyone else.",Impressive_Bed_287,2025-07-31 12:14:41,5,dataengineering,t3_1mdtjv7,False,
n65r9cx,"> In 2012, CEO Ron Johnson eliminated all coupons and sales for ""everyday low pricing,"" despite data showing that 70% of JCPenney's sales came from discounted items.You'd think this metric would be important to have on a dashboard. Sounds like they just didn't look at the data at all.",statusmalus,2025-07-31 13:13:14,4,dataengineering,t3_1mdtjv7,False,
n65b3qx,"""""leaders"""" shouldn't use dashboards at all. Get a domain expert to look at them and formulate a course of action, then propose that to the """"leader""""/decision maker.It is pretty rare for someone doing strategy or upper management to know enough about the details to properly interpret dashboards in my experience.I disagree with the article that dashboards are necessarily backwards-looking though. Good dashboards ideally include some amount of forecasting, and can even be prescriptive.",Tarqon,2025-07-31 11:35:50,9,dataengineering,t3_1mdtjv7,False,
n64of5y,"Don't their usage falls under Pareto/long tail usage definition?Only 20% of them are going to represent 80% of results? So, shouldn't we focus to bring support and all the priority structures to only 20%.The rest of the 80% can be monitored with some data lineage tool (or other type of tool) and as soon their life usage stops, all non used structure should be dedicated.As all data engs/analysts have been see this behavior everywhere.",Vreichvras,2025-07-31 08:21:05,6,dataengineering,t3_1mdtjv7,False,
n66k1yq,"Great article.It's interesting that you talk about the narrative-memo approach Bezos uses, because I've had the same thought for a while -- reading an essay backed up by data is much more convincing than just staring at a contextless dashboard. Numbers need to be put in context and fit into some kind of overarching narrative before it clicks. The great writers of Substack already understand this. Think Scott Alexander, Noah Smith, Nate Silver. Or go read Wolf Street. MUCH more intuitive than any business dashboard I've ever looked at.But the flip side of that is: when are dashboards appropriate? Should all analysis just be ad-hoc and narrative-driven? My intuition is that you should curate a very small, simple set of business-wide KPIs and put them on an internal website and have them update reliably a few times a day. For anything more strategic or involved, where there is a key decision to be made, you need analysts to put on the researcher hat and go do the analysis (hopefully with a nice clean data model that the DEs have set up). You need them to be opinionated. Dashboards aren't opinionated, they just tell you what happened without any further guidance.",BigNugget720,2025-07-31 15:33:52,2,dataengineering,t3_1mdtjv7,False,
n66k5kv,"The day we start auditing the utilization of the dashboard we come to realize that. Lots of dashboard are use just few week because it a for a short term need or question. After few month people forget about the existence of the dashboard. That is so depressing. The most use dashboard are the one for operational day to day of worker, not the one for decision making of the director.",suburbPatterns,2025-07-31 15:34:20,2,dataengineering,t3_1mdtjv7,False,
n6ci6l4,Interesting project. Have you tested this on written versus printed text?,ottovonbizmarkie,2025-08-01 13:29:13,5,dataengineering,t3_1meupk9,False,
n6df1mi,idk looks on point for invoices and the like,PencilBoy99,2025-08-01 16:09:21,1,dataengineering,t3_1meupk9,False,
n6ckbjc,Haven't tested it on handwritten yet but decent for the printed/scanned text. Will update on the handwritten text after some testing.,LostAmbassador6872,2025-08-01 13:40:32,2,dataengineering,t1_n6ci6l4,True,
n6enxrl,I've been very curious about locally being able to do written text recognition. There doesn't seem to be great solutions.,ottovonbizmarkie,2025-08-01 19:45:53,1,dataengineering,t1_n6ckbjc,False,
n60b9og,"Hype is hype precisely because it is emotional, and not factual. Only emotions matter in hypes. FOMO is a powerful one to choose from your arsenal, for instance.There is hardly anything controversial in these conclusions. They are accurate and factual. And everyone who now pumps ""vibe coding"" is going to tell you they knew it very well from the get-go, and will be selling you (likely AI-based) solutions for that problem.",Special-Bath-9433,2025-07-30 16:54:48,21,dataengineering,t3_1mdb9p7,False,
n608ykm,"Especially when domain knowledge, or business rules between the chair and the keyboard, are lost or obfuscated. Will read later…",SirGreybush,2025-07-30 16:44:11,35,dataengineering,t3_1mdb9p7,False,
n60cjwb,"Good read. The last few years on projects, my internal voice tells me: “I am charging a lot more going forward”The technical debt some of these devs racking up will be collected in a future date or crush them.",notlongnot,2025-07-30 17:00:30,12,dataengineering,t3_1mdb9p7,False,
n60oqo9,"I love using AI for my work, but I'm careful with how I use it. I treat it like I would a junior dev, I give context and details when tackling a new problem, then plan with it and refine the plan before I let it execute. Then I review, and it's a harsh review. After a few rounds of iteration, always going back to the plan stage, then it's sent to rest of the team for a PR. If you just open some code and use the fancy auto complete, or put GitHub copilot in agent mode and let it start working without making sure it understands the full scope you're in for a world of hurt.",Siege089,2025-07-30 17:54:51,12,dataengineering,t3_1mdb9p7,False,
n619ycc,"On point. The main problem is managing complexity, not generating code. Being able to do the latter more easily actually makes the former more difficult.",ambidextrousalpaca,2025-07-30 19:34:45,3,dataengineering,t3_1mdb9p7,False,
n61vlxt,"I think AI is great when you already know all of the facts and can accurately describe all of those facts with zero (and I mean literally zero) ambiguity. A really basic example is getting AI to do something you already know how to do.Sadly, this doesn't reflect real life when things hit a certain scale or complexity.",MikeDoesEverything,2025-07-30 21:16:10,3,dataengineering,t3_1mdb9p7,False,
n64j0u1,"Good read, might as well call it degenerative AI",Thinker_Assignment,2025-07-31 07:30:01,3,dataengineering,t3_1mdb9p7,False,
n60ah3r,Isn’t LLM generated content kinda reach an equilibrium where all the output for an input is the same? So it just means that there is no adaptation for new cases and thus no innovation?,Phenergan_boy,2025-07-30 16:51:14,2,dataengineering,t3_1mdb9p7,False,
n60ona3,"Nah, it's about changing the metric vs making sure it's correct now. It's all shareholders see and as long as you don't know it's wrong it's legal",SoggyGrayDuck,2025-07-30 17:54:26,1,dataengineering,t3_1mdb9p7,False,
n6fh4rh,Agreed.,TSMSURUMI,2025-08-01 22:15:49,1,dataengineering,t3_1mdb9p7,False,
n614sye,"Before taking drastic actions talk with your boss to understand why you where staffed there and how long are you going to be in that project. They may be playing internal politics and just have you staffed there while another project opens up, unless this is one of those consulting companies where they don't care about who they staff where.",linos100,2025-07-30 19:09:55,56,dataengineering,t3_1mdeifk,False,
n61u90x,just do it. this is how i learned scala. as long as they understand you're ramping up and to expect some dumb questions from you at the start you're learning for free.,Fearless-Change7162,2025-07-30 21:09:39,36,dataengineering,t3_1mdeifk,False,
n61joes,"You’re already there. Good way to learn, latch on to one of your seniors. Make your manager aware of the confusion though.",MonochromeDinosaur,2025-07-30 20:20:48,10,dataengineering,t3_1mdeifk,False,
n60yzwl,How on earth did you go through the entire interview process and the necessity for Java experience wasn’t discussed? And if it truly wasn’t you should be extremely candid with your manager and discuss alternative approaches that match your strong suits imo.,pewpshewtbaby,2025-07-30 18:42:08,17,dataengineering,t3_1mdeifk,False,
n630cj8,"I feel it's normal in this case and maybe a good opportunity to deep dive into data engineering.Java and data engineering are close together, e.g the famous Spark (written in Scala but basically JVM which related to Java), or Trino or Kafka.When I first came into data engineering, I worked with java BE API services and also with Spark, Kafka,.... People usually use Python things for data engineering but in the end, when it comes to high performance and streaming which involve more low level optimization, data engineering and backend dev are closer too. They share similar principles related to system design or distributed computing...I think this would be a good opportunity for you if you want to advance your career into low level stuffs which may help in the future",daszelos008,2025-07-31 00:56:11,4,dataengineering,t3_1mdeifk,False,
n60zell,"In my experience the only way to do the right thing is to reach out your immediate supervisor or boss and be sincere with him/her sometimes could have a chance to relocate you in other project , but I want to ask the job description asked for strong background in Java ?",Many_Insect_4622,2025-07-30 18:44:03,3,dataengineering,t3_1mdeifk,False,
n610ic8,The “Java project” is about writing a Spark job? :man_shrugging:,dev_l1x_be,2025-07-30 18:49:15,2,dataengineering,t3_1mdeifk,False,
n64iweq,"Lol, before data engineering was a sole separate profession, everything data engineering was pretty much done by software engineers. Java was, and often still is, the language of choice for big enterprise software.I spent the better part of a decade writing java for data engineering tasks. Most ETL platforms of yesteryear used Java as their language.If you're scared of a literal language... I feel like you must not be very deep into data engineering. Java is just a language, same as python. If you actually know how to write Python for example, you can adjust to Java. Different libraries, different syntax, but software is software. Same concepts apply.",DiabolicallyRandom,2025-07-31 07:28:51,2,dataengineering,t3_1mdeifk,False,
n60z1px,What is this Java project about? Dev? It might have some kind of DE aspect!,rtalpade,2025-07-30 18:42:22,2,dataengineering,t3_1mdeifk,False,
n60zcgl,"Is the java project related to data engineering? You stressing the Java bit or the change in job description? I know it's crazy talk, but some people like java. I've come to appreciate it for complex projects.",Seven-Prime,2025-07-30 18:43:46,1,dataengineering,t3_1mdeifk,False,
n5jzr3e,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 04:32:28,1,dataengineering,t3_1mb6wqc,False,moderator
n5k257m,"1- Nope. But a STEM major certainly does help. I only know a single DE without a BA in a stem field, most have post-graduate education.2- Don't think of DE as like a discipline or a subfield within math, it's more like a trade? There are great books that outline the math and engineering behind it, but the only real way of becoming a data engineer is dipping your toes in keeping data stacks running.3- Most successful way I know: solid stem education. Acquire work experience consuming data as an analyst, data scientist, etc. Slowly transition your work to backend/production systems e.g. making changes to ETL code, finding out infrastructure requirements, doing incident response, thinking about data modelling. Do this for long enough, and you're now able to reason about data along its journey to whatever end-consumer there is.",verysmolpupperino,2025-07-28 04:51:40,22,dataengineering,t3_1mb6wqc,False,
n5lquni,"If you're coming from a stats or analyst background, the biggest shift is thinking in terms of infrastructure: how to move data efficiently, how to model it well, how to build pipelines that scale and don't break. This includes learning how to build ETL/ELT workflows, manage data quality, and work with cloud-native tools and orchestration frameworks like Airflow or dbt.Books like *Fundamentals of Data Engineering* or *Designing Data-Intensive Applications* give good theoretical grounding. But they don’t replace hands-on work. So the best learning path combines both: read to understand the concepts, then build mini-projects to apply them. For example, try building a pipeline that pulls data from a public API, stores it in a cloud bucket or local database, and runs some transformation on a schedule. We have a lot of interactive courses, so feel free to check out our site and browse! And finally, don’t get overwhelmed by the tool soup. AWS, GCP, Azure, Snowflake, Spark, Kafka, dbt... You don’t need to learn everything at once. Start with one cloud provider, one orchestration tool, one data warehouse. The concepts transfer well once you understand them.",DataCamp,2025-07-28 13:17:23,13,dataengineering,t3_1mb6wqc,False,
n5k218i,"With your stats background, why are you not applying for DS roles?",69odysseus,2025-07-28 04:50:46,13,dataengineering,t3_1mb6wqc,False,
n5koosr,"2 - I think the book Fundamentals of Data Engineering gives a good high level overview of the different components of DE. You'll have to dig deeper after that, for example building your own projects.3 - M.Sc. in planetary sciences, kind of 3 months bootcamp co-financed by consulting companies and French job agency, a couple of years on banking Hadoop with the consulting company, a couple of years in startups/scaleups on cloud, public authority on premise, wanted to move to another country for martial arts and found a job to do just that. Overall, after about 2 tough years to get into DE and learn on the spot, I am really satisfied of career change, the job market has always been good for me.",sib_n,2025-07-28 08:18:04,4,dataengineering,t3_1mb6wqc,False,
n5k8w83,"STEM major does help but you can do without. Stats major does scream data science more than data engineering, but to each their own.There's a bunch of creators that talk about best practices and two bibles that are usually very good to read: Designing Data Intensive Applications and Fundamentals of Data Engineering.If you're the kind of person that likes to study based on roadmaps, I run this website that is just about that: https://dataskew.io",dorianganessa,2025-07-28 05:49:48,6,dataengineering,t3_1mb6wqc,False,
n5lfq27,"I graduated with degrees in economics and accounting. I spent the first 4 years of my career in corporate finance. Mostly, I was transforming and consolidating data using on prem tools to automate our processes. After that, I took a BI manager role with our data science team (data science was initially part of BI at my company). Spent a year there until a big reorganization occurred. We moved to the cloud, data science became its own thing, a data engineering team got stood up. I initially moved with data science, but it was clear my skills did not mesh well except for the data engineering, but they wanted to move all DE work over to the DE team eventually. I took that opportunity after just over a year in that position. On day 1 with the DE team, we were building stop gap solutions. I spent that time getting really good with pyspark. I already had a large background with pandas, so pyspark was very easy to figure out. From there, we had consultants build our long term data platform while the full timers worked on ad hoc requests to keep the business moving and start making a name for our team. During this time, I learned I was really good at programming business logic and transformations. I was not nearly as good at ingestion or tools outside of databricks. Eventually our SAAS integration started, and I was working directly with consultants. I was well out of my depth, but I learned the process pretty quickly, patched some early holes in my technical knowledge, and got rolling. I learned that I was really good at functional programming, but pretty bad at DevOps and way out of my league in OOP. Now, I'm working on a project to rebuild our data platform to one easier to maintain, more flexible, and moves data faster. I'm focusing more on architecture, but making sure that these new consultants are training my team and me every step of the way. My manager assigned me as lead for this project. My manager wants me to train to become an engineering architect. Whereas I'm a decent engineer with a lot of potential to grow there, I am kinda a natural on all things architectural. So that is how I'm leaning now.",BoringGuy0108,2025-07-28 12:09:43,3,dataengineering,t3_1mb6wqc,False,
n5kffgf,"I also come from a stats major and I am currently working on a master's in CS. I would suggest you to enroll to a CS master's, where you will have to study the basic CS courses (intro to programming, OOP, discrete math, DSA, OS, computer architecture and networks) before taking the master's courses. This will help you a lot",FlyingSpurious,2025-07-28 06:49:19,2,dataengineering,t3_1mb6wqc,False,
n5ou4og,"You can do much more with your statistics background than DE. DE is subset of software development, do you really need it?",baubleglue,2025-07-28 22:13:43,2,dataengineering,t3_1mb6wqc,False,
n5k0o4b,School not needed,ephemeral404,2025-07-28 04:39:50,2,dataengineering,t3_1mb6wqc,False,
n6iml7k,"People who don’t have certs don’t rate them and people who have them think they hold more value than they do.Certs are nice to haves. All things being equal, If you have been working in Databricks for 3 years, have their professional certification, it would definitely make you stand out more than someone who just has 3 years experience. They show you have a decent understanding of a specific platform and if you can back this up with experience as well then I think they are worthwhile.Any of the azure/aws/databricks certs are decent to have and worth looking at.",Emergency_Insurance8,2025-08-02 12:32:04,29,dataengineering,t3_1mfnphn,False,
n6idqok,"Experience > certs > nothing. Management at my company loves when employees get certified, but it’s not as useful during our hiring process.",glymeme,2025-08-02 11:27:30,53,dataengineering,t3_1mfnphn,False,
n6j50vy,"Here is a list of database specific certifications if you are interested.https://github.com/smpetersgithub/AdvancedSQLPuzzles/tree/main/Database%20Articles/Database%20CertificationsYour best bets are certs for Azure, AWS, GCP, Databricks, Snowflake. People will poop on certs. But they are a fun way to learn and you get a trophy at the end of completion. Plus I assume they help the Linked In search algorithm with recruiters and such.",Professional_Shoe392,2025-08-02 14:25:14,14,dataengineering,t3_1mfnphn,False,
n6is2xn,"Databricks / Snowflake, & AWS / GCP / AzureThey won't change your world, but are a talking point on your dedication to learning. They may give you new facts you didn't know, or help round out your background if you only used part of a tool.",Glotto_Gold,2025-08-02 13:08:18,12,dataengineering,t3_1mfnphn,False,
n6ibmc1,I am not sure if anyone cares about certs in this industry,FuzzyCraft68,2025-08-02 11:10:06,18,dataengineering,t3_1mfnphn,False,
n6idmw3,It depends on what you did in these past 2.5 years? Was it mostly ETL work or may be end-to-end analytics!,rtalpade,2025-08-02 11:26:40,6,dataengineering,t3_1mfnphn,False,
n6iykja,Databricks Associate and DP-700,namnmi21,2025-08-02 13:48:08,3,dataengineering,t3_1mfnphn,False,
n6j176l,"The only ones that matter are through the vendors so databricks, microsoft, or aws. But even then, they're not super helpful.",Chewthevoid,2025-08-02 14:03:43,3,dataengineering,t3_1mfnphn,False,
n6l53w2,I am in big tech and certifications are worth :pile_of_poo: :( … if a certification will force you to study and learn then good but the paper is worthless,dataenfuego,2025-08-02 20:54:19,3,dataengineering,t3_1mfnphn,False,
n6iv4f1,Company specific. You can always grab one for fun or for recruiters. They're most valuable for companies that want to be microsoft partners or similar. Those companies actually value certs because they get preferential referrals.,Lower_Sun_7354,2025-08-02 13:27:20,2,dataengineering,t3_1mfnphn,False,
n5kt5rk,"""The Lindy effect (also known as Lindy's law) is a theorized phenomenon by which the future life expectancy of some non-perishable things, like a technology or an idea, is proportional to their current age. Thus, the Lindy effect proposes the longer a period something has survived to exist or be used in the present, the longer its remaining life expectancy. Longevity implies a resistance to change, obsolescence, or competition, and greater odds of continued existence into the future.""https://en.wikipedia.org/wiki/Lindy_effect",Greedy_Bed3399,2025-07-28 09:02:05,20,dataengineering,t3_1mb6ar1,False,
n5lbyp7,"Brb, rewriting pipeline in sas and Cobol",One-Salamander9685,2025-07-28 11:44:06,13,dataengineering,t3_1mb6ar1,False,
n5lcnbc,this doesn’t really make the point to choose boring technology. first the author basically says “i experimented and learned a bunch from exploring new things but you shouldn’t do that” which frankly I think is terrible especially now with AI destroying the ability of the new batch of engineers to learn things even more and then the point he actually makes is “see if you can get away with using what you already have because ops is not free”. that actual point applies to running literally anything. and the title is somewhat absurd too - let’s take it to its logical conclusion in most enterprises: if you do this you will be an sql server guy whose software runs on windows and is probably written in c# or old java. sounds great but that stack doesn’t pay very well,adappergentlefolk,2025-07-28 11:48:52,3,dataengineering,t3_1mb6ar1,False,
n5pj9ov,"Another perspective is the idea of a ""innovation budget"". Where, for any large project or product, you can choose 1-2 pieces of novel/fancy technology, but for the rest you stick with well established technology.",One-Employment3759,2025-07-29 00:32:00,2,dataengineering,t3_1mb6ar1,False,
n5pj178,This only applies if it's not a Google product though.,One-Employment3759,2025-07-29 00:30:39,6,dataengineering,t1_n5kt5rk,False,
n5okh3r,I feel like this is tied to Zipf’s law. VSauce has a nice video on it.,EarthGoddessDude,2025-07-28 21:24:04,3,dataengineering,t1_n5kt5rk,False,
n5ktm18,Thank you for sharing! That is closely applicable.,Nekobul,2025-07-28 09:06:34,1,dataengineering,t1_n5kt5rk,True,
n5lcwpm,for a “law” this is surprisingly worthless for predicting any future outcomes,adappergentlefolk,2025-07-28 11:50:39,-2,dataengineering,t1_n5kt5rk,False,
n5lu2gh,>most enterprises: if you do this you will be an sql server guy whose software runs on windows and is probably written in c# or old java. sounds great but that stack doesn’t pay very wellThink you make his point pretty well.Resume driven development is what's good for *you*.Boring technology club is about what's good for *the software*.,kthejoker,2025-07-28 13:35:16,5,dataengineering,t1_n5lcnbc,False,
n5r3z8t,"Indeed.See also Gall's law:""A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system.""https://en.m.wikipedia.org/wiki/John_Gall_(author)#Gall's_lawWell established often implies simple (or at least, simple to use, even if the internals are complex)",warehouse_goes_vroom,2025-07-29 07:10:19,3,dataengineering,t1_n5pj9ov,False,
n6aknrv,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-01 04:18:02,1,dataengineering,t3_1memvlv,False,moderator
n6by4q6,"Go and complete the ""dbt Fundamentals"" course on their website. It's based on dbt Cloud but teaches you most of the basic principles of dbt whether you go on to use Core or Cloud.",name_suppression_21,2025-08-01 11:28:05,13,dataengineering,t3_1memvlv,False,
n6azpmf,"Kahan data studios on youtube. Don't overcomplicate it. It's SQL, yaml and Jinja.Look into dbt run, dbt test, dbt build.Look into seeds, macros, tests, models and exposures.Maybe start locally with duckdb and the Jaffleshop for a day. Most dbt cloud tutorials also make sense for core.",Zer0designs,2025-08-01 06:21:14,32,dataengineering,t3_1memvlv,False,
n6de0g5,"If you are expert in SQL, dbt is not big deal It's all about development area and it can allow to you can have ci/cd env, so that just install dbt andBasic level- create model - understand schema.yml source.yml files- run, test, build - understand dbt cli commands- use refs in models - while you create model you will understand the source keywords, use refs for the dependencies, dowstream models for that(we are calling child and parent tables) - use macros in your models - It's basic level udfs in dbt you can think about python functionsYou can take help from chatgpt, as a result after that hands on things you will have basic knowledge about dbt. Intermadiate level- understand manifest.json, run_result.json - understand selectors.yml file - understand fqns - use with in ci actions for ci/cd pipelines - understand dbt_project.yml file You will have production env use cases for that hands on things again you can use chatgpt for all of the casesThats all!",erdmkbcc,2025-08-01 16:04:20,7,dataengineering,t3_1memvlv,False,
n6cjdsw,"I would strongly recommend DBT official docs, they are as good as documentation can be. It's clear and complete and it actually teaches you good practices",NikitaPoberezkin,2025-08-01 13:35:36,7,dataengineering,t3_1memvlv,False,
n6d40fn,On what platform / course did you find this project?,nathan_c16,2025-08-01 15:16:38,2,dataengineering,t3_1memvlv,False,
n6bbysy,"I recommend starting by thinking about what the output of your dbt tables would be. It’s much easier to structure in dbt when you know “oh I will need this product sku info with this log info in order to make this dashboard” then it’s just creating the source tables and proper int tables to get to the final ones.When it comes to data testing, keep it simple to start. Unique and non-null on all primary keys. The relationships between column tests in dbt-utils are great for making sure things are being dropped between tables. There are also some open source packages that are focused on helping with data validation.",Vooplee,2025-08-01 08:14:06,3,dataengineering,t3_1memvlv,False,
n6amf4r,Maybe ask chat gpt,Particular_Tea_9692,2025-08-01 04:31:14,-1,dataengineering,t3_1memvlv,False,
n6h0oyi,"Thanks, I will definitely try the tutorials.",sakra_k,2025-08-02 03:59:36,2,dataengineering,t1_n6by4q6,True,
n5yciyp,"Huh, interesting. Looks like it’s not actually running in a true Spark environment, but rather interpreting Spark code and executing it on Snowpark resources. Not a bad idea in theory, but I’m skeptical it can fully replicate everything Spark does (or do it in quite the same way).Snowpark still feels a bit clunky to me in some areas, especially when working with unstructured data. And if it’s ultimately still running on Snowflake/Snowpark resources, it seems like you’d still need to rely on Snowflake specific constructs (like combining functions and stored procedures) to achieve things Spark can often handle with a single function.",BaxTheDestroyer,2025-07-30 10:22:54,30,dataengineering,t3_1md072b,False,
n5y3jko,Going literally full circle fricking LOL,CrowdGoesWildWoooo,2025-07-30 08:58:39,26,dataengineering,t3_1md072b,False,
n5z6y9f,"Hi Guys, Snowflake employee here & just wanted chime in with a bit more info on this topic so you guys are clear what the new feature is and what it is not.Previously, we had 2 main methods for Spark users to interact with or leverage Snowflake vectorized engine.1. Snowpark Dataframes: These were close to PySpark APIs but (not exact). Initially (2,3 years ago) they were limited in coverage but as of now, do cover most of PySpark functions so if you tried it before, experience is much different now. Because Snowpark was not exactly as PySpark, it did require about 10% code refactoring so some migration effort was necessary. Benefit of Snowpark dataframes was that they were not held back by OSS PySpark Functions so you had access to Snowflake specific ML & AI functions and the newest features. Snowpark Dataframes allowed you to leverage 100% Snowflake Serverless Compute engines for SQL, Python, Java & Scala UDFs.2. Snowflake Spark Connector: This was meant to connect existing Spark clusters to Snowflake to read, transform & write data to/from Snowflake. Driver has some optimization where some of the aggr functions could be performed in Snowflake before delivering the data to Spark cluster but the Spark Compute Clusters did bulk of the work where Snowflake was input and/or output for the data.The new Apache Spark Connect from Snowpark combines best of both worlds Apache Spark code that developers love & use for Data Engineering & ML and Snowpark which gives access to serverless vectorized engine for SQL, Python, java & Scala jobs.Recent innovation from Spark Connect from OSS Spark community was the catalyst that Snowflake was waiting for to integrate OSS Spark in to Snowflake ecosystem the right way.This means you can now run your existing Spark jobs with 0 code changes on Snowflake compute which comes with many added benefits such as unified security & governance, performance, auditability & simplicity as compute is serverless and requires little to no optimization or maintenance.How it works is that the OSS Spark sends the job details to Snowflake, Snowflake generates a new execution plan based on the original details that can run on Snowflake Vectorized Engine (SQL, Python UDFs & etc.) sot he original code remains the same but where & how it executes in back are different.Our initial focus for Public Preview was majority of the customer use cases that we have seen which are Data Engineering & ML workloads that use SQL, Dataframes & UDFs. We are actively working on collecting feedback and build support for other new Spark features supported by the OSS Spark Connect project so definitely would love any feedback that you guys have to take to our PMs.I understand this may not be the right fit for every Spark team. If your team enjoys tweaking Spark params & cluster configs to get every ounce of performance out of clusters then this solution may not be a good fit. However, if the team enjoys Spark code and has a ton of existing pipelines but would rather spend their time building & deploying new projects vs. optimizing & maintaining cluster, it will be a great benefit. Especially if Snowflake is the downstream analytics layer as it would eliminate any Export & Import jobs(time & cost) between Spark & Snowflake environments. The main goal is to meet developers where they are by offering ways for them to leverage advances Snowflake capabilities by offering them different means to work with Snowflake in their preferred language and coding frameworks.If you guys give it a try and have inputs don't hesitate the reach out and let us know feedback.The good, bad & the ugly.",Mr_Nickster_,2025-07-30 13:40:22,27,dataengineering,t3_1md072b,False,
n5yil09,Spark is much more than just mimicking the API,alien_icecream,2025-07-30 11:11:38,12,dataengineering,t3_1md072b,False,
n64awfk,It's pretty big news that Snowflake has decided to follow the industry trend. Having Spark on Snowflake definitely helps from the interoperability perspective.,Sheensta,2025-07-31 06:15:47,3,dataengineering,t3_1md072b,False,
n5ybsg3,I’d guess the previous (garbage) offer to port your spark code to the proprietary snowflake libraries went over like a turd in the market.,cutsandplayswithwood,2025-07-30 10:16:26,5,dataengineering,t3_1md072b,False,
n60mcb5,RemindMe! 3 days,saif3r,2025-07-30 17:44:09,1,dataengineering,t3_1md072b,False,
n5zjelm,I'd like to see Snowflake take over and crush Databricks in next few years:face_with_tears_of_joy::face_with_tears_of_joy:.,69odysseus,2025-07-30 14:42:32,-5,dataengineering,t3_1md072b,False,
n661ao4,I wish Snowflake would solve real problems with their platform and maintain stuff instead of announcing new shit that nobody wants and which will probably be too half baked to use anyway.,riv3rtrip,2025-07-31 14:04:56,0,dataengineering,t3_1md072b,False,
n5zsvac,"> Write or onboard your compatible Spark SQL, DataFrame, and UDFThey deliberately didn't say ""Dataset"", so yeah, most Scala stuff probably won't work. Though supporting udfs is good. Hopefully that includes UDAFs too.",BernzSed,2025-07-30 15:28:30,3,dataengineering,t1_n5yciyp,False,
n5ri1vs,"I had an interview that started like that. Just told them that I cannot recall some info since I've seen them last time at University but I know there's X and Y to be checked if this problem would ever arise. A live coding challenge followed. I managed to pull out good design, code and repo structure, long term thinking, edge cases and broader choice with architecture in mind. They did not like that I could not recall the syntax to follow for some arguments in a function.I do not know what games they play anymore.",Awkward-Cupcake6219,2025-07-29 09:26:26,57,dataengineering,t3_1mc5pnc,False,
n5rb3xq,whenever I get these types of questions Ii assume the interviewer is a bullsh!ter with no hands on experience of the actual area so asks random technical questions likely got off the internet,wheredidiput,2025-07-29 08:18:41,27,dataengineering,t3_1mc5pnc,False,
n5rbjyq,"I had an interview like this. It was a joke TBH. There wasn't much practical stuff, mainly theory, and it seemed to be a way to filter out the non CS graduates.",GreenWoodDragon,2025-07-29 08:23:03,20,dataengineering,t3_1mc5pnc,False,
n5rqh19,"I've been on interview panels. You know we don't get paid extra to interview you guys. It's usually extra worked tossed at me that I'm supposed to do in addition to my other work assignments. Some companies have a hiring guide, but most expect me to come up with questions on the fly. I usually have a handful of questions already lined up. I can't tell you how many times I have to deviate because the candidate clearly lied on their resume. I'll see something like ""expert in cloud technology"" so I'll ask a basic question like ""what cloud provider?"" And they just freeze because they lied or embellished. It's really hard watching somebody fumble in an interview with what feels like softball questions. I normally go back and forth between high level questions about their experience, a few high level technical questions, and a few deep dives into ares of particular interest that either I need then to know for the role, or I'm trying to see of they were being honest on their resume about.",Lower_Sun_7354,2025-07-29 10:42:51,22,dataengineering,t3_1mc5pnc,False,
n5st70z,"Encapsulation can also just be done with a function, or anything that build their own environment no?",defuneste,2025-07-29 14:35:56,3,dataengineering,t3_1mc5pnc,False,
n5v421u,"You give a brief, vague description that shows you're familiar with the concept, then follow with a smile and a quip about how you can't recall the exact textbook definition. Then you move the conversation forward by asking how they use the theory they just asked about in their code and show interest and engagement in their implementation. Ask follow-up questions demonstrating that you can discuss the pros and cons of the implementation.They're not asking for a textbook definition, they're probing your soft skills and making sure you're not regurgitating AI answers.",organic-integrity,2025-07-29 21:01:14,3,dataengineering,t3_1mc5pnc,False,
n5wgu3v,They are just asking ChatGPT to write the questions,thepenetrator,2025-07-30 01:23:18,1,dataengineering,t3_1mc5pnc,False,
n5xmts4,"That's quite common in software testing as well with a particular nationality of interviewer. Either your interviewer didn't know anything about DE and looked up interview questions online and got a guide from outside the US, or you are interviewing with someone outside the US.",Fun_Independent_7529,2025-07-30 06:18:43,1,dataengineering,t3_1mc5pnc,False,
n5w1r4q,being slammed with leetcode is just part of the cultural experience. but encapsulation based programming is pretty self descriptive. i think its a good question. encapsulation =/= oop,Certain_Leader9946,2025-07-29 23:56:47,-1,dataengineering,t3_1mc5pnc,False,
n5riydc,"That's the perfect answer, i didn't think about that",HMZ_PBI,2025-07-29 09:35:01,6,dataengineering,t1_n5ri1vs,True,
n6psaf3,I'm going to be a mountain guide or a physics teacher. Either way I'll get to spend lots of time outdoors where the singularity can't get me.,iamnogoodatthis,2025-08-03 16:15:20,104,dataengineering,t3_1mgn128,False,
n6q00fe,"I work in startups and have been laid off a bunch of times. It's just part of the deal.Traditionally, I reached out to my network, studied basics (DSA, leetcode, review projects and come up with STAR responses about them, etc.) and took interviews. Last year I got hit with the same and started doing this process, but ended up having an opportunity that let me go independent full-time, and I've been doing that since. It's way more fun, and I can charge anywhere from $200-$300 an hour, more if I do project-based pricing and finish the project quickly.",AchillesDev,2025-08-03 16:54:45,35,dataengineering,t3_1mgn128,False,
n6pvcyx,"I'm just realizing this, but three of the four real jobs I've held in the past 14 years, I've been laid off from. During that same time period I've been holding solidly to the principles of financial independence, saving a high percentage of income, and ultimately just having enough money that if things go south at the job I currently have, in terms of crappy work, crappy management, bad financial performance or whatever, I always have enough money to say ""F You"" if I want to. Each of these times, I've given myself a month of 40-hr-per-week job searching and interviewing, at which point I take the next reasonable offer that comes. You can't not work forever. The bank account can't look like a seive. I've taken lower paying jobs before just to fill in the gap until I get a legit offer that was close to my target salary. Having that cash cushion is sooooo important. All this to say, my backup plan has been to stash cash during the fat times, and use up as little as possible during the lean times. I often joke to my wife that I've always wanted to work at Home Depot. I do legitimately think that if I wasn't doing what I currently am, I'd work at HD. Low-stress, low mental weight, get some steps in for health, and they pay like $20-25/hr in my area, so that would keep me out of the poor house.If our industry disappeared, I'd become a contractor and fix up/flip properties.",ntdoyfanboy,2025-08-03 16:31:04,31,dataengineering,t3_1mgn128,False,
n6q3ehm,"Networking is everything for staying employed. But, in addition to having a savings cushion, I never let myself fall to one income stream. I always keep at least some consulting work going on the side. And for when AI makes us all totally irrelevant... I'm having my buddy teach me to weld.",bengen343,2025-08-03 17:11:39,9,dataengineering,t3_1mgn128,False,
n6pr3om,"Have money save to help me survive about 2 years in extra lean mode. I am wondering if I should learn backend development or full stack. Hate full stack, but I do like backend development, but I would like to do it in Python.",SprintNowhere,2025-08-03 16:09:15,11,dataengineering,t3_1mgn128,False,
n6q28no,I’ll go for unemployment and food stamps.,Ok-Advertising-4471,2025-08-03 17:05:55,5,dataengineering,t3_1mgn128,False,
n6qf0cv,I would try to sell my house and work somewhere to get insurance until I retire.,cerealmonogamiss,2025-08-03 18:09:14,5,dataengineering,t3_1mgn128,False,
n6pztt4,Rotate keys and wait,babygrenade,2025-08-03 16:53:49,7,dataengineering,t3_1mgn128,False,
n6q931m,"Train driver. Pays 1.5x my current wage, but shitty hours hence ive not already left for it.",umognog,2025-08-03 17:39:45,3,dataengineering,t3_1mgn128,False,
n6q9pfy,Waiting for the election of President AI to give us UBI... and burning down my savings until then. It's a race between UBI and KMS.,Resquid,2025-08-03 17:42:51,3,dataengineering,t3_1mgn128,False,
n661b2s,"I just used a coding agent to code a pipeline start to finish and it was pretty damn good. I walked it through each thing I wanted vs just asking for it to do large pieces by itself. That said, I already knew how to do this. I could correct it when it was wrong or sub optimal. But it made it a lot easier. I’m pretty bullish on experienced and knowledgeable engineers making a lot of use of AI. I wouldn’t trust it to do any foundational work/spec creation that drives other projects unless output was verifiable. So I’d rather organize the metadata myself than have an AI guess at semantic meaning, for example. Cuz people will use it wrong without much question. A pipeline on the other hand can be verified - input and output.",Firm_Bit,2025-07-31 14:05:00,26,dataengineering,t3_1me284l,False,
n67wpad,"I've found it to be really helpful, but it works best with tools that have a good CLI, run time modularity and a solid schema. If you have those three things your AI can safely build and test. Wrote an article last week about coding up a dlt, duckdb & visivo end to end data pipeline that created coldplay dashboards from the spotify api. Started a blank repo and got a pretty good result in one context window! If you're interested - [https://visivo.io/blog/dlt-claude-visivo](https://visivo.io/blog/dlt-claude-visivo)",jared_jesionek,2025-07-31 19:20:13,8,dataengineering,t3_1me284l,False,
n68qpe7,"I have a super simple pipeline that is fully agentic. The data scrape, cleaning, db queries, for reporting transforms, and email generation. Process: scrape > transform > select interesting for highlight > surface data + additional fields from other tables > create html dashboard and email it off to stakeholders. It’s more of a test than anything but the model decides everything. Even what the email should look like (which has been interesting to say the least).",jimtoberfest,2025-07-31 21:45:06,4,dataengineering,t3_1me284l,False,
n66ggv8,"Was given a new project similar in design to an existing one.Wrote a long detailed prompt, asking ai to follow the same design as the previous one with all logic and requirements bullet pointed.It gave the whole repo with all files and everything.after that followed with some more back and forth prompts to tailor it to my needs.This would have take atleast 5x more time if done it myself.",Significant-Carob897,2025-07-31 15:17:09,3,dataengineering,t3_1me284l,False,
n67e2hp,"A few things we’re seeing work well right now:* **Agents for metadata labeling**: Like you're doing—using tools like LangChain + LLMs to auto-suggest docs for new tables, columns, or metrics based on naming and past examples. It’s not perfect, but great for first drafts.* **Error triage and alert summaries**: Agents scan logs and Slack alerts, flag likely causes, and group repeated failures so your team doesn’t waste time digging.* **Workflow bots**: Think of agents like wrappers around dbt jobs or Airflow tasks. You can “ask” them things like, “why did this job fail?” and they’ll trace logs and give a quick readout.But yeah—data access and vendor lock-in are real concerns. What helps:* Keep critical logic in your pipeline code, not in the agent* Let the agent suggest, but not act unless a human approves* Keep agent inputs small (e.g., just metadata or logs, not full datasets)Curious what tooling you’re testing?",DataCamp,2025-07-31 17:52:23,6,dataengineering,t3_1me284l,False,
n6b78ta,"We’ve been experimenting with AI agents upstream in the pipeline, mostly around identifying log types, tagging sensitive data, and automating basic parsing. It saves a lot of time when onboarding new sources, especially when the original schema is a mess or changes frequently.One thing we kept in mind was avoiding lock-in. We’re using a setup with DataBahn that lets us run enrichment and tagging before anything hits the main stack. The AI is helpful, but only when it’s wired into our own workflows and doesn’t hide what it’s doing. If it’s a black box, we don’t use it.",MixIndividual4336,2025-08-01 07:30:06,2,dataengineering,t3_1me284l,False,
n6bvsso,"Great suggestions in the comments but I have a question for you about the fears. What are you most worried about with giving away too much data. And with vendor lock in, a lot of it is PAYG, even if you did lock in for some time you could always switch out after a contract term right.",PM_ME_YOUR_MUSIC,2025-08-01 11:11:08,1,dataengineering,t3_1me284l,False,
n665ql2,Do you have thoughts on the best way to learn how do this from scratch ?,notmarc1,2025-07-31 14:26:39,3,dataengineering,t1_n661b2s,False,
n68yvaz,"Gotcha. In this case, with a good level of human supervision I see this working. The example I mentioned was because I saw a demo the other day that was full-agentic, having full access to the data platform that made my hair stand on how much governance the agent/MCP had over it.If you mind saying, what tech stack did you use? Cursor + dbt or something else entirely?",Different-Umpire-943,2025-07-31 22:26:54,1,dataengineering,t1_n661b2s,True,
n6eoezi,What coding agent did you use?,No-Bid-1006,2025-08-01 19:48:14,1,dataengineering,t1_n661b2s,False,
n65gyck,aye-cee-docka,aboerg,2025-07-31 12:13:48,20,dataengineering,t3_1mdzv0a,False,
n65on4c,You get the person that decided on the SAP migration to do it.,JonPX,2025-07-31 12:58:44,19,dataengineering,t3_1mdzv0a,False,
n661y8a,"MSEG_MEINS: Message MinesAFKOCY_SEQNR: Afkosee seckner MSEG_LGORTBWART?!?!It's a blast to say them as words, but I will spell them out if other people in the meeting take themselves too seriously.",StemCellCheese,2025-07-31 14:08:10,8,dataengineering,t3_1mdzv0a,False,
n663oi4,Some of the best laughs I had during migration was in saying these out loud (between crying),PantsMicGee,2025-07-31 14:16:38,7,dataengineering,t3_1mdzv0a,False,
n67fkns,"""look, we move data from left to right. that's all you need to know right now and ever""",vikster1,2025-07-31 17:59:08,6,dataengineering,t3_1mdzv0a,False,
n67jw48,FUKRTrust me on this one.:beaming_face_with_smiling_eyes:,mr_thwibble,2025-07-31 18:19:09,7,dataengineering,t3_1mdzv0a,False,
n68etg1,"Based on prior experience with SAP, everyone just pronounces the table as it’s spelledMARA -> “Ma-rah” -> Material dataEKKO -> “Echo” -> Purchasing document headerEKPO -> “Eck-Po” -> Purchasing document itemsFuck SAP btw",Eatsleeptren,2025-07-31 20:46:36,5,dataengineering,t3_1mdzv0a,False,
n65v8sk,"I personally make it a word like your example for VBELN. BUKRS would be Bu (sounds like boo) - kers. If you're with SAP functionals or the tech peeps (ABAP/Fiori/BW), they'd get it. If it's too complicated, maybe the descriptive name? Or just list it down?",nahihilo,2025-07-31 13:34:18,5,dataengineering,t3_1mdzv0a,False,
n65yda0,I usually just spell them out unless they're fun to say. GJAHR(too lazy to check the spelling rn) is a personal favourite. GUH-JAR,custardgod,2025-07-31 13:50:22,2,dataengineering,t3_1mdzv0a,False,
n68puod,"I am German and I use the descriptive name like Belegsegment instead of BSEG, god inteded",Capinski2,2025-07-31 21:40:37,2,dataengineering,t3_1mdzv0a,False,
n63nr9o,See here https://georgheiler.com/event/magenta-data-architecture-25/ and https://github.com/l-mds/local-data-stack as a free and open template plus https://github.com/complexity-science-hub/llm-in-a-box-template for genai if that is something you care about,geoheil,2025-07-31 03:17:20,13,dataengineering,t3_1mdogaa,False,
n63u58j,"Use version control for everything, infrastructure as code wherever possible, store raw data outside of the database in an open format and have at least a 3-2-1 backup, capture slowly changing dimensions or snapshots for all data source elements, capture and store metadata and logs, have data transformations in code and completely idempotent, transform data in layers into business entities by domain and skip Kimball modeling, add a consumption layer for apps and pre-built reports, use an orchestrator to manage pipelines end-to-end, use security groups and roles for access grants, place documentation with the code in markdown, have a dev, test, and prod environment for tools, with the testing as part of an automated pipeline run, add alerting for failures anywhere in the platform, avoid pii or gdpr data as much as possible or have a plan to deal with it.",vizbird,2025-07-31 04:01:13,13,dataengineering,t3_1mdogaa,False,
n6494de,"I would go in on Snowflake. 50k\yr is a lot of money and you can get very far. The product is solid, and they have a lot of extensions points (openflow for example for ETL, container services for anything custom).Keeps it simple to have it all in one platform.",RustOnTheEdge,2025-07-31 06:00:10,6,dataengineering,t3_1mdogaa,False,
n63ux7p,"Fantastic question! I literally just spent the past \~6 months spinning something like this up from scratch for my company, except I wasn't blessed with a $50k/yr budget on tools. More like $5k/year tops. Here was my approach:* Sources: AWS Aurora Postgres database, various APIs, potentially Netsuite down the road* Destination: Timescale (now TigerData) database hosted using Timescale Cloud but linked to our VPC via VPC peering -- **this is where the bulk of our budget is going**.* Tech stack: * Pulumi TypeScript to build infrastructure in AWS to support the open source version of the orchestrator, mostly using ECS Fargate for the containers and leveraging existing networking infrastructure * Dagster OSS as the orchestration (went back and forth between this and Prefect before landing on Dagster) * Sling as the core extract and load software to sync data from Postgres to Timescale * dbt core running within the Dagster framework to apply transformations on new data in Timescale * Python scripts orchestrated by Dagster to get data from APIs. Originally wanted to try dltHub but ended up just writing my own scripts using requests (probably not ideal) * Monitoring/notifications via Slack app integration (originally was using [ntfy.sh](http://ntfy.sh) for quick and dirty SNS topic-like notifications, getting Slack approval was challenging) * Dockerized local development using the pre-built Timescale and Postgres Docker images + the same custom Dockerfile I use for Dagster production deployments to keep things as simple as possible.Data is synced from Postgres every 4 hours and daily for the APIs as that's essentially all that's required by our business. The Postgres sync with Sling runs incrementally and is complete in about 20 minutes, which is not optimized by any means but is sufficient for our purposes. For context, our entire source database was only about 330GB and I wasn't replicating the entire thing.Writing YAML for Sling and later for dbt was a huge time slog for 100+ source tables; I leveraged an AI tool (Claude) to help generate a lot of that code after manually building some of the transformation models myself. Bonus to this is it was the generated YAML was pretty consistent for common columns like `created_at` or `_sling_loaded_at` audit columns.I am the lone developer and maintainer of this project -- most people on my team are unaware that I'm even working on a project like this, let alone what its purpose might be. It has been a wild and frustrating ride at times without many others to turn to for help, but it's been a great learning experience as well. Throughout the development, I tried to stress simplicity, modularity, and ease of maintenance as much as possible. Once a larger team becomes available to support something like this, you can make different decisions like moving your data replication tasks to something like Fivetran or using a real data warehouse like Snowflake (again, budget constraints for us).~~Best of luck to you!~~ Edit: I reread the question and realized this is hypothetical but best of luck if this is ever you in the future all the same! Also I feel like my stack is pretty interchangeable with SQL Server as the source, just use different connectors with Sling (I believe SQL Server is supported).",s0phr0syn3,2025-07-31 04:06:43,10,dataengineering,t3_1mdogaa,False,
n648q39,"I did something similar and went full into databricks with dbt-core. All deployed via terraform and asset bundles. We already had powerbi so that connects to databricks.Currently running on ~7000 euros a year with a development and production environment. A large part of the costs come from working within Azure VNets with private endpoints.For our current data it sometimes feels a bit overkill (we are moving GBs of data but not TBs) but having everything in one place (ingestion, orchestration, transformation) makes it smooth to work with.",juicd_,2025-07-31 05:56:42,5,dataengineering,t3_1mdogaa,False,
n6456mz,keep it simple where possible.-adf is easy and cheap for ingestion and orchestration -snowflake/postgres-dbt-powerbi if your company has an o365 e5 license or is a ms shop otherwise this should get you very far and the knowledge ramp up is by far much less than any other answer i have read so far. also finding new people is much easier with this stack,vikster1,2025-07-31 05:26:32,3,dataengineering,t3_1mdogaa,False,
n63es3b,"Considering that I just did this over the last two years, it's all about keeping it simple and robust. The services need to look normal to semi-technical users that you have to collaborate with (SQL Server rocks!)- PowerBI- Azure SQL Database - Azure Data Factory (only for copy data tasks. Nothing fancy)- An Azure Windows VM running:DBT core wrapped in a python scheduled task that checks for new landed data from data factory and runs the appropriate downstream modelsA few random python scripts for activities that are hard to do in Data Factory. The VM also runs the gateway client for PowerBI cloud service to get into the VPN.",Mordalfus,2025-07-31 02:21:49,8,dataengineering,t3_1mdogaa,False,
n6373q4,"There are a lot of factors. What is your budget and timeline? What is the existing tech stack? What is the current data storage at rest and data throughput? How is the projected to scale in 1, 3, and 5 years?",Peppper,2025-07-31 01:36:18,2,dataengineering,t3_1mdogaa,False,
n63rx6u,Check out stackable.tech (all open source),No_Dragonfruit_2357,2025-07-31 03:45:40,2,dataengineering,t3_1mdogaa,False,
n647071,"Some SQL Servers, 3GB of data movement per day, no streaming or real time - with those requirements, honestly you could just get away with setting up a separate SQL Server instance as your “analytics” database and using bash scripts and cron jobs for movement. Sounds like the company is in its early infancy with anything data-related. Setting up an “enterprise” environment with a bunch of tooling and process is likely to just fail at any sort of acceptance/understanding at this point without further education and knowledge of business users/analysts.So yeah, keep it simple - basic necessities - then as the company’s data needs grow you can reassess.",cloyd-ac,2025-07-31 05:41:53,2,dataengineering,t3_1mdogaa,False,
n6c218e,"At work a junior colleague and I built a data mart for analysing our Snowflake use. Cost, nunber and running time of queries, who runs what, when, how long, what data they use. Turned out pretty nice.Parts I'm most proud of, we used Kimball modelling and were able to store many-to-many relation between queries and tables thay query. We used a parsing library to extract those source tables from sql code of the queries (super nice and we got it working FAST. I really thought it would be very difficult). We even got manager-employee hierarchy into the mart, so we can use BI tools now to show things like ""which tables are queried most often by people under director X?"" or ""what is the total attributed cost of running those queries?""""... for direct subordinates of X?"", ""... for all subordinates of X?"", ""... for all subordinates of X, who are not managers?""And since we did good modelling in the data mart, PowerBI, does not need any extensions, or fancy DAX to answer such questions.",Dry-Aioli-6138,2025-08-01 11:54:50,20,dataengineering,t3_1mesrjx,False,
n6e8hdq,"I built an end-to-end pipeline that ingests marketing data from multiple ad platforms (Meta, LinkedIn, Google Ads), normalizes it, and pushes it into Redshift for reporting fully automated with Airflow and dbt.",eb0373284,2025-08-01 18:29:39,12,dataengineering,t3_1mesrjx,False,
n6ckp1g,"I had a very challenging use case with telecom data ( very old format, you may search 3gpp file format for reference). No one in my team had any idea how to handle it, one file is around 4GB and we have to join data from multiple file. Handled them with an opensource lib and duckdb. Everybody just wow.",oishicheese,2025-08-01 13:42:30,4,dataengineering,t3_1mesrjx,False,
n6cmdn1,"Recently I build a simple DAG generator for airflow, combined it with an API to setup config and Mongo to maintain the json using which the dag is generated. Made it extensible that any type of dag generator like DQ, DT, DI. Kind of eliminated the need to make dags and reduced time to insights to minutes from days.",ParticularDear5826,2025-08-01 13:51:12,4,dataengineering,t3_1mesrjx,False,
n6k0elj,"Not sure if this counts as DE. Our payroll/HR team was manually tracking people timecard data across 17 stores and writing emails to employees who had missed their lunches or breaks to correct the timecard (for legal reasons). This was taking many hours of work and draining their time, so they asked me to help out.The timecard system didn't have an API and the only way to automatically generate a report was to email it to an inbox. So I wrote a Python script that downloaded the report, parsed it through alteryx and automatically wrote the emails with the correction forms and sent them out. It literally saved them hundreds of hours of manual work in the 5+ years it has been operational.",SoloArtist91,2025-08-02 17:12:50,3,dataengineering,t3_1mesrjx,False,
n6deqbq,Where did you find the unstructured data for that project?,No-Bid-1006,2025-08-01 16:07:49,1,dataengineering,t3_1mesrjx,False,
n6ggcww,"Created data integration framework that utilizes sling. As sling does not support our data warehouse (we use alicloud), I combined sling to filesystem integration and custom integration to create incremental load method. Combine it with our DAG generator + dbt, we aim to cover typical ETL use cases in my company",srodinger18,2025-08-02 01:44:18,1,dataengineering,t3_1mesrjx,False,
n6p0lbe,I built a power app that has a sql back end to register people automatically for trainings and send transcripts. Now I have exported to other companies they use it too. I am quite proud of it. It’s a while end to end system for getting data and reporting on compliance. Saved them 25+ hours of work a week to maybe an hour a week now.,techiedatadev,2025-08-03 13:51:57,1,dataengineering,t3_1mesrjx,False,
n6ptvoe,"I built a granular level semantic extractor and retrieval pipeline on YouTube videos.It wasn't entirely Data Engineering, there was also AI engineering in it.So It downloads YouTube videos, extract the audios from them, transcribe the audios into texts, format the texts to be syntactically correct, break them into chunks with a theme of less than 6 words describing the unit chunk of 20 sentences(themes were LLM generated). Then made a vector equivalent value of the theme and the chunks,applied a roll-over technique aswell to merge adjacent chunks which cosine similarity beats a tested threshold. Then persisted this data to my database, with every single chunk having its appropriate time-window, from where it was cut off from in the YouTube video.I then created an interface with streamlit where I could see the data-breakdown, their theme, the video thumbnail and the time the video was cut off from, (so this also works as an automatically created YouTube chapters as opposed watching the video and titling sections by hand)I also created an input field where questions relating to any part in any of the videos are asked and the top 5 chunks which are most relevant to the question are retrieved and displayed on the UI.The videos fed into the pipeline could be a playlist or multiple channels with batch extractions.I personally use this now to get to the most relevant part of an information I'm trying to reach out to in the news. Or help properly index tutorial playlists to find the most relevant piece to my problems.Built this with kestra, postgres, open-ai,flask and docker",Adorable-Equal-8685,2025-08-03 16:23:28,1,dataengineering,t3_1mesrjx,False,
n6exi5q,"That's great to know. Btw we can visualise the data in Snowflake also, right ?",kaalaakhatta,2025-08-01 20:33:29,1,dataengineering,t1_n6c218e,False,
n6io32o,"The core issue here is event-time vs processing-time. Your Spark job is processing time based and it closes a window every 5 minutes whether or not all the relevant events have arrived. To handle late data properly, you will need some form of event-time windowing with watermarking logic that can tolerate a lag. Flink and Kafka Streams both support this, but the tradeoff is more complexity to operate.For schema drift, one thing we have done is land raw data as semi-structured (JSON into a VARIANT column in Snowflake, for example) and push all transformations into a downstream job that can adapt based on incoming schema.",rexile432,2025-08-02 12:42:17,21,dataengineering,t3_1mforgf,False,
n6j24as,"For ingestion + late event handling, Flink or Kafka Streams give you full control over event-time windows and watermarking but they come with serious ops overhead.Managed solutions... you can try Databricks for its Delta Live Tables or Confluent Cloud to build on your existing Kafka setup. And also Integrate.io because you can define lateness tolerance (slightly higher latency but far less ops trouble), apply window-style transforms and absorb schema drift in a drag and drop builder. Can update pipeline logic without code deploy while handling transformation + output in one place.",Ornery_Visit_936,2025-08-02 14:09:01,9,dataengineering,t3_1mforgf,False,
n6j93cp,"https://netflixtechblog.com/incremental-processing-using-netflix-maestro-and-apache-iceberg-b8ba072ddeebUnless you have a real need for live data, I would use micro batch and just merge into.I deal with billions of time series points an hour and we organize by sensor, timestamp, value in basically all tables that are bronze/silver and use iceberg for that. Fancier layers are introduced for special consumers but most workflows can exist fast enough on the tall data given its partitioned by sensor and day(timestamp)",ReporterNervous6822,2025-08-02 14:47:38,3,dataengineering,t3_1mforgf,False,
n6kc3ds,"We ran into similar issues and ended up decoupling ingestion from transformation. We push all raw events (late or not) into the warehouse first and then handle deduping, event-time logic and schema evolution in downstream jobs. It is not true real-time but it made the system way more stable.",nocomm_07,2025-08-02 18:13:27,3,dataengineering,t3_1mforgf,False,
n6jox0e,why on earth would you go for expensive merge operations when you can do insert only.,vikster1,2025-08-02 16:11:11,2,dataengineering,t3_1mforgf,False,
n6mb9fr,"You are due for a world of pain if you try to use Flink, Spark or homebrew this. Handling lateness is quite hard, and you really need an actual incremental engine here with [precise semantics](https://www.feldera.com/blog/time-series) around handling lateness.For schema evolution issues, you might consider keeping the payload semi-structured, and pattern patching within the pipeline itself. At least this is what I see folks do in this space.",Unique_Emu_6704,2025-08-03 01:03:09,2,dataengineering,t3_1mforgf,False,
n6ilexw,"Iot is tough for very different reasons than most other domains. I’m glad to hear these problems exist everywhere haha. Certainly there are better and worse choices to make but trying to squeeze the square peg into a round hole is gonna suck. Putting unstructured data into a structured database is going to be painful no matter which way you slice it.But the real game is winning the organizational battles required to begin actually addressing the root causes of the pain and bringing everything into a unified stack. Iot has changed, when it first started it simple scalar data like temperature and there was only a couple of things going on. These days there are much higher expectations on what the devices need to do. They expect always on at the edge monitoring of complex sensors and it takes a fundamental change in the org to get that done. You need your ml or data team to get in the drivers seat and make the pieces fit all the way from the firmware up to the customer UI’s and tying it all together. Wanting it to be simple of easy won’t help. Look at the most painful problems you have, and start identifying what the true technical root cause is and then begin working to make it better. If you don’t have a person or people with this sort of cross stack powers to actually drive the platform as a whole towards success it’s just going to always be an underpowered brittle mess.That’s my 2c anyway. But concretely it’s important to figure out what needs streaming to meet sla’s vs what should be done batch wise for streaming. Companies tend to commit hard to one approach or the other and then struggle to make everything fit that paradigm. You will need both and you need to comfortable with that. Same with structured vs unstructured. Some of your data just isn’t structured today.",TheRealStepBot,2025-08-02 12:24:01,3,dataengineering,t3_1mforgf,False,
n6jc6z1,"You are hitting the usual edge cases here. For late events, the key shift is moving from processing time to event time windowing with watermarking. That way, your pipeline knows to wait X minutes before finalizing a window. Spark Structured Streaming supports this but tuning gets tricky. Flink or Kafka Streams handle it better. Confluent Cloud and Integrate offer simplified options if you are okay with microbatch intervals and less real time granularity.For schema drift, landing raw JSON or AVRO into a semistructured column (like VARIANT in Snowflake) can help. Then handle transformations in a way that tolerates missing or new fields. Don’t let one new sensor field break the whole job.MERGE issues in Snowflake would mean too many small writes or unoptimized clustering. Try splitting late events and ontime events and processing them seperately. I think you are almost there.",nilesh__tilekar,2025-08-02 15:04:05,4,dataengineering,t3_1mforgf,False,
n6jf1t7,Mqtt good for this ? Mosquito?,Firm_Communication99,2025-08-02 15:18:56,1,dataengineering,t3_1mforgf,False,
n6ju46o,"What are the downstream reports and use cases, and what is the latency target for these?",georgewfraser,2025-08-02 16:38:54,1,dataengineering,t3_1mforgf,False,
n5qvrar,"The ""Joins are expensive"" is said in the context of running OLAP queries on distributed databases with massive amounts of data. Unless I misread, the article missed this point by using DuckDB or PostgreSQL, so the premise of this article might be incorrect.",sib_n,2025-07-29 05:54:58,53,dataengineering,t3_1mc2ass,False,
n5r4z9k,"I've done this same test on both spark and bigquery, with roughly ~100 times the data used here (~100-200B rows) and got exactly the opposite results. Joins being massively slower than the OBT.The key is that the table you are joining against needs to be big enough to not be broadcast joinable. As long as you can broadcast join, I'll buy the argument that joins are not slow.",kappale,2025-07-29 07:19:36,20,dataengineering,t3_1mc2ass,False,
n5qrj3i,We regularly see slow queries with multiple joins can have major performance improvements through materialization or denormalization. Anecdotal but makes a real tangible difference to the end user.,Gargunok,2025-07-29 05:18:34,19,dataengineering,t3_1mc2ass,False,
n5qtxn5,Now do it in spark,Embarrassed-Falcon71,2025-07-29 05:39:01,17,dataengineering,t3_1mc2ass,False,
n5rack6,Now try doing distributed joins with subqueries,yudhiesh,2025-07-29 08:11:11,6,dataengineering,t3_1mc2ass,False,
n5rpbao,EXPLAIN command will tell the truth,AipaQ,2025-07-29 10:33:03,5,dataengineering,t3_1mc2ass,False,
n5shv59,This is what happens when controlled tests don't match reality. Confirmation bias in action.,DenselyRanked,2025-07-29 13:39:13,2,dataengineering,t3_1mc2ass,False,
n5qnsew,Broken URL :(,JadeCikayda,2025-07-29 04:48:27,1,dataengineering,t3_1mc2ass,False,
n5vazob,Really? Come on with the title. If depends and sure as heck can be.,NoleMercy05,2025-07-29 21:35:02,1,dataengineering,t3_1mc2ass,False,
n5qqj0h,This was an easy and interesting read. Thanks for sharing,Historical-Fudge6991,2025-07-29 05:10:19,1,dataengineering,t3_1mc2ass,False,
n5lp8f7,"You need to automate it in the pipeline moving it from bronze table to silver table, then in your gold table you join with relevant cleaned data to build your dimensional model. I personally like the audit publish pattern and I put bad rows in a quarantine table and link it to dashboard to add observability to my errors, like if you have a source that have the same constant bug use that to open a ticket in that teams board or a bunch of errors at the same time could signal a bad deployment on your stack or the source stack.But if you have need for something that scales better, dbt has good testing capabilities and streamline the pipeline building process. There are also great open source data quality tools such as great expectations or soda. If you're already on aws, there is a data quality service called deequ i think.Good luck!!",Equivalent_Effect_93,2025-07-28 13:08:15,14,dataengineering,t3_1mbap0p,False,
n5m1ep7,As an intern you don't have to pick an ETL engine by yourself. Ask your mentor or whoever gives you tasks.,invidiah,2025-07-28 14:13:24,6,dataengineering,t3_1mbap0p,False,
n5lgqqj,dbt/sqlmesh. To understand it look into the dbt build command,Zer0designs,2025-07-28 12:16:18,9,dataengineering,t3_1mbap0p,False,
n5psfgq,"Entire departments are built on QA/UAT. This isn't an easy quest you are starting, and hate to say it, but it will never end either. This is a constant need project.",MathematicianNoSql,2025-07-29 01:24:36,2,dataengineering,t3_1mbap0p,False,
n5q8yyt,"What do you mean by ""automate"" the data quality process?Take a try on Great Expectations and Pydantic (if you want, maybe it's good to know to test properly using unit test, integration, etc)",SupoSxx,2025-07-29 03:03:32,2,dataengineering,t3_1mbap0p,False,
n5p0wec,"Have only used fabric data pipelines not Azure data Factory. I'd see if a notebook can be added to the pipeline then write a function using python that dynamically checks each column for white spaces, nulls, duplicates, etc",shadow_moon45,2025-07-28 22:50:20,1,dataengineering,t3_1mbap0p,False,
n5qnirv,Theres a pretty useful data cleaning automation software: [https://www.project-mist.net](https://www.project-mist.net),Late-Albatross7675,2025-07-29 04:46:22,1,dataengineering,t3_1mbap0p,False,
n5qs8n0,Use dqx tool from databricks. Easy to use compared to other solutions. My experience.,DecisionAgile7326,2025-07-29 05:24:30,1,dataengineering,t3_1mbap0p,False,
n5trehj,"Since you're already using Azure + Databricks, one practical path is to define a set of reusable validation rules (like null checks, ranges, or referential integrity) and apply them dynamically across tables in your Spark notebooks. Think of it as building a small rules engine using metadata.If you're exploring tools, dbt + dbt tests are great once you’re in the silver layer. For more advanced checks, Soda, Great Expectations, or Deequ can help—but they can be heavy to start with. Sometimes a few well-structured PySpark functions and good logging go a long way.",DataCamp,2025-07-29 17:15:22,1,dataengineering,t3_1mbap0p,False,
n5v50pj,"This varies by organisation so much. A lot of words and lines of code seem to get spent on the real basics like just counting nulls, empty strings, or zeros across all columns - but for my org, that would be totally wasted effort. It wouldn't help the business at all.We've got shedloads of tables with oodles of columns, but for many of them, things like nulls are totally inconsequential, or even good sometimes.And then folks start talking about duplicates, but if you're defining that to mean the database-managed PK identity column, it's clearly not going to have any dupes, and if it somehow did, it's a bug in the database engine which is far outside our responsibility. I don't want to spend CPU cycles testing MS SQL Server features that have been in place for decades.If you don't mean that kind of dupe, then that starts a valuable but lengthy discussion about what we DO mean by a duplicate; the answer for us varies by table/entity, and is generally too complex for any off-the-shelf tool to handle (that I've seen).So in short, for us the only business value is in a much more manual DQ process (manually defining what DQ means, not manually checking it!). And I rolled our own implementation because nothing I could find came close to what we need.",sjcuthbertson,2025-07-29 21:05:48,1,dataengineering,t3_1mbap0p,False,
n6m6zcr,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-03 00:36:00,1,dataengineering,t3_1mg5tjl,False,moderator
n6m7nw2,"For early career, in my opinion, consulting is better cause the experience you gain is wider so you not only get a lot of different experiences but it helps you find out what you do and don’t like a lot quicker. It has downsides too but the experience from consulting was a springboard for me getting into my future jobs.",khaili109,2025-08-03 00:40:23,31,dataengineering,t3_1mg5tjl,False,
n6m7h10,I'd go with telecommunication company where you'll get to learn stuff. Ask them to rotate you through different roles within data and you'll learn quite a bit from every area.Consulting companies are run of the mills where you might not do lot of technical stuff.  Not all are like that but most are.,69odysseus,2025-08-03 00:39:08,12,dataengineering,t3_1mg5tjl,False,
n6oglli,This isn’t a question. Go consulting. Keep your utilization around 80%. If it falls below 60% you’re in trouble. Don’t be on the bench. Consulting company will want you to get certs. Ppl will say they don’t matter but they absolutely do later on. I did 2 years in consulting for Big 4 and it sucked. But it’s resume gold. 115% salary increase the instant I left.,22strokestreet,2025-08-03 11:40:36,6,dataengineering,t3_1mg5tjl,False,
n6mi4h4,I would do consulting as an intern. They are more likely to have actual work for you to do and you will see a lot of different approaches and architectures. When I worked in big tech I just gave interns busy work (tech debt cleanup) because I didn't have time to teach them how to do anything.,DenselyRanked,2025-08-03 01:46:46,3,dataengineering,t3_1mg5tjl,False,
n6o4su7,"Since we're talking internships, not necessarily careers, I'd lean toward Accenture for the name recognition and *possibly* exposure to a wider range of projects during your limited time.(Take this with a grain of salt. I never did an internship in this field, and never personally placed much weight on internship prestige when I interviewed junior DEs.)",TL322,2025-08-03 09:55:04,3,dataengineering,t3_1mg5tjl,False,
n6n09ua,"Fuck Accenture, pick telco.",Acceptable-Fault-190,2025-08-03 03:49:09,2,dataengineering,t3_1mg5tjl,False,
n6pd0ux,"I think either could be good for you. Normally internships are structured these days with some kind of project to work on and at least some guidance. I agree with the comments about consulting mostly, but I doubt they would put you on client work or at least throw you to the wolves like they would with an employee. Having worked both for telcos and consulting, I will give you some thoughts:Consulting: you will probably work on one or a few projects. They are looking for prospects to hire when you graduate so it's like an extended evaluation. Consulting is good because you get exposure to different industries and projects, so you learn skills and approaches you might not pick up working elsewhere. One other thing that's maybe overlooked is that you learn how to sell and explain your work, which is valuable in companies later when you need to justify a project or hype it up beyond just explaining the technical side. Working there as an employee though can be grueling not just because of the hours, but because you need to build your career often with little help. They assign you to some client and expect you to pick up the skills you need. They usually do give you some support with a mentor role, but they might be good or just suck since they are assigned. So it can be a stressful experience depending on your personality and resiliency.Telcos: this is a good option because you will get exposure to a lot of processes with a lot of data flowing. It's mostly structured though, but really teaches you how to deal with high volumes. If we are talking a bigger telco like AT&T or whatever then they tend to have all the tools and applications so you aren't looking at a kludged together mess like in some other companies. There is data stored around all the different processes that go on in a telco, so while the product isn't the data platform, it's probably as close as you are going to get. There is usually some pretty high-level analytics work going on as well around customer retention and upsell.",Gators1992,2025-08-03 14:57:30,1,dataengineering,t3_1mg5tjl,False,
n6so3t3,Update:Just received the JD of the Accenture intern role this is what they sent meAccenture Malaysia (Accenture Solutions Sdn Bhd) Technology Intern Role Responsibilities : - Assist on consolidation of datapoints from different leads for client management reporting including liaising with leads from multiple domains - Assist on data analysis and reconciliation for management reports - Assist on driving the completion of improvement initiatives on delivery performance metrics such as automation of dashboards,Medical-Agency4293,2025-08-04 01:33:13,1,dataengineering,t3_1mg5tjl,True,
n6mgzwe,"Telco company. Utilities is one of those industries that are stable and often overlooked for how much you’ll learn. Consulting firms are dependent on companies that have the capital to spend. Right now, a lot of companies are penny pinching. The govt is too volatile and they are going to err on the side of caution. That Telco company will have work for you. You will learn a lot. If you don’t like it, you’ll have the experience and you can try consulting after graduation.",LeoRising84,2025-08-03 01:39:17,1,dataengineering,t3_1mg5tjl,False,
n5rcf9k,"If we’re talking about the future of data engineering, it’s worth first asking: *why does it exist at all?*Originally, businesses needed someone to get them data for decision-making. First came BI developers/ETL engineers, they built warehouses and reports so analysts could do their work. Later, data analysts became more self-serve and focused on interpreting the past. Then data science took off, using that historical data to predict the future.Both analysts and scientists quickly ran into the same problem: clean, reliable, well-structured data was hard to come by. That’s when the modern data engineer role emerged, not just to build infra, but to make data usable at scale.Early DE work was infra-heavy, but as platforms matured (Databricks, GCP, Azure, Snowflake), more of the plumbing became automated. That doesn’t mean the job is going away, it means the focus shifts. You spend less time reinventing connectors and clusters, more time on things like modeling, scalability, governance, security, cost optimization, and integrating multiple data sources into a coherent system.This is also where analytics engineers come in, they work closer to the business, doing a lot of SQL/dbt modeling and BI integration. In small teams, AEs might cover most data needs; in bigger orgs, DEs still handle the scale, complexity, streaming, and compliance side.If anything, the “easy” DE tasks are disappearing, which makes deep skills more valuable:* Real-time pipelines (Kafka, Pub/Sub, Flink)* Data contracts, governance, compliance* Multi-cloud / cross-platform integration* ML data pipelines & feature stores* Performance and cost tuning at scaleI wouldn’t say DE is shrinking, it’s just changing shape. The safest way to future-proof yourself is to stay close to both the business context *and* the technical challenges. Platforms will keep automating, but stitching them together, governing them, and making them serve the business well? That’s still human work.",PolicyDecent,2025-07-29 08:31:35,37,dataengineering,t3_1mbypdh,False,
n5qdmzy,Lego sells molded blocks and sells the blueprints on how to make something out of those molded blocks. But you still need to understand how to read the blueprint and build the thing. Sometimes you may even want or need to free style with those blocks,bjatz,2025-07-29 03:34:32,18,dataengineering,t3_1mbypdh,False,
n5qid06,"Our job is similar to the job of people building houses. You have a set of basic components you use the to assemble the most comfortable and practical house. When you don't have to spend time on nuts and bolts, you can focus on delivering the best possible solution on time and under budget. You can even be creative by finding more uses of the data being processed.",Nekobul,2025-07-29 04:07:38,1,dataengineering,t3_1mbypdh,False,
n5qz5n9,"Some roles in companies without big data or specific needs are and will be more and more just maintenance/monitoring and business then creators.A bunch of companies and industries will still have needs to create custom pipelines, use cutting edge tech etc.It's still a good idea to understand what it means to talk to stakeholders and drive impact, but if you want to be a creator, in the era of AI, I believe we're still going to be very relevant, we just need to better understand the skillset needed",dorianganessa,2025-07-29 06:25:42,1,dataengineering,t3_1mbypdh,False,
n5sx3xp,"If companies adopt to drag and drop ETL tools like Talend, then the DE field will hold no value as you're only going to get bad quality DE's. Our team used Talend at Air Canada and it's a horrible tool. The decision was taken by some non-technical folks and the technical team faced the issue with the tool.",69odysseus,2025-07-29 14:54:36,1,dataengineering,t3_1mbypdh,False,
n5u09o1,"Overall we are getting more efficient but i would not call it plug and play. Internal apis etc will never go away and this kind of boring work will get automated.what is different this time is that the ""block"" you plug is a ""workflow"", or an automation specialised at making that block as needed quickly from your instruction. so perhaps it's ""converse, plug, play""there is incentive to automate the easy and time consuming stuff so that will go away sooner.you can use the extra time to upskill - you will also be able to do that faster and farther with LLMs.",Thinker_Assignment,2025-07-29 17:55:03,1,dataengineering,t3_1mbypdh,False,
n5zqw1m,"No, every company’s data infrastructure is different. It just breaks my brain trying to figure it out. It’s more nuanced than plug and play. Lots of these out of the box solutions don’t fulfill all the needs of a business so there’s that…",pl0nt_lvr,2025-07-30 15:18:59,1,dataengineering,t3_1mbypdh,False,
n613nhx,There is a domain knowledge that you would like to add data engineering skills? that is what I am doing I like crypto and focus my learning projects in that industry just to learn the business and when I think that is a good time to jump to an own business or a crypto company i will be kind of a hybrid professional and that is challenging just giving my opinion,Many_Insect_4622,2025-07-30 19:04:23,1,dataengineering,t3_1mbypdh,False,
n6e0hdz,I have one word for you palantir,Secure-Item9083,2025-08-01 17:51:06,1,dataengineering,t3_1mbypdh,False,
n5szsel,"Although the excessive bolding isn't my style, I think this post is spot on. I'd include AI/LLM stuff in the skillset as well. It's one of the reasons, the easier work is getting even easier *and* it'll change how ETL is done even if only by assisted coding or AI systems coming into DE scope.",ProfessorNoPuede,2025-07-29 15:07:16,5,dataengineering,t1_n5rcf9k,False,
n5kd0t2,"Happy to see this blog post being covered by newsletters and podcasts organically. Here's why I recommend to read it and share your insights:* This system has scaled to **100k/sec events** and meets the critical requirement for enterprise users* These insights were learned over the past 6 yrs of continuous improvement* RudderStack chose Postgres over solutions purpose-built for Queuing/Event-Streaming solutions. A bold and not so intuitive choice for many.* Covers insights related to indexing, compaction, CTE, WAL, optimized configurations, etc.* You may check out the code at - https://github.com/rudderlabs/rudder-serverP.S. I am a bit biased because I contributed to this article and the project",ephemeral404,2025-07-28 06:27:18,4,dataengineering,t3_1mb591a,True,
n6m0aye,"File in s3. Convert file to parquet. Copy file into snowflake directly from S3. Orchestrated by prefect. Compute for conversions usually done in AWS lambda but there are some done in AWS Glue because it’s really simple to deal with partitioning files in pyspark. I haven’t personally explored snow pipe because most of my needs are for batch data, while snowpipe is geared more towards smaller, continuous transactions.",Slggyqo,2025-08-02 23:54:13,14,dataengineering,t3_1mg3oka,False,
n6lqxlk,Load csv lel,Quirky_Switch_9267,2025-08-02 22:58:52,7,dataengineering,t3_1mg3oka,False,
n6m8iri,"Json + Parquet files loaded directly into snowflake using SQL (COPY INTO FROM STAGE) , for postgres I use a custom python script + PSQL",CingKan,2025-08-03 00:45:50,5,dataengineering,t3_1mg3oka,False,
n6lqe8f,"Fivetran, custom etl scripts on an ec2 ubuntu instance, s3 replication syncs",SuperTangelo1898,2025-08-02 22:55:44,6,dataengineering,t3_1mg3oka,False,
n6m4ffo,"I shared something similar in this sub a few days ago, although it was for a slightly different setup. I think it would still apply for a Snowflake destination: [https://www.reddit.com/r/dataengineering/comments/1mdogaa/comment/n63ux7p/](https://www.reddit.com/r/dataengineering/comments/1mdogaa/comment/n63ux7p/)To answer your question directly, I use Sling (`dagster-sling` package to be more specific) to extract data from Postgres and load it into Timescale but Snowflake is a supported destination as well. Dagster does the orchestration for me, as implied, then dbt does transformations after data has landed in Timescale, also orchestrated by Dagster.I can't really speak to how the performance would be with loading data into Snowflake via Sling, but it backfilled about 300GB of data on the initial run in under 6 hours and every 4 hour incremental loads take around 20 minutes (though this could probably be optimized much further). All hosted on ECS Fargate containers.If we had no budget constraints, I'd probably look at a SaaS offering to do the extract and load for me, like Fivetran or equivalent.",s0phr0syn3,2025-08-03 00:19:47,2,dataengineering,t3_1mg3oka,False,
n6n9oq6,How much data you have to process daily? What APIs do you want to use?,Nekobul,2025-08-03 05:01:34,2,dataengineering,t3_1mg3oka,False,
n6mi3dh,Airflow executing custom python framework,Ok_Relative_2291,2025-08-03 01:46:34,1,dataengineering,t3_1mg3oka,False,
n6nkcfo,"Fivetran for half a dozen business applications, and a custom extract process for our CRM system. Get all data into Snowflake landing zone, shape and transform in the purpose built layer and serve downstream to BI/data science consumers. Done!!",DJ_Laaal,2025-08-03 06:35:31,1,dataengineering,t3_1mg3oka,False,
n6okns9,Python code orchestrated by Prefect:- Either load data as parquet into S3 then using an external stage to load it into snowflake- Or insert directly into snowflake using the snowflake python connector or snowflake sqlalchemy,HandRadiant8751,2025-08-03 12:11:13,1,dataengineering,t3_1mg3oka,False,
n6p2xc2,"Dagster, python script.",TurbulentSocks,2025-08-03 14:05:01,1,dataengineering,t3_1mg3oka,False,
n61rqn9,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-30 20:57:44,1,dataengineering,t3_1mdiajk,False,moderator
n61vut7,Don’t get caught up in job titles because they vary from org to org. Find the type of work you want to do and the skills and toolset needed for it. Look at the job responsibilities and qualifications that match.,Financial-Hyena-6069,2025-07-30 21:17:22,21,dataengineering,t3_1mdiajk,False,
n61tt9m,"too personal to say. Its also very complex since every company, and even every org within every company has all different variation of what these roles actually do",IAMHideoKojimaAMA,2025-07-30 21:07:34,17,dataengineering,t3_1mdiajk,False,
n637ej6,"DE pays a lot more. Realistically I see a lot of Data Analyst work cross over heavily with DE work, but they are respected less and paid less. The work isn't necessarily easier either. I'd just do DE if I were starting over. If you genuinely like the data analyst type of work, just choose data science. It's closer to that type of work, but you will make significantly more money. I kinda feel that a lot of the ""do X if you like Y"" advice isn't super helpful because the role varies a bit from company to company. You also have no clue which one you would like in practice, especially if you don't have experience. You're just guessing. I'd suggest at least trying the options that pay well, so that even if you hate it, at least you are financially well off.",harrytrumanprimate,2025-07-31 01:38:05,7,dataengineering,t3_1mdiajk,False,
n62qxvx,"As a guy with masters in data science who currently works as a ""data analyst"" that does an awful lot of ""data engineering"" I would argue you should know both and eventually decide which one you want to focus on. It will make you a better data engineer or data analyst.",5PointsVs56,2025-07-31 00:01:09,4,dataengineering,t3_1mdiajk,False,
n62lzds,"I would say get into software/web development, that does not require much maths and is easy to pick up for cs grad!",rtalpade,2025-07-30 23:33:44,3,dataengineering,t3_1mdiajk,False,
n6464u8,As a lot of other people have mentioned it’s going to mainly depend on what you enjoy. Do you enjoy creating process to manipulate data to create data tables that are easy to understand and query for downstream users or would you rather take data and perform analytics to drive business decisions? This might be something you can only solve by doing. There’s plenty of examples of projects you can do on YouTube which might help with this decision.I’ve been a data analyst for 5 years and will start a role as a data engineer in a few weeks so I’ll let you know which I end up liking more.,RandomAccount0799,2025-07-31 05:34:30,2,dataengineering,t3_1mdiajk,False,
n65bafz,Data analyst seems like a dead-end job. You're not as technical as a data engineer and you don't have the math / statistics of a real data scientist. Both of those roles are readily positioned to take over data analyst responsibilities if you want it.,forserial,2025-07-31 11:37:07,2,dataengineering,t3_1mdiajk,False,
n5qk3ar,My company recently implemented fivetran and it is ridiculous how quickly we were able to replicate our source systems.,SellGameRent,2025-07-29 04:20:18,26,dataengineering,t3_1mc1k9c,False,
n5qkpqo,"The main question for me is, how much do you expect your data to scale? The price starts to ratchet up once you get past the free threshold for monthly active rows. Taking a dependency on this could potentially be very expensive in the future. If you have small data utilization (and plan to remain at that level), then don't see an issue from a pricing perspective.Another thing to consider here is making sure you temper expectations of the wider business. With no data engineers and a single analyst, there is limited investment in the data function (based on the provided information). Given the connector choice, maybe you report to finance? Regardless, it's one thing to get the data from point A to point B, it's another to ensure the data is correct. For example, what happens if they change the configuration of Salesforce objects? How will you handle that downstream?I say the above to warn of the trap of the business thinking that increased access to data easily results in more data utilization.",on_the_mark_data,2025-07-29 04:24:58,8,dataengineering,t3_1mc1k9c,False,
n5ql30r,"Fivetran is plug‑and‑play and charges on rows. Skyvia is more manual but flat priced. Airbyte, Hevo, Rivery and others are also in reach.We cannot narrow it further without numbers on rows, refresh needs and budget. Too many tools to guess.",bcdata,2025-07-29 04:27:44,8,dataengineering,t3_1mc1k9c,False,
n5qnxzh,"Hi. I can't comment about Skyvia but we use Fivetran. It is exceedingly easy to setup up new replications but it can get expensive. We spend about $30k per year to replicate, SFDC, and several other cloud based systems. We tried using it for replication of large SQL Server databases (300 million rows that change, get inserted often). It was too expensive so we rolled our own (not as nice, but does the job). Not sure how your trial estimated only $50 but I it may be possible if your rows don't change often.",GreyHairedDWGuy,2025-07-29 04:49:40,5,dataengineering,t3_1mc1k9c,False,
n5qmiwb,"When it fails, like it really really fails. Rare, but spectacular. Have had a few instances where things just stopped working out of the blue for a few days. Talk about up shit creek...Building around others obviously has some downsides with any of these 3rd party ETL tools. Fivetran is big name because they're good enough more often than not. They're lot perfect, but they have the resources to be good",EmotionalSupportDoll,2025-07-29 04:38:45,3,dataengineering,t3_1mc1k9c,False,
n5rtmmz,"It has a ton of value if you’re a small team. We have less than 10 people on the data team at a manufacturing company that has over 5 billion in sales. We only write our own connectors if the connector does not exist or our performance requirements are beyond what is available on the market. I would have to have another 2-3 people full time to write and manage connectors for all of our data sources. It’s real hard to explain the value of that to executives, so we buy what we can and only build when necessary.",Jealous-Win2446,2025-07-29 11:07:35,2,dataengineering,t3_1mc1k9c,False,
n5sbx0p,"Fivetran’s turnkey connectors and automated schema drift handling make it a great fit for a team with no dedicated engineers. Your $50/mo estimate for Salesforce, QuickBooks, and SharePoint is very reasonable. Just be aware of the vendor lock‑in and that you won’t be able to customize complex transformations in‑flight; if you need more control down the road, an open‑source option like Airbyte could slot in without a big migration.",GreenMobile6323,2025-07-29 13:06:34,2,dataengineering,t3_1mc1k9c,False,
n5qmp0x,With what you said it’s great. It’s not great if you want to fine tune and control your CDC. Also troubleshooting is a pain due to having to dig through logs. Also the less sources you have the better,wytesmurf,2025-07-29 04:40:03,1,dataengineering,t3_1mc1k9c,False,
n5qt4d8,Where do you push the data from the source systems? What is the target?,Nekobul,2025-07-29 05:32:02,1,dataengineering,t3_1mc1k9c,False,
n5ud1ot,"If you're exploring alternatives to Fivetran, you should definitely check out [COZYROC Cloud Gems](https://cozyroc.cloud/gems/gallery). It's a **modular, low-code platform** that offers prebuilt “gems” (connectors/tasks) for ETL workflows from REST APIs, databases, flat files, Excel, Azure, and even tools like Salesforce, SharePoint, NetSuite, etc.The best part? **It's** ***way*** **more cost-effective**. Pricing is usage-based and doesn't lock you into a per-connector monthly plan. Here’s their [pricing page](https://cozyroc.cloud/gems/pricing) for comparison.You can build and automate production pipelines quickly, without worrying about vendor lock-in or inflated data volume pricing. Worth a try if you're looking to scale without bleeding budget.",NeckNo8805,2025-07-29 18:54:10,1,dataengineering,t3_1mc1k9c,False,
n5jhrxg,"\> My technical intuition is nowhere near as strong as my peers, and I often need hand holding in solution designYour technical intuition is not near your peers might be because you haven't been there long enough to get a full picture of the system. It takes time and practice to build intuition. \> I am the only “BI” guy in my orgYou are literally there for a reason. You are not a fraud, you are not the village idiot.",Objective_Notice_271,2025-07-28 02:25:06,27,dataengineering,t3_1mb47hg,False,
n5jh9jo,"Tbh you sound like a medium skilled dev who doesn't have a burning passion for tech and learning more. Which is totally fine, you don't need to be a rockstar. Do your job the best you can, take advice where given, and just keep trying. Lots of REALLY bad devs out there and it doesn't sound like that's you.But I wouldnt expect to move up quickly or get good promotions.",dcent12345,2025-07-28 02:21:51,17,dataengineering,t3_1mb47hg,False,
n5jk2wt,">I am the only “BI” guy in my org, everyone else is stronger in software engineering. EveryoneI would lean into this. It offers a different perspective on the team and one that is especially important given the reporting layer is what end users see. Your background is certainly an advantage here. This bit:>We no longer have 1:1s or talk about anything really while he still talks regularly to the rest of the teamI know it’s not easy but I would try and muster up the courage and ask for 1:1. Come prepped with an action plan and ask for advice on areas to grow in. A good manager can help here. Good luck and as a DE who leans more BI, it’s easy to doubt our technical skills but there is so much more to this profession. Understanding the underlying data, how to present it, and just how to communicate with teammates goes a long way. Good luck and let us know how it goes!",big_chung3413,2025-07-28 02:40:11,8,dataengineering,t3_1mb47hg,False,
n5jszz1,"Hey, firstly a lot of folks in tech feel like failures/frauds - there's a lot of imposter syndrome floating around, so discount that.However, I'm going to suggest something that hasn't been suggested already. Study/learn. A lot. I often feel like a fraud often but it's usually ameliorated by being the only person in the room who has the answer to a technical question, or enough free-floating context to extrapolate one if it doesn't exist. This was through truly backbreaking amounts of study, often around technical subjects that were only tangentially related to data engineering (microprocessors, operating systems, machine learning, data science, maths) in addition to spending plenty of time learning about core software engineering (languages, design patterns, best practices, tooling) and throwing time at random new tech constantly (agentic workflows, vector dbs, scalable anonymization techniques, heck even occasionally frontend stuff) *in addition* to the obvious stuff (data modelling, query optimisation, infra/cloud). I read the entire Postgres docs from start to finish at one point. Waste of time? Sure, maybe not the most strategic choice. But it's definitely one path to feeling like you deserve your job, because I assure you the vast majority of other folks aren't going to do it. Good luck.",actualhumanfemale2,2025-07-28 03:41:38,5,dataengineering,t3_1mb47hg,False,
n5k7qw2,"I work for a tech company (not small, making billions in revenue), right in the central data engineering team. No unit test is used, as most of the codes are SQL and Python for airflow and terraform for infrastructure set up. I was so surprised when i joined, I do unit test as I came from software engineering background. I think you shouldn’t judge yourself too hard. They chose you for a reason. Learn one thing at a time. Ask ChatGPT or use copilot, Claude- they make decent unit test and can teach you as well.",Extra-Ad-8033,2025-07-28 05:39:31,2,dataengineering,t3_1mb47hg,False,
n5lajh1,"Firstly, it doesn't sound like you have a very supportive team. You joined a team of experienced engineers, whereas you're new to the position. You needing training was a given in that situation and it is a seniors job to mentor. I would definitely ask for a one on one with a regular cadence. Get feedback and start working on the low hanging fruit. Also, talk to your manager about specializing. With you being the only BI guy, it likely makes you in the best position to do data modeling and documentation, working with downstream users, etc. Find something you can do well right now, and gradually learn the rest. Finally, stick it out here and learn as much as you can. You'll probably want to find a new company eventually. Or you'll be there long enough that you get as good as they are. They have 10+ years on you, you can probably get where they are with practice and training by the time you get experienced enough. I started as a BI guy myself. I did a lot of data transformation work at first, which is what I love anyways. Eventually, I had to expand and that was painful. But firstly, I gained additional technical skills which is always good. Secondly, I found that I have a pretty good intuition for architecture, and my manager is eagerly supporting that. Thirdly, I made a name for myself working across teams to build data engineering solutions. That meant that I did not always need to be the most technical guy. I just had to figure out things at a high level and let our consultants who have 15+ years on me with highly technical expertise do their thing. In the meantime, I'll gradually get better technically, but I don't NEED it as my niche isn't as technical.",BoringGuy0108,2025-07-28 11:33:42,2,dataengineering,t3_1mb47hg,False,
n5jzaor,"I will be the bad guy it seems. You're struggling because you sound like you don't care and you're not interested. I was sympathizing with you a bit until I got to your last bullet, then you completely lost me. The fact you don't care about the domain and you don't want to learn more tells me you belong in the struggle you're in. You put yourself there and you don't care about getting yourself out the whole you dug. Thus, the only advice I can give you as a senior engineer is to find some passion, stop crying about what you did to yourself, and get better.",Tehfamine,2025-07-28 04:28:55,1,dataengineering,t3_1mb47hg,False,
n5kxt3t,"OP, I work with lots of computational scientists who I think are fairly similar to the people you worked with in your previous role. They would all struggle hard if they jumped into where you are now, because they mostly just write scripts and things to get their analytical work done - they are not engineers. Engineering is quite a different mindset, I'm also a career switcher but I came from aerospace engineering so the mindset shift wasn't as big.The best advice I can give you to read 'The Missing README A Guide for the New Software Engineer' by Chris Riccomini and Dmitriy Ryaboy. I think it would be very helpful for where you find yourself now and it a pretty short read.",speedisntfree,2025-07-28 09:47:12,1,dataengineering,t3_1mb47hg,False,
n5l7djt,Everyone gets imposter syndrome at some point of another the difference is you are actually getting advice and self-reflecting one foot in front of the other focus on what you can do well if you are finding it hard to pay attention to detail slow things down and then if you are not working fast enough ask if there are quicker ways of doing tasks someone in your team might have an insight or a trick they know from experience that could help you.,brenanweston,2025-07-28 11:09:45,1,dataengineering,t3_1mb47hg,False,
n5mvxsw,"I mean, obviously it’s nice to have a good salary, but do you want to be a data engineer? If you applied for a DE position, it’s probably reasonable to expect some understanding of CI / CD, version control, maybe some basic OOP etc. Your post is giving me the impression that you’re not interested in expanding your skill set, despite your new position having a higher standard of development. That’s not to say that they couldn’t have handled the situation better, but I would be more open to up skilling. Definitely talk to your manager about rescheduling 1 on 1’s and maybe consider creating a plan for additional training, etc.",rewindyourmind321,2025-07-28 16:39:33,1,dataengineering,t3_1mb47hg,False,
n6ny0c3,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-03 08:47:02,1,dataengineering,t3_1mgeel0,False,moderator
n6qel7y,"1) Load data using spark.read.2)Use df.getNumPartitions()3)use df.withColumn(partition_columns,spark_partotion_id()).groupBy(partition_columns).count()4)Depending upon 3rd output use repartition or coalesce.5)Boom 50+ Lpa 6)All the bestRepeat Step 1",Ashlord2710,2025-08-03 18:07:05,10,dataengineering,t3_1mgeel0,False,
n6o2iii,https://georgheiler.com/post/paas-as-implementation-detail/ might be of interest to you You may want to think about dropping ADF and using a dedicated orchestration tool like prefect or dagster possibly even airflow,geoheil,2025-08-03 09:32:25,1,dataengineering,t3_1mgeel0,False,
n6pdlyn,Databricks with dagster pipes is a really nice setup,skysetter,2025-08-03 15:00:28,3,dataengineering,t1_n6o2iii,False,
n6pwv7k,Why not just use workflows in databricks as a first foray?,rakkit_2,2025-08-03 16:38:49,3,dataengineering,t1_n6pdlyn,False,
n6pxrsa,"Versioning workflows is a pain, functionality is lacking when you have large asynchronous dependency chains, and asset bundles is not a very well cooked or rolled out product, doesn’t feel like it should be GA.",skysetter,2025-08-03 16:43:30,2,dataengineering,t1_n6pwv7k,False,
n6qpcf6,Second this. They have some quirks but they are getting improved. But their are not that bad you really need external orchestrator.,Nemeczekes,2025-08-03 19:02:21,2,dataengineering,t1_n6pwv7k,False,
n6jpuu1,I think the majority of the criticism in these articles is saying iceberg is bad for transactional workflows which it is. Additionally it offers no alternatives,ReporterNervous6822,2025-08-02 16:16:14,25,dataengineering,t3_1mfrvpt,False,
n6lqpxm,"Holy shit this is such a misleading and confused take. Not least right off the top the idea that transactions are meant to be row inserts. You’re doing it wrong. A transaction is intended to be a single large block of rows. To wit contention is intended to be low.Taken together, that you think iceberg is a transactional database is your main problem. The design desire of iceberg is to be able to have atomic writes to disk from ephemeral stateless writers for the purpose of retaining and accessing large amounts of data for long periods of time. Any alternative not involving optimistic concurrency necessarily involves a single stateful system that needs to be on for as long as the data needs to be accessible which is absurdly dumb and massively expensive. The only reason databases and database servers exist is to literally provide a lock. To the degree you can avoid locks you can cut massive cost by making the computer independent of the retention process. Don’t get me wrong iceberg is very rough around the edges and leaves a lot to be desired but that you neither understand why it exists or what it’s good for wouldn’t be something I’d publish this widely on the internet.",TheRealStepBot,2025-08-02 22:57:37,21,dataengineering,t3_1mfrvpt,False,
n6m1my6,"The author continues their absolutely-detached-from-reality rant against Iceberg. They've essentially looked at a sledgehammer and decided that it is 'not a serious tool' because it requires more effort, is more unwieldy, and lacks a claw compared to a regular hammer.The article indicates it is a 21 minute read, so I'm going to be somewhat brief here, but essentially other than various truisms the entire thing can be broken down. The article is also quite sarcastic and derogatory, which gives me the impression that the author is more interested in puffing themselves up than earnestly engaging with the problem space.I'll pick a few things that are emblematic of the disconnect between the author's basis for criticism and what iceberg is actually for.---> It also means that the overhead of each file is large (in the order of 1KB).Iceberg (and DeltaLake/Hudi, I'll not mention again) is intended for storing many gigabytes to terabytes and petabytes of data in a given 'table' -- a few KB of overhead is going to be less than 0.001% of the data you're actually reading or writing. You'll likely have more overhead within the parquet files themselves if they've been split relatively small, and your choice of compression algorithm is going to have orders of magnitude more impact.> Putting the burden on the clientThe entire point of the base layer of 'lakehouse' implementations is to decouple storage from the compute. That is: *there is no server* to even consider to be 'putting the burden on the client'. You may as well complain that trains have to run on rails.> If clients need to write manifest lists that point at all Manifest Files - we have already leaked the location of every single S3 file worth stealingThe path to an S3 file is not sensitive data, it is protected through access control to the bucket. You may as well complain that clients connecting to databases leaks the IP of the database.Iceberg is not intended to solve row-level security for you in the same way that parquet does not solve row level security. It simply isn't in the scope of what it is trying to solve, because it isn't seeking to replace a database.> Did we not learn in CS 101 that if you need O(n) operations to append to a list, you are probably doing something wrong?This section completely ignores something that the author *should* know quite well, that sometimes you exchange processing time for space consumption. For metadata files the repeated data is utterly insignificant compared to all the other reads and writes that are happening, but because we're dealing with remote storage accessed over a network then when reading it is much more efficient to retrieve a single larger block of data than make many individual requests.In fact the author later whinges that a query has to do sequential 2 metadata reads to locate the parquet files it needs - so they *do* understand the benefit of compacting data together, but they just choose to ignore that in this instance so that they can heap more derision on Iceberg.> Optimistic Concurrency - Why it does not work! ... is there ever a point to optimistic concurrency control? ... In Iceberg, two concurrent writes to a table will ALWAYS be in conflict A section in which the author almost realises they may be lacking some perspective, but plows on ahead anyway.First of all, Iceberg is considered about the overall efficiency for readers and writers that are operating in completely isolated processing environments, and when writing data they are going to be writing a *lot* of data and it may take a relatively long time (seconds to minutes). A complete pessimistic lock would prevent concurrent non-conflicting writes, which means you could only ever effectively have one writer to a table, which would be an unnecessary restricting if you have pure-append ingestion processes, and pure-append ingestion processes are very common in lake/lakehouse implementations.And yes, you can have non-conflicting *data* writes even if the metadata writes are conflicting, but as I've mentioned in here the metadata is insignificant compared to the data in intended use cases. Getting a writer to rewrite even a 1MB metadata file is a significantly better tradeoff than having them sit idle for many seconds to minutes, when their compute runtime is costing you money. And that's if they even get a conflict - subsecond timings on completion of concurrent writes is pretty rare for the intended use cases.> ""Tables grow large by being written to, they grow really large by being written to frequently"".Complete bullshit. My largest tables are either full snapshots taken periodically from sources, or they use streaming ingestion with buffered writes. In fact streaming ingestion is directly a use-case for optimistic concurrency - each partition can have a separate writer and they can all write data concurrently and commit periodically.> Did I mention that 1000 commits/sec is a pathetic number if you are appending rows to table?Absolutely unhinged criticism. The target format is parquet and the default row group size for writers is on the order of 100k to 1M rows. To hit a required 1k commits/sec you'd be looking at ingesting >100M rows/sec and 100GB/sec of *compressed* data while having each individual parquet file be committed one-by-one with a thousand independent writing processes.What you would *actually* do is have a partitioned writer that has 1000 concurrent parquet writes, and it commits once per second. The author is just *inventing* problems.> Intermezzo: Iceberg REALLY does not want to be a databaseThen why are you critiquing it like it is one?This is ridiculous. I'm out, and I'm barely half way through the article.",azirale,2025-08-03 00:02:21,8,dataengineering,t3_1mfrvpt,False,
n6jg027,Iceberg would be great if the docs were better and it was easier to get started with it.Delta was just practically set and forget.They all have warts friction to adopt is a killer though.,MonochromeDinosaur,2025-08-02 15:23:55,14,dataengineering,t3_1mfrvpt,False,
n6kbpfw,Some fair criticisms but also clear misunderstandings of the use cases it is intended to solve.,festoon,2025-08-02 18:11:22,6,dataengineering,t3_1mfrvpt,False,
n6kh5ft,"We recently switched to an iceberg-trino deployment and while it is much better than hive, it isn't perfect. Esp when using dbt-trino, there are many errors during runs that end up resolving themselves in subsequent runs.At least it is still better than Redshift lol",SuperTangelo1898,2025-08-02 18:41:15,3,dataengineering,t3_1mfrvpt,False,
n6jx8yh,Thank you for sharing.,Franknstein26,2025-08-02 16:55:50,2,dataengineering,t3_1mfrvpt,False,
n6mmrtq,"Oh, this site again. Again: it's bs.",robberviet,2025-08-03 02:16:24,2,dataengineering,t3_1mfrvpt,False,
n6p6lt2,"Is Delta Lake better?I think the delta metadata is simpler than Iceberg but it used to need something extra for locking, like Dynamo? Which would make it even worse.Either way, this article is better advertisement for DuckLake and explanation of reasons behind it than any actual DuckLake content I have read.",Letter_From_Prague,2025-08-03 14:24:42,2,dataengineering,t3_1mfrvpt,False,
n6jbumt,Interesting read. Thanks for sharing your insights :nerd_face:Seems like all current table formats still have to figure out some problems. Exited to see what the future holds :smiling_face_with_smiling_eyes:,JulianCologne,2025-08-02 15:02:18,-2,dataengineering,t3_1mfrvpt,False,
n6erl8r,"AWS and Azure dominate in Brazil. When they require GCP, most of them require only BigQuery knowledge.",SupoSxx,2025-08-01 20:04:09,27,dataengineering,t3_1mf60lt,False,
n6engvb,AWS and Azure dominate the cloud market and make up most of the market share. GCP is small fry compared to them,az-johubb,2025-08-01 19:43:33,18,dataengineering,t3_1mf60lt,False,
n6kroa8,GCP is highly relevant in the US market particularly. I recently left the data engineering and platforms organization for a Fortune 100 healthcare company. Since 2022 the company migrated all its enterprise data platforms from on-premises to GCP. The whole data strategy and digital transformation mission of the company was and continues to be hinged on GCP.The migration wasn't without its challenges but was wildly successful.,trajik210,2025-08-02 19:40:11,3,dataengineering,t3_1mf60lt,False,
n6entz6,"Companies that does lot of web development uses AWS and on the data engineering end, it's mostly Azure which is what I have seen so far.",69odysseus,2025-08-01 19:45:21,5,dataengineering,t3_1mf60lt,False,
n6eqyzo,Google is catching up! IMO the main reason a lot of C-Levels are (and not without reason) precautious with GCP is because of BigQuerys billing. Prices can skyrocket really quick and at most you can set up a budget alert but not shut it down.Databricks is also a major player and just recently Google is having a nice integration with them.,BotherDesperate7169,2025-08-01 20:01:03,5,dataengineering,t3_1mf60lt,False,
n6f93sd,"More than half the DE jobs offers in Chile are for GCP, I think it's the cheap option here.",sebakjal,2025-08-01 21:32:19,3,dataengineering,t3_1mf60lt,False,
n6f4abf,"In general in Europe, you have azure, then aws and from time to time Google",freedumz,2025-08-01 21:07:16,1,dataengineering,t3_1mf60lt,False,
n6fz1lq,They objectively are,speedisntfree,2025-08-01 23:58:10,1,dataengineering,t3_1mf60lt,False,
n6g8bxm,falling behind? they never caught up they have some good stuff but they are clunkiest of the big 3,pragmatica,2025-08-02 00:54:58,1,dataengineering,t3_1mf60lt,False,
n6er5v8,"30%, 25%, and %10 respectively",One-Salamander9685,2025-08-01 20:02:00,9,dataengineering,t1_n6engvb,False,
n6bi0we,"It totally depends on your needs. If you need versioning on raw data (e.g., for compliance, auditing, or reproducing historical reports exactly), you can snapshot raw tables too. But in most cases, you’ll want to apply SCD2 to clean, modeled dimension tables. That way you’re tracking meaningful business entities, not noise or bad data.For aggregated columns (like total\_likes), only snapshot them if you truly need to know what that number was at a specific point in time. If it’s something you can always recalculate from event-level data, it’s usually better to leave it out.",PolicyDecent,2025-08-01 09:11:39,22,dataengineering,t3_1mer9t2,False,
n6bngn6,"Our experience with dbt snapshots was pretty poor. How do you recalculate them from scratch? Like if your SCD type II dimensions were blown away, how would you recreate them from scratch? For instance, I add a new column and want to backdate the values to what they were when the data came in, so ideally want to blow away the type II table and rebuild with all the history. You can't easily do that unless you use snapshots on source data, which is what we ended up doing. Most dbt literature of actual snapshot implementation in real life situations basically said use snapshots as sources to read from. Once we did that and handled type II SCD's ourselves by interpreting the dbt snapshots, our problems went away.",blobbleblab,2025-08-01 10:02:35,3,dataengineering,t3_1mer9t2,False,
n6bxj2k,"If you really want to get a solid understanding of dimensional data modeling including slowly changing dimensions, I recommend you get your hands on a copy of ""The Data Warehouse Toolkit: The Definitive Guide to Dimensional Modeling"" by Ralph Kimball. This is basically the fundamental text for learning this methodology so should answer many of your questions.",name_suppression_21,2025-08-01 11:23:47,4,dataengineering,t3_1mer9t2,False,
n6by5qc,"disclaimer, i work at dltHub dlt is an ingestion tool and in my eyes as a DE this is where SCD belongs - there's no real value to storing duplicate raw data for versioning so IMO you should do this operation as far left as possible, basically in the ingestion staging layer (the temporary layer you might load to in order to do raw loading materialisations like merge updates).Here's a video from someone in our community how they use it [https://www.youtube.com/watch?v=eFNvYf1D6Aw](https://www.youtube.com/watch?v=eFNvYf1D6Aw)our version works on raw data, not sure how to answer your aggregates question - SCD is typically for versioning dimensions that change slower than the loading intervals hence **slowly** changing dimensions",Thinker_Assignment,2025-08-01 11:28:17,3,dataengineering,t3_1mer9t2,False,
n6ci1vq,No tools. Just a methodology . U can use a minus query to determine what columns have changed and assign your surrogate keys to the new records. Read the kimball book that was posted recently,Kindly-Ostrich-7441,2025-08-01 13:28:32,1,dataengineering,t3_1mer9t2,False,
n6cjj2y,"Ive got several uses where it happens in 1 or more layers to a model.E.g. im snapshotting at the bronze layer because that is the lowest atomic data in a dimension or fact, but im also doing it at the semantic level because there are aggregates of KPIs that can change over time either through new data at staging or core levels, or changed data at those levels.",umognog,2025-08-01 13:36:22,1,dataengineering,t3_1mer9t2,False,
n6cnuda,"Start with daily, weekly, monthly, quarterly, yearly. Then see if you ever need scd2. scd is a great pattern but not needed on every project.",redditreader2020,2025-08-01 13:58:39,1,dataengineering,t3_1mer9t2,False,
n6bjtb9,"Thanks! I am thinking of a case with high events volume, so I wouldn't want to recalculate from raw events data. I am considering to save event counts by day and user in a separate table, so that we can we can reconstruct total counts at any time cheaply.",Kupsilon,2025-08-01 09:28:51,2,dataengineering,t1_n6bi0we,True,
n6bsj20,"how does your logic in intermediate layers looks like? Do you work with raw SCD2 or just the current rows? Multiple joins with SCD2 would be a pain and not efficient(?), but if you don't do it then I don't see how you easily solve the issue ""if your SCD type II dimensions were blown away, how would you recreate them from scratch?"".",Kupsilon,2025-08-01 10:45:47,1,dataengineering,t1_n6bngn6,True,
n6c8wtb,"I've read that, but I am afraid it was not enough for me",Kupsilon,2025-08-01 12:37:31,1,dataengineering,t1_n6bxj2k,True,
n6m0lqp,"I found earlier in my career as an analyst programmer that project teams would normally be formed with a cross section of stakeholders. Joining a project group like that was good because you had to learn the concepts of the various domains, and being responsible for analysis and delivery meant you had no choice really. As technology/data roles have become more specialized and commoditized, I think DE teams are definitely more distant from the workings of the business. I think your best bet there is getting some exposure as a tech BA (although this probably means less hands on work), or work in a smaller company where everyone has to do a bit of everything.",HG_Redditington,2025-08-02 23:56:02,17,dataengineering,t3_1mg4cqz,False,
n6pvl2b,"Data mesh as a concept addresses this. But the CIO needs to be utterly convinced and the CEO on board forcing it to the other VPs, or else it fails. So where does the CEO come from? Sales? You’re doomed. HR? Ultra doomed, IT will be 99% outsourced.Finance? Then maybe, if you prove the payoff, and show how it will reduce costly Shadow IT. CIO to CEO, fairy tale. So domain knowledge ends up being stuck between the chair and the keyboard, and when a person leaves for retirement or better opportunity, a void appears and data quality suffers. I like making tools, especially with Views, so that there’s a person per department/domain can access those Views and get a report in Excel on bad data from their source system. So they can fix it. Critical stuff is an email to an AD group so director and others get it. It’s a constant WIP struggle.// some of this comment is /I just in case not obvious",SirGreybush,2025-08-03 16:32:13,3,dataengineering,t3_1mg4cqz,False,
n6m9low,"Yeah, you're more likely to develop domain knowledge working at the other end of the pipeline.If you can find projects working with the analysts and data consumers, you'll get a better feel for what they're trying to do, and insights are important, etc.",tolkibert,2025-08-03 00:52:39,2,dataengineering,t3_1mg4cqz,False,
n6n7ywh,"I think you need to figure out who's talking to the stakeholders if you want to understand the business. Either get a more senior position within DE (like what your boss does) or switch to a front end role (or better yet a well-rounded BI dev role who does both DE and front end). Might need to work for a smaller team in that case, though. The best would be a liaison role between IT and the business, but usually that's a people manager. Just show interest in the business and push to learn more. If your boss isn't gatekeeping you, you may be able to get on some calls with the business.",fomoz,2025-08-03 04:47:37,2,dataengineering,t3_1mg4cqz,False,
n6q9z76,"Domain specific knowledge, in my experience, is acquired through osmosis. It's never handed to you as documentation, except in very rare, very specific industries where you need to be trained / certified to do the job in the first place. As a result, it's acquired more slowly. Couple that with the trend of leaving jobs every 18-24 months, and you never really acquire any domain knowledge, you just bounce around doing the same technical thing.The solution? First, identify someone who knows what you want to know. There is always ""that guy"". Talk to him (or her) and just ask questions. You will start to find out what things matter and what things you don't know. Don't treat it like an interrogation, just ask questions to help answer 'why' questions you have about your work. ""How come we match customer data through three other systems, wouldn't it be easier if we...?"" ...well, we do that because regulations require XYZ, and then we have to ...This is where you begin to acquire the kind of knowledge you're looking for. If you are persistent in filling gaps in your own knowledge, you'll get there. But do not be surprised if it takes longer than you think. You will not acquire expert-level domain knowledge and simultaneously acquire expert-level data engineering knowledge in 5 years' time.",andpassword,2025-08-03 17:44:12,2,dataengineering,t3_1mg4cqz,False,
n6mngem,"This is the first time I'm hearing about the data model role. What are they usually called or what are their titles in the companies that you have worked with? Are they also a ""Data Engineer""?",hegelsforehead,2025-08-03 02:20:50,2,dataengineering,t3_1mg4cqz,False,
n6lycfv,What does your manager tell you when you ask about this is?,staatsclaas,2025-08-02 23:42:33,1,dataengineering,t3_1mg4cqz,False,
n6pfkhp,"You can learn some basic industry knowledge on your own, then read whatever documentation your platform has (e.g. the data catalog) to get the basics. Then start asking questions about the data to the stakeholders and PMs. Long term it's what you want to do to progress in your career because eventually you will be in a position where you need to talk to the business and understand their needs, then translate that into technical requirements.",Gators1992,2025-08-03 15:10:29,1,dataengineering,t3_1mg4cqz,False,
n6ra9e2,"Depends all on the people who are working with you, the software that they use and how much you want to dive into it.It is all about their entities and relations to each other.I made the experience that the company itself does not know all of this, or makes wrong accusations of it all the time.I mostly build STL so that I can change most things in the early phase pretty easily because the requirements that I get are 70% correct mostly, and they will change dramatically while on the project and process, it's a pain in the ass, but it is what it is",Necessary-Change-414,2025-08-03 20:50:22,1,dataengineering,t3_1mg4cqz,False,
n6m1nma,Yes this would be ideal but there are no such projects. Analysts are analysts. Data engineers are data engineers. Platform engineers are platform engineers,Guilty-Commission435,2025-08-03 00:02:28,1,dataengineering,t1_n6m0lqp,True,
n6o6dng,At least don't use telegram for prod things,awkward_period,2025-08-03 10:10:24,6,dataengineering,t3_1mgfbyc,False,
n6ob8up,Everything is in pvt channel.,Anu_Rag9704,2025-08-03 10:56:09,0,dataengineering,t1_n6o6dng,True,
n6oq4jg,Did your company's legal and InfoSec teams review and approve this?Quite surprising that the network security folks allowed access to Telegram from a production server.,ogaat,2025-08-03 12:48:56,2,dataengineering,t1_n6ob8up,False,
n6pvoo0,Am I missing something? This post looks like OP just made a personal bot that sends him a job alert. What does that have to do with company legal and infosec teams?,organic-integrity,2025-08-03 16:32:42,1,dataengineering,t1_n6oq4jg,False,
n6oy2z6,"None of the tokens are exposed, the bot is pvt bot only accessible by myself.",Anu_Rag9704,2025-08-03 13:37:42,0,dataengineering,t1_n6oq4jg,True,
n6q93yv,"They did not say that this was a learning project or that it was built using a trial of Databricks. That implies this was in a corporate environment.Databricks is an expensive product and while small Mom and Pop companies may adopt it, it is far more likely in big businesses and in environments of vendors who support them.My comment is further lent credence by lack of pushback by OP.",ogaat,2025-08-03 17:39:53,1,dataengineering,t1_n6pvoo0,False,
n6oyi4l,"That is besides the point, since the determination of security has been made by you, who has a vested interest.If this gets hacked, the worst you will face is getting fired but the risk will fall disproportionately on your employer.The failure really is of your networking and security teams who even made such a path possible.",ogaat,2025-08-03 13:40:09,1,dataengineering,t1_n6oy2z6,False,
n6p30n3,"I am still not able to grasp, if tokens are not exposed nor any endpoints and bot is private iteself, hosted pvt server, how its a risk?",Anu_Rag9704,2025-08-03 14:05:32,1,dataengineering,t1_n6oyi4l,True,
n6s9n9r,"I would thoroughly read your companies data and security policies. If they terminated you tomorrow, I assume this would still run? That in itself would violate IT controls and would put you in their crosshairs.You’ve sent business processes outside of their control and around any security measures they have in place.",minormisgnomer,2025-08-04 00:06:47,1,dataengineering,t1_n6p30n3,False,
n6pblze,"If your personal phone gets hacked, your company is at risk. Your phone quite certainly has a lower security profile than a corporate device.If it was a corporate phone and they allowed Telegram on it, they deserve to get hacked.",ogaat,2025-08-03 14:50:18,1,dataengineering,t1_n6p30n3,False,
n6f8cft,"I work for Snowflake but I am not speaking on behalf of the company. I have seen few customers who built their own custom system similar to this but it usually involves a custom middle layer managed externally where the queries are triggered from. Like a python code that fires up series of Data Enginnering jobs in a round robin style on to different warehouses. Havent seen anything that receives a query from an external tool, interject then routes it to different warehouses. It would have to also route the resultsets back to the client so not sure how that will work.Part of the Snowflakes major appeal is the security and scalibility so unless the solution runs fully within Snowflake, the security may be an issue for some as well support if things stop working.I guess hard to say w/o knowing how it is architected.",Mr_Nickster_,2025-08-01 21:28:17,8,dataengineering,t3_1mf11dd,False,
n6dknfh,Does it work only for query sheet? What uses cases are covered?,Pop-Huge,2025-08-01 16:36:16,2,dataengineering,t3_1mf11dd,False,
n6dku2n,Are you worried that snowflake may take you down? Not directly like a cease and desist but implementing a way of blocking your tool,Pop-Huge,2025-08-01 16:37:09,2,dataengineering,t3_1mf11dd,False,
n6dn0eh,How would you integrate this with DBT?,Diligent_Fondant6761,2025-08-01 16:47:44,1,dataengineering,t3_1mf11dd,False,
n6dree6,Similar to Trino Gateway ?Would love to see it in action,Shpitz0,2025-08-01 17:08:49,1,dataengineering,t3_1mf11dd,False,
n6eb1wu,How does the linking/cluster of warehouses work? Do I create them in Snowflake directly or through your application?,asarama,2025-08-01 18:42:12,1,dataengineering,t3_1mf11dd,False,
n6ecygl,is this greybeam? and we see a toilet analogy? :P,harrytrumanprimate,2025-08-01 18:51:35,1,dataengineering,t3_1mf11dd,False,
n6fceih,"I hear ya, we are in the process of getting our SOC2 and other compliance certs. Even then some companies will not want to add an additional failure point to their system. It will really depend how bad folks are feeling the pain!",hornyforsavings,2025-08-01 21:49:57,2,dataengineering,t1_n6f8cft,True,
n6dn45f,"Anything that connects to Snowflake will work. We won't be able to orchestrate workloads that are orchestrated within Snowflake like dynamic tables, tasks, procedures, etc.",hornyforsavings,2025-08-01 16:48:14,1,dataengineering,t1_n6dknfh,True,
n6dmbfj,"I don't think they will block me but they could offer this feature at a lower tier. Similar to Sundeck, Keebo, etc., they didn't block them for years but ended up releasing Adaptive Warehouses",hornyforsavings,2025-08-01 16:44:21,3,dataengineering,t1_n6dku2n,True,
n6od66z,Thanks!,Alexxxxxxxx13,2025-08-03 11:12:31,2,dataengineering,t3_1mgfy4f,False,
n6qghi3,How would you move this image to the cloud? How do you secure the topic or the information inside of it?,Firm_Communication99,2025-08-03 18:16:44,2,dataengineering,t3_1mgfy4f,False,
n6ro6zy,"Do you mean moving the entire application to the cloud? Cloud-based Kafka services typically include built-in authentication and authorization, so securing topics shouldn't be an issue. The same goes for Flink. As for the dashboard, Streamlit even has third-party authentication packages, so securing the app is also feasible.",jaehyeon-kim,2025-08-03 22:04:08,1,dataengineering,t1_n6qghi3,True,
n5p6l0o,Doesn't Avro already fit this bill?,phonomir,2025-07-28 23:21:12,41,dataengineering,t3_1mbrby7,False,
n5peyxj,"Most databases are row lookup….SQL, mongo, Cassandra etc are all essentially row wise.Columnar is popular in DE/DA as most of the queries are calculations over large number of rows in a given set of columns.Typically, when you want to do analytics from your database, common wisdom is to query a duplicate of the database or have a normalized copy of it in the analytics environment.I think a row wise format sounds nice in theory, but can’t see the value in practicality. Plus intergrating with engines and the optimizations they have for columnar wouldn’t scale nicely on large data sets",Oct8-Danger,2025-07-29 00:07:23,16,dataengineering,t3_1mbrby7,False,
n5p78jd,SQLite?,phonyfakeorreal,2025-07-28 23:24:45,8,dataengineering,t3_1mbrby7,False,
n5pxbpg,CSV is the mvp on open data format designed for row-oriented storage. And I'm not kidding.,Misanthropic905,2025-07-29 01:52:59,17,dataengineering,t3_1mbrby7,False,
n5o9t4w,Microsoft just announced https://github.com/microsoft/amudai and https://github.com/vortex-data/vortex is gaining traction. Time is likely better spent on integrating these formats into existing tools/infrastructure,ReporterNervous6822,2025-07-28 20:32:43,9,dataengineering,t3_1mbrby7,False,
n5ptv1s,"What would be the advantage compared to using the open-source, widely used and integrated open-source row-oriented* databases like PostgreSQL or SQLite?",sib_n,2025-07-29 01:32:58,3,dataengineering,t3_1mbrby7,False,
n5t9jg0,"we’ve optimized so much around columnar formats for analytics, but row-oriented workloads still dominate in OLTP and mixed-use cases. An open, efficient row format could open the door to more interoperability across engines like Postgres, MySQL, etc.That said, adoption is the real hurdle vendors would need deep incentives to support it natively. Maybe a middle ground could be Iceberg or similar table formats evolving to abstract both row and column storage under a unified access layer.",eb0373284,2025-07-29 15:52:53,3,dataengineering,t3_1mbrby7,False,
n5rty2a,"If you are looking for simple, text-based options at smaller scale or lower performance needs, NL-JSON is a simple option as well. Not space efficient but useful for complex data models (eg nested objects, arrays) in ways where CSV isn’t great. If performance or space efficiency needs are greater, agree w Avro.",nagoo,2025-07-29 11:10:03,1,dataengineering,t3_1mbrby7,False,
n5s3tzg,But sir you can just query JSON lol,cranberry19,2025-07-29 12:18:33,1,dataengineering,t3_1mbrby7,False,
n5psjhd,"I was going to say, parquet is columnar. Avro is rowstore",wytesmurf,2025-07-29 01:25:15,18,dataengineering,t1_n5p6l0o,False,
n5kkr9v,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 07:39:49,1,dataengineering,t3_1mb9y5s,False,moderator
n5kvzo8,"There's plenty of publicly available datasets. Think up a project using them that ends in a nice Power BI report on your own website.Build the project. You'll learn a lot.Drop the URL into your resume along with a couple of sentences about it. It'll then be easy and interesting for prospective employers to discuss it with you. If you just post a link to GitHub, then that's a bit like homework.",salinungatha,2025-07-28 09:29:52,2,dataengineering,t3_1mb9y5s,False,
n5kzki6,With your existing power bi skills this should not be a problem. ask yourself about the non aggregated source of the data used in building the reports.Then once that's figured out ask yourself for corporate dashboard the business process that produced that data. It's the business process that will then scope your data engineering learning project.,xahkz,2025-07-28 10:03:16,2,dataengineering,t3_1mb9y5s,False,
n5xhq81,"A project. Preferably a retail dataset, or something easy to understand in day to day life but would get you in data modeling. Enterprise DNA is good.",PointRealistic456,2025-07-30 05:33:23,1,dataengineering,t3_1mb9y5s,False,
n6cqpgx,Thanks very much for this,PuzzleheadedShoe1915,2025-08-01 14:12:52,1,dataengineering,t1_n5kvzo8,True,
n6cqs0j,Thank you I will take this approach!,PuzzleheadedShoe1915,2025-08-01 14:13:13,2,dataengineering,t1_n5kzki6,True,
n6cqt02,Thank you!,PuzzleheadedShoe1915,2025-08-01 14:13:21,1,dataengineering,t1_n5xhq81,True,
n6sgfsh,"I hope that it's true, but I have serious doubts given how AI has affected data engineers so far. Data is hard to find, but it seems that data engineering jobs are decreasing or increasing at a lower rate that they were. The past few years, there has been news after news about IT layoffs and a huge increase in posts on here about people being laid off or having a harder time getting hired.",ironmagnesiumzinc,2025-08-04 00:47:22,10,dataengineering,t3_1mgyz68,False,
n6sd5a3,"Hi, do you have the link to the article?",Joaco2023,2025-08-04 00:27:31,4,dataengineering,t3_1mgyz68,False,
n6selpj,"It is from 2025 guys, sorry.",Puzzleheaded-Dog876,2025-08-04 00:36:16,1,dataengineering,t3_1mgyz68,True,
n6sh2zb,"Data Engineers handle big data at many places, not sure what they mean by specialists. Fintech engineers, data engineers can also work in fintech, might just need little bit of finance domain knowledge otherwise data engineering concepts can be applied anywhere. In finance, there are more regulations and compliance rules that need to be build and implemented in the pipelines, that's one thing many will need to pick up on the job. AI/ML Engineers are already in demand and will be for a while, at least until the whole AI hype wears off. It requires quite a bit of Math and Stats background.",69odysseus,2025-08-04 00:51:13,1,dataengineering,t3_1mgyz68,False,
n6sk0fb,"I think there's an unclear balance between, on one hand, becoming a specialist that can get good positions because they are needed and harder to recruit, and on the other hand, being generalist enough that you can be a matching candidate for more jobs. I think a data engineer is already a kind of specialist backend engineer who can get good positions because they are not easy to recruit, at least in my experience. Some DEs are also good at devops and web development, which opens them more opportunities.Another point is that I feel that those titles are overlapping and that a well-rounded DE can apply to multiple of those. I do understand it is impossible to find perfectly independent categories for this kind of studies. Namely, in the same order as the diagram: - big data specialist- DWH specialist- data analyst- data engineer- database professional- BI analystThe fact that big data specialist comes before DE, although a DE is in general considered a big data specialist, may just show how the DE title still lacks recognition. At the opposite, surprisingly DA and DS are put together whereas there could be a giant gap of skills between an SQL DA and a DS expert in ML. Overall, I feel this study or this result is too unclear to draw much conclusion.",sib_n,2025-08-04 01:08:34,1,dataengineering,t3_1mgyz68,False,
n6slk62,I may not be that well informed but i want people to weight in agentic ai impact on data engineering roles i believe the role can be automated maybe not fully but anywhere between 50-80 percent in the next 10 years.,Happy_Cicada_8855,2025-08-04 01:17:48,-1,dataengineering,t3_1mgyz68,False,
n6sji4t,I have been interviewing rather aggressively and the one thing is clear is there are a ton of firms doing migrations to Databricks and snowflake. And they have a ton of data that needs to be managed.,nonamenomonet,2025-08-04 01:05:30,12,dataengineering,t1_n6sgfsh,False,
n6siq3k,I don’t see how AI has affected DE,LongCalligrapher2544,2025-08-04 01:00:53,5,dataengineering,t1_n6sgfsh,False,
n6sdijw,https://reports.weforum.org/docs/WEF_Future_of_Jobs_Report_2025.pdf,Puzzleheaded-Dog876,2025-08-04 00:29:42,4,dataengineering,t1_n6sd5a3,True,
n6sdohw,Found it here: https://www.weforum.org/publications/series/future-of-jobs/,rewindyourmind321,2025-08-04 00:30:42,2,dataengineering,t1_n6sd5a3,False,
n64m0wc,"Depends on your team size and data size I would say.The “right” approach is to have data loaded to s3 before redshift. But most company won’t ever do anything with this. But it allow your to grow, avoid potential vendor locking, reduce DW cost by doing preaggregation yourself before loading it in redshift, etc, etc. But all of this requires a lot of effort? Which might be slowing you down to achieving you company goals. If you have a big enough data team it make sense, if you are pretty small the loading directly to redshift is very appealing.You’ll always have the possibility to offload the data from redshift to s3 in the futur if that’s needed but you won’t shoot yourself in the foot and not deliver anything for the first 6 months.In terms of pricing, you are analyzing storage cost which shouldn’t be a factor imo. Yes storage is way cheaper in s3. But the size of data you have in SAP isn’t probably not that big. You need to define that first. For example I don’t see a world where you have a terabyte of data to load from SAP to redshift. A terabyte of text files is a LOT of data for things that are entered manually or mostly in SAP. Now let’s say you have a terabyte of data because your company has a lot there (which you probably don’t) then having the storage cost in redshift would be something are 25$ per month for the hole data set. Our conversation here cost more than that. Depending on type of s3 storage you might save a lot but storage is negligible for small datasets.The real DW cost is compute, and that needs to be considered. I know the business wants SAP and ALL other sources, but you should chunk this a lot so you endup delivering things in small chunks. Everyone wants everything yesterday but that’s not how things work. Start with SAP but not all, the most relevant concepts because there’s probably a lot of tables there to sync, clean, transform to make the data usable. The goal of you DW is to make data usable but also to get a single source of truth. If you just load raw data in and let business build dashboard on top of the raw data I can tell you this is going to be a mess in 2 months. Start small, get the table requirements that allow you to clean the data, make the data available, then repeat.To go back on pricing, if for example you think that you have A LOT of data multiple terabytes. And that the storage cost will be around 1000$ a month because you have 40 terabytes to load and that can be an issue, then I can assure you, you won’t like the Fivetran Bill. If you need to think about the storage cost, then you need to rearchitect this because Fivetran is not the option you are looking for. It’s very good to load data quickly. It gets insanely expensive when you start to really use it. Most companies won’t have issue with fivetran cost because most company don’t have a lot of data.Good luck",Commercial_Dig2401,2025-07-31 07:58:28,4,dataengineering,t3_1mdsm5n,False,
n64noei,"I'm gonna share with you what I have here and see if it works to you:Go with a lakewarehouse solution, so stage all data in S3 first, since:- cost is lower- you can plug this data in any other tool besides redshift, - can also storage as hot, cold, glacier later to save costs- if data grows quick in some point, you save cost not storaging everything in redshift- S3 also allows organization here with different business areas in folders- you may change a daily batch CDC to a realtime CDC with Kafka/stream processor if business reqs change- store it as Delta/iceberg/Hundi. See correct config to save processing and make it write faster, as no retention period. You may also apply clustering rules here.Then I would ask, do you really need redshift? I know it exists and basically how it works but never worked since I mostly only move data from staging area to silver and gold areas in S3, using again Delta/iceberg, leaving data with dimensional modeling as needed by business.I generally use Databricks/snowflake to process it,but so far I know, you can also use Glue for it.Delta/iceberg have acid properties/time travel/and others that can be selected and designed as your need, replicating redshift pros.If it is enough, you totally save redshift costs, and got a simpler arch in only one place. If you really need redshift you send only totally needed tables there. And allow silver/gold tables being connected to other tools in future.I am totally opened to comments here and up to suggestions if it works or not.",Vreichvras,2025-07-31 08:14:00,3,dataengineering,t3_1mdsm5n,False,
n645gnx,"Im still fairly new to the field, so while you wait on responses from people with more knowledge and experience, my first and main question is what is current state of your data and what is the predicted state of your data. If you currently only require a structured warehouse that doesn’t require a large quantity of tables with potentially a large amount of rows and/or columns and you don’t foresee that changing anytime soon, then maybe go the easier route directly into Redshift. But let’s say in the next 3 years the data requirements explode and you need to house triple the size of data your currently hold or start to introduce unstructured data types, then building out the Glue pipelines from S3 to Redshift now will build a solid foundation for the future.Again, take my response with a grain of salt as this is coming from a more junior perspective.",RandomAccount0799,2025-07-31 05:28:49,1,dataengineering,t3_1mdsm5n,False,
n645mhr,"I think you should go with the s3 approach as the data grows there you would need lot of transformations and you don’t need all the data in redshift so you can be flexible with that so in long run s3+ redshift is the way to go considering scalability, flexibility and costing",Tiny-Secretary-6054,2025-07-31 05:30:10,1,dataengineering,t3_1mdsm5n,False,
n65h178,"How is your team's staffing and skill set? How is your team's budget? How valuable is your data to your end users? I came from finance, and IT people really struggle with big picture and materiality at times. Not saying you do, but I see it a lot. In my experience, start with the most maintainable approach. Be transparent about costs, but still go with it. More maintainable means you can add more features, fix breakages faster, and have fewer breakages. Your end users would vastly prefer that you don't have outages on critical delivery days, your boss will prefer that you get this finished and off your plate to work on the next thing, your successors will prefer an easier onboarding, and you will look better throughout. Also, compute is often more expensive than storage. If you're only focusing on storage costs, you may be missing the bigger expense.",BoringGuy0108,2025-07-31 12:14:18,1,dataengineering,t3_1mdsm5n,False,
n65qsg3,"Hey!Thanks so much for the input.So SAP tables are a LOT. But for now, we use only 50-60 tables, it’s just that we don’t know what tables will we use exactly in the future based on the use cases. For now the size of the data is very less like max 50gb worth 10 years of data.For this much data, direct redshift would be ideal. But considering the future, if data size increases, it will be a problem. Although data honestly wouldn’t spike much. Coming to your point where if redshift is even needed: yes I feel so because we currently have tableau connected directly to sap where the devs created views which consume a lot of compute making dashboards slow. If we use s3 tables, we will have to use Athena for querying and connect that to tableau, and we have a lot of complex queries/views built on top. I don’t think it’s a good solution to use Athena as our query engine.And I am the only DE here so it will be difficult for me to write code for every table and it’s upsert logic if it lands in s3 first. And it’s really too much dependency on me for every new table. Fivetran makes it easy to load data and also handles auto schema changes. But again, it’s expensive.Hence I am at cross roads.",Bolt0029,2025-07-31 13:10:38,2,dataengineering,t1_n64noei,True,
n666tam,"So, it is a migration, not building from scratch. I would go with other comment bellow, start migrating what is query ready to redshift and let users query there.As far as it works, identify used tables in SAP and start to write them on S3, and later make it the intermediate path between sap and redshift. Do it with POCs then check consistency, performance, cost, and iterate.",Vreichvras,2025-07-31 14:31:48,2,dataengineering,t1_n65qsg3,False,
n5rtbaa,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-29 11:05:08,1,dataengineering,t3_1mc8gpz,False,moderator
n5uu14f,Obligatory: [https://martinfowler.com/bliki/TwoHardThings.html](https://martinfowler.com/bliki/TwoHardThings.html),dbrownems,2025-07-29 20:14:39,7,dataengineering,t3_1mc8gpz,False,
n5xsizd,"Very general structure I usually follow:1. Pattern: `[qualifier1]..._[qualifierN]_[plural noun of what a row represents]`2. Lower case and words separated by underscores, it is the most compatible with SQL standards.3. Common English language pre-noun qualifier ordering: 1. Qualifiers are appended to the left, so they read from precise to general (or in the order of processing). 2. Adjectives ordering should follow the English grammar rule. https://en.wikipedia.org/wiki/Adjective#Order- Good: `monthly_amazon_payments`: - a row represents monthly aggregated properties of Amazon payments: revenue sum, unique customers count etc. - processing order: source `payments` table > Amazon only filtering > monthly aggregation- Bad: `monthly_payments_amazon` (a row does not represent an Amazon)If you need to group tables together so it is more readable for a specific use case, or you need to restrict access, put them in the same schema/database. For example, all the gold tables for the financial analysts go in the schema `finance`.This is not a dogma, maybe your context needs to have a specific strongly discriminating qualifier first which could go against the rule 3. It depends on the use case, give us some anonymized examples.",sib_n,2025-07-30 07:11:41,3,dataengineering,t3_1mc8gpz,False,
n5xtmp0,"Using API as an example, my workplace typically uses something like [system].[endpoint]. For example, Salesforce.Account or Salesforce.Product_Order for bronze/silver layers.",leakyfaucet49,2025-07-30 07:22:16,2,dataengineering,t3_1mc8gpz,False,
n66srib,`src_source_subsource__type_or_any_other_information`this was i think recommended by dbt guys and it worked a lot of us.e.g.`src_excel_customers__sales``src_shopify_orders__details`,Significant-Carob897,2025-07-31 16:14:30,2,dataengineering,t3_1mc8gpz,False,
n5woni0,"Just start with the source as the prefix followed by the dataset category such as primary or adhoc. Then slap a name on the data. For primary data coming from operational data stores, it would be the table name. For more adhoc data, it can be the query name analysis purpose. You can further group these by domains like sales, marketing, inventory, etc to help describe the data. Then as you move up from raw to more production deliverables, the naming should start collapsing into something closer to the domain like fact_sales for your Sales domain.Examples* rtmdba01_inventory_primary_productCageories* rtmdba01_inventory_primary_productFlags* adwords_marketing_report_campignNames* googleAnalytics_marketing_adhoc_formSignupsEtc",Tehfamine,2025-07-30 02:08:48,3,dataengineering,t3_1mc8gpz,False,
n5vfaog,Can you give examples of things in the gold layer that are neither facts nor dimensions? That smells like a modelling problem to me. There is nothing else in a dimensional modelling context.,sjcuthbertson,2025-07-29 21:56:41,-1,dataengineering,t3_1mc8gpz,False,
n640m70,"""There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors.""",siddartha08,2025-07-31 04:49:32,3,dataengineering,t1_n5uu14f,False,
n5uvclp,Haha true! So how do you deal with this?,Quantumizera,2025-07-29 20:20:48,1,dataengineering,t1_n5uu14f,True,
n5xuxlg,"Generally good recommendations, but instead of \`monthly\_amazon\_payments\`, I'd go with \`amazon\_payments\_monthly\`. It sounds more hierarchical, and makes it easier to find tables. So \[source\]\_\[dataset\]\_\[detail/aggregation\]",PolicyDecent,2025-07-30 07:34:53,2,dataengineering,t1_n5xsizd,False,
n6i0kor,Are they expecting you to setup Kafka and Postgres on this take home?,khaili109,2025-08-02 09:25:51,14,dataengineering,t3_1mfjof8,False,
n6kl4vw,Always has been,siddartha08,2025-08-02 19:03:36,5,dataengineering,t3_1mfjof8,False,
n6qgkhd,"There's substantial crossover, yes. Data engineering often includes other aspects (SQL, batch processing, specific tooling, designing for analytical processing) that backend distributed systems engineering won't necessarily touch, but all of those are effectively abstractions over the the former.But that's not to say mastering those abstractions aren't important, the same as backend engineering is mastering abstractions over other lower level concepts.",TurbulentSocks,2025-08-03 18:17:10,1,dataengineering,t3_1mfjof8,False,
n6qnl18,No.,TheCamerlengo,2025-08-03 18:53:19,1,dataengineering,t3_1mfjof8,False,
n6i4m00,Can you use other technologies? Apache Flink can do this with ease but it's a real time stream. Definitely will fall under the 4 hours.,Patient_Magazine2444,2025-08-02 10:06:02,1,dataengineering,t3_1mfjof8,False,
n6jlpxa,pubsub gcp is setup ... through docker compose thats about itthe problem is open ended but hard requirement is use gcp pub sub and write to postgres,Willing_Sentence_858,2025-08-02 15:54:08,5,dataengineering,t1_n6i0kor,True,
n6r4amt,do you guys not consider yourself backend engineers because off shelf tooling solves these problems for you?,Willing_Sentence_858,2025-08-03 20:20:36,1,dataengineering,t1_n6qgkhd,True,
n6kri8y,don't think so,Willing_Sentence_858,2025-08-02 19:39:14,1,dataengineering,t1_n6i4m00,True,
n6k35qm,I don’t know gcp as much as I’m an AWS guy but can’t you do something like pubsub-> Google cloud function -> Postgres. And have the function do a INSERT ON CONFLICT (upsert) as well as contain business logic and rules on the data,benwithvees,2025-08-02 17:26:45,2,dataengineering,t1_n6jlpxa,False,
n6rdfwh,"I've done the same job with a variety of titles (ironically never actually ""Backend Engineer""). What I use if asked is what most usefully communicates what I do.",TurbulentSocks,2025-08-03 21:06:35,1,dataengineering,t1_n6r4amt,False,
n5ule1r,No one really knows the future and every career carries risks. So you have to make a decision and go with that.,nonamenomonet,2025-07-29 19:33:33,7,dataengineering,t3_1mckr0s,False,
n5unyyv,"If you like both, stick with full stack for now.Software engineers are always needed. You can build the actual product, which keeps the company running. Data engineers are super useful but usually come in later, when there’s enough data to justify the role. Smaller companies might not even have one.Also, as a dev you can always move into data later. Going the other way is harder.That said, if the data role is solid (e.g. real PySpark work, solid infra, not just moving CSVs to S3), and you want to be in that space long term, it’s not a bad move.But full stack gives you more flexibility and job security early on. Just my two cents.PS: I'm a data engineer, so no hate",Ahmouu,2025-07-29 19:45:55,8,dataengineering,t3_1mckr0s,False,
n5umcey,"Nothing is safe, go with where you excel most.",ProfessorNoPuede,2025-07-29 19:38:09,2,dataengineering,t3_1mckr0s,False,
n5wgrz0,"+1 to this. BE opens up a wider range of jobs (which seems to be a factor towards safety)PS: I am also a DE, so no hate.",joseph_machado,2025-07-30 01:22:57,1,dataengineering,t1_n5unyyv,False,
n5x6ff0,I agree with this take. I’m at a smaller ~40 person startup and I was their first data engineer hire. But they have 5 other software engineers building the actual product in Scala/Java.,I_Blame_DevOps,2025-07-30 04:04:12,1,dataengineering,t1_n5unyyv,False,
n5xei2y,"Thanks for the response, I have two queries1) is the work of a DE repetitive/monotonous compared to a full stack, or do you find each day different ( I know it varies from one team to another, but just in general am asking )2) One main fear in full stack is the impact AI has on the work ( AI may be a hype term now ), but I feel demand may reduce due to this, but DE is needed for AI to grow and may see increase in demandWhat's your take on this",Thin-Pomegranate-98,2025-07-30 05:06:01,1,dataengineering,t1_n5unyyv,True,
n5ws68d,Excel Pun intended?,boss-mannn,2025-07-30 02:29:56,1,dataengineering,t1_n5umcey,False,
n5xo5yt,"DE isn’t boring if you’re actually building stuff. You’re modeling warehouses, designing schemas, choosing tools, fixing broken data, dealing with scale, permissions, costs, putting out fires and so much more. There are tons of tools and approaches out there, and every company does things a bit differently, so you’re always figuring things out. It only gets repetitive if the setup is already done and you’re just maintaining pipelines (that's the only thing that might get boring after a certain time)DE is important for AI, sure, but unless the company is seriously building AI products, that won’t matter much. Most just want dashboards or plug GPT into a chatbot. AI is nowhere close to replacing good engineers. It can speed up parts of the work, but it’s not making the hard decisions or owning the system when things break. So don’t pick based on hype. Pick based on what kind of work you actually want to do.",Ahmouu,2025-07-30 06:31:02,2,dataengineering,t1_n5xei2y,False,
n5xoalx,"I think the potential impact of AI on DE and backend software engineering is similar, well-defined testable repetitive stuff may get automated. I think some DE may be more exposed to having to communicate with business and stakeholders. Human communication should be harder to replace with AI than a well-defined testable coding task. So, I would look for positions that have this component if possible.",sib_n,2025-07-30 06:32:14,2,dataengineering,t1_n5xei2y,False,
n66jip2,THat is a classic. Everyone serious about the data engineering sphere should read it.,Nekobul,2025-07-31 15:31:21,8,dataengineering,t3_1me4ein,False,
n6chhef,I agree !! Its a great book,0sergio-hash,2025-08-01 13:25:33,1,dataengineering,t1_n66jip2,True,
n6kb6m5,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-02 18:08:32,1,dataengineering,t3_1mfx5u8,False,moderator
n5lyo6u,It will only get worst since there are not gatekeepers for AI.,69odysseus,2025-07-28 13:59:26,3,dataengineering,t3_1mbgri9,False,
n5m47s7,123456? That’s amazing I got the same combination on my luggage!,JimmyTango,2025-07-28 14:27:25,2,dataengineering,t3_1mbgri9,False,
n5unaik,"Two men enter, one man leavesHave them interview eachother until one determines the others a nincompoop.",SaintTimothy,2025-07-29 19:42:42,62,dataengineering,t3_1mcl3tn,False,
n5umclp,I would be honest and tell your boss that you are not qualified to properly assess a data engineer.,Ashamed_Wheel6930,2025-07-29 19:38:10,47,dataengineering,t3_1mcl3tn,False,
n5uvb07,"Just do sql FizzBuzz.Start with, can they actually query a table and then move up from there. Don’t overthink it.",pragmatica,2025-07-29 20:20:36,10,dataengineering,t3_1mcl3tn,False,
n5x4p9y,"use llms.  copy paste the text you posted here, in the prompt.  use chatgpt, kimik2, deepseek, qwen, claude, gemini, then  summarize the output, it is a good way to get introduced to new topics. mention your limitations to your boss but be prepared.",oioi_aava,2025-07-30 03:52:03,5,dataengineering,t3_1mcl3tn,False,
n5upeth,I think you can come up with something.  I believe in you dogg,PresentationSome2427,2025-07-29 19:52:46,7,dataengineering,t3_1mcl3tn,False,
n5xv6sn,Ask some easy/medium questions and go by your gut feeling,Kachi68,2025-07-30 07:37:26,2,dataengineering,t3_1mcl3tn,False,
n627pe4,"As multiple pointed out, you can test their SQL skills by having them do complex joins, window functions, filters, etc. Since you know Python you can also test their ability to manipulate data utilizing numpy and pandas.Piggy backing off of others again, you can also ask ChatGPT to create a list of questions about Azure with a list of appropriate answers.",RandomAccount0799,2025-07-30 22:17:09,2,dataengineering,t3_1mcl3tn,False,
n5ulytf,"I don't mean to be patronizing, but why not ask an LLM to generate questions to start things off?",git0ffmylawnm8,2025-07-29 19:36:21,12,dataengineering,t3_1mcl3tn,False,
n5v6omc,"If all the suggestions fail, ask them simple questions. If they come up with overly complicated answers, they’re BSing and don’t know what they’re doing. They’re trying to sound smart.",mycrappycomments,2025-07-29 21:13:48,1,dataengineering,t3_1mcl3tn,False,
n5zpaeo,"for tech assessment i suggest looking into leetcode medium sql or python pandas, if you're familiar with cloud but not azure, maybe ask them technical concepts on the implementation, system design, or services they would use in a specific scenario",hardrock2474,2025-07-30 15:10:55,1,dataengineering,t3_1mcl3tn,False,
n5lb2wt,How do you feel about the SQL graph extension? I.e. https://duckdb.org/community_extensions/extensions/duckpgq.htmlSome more thoughts: One issue are the different and poorly compatible eco systems like RDF Graphs and Property Graphs. https://www.semantic-web-journal.net/content/onegraph-vision-challenges-breaking-graph-model-lock-0Another issue are the schema languages for property graphs https://arxiv.org/abs/1909.04881Another issue is that you imo probably ultimately don’t want to put a graph in a database/lakehouse but generate it based on rules and your data.One more issue is that you might end up wanting to use hypergraphs or something like that. There’s a lot of semi related stuff like http://typedb.com or https://egraphs-good.github.io,Operadic,2025-07-28 11:37:42,4,dataengineering,t3_1mbbnlf,False,
n5ls8z4,"For me the main missing part is a storage standard. Like yes, we can read graph with Kuzu, GraphFrames or DuckDB from tables by creating it manually... But for doing that we need to know all the kinds of relations, etc. I see that GraphAr may really fill the gap. We have already a lot of tools, would be nice to have a way to prepare my graph from big tables on spark with graphframes, do deduplication, projection, etc.; save it to the standradazed format and after that read by in-memory tool like DuckDB or Kuzu. Something like Iceberg that connects different tools by one standard, but for graphs. And yes, GraphAr is about Property Graph, not RDF.",ssinchenko,2025-07-28 13:25:10,2,dataengineering,t1_n5lb2wt,True,
n6deh9q,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-01 16:06:35,1,dataengineering,t3_1mf0ivp,False,moderator
n6eapum,"If I have to choose an orchestrator my first criteria would be the size of it’s community. Despite having a “quite” good documentation it’s community is very small, this would be a big problem while onboarding new engineers in your project in the future.",Busy_Elderberry8650,2025-08-01 18:40:36,10,dataengineering,t3_1mf0ivp,False,
n6do7pa,"Sometimes you have to do the work that's in front of you. The only two metrics that would actually matter are:1) Is it cheaper not doing it in Talend2) Is it faster not doing it in TalendOther considerations - stability, simplicity, scalability If you can articulate them concretely in those terms you might have a chance. Otherwise get Talending and brushing up your CV.",WhoIsJohnSalt,2025-08-01 16:53:28,6,dataengineering,t3_1mf0ivp,False,
n6ef4hz,"I was recently able to move away completely from Talend at my org because of three things:- licenses are expensive- poor git integration (no visibility)- difficult to hire talent, as Talend is much less popular than it used to",OkPaleontologist8088,2025-08-01 19:02:11,4,dataengineering,t3_1mf0ivp,False,
n6fuzcv,"I would sooner cram rusty spoons under my eyes than use talend again. Here is a list- no git integration (cloud sorta does but it sucks so no)- code is compiled, you cant search your 'codebase' when your like 'whats that one job that did the thing'- it's slow. The compiled jobs run fast but the program, UI, everything else is glitchy and slow- support is downright awful. Like multiple weeks to eventually just get told 'can you enter a bug report' (this happened 3 times in 2 years)- credentials can't be easily central managed unless you are on cloud and even then it's extremely hacky to do. Otherwise you have to do a creds file or roll your own solution.- finally it's java but not, it's its own weird fucked special flavor that is just different enough to make you pull your hair out twice a week.I hate talend, and I hate talend cloud that we were promised would fix all the issues and instead just added an additional layer of fucked proprietary complexity. I migrated over 100 workflows to airflow and while it doesn't do raw data transfers nearly as fast it does every other thing a hundred times better.",KeeganDoomFire,2025-08-01 23:34:33,4,dataengineering,t3_1mf0ivp,False,
n6fpvbq,"Something, something it's owned by qlik",bah_nah_nah,2025-08-01 23:05:17,2,dataengineering,t3_1mf0ivp,False,
n6e3pre,"Are you talking about Talend's Stitch as a ETL tool, or something else?",ntdoyfanboy,2025-08-01 18:06:32,1,dataengineering,t3_1mf0ivp,False,
n6im9pr,"If you are doing Redshift then AWS has Glue for ingestion, we implemented glue with a yaml based template, adding a new source required a new template loading to S3. S3 to Redshift was done as external tables. We then used DBT to perform transformations ...",wa-jonk,2025-08-02 12:29:52,1,dataengineering,t3_1mf0ivp,False,
n6fwgyj,"This was the selling point for us to roll airflow on aws. It didn't out of the box do everything we needed but it was python so everything was a Google search away. A year in we have a custom library for all our usual work. A dynamic dag generator to handle 75% of things with 10 lines of yaml and have onboarded 2 other teams, one from Alterix, one from Domo. It's been nice to be able to train people up on it in under a week.",KeeganDoomFire,2025-08-01 23:43:09,2,dataengineering,t1_n6eapum,False,
n6edpp2,That's also something I look for. Especially when you have to start hiring. The last thing you want is to be on an endless search for an atrophied skill.,ccesta,2025-08-01 18:55:16,1,dataengineering,t1_n6eapum,True,
n67nche,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-31 18:35:24,1,dataengineering,t3_1me9knz,False,moderator
n68lzxc,"Are you new to your team? Does your manager know about the skills/experience difference? Assuming yes to those, I’d work with your manager to define a peer/pairing type of mentorship with another member of your team. Better to tackle this head-on, rather than try to vibe code or bluff your way through. Production Infra isn’t something to take lightly.",davrax,2025-07-31 21:21:20,7,dataengineering,t3_1me9knz,False,
n64r0n6,"you could consider dlt library for proper partitioning incremental etc with schema evolution and a few other self healing features.[https://dlthub.com/docs/dlt-ecosystem/destinations/redshift](https://dlthub.com/docs/dlt-ecosystem/destinations/redshift)disclaimer i am one of the dlt cofounders (formerly DE, dlt is the tool i wish i had)if you wanna use cloud functions instead of glue, one of our users offers this template [https://dlthub.com/blog/dlt-aws-taktile-blog](https://dlthub.com/blog/dlt-aws-taktile-blog)if you go for athena we also support iceberg on it (which would help with your scale). We have deployment helpers for both GH actions and airflow.as for your overall architecture yeah it sounds like moving from ""first setup, quick wins"" to ""scale""",Thinker_Assignment,2025-07-31 08:46:06,2,dataengineering,t3_1mdw8ef,False,
n64thnx,"It sounds ok. Nothing complex here.And it's surprising to see Airbyte not support S3, Redshift. I have just googled and it does? (though to S3 then COPY).",robberviet,2025-07-31 09:09:33,2,dataengineering,t3_1mdw8ef,False,
n650g5u,"Seems like a good plan. Seems over engineered depending on the size of data.The only part where you might want to adjust is “replace DBT with spark for more flexibility”. What do you mean by this ? Spark is a supported engine by DBT. The two tools does 2 different things very well.If you want to go away from sql transformations that may be your answer. But note that it’s kinda nice to have a language that anyone can easily understand and transform data with rather than a specific one. Even more if you are a very small team of 1.Also this is nice , but doesn’t seem manageable by only you. It’s a lot. Also I think you need some really good argument to change something that is currently working (redshift) with something that slower and would do the same thing. Yes, cost can be an issue, but it seems like it need to be in your case for this rearchitecture to make sense.",Commercial_Dig2401,2025-07-31 10:13:29,2,dataengineering,t3_1mdw8ef,False,
n67sqhu,"The list of improvements which can be made is endless. But that is true for any team.The big flag for me here is ""with DBT jobs triggered by GitHub Actions""Github actions isn't a good scheduler for ETL jobs. There was a thread about it sometime back https://www.reddit.com/r/dataengineering/comments/1kmmv20/airflow_vs_github_action_for_orchestration/The other elements I didn't see here are 1) SLA and data quality monitoring and 2) data catalog of some kind. Just a autogenerated wiki page is better than not having one.",vish4life,2025-07-31 19:00:58,2,dataengineering,t3_1mdw8ef,False,
n64vld9,How much data you have to process daily?,Nekobul,2025-07-31 09:29:38,1,dataengineering,t3_1mdw8ef,False,
n65oiam,Why dont you use s3 as datalake and load it to redshift. i'm using this setup,oishicheese,2025-07-31 12:58:00,1,dataengineering,t3_1mdw8ef,False,
n6ont2f,When querying using Athena - am I right in thinking it doesn’t have any way to show results in memory ? Always has to write results to files in s3?,Maximum_Trainer9781,2025-08-03 12:33:13,1,dataengineering,t3_1mdw8ef,False,
n64sukc,"I will look into DLT thanks.Yes indeed Redshift is easy to deploy but it's overkill for our data volume and usage, while costing a lot on the bill. On the other hand Athena is cheaper but many say performance is not good enough for user-facing application. BigQuery was such a good product but I feel like Athena doesn't reach the same expectations while being more expensive.",Adrien0623,2025-07-31 09:03:22,2,dataengineering,t1_n64r0n6,True,
n64tso0,It support those destinations but doesn't support partitioning on them. It's such a an important feature they are lacking. I've found GitHub issues asking for it since many years without progress.,Adrien0623,2025-07-31 09:12:29,5,dataengineering,t1_n64thnx,True,
n653j0y,"By replacing DBT by spark I meant getting rid of DBT and write spark jobs to make transformation and why not imports so I can partition tables (Airbyte doesn't do it on S3 or redshift).Nobody is touching DBT expect me and another engineer. When people need to have a dashboard or something we deal with writing the model for it. As a data engineer I consider it's part of my job.My concerns about DBT is that it's a simple product but not sealable in the future. Especially doing unit tests is very limited as some column types are not supported making testing some models impossible. With Spark jobs I can fully test queries making sure to handle edge cases properly and it's easier to scale jobs when data volume will grow, with DBT running on GitHub actions runners we are limited in performance and from my point of view it's not a clean way to schedule jobs: no clear monitoring, retry policies etc. like with Airflow for example",Adrien0623,2025-07-31 10:39:17,1,dataengineering,t1_n650g5u,True,
n62bpgg,"I help run the OpenMetadata community and help people that are getting started with documentation daily, now that you've done the basics, I'd say keep going with documentation work that is going to help your regular job as a data analyst as well...Lineage. Documenting where a table and/or column came from and what services use it is going to really useful in helping you build out new data assets and discover or refine kpi's. Once lineage is being tracked I'd dive into... Usage. What tables do you and other analysts actually query? Are there copies of tables that aren't getting used or empty tables that could be marked for deletion. I've seen a lot of people save a lot of money and time here. You don't want to spend your time meticulously documenting 100% of your tables if 5% are being used. Can you classify tables in different tiers and make sure top tier tables have...Tests. It's important that a tables' documentation matches what tests are producing. Are your columns staying consistent, is your data fresh, things like that. [OpenMetadata](https://docs.open-metadata.org/latest/connectors/database/bigquery) is an open-source tool that automates all these for bq ;)",NA0026,2025-07-30 22:38:23,9,dataengineering,t3_1mdc8q8,False,
n60rd56,"What drives me crazy about this stuff like this is that everything we learned about this in school has basically gone out the window by now. Sacrifice organization for speed, which eventually works you into a corner but that's tomorrow's problem.",SoggyGrayDuck,2025-07-30 18:06:43,16,dataengineering,t3_1mdc8q8,False,
n60fxvs,"Did you make any changes from the default variables? If so, document why. Backup and restore procedures, how often is the database backup, what’s the expected recovery time. User credentials and policy and where to find them. You will want to store it somewhere secure like Secret Manager",Phenergan_boy,2025-07-30 17:15:41,2,dataengineering,t3_1mdc8q8,False,
n60trwa,"You can add table or column descriptions, describing what the tables contain. If possible this should be done with the sipport of AI, otherwise it is likely too much work.You can use a tool to draw and document data models, there are tools that can analyze it for you like sqldbm.Somehow the documentation should be made accessible so others could benefit. Eg in a data dictionary.It is important that the documentation is up to date, that means it has to become a part of your dev and change process.",Cpt_Jauche,2025-07-30 18:17:52,1,dataengineering,t3_1mdc8q8,False,
n63jz37,"I am like most of us here don't know what it looks like. When in doubt I usually comeback and check Gitlab Data team guide: [https://handbook.gitlab.com/handbook/enterprise-data/data-governance/](https://handbook.gitlab.com/handbook/enterprise-data/data-governance/)To see how they do it. Not what you expect to see, as a finished catalogs/documents (they use Atlan, it's internal, and I haven't found a screenshot/sample how it looks like yet).",robberviet,2025-07-31 02:52:59,1,dataengineering,t3_1mdc8q8,False,
n64q20n,Use dbt. Docs are built in and amazing,Life_Conversation_11,2025-07-31 08:36:57,1,dataengineering,t3_1mdc8q8,False,
n66ilwh,Use dbt. Then use an ai agent to add documentation.Rule that still works for me: keep it close to the code.,Significant-Carob897,2025-07-31 15:27:06,1,dataengineering,t3_1mdc8q8,False,
n622lg2,"Genuinely asking, but can AI even accurately describe tables and columns? That seems like it's too dependent on good documentation to begin with.Unless you mean column types and whatnot, at which point BQ already has the information schema.",paxmlank,2025-07-30 21:50:44,1,dataengineering,t1_n60trwa,False,
n63sid1,"Nice end to end walkthrough! RE: DirectQuery (in part 11), DirectLake is also an optionConsider cross-posting to r/MicrosoftFabric :)BTW, the link seems to have a space in it, it should be [https://www.linkedin.com/posts/zeeshankhant\_dbt-fabric-activity-7356239669702864897-K2W0](https://www.linkedin.com/posts/zeeshankhant_dbt-fabric-activity-7356239669702864897-K2W0)",warehouse_goes_vroom,2025-07-31 03:49:44,3,dataengineering,t3_1md2n3i,False,
n63t6kx,Thank you. I tried the directlake too but went with directquery for the Walkthrough.,Ze3shankhan,2025-07-31 03:54:25,1,dataengineering,t1_n63sid1,True,
n5xy762,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-30 08:06:30,1,dataengineering,t3_1md0rb4,False,moderator
n5y3qez,"Databricks is mostly spark underneath, some would say it's the commercial version of spark but I think there's more to it. So you could prioritize learning spark's python API Pyspark, plenty of tutorials on YouTube, then it would make sense to learn Databricks. Hadoop might only be necessary if you end up working in an onprem legacy system, maybe in banks for example, and you'd really only need to learn how to use hdfs. Although I'd still learn about Hadoop's history as it would help you make sense of where spark comes from.I'd also learn the basics of how AWS works (or its competitors), services likes S3, EC2, IAM. You'll most likely need to interact with one of these when setting up Databricks or working on Databricks.",sholopolis,2025-07-30 09:00:30,9,dataengineering,t3_1md0rb4,False,
n5yab2x,"You can find PySpark, Databricks, Spark Streaming all beginner friendly from this YouTube channel [Ease With Data Playlists](https://www.youtube.com/@easewithdata/playlists)",Complex_Revolution67,2025-07-30 10:03:13,3,dataengineering,t3_1md0rb4,False,
n6aec29,If I were I would do: 1. Fundamentals of PySpark2. Understand how AWS/Snowflake/Databricks differ 3. Pick the solution you can afford to test out 4. Build a complete end-to-end workflow on one and try to replicate it on another (assuming you have time & funds for it) 5. Host a living example on any one of the platforms I did this and it’s helped me stayed employed for the last 6 years,Pretend-Relative3631,2025-08-01 03:32:54,2,dataengineering,t3_1md0rb4,False,
n64rcdt,"Learn Spark and learn SQL, I wouldn’t prioritise Hadoop skills at all, more of a legacy platform, lots of new things built on top of it but you shouldn’t need Hadoop knowledge unless you use it in your job.",Mclovine_aus,2025-07-31 08:49:08,1,dataengineering,t3_1md0rb4,False,
n5y3tca,"thank you so much, this information is very helpful",Low-Yak2608,2025-07-30 09:01:19,2,dataengineering,t1_n5y3qez,True,
n6bae5s,Thanks!,Low-Yak2608,2025-08-01 07:59:18,1,dataengineering,t1_n6aec29,True,
n6baezy,>Thanks!You're welcome!,exclaim_bot,2025-08-01 07:59:31,1,dataengineering,t1_n6bae5s,False,
n5x5iom,"Without saying too much, I had a similar technical background and joined a tech ""consultancy"" but it was essentially a bootcamp grad mill where they ship you off as the lowest bidder. I'm personally skeptical based on what you've shared.I would go with the bank offer. If they're doing ML, then they have a need for proper clean data. You could become that go to person by building your niche. If the money is enough, you could consider moving closer to work in order to reduce commute time.Every single company has their peculiar tech stack so don't worry about learning the ""right thing"". Get in the job market, build fundamental skills and determine what you like and dislike and evaluate from there.",adiyo011,2025-07-30 03:57:44,6,dataengineering,t3_1mcrhcq,False,
n5xg656,"The consultancy can be good for you or really really bad. In general they allow you to learn a lot as you possibly switch projects often, however from what you're saying this is more one of those firms that employs people at lower cost and trains them just enough for them not be sent back.The bank is average and will remain average.If possible I wouldn't focus too much on being fully remote at the start of one's career because not all firms are good/equipped to teach you properly remotely, so you might grow slowly.",dorianganessa,2025-07-30 05:20:01,1,dataengineering,t3_1mcrhcq,False,
n5xpd7s,"Honestly, maybe it’s just time talking, but working for banks (especially in Europe) is usually a nightmare. Everyone I know who’s worked at one either left quickly or is trying to.Keep in mind you're not marrying the company lol, so think about which offer actually helps you level up and stay close to what you enjoy. The consultancy one sounds more aligned with your long-term goals, especially since you’re into data engineering and architecture. Even if the pay is lower, you’ll probably learn more relevant stuff and grow faster. That kind of experience compounds.The bank might look good on paper, but if the role leans more toward ML and that’s not your thing, you’ll just end up bored and trying to pivot again later. And that commute sounds miserable.Go with the offer that builds skills you actually want to use in your next job. You’re early in your career, optimize for learning, not comfort.",Ahmouu,2025-07-30 06:42:10,1,dataengineering,t3_1mcrhcq,False,
n642bnp,"My partner has been working for banks for a long time. It pays well. On the other hand I have friends who worked for companies and felt miserable because of the long hours and poor pay. If I were you, I would take the in-person job. There is nothing that gives you the in person experience. You will not only learn the technical skills, but also the non-technical aspects, which is critical for overall career growth. You are young so why not bite down and take the in person job. After a few moths or years you can look for another job if the commute turns out to be too much. - ex data developer/ data architect.",DizzySuccotash1613,2025-07-31 05:02:57,1,dataengineering,t3_1mcrhcq,False,
n642g6m,"My partner has been working for banks for a long time. It pays well. On the other hand I have friends who worked for companies and felt miserable because of the long hours and poor pay. If I were you, I would take the in-person job. There is nothing that gives you the in person experience. You will not only learn the technical skills, but also the non-technical aspects, which is critical for overall career growth. You are young so why not bite down and take the in person job. After a few moths or years you can look for another job if the commute turns out to be too much. - ex data developer/ data architec",DizzySuccotash1613,2025-07-31 05:03:58,1,dataengineering,t3_1mcrhcq,False,
n684zhy,"Progression doesn’t exist, they’re both data engineering, everything is shifting towards python but scala is improtant if you want good foundations, but it won’t really be anything you can’t teach yourself. I would go with the bank. I work for whoever pays me more when I can’t choose. In the end of the day you are selling your ability to learn",Certain_Leader9946,2025-07-31 20:00:24,1,dataengineering,t3_1mcrhcq,False,
n5w4mg3,"If i'm not intruding, can you let me know how did you land interviews for those roles?I would love to gain some insight as to what you had in your resume that you think made you stand out in the application process?",deathstroke3718,2025-07-30 00:13:03,1,dataengineering,t3_1mcrhcq,False,
n5w9alj,WFH wins for me! Consider travel time as work hours and calculate potential earnings. More pay is a close second. What do you think?,SpecialistDaikon8866,2025-07-30 00:40:05,0,dataengineering,t3_1mcrhcq,False,
n5y9ef9,"From what I’ve heard, there’s a two-week in-person training period mainly focused on Scala and Spark. After that, you’re assigned to a project. So if you want to learn other technologies, like Airflow, for example, I’m not sure how that would work in a fully remote environment (I guess linking you to a course). From what I understand, the consultancy is very technically focused and puts a strong emphasis on training, and they’ve been running this fully remote system for a while now, though I’m not sure how well it’s been working. In any case, if I were to join that company, my plan would be to study on my own in addition to whatever training the company provides.",Existing-Mousse3509,2025-07-30 09:54:59,1,dataengineering,t1_n5xg656,True,
n5yc3vm,"From what I’ve heard, and from people who work there, employees at the bank tend to feel comfortable; in fact, many of them stay until retirement (at least for this bank), partly because the conditions are quite good. Aside from that, I agree with most of what’s been said. If I do join the bank, it would mainly be to see if I like it, and if not, maybe after a year I’ll move on and focus 100% on Data Engineering.The only thing that gives me second thoughts is that the offer from the consultancy seems very tailored to recent graduates and designed to train them specifically for Data Engineering, which I think is really valuable. I’m just unsure whether, a year from now, I’d still be able to get an opportunity like that if I pass it up now.",Existing-Mousse3509,2025-07-30 10:19:15,1,dataengineering,t1_n5xpd7s,True,
n5v6d4h,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-29 21:12:15,1,dataengineering,t3_1mcnpnr,False,moderator
n5vge5x,"I’ve been on a very similar path, so let me share what I wish I’d done differently.Early on, I spent a lot of time on PySpark and Pandas. They’re powerful tools, but for most of my early projects, SQL could have solved 90% of my problems faster and more cleanly. SQL is easier to debug, easier to optimize, and much more universal across platforms. If I could go back, I’d master SQL-based transformation first before diving deep into dataframe libraries.That’s why, instead of jumping straight into Docker/Airflow, I’d start with a SQL-centric transformation tool like dbt (or Bruin, which also lets you run Python and handle ingestion). This will teach you the fundamentals of data modeling and pipeline design without the operational complexity of containers and schedulers. Since you already use Tableau, learning the “one step before the dashboard” will make the whole puzzle click.Another big lesson: don’t get lost in technical rabbit holes. The fastest way to grow is to chase the highest-impact business problems, things that save your team time, increase accuracy, or unlock new capabilities. If you focus there, you’ll naturally pick up the right technical skills along the way.Also, don’t work in isolation. Get your code reviewed, and review others’ work. You’ll learn more from those reviews than from most courses.If I were mapping a path for you, it’d be:1. Master SQL + data modeling (dbt/Bruin/SQLMesh)2. Add Python tasks in the pipeline only when needed3. Develop a tool in Streamlit and deploy it for the use of business team4. Develop an ML model, and deploy it.You’ll hit Docker and Airflow eventually, but starting with modeling skills will make everything else much easier.",PolicyDecent,2025-07-29 22:02:20,5,dataengineering,t3_1mcnpnr,False,
n5w9d60,Start learning and using Git for version control which is a Must Have! Managing your own Airflow and setting it up can be quite a lot of work especially keeping up with dependencies. If you have access to a cloud version of hosted Airflow might be a bit easier to get a handle on. Also DBT Core is very good to learn and tons of docs on getting up and running quick which saves you from stored procedure hell.,Trigsc,2025-07-30 00:40:30,1,dataengineering,t3_1mcnpnr,False,
n5xeupj,"I run this website for data engineering roadmaps, the modern data stack one could probably work for you: https://dataskew.io/There's also projects you can build to test your skills. Next will come interview prep and AI grading",dorianganessa,2025-07-30 05:08:51,1,dataengineering,t3_1mcnpnr,False,
n5wh7fk,>get your code reviewedDamn I wish there was another coder at my org,qc1324,2025-07-30 01:25:29,2,dataengineering,t1_n5vge5x,False,
n600hyr,I am new to data engineering and I always hear the word data modelling and want to understand what it really means?,Puzzleheaded_Gur4818,2025-07-30 16:04:06,1,dataengineering,t1_n5vge5x,False,
n5xu8pc,"I tried to keep the post short, but can add more details about it :) Use Reddit, Stackoverflow, Slack, LLMs for that. All the internet is yours. There are thousands of people happy to help. Don't be shy, just explain your situation, and your solution, and ask how that implementation could be better.",PolicyDecent,2025-07-30 07:28:09,1,dataengineering,t1_n5wh7fk,False,
n64ptip,"Data modeling is about organizing data in a way that makes it easy to find, understand, and use, whether that’s in BI tools or for analysts and scientists. A well modeled warehouse means people can quickly locate the right dataset and get what they need without searching for hours or joining dozens of tables.",PolicyDecent,2025-07-31 08:34:41,2,dataengineering,t1_n600hyr,False,
n5y2sub,Uploading proprietary code that belongs to the company to the internet ... yikes.,Budget-Minimum6040,2025-07-30 08:51:32,1,dataengineering,t1_n5xu8pc,False,
n5y4qr2,"Man, you don't have to share all your code. You can create a minimal replica of the code and ask for advice. Don't you ask any questions to Stackoverflow?",PolicyDecent,2025-07-30 09:10:24,1,dataengineering,t1_n5y2sub,False,
n6lakjz,If any business is booming I expect the Law to make sense at some point. I'm not sure about the role you have mentioned but the idea sounds valid enough for a pay increase. There are reasons to provide situations like you have mentioned but the scope or lens is critical and bugging me.,Ambitious_Lion7941,2025-08-02 21:24:16,1,dataengineering,t3_1mg0d65,False,
n6llspz,"I’m admittedly more familiar with batch-based processing as that’s how my shop rolls, but I think the use of Pulsar indicates an event-based architecture for a services/integration layer. If that’s the case, there’s something missing between the REST API and Pulsar to periodically poll the API and produce topics for Pulsar to ingest (that may be in the microservices). However, from both a compliance and support perspective, it’s good practice to retain a “raw” copy of the data on ingestion so you have a recovery/fallback point that can also be used for audit and lineage purposes, especially if your source doesn’t retain data itself. I’m a bit unclear on how your PM role fits in the mix and where your engineers are, but speaking as someone who has platform strategy responsibilities, I would recommend focusing on confirming the required/desired business and tech capabilities, then working with your engineering leads to determine the right tooling to fit and the appropriate design. Good luck!",Nightwyrm,2025-08-02 22:28:33,1,dataengineering,t3_1mg0d65,False,
n6lcbs5,"true , my main questions are like from where to where does data traverse? this role they said its for ingesting data now one question i have is does it mean i will only own from taking from sources to storing data? or is it like i also own data transformation as well?other questions on scope that are confusing me are like1. do we use persistent storage/NoSQL db prior to sending to pulsar in order to ensure no data loss as this is for compliance,, cant risk losing data2. how should i even think about system like i am unsure about it, and i did read DDIA but whats bugging me is implementng them in real time ingestion system like from one stage to other",Just_A_Stray_Dog,2025-08-02 21:34:14,1,dataengineering,t1_n6lakjz,True,
n6lmvcd,"true its large scale event based architectureYou bring up some really interesting points1. the missing thing between REST API and Pulsar, what is this and why is it needed?2. to retain raw copy of data, at what stge do you think it should be present? is it immediately after we ingest? in that case is it like REST API --> Somehting liek S3 storage for raw data ---> pulsar reads from this db? if so how would we handle decoupling of systems like in case tomorrow we got to replace S3 with somting else there has to be soemthing in between again right?3. i realise recruiter telling me theres also an aerospike cache , which i am not sure where its used, considerign its cache, so for retrieval so it means once pulsar writes to ceph at that stage?What do you think about it?on your point on how this PM thing fits, i believe they want someone who is good at PMing(priroitisation) and technical aspect so that priroitisation or other activities are done from technical lens",Just_A_Stray_Dog,2025-08-02 22:34:57,1,dataengineering,t1_n6llspz,True,
n6lxih5,"A REST API is a pull-based request/response interface (kinda like using HTTP to query a database). My understanding is that Pulsar is a push-based publish-subscribe model (like if you subscribed to someone’s Substack email newsletter). You therefore need a translation interface to perform the pull from the API and then publish it in the appropriate stream or message queue format to Pulsar. You may need something similar between Pulsar and Ceph as well; I’m not familiar enough with Pulsar to say. Unless your API fetcher has the ability to also write to object storage, your first point of storage appears to be the post-Pulsar Ceph so would be there. Ideally you want to create that archive copy as close to the source as possible, so it’s determining where the storage opportunities are in your flow. I’ve not heard of Aerospike before but a quick skim doesn’t look like it’s for this requirement. I asked about the role as it sounded like you were scoped to design the solution, which engineers tend to get a bit twitchy about PMs/POs doing :grinning_face_with_sweat:. But understanding how it works so you can help steer/prioritise is a whole ‘nother thing of course. SInterestingly though, my place has this type of architecture managed by an “integration services” dept and my data engineering crew are downstream from that… unsure if that’s common across companies.",Nightwyrm,2025-08-02 23:37:39,1,dataengineering,t1_n6lmvcd,False,
n6lxzm6,"interesting , what does this integration services dept do from end to end can you share ?",Just_A_Stray_Dog,2025-08-02 23:40:28,1,dataengineering,t1_n6lxih5,True,
n6cml2s,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-01 13:52:15,1,dataengineering,t3_1mex2l1,False,moderator
n6f41wo,"Started this course about a month ago. If you are into computer engineering, dont waste your time and money with it. I was enrolled for a week then realized that i am just watching super long and boring videos instead of building something interesting. Check out the datatalks course instead. Much better. But for the orchestration part, find the older version of the course for Airflow.",Harsnyi,2025-08-01 21:06:04,5,dataengineering,t3_1mex2l1,False,
n6h0jya,"Thanks, any other resource to learn by doing things and not watching videos?",No-Bid-1006,2025-08-02 03:58:35,1,dataengineering,t1_n6f41wo,False,
n6aybkw,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-01 06:08:59,1,dataengineering,t3_1meosmx,False,moderator
n6buaoo,Postgres not terribly different flavor compared to the other flavors of SQL. You got this! Don’t give up!!!,CireGetHigher,2025-08-01 10:59:45,3,dataengineering,t3_1meosmx,False,
n6qgegf,"Postgres generally has pretty good comparability with Oracle SQL. If you use lots of stored procedures, There are some differences in the plsql syntax between Postgres and oracle, but much easier than migrating to say MySQL or another less standard-complaint databasehttps://wiki.postgresql.org/wiki/Oracle_to_Postgres_Conversion",dangerbird2,2025-08-03 18:16:18,1,dataengineering,t3_1meosmx,False,
n6cct18,Ok bro thanks,justlikethatq,2025-08-01 13:00:03,1,dataengineering,t1_n6buaoo,True,
n6ourdc,Ok sure joined,justlikethatq,2025-08-03 13:18:02,1,dataengineering,t1_n6o7vee,True,
n6bgqs6,"Nice! Will check it out. May well have a use case.I built a much simpler, more limited little Rust CLI that does row-wise data cleansing and validation for CSV files using a fixed-size memory buffer a few years ago: https://github.com/ambidextrous/csv_log_cleaner Your tool seems to have a lot more bells and whistles though. Main question: can it go out of memory on larger than memory files?",ambidextrousalpaca,2025-08-01 08:59:28,1,dataengineering,t3_1me3ec9,False,
n6cy8z7,"Looks really cool!For a long time i’d used deequ. It was pretty great for spark workloads in pipeline etc.Not a huge fan of GX (although its docs build is quite neat tbf).Soda always struck me as a bit OTT. Lots defined by YAML etc. and tbh, the concept that business users want to actually sit down and write their own DQ rules, im yet to really see play out, and that comes even with a stint of working as an engineer in a Data Mgmt department for a large bank where this was a main remit)All in all, ive mostly settled on using “cuallee”. Its meant to be a pure python franework that mimics deequ, and it works on most dataframe libs tbf (snowpark, duckdb, polars, daft, pandas, etc.)Use it as validation in nearly any project / pipeline i build now",Some_Grapefruit_2120,2025-08-01 14:49:20,1,dataengineering,t3_1me3ec9,False,
n63qoio,"Database per customer if it's storing customer data, IMO. Can't speak to HIPAA. Do your own analysis, not intended as a substitute for your own engineering judgment. But consider: customer manages to truly screw up their data. They want you to restore them to the last backup.If you do the RLS approach... Well, now you get to try to restore /part/ of every table.If you do single tenant / database per customer, you restore that databases' backup and are done.Also consider that you'll have to scale out eventually either way pretty much. Again, easy if it's database per.Customer demands database be on premise /encrypted with their key / whatever... Again, good luck if it's all one database.",warehouse_goes_vroom,2025-07-31 03:37:00,12,dataengineering,t3_1mdqkew,False,
n66245z,"For strict HIPAA compliance, a single-tenant model gives you true data isolation and simpler audit trails, at the cost of more operational overhead. A multi-tenant setup with Postgres RLS can work, but it increases the risk surface. Every bug or misconfiguration in your RLS policies could expose data across tenants. So for healthcare, I’d lean single-tenant unless you have a mature security team.",GreenMobile6323,2025-07-31 14:08:59,3,dataengineering,t3_1mdqkew,False,
n63t5et,PostgreSQL supports multiple schemas per database.Keep all your code in public schema and one schema per customer That is most efficient and optimal way of doing along with being secure.,Informal_Pace9237,2025-07-31 03:54:11,3,dataengineering,t3_1mdqkew,False,
n63mbi0,"I haven’t used it in anger, but Nile Postgres has tenancy built-in as a first principle",kabooozie,2025-07-31 03:07:55,1,dataengineering,t3_1mdqkew,False,
n6f0ecc,"Single tenant.In a multi tenant scenario all it takes is one slip up with RLS and suddenly your clients can see each other's data and your app's reputation is toast.One thing to consider about single tenant is scale, in terms of max dbs per server. You will probably need to look at sharding across multiple servers after a certain point. Not an issue to begin with but better you plan for it now rather than later.",name_suppression_21,2025-08-01 20:47:51,1,dataengineering,t3_1mdqkew,False,
n64gw0a,"Yeah, dumping all into one SMP database, which will hit a ceiling, is not the way to go. You should be factoring in the costs of these databases as part of the billing anyways. There is also cases where legally, tenants will not want to be sharing the same network as competitors etc too. So, consider the fact you should be isolating each DB on it's own network to offer even more security / reducing blast radius.",Tehfamine,2025-07-31 07:10:03,3,dataengineering,t1_n63qoio,False,
n63r4ic,"If that becomes a cost issue, consider something like Azure SQL DB's elastic pools, that allows them to share processes while still being separate databases from the engine's perspective. Then you're relying on the databases engines' isolation, rather than having to do it in software, as long as you don't screw up the top level database level permissions.",warehouse_goes_vroom,2025-07-31 03:40:07,1,dataengineering,t1_n63qoio,False,
n68gpg3,"Pipelines and db schema consistency are definitely more complex for single-tenant. So much easier to scale and maintain, though. Maybe passing as much of the db hosting costs along to the customer is possible, too.I've done both mutli and single tenant systems, albeit not for health care. We did have to accommodate payment data and PCI, which is similar, though.",sighmon606,2025-07-31 20:55:30,2,dataengineering,t1_n66245z,False,
n63svy3,"why out of anger haha, will check them out thanks",RPSpayments,2025-07-31 03:52:21,2,dataengineering,t1_n63mbi0,True,
n63spo7,"makes sense, and was what i was thinking, thanks! I'm thinking about using AWS right now, they offer a lot of ease with the HIPAA side, but cost may be an issue -> Neon is another interesting option [https://neon.com/use-cases/database-per-tenant](https://neon.com/use-cases/database-per-tenant)",RPSpayments,2025-07-31 03:51:09,1,dataengineering,t1_n63r4ic,True,
n6199dq,"Please provide your definition of ""real-time"". Is the solution required to run on Linux or Windows is also acceptable?",Nekobul,2025-07-30 19:31:23,2,dataengineering,t3_1md7q68,False,
n63yzx7,"I think you have quite a few commercial options to choose from. For OSS solutions, Debezium + Kafka comes to mind, but it'll come with a trade-off of having to maintain everything yourself.Except for BYOC + real-time, what are the other requirements/deal breakers? Are transformations needed within the pipeline, or just simple replication? Is that a new project, or do you have a solution in place? Do you use Snowpipe streaming?",oli_k,2025-07-31 04:36:57,2,dataengineering,t3_1md7q68,False,
n61h12j,https://www.starburst.io/starburst-enterprise/,Operadic,2025-07-30 20:08:25,1,dataengineering,t3_1md7q68,False,
n6dphmo,This account is super fishy. Keeps asking for data ingestion tool suggestions and promoting Estuary at the same time - u/mhausenblas u/sweml u/fhoffa u/vogt4nick u/theporterhaus u/geoheil,Late-Doughnut9949,2025-08-01 16:59:37,1,dataengineering,t3_1md7q68,False,
n5zjxj9,We support [BYOC](https://estuary.dev/deployment-options/) at Estuary! You can bring your own compute in any cloud and we can deploy the data plan on top of it. We can also deploy a data plan in multiple regions for strict compliance requirements. You still get to use the SaaS dashboard though for convenience. Happy to answer any questions about this deployment mode.,dani_estuary,2025-07-30 14:45:03,0,dataengineering,t3_1md7q68,False,
n5zjdap,"disclaimer: I build such a platform called [Bruin](https://getbruin.com) that has a managed control plane + BYOC data plane, so everything runs on your infra. ingest + transform + check + govern. also [open-source](https://github.com/bruin-data/bruin).I think the tricky part of such solutions compared to their batch alternatives is that running streaming ingestion workloads require running long-running processes and connectors on your infra, which in turn requires a singificant engineering investment, monitoring, etc, which makes it harder to offer it as a managed service and a good experience.If you'd like to build these yourself, the most common suggestion would be Debezium via Kafka Connect or via Debezium Server pushing the events to another broker, where you can replicate them in the destination then. We are about to roll out Debezium event collector on ingestr as well, which could help you consume them from the broker and land on Snowflake.Another alternative could be openflow maybe? [https://www.snowflake.com/en/product/features/openflow/](https://www.snowflake.com/en/product/features/openflow/)",karakanb,2025-07-30 14:42:22,-1,dataengineering,t3_1md7q68,False,
n5trqek,"Airflow, dagster.",robberviet,2025-07-29 17:16:51,13,dataengineering,t3_1mcg336,False,
n5u6hhc,"Airflow, Dagster, Prefect, or cron are all self hostable and good enough for production. I would hesitate to use anything other than those. Cron is only kind of a joke. It’s fine if all you’re doing is running python scripts on a schedule and don’t care about the UI, logging, etc. that the others offer.",JaceBearelen,2025-07-29 18:23:48,7,dataengineering,t3_1mcg336,False,
n5tk6v4,[https://dataengineeringcentral.substack.com/p/review-of-data-orchestration-landscape](https://dataengineeringcentral.substack.com/p/review-of-data-orchestration-landscape),averageflatlanders,2025-07-29 16:42:34,2,dataengineering,t3_1mcg336,False,
n5whmhy,"Airflow (Dagster, Prefect), etc are extremely powerful, but also do a lot of things & require devops work, maintanance, monitoring, etc.If you want something lightweight, i'd just stick with idempotent Python + logging + cron (or APscheduler if you have some sort of webserver running). If you are looking for a tool to define more complex pipelines (such as task order, branching, etc) and writing them in Python may be a ""lot of work"" you can look at simpler tools like Hamilton data.What are the features you are looking for in an orchestrator?",joseph_machado,2025-07-30 01:27:56,2,dataengineering,t3_1mcg336,False,
n5tvdt8,Check this list: https://github.com/meirwah/awesome-workflow-engines?tab=readme-ov-file,limartje,2025-07-29 17:33:12,1,dataengineering,t3_1mcg336,False,
n5wrt99,There is Netflix Conductor ( https://github.com/Netflix/conductor ) and it has Python interface and it is open source.,antibody2000,2025-07-30 02:27:44,1,dataengineering,t3_1mcg336,False,
n5xhame,"I had a similar issue with YAML-heavy tools like Argo. Ended up using Data Flow Manager (DFM) - it’s built on NiFi but way easier to manage and deploy flows. Visual UI, no code required, and works great even on small setups. Was a nice balance between control and simplicity.",mikehussay13,2025-07-30 05:29:39,1,dataengineering,t3_1mcg336,False,
n644gwq,"Just use the default `pip install apache-airflow` setup.Sure, it won't run parallel pipelines, but for low volume orchestration, it'll work fine.And it's very low effort.",DoNotFeedTheSnakes,2025-07-31 05:20:39,1,dataengineering,t3_1mcg336,False,
n5xhimh,n8n?,dorianganessa,2025-07-30 05:31:33,0,dataengineering,t3_1mcg336,False,
n61rusn,"Would you recommend DFM for rapid testing & POC? For example, how long to setup a kafka ingest over a number of partitions, including offset management and committing messages?",umognog,2025-07-30 20:58:17,1,dataengineering,t1_n5xhame,False,
n606z3o,"Write some views to transpose the table names and columns to A-Z 0..9 names only, and use the views to export.Maybe make a new schema name called ParquetExport and put the views in that schema.Bonus, you can do simple transformations like putting the datetime as a standard ISO yyyymmddhhmmss string, nulls as empty string, a missing calculated column based on row info, and some extra column names to simplify import management, like ExportedDate column. A Hash md5 of the data row, a hash of the PK columns.",SirGreybush,2025-07-30 16:34:51,4,dataengineering,t3_1md73sq,False,
n5zh9y5,"Special characters in your content shouldn’t be a problem. However in your column names they cannot be used with parquet sink. Not even spaces. If you can define a custom tabular translator to rename the columns explicitly then you don’t need a dataflow. If you are ingesting a large number of tables and cannot establish a translator specific to each table, then you will have to use dataflows or another compute option.",Simple_Journalist_46,2025-07-30 14:32:18,6,dataengineering,t3_1md73sq,False,
n619qt3,Why not use SSIS to generate and upload the Parquet files?,Nekobul,2025-07-30 19:33:44,-1,dataengineering,t3_1md73sq,False,
n609kv3,Thanks . I’ll have a look at this .,Few_Individual_266,2025-07-30 16:47:05,1,dataengineering,t1_n606z3o,True,
n5zld0g,How do I define a custom tabular translator? Just a python script that can convert all the column names? could you pls explain your approach ?thanks,Few_Individual_266,2025-07-30 14:51:49,1,dataengineering,t1_n5zh9y5,True,
n608mkm,"""senior data engineer"": how do I rename a column?",One-Salamander9685,2025-07-30 16:42:36,6,dataengineering,t1_n5zld0g,False,
n60k4yi,"You cited dataflows so I assumed you are using ADF. If so, its a part of the Copy Activity options. Read the docs. If you are using python and no ADF pipelines, my response will not help.",Simple_Journalist_46,2025-07-30 17:34:21,2,dataengineering,t1_n5zld0g,False,
n609aox,lol! I asked on how to do the bulk copy and build the bridge table. Read ?,Few_Individual_266,2025-07-30 16:45:45,2,dataengineering,t1_n608mkm,True,
n65f9up,Dataflow is an option but it’s expensive . Using ADF pipelines but finding an alternative to change column names,Few_Individual_266,2025-07-31 12:03:22,1,dataengineering,t1_n60k4yi,True,
n69clb3,"I use Data Flows in my ADF pipeline to rename columns, haven’t found a workaround with the Copy activity unfortunately. Only other option I found was the Notebooks but that may be costly too.",poptropica4life,2025-07-31 23:42:35,1,dataengineering,t1_n65f9up,False,
n61aby2,"This is a well documented limitation for the likes of Stich and Fivetran. They load the raw data so they dont really see that an update in Table B should trigger an update in Table A because that logic lives inside Salesforce. You can either replicate fully (expensive) or rebuild all logic in dbt (time consuming and annoying). Or, use can use Integrate or another ETL platform to build a visual work flow that- Pulls both Table A and Table B from SF- Perfoms a JOIN to correctly recalcuate the formula field based on the fresh data from Table B.- Loads final fully updated Table A into Snowflake.",Conscious-Comfort615,2025-07-30 19:36:36,4,dataengineering,t3_1mbtb0x,False,
n5p01pt,"You should sync each object seperately, and always use Foreign Keys instead of the connected object attribute.For ex: Let's say you have a contact / person entity. You should only sync attributes relevant to this person, but not from the connected objects like company, deals, etc. If you need information about the company, just join it using company id from the objects.I built a similar logic, and was pretty easy. Happy to help if needed.",PolicyDecent,2025-07-28 22:45:40,2,dataengineering,t3_1mbtb0x,False,
n5qkrx0,"What is the biggest table you have to synchronize? If the data is not much, doing full table replication might be acceptable.",Nekobul,2025-07-29 04:25:25,1,dataengineering,t3_1mbtb0x,False,
n5qsim6,"This is not unique to Stitch. In general, I would not replicate formula fields or roll-up fields. Instead, create views or other tables which emulate these formulas in your target db. Fivetran also has this limitation.",GreyHairedDWGuy,2025-07-29 05:26:50,1,dataengineering,t3_1mbtb0x,False,
n61eu58,Do you know any ETL platform that can do that? And but by Integrate do you mean integrating salesforce with snowflake directly?,Unusual-Affect-8310,2025-07-30 19:57:54,2,dataengineering,t1_n61aby2,True,
n5w4p8p,"Yeah that makes sense, thanks",Unusual-Affect-8310,2025-07-30 00:13:28,1,dataengineering,t1_n5p01pt,True,
n5w4rds,"Got it, looks like it’s a pretty common issue",Unusual-Affect-8310,2025-07-30 00:13:48,1,dataengineering,t1_n5qsim6,True,
n67xguj,Umm.. Integrate as in Integrate.io. It was previously called Xplenty,Conscious-Comfort615,2025-07-31 19:23:57,1,dataengineering,t1_n61eu58,False,
n5wzc2u,I only know of 1 vendor that offers accurate replication of SFDC formula fields (in the situation you describe) but it has other faults and I prefer Fivetran.,GreyHairedDWGuy,2025-07-30 03:15:24,1,dataengineering,t1_n5w4rds,False,
n60didk,Which vendor is that? Want to look into it,Unusual-Affect-8310,2025-07-30 17:04:50,1,dataengineering,t1_n5wzc2u,True,
n5mwwat,"Excellent idea. A unified dashboard for Dagster metrics and Snowflake costs is a game changer, not overkill. It solves a real efficiency problem and the skills learned are incredibly valuable. For implementation, using Grafana with Dagster's GraphQL API and Snowflake's `ACCOUNT_USAGE` schema would be a powerful approach.",Substantial_Fig_7849,2025-07-28 16:44:05,-1,dataengineering,t3_1mbiio9,False,
n6pzd7w,"Following because I’m interested in replacing our reporting soon. I’ve been looking the Metabase and Superset as well, but Lightdash is also on my radar. My preference is something open source with RLS that I can also export to Google Sheets if needed.",PablanoPato,2025-08-03 16:51:32,1,dataengineering,t3_1mgnrvz,False,
n6r0yhw,I have good experience with GoodData for embedded dashboards.,matej-keboola,2025-08-03 20:03:36,1,dataengineering,t3_1mgnrvz,False,
n6a01gr,"I’m looking at this from two perspectives since I don’t know at what scale your application operates:1. Why don’t you standardise your event log format/structure and emit it via logging.info()? Since you’re using Cloud Run, any stdout/stderr should be captured in Cloud Logging (which gives you access to Log Explorer & Cloud Monitoring for free). If you only want to track specific numeric values, then you can log them specifically in Cloud Monitoring.2. Alternatively, after standardising your event log format/structure, you can continue to export it to GCS and set up a Data Transfer Service to BigQuery. Or, if you want to continue using Postgres, you can setup a Cloud Function or Cloud Run Job (triggered by GCS) to load the data accordingly.",t2rgus,2025-08-01 02:01:01,1,dataengineering,t3_1meiraf,False,
n69dg7z,Do the easier solution,chock-a-block,2025-07-31 23:47:28,5,dataengineering,t3_1meh86u,False,
n6a8w8k,"If the data doesn’t have to be truly real time, slap on a firehose onto the kinesis stream to batch up records before writing to Postgres. It’ll be simple enough and can help avoid the connection issues you’re worried about.",Alternative-Sky5755,2025-08-01 02:56:13,4,dataengineering,t3_1meh86u,False,
n6a1n4z,"If “easier” to you means having something running in an afternoon and feeling comfortable with managing an ECS service, then spin up an ECS/Fargate task with your connection pool suggestion. Or, if “easier” means less infrastructure to manage over the next 6-12 months, then your original solution makes sense. A lot of teams I’ve worked with tend to start with Lambda (minimal ops, serverless) and move to an ECS consumer only when cost/latency or a different factor forces them to. If you don’t know where to begin, I suggest using Lambda first. Switching to ECS from Lambda is fairly straightforward",t2rgus,2025-08-01 02:10:48,3,dataengineering,t3_1meh86u,False,
n69vn52,"\+1. The Lambda might feel all nice and serverless but maintaining and debugging it will suck. Just write the basic Python script to flip events to Postgres, package it into a Docker image, run it on ECS and call it a day",lightnegative,2025-08-01 01:34:19,6,dataengineering,t1_n69dg7z,False,
n6acu63,"For the Lambda solution, did you run into any issues with too many connections to the database?",I_Blame_DevOps,2025-08-01 03:22:34,1,dataengineering,t1_n6a1n4z,True,
n6ozp2d,FOLDER!!!!,Belmeez,2025-08-03 13:46:54,3,dataengineering,t3_1mg9in8,False,
n6px3d1,Why are you yelling?,DataBora,2025-08-03 16:39:59,2,dataengineering,t1_n6ozp2d,True,
n6mk1ah,"You have a few choices1. COPY to TEMP TABLE then JOIN2. UPSERT3. INSERT every row into an append-only table and mark new rows as current version (i.e., SCD2)",ThatSituation9908,2025-08-03 01:58:54,9,dataengineering,t3_1mg5xyq,False,
n6mbvh9,"Not sure if this can be done directly with the COPY command. You might need to COPY into a staging/temporary table and then run another command to insert into your destination table.To achieve ""insert all but all insertions that already exist"" (assuming I'm understanding this correctly): you can then run an INSERT statement into your destination table, utilizing ON CONFLICT... DO NOTHING...assuming that's supported by your database.",kenflingnor,2025-08-03 01:07:01,2,dataengineering,t3_1mg5xyq,False,
n6okcoa,You want to do the copy command to insert data into an area that's temporary / raw. Afterwards depending on what db engine you're using you can use upserts via things like merge in Snowflake to handle the logic you're talking about. it's a two step process at minimum,ThroughTheWire,2025-08-03 12:09:01,1,dataengineering,t3_1mg5xyq,False,
n6prj9u,"I make a view, and have many, some cascade. Like only valid data view, based on domain biz rules, then the conditional views from the valid data one. I don’t get why views are so under utilized in DE. This is Snowflake and also some backend MSSQL systems. Your thoughts on this approach would be appreciated, tia",SirGreybush,2025-08-03 16:11:28,1,dataengineering,t1_n6mk1ah,False,
n6r36et,"Explain a little more, I do not understand how views have to do with inserting new data.",ThatSituation9908,2025-08-03 20:14:56,1,dataengineering,t1_n6prj9u,False,
n6rcjo7,"The raw new data you can write sql select to read, like external tables to files on a datalake, or staging tables. Your views presents the data columns you want, and the rows you want, filtering with either inner join or where clause, or both. Your copy command is essentially an Insert Into .. select from, just built different, but logically the same. Use a view instead of a table name.",SirGreybush,2025-08-03 21:01:58,1,dataengineering,t1_n6r36et,False,
n6rhrr0,"Let's see if I understand this correctly.You're ingesting tabular data into your data lake.Then you build a view for the truth table (i.e., dedupped) made by querying your data lake files filtering out duplicates.",ThatSituation9908,2025-08-03 21:29:18,1,dataengineering,t1_n6rcjo7,False,
n6s473n,"Yes.Structured and semi structured in DL, CSV or JSON. The ELT tool used is another team, they use Talend to call API, backend or CDC. Then Talend deposits in the DL. One container per source, one folder per (table) file name + _yyyymmddhhmmssThen Snowpipe + container event ingests into raw staging tables. We have also an older way in prod from 2 years ago, Snowflake staging tables setup as external tables. Then for Bronze we use views, with any business rule baked in. Also md5() style row hashing and additional columns, surrogate key, ingest datetime, file name and info on the file, columns in the staging, as well as the business columns. Once the event triggers, the UpSert occurs, but invalid data not ingested. A simple select to find what’s not ingested because for that surrogate and hash value, not in the bronze. I find views easier to manage and only the DevOps have DDL r/w on the views in that schema.",SirGreybush,2025-08-03 23:35:00,1,dataengineering,t1_n6rhrr0,False,
n6s850z,"Oh, I don’t write the views, I wrote a SP in snowflake to do drop & create of the views based on a data dictionary, that is easily imported/exported to Excel. So each business unit responsible for a Source.DataFile sets their rules that I double check after.",SirGreybush,2025-08-03 23:57:51,1,dataengineering,t1_n6rhrr0,False,
n66dgb9,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-31 15:03:02,1,dataengineering,t3_1me3ymx,False,moderator
n6ena0c,"Hey! I work at Estuary and happy to answer any questions. We have many thousands of production dataflows running on the platform, moving more than a petabyte every month. Also, our engineers can help you as well in our [Community Slack](https://go.estuary.dev/slack).Regarding Snowflake, we recently added Snowflake Streaming as the default option for delta updates, which means you can stream data with low latency.",dani_estuary,2025-08-01 19:42:36,2,dataengineering,t3_1me33o5,False,
n68chxd,"A couple of years ago at did a short POC with the product when we were looking to replace some Fivetran integrations. At the time, the product didn't seem as robust as we liked, so ultimately we stopped looking at it after the two week trial. Things could have changed in the years since",ntdoyfanboy,2025-07-31 20:35:45,1,dataengineering,t3_1me33o5,False,
n6gv3qt,"We’ve seen great adoption of the Snowflake connector at Estuary Flow, especially now that [Snowpipe Streaming](https://estuary.dev/blog/snowpipe-streaming-fast-snowflake-ingestion/) is available by default. If you’re handling high volumes or need low-latency delivery, it should work well. Happy to chat more if helpful!",Which_Roof5176,2025-08-02 03:19:48,1,dataengineering,t3_1me33o5,False,
n6cfn44,"If you are open, you can have a look at AskOnData. It is a chat based AI powered data engineering tool. Snowflake is supported as well. You can do the required data ingestion as well as any other kind of transformation, cleaning, calculations etc via simple English instructions. There are even options to add SQL, Python code, YAML as well. By bringing the processing outside snowflake to choice of your cloud environment, it can also help in reducing the cost also",nikhelical,2025-08-01 13:15:46,1,dataengineering,t3_1me33o5,False,
n6enft2,We've been hard at work in those couple of years if you wanna take another stab at it :),dani_estuary,2025-08-01 19:43:24,2,dataengineering,t1_n68chxd,False,
n6ax1g9,What was your data source? Could you shed more light on what you mean by robustness?,rajshre,2025-08-01 05:57:46,1,dataengineering,t1_n68chxd,False,
n5n9n7c,I offer paid mentorship in this area. DM me if interest ed,RobDoesData,2025-07-28 17:41:49,1,dataengineering,t3_1mbl92t,False,
n5qkot0,I’m interested,ManagementMedical138,2025-07-29 04:24:46,1,dataengineering,t1_n5n9n7c,False,
n5lvfdn,Here is the blog: [https://www.mitzu.io/post/designing-analytics-stack-with-streaming-and-event-driven-architecture](https://www.mitzu.io/post/designing-analytics-stack-with-streaming-and-event-driven-architecture),Still-Butterfly-3669,2025-07-28 13:42:35,1,dataengineering,t3_1mbgihi,True,
n6azfv3,"If your database tech is just Azure Synapse (dedicated pools), then I wouldn't pay money for this. The free version is fine, but most of the paid options are directly supported with any of the three free alternatives:* Visual Studio Community Edition + SQL Server Data Tools (SSDT)* Visual Studio Code + SQL Server and SQL Server Projects extension* SQL Server Management Studio (SSMS)SSDT allows for visually designing tables, designing databases prior to deploying, push-button deployment and deployment profiles, and comparing/visualizing existing SQL Server/Azure SQL/Azure Synapse instances.VSCode with SQL Server and SQL Server Projects extension does the same.SSMS provides the ability to generate ERDs on the fly and save them as files or to the database directly based on objects that are already setup in the database.I currently don't have a dedicate SQL pool instance running at the moment to test on, but I believe all of these options work with Azure Synapse Dedicated Pools. I have no experience with Azure Synapse Serverless so I can't say either way.Another option would be looking at RedGate tooling, which is my go-to for commercially licensed support for any of Microsoft's database technology. Nothing really compares to it and their tooling is extremely mature and has more features than you could ever use.",cloyd-ac,2025-08-01 06:18:49,2,dataengineering,t3_1me8j6a,False,
n6a1fhx,"My guess would be that most of them outsource their platform and get analytics as part of the product.  They mostly want to see what other ecoms want to see, how much stuff was sold for how many dollars.  They aren't going to pay someone a lot of money to make a custom data stack when they probably already have what they need.",Gators1992,2025-08-01 02:09:29,2,dataengineering,t3_1me5i1w,False,
n63pcbp,openmetadata,QuaternionHam,2025-07-31 03:27:50,7,dataengineering,t3_1mdnx34,False,
n633w1z,AWS Glue,SquarePleasant9538,2025-07-31 01:17:13,4,dataengineering,t3_1mdnx34,False,
n64zy15,"shameless plug: I am the founder of the company, but take a look at [Bruin](https://getbruin.com) maybe?",karakanb,2025-07-31 10:09:08,2,dataengineering,t3_1mdnx34,False,
n64sbse,What's your current tech stack? It totally depends on what other tools you use right now.,PolicyDecent,2025-07-31 08:58:22,1,dataengineering,t3_1mdnx34,False,
n65qxsg,"You run into an interesting problem that has been around since Adam started counting apples. There are two sides of the data cataloging coin. One side, technical, is fairly easy and straightforward. Almost all RDMS's have a data dictionary that will normally suffice for the basic needs. The other side of the coin, the business meaning, has never really been solved. In other words, what does the data mean? It has always been a manual effort to get good quality business information about the data. It is almost a data project unto itself.This however is just the start. You will probably want to document lineage, transformation, quality, etc. Those are all needed and highly helpful but take time and effort to establish. I have never found a silver bullet for any of this. Lots of vendor out there claiming to solve the issues but none really do.",marketlurker,2025-07-31 13:11:27,1,dataengineering,t3_1mdnx34,False,
n68jwe8,Go on dbt and document your models. Period. You don't need a catalog nor a semantic layer at this level,Al3xisB,2025-07-31 21:10:57,1,dataengineering,t3_1mdnx34,False,
n63cob3,"While I agree, specially as it comes with a crawler for maintaining and populating the catalogs, the crawler is quite a headache to set up. Or at least it was last year, haven't worked on in since I changed jobs.",linos100,2025-07-31 02:09:31,2,dataengineering,t1_n633w1z,False,
n68gpcf,I am missing a proper Developer Reference Guide for RDBMs databases. The last decent one I had in my hands was for the HERE maps backend database we bought for one project we had.,tiredITguy42,2025-07-31 20:55:29,1,dataengineering,t1_n65qxsg,False,
n63jflv,It's not that complicated. It's a good option for batch processing. Then Glue Schema Registry for real-time analytics with Kinesis etc. Use Glue to catalog and version your schemas for you. It's cheap and easy for small-to-mid sized companies. Especially being it does crawl your data for you.,Tehfamine,2025-07-31 02:49:36,2,dataengineering,t1_n63cob3,False,
n6aoyvl,"Depending on your setup, you could just MSCK REPAIR at the end of your script.",benwithvees,2025-08-01 04:51:04,2,dataengineering,t1_n63cob3,False,
n5swctn,"I do a little of this for an energy efficiency utility, AMA",ratczar,2025-07-29 14:51:02,1,dataengineering,t3_1mcb8mf,False,
n5vj49a,"I work in a climate research institute as a data engineer. Where are you located? A lot of our funding comes from Horizon (EU) projects, you can do some exploration about (past) Horizon projects here: [https://cordis.europa.eu/projects](https://cordis.europa.eu/projects)",Zyklon00,2025-07-29 22:16:29,1,dataengineering,t3_1mcb8mf,False,
n5umpud,"Oh very cool !I guess just initially and more importantly to me here's some questions I have:1) What sort of tools//platforms do you use in your work and what are some of the daily tasks you perform?2) Where does the data that is being ingested come from in this sector? I hear electrical utilities using things like IoT sensors, to monitor energy usage etc. Depending on the sector, perhaps even things like weather data as well (wind, solar) 3) When you say energy efficiency utility does this involve employing smart grid modernization strategies? Does your data feed dashboards, digital twins, etc.?4) Would you say that you see a demand for data engineering skills in this sector?",Green-Tea-21,2025-07-29 19:39:56,1,dataengineering,t1_n5swctn,True,
n5zn6m3,Incredible !! I’m located in Washington DC area of USA. What sorts of tools do you use on the job ? I’d imagine a lot of remotely sensed datasets - do you use Apache Sedona at all ? Is there a demand for data engineers in this space ?,Green-Tea-21,2025-07-30 15:00:22,1,dataengineering,t1_n5vj49a,True,
n5usgbz,"1. SQL server, SSRS, Python, Airflow, Snowflake. There's some GIS work involved as well to measure where we're working and what the people in this areas are like. We do a lot of compliance work - data products being created to share with state regulators and auditors. 2. We're generating some of it ourselves via our engineering teams, who are looking at buildings and quantifying impacts and expected savings. Weather data is big, as is data from partner utilities. Also data from solar inverters and smart meters (the IoT you mentioned)3. Actually no! We do building retrofits/home upgrades and estimate and measure the energy savings that result. We get a lot of our funding from states and utilities. We do have some dashboards (too many)4. Data engineering requirements for us are about compliance and quality - automated quality checks, integrity checks, matching and joining datasets across domains. Elsewhere in the power sector you'll see a lot more streaming data as folks are trying to monitor the output of power stations and plants and turbines - you're basically checking to make sure everything works safely. The pay is relatively less than other sectors but by God is it stable, we lost 15%+ of our revenue when the Feds cancelled contracts but we've had no layoffs.",ratczar,2025-07-29 20:07:09,1,dataengineering,t1_n5umpud,False,
n5zyovi,"It depends on the project. A lot of it is also data management and deciding on how to do stuff. Gathering data and developing methodologies. But I think for climate research with the current administration in the US, there is not a lot of funding...",Zyklon00,2025-07-30 15:55:36,1,dataengineering,t1_n5zn6m3,False,
n5zobul,"Excellent stuff ! Ok , sounds like you use a lot of the standard tools of data engineering applied to a super interesting use case. What sort of data from partner utilities do you use ? Also , could you expand on the way you use data engineering here ? You said compliance and quality checks - is that in the data itself or with the nature of the operation ? As much as you’re able to divulge , could you give an example ?",Green-Tea-21,2025-07-30 15:05:59,1,dataengineering,t1_n5usgbz,True,
n6rjrb4,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-08-03 21:40:02,1,dataengineering,t3_1mgvetc,False,moderator
n6sd154,This is what I’ve been looking for. I’m not OP but I just created a discord for this after seeing this post. We can share materials and lessons.https://discord.gg/Jj8Yu9ey,__redflag,2025-08-04 00:26:50,3,dataengineering,t3_1mgvetc,False,
n6rkg3z,"Cool im a beginner too, learning SQL, then get ring better at pyhton then pyspark then cloud and then project",No-Bid-1006,2025-08-03 21:43:43,1,dataengineering,t3_1mgvetc,False,
n6rmf6c,"Hi, I am a beginner too, I have been learning python, sql, pyspark, thinking of tinkering with postgres and then moving to cloud, if you want we can make an accountability group",sabziwala1,2025-08-03 21:54:22,1,dataengineering,t3_1mgvetc,False,
n6s4dwc,I'm interested too.,CrimsonTie94,2025-08-03 23:36:06,1,dataengineering,t3_1mgvetc,False,
n6s9bt7,im interested too,Puzzleheaded-Dog876,2025-08-04 00:04:54,1,dataengineering,t3_1mgvetc,False,
n6samh6,Id be interested too. My main strength is in SQL. Working on Pyyhon,Embarrassed_Job_5471,2025-08-04 00:12:39,1,dataengineering,t3_1mgvetc,False,
n6sc12t,"I’m interested, currently learning SQL",Neelu6,2025-08-04 00:20:51,1,dataengineering,t3_1mgvetc,False,
n6sl9du,I'm interested too. I'm a talend developer.,Lemon-18,2025-08-04 01:16:00,1,dataengineering,t3_1mgvetc,False,
n6sqsui,I’m interested,Future_Lab807,2025-08-04 01:49:07,1,dataengineering,t3_1mgvetc,False,
n6e0sd3,no i hate data,zazzersmel,2025-08-01 17:52:31,5,dataengineering,t3_1mf0sdy,False,
n6didps,This sounds like the legal equivalent of darknet purchases. I wonder how much customer service is given there like you describe. I think the hackers do everything you listed above except for cleaning the data.,Thistlemanizzle,2025-08-01 16:25:21,3,dataengineering,t3_1mf0sdy,False,
n6fswkc,"There's definitely a market.Lots of companies sell domain specific data. Morningstar for stocks, PFF for football, etc. If there is external data companies need, there's a company selling it. It would be interesting to know what datasets you will have and how they compare to established companies. Or if you have Completely different domains.",leogodin217,2025-08-01 23:22:37,2,dataengineering,t3_1mf0sdy,False,
n6dj84x,"Interesting idea, what sort of datasets are you thinking of?",007_reincarnated,2025-08-01 16:29:23,1,dataengineering,t3_1mf0sdy,False,
n6dqkv9,This sounds like European dataspaces. Minus the pruvacy part.,Zyklon00,2025-08-01 17:04:53,1,dataengineering,t3_1mf0sdy,False,
n6e722j,If I am paying someone for a dataset then I expect it to be clean.  If thry can't deduce their shit then what else did they get wrong?  I really don't need or want a middleman to ensure something that should be there to start with.,Gators1992,2025-08-01 18:22:47,1,dataengineering,t3_1mf0sdy,False,
n6e8vb0,"This sounds promising sourcing clean, exclusive data is a real pain point, especially for niche domains. If you nail trust (verified sellers, strong metadata, provenance), you’ll definitely stand out. Schema standards like JSON Schema or OpenAPI could help, and easy API or S3-based access would make ETL integration a breeze.",eb0373284,2025-08-01 18:31:33,1,dataengineering,t3_1mf0sdy,False,
n6r80qe,I used to work for a company that did this for medical datasets. There are many such companies now.,ludflu,2025-08-03 20:39:09,1,dataengineering,t3_1mf0sdy,False,
n6e536a,Why?,Brilliant-Draft2472,2025-08-01 18:13:12,0,dataengineering,t1_n6e0sd3,True,
n6dixuw,"Haha not really man, customer service actually will be the biggest factor cuz at the end of the day it’s a marketplace - wanna join the waitlist ?",Brilliant-Draft2472,2025-08-01 16:28:02,1,dataengineering,t1_n6didps,True,
n6av43y,"This is more of an analytics question, but if your issue is that on small numbers there's a larger variation so you don't want them to just trigger on a % change, then you might want to rescale to standard deviations. Then you can look for values that are >mean+x*sd.If your data is normally distributed you should be able to roughly get to flagging things that are beyond 10% | 1% | 0.1% (etc) worst expected results.",azirale,2025-08-01 05:41:15,3,dataengineering,t3_1meko44,False,
n66bnrw,"As someone who’s worked with Exasol databases for a few years as a consultant, I’d say don’t do it. Both of my clients who introduced it years ago have shifted to other DBs (BigQuery, snowflake). Most SaaS data tools don’t provide native support. For dbt I ended up joining the open source Exasol adapter team for a bit to develop the specific feature I needed; I haven’t really seen any official support from Exasol which to me at the time seemed like a big red flag.",UnusualCookieBox,2025-07-31 14:54:40,3,dataengineering,t3_1me2j7a,False,
n662jkq,lol no,codykonior,2025-07-31 14:11:04,2,dataengineering,t3_1me2j7a,False,
n663z3t,"Seems to be just a different “flavour” of something like oracle DB i.e. pros and cons would be more or less the same from technical perspective. Not sure who are their customers though, have never heard of it.",CrowdGoesWildWoooo,2025-07-31 14:18:05,2,dataengineering,t3_1me2j7a,False,
n663bg1,Why not,sickofplayers,2025-07-31 14:14:52,1,dataengineering,t1_n662jkq,True,
n6654eo,"Snowflake market cap vs Exasol; $74b USD vs $79m EUR. Databricks is valued at $62b USD.It’s pretty crude to just look at their value but that’s where the money (and consulting money) is going.Sure you might learn Exasol and get a job somewhere as a consultant later, because it’s niche. But I reckon the same effort would pay off better where it’s not niche and there’s tons of money and opportunity.",codykonior,2025-07-31 14:23:40,3,dataengineering,t1_n663bg1,False,
n68ovyi,follow the money is good advice.,vikster1,2025-07-31 21:35:42,3,dataengineering,t1_n6654eo,False,
n61jtew,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-30 20:21:26,1,dataengineering,t3_1mdhd2r,False,moderator
n5u86f3,"Make a YouTube channel and teach there or create a free Udemy course. You might even be able to make an income from it in the future.Maybe you're being sincere but this post screams scam.Edit: just seen you have a YouTube linked on your profile ( not saying it's legit, maybe it is).",Lego_Division,2025-07-29 18:31:38,356,learnprogramming,t3_1mcemxd,False,
n5tppz2,This seems phishy :winking_face:,Embarrassed-Form5350,2025-07-29 17:07:48,236,learnprogramming,t3_1mcemxd,False,
n5u75sj,Spidey sense is tingling,MrKnives,2025-07-29 18:26:55,55,learnprogramming,t3_1mcemxd,False,
n5ugqg2,Last time someone offered free mentoring it did not end well. I really hope you don't keep kids in your basement mate.,wmute,2025-07-29 19:11:22,50,learnprogramming,t3_1mcemxd,False,
n5xg4bs,"Make a youtube video about teaching process and how it goes, how student code improves and so on. In that case you would help more than 5 in 3 months.",V---y,2025-07-30 05:19:35,11,learnprogramming,t3_1mcemxd,False,
n5tc9kf,Any chance you'd continue this trend and create another cohort 2 years down the line?,damian_wayne_ka_baap,2025-07-29 16:05:34,19,learnprogramming,t3_1mcemxd,False,
n5uhw40,"Hey Imanol, I would love to talk to you about an idea that I had.I am a self taught programmer (I also got a very poor free Data analytics bootcamp from the unemployment office in Germany). I worked as a chef for 10 years and before that in media and now I transitioned to programming.One thing that was worth it from the bootcamp that helped me a lot was the access to mentors. I have been thinking that it is a shame that a lot of people pay so much money just to access to a weekly 30 min call with a mentor (sometimes even less). The material to learn is already online with even well structured tutorials or learning path, but free mentoring options are missing.I have been planning for quite some time to build a website in which programmers and other professionals can offer free mentoring options for people who are learning or starting. It doesn’t have to be for a long time or long sessions but some guidance or even code review could work. Would you be open to help me build this project? Would anybody be interested in something like this? Does a similar platform exist? It has to be completely free of charge (kind of like freecodecamp but for mentoring)",Hydnum_repandum,2025-07-29 19:16:51,9,learnprogramming,t3_1mcemxd,False,
n5tyxop,"This is an insanely generous offer. OP is offering to commit 2 1/2 hours daily towards 1-2-1 mentoring, for **free**!If you have time and/or energy, it would be absolutely invaluable if you wouldn't mind providing monthly updates to the sub:- progress of 5 mentees- common issues- feedbackIt would also be interesting to understand knowing what you would know 1 month later, what would you have done differently? I personally think that you are heading for burnout with such a daily commitment. Look after yourself, and don't be afraid to changes things if the commitment proves too challenging.Really hope that your mentees are genuinely focused, put the necessary work in, and put your guidance into practice to really propel their progress.You are doing the Lord's work!",putonghua73,2025-07-29 17:49:07,24,learnprogramming,t3_1mcemxd,False,
n5tzqht,"If you’re a lead, how do you find the time?",ButchDeanCA,2025-07-29 17:52:41,2,learnprogramming,t3_1mcemxd,False,
n5w5yli,"Mentorship like this is rare, especially from someone who's been through the self-taught trenches. You're basically giving people a map through the fog - and that’s priceless.",alpinebuzz,2025-07-30 00:20:42,2,learnprogramming,t3_1mcemxd,False,
n6017ps,"Don’t do LeetCode. It looks nothing like real projects. Come up with a basic project idea, write up a blueprint for it, and then suffer through the coding. Use stack overflow or other classic sources when you get stuck (or use man pages and other official documentation, even better.)There’s no easy way to learn. It takes time, patience, and effort.",ATD67,2025-07-30 16:07:33,544,learnprogramming,t3_1mdacq9,False,
n600fux,"You just got addicted to finishing the assignment rather than struggling through it.. You're in deep deep trouble in terms of your long term career, but nothing you can't fix. You're just going to have to pull yourself up by your bootstrap, and struggle through the process of writing code without looking. Use the documentation, divide bigger problems into smaller ones and solve them..I too use gpt, but more to guide me rather than to get answers directly..",LoL_is_pepega_BIA,2025-07-30 16:03:49,399,learnprogramming,t3_1mdacq9,False,
n603ztv,"Don’t waste your time with the leetcode nonsense, and skip the endless tutorials. Nobody actually learns like that, what they do is use those things to delay the learning process while feeling like they’re still doing something. Pick a project, start building it yourself, just look up the very specific things you need, as you need them, you’ll learn rapidly and if you can dedicate a solid month to it full-time, you can be a passably competent junior dev in that time. There’s a reason so many people on here think it’s all very confusing and spend years getting nowhere, and it’s because they’re trying to memorise the entire recipe book before they’re willing to try cooking for the first time. If you want to learn how to make a chair, you can spend months learning about different woods, their density, different joins, the history of different chair architecture, and it all seems very complex. If however, you grab some random bits of wood and some nails, you can make your first chair in no time, and then look up specifically how to improve it, learning as you go, and become competent much faster and without drowning in useless information you’ll forget anyway because you’re not using it.",Kezyma,2025-07-30 16:20:50,105,learnprogramming,t3_1mdacq9,False,
n600pl1,"You're not alone, this is a very common thing. It sounds like you need to take a step further back than learning DSA. Like, back to the basics. You probably have gaps in the very fundamental stuff, which all needs a lot of practice - a lot more than most people realise. Get a book / go back through all your course material / see a tutor / use all your college/universities resources (ask for help) and most importantly \*practice\*, do challenges, do exercises, all of it. If you're in college you're paying a lot of money to be there so...use whatever resources they have - office hours, etc.My guess is you rushed through all the assignments, even the basic ones, and used help / AI / whatever to finish them. And now you're stuck because you didn't do any learning.Completely forget about AI for now. You need to actually \*learn\* by doing. Learning happens by being put in uncomfortable (but still reachable) situations and grinding through it, and then gradually increasing the difficulty.",racingking,2025-07-30 16:05:08,45,learnprogramming,t3_1mdacq9,False,
n60ciyk,"You can keep using ai, just change the way you use it. Talk to it as if it were a teacher or friend helping you set up a project:Instead of “create a windows desktop app” ask “how do i create a windows desktop app?” dont let it do stuff for you, allow it to give suggestions and propose changes, but make sure that anything the AI is doing, you will be able to do next time. If the AI does or suggests to do something you dont know how to do yourself, ask it what that is or how its done.AI is a great learning tool if you use it as such.I recently wanted to do something and AI suggested using a denounced search and suggested code for it. I didnt knew like 3 methods it was using or what a debounced search actually is, so my next 3 prompts where asking the AI to explain what a debounced search is and how the code it suggested actually works. Even after this i was very unfamiliar with the methods being used, so my next step was jumping into microsoft documentation to see the definition of these methods. Now i can confidently say i could come up with this approach on future projects.",GODstonn,2025-07-30 17:00:23,25,learnprogramming,t3_1mdacq9,False,
n60djwk,"I worked with a girl who insisted on turning off autocompletion, because she was afraid to forget things and get lazy. It made her a better developer than almost everyone else I ever worked with. You should force yourself to use you mind and memory more.",Narrow-Coast-4085,2025-07-30 17:05:02,9,learnprogramming,t3_1mdacq9,False,
n60b0v8,"Yeah you fucked up. Just realize that you’re not the only one who is making this mistake, there’s an entire generation of students who are going to do the same thing and the majority of them aren’t going to bother fixing it, hit their first technical and realize they cheated themselves out of a job and now they have tens of thousands in debt.I would take a semester off or check to see if you can do a personal project course. I’d pick up a project like a path finding visualizer, sudoku solver, something advanced in terms of DSA. Commit yourself to that project 100% and then make a vow to never use AI again, at least until you’re a couple of years into your job and your management is making you use it.Good luck",pyordie,2025-07-30 16:53:42,6,learnprogramming,t3_1mdacq9,False,
n60h7fu,"> But maybe I should just do it anyway? Yes.But frankly, the root cause of the ""hell,"" AI or otherwise, is a lack of curiosity. People who are stuck are stuck because they aren't actually curious about how this stuff works. I don't know how you fix that. Either you're curious about this stuff or you aren't. And if you aren't, I don't want to work with you.",POGtastic,2025-07-30 17:21:18,14,learnprogramming,t3_1mdacq9,False,
n5zzu3j,"Tutorial hell is a million times better than AI hell because even if you're stuck in tutorial hell, you're still learning and internalizing, and once you get out most of that will stick.So, yes. Go through that. Forget AI exists. Assume it's 2020 and the best AI can do is one sentence that makes sense about half the time.",NamerNotLiteral,2025-07-30 16:00:56,35,learnprogramming,t3_1mdacq9,False,
n601vku,"They way I learned was taking like 5-6 courses on udemy mostly from Tim Buchalka. He has courses for Java, Python, C++ (this is done by someone else part of his coding academy, but also very good). These are really top rated and you have 60+ hours in the course.They helped me understand the basics and then advanced features. Those courses explained concepts way better than any university professor I had.",Sea-Offer88,2025-07-30 16:10:45,3,learnprogramming,t3_1mdacq9,False,
n5k8e98,"This is not an attribute unique to programmers. No matter where you go in life from here, you will encounter those people.",Own_Attention_3392,2025-07-28 05:45:21,469,learnprogramming,t3_1mb7ysd,False,
n5k7huf,Yeah I’ve had similar experience during my school time. However I’ve had way better experience in work life. Lead programmers where down to earth and really helpful and nice.,wirrexx,2025-07-28 05:37:17,109,learnprogramming,t3_1mb7ysd,False,
n5k8eo8,"I have answered this in similar threads. I'm in my 50's. When I was starting my career, I was full of myself. I could do no wrong. Everything I wrote was fantastic. Then, after four years in, I taught a C programming class a few semesters at a community college. I got so humbled so quick. Only an asshat keeps the ego. A good developer will know when to pause and ask questions. The best quality I've seen in a developer is ability to ask questions. We never stop learning.",GotchUrarse,2025-07-28 05:45:28,61,learnprogramming,t3_1mb7ysd,False,
n5kacin,"Only bad developers have big egos.This is how I classify developers Junior: doesn't know anything so asks questions Mid: thinks they know everything, never asks questions Senior: knows what they don't know; isn't afraid to ask questions Staff: ask everyone questions so they all see the error of their ways",NiteShdw,2025-07-28 06:02:41,69,learnprogramming,t3_1mb7ysd,False,
n5k80d4,"I would tell your professor that it's making it difficult for you, and ask if you can change groups or work independently. If you feel like it, that is.",Key_Storm_2273,2025-07-28 05:41:53,16,learnprogramming,t3_1mb7ysd,False,
n5katwt,"Yes, this is a tale as old as time. These arrogant pricks are all over. To top it off, they usually aren't that much better or even better than average at all. They're just  more cocky and outspoken. It's why I always hated group work in college. I really wish they didn't bother with it in college. It doesn't really emulate the real world the way the professors think it does.",Piisthree,2025-07-28 06:07:06,10,learnprogramming,t3_1mb7ysd,False,
n5k7xmv,"It's not uncommon, but then it's not uncommon in other professions either.I used to work at an advertising company, and yeah, no shortage of egos.Most developers I know are basically not egotistical, they're pretty confident in their abilities, but don't shout about it, and certainly don't try to pretend they're above anybody else.Big egos aren't rare, but they're not the norm either. I'm not sure if it's much different from any other profession. Are surgeons known for their tiny egos? Lawyers? Police officers?I'm not sure big egos are more common in software development than anywhere else.",ToThePillory,2025-07-28 05:41:12,16,learnprogramming,t3_1mb7ysd,False,
n5k9j6q,I’ve been a professional software engineer for about 25 years. I’ve been lucky enough to only really encounter one person like that at work. I don’t think it’s something you’re guaranteed to have.,gopiballava,2025-07-28 05:55:25,6,learnprogramming,t3_1mb7ysd,False,
n5lbgn1,"Sometimes people who seem like they have massive egos and come off as condescending just have poor social skills, or simply different values that mean they don't care about offending others (for better or worse.)It's not necessarily due to them being malicious, narcissistic or even having an egregiously large ego, although it might seem to you that there is something ""wrong"" with them. It can just as easily be due to them having a genuinely held negative perception of collaboration or just not enjoying working with others for their own personal reasons, and whether or not that is a ""problem"" depends on perspective and opinion.Not being pleasant doesn't mean someone is a ""bad"" person.I know that it can be very frustrating to work with someone who isn't naturally co-operative, but assuming it's all about ego doesn't do you any favours. The more you judge others harshly the harder you will make it to collaborate with them. Being diplomatic and negotiating to find a genuine compromise will get you far, but it will take some initiative and persistence.There are other kinds of people who are difficult to work with, such as people who are highly social or charming but don't actually do any work and will make you feel like an asshole if you try confronting it. Being pleasant doesn't mean someone is a ""good"" person.",Isogash,2025-07-28 11:40:28,5,learnprogramming,t3_1mb7ysd,False,
n5k98qc,"Yes. It is not only in uni.There are smart guys in IT. However, sometimes being smart is not always matched with “being nice”.You would need to learn to deal with this.",progmakerlt,2025-07-28 05:52:50,5,learnprogramming,t3_1mb7ysd,False,
n6f78a1,"I periodically like to re-watch (and maybe even post) this video from Andrew Price, especially the section starting around 11:40. He describes how he would ""practice"" every day on drawing and was never getting any better. He finally realized it wasn't just about practice - it was about conscious practice, doing things that pushed his boundaries in the right way. Not just spending time. Quality mattered more than quantity.[https://youtu.be/vM39qhXle4g?si=YYG1agxZQd37JuDt&t=698](https://youtu.be/vM39qhXle4g?si=YYG1agxZQd37JuDt&t=698)In case you find it useful... :)",jaynabonne,2025-08-01 21:22:28,47,learnprogramming,t3_1mf5a3g,False,
n6evqfz,A colleague with experience can show you a few thinks in 20 minutes and save you a week of banging your head against a wall.,Stopher,2025-08-01 20:24:46,41,learnprogramming,t3_1mf5a3g,False,
n6ehyhn,"But didn't they did exactly that? They picked a topic and applied it themselves instead of following someone else's lead? Isn't it the definition of practice?I think ""practice more"" being said when someone complains about reading everything and learning nothing, because they never used it by themselves.",Towel_Affectionate,2025-08-01 19:16:07,113,learnprogramming,t3_1mf5a3g,False,
n6exm4d,"Sitting there and bashing your head against the wall to solve a coding challenge that you haven't learned the fundamentals for how to solve is inefficient and frustrating. That's why people learn DS&A first, so they can recognize the tools they need to solve a problem . Then it's just a matter of learning how to apply the tool.",KwyjiboTheGringo,2025-08-01 20:34:02,14,learnprogramming,t3_1mf5a3g,False,
n6hf9xc,"Yeah that feeling sucks. I've taught some devs and learned 'practice more' is useless advice. What worked was giving specific challenges with clear goals, like 'write a function that validates emails, then we'll debug it together.' Way more effective. Also going step by step with them over how things go and asking them why, this back and forth conversation alongside a whiteboard can be very good!",octoio,2025-08-02 05:58:58,8,learnprogramming,t3_1mf5a3g,False,
n6fn6mb,Funny how teaching others exposes the blind spots in our own learning journey. You didn’t just help them - you leveled up your own perspective.,alpinebuzz,2025-08-01 22:50:01,7,learnprogramming,t3_1mf5a3g,False,
n6fvi4o,Grinding based exercises are a waste of time. They miss the forest for the trees.What helped me most in my journey was reading *other people's code* and correcting/finding bugs. You'll start to see how different all of us approach even very simple problems.,barkingcat,2025-08-01 23:37:35,6,learnprogramming,t3_1mf5a3g,False,
n6gte4x,"A lot of this just comes with curiosity. If you care about a problem enough, you’ll learn all you can to solve it. That snowballs overtime. You’ll face a hard problem and learn more and more about it. All the nuances, edge cases, similarities to other known problems, etc. Eventually, new problems have similarities to problems you’ve solved before. Practicing and being obsessive about learning is the superpower for getting good at building software. Thankfully, the majority of documentation is free, and learning resources exist for the curious, even if it costs $40 a month. What an investment. A few hundred bucks in a year to learn from industry experts?! So much better ROI than college.",burntjamb,2025-08-02 03:08:10,3,learnprogramming,t3_1mf5a3g,False,
n6gkhvf,"If you did CP, then you can't extrapolate from your experience at all lmao. Try learning more about learning itself works in most people: https://www.justinmath.com/books/You might also want to look into systematic program design: https://htdp.org/2024-11-6/Book/index.html",misplaced_my_pants,2025-08-02 02:09:48,3,learnprogramming,t3_1mf5a3g,False,
n6f7j74,"Hey, now that you mention that topic. I have been working in a project that focus on this. I think we have the same philosophy of focusing first on the logic (natural language and even some drawings) and therefore code. It is basically a whiteboard which is connected to LLMs APIs so it can understand what you have drawn and by that tell you if you are going in the right direction to get the problem solved. I would appreciate if anyone with more experience could help us with some ideas to keep working on it...",Dsailor23,2025-08-01 21:24:02,1,learnprogramming,t3_1mf5a3g,False,
n652itc,Lego makes some robotics kits. You can do some programming for them too,Virtual-Ducks,2025-07-31 10:30:57,203,learnprogramming,t3_1mdxoed,False,
n651ar3,"Scratch Jr. should be available for free on Android and iOS. There are plenty of free lessons and resources for it, as it is basically *the* standard way to teach coding for kids of that age. If you're willing to buy a subscription, CodeSpark Academy is also good.There's a neat picture book that teaches the abstract thinking and logic behind coding with lots of activities called *Hello Ruby: Adventures in Coding*.",plastikmissile,2025-07-31 10:20:43,87,learnprogramming,t3_1mdxoed,False,
n651l7w,"I'd go for a Raspberry Pi car, or for an Arduino car, something similar.If your nephew has access to a mobile phone/tablet, these devices can be controlled either with a remote-control like interface on the phone, or with a Scratch like programming language. A computer is not required.Look into what *Sunfounder* has to offer. They have great kits.",desrtfx,2025-07-31 10:23:08,34,learnprogramming,t3_1mdxoed,False,
n651j9a,"When I was 8, I was already playing games and tinkering on my Gran's old Windows 95 box. I didn't learn any programming until I was about 19 and moved into it for work, but I do remember back then trying to make mods for Morrowind, or custom maps for Warcraft 3, and that satisfied a lot of my curiosity.As for physical things outside of a computer, you'll probably get suggestions, but I'd wonder whether they'll actually be of interest to the kid? A fun project you could do together would be Ben Eater's breadboard projects, you could build an 8-bit CPU part by part together, which I know I would have loved to do back then, and wish I had the time to finish one today; [https://eater.net/](https://eater.net/)The projects aren't really for children, but they break down how a CPU functions to small, understandable chunks, and as you build it, you can see bit by bit how it all comes together, and then at the end, you can program it.",Kezyma,2025-07-31 10:22:41,28,learnprogramming,t3_1mdxoed,False,
n656x30,The [Turing Tumble](https://upperstory.com/en/turingtumble/) tabletop game.It conceptualizes how computers and programming work through building marble-powered computers.,weretuna,2025-07-31 11:05:32,18,learnprogramming,t3_1mdxoed,False,
n6554qc,"Is a Raspberry Pi within your budget? There are tons of learning materials, kits and projects you can do with one. Endless future gift ideas if you can get him one.It's not a toy either, it's a full computer so he can learn programming all the way up to the most advanced levels.",Isogash,2025-07-31 10:52:01,17,learnprogramming,t3_1mdxoed,False,
n653m0t,Is there a reason not to give an old computer to them?,zhivago,2025-07-31 10:39:57,10,learnprogramming,t3_1mdxoed,False,
n654ctd,"I would recommend Mark Rober's Build Box, which teaches kids basic STEM, and then if he's into it Hack Pack since these come with Arduinos that you can program.",HaykoKoryun,2025-07-31 10:46:00,7,learnprogramming,t3_1mdxoed,False,
n6555d8,Raspberry Pi would be a perfect present for him.,1AlanM,2025-07-31 10:52:09,6,learnprogramming,t3_1mdxoed,False,
n652mwq,"Does he have a smart phone? If so, there a lot of ""sandbox"" websites you can plink around in. Thinking of something like [CodeWars](https://www.codewars.com/).Of course, I wouldn't want to code on a phone. There is a genre of coding games. Presumable some that aren't too arduous on a phone. On the PC I found [Human Resource Machine](https://en.wikipedia.org/wiki/Human_Resource_Machine) gave me flashbacks to assembly language days. Oh, they seem to have an android version!Sans any tech at all... doing geometric proofs are a lot like writing programs and you can find them in any text book. The first time I ran into them in math class was the first time I ever got an A in math. They still hold a special place in my heart.There are doubtless some meat space games that lend to the thought process. This guy claims to have found a few, but I'm never played any: [Games with a programming mechanism](https://boardgamegeek.com/geeklist/68015/games-with-a-programming-mechanism).",WystanH,2025-07-31 10:31:55,5,learnprogramming,t3_1mdxoed,False,
n689jtp,15 years and counting.,CMFETCU,2025-07-31 20:22:02,98,learnprogramming,t3_1mec4w4,False,
n68bhi8,20 years and counting! (currently a senior engineer),HashDefTrueFalse,2025-07-31 20:31:05,20,learnprogramming,t3_1mec4w4,False,
n68a7bz,It's just checking docs all the way up!,Sophiiebabes,2025-07-31 20:25:04,8,learnprogramming,t3_1mec4w4,False,
n689xxi,Currently at 10yoe as a professional. Still check docs frequently.,0dev0100,2025-07-31 20:23:51,8,learnprogramming,t3_1mec4w4,False,
n68dqxx,"I hesitate to say that writing the actual code is the easy part, but.... it kind of is. Debugging is a huge part of it.As with so many creative skills, you learn to think multiple steps ahead. You learn the common pitfalls whether it be file organization or data modeling. You have to be able to plan for your application getting bigger because feature creep is real. I honestly didn't feel like I was doing it professionally until I started writing tests and collaborating with others.",huuaaang,2025-07-31 20:41:35,7,learnprogramming,t3_1mec4w4,False,
n688icg,"8 years and counting. If I'm not checking docs, I'm asking ChatGPTEdit: You want to learn to solve problems",the_mvp_engineer,2025-07-31 20:17:13,26,learnprogramming,t3_1mec4w4,False,
n68h51u,"For me it depends how you count.I tried at 12yo and failed because of bad tutorials.I had an introduction to programming in C++ at the EPFL in physics. About 1h per week over 1 semester in C++, but I loved it so much that I started to play a bit more around without properly learning.I then tried to apply for an internship requiring python, I had only 2 days before the interview and got selected. I got to know that I had done better than other applicant that had been learning programming, more precisely python, for way longer than me.After 1-2 months of work, I was already being assigned the most technical assignments and troubleshootings. Before 1 year, I became lead dev of the company.So, quite short I guess. I have been teaching juniors and apprentices, even ""experts"" and ""seniors"" and not everybody learns at the same pace.I guess, the biggest advice is to put aside your pride and not let titles/rank/YoE/... pollute your mind. Always look back at what you did and be really critic. Challenge your past decision and try to prove yourself that you were wrong.",divad1196,2025-07-31 20:57:33,4,learnprogramming,t3_1mec4w4,False,
n68j3v5,I started in 1980 and I'm still learning.,KE3JU,2025-07-31 21:07:02,4,learnprogramming,t3_1mec4w4,False,
n69k2h6,"Coding for 45 years, 30 professionally. I check docs constantly. It's part of the process.",flat5,2025-08-01 00:25:44,4,learnprogramming,t3_1mec4w4,False,
n6a6sx9,"3-4 years, self taught.",RareDestroyer8,2025-08-01 02:42:51,5,learnprogramming,t3_1mec4w4,False,
n5xrd2h,"How does a pianist know what key sounds good after the last one when composing?A dash of knowledge about the basics and then it's mostly experience.Make real things. Either new things you think should exist or existing things you want to understand better how they work.My personal recommendation would be that when you're done making something, make it again. You'll have learned so much through the process you'll make it completely differently. If you don't make it completely differently, you're either a genius or you've done something wrong (my money is always on the latter).",EliSka93,2025-07-30 07:00:42,98,learnprogramming,t3_1mczkgc,False,
n5xurvm,"You have to learn how to learn.If you dont know how to do something, go find out. It really do be that simple.",Pale_Height_1251,2025-07-30 07:33:20,33,learnprogramming,t3_1mczkgc,False,
n5xrexg,"Programming is an everlasting journey if you want it to be. If you like high level I would suggest to learn some low level stuff so you understand the basics, but after that it's pretty much that you need to 'specialize'. Software will always be software, but these days, each area has their own list of rabbit holes to dive into.",Totally_Not_A_Badger,2025-07-30 07:01:12,15,learnprogramming,t3_1mczkgc,False,
n5xshjc,"They worked their way up, gained experience, practiced, researched, experimented, *learnt*.Programmers know what to do because they have done it or similar things countless times. It's all down to practice and experience.Learning programming especially is a lifelong marathon.Even the most experienced programmer will struggle when they face problems that they haven't seen before. They might know, from their experience, how to address the problems, how to analyze and dissect the problems, but even they won't immediately be able to solve them.Sometimes programmers spend weeks, months, even years on problems before they write the first line of code.> How do people just excel certain areas throughout one semester ??This could attribute to pre-existing knowledge, to exposure to similar domains, and to plenty other factors. Through playing around and practicing outside school work, and much more.",aqua_regis,2025-07-30 07:11:18,9,learnprogramming,t3_1mczkgc,False,
n5xx9ar,CS can feel like drinking from a firehose...,ParagNandyRoy,2025-07-30 07:57:24,9,learnprogramming,t3_1mczkgc,False,
n5yl6ip,"The best programmers I have experienced are the ones who have an entrepreneurial mindset. The skill of programming is just the tools. Knowing what to build is a creativity thing that either someone is always directing you in what to do (low pay) or someone sets a vision and you build up the capabilities for that vision to work. Knowing what to do in all the interviews I have done is easiest to discover if I have the candidate tell me about a business they tried to do, a side gig they did, or frankly something they created on their own. If I have a candidate who was just good at doing the task directed of them, they are usually a “do not hire”…Keep taking the classes and they will give you the tools. But really invest in being an entrepreneur with a focus on what the end user will experience and how you can make the experience better for that end user. That is the key.",No_Top2115,2025-07-30 11:30:31,6,learnprogramming,t3_1mczkgc,False,
n5xtwmu,Generally you fucks around and find out,NotMNDM,2025-07-30 07:24:56,5,learnprogramming,t3_1mczkgc,False,
n5xsmon,"\>  I'm really confused as to if I should work on my OOP projects If you are not using what you have learned, then that knowledge will quickly go away. And the best way to learn is to write lots of code using the knowledge you have. If you do this that knowledge will then start to stick.",ScholarNo5983,2025-07-30 07:12:38,4,learnprogramming,t3_1mczkgc,False,
n5yborq,"Well, there is coming up with project ideas. Business objectives.I find myself writing lists. Sometimes in a text editor and sometimes on paper. A list of objectives or an outline.If I'm stuck, or even not, I employ beginner's mind. Look at the screen device or concentrate on audio. Can I describe what I see?Sometimes you get too close to the problem and need the higher level view.",for1114,2025-07-30 10:15:33,4,learnprogramming,t3_1mczkgc,False,
n5yvwox,You've not learnt programming until at least after DSA. Then you'll still be learning for decades. I've been programming games for 35 years.,tcpukl,2025-07-30 12:39:06,5,learnprogramming,t3_1mczkgc,False,
n6gjvwz,"You either love it or don't. I know a lot of people who are in it for the money - some had 20+ year careers doing bare minimum, without producing anything of their own. Just tweaking other people's code.",Great_Guidance_8448,2025-08-02 02:05:59,59,learnprogramming,t3_1mfeqv8,False,
n6gk94o,"Here's the way I see it, you either enjoy it or you don't. Now back in college coding wasn't my favorite, but we were only doing small exercises. Once you can do something you actually want, it becomes more fun. The more fun it is the more you'll want to code.",josys36,2025-08-02 02:08:15,21,learnprogramming,t3_1mfeqv8,False,
n6gko2h,"You are aware that you are doomscrolling, the logical next step is to delete your accounts on those sites and then block them entirely. With the distract gone it might take a few days to adjust, but them you should able to code for longer, if you still find no joy in it, coding just might not be for you after all, but first go and beat that social media addiction.",DreamingElectrons,2025-08-02 02:10:53,13,learnprogramming,t3_1mfeqv8,False,
n6h2z0y,"Give it up.Can you picture yourself writing simple business applications with practically boiler plate SQL code 8 hours per day, 49 hours per week, or some other similar application? How about day after day of mindless verification code for testing? How about device drivers or API libraries? Most coding jobs are like that, about 95% of the least interesting code you can imagine. Learning coding is exciting. DOING it isn’t.",PaulEngineer-89,2025-08-02 04:16:35,14,learnprogramming,t3_1mfeqv8,False,
n6gmzg9,"Sorry do you have 4 years and XP professionally and did got back to school or you are still studying and never programmed professionally ? If you don't have professional XP, you don't really have an idea on how it's like anyway.",nicolas_06,2025-08-02 02:25:45,9,learnprogramming,t3_1mfeqv8,False,
n6gs3xs,"1. You doom scroll to make yourself feel better that you can't do it. Stop it man.2. ""Love"" coding is a strong word. Prioritise consistency. Just do it for 2-3 hours, take a break. If you wanna continue, then do it for another 1-2 hours. The nonsense most people peddle that if you love it.. you become obsessive over it.. is nonsense. Gotta pace yourselves. 3. I don't know what's your skill level but I recommend making a coding portfolio first, then adding projects to it.4. Learning to code means exploring around, seeing what other coders are talking about. You don't have to be a master at everything but you do gotta know what's what.5. Find a coding buddy to keep you accountable.",yellowmonkeyzx93,2025-08-02 02:59:34,9,learnprogramming,t3_1mfeqv8,False,
n6gqyfn,"Build your own shit. Find something cool. For me, that was ray tracing and a rendering engine so I could code the Game of Life on it. The minute you’re solving problems that lead to something you think is cool your perspective will probably change.If that doesn’t work, then maybe you’re just not into programming, which is okay. But first, build something you think is cool.",Mason_Luna,2025-08-02 02:51:58,4,learnprogramming,t3_1mfeqv8,False,
n6heyzk,"Dude, you‘ll Never get good at this and then your Future is to be a mediocre coder that hates his Job. Do something different!",movemovemove2,2025-08-02 05:56:16,3,learnprogramming,t3_1mfeqv8,False,
n6hmkda,"Programming is just a set of tools, it isn’t something you get obsessed with or excited about. It’s what you do with it that should get you excited and obsessed with. Take a carpenter for example, he has a set of tools that may include a hammer, saw, chisel, etc. He isn’t excited about those tools, he’s excited about the product he’s making, whether that’s a chair, door, etc.Same thing code for programming, the language you pick is a tool I.e. python, JavaScript, C++, etc. Each has their advantages and disadvantages.You want to build something that you love and enjoy, then use programming to build that. You probably have no interest in how dating websites work etc. That is the likely reason you are not excited about it.Pick a subject you enjoy in real life, like Football, cooking, rugby, gaming, etc. Then think of a little idea. Take football for example, you could build a simple hard coded Stadium displayer. Which shows you the top 10 largest stadiums in the world. It can then display facts about each stadium. Keep it real simple, nothing fancy. Make sure you write the project idea down too and break it up into small objectives.For example:* Create array of hard coded data* Create stadium card to display name, image, stats like capacity, facts like famous matches played thereThen once you have a basic version, have a look at it and see what to improve. Things like add a database, authentication, better styles, etc.If you don’t relate programming to what you are actually passionate about and enjoy then you’ll probably just eventually drop it.The people you see that are passionate about programming and love it are actually passionate about the area they’re building in rather than the idea of programming itself.",FaisalHoque,2025-08-02 07:06:12,4,learnprogramming,t3_1mfeqv8,False,
n6goofn,"do something you like. field of programming has all sorts of projects. And it couldnt be any more accessible and fun than it was before. cant say i would have stayed with programming if everything was in C, assembly or SQL.",No_Draw_9224,2025-08-02 02:36:54,3,learnprogramming,t3_1mfeqv8,False,
n6eiclu,"If possible, you should make sure your parents are already executives at FAANG",AuWolf19,2025-08-01 19:18:02,416,learnprogramming,t3_1mf5gzs,False,
n6ej9br,"* I would target more a master degree or phd than bachelor* I would ensure I get lot of practice and much more than they do at university* I would be sure I am visible like doing some competition, working on open source stuff or other things that would sell well* I would ensure I could do leetcode hard easily and would master system architecture to shine in interviews.* I would network quite a bit to make it easier.* I would consider that it may take me a few years after graduating before I manage it so it would be more like a 10 years objective* I would allow myself to change my mind if my priorities in life change as just targeting GAFAM is a bit arbitrary.",nicolas_06,2025-08-01 19:22:32,109,learnprogramming,t3_1mf5gzs,False,
n6ekihp,"I wouldn't make the goal getting into FAANG, I'd suggest making the goal something deeper, like becoming a great developer, or launching a project that has impact.Then just work towards that goal, make sure you dedicate enough time for that, and by doing that you'll get closer to a proximate goal of getting into FAANG. Maybe that means spending time mastering DSA using Leetcode, or building a bunch of small projects with different architectures (helpful for systems design), or just focusing on acing your classes.How much time you put into your studies and projects is going to be the biggest factor her under your control. Chasing money is a bit of trap, and don't worry if learning X will help you get into FAANG or not, but worry that learning X will give you the skills to be excellent and building software.Making it in this field is a lot more than getting hired at a specific company or two, and requires continual learning and growth for your entire time in industry. The skills you need to do well as a junior, are only part of the skills you need as a senior, and on top of that it's extremely common to switch tech stacks or even sub-fields (like infra to backend, or product eng.) Be more ambitious, and find a goal that you can both work towards today, but one you won't achieve even after 20 years.It's not a game of inches, but one of miles, and you'll be playing longer than you can see into the future.",justUseAnSvm,2025-08-01 19:28:48,68,learnprogramming,t3_1mf5gzs,False,
n6ejw9h,"The number one thing is to write lots of code. Build a project and keep adding features and complexity.I'm constantly shocked at how many people never write code beyond what they learn in class, not to mention cheating their way through class.If you're genuinely interested in the material and you aim to actually understand and use everything you learn rather than just pass the class, you'll be in the top 10%.After that, the number one thing that will help you get into FAANG is an internship.",dmazzoni,2025-08-01 19:25:43,28,learnprogramming,t3_1mf5gzs,False,
n6empsm,"Get transfer to Stanford, Cal tech, MIT.",Eastern-Zucchini6291,2025-08-01 19:39:49,9,learnprogramming,t3_1mf5gzs,False,
n6fekip,FAANG is overrated,copingthroughlife,2025-08-01 22:01:40,12,learnprogramming,t3_1mf5gzs,False,
n6en9jb,Is FAANG still a status symbol anymore?Who is dying to work for Amazon or Meta in 2025? I’m sure there are some fine departments left but I’m not trying to be in a company that big.,JanitorOPplznerf,2025-08-01 19:42:32,10,learnprogramming,t3_1mf5gzs,False,
n6eospd,"Ugh, avoid FAANG at all costs if you value your mental health",AutomateAway,2025-08-01 19:50:10,5,learnprogramming,t3_1mf5gzs,False,
n6ewilq,step 1. don’t be obsessed with faang,b3anz129,2025-08-01 20:28:37,6,learnprogramming,t3_1mf5gzs,False,
n6ekgra,"Treat uni as a 9 to 5 job from the day your first class starts. Be on top of all your assignments and when you have nothing that needs to be done just code shit up or get ahead of the readings. Don't leave before 5, the more you code the easier it is. You can do leet code, making your own app, it doesn't really matter, what matters is you are staring at code so your brain gets better at it.If you do this you will have a bunch of free time and be ahead of everyone. If you don't do this you will be in a rush all the time and that SUCKS. Luckily I got this advice early so I only did like 1 or 2 all nighters in my entire degree.Also make friends with your tutors and ask questions, it might take a few months but figure out who the smartest people in the year are and try and get into their study groups.Also exercise. You will probably be able to take advantage of free classes at the gym and it does wonders for your mental health. To clarify join the classes as they will teach you how to exercise correctly, don't try and figure it out on your own.If you want to get a partner / find a fun social group join the evening student dance classes. There's usually like salsa or something. If you have some social anxiety this will help MASSIVELY!If you want to code in the evenings too see if there's some kind of competitive programming stuff like capture the flag teams. You get to travel on them and it's a pretty wild experience. You will also become friends with more experienced programmers who can give you great advice.Just to highlight again, 9 to 5 every week day you are studying.Good luck and have fun!",tdifen,2025-08-01 19:28:33,11,learnprogramming,t3_1mf5gzs,False,
n5szbqd,"Vibe coding is a meme, not something to try and emulate. Ais are useful for speeding up boiler plate, discussing possible edge cases, writing some utility functions/methods etc. Its not to a point where it'll just completely write a full app thats actually good yet. Its just a time saver you use where you know it will work for the task at hand like any other tool.",Saereth,2025-07-29 15:05:06,77,learnprogramming,t3_1mcdj71,False,
n5t21s9,"I've tried vibe coding too. On the one hand, I had to fight with the LLM. I wanted to do a graphics application. I don't have much background in computer graphics. I don't know the libraries I should use. So, I let the LLM give me ideas and eventually settled on Python as the language.I've got a 2D array that is supposed to color a cube I'm having the LLM draw. However, it doesn't understand how to associate that 2D array with parts of the cube. It gets it upside down or backwards. I feed it screenshots, and it still can't figure out what's going on. It keeps proclaiming ""this will fix it"" and makes some random changes.Having said that, I did get it to work, eventually. If I had to do it on my own, I would probably have never started. It seemed too daunting, that I had to learn too many new things. So, it got me started, and while I was frustrated at times, it got me a lot closer to finishing than I would have done just by myself.It's the first coding project I've completed on my own since, well, almost ever.I think someone who knows NOTHING only builds really small stuff or has it solve homework problems. I can't imagine they get a real app working.Those who think AI will take over and don't want to learn programming should try it out. It's still far from easy to use, and you'd think it would be easier.",CodeTinkerer,2025-07-29 15:17:54,14,learnprogramming,t3_1mcdj71,False,
n5tcnv8,"If you are not a programmer and don't know how LLM AIs work, it should be a pain.I love it, it helps me to do trivial-boring things. Say, I have this code: while True: perform_stuff() time.sleep(0.1)I just say the prompr *""precise timing""* to Claude, and it gives me 4 answers, including one with a technique which I did not know: `threading.Timer(0.1, scheduled_task)`.I could figure them out myself, or look after in StkOv, but it took 10 secs incl. copy-pasting code and writing prompt. Awesome.Again, if you're not an experienced programmer, probably you don't know why the original solution is bad, okay, you know it, but it was trivial, sometimes you just don't know that your solution is lame.I am learning Rust, and my favorite prompt is: ""*change this code to more idiomatic*"". If you know Rust a little bit, you know what I'm talking about.",ern0plus4,2025-07-29 16:07:24,7,learnprogramming,t3_1mcdj71,False,
n5tm10c,"AI Is good for boilerplate only. Try to ask it to fix a bug, it created three more...",Mk-Daniel,2025-07-29 16:51:04,6,learnprogramming,t3_1mcdj71,False,
n5t8p85,"It's not just you.There's a really fundamental problem here that's hard to get across to a lot of people.The people claiming AI is now writing most of their code for them are *lying*.And because most people don't know how to code, and keep hearing about AI primarily through the hype machine, they're confused when you tell them it's a lie, or they think you're being hyperbolic, or have some massive anti-AI bias, but it's just a really basic situation.The tech just isn't there for these purposes, but AI is the new Crypto or NFTs so there's a huge amount of energy out there spent by AI enthusiasts trying to convince other AI enthusiasts that it's working great.AI has uses. It's genuinely excellent as a second pair of eyes when you've made an obvious mistake that's a pain to see. It's terrible at actually writing code. Not terrible if you don't prompt it right, or terrible if you don't know what you're doing. It's inherently bad at it, and never going to get any better, because what most code requires is decent, sequential reasoning.",KingOfTheHoard,2025-07-29 15:49:02,6,learnprogramming,t3_1mcdj71,False,
n5tbymc,"I'm not good at coding at all - just don't practice a lot. Coding with AI has shown me that it's great for syntax and for whipping up a specific function, but once it gets past a hundred or so lines of code it gets confused about the larger context and becomes progressively more useless as the project advances. My best use case for it projectwise is for, like, short bash or Python scripts.",skoomaking4lyfe,2025-07-29 16:04:08,3,learnprogramming,t3_1mcdj71,False,
n5ucuqn,"1: it's terrible, stop ""giving it a chance"". Spend some time doing actual research and learning. 2: stop saying vibe coding, it a marketing term invented by an AI CEO.Instead of both, say ""cutting and pasting code that's full of bugs"".",mohirl,2025-07-29 18:53:16,6,learnprogramming,t3_1mcdj71,False,
n5sxy45,"I’m pretty new myself but I fuck with CSS mostly. It helps identify concepts and small parts to it but once you interweave large CSS files with lots of cross talks, classes and ID’s it doesn’t know wtf to do.",kotokun,2025-07-29 14:58:32,1,learnprogramming,t3_1mcdj71,False,
n5t0q86,"It depends on how ""vibe"" it is. If you have too generic ideas only, then it's inefficient.",ItchyPlant,2025-07-29 15:11:43,1,learnprogramming,t3_1mcdj71,False,
n5t6z55,"The AI companies are boasting about their LLMs solving huge percentage of some challenging math problems better than majority of people. And then when we use them they reply very stupidly like they were never improved at all. Their responses like ""You're right, this is the way to do X"" pisses me off, once i said ""no this is how to do it"" (wrong answer) and it agreed, this is not how AI should work, it doesn't need to believe what the user told it like it's 100% truth. It should only work like that if the user tells it to act like that, not in casual conversation without user being aware of it.",RealMadHouse,2025-07-29 15:41:08,1,learnprogramming,t3_1mcdj71,False,
n663ewr,"My first job was a long time ago, but I can remember some of what was involved.I was brought in as a Junior Web developer straight out of high school, at 17. I was only employed there for just over a year as the company went into administration after that.For the first 6 months, most of my work was making changes to the company website, updating pages, adding new functionality, fixing bugs etc.After the first 6 months, the company decided to redesign the website and to try to implement a proper content management system for the website and I was given the task of finding the right CMS, putting together a proposal for that CMS and then implementing it. I also did the website redesign (although I was building pages based off wireframes and a spec written by someone else, I'm not a graphical person). About a week after the launch the whole company went into administration, so no one really ever got to use my new website.It was a small multinational and I was working out of their HQ. The web team was basically only 2 of us, and my boss spent most of his time working on the ecommerce site, so I got a huge amount of freedom to learn and try new things. Edit: If anyone's wondering how long ago this was, I was working with classic ASP, asp.net 1.1 and webforms (which were all cutting edge at the time). Also Tables were an acceptable way of doing a 3 column page layout",zeocrash,2025-07-31 14:15:20,23,learnprogramming,t3_1me23kg,False,
n6605tz,Sit on reddit,MicahM_,2025-07-31 13:59:19,41,learnprogramming,t3_1me23kg,False,
n663b8v,"There's no consistent answer. Some jobs, like working in a restaurant or working in a hospital, have similar setups and similar goals. Software companies can ask you to do whatever. Fix bugs. Attend meetings. Work on a small project. Could be as bad as, the senior devs all quit, and you're now in charge of the project. Or maybe the senior devs are swamped, and you have no idea what to do. Some jobs are not well-thought out. Like they forgot to get you a laptop so you sit for a while. The typical first few days (if there's no bootcamp) is to get your laptop set up and maybe install the main app if there is one. You begin to attend meetings, and maybe start looking at the code base. You'll probably be introduced to some task management system like Jira, maybe the company Wiki, some way to deploy your code, some way to test, etc.I mean, that's just an approximate guess. Could be something else depending on how well run the company is. You might get lots of help or you might be left to fend for yourself. Probably somewhere in between.",CodeTinkerer,2025-07-31 14:14:50,16,learnprogramming,t3_1me23kg,False,
n660mro,"Basically impossible to tell.My first job I was tossed into creating a .Net website roughly the complexity of booking.com from scratch, although I didn't understand most concepts behind making that work well at that point...I built a decent database, but everything else I'd do differently now. I left that job after a year and am in a better place now.",EliSka93,2025-07-31 14:01:37,6,learnprogramming,t3_1me23kg,False,
n66ib8v,"Still in my first job, self taught. I got lucky to get a contract 1099 job with a guy that created a web application for our local clerk of court office in a small rural town. He also has various startups and makes custom web apps for businesses in our area. At the beginning I mainly just reviewed the code for the court app. It was on a much older version of Angular so he had me begin rewriting the entire app in the latest version of angular which accelerated my learning exponentially. Then soon after a new client came in requesting a custom web application for his business and my employer handed it all to me. So I have spent most of my time meeting with that client, understanding his data and building a web app from scratch. It is now in production so now I implement feature request or fix bugs. I also will work on various projects he has with other clients, updating old code or adding new features. We also do IT for the court house and 911 center so I go on site every once in a while and fix network or equipment issues. It is just me and my employer there are no other employees except some Ukrainian guy that doesn’t live here that does some free lance work for him. I am extremely fortunate to find myself in the position I am in and to my knowledge this is not common in the programming world. I am terrified of the day I have to apply for a job at a company with steep competition and strict practices.",JuicyJBear94,2025-07-31 15:25:44,6,learnprogramming,t3_1me23kg,False,
n66il3q,"My first ""programming job"" was really just a sysadmin job where I took it upon myself to port an underutilized PHP internal app to Ruby on Rails and made it better. But I mark that as my first professional programming experience because it introduced four things:* Source code management (subversion at the time)* Writing tests* Deploying vs editting files directly on the server* Collaborating with a frontend guy (team work)From there I went freelance for a little while and then got a full time job working on an eCommerce site where I further developed the above ""soft"" skills further. Writing the actual code is only part of the job.",huuaaang,2025-07-31 15:27:00,3,learnprogramming,t3_1me23kg,False,
n66jxzx,"Just my personal experience.I started as a junior iOS developer, and my day to day job was basically use existing functions and modules to create new features or screens, I just placed them in the view controllers, did some storyboard stuff and very light algorithm and business logic but always very simple. I did not implement any type of module or complex function, I just used them accordingly somewhere.",No-Addendum6379,2025-07-31 15:33:21,2,learnprogramming,t3_1me23kg,False,
n66vr9y,My first programming job was writing C code that interfaced with an existing FORTRAN program that interpreted satellite data for the air traffic control system.,FutureProofRelic,2025-07-31 16:28:39,2,learnprogramming,t3_1me23kg,False,
n675zca,"My first job was writing a system for reading images from disk on Playstation 1, used in a new game engine. I was pretty much given the file format. It was like Amiga formats I was familiar with. So no jpg libraries to use or anything. Then I wrote the API for the render to get the resources from disk.",tcpukl,2025-07-31 17:15:56,2,learnprogramming,t3_1me23kg,False,
n67h5rs,"Work for a bank, help a guy working on his mess of an angular app to suggest investment accounts.I was relieved that this was pro work , i was scared of being not good enought , turn out must people are useless and clueless.",berlingoqcc,2025-07-31 18:06:28,2,learnprogramming,t3_1me23kg,False,
n6hjzcx,"I think it's important to understand that LeetCode is not a place for beginner challenges. The easy problems are supposed to be easy for someone who finished a 4-year Computer Science degree, or at least someone who finished a DS&A class.",dmazzoni,2025-08-02 06:42:17,30,learnprogramming,t3_1mfjc36,False,
n6hngaj,"My one suggestion to you, take it or leave it. Going forward, after you complete a chapter or two, go back to the start of the book and work through all the earlier chapters one more time. This will help to cement those details in your mind, and as the information starts to stick, you should find it much easier to revisit those earlier chapters. You may end up working though all of these chapters three or four times, and that should be your goal. Using this process, it should be much easier to retain the information you have just learned.",ScholarNo5983,2025-08-02 07:14:27,12,learnprogramming,t3_1mfjc36,False,
n6jfhfa,"A huge hurdle for me in learning to program is dealing with frustration. I have learned that persistence is a critical skill in learning to program. While I wouldn’t recommend trying LeetCode until you are ready to apply for jobs (in my opinion it’s only purpose is to prepare you for technical interviews), it’s great that you tried it and weren’t so frustrated by your lack of ability that you quit trying to learn to program all together.",Quokax,2025-08-02 15:21:12,7,learnprogramming,t3_1mfjc36,False,
n6kwchw,"if you want to try something different try codeabbey it has easy tasks on level of ""hello world"" and higher",_nerfur_,2025-08-02 20:06:48,4,learnprogramming,t3_1mfjc36,False,
n6l532l,"You can try codewars or hackerrank, it is interesting alternatives",SimpleAirport5444,2025-08-02 20:54:12,3,learnprogramming,t3_1mfjc36,False,
n6mtdvv,"There’s a site called Exercism which offers free problems for lots of different programming languages, Python included. I completed almost all of them for Python, but it took me a while as they range from easy (like actually easy, not leetcode easy) to harder stuff. There’s also community solutions afterwards so u can review ur code and try to make it more efficient for next time. Pretty neat stuff.",licensed_moron,2025-08-03 03:00:14,3,learnprogramming,t3_1mfjc36,False,
n6j8kmg,What is the advice that people gave you?,Intrepid_Loss_8081,2025-08-02 14:44:48,2,learnprogramming,t3_1mfjc36,False,
n6nt9wj,"Thank you for the positivity. I'm just on chapter 6 as well. Around 4 years ago I was into coding; learning JavaScript and Python simultaneously but then life happened and I had to stop. Picking it back up was daunting with the amount of time not exercising those skills but I'm enjoying it a lot more. Just like an athlete picking up a sport after retirement, those muscles are just dormant and need warming up againJust finished an exercise that stumped me four years ago so I'm flying!",The_Makster,2025-08-03 08:00:19,2,learnprogramming,t3_1mfjc36,False,
n6lp1pj,Two weeks in and you’re already wrestling Leetcode? That’s like sparring before warm-up. Respect for jumping in.,alpinebuzz,2025-08-02 22:47:51,1,learnprogramming,t3_1mfjc36,False,
n6hk4cn,"Yeah I wanted to do something different other than just read a book and follow it, I only knew about Leetcode at the time",Horror-Intern-2975,2025-08-02 06:43:35,7,learnprogramming,t1_n6hjzcx,True,
n5sejot,"I really don't know where you people find AIs that spit out ""entire apps"" and are such an increase in productivity. With all respect, is your code craftsmanship meant to be limited to cookie cutter CRUD apps? Cause last I checked (and I check regularly, and with the latest available models), AI falls apart completely with any more complex, custom logic or any bespoke code, which is also where the craftsmanship would shine anyway.I have no problem to use AI for boilerplate, derivative code that's nothing more but busywork, and for parts that require any finesse whatsoever, AI is just a waste of time anyway. AI is simple - the more predictable the next line is, the better it will guess it. Any actually interesting code is not easy to guess, that's why AI based on the current technology fails and will fail by definition.",voyti,2025-07-29 13:21:09,72,learnprogramming,t3_1mcatjd,False,
n5tcbtu,"Grain of salt and all that, but I've been a mediocre programmer since 2015, and having to debug and optimize AI slop the last few months is becoming so increasingly tedious, I'm actually dedicating a part of my day, everyday to improving my programming skills so that I just stop depending on AI altogether.",The_Barkness,2025-07-29 16:05:51,14,learnprogramming,t3_1mcatjd,False,
n5ugqg4,"""Back in the day writing code felt like art."" When was this?""The craftsmanship of coding feels like it is dying"" You can still def do this since AI isn't doing quality craftsmanship.What apps are you generating with ease? What job does even require you to do this. Most of the time you're dealing with much older and established code that AI is defnitely isn't able to handle without some guidance. Half of the time it just decides to do style changes (unprompted) on files I didn't even know we had. Use it to help you find things, suggest things etc but you do the actual coding. You have articles like [https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/](https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/) so you definitely aren't faster just blindly using AI",MrKnives,2025-07-29 19:11:22,8,learnprogramming,t3_1mcatjd,False,
n5tzpon,"It's not about copying and pasting mindlessly. I use it as a tool to generate boilerplate code, which I always review, understand, and tweak as needed. We should be problem solvers, not just code-writing machines.",framorvaz,2025-07-29 17:52:35,4,learnprogramming,t3_1mcatjd,False,
n5scqna,"> The craftsmanship of coding feels like it is dying. I used to spend hours reading documentation, slowly building something through rigorous testing and tweaking, enjoying every part of the process. Now I just prompt and paste.Thw only thing that has changed is you. If you hate it stop.",Digital-Chupacabra,2025-07-29 13:11:10,9,learnprogramming,t3_1mcatjd,False,
n5utooc,"AI is great for 'boilerplate' code but after that the programmer uses his/hers skills to code the more complex logic and functionality of the program. The programmer will choose what data structures to use, what type of arguments to pass to functions (value or reference). The programmer will debug as well as optimize the code and more. How should the program flow, programmer. Creative ideas, programmer.",mpw-linux,2025-07-29 20:13:00,3,learnprogramming,t3_1mcatjd,False,
n5zplyh,"> With AI spitting out entire appsIt's not. That's a myth. > It doesn’t feel the same anymore. The craftsmanship of coding feels like it is dying.Now you're just being melodramatic. > I used to spend hours reading documentation, slowly building something through rigorous testing and tweaking,That's because you were a beginner. It sounds like you're just getting burnt out and your hobby has become a real job. > Now I just prompt and paste. So you've gotten lazy.In my day we just complained about endless meetings. You kids and your fancy AI doing your work for you...",huuaaang,2025-07-30 15:12:33,3,learnprogramming,t3_1mcatjd,False,
n5vw7qy,"the only programmers losing their job to AI are the ones who have offloaded their skills to it.Even if you need to use AI as a company policy, you should be using your expertise to optimize it.youre losing skill and passion by offloading your work. Genuinely stop using AI, especially *how* you are using it because you haven't been programming by the sounds of it.If I just showed up for 8 hours a day but didn't work, I'd probably look for some other way to actually contribute what I have to offer - which sounds like where you're at.**Im bias as all hell against LLMs",IdiotInIT,2025-07-29 23:26:29,2,learnprogramming,t3_1mcatjd,False,
n5ueg6x,You can instead of coding by your hands learn how to prompt ai then the answer is totally dependent on your brain and Creativity which gives you the emotions like before.But at the End I'm agree with you. Just copy and paste Without criticism is very boring and unpleasant.,AparsaSh-Dev,2025-07-29 19:00:39,1,learnprogramming,t3_1mcatjd,False,
n5wczxe,"Can you tell me what AI develops entire apps? So I can speed up my productivity too, you know.I tried using AIs to handle basic tasks for me when everyone started saying that AI would ruin programmers' lives and produce outdated, broken, and bug-ridden code. Yeah, it might be faster because some parts are already done and just need tweaking, but that works for small scripts since they are simple and easy to track and fix. However, it's impossible for an AI to create a full app exactly as you want because you can't specify all the details. There will always be things you do through pure automation simply because you're used to coding.Last time I asked an AI to write a server.js to run express, and it just didn’t work. I had to write everything again lol (by writing everything again, I mean going to my GitHub and copying and pasting my last server.js, which was also copy-pasted from my previous project).So no, AI does not destroy programming. There are no AI writing apps on demand, you could use something like Copilot, but it won't make a big difference unless you're doing repetitive coding. And if you are doing that, you're probably coding in the wrong way.People also talk about AI replacing artists, but artists are still working because AI can do some things to represent your ideas. However, it will never capture everything the way you want because your ideas need a brain with empathy to understand what you truly mean and what you want to do it as you wish. An AI can only replicate what you do, and all the details you don't provide, the AI will just do whatever it wants.You can tell an artist, ""I want my character to be like Jhon Wick,"" and they will take your ideas and adapt them to fit Jhon Wick vibes, while an AI will probably do Jhon Wick and just add some wonky details on top of it.",Inmortia,2025-07-30 01:01:10,1,learnprogramming,t3_1mcatjd,False,
n5qnjc3,Also godbolt,HyperWinX,2025-07-29 04:46:29,16,learnprogramming,t3_1mc2a22,False,
n5qwznb,"This is an excellent trick if you want to learn assembly by studying your code.Also note that you can ""disassemble"" object files or executables to browse machine code inside as assembly, which is trickier and less readable than using gcc -S, but it's useful in case you don't have the source available.",captainAwesomePants,2025-07-29 06:05:52,10,learnprogramming,t3_1mc2a22,False,
n5r0ou6,"You don't know what you don't know. There's no way to ""figure"" this out except for stumbling into it.As you grow more experienced you start asking the right questions and more naturally stumble upon useful features.I would recommend looking into the gcc utilities such as objdump, objcopy, etc.",DustRainbow,2025-07-29 06:39:51,8,learnprogramming,t3_1mc2a22,False,
n5rym34,"You aren't an idiot. Quite the contrary, you poked at the boundaries of what you knew and discovered something more. Real programmers do that on a daily basis. You are well on your way.",lewisb42,2025-07-29 11:44:21,7,learnprogramming,t3_1mc2a22,False,
n5rizuy,"I get how easy it is to feel that way, especially with programming, but you don't know something until you know it. Plenty of people go until 55 before they learn something you knew at 15 and vice versa, just happens like that sometimes.",Fallout_NewCheese,2025-07-29 09:35:25,3,learnprogramming,t3_1mc2a22,False,
n5rgfah,"Why would it make you feel stupid, to not know about some very specific flag of gcc? Is it rather, that you didn't search for such a flag, or didn't have the idea to search for it, or that it could exist?I don't see a reason why this should make you feel stupid.",ZelphirKalt,2025-07-29 09:10:37,2,learnprogramming,t3_1mc2a22,False,
n5rul13,"One thing that was really cool when I was leaning assembly(for the same reason you did), was rewriting my program in C, and then comparing the generated assembly code to what I had originally written.",KwyjiboTheGringo,2025-07-29 11:14:52,2,learnprogramming,t3_1mc2a22,False,
n5xj2jl,I also just learned this same thing. An AI told me.,IronAttom,2025-07-30 05:45:15,2,learnprogramming,t3_1mc2a22,False,
n5swnhh,Everyday is an opportunity for learning!,drsoftware,2025-07-29 14:52:26,1,learnprogramming,t3_1mc2a22,False,
n6531rg,-S decrements stupidity,Puzzled-Landscape-44,2025-07-31 10:35:22,1,learnprogramming,t3_1mc2a22,False,
n6nvtjz,"1) You should look at what is in demand in your area, or areas you can realistically move to.2) Pick a language, learn it, start building software with it.3) Build real software, not just tutorials, pretend Uber/Dominos/Twitter have hired you to rewrite their system, and do it.",ToThePillory,2025-08-03 08:25:18,53,learnprogramming,t3_1mgdw2w,False,
n6nvo79,"Developer for about 5 years now, honesty I think boot.dev is pretty good, I tried it out just to see the curriculum and it’s solid.It’s paid though and not cheap, so either that’s a ripoff or motivation to not waste your money.Josh Comeau has a CSS course that I completed just because my CSS was actual shit and it’s also top notch, also expensive though I got it discounted for $350 maybe?HTML doesn’t need a course tbh.If you’re looking for free there’s The Odin Project, which is a web dev focused path that is completely self paced and the least hand holding, which is good. That’s where I started years ago. They have 2 tracks, Ruby and JS. Either one is fine, Ruby is the less shit language (objectively speaking it’s just better, I will fight any experienced devs reading this) but JS might be the bette option for entry level jobs.So, paid courses boot.dev for backend, josh Comeau CSS for JS developers for front end. Free is The Odin Project.If you do what they say and make the stupid little projects you can be job ready in like, 6 months to a year maybe. Host them of netlify or whatever.",The_Shryk,2025-08-03 08:23:50,9,learnprogramming,t3_1mgdw2w,False,
n6nxa52,Start by not having AI write your Reddit posts,youtheotube2,2025-08-03 08:39:48,25,learnprogramming,t3_1mgdw2w,False,
n6nvaef,I need the same advice because I'm in the same situation except i graduated as a mechanical engineer. However I took a free course from Harvard called cs50x and it's a great introduction to computer science in general.,SpaceMonkey1505,2025-08-03 08:20:00,6,learnprogramming,t3_1mgdw2w,False,
n6nvcht,Build a project that takes you to and from the search bar. It'll be on you to use it! Good luck!,Hail2Hue,2025-08-03 08:20:35,4,learnprogramming,t3_1mgdw2w,False,
n6nvjjf,"Make sure to check out your local job market, because IT is in a slump in many places and AI is making things even more uncertain. When it comes to being hired I'd say the golden days of self taught devs is over and it's harder to get hired without formal education or great contacts. The other route is to run your own business. There's a ton of businesses who need specialized software for their workflows. If you can carve out a niche for yourself and sell directly to customers you have a shot even as a self taught dev.",Ratatoski,2025-08-03 08:22:33,3,learnprogramming,t3_1mgdw2w,False,
n6o33qv,"One of my friend who has done MCA suggested me that start from Java or C to build that in depth programming knowledge. After that slowly move into any niche such MERN, JAVA + springboot, android dev etc. For me it is JAVA and then springboot, I want to learn backend first. If anyone experienced guide me here, than it would be good help for me. I am also at the same situation like OP.",Sohamgon2001,2025-08-03 09:38:21,2,learnprogramming,t3_1mgdw2w,False,
n6o9zdz,"Hmm learn from the basics. Start with CS50. Once u know the fundamentals, start building small projects first. Could be some simple algorithm, a mini game etc. Currently I'm learning C, and if u are interested in C you can also read K.N King introduction to C. Make sure u do all the programming projects from that book without the help of AI (or at least minimal usage)",kongwahenergy,2025-08-03 10:44:43,1,learnprogramming,t3_1mgdw2w,False,
n6ohoqg,"Bootcamps are alternative ways into less specialised areas of software development for people who don't have degrees. Most of them focus on front end web dev, lots cover back end too. Having hired bootcamp attendees, I've concluded that it's a really mixed bag and depends entirely on the provider. Some are decent (still never as good as recent CS grads IME) and some aren't worth the paper the certificate is printed on. Most of them inflate the numbers that communicate the success of their past grads (some by giving grads jobs themselves etc.).Bootcamps aren't a requirement anywhere, and there are many roles that don't require a degree either, as long as you can hold your own in a technical discussion and/or test, or demonstrate your competence by showing us things you've built. (Note: this is getting harder as we see more generative AI submissions etc.)So your options are:1. Do a bootcamp and use that to demonstrate your competency.2. Self-teach with online resources (of which there are plenty).Either way you'll probably want to build things to show if asked. However you learn, you should decide what area of dev you want to get into (e.g. web, mobile, desktop, embedded, distributed systems etc.) and start looking at job ads in that area. Narrow down the languages and tools that you see desired. Focus on learning how to use those. E.g. if you want to be a game dev (oof) you'll probably want to learn C++, maybe C#, maybe JS, depending on the platforms/engines you see jobs for... etc.Once you can build things, apply to jobs that don't list a degree as a requirement. See where you get. Interview experience is never a bad thing so there's no real downside.",HashDefTrueFalse,2025-08-03 11:49:04,1,learnprogramming,t3_1mgdw2w,False,
n6ojm7m,Do you mind if I ask what makes you want to be a software developer?,TrainingVegetable949,2025-08-03 12:03:42,1,learnprogramming,t3_1mgdw2w,False,
n5zakvx,"One advice I can give you is pick one resource to learn what you want and stick to it otherwise you will land in tutorial hell because each topic can be its own rabbit hole and you need to know what to learn and at what point and when it's time to move on to the next topic. One resource I used to learn Web Development is the Odin Project. It teaches you full stack web development, is free and open source. Created by developers for beginners. If you know HTML and CSS you could skip that part of course and directly start with Javascript. They also have projects you have to do which start with stuff like Rock Paper Scissors and you end with a project at the end of the course where you have to build a full stack Social Network. It's a difficult course but so worth it if you are serious about learning Web development.",sandspiegel,2025-07-30 13:59:13,27,learnprogramming,t3_1md6uii,False,
n60vygb,"I know this is a bit off-topic, but I think 18 is when you should be trying a lot of things out and so what that means is that you're going to make a lot of mistakes. This is a good thing because you'll learn from them. Try a thing - works/doesn't work? Surprising outcome? You don't like it? Good. Get out there and make some mistakes. This goes for programming too. Learn a language, try a new framework, experiment with a design patterns. You'll never have as much free time and energy as you do now while you're young - use it",SeriousDabbler,2025-07-30 18:28:02,5,learnprogramming,t3_1md6uii,False,
n5zeepn,"1. Find something to learn. Set a deadline. If it ends forget about it, move to the next. You'll come back anyway2. Yt short brainrot to get an ""in"" for a tech framework or library just to warm up3. Read the docs homepage and follow the tutorial.4. Give up halfway bc its hard.5. Restart but this time you get the pattern so you stray off course for some time. 6. Realize you wrote sloppy code but hey how did you create that small project using that new tech7. Implement that library or framework somewhere8. Realize some stuff gets repetitive, search a feature on how to solve that. Repeat",sean_carr1,2025-07-30 14:18:19,4,learnprogramming,t3_1md6uii,False,
n5za1ny,i need to start living too...,Superok211,2025-07-30 13:56:34,2,learnprogramming,t3_1md6uii,False,
n60toyd,"Hello, hopping in this post. Do I need to study Data structures and algorithm to be a good programmer?",Juggernaut_Spammer,2025-07-30 18:17:30,-1,learnprogramming,t3_1md6uii,False,
n5zdmdy,Thanks! Are you still specializing in web development? How long did it take you to learn?,Qusko,2025-07-30 14:14:27,2,learnprogramming,t1_n5zakvx,True,
n60ydw2,"Such words motivate me not to give up, thanks!",Qusko,2025-07-30 18:39:19,2,learnprogramming,t1_n60vygb,True,
n5zznke,Indeed just keep going on.,Proud_Possible_5704,2025-07-30 16:00:04,2,learnprogramming,t1_n5zeepn,False,
n5z7q0h,Why?:loudly_crying_face:,Qusko,2025-07-30 13:44:28,0,learnprogramming,t1_n5z7bbg,True,
n5nrdo6,"CS50x is truly one of the best resources out there.I recommend that you do not watch the class straight. That you watch for shorter periods of time in which you can maintain your concentration at 100% (30-40m in my case).While you watch the class: take notes, keep the code editor open to practice the things you are learning. If you have any doubts, did not understand something 100% or simply want to know more about it, ask chatgpt. That's the only use you should have for now.Just accept that it will take you hours to complete an exercise until you can solve it. In your daily life as a programmer you are going to face situations like this all the time.",Neat-Computer546,2025-07-28 19:05:03,70,learnprogramming,t3_1mbovx7,False,
n5odzmt,How can someone be passionate about something they’ve never done before or have any experience with?,Gawd_Awful,2025-07-28 20:52:18,17,learnprogramming,t3_1mbovx7,False,
n5p8x1s,"my #1 tip to you is to completely stop using genAI tools until you can orient yourself without it. you are using it as a crutch and it's hindering yourself from learning anything, even outside of cs",NefariousnessMean959,2025-07-28 23:33:54,8,learnprogramming,t3_1mbovx7,False,
n5o3cz8,"anything is a ""good"" way to learn coding if you are passionate about it. You don't necessarily have to do CS50 to learn. There are tons of self-learning websites out there that can teach you coding at your own pace.",Islandboi4life,2025-07-28 20:02:27,3,learnprogramming,t3_1mbovx7,False,
n5nt5ls,"CS50 is a fantastic course, but it focuses more on teaching fundamental programming skills rather than teaching you how to build something right now. That's not a bad thing, but it might not be what you want.You won't get any value out of it if you just ask ChatGPT for the answers. The whole point is you're supposed to figure them out.You're not supposed to just ""know"" the answer. Experiment with it. Try things. Get stuck, try other things. You'll never learn if you don't actually struggle.If you really are stuck, ask for a hint - ideally from a real human like here on r/learnprogramming \- we'll be happy to point you in the right direction without giving it away. ChatGPT can do that to if you ask it to only give you a hint and not the answer.If you want something more practical try The Odin Project or FreeCodeCamp. You'll eventually need to learn all the same stuff, the difference is they teach by having you learn to actually build working websites as you go.",dmazzoni,2025-07-28 19:13:40,2,learnprogramming,t3_1mbovx7,False,
n5poth7,"My advice is to try to get comfortable with not understanding things, as it will happen a lot! I think it's more productive to simply seek answers to any difficulties you encounter (via chatgpt, stackoverflow, or a variety of blogs) rather than stress yourself out trying to resolve the problem yourself.No one is born knowing these things, it isnt an innate talent. Just keep steadily learning from the discoveries and innovations of others, and you'll gradually acquire a toolset capable of solving incrementally more difficult challenges. Just take it easy on yourself and remember to have fun!",TaoJChi,2025-07-29 01:03:45,2,learnprogramming,t3_1mbovx7,False,
n5nqg47,"I'm in week 4. Yes, I think so. It will give you a good start.",frivolityflourish,2025-07-28 19:00:27,1,learnprogramming,t3_1mbovx7,False,
n5nsk47,"Yes. I suspect you're getting frustrated and that usually doesn't make coding easier. The best thing you can do is just let yourself feel frustrated. You could be getting annoyed at how unfamiliar everything feels, or even annoyed with yourself if you expected to get & do everything in under an hour, and now you're disappointing yourself. Or a thousand other different feelings.Try again once the feeling subsides a bit. You'll get used to the feeling of being lost or annoyed, then you'll realize its not such a big deal. The first hundred times though, it will 100% feel like the biggest deal ever.",AccidentalNap,2025-07-28 19:10:47,1,learnprogramming,t3_1mbovx7,False,
n5q4asi,"Cs50 is great and teaches a great base line. I started with it and couldnt finish at first. You can check out 'the odin project'. Start with the foundations coarse. Its free and teaches full stack web development from the beginning. If you do it, id still sudgest doing cs50 after.And stop using AI! You need to learn to research and think for yourself! AI is a great tool but put it to the side until you can do projects on your own",CapnCoin,2025-07-29 02:34:19,1,learnprogramming,t3_1mbovx7,False,
n5r7dzb,"Don't use chatgpt, use CS50's own chatbot that is implemented in vs code. It actually talks you through the problem without straight up giving you the answer and is much better for learning. You also aren't allowed to use any other AI (I have no idea if they can actually test for this, considering the amount of people that take this course).",GildedGeese,2025-07-29 07:42:52,1,learnprogramming,t3_1mbovx7,False,
n60vznx,"Beyond the stuff you mentioned, it also just makes you more capable at other stuffEvery hobby of mine, I have written programs for, either to calculate values or create data/visualizations/templates/whatever, or to create programs to do stuff for my hobby in some way. I know that's vague sowoodworking: \- I've made lots of calculators, template creators, etcphotography: \- various calculators \- wrote some timelapse software \- wrote many scripts to manage my library of digital photospoker \- wrote simulators, solvers, all kinds of stuff3d printing, cnc \- wrote all kinds of gcode generators, CAM \- wrote code to make PCBs on small CNC machines \- wrote CNC visualizers - gcode in, shows what the machine will do",Buttleston,2025-07-30 18:28:11,39,learnprogramming,t3_1mde707,False,
n60wrfg,"Regardless of whether you choose to go pro or not - learning to code at the very least unlocks a lot of things you can do with a computer.I mean, you have programs and websites for all sorts of things - but when you need to do XYZ and no program/website can handle that with ease, you can whip up some code for solving XYZ yourself.Also, there's of course automating things through code - even everyday things. It empowers you to work smarter, not harder.Learning even just basic coding gives you some independence and can help you save money in the long run.",Potential_Copy27,2025-07-30 18:31:46,8,learnprogramming,t3_1mde707,False,
n612xyi,I just learn coding because i enjoy it. No other reason. It's like I'm doing puzzles. I like assembling things and making things work.,Jourleal,2025-07-30 19:00:52,8,learnprogramming,t3_1mde707,False,
n60vd4i,"I do hope it helps with problem solving! Sometimes as a cs major I’ll be in day to day life and think schizophrenically “I may have came up with that solution in my day to day because I trained my problem solving skills via coding”, but I have no basis or control to truly make that claim.",Cautious-Bet-9707,2025-07-30 18:25:17,6,learnprogramming,t3_1mde707,False,
n6142i5,"I genuinely have fun with it even when I'm not working, so if you get ""bit by the coding bug"" so to speak then it's a fun hobby.Learning how to problem solve is a big part of it - it forces logical thinking, encourages organization, and grants you some more power over computers in a computer dominated world.That and it's also quite accessible now compared to even 10-15 years ago.",anotherMichaelDev,2025-07-30 19:06:26,5,learnprogramming,t3_1mde707,False,
n60wvy4,"Is learning to code an important skill to learn? No. Are all of those other skills good skills to learn? Sure. Is learning to code the best way to learn those skills? Maybe notIf you’re going to teach kids to code, teach them with that being the goal. If they pick up other skills, cool. But we don’t teach art with the idea that kids are going to learn anything more than “art”.",Gawd_Awful,2025-07-30 18:32:21,4,learnprogramming,t3_1mde707,False,
n62gobh,"Looks like a good list.I've always contended that the most valuable trait for a programmer is a high tolerance for frustration, so that's your first one.Problem solving is more nuanced. There are all kinds of ways to solve a problem, but programming includes a required strategy. You must break large problems into smaller, more approachable, chunks.You also have to be able to define the problem explicitly. No relying on another human to intuit your intent. Instructions much be clear and unambiguous. There's a TikTok going around showing a teacher following written instructions to construct a peanut butter and jelly sandwich. With predictably comical results. Most humans fail this, at least the first go. Programmers don't.Finally, and this is a rare skill indeed, you must be able to diagnose problems. If a program runs first go, great. However, it's debugging where learning really happens. Diagnostics, probably even more than solving the initial problem presented, is a valuable life skill.",WystanH,2025-07-30 23:05:08,3,learnprogramming,t3_1mde707,False,
n60wpbs,"I think it's similar to mathematics, you can encourage people to learn it for x reason but that doesn't mean they will use or need it depending on their future career path.I guess exposing people to programming to see if they enjoy something logic-based is worth the time (which from what I've heard is pretty standard in highschool nowadays)But outside of that not really. Programming is not for everyone and not everyone enjoys or likes programming.",Wingedchestnut,2025-07-30 18:31:30,2,learnprogramming,t3_1mde707,False,
n619b0o,"I think it is a valuable skill. It is the art of logic.It can teach business logic. I've found that after 20 or so years of coding as my primary activity, both for pay and not for pay, that I'm now transcending that engineering knowledge into other engineering disciplines.It's also a puzzle solving activity. You could just be doing crossword puzzles or playing solitaire, but it takes it to a whole new level to make games and other things.The fact that a solution exists is not a deterrent to code it myself. We all start somewhere.",for1114,2025-07-30 19:31:36,2,learnprogramming,t3_1mde707,False,
n61h6mf,"When I was learning, it was 1986. I did it because it was fun. I turned out to be rather good at it, so that became what I've mostly done to pay bills in my adult life. Now I manage other people who do this.Knowing how to code has application elsewhere in life. Most skills do, because skills are a set of repeated behaviors, and there is overlap.However, it isn't for everyone. Not everybody is into drawing. Not everybody is into reading. Not everybody is into coding. Like the vegetables on yer plate, try it, see if you like it. Maybe you try it a couple of times. Eventually, you don't have to try it anymore if you don't want.Other skills that people get wide benefit from: cooking with something other than a microwave, baking (which is different than cooking, though not everybody realizes this), baking is about precision.at least a small amount of sewing enough to repair a hole or reattach a button, sewing is a very technical skill.how to safely load/unload/clean a gun (assuming that having a gun is a thing in yer world), how to change the oil on a car or other gas powered apparatus (though as we go to battery powered everything, this becomes less of a thing), headlights, taillights, etc.how to replace a light fixture or light switch, and how to replace the innards of a toilet tank (which I had to do today). faucet replacement not a bad thing to know either.knowing how to change air filters, on whichever things in yer life have airfilters.",ShoddyDivide4049,2025-07-30 20:09:09,2,learnprogramming,t3_1mde707,False,
n5v8jga,"As strange as it sounds, but *stop watching tutorials* - really, that's the entire point.Start *doing*.Watching tutorials to become a programmer is like reading novels to become an author. You can *read and understand* a book, but you wouldn't be able to *write* a comprehensive, fully developed novel, if you didn't *actively practice*. > watching videos, following along with examples, and I understand everything in the moment....and there we have the problem. You, like most people, focus on the *code*, on the *final result*, on the *completed car*. You don't focus on what actually leads to the code, on the *design process*, which is far, far more important than the code itself.You need to learn to *analyze and dissect problems*, to *break them down*, to *create individual solutions* to the sub problems that *then* can be *implemented* in any programming language.Learn to plan. Sit down with pencil and paper and start from there. Not from the code. Start from the problem, break it down, solve it *your* way, don't even think about programming. Once, you have a working solution, test it. Track the steps you took. The more detailed, the better. Then, convert the solution into code.Start smaller. Hackerrank and Leetcode are for experienced programmers preparing for interviews. Start with [Exercism](https://exercism.org).And if you need to brush up on Python fundamentals, do a *proper* course from A to Z: MOOC [Python Programming 2025](https://programming-25.mooc.fi) from the University of Helsinki.I'll just leave some of my former comments from /r/learnprogramming here:+ https://www.reddit.com/r/learnprogramming/comments/1j9ezmx/getting_better_at_coding/mhdna2e/+ https://www.reddit.com/r/learnprogramming/comments/1iz7wv3/how_to_become_a_better_engineer/mf10qbg/+ https://www.reddit.com/r/learnprogramming/comments/1j3w7x9/how_to_actually_learn_problem_solving_skills/mg3q9ya/+ https://www.reddit.com/r/learnprogramming/comments/1ioehwa/struggling_to_put_together_my_own_code/mcirhxq/+ https://redd.it/1jyd36k",aqua_regis,2025-07-29 21:22:49,38,learnprogramming,t3_1mcnubb,False,
n5vbtrz,It's because you mostly HAVEN'T started learning yet.,lukkasz323,2025-07-29 21:39:12,10,learnprogramming,t3_1mcnubb,False,
n5v873t,"This is completely normal. Not just in programming, but in maths and so on too. Watching someone else do it is an important first step, but it's **only** a first step. Doing it yourself is actually where most of the difficulty is. You can't skip it, and you can't make it go faster or easier (assuming you're working from good resources) - you just have to push through the difficulty.",numeralbug,2025-07-29 21:21:07,9,learnprogramming,t3_1mcnubb,False,
n5va7eo,"It's normal. You only *really* learn by doing. You can memorise as much as you like, it will rarely make you good at anything except quizzes. It's a skill you have to cultivate by deliberate practice. Research can be a large part of the job, but it's only part.If you've truly no idea where to start, you picked a problem beyond your current abilities. Do something simpler. Print your name. Make it ask your name first. Make it calculate something etc. You want to pick a problem where you're not sure how to solve the whole thing but you can identify some key parts and what they'd look like when broken down.",HashDefTrueFalse,2025-07-29 21:31:03,3,learnprogramming,t3_1mcnubb,False,
n5v86l7,Most people don’t understand that 99% of coding is searching on stack overflow.,emergent-emergency,2025-07-29 21:21:03,4,learnprogramming,t3_1mcnubb,False,
n5v94pb,"Seems like a ton of people struggling with the same thing here. It's normal. The knowledge of instructions and other theoretical language parts does not translate into intuitive understanding on how to use them to build functional code. Knowing all Chinese words is still far from the ability to write a poem in Chinese. The proper intuition takes time and practice to train.In the meantime, try to reverse your thinking. Think what your starting with and what you want to end up with. Then, go from the end to the beginning. For example, if I want to write a function that calculates the cumulative age of all the users of the system, the input is the user list, and the output is a number. Then, I know that number needs to be a sum of each age of each user. So, I need to get user age from user entry. So, I need to compare their birth date with current date. You can probably write a function for each of these steps, and stitch them together. Not sure if that helps at this stage, but the idea might come in handy.",voyti,2025-07-29 21:25:42,2,learnprogramming,t3_1mcnubb,False,
n5v9efb,"It's good to know how to start a new software project. That's something usually taught in software classes. For instance, Visual Studio has a process for creating a new project, and there's a similar ""new project"" process for just about everything.Beyond the basics though, it's common to look things up online. You won't be able to memorize all the syntax and everything of a programming language.",RolandMT32,2025-07-29 21:27:02,1,learnprogramming,t3_1mcnubb,False,
n5vakvw,"My motto with learning has become ""maximize friction to maximize learning"". Learning loops? Watch one example, then put it away and code from scratch, then compare to see what you missed / messed up.There are really two main sides of understanding something I think: One is ""I can say/grasp the words"" and the other is ""I can feel what to do here"". People often try to use the first to reinforce the second, but that's the wrong order imo. I got stuck in that pit for a long time.Take stabs at stuff on your own (ie, watch a tutorial, then put it away and try to recall by coding yourself - bonus points for meaningful variation from their example) and I promise you that muscle will grow pretty quickly.Something more actionable that helps me a ton is writing out the comments for what needs to happen at each step, THEN flesh it out with code. Over time, I find myself doing that less and less as you tend to hit similar solution patterns.",AtlasLeCleetus,2025-07-29 21:32:54,1,learnprogramming,t3_1mcnubb,False,
n5ve1lt,Don't worry it happens to everyone :winking_face: i've been programming for 25 years and i still hit that wall once in a while.Find a simple example of the idea you have in your head and start with modifying that. If you're not exprienced it's hard to get the skeleton working for any idea. :smiling_face_with_smiling_eyes:,TomatoEqual,2025-07-29 21:50:20,1,learnprogramming,t3_1mcnubb,False,
n5vekr8,"Everybody experience this. Don't worry, you're on a good track :)",Glass_Albatross1,2025-07-29 21:53:02,1,learnprogramming,t3_1mcnubb,False,
n6lm5bk,"For personal education/learning purpsoses, I wouldn't worry about it. However, if you're ever working on a project with other people, it's important to be able to articulate your solution(s)/code in the manner at which was decided for the project.",Dappster98,2025-08-02 22:30:38,52,learnprogramming,t3_1mg33wb,False,
n6lpm42,"Classes shine when you manage state or behavior. If you’re not doing that, free functions keep things simpler.",alpinebuzz,2025-08-02 22:51:11,33,learnprogramming,t3_1mg33wb,False,
n6lqr6i,"If you find yourself writing a class and filling it with static methods then congratulations, you've just discovered namespaces.Change class to namespace and remove static, you're done.---If you're doing that so that the class can be a friend of another class, back away slowly and think about what you're doing.---Unlike Java and C#, with C++ the entry point to your program is a free function called main. The program fundamentally starts in a free function, you don't _need_ to use object-oriented programming.",tangerinelion,2025-08-02 22:57:49,6,learnprogramming,t3_1mg33wb,False,
n6lm6yy,"If you're using C++ without C++ features, just do yourself a favor and switch to C.",oshunman,2025-08-02 22:30:54,35,learnprogramming,t3_1mg33wb,False,
n6ln1yi,"Classes aren't a terrible way to arrange things. I'd avoid subclasses unless there's a really, really good use case, but classes are a convenient way to encapsulate/organize stuff.",captainAwesomePants,2025-08-02 22:36:03,6,learnprogramming,t3_1mg33wb,False,
n6lvlan,"You just have to think of classes as a code container/storage that you can reuse. If you're only using it once, you don't need to build a class around it.",four_six_seven,2025-08-02 23:26:28,2,learnprogramming,t3_1mg33wb,False,
n6lnmpc,Use a namespace instead.,slashdave,2025-08-02 22:39:28,3,learnprogramming,t3_1mg33wb,False,
n6lqxai,"Do whatever makes the most sense for a given problem. Sometimes that's a class, sometimes it's a free function.If a class has basically one function or the constructor has 90% of the class's logic, I usually opt to use a struct instead and use a free function operating on that struct. That makes for better error handling too; exceptions are ugly, and unlike constructors, free functions can return a `std::optional`.",ChickenSpaceProgram,2025-08-02 22:58:49,1,learnprogramming,t3_1mg33wb,False,
n6lv9qn,How are you writing a program that does anything significant without maintaining any state? Classes and methods are good. Concrete inheritance was a mistake.,TonyRubak,2025-08-02 23:24:36,1,learnprogramming,t3_1mg33wb,False,
n6m057d,"There's different trains of thought on this. Some people still like to use classes even if they're not using OOP for things like encapsulation (though namespaces are probably the right tool for that job). It's also worth noting that structs and classes are very nearly the same thing, so if you're not using classes but you're using structs, you'll run into the same questions to answer on data ownership, encapsulation, etc.",fixermark,2025-08-02 23:53:17,1,learnprogramming,t3_1mg33wb,False,
n6kewcp,"When I graduated with my bachelor's degree in Computer Science in December 2015, I wanted to code in Scala because I like Functional Programming (FP). I learned the hard way that niche programming languages are harder to get a junior level job in than more mainstream languages. I ended up taking a job coding in Java instead. In general I would encourage newcomers to pick a more mainstream language for junior level positions.",Anonymous_Coder_1234,2025-08-02 18:28:46,63,learnprogramming,t3_1mfxi7g,False,
n6km9lx,"I would say learn Go, it is popular, easy to learn, has many use cases.",mpw-linux,2025-08-02 19:09:49,15,learnprogramming,t3_1mfxi7g,False,
n6kkiey,"Rust will teach you a lot, However there’s not many jobs compared to other popular enterprise languages (ex: Java, .NET), or even Go.The most popular field of programming is still web dev. And other areas like Devops tools are mostly Python or Go.In the long run you shouldn’t limit yourself. I currently work with about 9 languages.",Rain-And-Coffee,2025-08-02 19:00:14,9,learnprogramming,t3_1mfxi7g,False,
n6kf79g,"I guess it depends on your overall goals? I feel like anything AI related would require Python, which seems to be on your radar already. You can create apps in Python? Why not just go with Python? If I just wanted to build apps then JS/Python would probably be my goto if I didn't need anything to be super performant. Even then, you can probably just add Cython or Python/C bindings for certain areas that need to run faster.I think a practical consideration is going with something that interests you and that you enjoy. If you know you'll do it with anything then I'd go with my suggestion above. If you really enjoy writing in Rust then I would suggest that just because there's a better chance that you'll stick with it.",wannacommissionameme,2025-08-02 18:30:28,3,learnprogramming,t3_1mfxi7g,False,
n6km10j,Rust is part of the tech stack at my company. It’s a good language and if you know it well it will help you get a job with a rust shop - but there aren’t that many of those around. I think it’s also a relatively new language and that also shows. I keep seeing people using and having problems with packages that in a language like python or .Net wouldn’t be an issue because they have been around long enough to have solved the problems. Personally I’d say learn it. But don’t only learn rust. Make sure you have a good rounded out skillset.,CodeToManagement,2025-08-02 19:08:30,3,learnprogramming,t3_1mfxi7g,False,
n6l0s18,"I’m way older than you and starting to learn Rust as a hobby. I started with python in 1998 but never got into full time dev role.Learn what you feel you would have fun with. I did Go for an API project I had. Originally in python. Didn’t complete it because it didn’t sit right. I’d rather get something out on Python or learn a new paradigm. So far Rust feels fresh and it’s bringing back memories of my days tinkering with microcontrollers, C and assembly. Tho, it’s still super friendly with important high level functions available to you! The idea of macros in Rust is also attractive. So after a bit of JS, web and Python. I’m going deep into Rust. Skipping go for now.",gob_magic,2025-08-02 20:31:14,1,learnprogramming,t3_1mfxi7g,False,
n6l2shj,"I’d learn Go first.If you’re looking for the next thing that will get you hired, being strong in Go and Python is a solid plan. You will likely be data-science-adjacent or devops-adjacent no matter where you go, and those two languages are at the top of the list in those areas.If you want to learn something really close to the metal, I’d suggest checking out Zig. It has a lot of interesting ideas that make systems programming fun. Once that language hits 1.0, it’s gonna probably start seeing adoption beyond early adopters.",BOSS_OF_THE_INTERNET,2025-08-02 20:42:04,1,learnprogramming,t3_1mfxi7g,False,
n6ld42v,"What are your expectations? Is this for a hobby or do you have career aspirations? If the latter, then learn the language that is used in the area you are interested in .",964racer,2025-08-02 21:38:40,1,learnprogramming,t3_1mfxi7g,False,
n6logw4,"If your goal is to impress and build real stuff, Rust forces you to think like an engineer. That mindset sticks, even when you switch languages.",alpinebuzz,2025-08-02 22:44:25,1,learnprogramming,t3_1mfxi7g,False,
n65x3s2,"Backend. You want to start on the fundamentals. Data structures, OOP, multi threading, etc. Everything else is just syntax.",Great_Guidance_8448,2025-07-31 13:43:52,61,learnprogramming,t3_1me1vlf,False,
n65z9nb,"I started with backend, but the order doesn’t really matter. Frontend shows fast results while backend builds logic and data skills. Pick one and learn both over time.",ervistrupja,2025-07-31 13:54:54,19,learnprogramming,t3_1me1vlf,False,
n65xe33,"I learned languages that would be used on the backend first, but learned frontend before backend.",carcigenicate,2025-07-31 13:45:20,8,learnprogramming,t3_1me1vlf,False,
n66005e,I started with back-end because it was easier to get something working without having to worry about how it looked.It didn't matter that a div wasn't centered; that was the front-end guy's job.I don't think the order really matters cause you can just mock some endpoints and fill in the details later.,mxldevs,2025-07-31 13:58:33,6,learnprogramming,t3_1me1vlf,False,
n65xkux,"Back-end. To me was pointless make something good to the eyes but that doesn't work, and i like back end more than front end, so i doesn't Go that deep in the visual side of the thing, Just The Basic tô do something good.",Illustrious_Prompt20,2025-07-31 13:46:19,4,learnprogramming,t3_1me1vlf,False,
n6645vg,"Just start.I learned backend first, then added JS.",Rain-And-Coffee,2025-07-31 14:19:00,2,learnprogramming,t3_1me1vlf,False,
n66gwbb,"What do you know so far? From your prior posts, it seems you're stuck, trying to decide what to learn, perhaps fearful you'll pick the ""wrong"" thing, so you're doing a lot of research, and asking a lot of questions.Have you started programming yet?",CodeTinkerer,2025-07-31 15:19:09,2,learnprogramming,t3_1me1vlf,False,
n65xxw3,"Well, C# and XAML at the same time, but also some little C++ and VBA stuff before that",ZubriQ,2025-07-31 13:48:11,1,learnprogramming,t3_1me1vlf,False,
n65yhax,"Hmm, I taught myself HTML, CSS, and a bit of JavaScript back in the days when geocities, angel fire, and Myspace were a thing. In college I took a web dev course, but when I got a full time job I focused on backend first and did a bit of frontend.",Zesher_,2025-07-31 13:50:56,1,learnprogramming,t3_1me1vlf,False,
n664vpl,"I started front-end if I recall. I’ve thought my son a few things over the years and he really appreciates the visual reward of it. After a while though, if you want more, it’s inevitable you’ll have to start writing some backend code. Hopefully by then you’ve already made your mind up on whether or not you have enough interest to give it a go.",Apprehensive_Bet3134,2025-07-31 14:22:29,1,learnprogramming,t3_1me1vlf,False,
n5x6acb,"when i learned that computers are really, really dumb. meaning you have to tell it exactly, precisely what to do. Read Amelia Bedelia.",ffrkAnonymous,2025-07-30 04:03:10,30,learnprogramming,t3_1mcvfkz,False,
n5xkbfr,"Honestly, there is no such thing as a ""programmer's mindset"". That's a myth and a general excuse for people too lazy to invest the necessary effort, discipline, persistence, diligence, and work to learn.There are things that can make learning easier, such as being a logically inclined person, but even that can be improved and learned.I am a firm believer that most (not all) people can actually learn programming to a certain degree. They won't all be able to reach a professional level, but they can definitely learn it.After all, programming is just creating and translating steps to solve a problem in such a way that the computer can execute these steps.We humans solve problems all day long, just we mostly don't even notice it as it is intrinsic. We work in steps every single second of the day, but we don't realize it.Learning programming is learning to consciously devise steps, to utilize our intrinsic ability to think in steps consciously.Most new learners focus way too much on the *code*, on the *implementation* in a *programming language*, which is only the last part of the process. Sure, it is absolutely necessary to learn a *programming language*, but after all this is just very limited vocabulary and very simple grammar.The real part of programming happens way before the code. It is the process of analyzing, breaking apart problems/tasks and solving them in sequences of discrete steps (again, a skill that we generally are intrinsically good with) that *then* can be *implemented* in any programming language.Here is also the problem with most tutorials and with many, even high quality courses: they focus too much on the code and too little on the design, on guiding the learner to devise the solutions.When I started out with programming, there were no tutorials. There was no internet. There were barely any knowledgeable people in my (rural) area. It was way back in the first half of the 1980s in the advent of the ""home computers"" (Commodore ViC20, C64, BBC micro, Acorn, Amstrad CPC-464, etc.). All I had was the BASIC (programming language) manual that came with my computer and a lot of curiosity. A bit later, we had some ""programming"" lessons (in double quotes because it was more a joke than anything serious) at school - one lesson per week where 8 people were crammed around 4 Apple II Europlus computers where we initially learnt AppleSoft Basic and later UCSD Pascal. Our teacher made us draw flow charts before we were even allowed anywhere near the computer. This seriously helped. Using a visual representation of the steps to solve our tasks made us think more about the actual steps than about their *implementation* in a programming language.Flow charts, Nassi-Shneiderman charts, bulleted lists, pseudo-code, all of these help and are somewhat underrepresented in modern computer learning. If people started out learning these for short time, they would learn much easier and much faster as most learners don't fail at the *languages*, but fail on *programming*.The above is also the reason Harvard chose to start with *Scratch* for their famous CS50 course. It is a visual programming language (in the style of Nassi-Shneiderman diagrams) that lets the learners focus on the *algorithm* on the *steps* instead of on an actual *programming language* with its keywords and grammar. Yes, Scratch comes across as childish because after all it was designed by the MIT to teach young kids programming, but that is actually the biggest advantage of it. Way too many people dismiss Scratch as childish and useless, yet, had they invested a couple hours with it, they would have seen its value.Way too many posts here are in the tone of ""I've learnt programming language X, Y, and Z, but still cannot program"". Why? Because they all focused on the wrong thing. They focused on the *implementation*, on the *end product*, on the completed car, instead of focusing on the *design process, the considerations, the decisions* that ultimately *lead* to the *implementations*.Similarly, way too many people claim ""they can *read and understand* code, but not *write* it"". Similarly, just because one can *read and understand* novels it doesn't automatically enable them to *write* meaningful, comprehensive, fully developed ones.Then, we have the ""I've watched X tutorials, read Y books, but cannot program"" people. Yes, sure, you know the theory, but you have never applied your skills in practice. This is like sitting in the desert and watching countless Olympic Splash Diving videos and reading all about it. Unless you get wet and actually do it, everything will just be plain theory and you will fail miserably in practice.Practice is the key. Even a step further: independent practice. It's not *copying* tutorial code after tutorial code. It's sitting down, thinking about something to program and starting working on it, without tutorials, without AI (don't get me started on that for learners), only with one's own work.There is nothing wrong with tutorials for a *certain use case*, e.g. for small, detailed, specific parts where one is unsure, but not for entire projects, e.g. the typical ""how to build X in language Y"" ones. If you need something special, e.g. ""how to work with SQLite tables in Python sqlite3"" or something alike, tutorials, blogs, etc. are perfectly fine.Too many people fall into *tutorial hell* because they don't dare to just simply start working on their own. They are afraid of not achieving their goals, they are afraid of failure, which is the completely wrong mindset for programming. Failure is an important part of learning. It is *gained experience*. It is equally important to know how not to do something as how to do something.Then, we have the ""do projects"" people who think that projects need to be huge, complex beasts and that instantly get discouraged by that thought. Again, wrong mentality. Every single program, no matter how small, is a project. One can only grow with their projects. People need to start small and simple and then work their way up to gradually larger and more complex projects.Then, we have the people who despair because they see the huge amount that is there to learn and only look at the summit, at the vast mountain of learning ahead of them instead of looking at the *path* ahead. One does not climb a mountain by just focusing on the summit. One climbs a mountain by looking at the path ahead and taking one step after the other.Then, we have the ones who declare ""programming isn't for me"" after investing mere *hours* (couple days/weeks) without much effort. Learning programming takes effort and doesn't come natural.*Fast tracking* in programming doesn't work (it actually doesn't work in any trained skill). There is no 0 to 100 in no time. Learning anything is a marathon, not a sprint. Slow and steady wins the race.> Recommend any books, courses, etc. that helped you most.Here is a knack. The most helpful books have actually fairly little to do with *programming*. They are about the *design*, the steps before the actual programs.The typical recommendations for this are:+ ""Think Like A Programmer"" by V. Anton Spraul+ ""The Pragmatic Programmer"" by Andrew Hunt and David Thomas+ ""Structure and Interpretation of Computer Programs"" (SICP) by Ableton, Sussman, Sussman+ ""Code: The Hidden Language of Computer Hardware and Software"" by Charles PetzoldAnd if you're hardcore: ""The Art of Computer Programming"" by Donald Knuth et.al.",aqua_regis,2025-07-30 05:56:10,13,learnprogramming,t3_1mcvfkz,False,
n5wzulq,"To be honest I don't know if I have a programmers mindset. I do know I keep finding software, and software supporting fields like logic and math, really interesting and that interest keeps driving me forward.At least for me there wasn't one, big epiphany. It's been lots of little ones all along the way. When I understood what an object was. When pointers made sense. When doing the math and understanding how memory works made floating point comparison issues make perfect sense.On books: Two that provided a great foundation for a lot of my other knowledge were: \- ""Discrete Mathematics with Applications"" by Susanna S. Epp \- ""Structured Computer Organization"" by Andrew S. Tanenbaum & Todd AustinI only mention these because I found no end of information on how to learn certain languages or tools but these were great for supporting the logic behind a lot of concepts. I don't think they're mandatory reading depending on what you're going for but the courses I used those in were some of the most fascinating.",Robotkio,2025-07-30 03:18:46,13,learnprogramming,t3_1mcvfkz,False,
n5x4ljs,"If you are starting out, try to create small programs that interest you and borrow ideas heavily from other people’s code. Use a variety of books and courses to see other viewpoints. Once you get a little knowledge under your belt, get a job and ditch the books. By far the best way to accelerate your learning is working under some mentorship and other people better than you.",Successful_Leg_707,2025-07-30 03:51:20,8,learnprogramming,t3_1mcvfkz,False,
n5xwh8g,"I think you'll find a suprisingy array of ideas on what people consider a 'programmers mindset'.For me personally and as others have said it's the culmulation of lots of little moments rather than any stand out catalysts, but there were a couple of moments that definitely impacted my course.The first was actually on here. Someone posted a question asking something along the lines of 'What is the most important trait in a programmer?' and the most upvoted answer by a country mile was simply 'Perserverance'. It's euphoric when all the parts of a solution click into place and we get to sit back and watch it fire on all cylinders, but man it's a rough road to get there at times. The ability to stick with it when everythings broken and nothing makes sense is crucial.That leads me nicely onto the second one really - embracing and even celebrating failure. Andrew Huberman is a neuroscientist that has a few podcasts on how learning works, and listening to him explain that it's repeated failure that triggers the learning process really changed my attitude and I wish I'd embraced it sooner. There's a quote along the lines of 'The master has failed more times than the apprentice has even tried', and whilst I probably spread my interests too thinly to master anything in particular, I'm doing my best to fail my way there.",RushDarling,2025-07-30 07:50:00,3,learnprogramming,t3_1mcvfkz,False,
n602q7n,"I think it's when you encounter any problem in life, you can think of a software program that can solve the problem. Once you start seeing problems or people tell you about problems at work and you start thinking, ""I could make an app for that..."" then you have a programmer mindset. Especially if it makes you excited to try it and write the program. Then you sit down for hours on hours with laser focus on finishing the program and you don't even get tired until you're done. That's a programmer's mindset.",bigbry2k3,2025-07-30 16:14:50,2,learnprogramming,t3_1mcvfkz,False,
n5xn8u5,When I thought computers are pretty simple at the lowest level really,IronAttom,2025-07-30 06:22:33,1,learnprogramming,t3_1mcvfkz,False,
n5xneo1,"For me it was probably in my sophomore year of college when we had to learn how compilers work. Creating formal grammars, tokenizers, etc... really make C++ start to click. Add to that I also had to take x86 Assembly and the whole concept of memory management and pointers became second nature.",DonkeyTron42,2025-07-30 06:24:03,1,learnprogramming,t3_1mcvfkz,False,
n5xtgim,When I felt comfortable teaching it to others,deblob123456789,2025-07-30 07:20:38,1,learnprogramming,t3_1mcvfkz,False,
n5xud2h,The moment I stepped outside of what the tutorial was telling me and thought “ok what if I put this here instead?”Also the moment I started breaking stuff down. Googles for instance:“Read file in python”“Insert text to python file”,peppersrus,2025-07-30 07:29:20,1,learnprogramming,t3_1mcvfkz,False,
n6bjzh1,> what would it look like trying to break coding pong down into smaller stepsYou start with getting a window on the screen.You make a | appear in the screen to represent one player.You make the | movable.You make a projectile appear.You make the projectile moveable....You can play pong.,Salty_Dugtrio,2025-08-01 09:30:31,46,learnprogramming,t3_1mertal,False,
n6brxd0,">I know functions exist to help with this.Functions express *algorithms* (what needs to be done and how), while structures express *data* (what algorithms should work with). An object (as in [object-oriented programming](https://en.wikipedia.org/wiki/Object-oriented_programming)) merges data with all algorithms that can be performed on it (called *methods*). A good way to start breaking a large problem down is to start defining objects that represent entities involved in the problem, for example Player, Score (for a Player) and so on. A construction of a more complex object should require all its dependencies in terms of simpler objects. As you create and combine more and more simple objects into more complex objects, the problem solution becomes the matter of calling the right method on the right object.",gary-nyc,2025-08-01 10:40:54,7,learnprogramming,t3_1mertal,False,
n6bk2ea,"Pong, huh?Let’s go:- Paddle control - Paddle control CPU- Ball movement - collision detection, collision response aka “physics”- score counting- round end- winner decision - score tracking - score storage- network multiplayer- sound- graphics beyond the basic stuff- graphics using GPU- graphics shaders- resource management I’m stopping here, but I hope you got the gist.",Comprehensive_Mud803,2025-08-01 09:31:17,14,learnprogramming,t3_1mertal,False,
n6blhoj,I am not an experienced programmer at all but I would go something like: what is the essence of pong?- Field.- Two Sliders that move (how do they move?)- Ball that moves depending on which part of the slider it touches (probably the trickiest part).- Two Players who score points (when do you score?) and control the sliders.Now we could go more in depth on how to implement each part but I think this was mostly what you asked. The fundamentals are fairly the same regardless of language and approach so now depends on what you work with.,spidermask,2025-08-01 09:44:46,4,learnprogramming,t3_1mertal,False,
n6bryo1,"its literally like anything irl. hungry?>stop current task>go to food>select food>move to eating area>consume mass quantities. and along the way, mini-tasks pop up. as someone new you're not going to be able to map out the entire thing before you program it, you're going to have to do a few projects before you understand what you need(in general)for pong specifically its something likei make a list of things i need to accomplish, im going to need a game lop i need way to get input from useri need to update game i need to display the gamethat's like the 'main' part all games share, then you go into each of those and think about what you needlike exiting the loop,then i go back into the 'update the game' section initializing both paddles ball and score if the game is just starting, etc trigger whatever inputs the user did, like try to move paddle up or down, i need y limits, i might want a feature for pause, even if im not ready to program pause, i might comment out ///pause just to know then i update the ball, make notes to add bouncing, score detectionthen i update the AIs paddlethen i wonder if i should have updated the AI before updating the ball or after, maybe i update based on who hit the ball last, ill not worry about that until i have more finished and i can test the gamethen i work on the display function, i need functions to draw each paddle, ball, score, anything elseat this point i test and go back and work on those features i noted like collision detection and AI fine tuning etcits hard to know what you need until you've made a few games. make things like pong, pacman, tetris, etc will teach you a lot of the main parts almost all games share",getfukdup,2025-08-01 10:41:12,3,learnprogramming,t3_1mertal,False,
n6d477z,"Is your challenge that you don't know how to break problems down into smaller bits in general, or you don't know how to apply that to programming?If it's the former, a good start is to forget about coding entirely to begin with and think about something in the real world, such as a recipe (e.g. spag bol)At its most basic, you put some cooked bolognaise sauce on some cooked spaghetti. But to be of any use to anyone, you'll need to break both of those down into separate smaller problems - how to make bolognaise sauce and how to cook spaghetti. The spaghetti is fairly easy (assuming you're using dried) - boil some water, add salt, add the spaghetti and cook for 10 mins. That's a reusable little skill on its own that can be used with loads of dishes, and at some point could be switched out for a version where you make the spaghetti from scratch, without affecting the other part of the recipe - the sauce.For the bolognaise itself , it's a bit more complicated - fry the onion, brown the meat, add the herbs and tomato sauce etc. Again, each of those steps can be broken down into smaller ones. E.g. the onion - how to dice it and how to correctly cook it is a stand alone set of skills that, like cooking pasta, will be something you'll do in loads of recipes.What's any of this got to do with coding, you may ask. Those smaller steps - cooking the pasta, slicing the onion etc - are small reusable (and potentially replaceable) steps that are the equivalent of how you'd break down your code into reusable functions, and they all roll up into that top level overall recipe/application.",prof_hobart,2025-08-01 15:17:32,3,learnprogramming,t3_1mertal,False,
n6bulen,"In addition to what others have said, some of this just comes from practice. It can be hard to know exactly how much stuff needs to be broken down (should moving the ball be 3 steps - draw the ball, move the ball, collide the ball - or 5 steps - draw the ball, move the ball, collide the ball with the left/right sides, collide the ball with the paddles, trigger game end when colliding the ball with top/bottom) before you've built a couple dozen programs",Defection7478,2025-08-01 11:02:04,2,learnprogramming,t3_1mertal,False,
n6fg6bw,"Well, to play pong you need1) A window2) 2 vertical lines ('paddles') at either side of the screen3) A circle ('ball')4) The dot needs to bounce between the two lines.5) Both the player, and the computer need to move a paddle each.Making a window is pretty easy if you know how to set up a viewport. You can draw rectangles & circles simply as well. If you're coding in OOP you can even make those classes. Since there's movement, and things are updating, you'll likely need a core game loop - easy enough to track. We can then break things down further: To make collisions, you need to know when a ball collides with a paddle. To know that, you need to know1) The Ball's position 2) The Ball's direction (it shouldn't collide if it's not travelling toward the paddle)3) The Paddle's position (should be mostly static horizontally speaking)4) The Paddle's direction (either left or right)So when the ball's at a point where it could collide with a paddle, check if that paddle overlaps with the ball, and if the ball is travelling toward it. If so, calculate the reflection angle of the ball, apply that to the ball - maybe keep track of the paddle's travel speed and factor that in somehow. If the ball isn't colliding with anything, just let it travel on - adding the sine & cos of its direction to its position values (scaled by speed). Then we gotta add the player in. Let them control the left paddle with their W & S keys, or Up & Down, or their mouse, either way. If they move them (i.e. keep track of the last position of the mouse, and check whether it moves between updates), apply the movement to the paddle vertically (not horizontally) and scale that by how fast you want the paddle to move.For the computer, either create some decision tree (like, if the current ball direction would cause you to miss, move toward it. Else, move to centre?) up to you. Or just have it go up and down.",DTux5249,2025-08-01 22:10:31,2,learnprogramming,t3_1mertal,False,
n6cqc4k,"The key part of pong is how to do basic graphics. Can you get something to work that moves on a screen. Since you have some idea of how to do this, then do something much simpler than pong.There is always the challenge, when breaking down a problem, that you won't know how to do some step. For example, if you've never worked with interactive graphics, then you'll be stuck at that point, having to learn what to do.Another challenge is how pong deals with the angles that the ""ball"" bounces. Is this something realistic or is there some pseudo-physics going on? It does seem to roughly obey angle of incidence equals angle of reflection. In other words, figuring out the dynamic behavior is hard.I'd probably try something like Snake where you don't have to deal with those kinds of physics.I think, as people break some of these problems down, they still wouldn't be able to code it up. They would still need extensive Googling or asking an LLM to find out answers they need. I doubt some will figure out the math needed if they aren't that strong in math (and even if they are, but are out of practice).",CodeTinkerer,2025-08-01 14:11:04,1,learnprogramming,t3_1mertal,False,
n6ct4jv,"Read up on ""separation of concerns, SOLID, MVC"" and similar topics.",dev_ski,2025-08-01 14:24:36,1,learnprogramming,t3_1mertal,False,
n5nb6rl,"> So here’s my question: where the hell do you even get your definitions from?Alan Kay famously said ""I made up the term ""object-oriented"", and I can tell you I did not have C++ in mind"" (probably not an exact quote).The exact definition of object oriented and how many different types of polymorphism there are and whether encapsulation enables abstraction or abstraction enables encapsulation or they are both special cases of some greater concept is not particularly interesting to me. I have a general idea and that's fine. I'm not trying to write a research paper here.",lurgi,2025-07-28 17:48:48,23,learnprogramming,t3_1mbmoz8,False,
n5nakeo,"It seems reasonable to say there will be no single source of truth here. Something like encapsulation is a qualitative statement, not a specific technical mechanism. It's like how a mathematician would talk of 'generalizations'; you won't find a precise, clear, mathematical definition of what does or does not constitute a generalization, and probably every mathematician has their own definition.Two people arguing over whether something is or is not encapsulation right on that grey boundary sounds like a pointless argument, as they're both right. However, the fact an argument is pointless seems no obstacle to some online.",lfdfq,2025-07-28 17:45:59,28,learnprogramming,t3_1mbmoz8,False,
n5n9yht,"There are 2 dirty secrets about OOP:1) That the original ""sources of truth"" for pretty much EVERYTHING regarding OOP, were doing things for completely different reasons than what later proponents of OOP preached to the masses: https://m.youtube.com/watch?v=wo84LFzx5nI2) That what is commonly taught as the core value proposition of OOP doesn't work: https://m.youtube.com/watch?v=QM1iUe6IofM",usrlibshare,2025-07-28 17:43:14,28,learnprogramming,t3_1mbmoz8,False,
n5o837y,"I think you're just hitting the limits of imagining that clear, precise definitions exist for basically anything. OOP and encapsulation are just arbitrary ways of parsing reality that were chosen because the people who first thought of them thought it made programming easier if you thought of it that way. Different people come along with their own ideas and reformulations, but there is no One True Encapsulation that god invented and wrote on stone tablets. There's just people trying to think of programming in a productive way. And sometimes those ways aren't actually very productive, or sometimes those ways are productive for them but only because they think of things in an unusual way, and sometimes someone thinks of a new way that works for a lot people and everyone gets excited about this new way for a while until other people figure out the new way's short comings and go back to looking for better ones.Even in math, it's arbitrary. You only have clarity because you declare it by fiat--you make up some premises and rules because you think they are interesting or they will be informative in some way, then you try to figure out all the consequences of the rules you made up. A lot of math is about just using existing rules to figure out new things within that ruleset, and a lot of different math is thinking of entirely new rulesets that seem interesting and generative.Programming, and trying to define encapsulation is more like the second kind of math.",PeteMichaud,2025-07-28 20:24:42,8,learnprogramming,t3_1mbmoz8,False,
n5njnrs,"You have to remember that these terms and design patterns were formed during programming's adolescence. At the time these words were coined, Fortran and COBOL were the dominant programming languages, and they were extremely barebones compared to the modern versions of those languages. It's hard to fathom just how much we take for granted with modern programming languages today.In terms of encapsulation, folks were mostly just proposing what we now think of as modules or classes. Basically, the idea boils down to creating public facing APIs that do not expose their inner variables. I like [this source](https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/02-encapsulation/) which quotes from some of the originators of OOP-- Dave Parnas and Alan Kay. > Parnas and his peers pushed for not just hiding the data, but also how the data was manipulated. By hiding these implementation details, they could prevent programmers who were used to the globally accessible variables of early programming languages from looking into our code and using a variable that we might change in the future.Barbara Liskov is another big name in the OOP world, and [she covers encapsulation in this fantastic paper](https://www.cs.tufts.edu/~nr/cs257/archive/barbara-liskov/data-abstraction-and-hierarchy.pdf)> For abstraction to work, implementations must be encapsulated. If an implementation is encapsulated, then no other module can depend on its implementation details. Encapsulation guarantees that modules can be implemented and reimplemented independently; it is related to the principle of “information hiding” advocated by Parnas [15].Those three formed the basis of all modern OOP concepts. They are the definitive sources. I think much of the confusion comes from the second wave of folks who implemented the popular languages and who each definitely went their own way. Because their languages are so popular, their opinions are almost equally valid despite the fact that they all disagree with each other on minor things.- Bjarne Stroustrup- James Gosling- Brad Cox- Bertrand MeyerAs a side note, when discussing design patterns, there are a few definitive sources:- [Design Patterns](https://www.javier8a.com/itc/bd1/articulo.pdf) by the Gang of Four- Pattern Oriented Software Architecture, most notably volumes [one](https://daneshjavaji.wordpress.com/wp-content/uploads/2018/02/sznikak_jegyzet_pattern-oriented-sa_vol1.pdf) and [two](https://archive.org/details/patternorienteds0000unse_u5t3)- [Patterns of Enterprise Application Architecture](https://raw.githubusercontent.com/ZoranLi/Books1/master/Patterns%20of%20Enterprise%20Application%20Architecture.pdf)However, most of those were written over twenty years ago, so [refactoring.guru](https://refactoring.guru/) is a good resource for putting these concepts into a modern context.",jessepence,2025-07-28 18:28:05,6,learnprogramming,t3_1mbmoz8,False,
n5n9niv,"And what’s even more interesting — everyone argues as if they’ve all read some *fundamental text* behind the scenes… but no one ever actually mentions it.For example, one blogger I follow says encapsulation is about making sure a method takes in as little external data as possible. Others write that encapsulation is about *hiding things* — like, you add `private` where needed and boom, that’s encapsulation. Then there’s the group that says it’s about combining data and methods together. And so on.And N-O-B-O-D-Y ever cites anything to back up their claims. It’s like: *“Well, I said it, so you should believe me.”*So in the end, I can go to an interview, and the interviewers can tell me absolute nonsense about OOP — and I can’t even call them out on it, because there’s no monumental work, no axiom, no precise definition from an authority that I can point to and say, **“No, this is the correct one.”**Everyone just interprets it however they like, which leads to the absurd situation where: if I’m the lead on a project, then *my* definitions are the truth. If you’re the lead, then *your* definitions are the truth.It’s hilarious to see this in a field that’s supposedly the pinnacle of precision, rigor, and concrete definitions.",Accomplished-Bat-247,2025-07-28 17:41:52,7,learnprogramming,t3_1mbmoz8,True,
n5nb3y1,"Sorry to be blunt, but these concepts don't need, and aren't worth, a shining crystalline ""source of truth."" They're techniques, no more and no less. These OO models are meant to be tools to allow us to build more complex systems by adopting packaged components (objects, libraries, class libraries, modules, whatever they're called) that don't need our total understanding to use effectively. It's helpful to know what the designers of *your chosen language / framework* were thinking when they designed the object model you will use. Other than that, don't overthink this.",Aggressive_Ad_5454,2025-07-28 17:48:27,5,learnprogramming,t3_1mbmoz8,False,
n5nanw6,"I'm by no means an expert in programming but one thing I do know from studying liberal arts and the humanities in Academia is you kind of see this effect across the board in every scientific discipline. Everyone has their own etymology and their own way of ""correctly"" understanding things that somehow conflicts with the ""usual"" way of understanding. Nominally you'll get this from professorial types who are heavily steeped in the nomenclature of their studies, and a lot of thought and debate goes into subjects such as these.",CarRepresentative782,2025-07-28 17:46:25,2,learnprogramming,t3_1mbmoz8,False,
n5ndol3,"Object-oriented programming is about representing a system as a collection of objects that interact with each other. That’s it. That’s all it is. It’s not a language feature; you can do OOP in C, Fortran, and even assembly. Anything else is just extra.",kevinossia,2025-07-28 18:00:02,2,learnprogramming,t3_1mbmoz8,False,
n5o3zvb,Peoples source of truth is usually just the first source they hear,MoonQube,2025-07-28 20:05:28,2,learnprogramming,t3_1mbmoz8,False,
n5op24y,"If it works for you, it's a great method. Try to start with simple games",no_regerts_bob,2025-07-28 21:47:17,25,learnprogramming,t3_1mbtds4,False,
n5ot0pl,"In fact, I'd say doing LeetCode problems is a *bad* way to learn programming. That won't teach you how to make a real project; that will only teach you how to pass interview questions.Actually building a project is the best way to learn to program, and if you 're interested in making a game, then go for it. The only caveat I'd add is that games can be incredibly complex; game programming is often considered one of the most difficult fields of programming, because you need to understand user interfaces, state manipulation, AI, audio, physics, and more... but if you can handle breaking it up into a smaller pieces and figuring them out one at a time, it's a great way to learn.",minneyar,2025-07-28 22:07:51,23,learnprogramming,t3_1mbtds4,False,
n5opuy2,Sounds better than crying over LeetCode at 2am. Build the game.,Alex_NinjaDev,2025-07-28 21:51:22,10,learnprogramming,t3_1mbtds4,False,
n5oppw2,"Yes, learn fundamentals then build a simple program. Then a slightly more complex one.For example put a box on the screen. Now make it move using your arrow keys. Now put a second box and detect when they touch. Play a sound.You keep building up until you have Snake or Tetris.",Rain-And-Coffee,2025-07-28 21:50:39,7,learnprogramming,t3_1mbtds4,False,
n5p4dfw,There is a Mario Tutorial in JS that really helped me get an understanding on how to code and how to organize. The channel is meth meth method on YouTube,ms_nitrogen,2025-07-28 23:09:16,5,learnprogramming,t3_1mbtds4,False,
n5p76r7,"That’s a great method. Download Processing 4 and play around with it. Watch some Coding Train videos on YouTube and replicate, extend, and improve on them. Learning in an easy 2d framework is a great way to visualize code and learn how to debug",Swing_Right,2025-07-28 23:24:29,3,learnprogramming,t3_1mbtds4,False,
n5oygts,Stick with what's fun. Learn the boring and hair pulling out stuff later. I used fantasy football.,MyPaddedRoom,2025-07-28 22:37:05,2,learnprogramming,t3_1mbtds4,False,
n5pdwis,… if you are trying to learn how to make games why are we talking about Leetcode?,connorjpg,2025-07-29 00:01:19,2,learnprogramming,t3_1mbtds4,False,
n5pdxeh,pseudo code is for briefly explaining a thought/solution/example to someone else that you know is able to translate that into working code. using it any other way serves no purpose except maybe the illusion of understandingwhat is lacking in your list is applying all these things in real code. you need a lot of hours of actual programming for it to stick,NefariousnessMean959,2025-07-29 00:01:28,2,learnprogramming,t3_1mbtds4,False,
n5q5qki,Is it working for you? Then that's great!,Feeling_Photograph_5,2025-07-29 02:43:08,2,learnprogramming,t3_1mbtds4,False,
n6bu1d7,"Doesn't really matter. You learn one, you can learn another",grantrules,2025-08-01 10:57:45,47,learnprogramming,t3_1metas6,False,
n6byi8x,Diversify and learn JS/Python and their backend frameworks for web-technologies and java/.Net (C#) for enterprise software.That will cover majority of demand of development jobs. Always check local demand first.,Wingedchestnut,2025-08-01 11:30:43,34,learnprogramming,t3_1metas6,False,
n6bupfe,"Java, even today the largest tech and non tech companies in the world (Amazon, Google, Apple I know for sure) are still shipping Java. Python and Go are pretty popular too, typescript and nodejs if you are doing any front end work. The F500 I work at is all Java as far as the eye can see.",MaybeAverage,2025-08-01 11:02:53,21,learnprogramming,t3_1metas6,False,
n6c1e5k,"In my region, PHP (Laravel) and Python (Django) are the most popular. I love both, so I highly recommend them. But it really doesn't matter which one you choose, just get comfortable with one and the company/project will define which one you'll use later.",dns_rs,2025-08-01 11:50:31,6,learnprogramming,t3_1metas6,False,
n6bvz0h,"C, Rust, Go, node-based languages (ECMAScript, TypeScript,…), JVM-based languages (Java, Kotlin), .NET-based languages (C#, F#). You have a lot of options.",Comprehensive_Mud803,2025-08-01 11:12:25,8,learnprogramming,t3_1metas6,False,
n6byfjg,"Doesn't matter too much, Java, C# or Go?Rust is good if you're feeling brave.Personally I think ""good fundamentals"" requires a good static type system",ToThePillory,2025-08-01 11:30:12,5,learnprogramming,t3_1metas6,False,
n6bx8pa,"You can learn backend from various languages. , For big tech companies purpose use java for backend , For freelancing + startup jobs use Nodejs and for better future use Go and Rust for the backend you wants to enter in the web 3 journey",Anuj1234_,2025-08-01 11:21:43,3,learnprogramming,t3_1metas6,False,
n6e54fh,"If you want fundamentals, choose Go. Go forces you to do things by hand, way less magic compared to C#/Java.",GardenDev,2025-08-01 18:13:22,3,learnprogramming,t3_1metas6,False,
n6c40dj,"Backend (that is, web server application code) development is done with a language *and* a framework. If you get a job, the language and framework will be chosen for you by your employer. Javascript / nodejs / express or other server-side Javascript have a lot of conceptual elegance, but also the trickiness of Javascript. Typescript can help, but then you get all the bundler faff to deal with.C# / Dotnet is good for enterprise and ""line of business"" apps. Java / Springboot or Java with other frameworks are in the same situation. These seem to have staying power, and are conceptually well designed.php / Laravel is good for apps to deploy on cheap shared hosts. Lots of people look down their noses at php, because it's been around for a long time and has some older concepts in it. That's kind of like looking down your nose at railroads because they use tech that's been around for many decades.Python / Flask or Python / Django are pythonic, always good. I guess I'd go with Javascript / nodejs / express or C# / Dotnet to learn the most. Almost all real-world backend development involves SQL to hold your data.",Aggressive_Ad_5454,2025-08-01 12:07:44,2,learnprogramming,t3_1metas6,False,
n6cdh7v,"I don't think that there is a best programming languages for backend.I mean, I think that Python is a really bad programming language for backend (great for science and data-related work, though), but it seems to be extremely popular, and it makes sense, because it makes experimenting really easy (it makes breaking stuff also very easy, of course).I think that Rust is a great programming language for backend, because it really helps writing robust and scalable backends, but many people dislike it, because it forces you to write down many of your hypotheses, and to think about edge cases, even at stages during which you don't care about edge cases or writing down your invariants, and that makes sense, too.In other words: learn one, whichever you want, become really good at it. Then learn a second, ideally very different, and compare the experience.",ImYoric,2025-08-01 13:03:51,2,learnprogramming,t3_1metas6,False,
n690m3n,"Low-level programming has solid opportunities beyond firmware: OS and driver development, real-time systems, IoT, networking, and security/reverse engineering.Remote work is possible for software-focused roles, but hardware-heavy jobs usually need lab access or hybrid setups.Build projects like:Microcontroller apps with sensors (ESP32, STM32)Simple RTOS tasks (FreeRTOS/Zephyr)Linux kernel modules or device driversCommunication protocol demos (SPI, I2C, UART)Document projects on GitHub. That will make you stand out for entry roles.",itz_charlie01,2025-07-31 22:36:12,13,learnprogramming,t3_1mecltx,False,
n69e1de,"Pedant here... C and C++ are not low level languages.But yeah, genuine low level work is a good choice, plenty of work, and largely ignored by bootcamps and all that.I'm a remote dev, I work with bluetooth and stuff like that, good fun, low competition for jobs, there simply aren't that many people that do this sort of work.You might be tied to the office (I'm not, the devices I work with a relatively small), but others I know work with machines as big as your house, so yeah, you're not taking that home at the weekend.I think it's a good option, web dev etc... is highly saturated, embedded most certainly isn't.",Slow-Bodybuilder-972,2025-07-31 23:50:49,9,learnprogramming,t3_1mecltx,False,
n68vp33,"GPU programming requires a fair bit of hardware knowledge to create reasonably efficient implementations. This includes: making sure the GPU is utilising all available threads, transferring data between CPU and GPU as well as synchronisation and parallel processing between the CPU and GPU. All requirements when working with Graphics APIs. 3D processing or just real-time image manipulation.",TheLogicUnit,2025-07-31 22:10:24,6,learnprogramming,t3_1mecltx,False,
n69a8do,"Jobs in embedded, automotive, defense, and even medical tech love low-level skills. Remote roles exist, but labs still rule in hardware-heavy teams. Build stuff that talks to sensors or runs on bare metal - those projects speak louder than job applications.",alpinebuzz,2025-07-31 23:29:12,4,learnprogramming,t3_1mecltx,False,
n6bpl8e,If you're in US I hate to say it but it's a tough field to get into. Most US based jobs are filled with veterans and new jobs are getting outsourced to Asia.,DonkeyTron42,2025-08-01 10:21:17,2,learnprogramming,t3_1mecltx,False,
n6api76,Love the answer thanks for sharing information!,ClearWait,2025-08-01 04:55:19,2,learnprogramming,t1_n690m3n,True,
n6eal0k,"When you say ""document projects"" do you mean ""write documentation for existing projects"" or simply ""publish your own projects""?I can see value in either. Good writing skills remain useful, and open-source contributions of any kind are good to see.",light_switchy,2025-08-01 18:39:56,1,learnprogramming,t1_n690m3n,False,
n6aqfjn,"Thanks a lot for your response – really encouraging to hear from someone actually working in this field!I’m from Slovenia, and unfortunately here we don’t have many labs or hardware-focused companies, at least not that are easily accessible to students. In many cases, getting into this kind of work seems to depend more on personal connections than skill alone.Also, to be honest, I’m a bit nervous about entering the field – sometimes people aren’t very understanding when you’re just starting out. They expect you to know everything from day one, which can be a bit discouraging. I really just wish there were more companies or mentors willing to offer guidance in the beginning.That said, I’m very resourceful, and I’m not afraid to dive into documentation, learn new systems, and figure things out on my own. I just feel that having someone point me in the right direction early on would really help. Still, your reply gave me a lot of hope – thank you again.",ClearWait,2025-08-01 05:02:38,2,learnprogramming,t1_n69e1de,True,
n5mn4d9,"The next steps to get closer to that:\- Keep learning JS but don't worry about the deep stuff yet. I mean things like the event loop or execution context. It's a common mistake that confuses people more than anything else \- Learn the basics of the DOM. You don't need to memorize every single thing. Understand getElementById, addEventListener, and createElement \- Build a few projects. I know it's cliche and it's difficult to find projects to make, try and build things that are just html css and JS \- Learn what a library is. Learn NPM. Install a few libraries and play around with themOnce you get to that point you can start looking at objects - requests - async stuff. Contact me then and I can help you with that.Best of luck. You can do this.",The_Octagon_Dev,2025-07-28 15:57:40,20,learnprogramming,t3_1mbjs32,False,
n5mwj4i,"I'm from Iran. I took cs50x 2022 and I was struggling with it so much. I landed my first remote job at 2024 as a JR. Pytohn dev and I'm still working there. there shouldn't be any controversy around the fact that you have to learn the basics to get any dev. job and cs50x provides exactly that. You can't go wrong with cs50x, I can't imagine a scenario where you would regret taking that course later. The path you are on is a little challenging and rewarding, just stick to it and don't give up!",mahdi_habibi,2025-07-28 16:42:22,4,learnprogramming,t3_1mbjs32,False,
n5mvw7f,"you know, I’d recommend this open source Computer Science curriculum. https://github.com/ossu/computer-scienceThere is no perfect or right way to learn programming. When I started (I was 14F) and I utilized a bunch of resources online and built projects. This is one of those crafts where you absolutely have to learn by doing. Get your hands dirty, and start building stuff. When I went to college, that’s where I got a lot of exposure to concepts that are just not talked about thoroughly in Web Dev bootcamps (plus a curriculum to follow), so maybe OSSU will help. I think a lot of people in this sub need to learn Computer Science concepts alongside the language they’re learning how to write.",No-Strawberry623,2025-07-28 16:39:21,5,learnprogramming,t3_1mbjs32,False,
n5nu406,Respect you! Just thought I’d say this. You’re a smart kid,annaopolis,2025-07-28 19:18:15,3,learnprogramming,t3_1mbjs32,False,
n5omrgu,"Tbh, just find a project and complete it, something you find interesting. Use google and gpt (dont just copy and paste the entire gpt response) to help you. I never found going through tutorials very useful. After a bit, suddenly everything just clicked.",Hedge101,2025-07-28 21:35:43,2,learnprogramming,t3_1mbjs32,False,
n5pwurb,Thank you so much! I'll note down and work hard :folded_hands_light_skin_tone:,Iwastaken48N,2025-07-29 01:50:16,3,learnprogramming,t1_n5mn4d9,True,
n5rn6f8,"I'm in a pretty similar situation to OP, except I'm working with Java. Would it be possible to get a bit of help from you as well?",ShiftIndependent413,2025-07-29 10:14:09,2,learnprogramming,t1_n5mn4d9,False,
n5mx2wa,"Don't worry too much about HTML and CSS for now, Those are not programming languages. The main point is to learn programming (eg: C, Python or JS)",mahdi_habibi,2025-07-28 16:44:57,5,learnprogramming,t1_n5mwj4i,False,
n5px76j,CS50 is hard but it's very satisfying to see when you get the project right. It taught me to analyse the things I wanna do too so that's it.Thank you for the support man T-T I really appreciate it,Iwastaken48N,2025-07-29 01:52:16,2,learnprogramming,t1_n5mwj4i,True,
n5skvlg,I am currently taking CS50x and am on the verge of completing it. What did you do after you completed the course?Did you continuously polish one particular language or start looking for jobs immediately? Would love to know your approach.,Late_Scratch5404,2025-07-29 13:54:49,1,learnprogramming,t1_n5mwj4i,False,
n63rvyb,"I’m guessing your question is basically “okay I wrote some code. What are the steps to have it be like the other programs I run?” Couple of different ways. You can either run it from the command line or create an executable. The command line is the traditional way, but if you google “make python executable” you can find instructions on making something standalone. This is also a big thing that separates compiled and interpreted languages. Compiled languages (eg. C) are only standalone (kind of, i’m hand waving a lot). Interpreted generally need an intermediate program to run. In this case, the python interpreter.",alienith,2025-07-31 03:45:26,12,learnprogramming,t3_1mdqhqz,False,
n63o7r7,"Your steps and understanding of the software development process aren't quite accurate. The way I'd classify the steps, in general terms, is: 1. You download an *SDK* (software development kit)2. You write your code3. You compile/package it (or not, depending on the language)First off, what you're downloading is not the language, as that is more of an abstract concept, it's software that uses the language to build software. That can include an interpreter (e.g. with Python), a compiler (c), a runtime (java), and other tools such as a debugger.Writing your code is what you do with e.g. pycharm, but you can do that with anything. At the end of the day, what only matters is the content of the files, so whether you write it with pycharm, notepad, visual studio, or Morse code doesn't matter (it matters to you of course, not to the machine).And then there's what you're actually inquiring about. This steps is what depends most on the technology you're using. With Python, there isn't really anything more to do: you write your scripts, ...and that's it. You just run them and that's your software. That makes it easy and convenient, but not very user friendly which is one reason why you generally don't use python (directly) for user facing applications. For java, the final step is compiling into jar files, or an exe that will use the jar. That's already what you're doing when testing it while writing the code. The only difference is you might be including or removing some stuff from the final binary that you ship to users. Similarly for other compiled languages such as c and c++, it's the same story. The only difference is, you have to compile for each configuration (architecture, os, etc.), but don't need the user to download a runtime. Then for web stuff like JavaScript, it's a bit more complex since you have to host the website on the internet if you want people to access it. But here it's actually the most similar to what you were describing: you do use a software that brings your software to life, the browser! It's a bit similar to Java's runtime but way more involved I hope this kind of makes sense? It's hard to explain without knowing what you know and understand but hopefully I gave a somewhat clear picture of how it works. And don't worry about not understanding all of it, the world of software is vast and complex and developing software is as much about writing the code than it is about the final steps of deployment!",SpacewaIker,2025-07-31 03:20:22,17,learnprogramming,t3_1mdqhqz,False,
n63pzwx,"Well, step 1 is you think you have to run it within a developer environment. Learn to build it from the terminal.Youre writing python, you just python ./yourscript.py there is no compiler you just run itin compiled languages you build it and then run ./yourbinaryIf you want a graphical interface, well, download some kind of gui library which lets you make a window and draw stuff in it (don't write one yet, its hard) and then make a graphical interface in your python code with it.If you want a web page, well, youre going to need to find a way to send html over the internet.Its probably hard to figure out where to start because thats literally all up to you",no_brains101,2025-07-31 03:32:17,5,learnprogramming,t3_1mdqhqz,False,
n63xdvk,"You can use Pyinstaller, which takes the interpreter (which runs your Python Code), your code and all needed libraries and puts them into an executable.https://pyinstaller.org/en/stable/",American_Streamer,2025-07-31 04:24:38,4,learnprogramming,t3_1mdqhqz,False,
n63qxcq,"You're getting a lot of answers because ""it depends"". There isn't a single answer for every type of thing you want to build.In general if you want to build an app that you want others to be able to use, here are the most popular options:1. Make a website. It will cost you $10/year for your own domain name like Grumpy\_Gremlin49.com, and $5 - 10/month to host the website. You'll need to learn some HTML and CSS to design the content, but most of the logic can be implemented in Python. The best part about the web is that it's the easiest for end users - they just type in your url and they're immediately using your app.2. Make a mobile app. For iOS it costs $99 to become a developer. You either make an iOS or Android only app using the special languages and frameworks designed for that, or you use a cross-platform framework designed to let you build an app once. There's a framework for making mobile apps with Python (Kivy) but it's not very professional. You upload your app to the play store / app store and then users can download it and use it.3. Make a desktop app. You can do that with Python. The main problem is getting it to users. You'd need a website to distribute it (see #1), and browsers and virus scanners will try to stop users from installing and running it. This is a fine solution for sending to a friend or making an internal app for a business, but these days making a good cross-platform desktop app for end users is a real pain. If you want to make an app for the Mac or Microsoft app stores, that does solve the virus scanner problem but it limits what your app is allowed to do.So your next step is to pick one. The more specific the better. Pick something like web or iOS. Don't say ""all of the above"". Start somewhere.",dmazzoni,2025-07-31 03:38:44,3,learnprogramming,t3_1mdqhqz,False,
n63nfux,"Once you run your code in the IDE (Pycharm in your case), you will need to re-run it from the command-line. This is to ensure that, when running in production mode/env, things continue to work. These steps will include a task that's referred to as packaging. One of the mechanisms to do this is to containerize your application so that all system dependencies are bundled into the container (Docker is one of the easiest containerization tools; if you want, you should research Docker and Dockerfile).After the above packaging step (the usual artifact at the end of this stage is a deployable unit, in this case called a ""container image""), you will need to then research how/where to host your application. If you are targetting running this code in the cloud (say AWS for eg), you will then need to research and decide whether you want to use Elastic Container Service (ECS) or a kubernetes-based solution. If going with ECS, most of the infrastructure-provisioning will already be taken care of - you will simply sign up for an AWS account, and then configure what tier you want to choose (depending on how heavy your application is and also depending on volume of users). Then comes the actual deployment. I have skipped some steps like unit testing, CI builds, connection to a database, security (both runtime/dynamic scans and static scans). Depending on your comfort level and (I assume) your aim to get to a full-fledged application, you will need to research these as well. Ofc, if your application needs a UI, and assuming your python code is simply exposing API endpoints, you will then need to research react / angular / nextjs / vuejs / etc (javascript frameworks) that will be used to build the UI for your application. That codebase will also follow a similar pattern of running the app, packaging, hosting, testing, etc.",Soggy_Writing_3912,2025-07-31 03:15:15,4,learnprogramming,t3_1mdqhqz,False,
n63qd81,"start by going from running that code in pycharm to running the same code directly in a terminal. that’s really all that pycharm is doing anyway. at the end of the day, the “programming language you download” is itself another program which can take the code you wrote and translate it into instructions that your computer, with the help of your operating system, can execute. so the next thing to do is figure out exactly how to make that happen without the IDE. we can’t tell you the exact way to do that without knowing what exactly you’ve written and what OS you are using, but basically you would open a “shell” in a “terminal” and run an instruction on the “command line”. your program is a file or collection of files somewhere in the directory structure of your “host machine”. to run it, you would run the program “python” with your code’s “entrypoint” file as the first “argument”. so it might be as simple as opening up Terminal and typing something like ```bashcd ~/PyCharmProjects/my_codepython my_progrum.py```figuring out exactly which things you have in PyCharm and where they actually exist on your host, which python needs to be invoked, and so on is the next exercise.but this isn’t going to magically make your program do something new, it’s just going to teach you how (python) programs are run in the most basic sense. there is plenty beyond this that you will have to learn, but only when you have a clearer idea of what your program is and how users will interact with it.",geeeffwhy,2025-07-31 03:34:50,2,learnprogramming,t3_1mdqhqz,False,
n63xp2f,"I think what you're struggling with here is that you have code that can do something, but how do you run it in the various places that code runs? Websites, games, mobile apps, desktop apps, all run code, but you don't know how to get from a simple dev environment executing python scripts to fully functioning apps.Short answer: Building these kinds of apps requires you to learn different frameworks and tools. And there is a lot to learn here so you probably want to pick an area and stick with it. What kind of applications are you interested in building?",maujood,2025-07-31 04:26:58,2,learnprogramming,t3_1mdqhqz,False,
n63owv2,Check out https://www.theodinproject.com/,grantrules,2025-07-31 03:24:58,5,learnprogramming,t3_1mdqhqz,False,
n649kcn,Just read this [https://realpython.com/run-python-scripts/](https://realpython.com/run-python-scripts/)All magic in first line on script>`#!/usr/bin/env python3`,Alaska-Kid,2025-07-31 06:04:01,1,learnprogramming,t3_1mdqhqz,False,
n63qq7l,practice is the secret to every single craft on the planet. programming is no exception.,geeeffwhy,2025-07-31 03:37:20,22,learnprogramming,t3_1mdqmd9,False,
n63mojd,"Nothings wrong. Just keep doing problems and it’ll start aligning better. The more problems you see, the more solutions you solve, and the more mistakes you make - the more solidified your programming skills become. You’ll def see improvement within weeks if you consistently code. The more shortcuts the see, the more you can extrapolate those solutions with tweaks onto other problems.",None,2025-07-31 03:10:17,7,learnprogramming,t3_1mdqmd9,False,
n63n42w,"Leetcode is not how the real world works, so don’t feel bad. They are something Google had to come up with to weed out thousands of applicants, similar to SAT scores. Remember those convoluted math problems?Most of those algorithms and data structures were developed by computer scientists over large periods of time, not in a 30 minute coding interview.What you have to know for the real world is the general characteristics of data structures and when you might pick one.In the real world good communication and being able to talk through a problem while collaborating and looking up stuff is what is actually useful.",Rain-And-Coffee,2025-07-31 03:13:08,6,learnprogramming,t3_1mdqmd9,False,
n63v49k,"Thinking like a programmer comes with time and programming. It's just about looking at a problem and seeing where the ""seams"" are where you can easily break off a chunk of the larger problem and solve that. It's like making a cake. You know that the end result is supposed to be a moist and delicious cake, but along the way there are a bunch of steps to follow. If you've baked a million cakes, you'll have a pretty good idea of what the steps involved will be, even if it's a new type of cake. If you're a beginner, you might need to closely follow a recipe. But each step along the way is something you can work out how to do, and combine the steps into the final result. I started baking during the pandemic and discovered it was super easy for me. ""This is just like programming, except I get to eat the result!"" Dough isn't rising? Time to break out my debugging skills! New recipe? Just an algorithm to implement.",Own_Attention_3392,2025-07-31 04:08:08,2,learnprogramming,t3_1mdqmd9,False,
n64mnhb,"Keep practicing. Experience is built over time and from successes and failures alike. Also go read some books like Clean Code, The Clean Coder.",Comprehensive_Mud803,2025-07-31 08:04:19,2,learnprogramming,t3_1mdqmd9,False,
n64x8gu,Have you broken the problem into smaller problems to figure out individually and then put them back together? Try using a pen and paper(or tablet) and work it out piece by piece,elfonski,2025-07-31 09:44:57,2,learnprogramming,t3_1mdqmd9,False,
n63o9pq,You don't need super IQ for programming you need to be able to produce readable clean code with passable efficiency.,neuralengineer,2025-07-31 03:20:43,1,learnprogramming,t3_1mdqmd9,False,
n63oehk,"You’re not going to be a master programmer from the get go, and it’s not uncommon go feel some imposter syndrome in our industry, don’t sweat it so much when you have so much you can do and it’s still fresh knowledge. You just have to enjoy it.",slaynmoto,2025-07-31 03:21:35,1,learnprogramming,t3_1mdqmd9,False,
n6444dh,"> I am not thinking like a programmer that quick to action thinking and logic.Really, that only attributes to experience. The more experience you have, the more similar problems you will have solved, the faster you will be.> My current thinking is I don't have the iq to think like a programmer.I call BS here. This is just the typical excuse of people who are not prepared to invest actual effort to learn.-----There are more than countless posts about ""Thinking like a programmer"", just type ""think like a programmer"" in reddit's search box and you will find ample threads.I'll leave some of my previous comments in similar threads here:+ https://www.reddit.com/r/learnprogramming/comments/1j9ezmx/getting_better_at_coding/mhdna2e/+ https://www.reddit.com/r/learnprogramming/comments/1iz7wv3/how_to_become_a_better_engineer/mf10qbg/+ https://www.reddit.com/r/learnprogramming/comments/1j3w7x9/how_to_actually_learn_problem_solving_skills/mg3q9ya/+ https://www.reddit.com/r/learnprogramming/comments/1ioehwa/struggling_to_put_together_my_own_code/mcirhxq/+ https://redd.it/1jyd36k",aqua_regis,2025-07-31 05:17:46,1,learnprogramming,t3_1mdqmd9,False,
n64cpec,"Well, I think unit tests made me understand programming better, even though I hate unit tests, but it can help you. As a programmer, you want a piece of code to do something specific to by testing it. You can write your code based on the result you want. Give it a try! It's called test driven development and is a whole different philosophy instead of first writing the functionality and then testing if it works.",Lamborghinigamer,2025-07-31 06:31:54,1,learnprogramming,t3_1mdqmd9,False,
n67og4m,"C is a ""small"" language. Get started and comfortable with it from the resources you have. If you need to use or want to learn the modern versions in the future, then you'll be able to pick them up fairly easily. There's only been like 2 updates since 2000.Trying to find the perfect learning plan will be slower then just starting and adapting as you learn more about what you understand easily or don't and the kinds of problems you want to work on in the future.",DrShocker,2025-07-31 18:40:40,12,learnprogramming,t3_1me9hn1,False,
n67oo3h,"I have a strong opinion, held lightly. It’s not the books that are dated, it’s the language. The books are old because the language is old. The books are still good. If you’re working on embedded or real-time systems on limited hardware, C is a good choice.If you want to make web apps, desktop apps, or mobile apps, you’ll need some other language. And if you want to handle other people’s money or personal information, please use a memory-safe language.",Aggressive_Ad_5454,2025-07-31 18:41:45,10,learnprogramming,t3_1me9hn1,False,
n697z51,"It’s a great book for learning how computers really tick. Just remember, efficient learning isn’t about reading more, it’s about building, breaking, and fixing stuff. Bonus points if you Google less and debug more.",alpinebuzz,2025-07-31 23:16:38,5,learnprogramming,t3_1me9hn1,False,
n67svum,"All the really core skills you need to develop don't become irrelevant - problem solving, attention to detail, learning how to walk through a problem step by step and analyze it. Those are honestly the things you'll spend most of your time working on - the technology is just the medium you're working in while refining those skills. Which is why people who focus only on the tech they're learning tend to end up not really developing the skills they need.So don't worry about the technical knowledge being out of date, especially for C which is a very stable language. The only thing that might be out of date is the *pedagogy* \- education is an evolving field and educators are always trying to find better ways to teach - but if the books are working for you, then how they teach is probably fine.The journey from complete beginner to ""proficient enough to get a job as a junior"" is probably 5000 hours long. Don't worry too much about relevancy until like the last 1000 hours honestly, and not at *all* for the first 1000 hours. (obviously times may vary depending on aptitude, drive, etc)",PoMoAnachro,2025-07-31 19:01:40,1,learnprogramming,t3_1me9hn1,False,
n67uyvr,"Efficiency? In terms of time spent, memory management, CPU, storage, documentation?",Dean-KS,2025-07-31 19:11:47,1,learnprogramming,t3_1me9hn1,False,
n69vaxs,"Books are references, but it’s by practicing a lot that you improve. Happy coding.",Comprehensive_Mud803,2025-08-01 01:32:13,1,learnprogramming,t3_1me9hn1,False,
n67rk18,"If you want to learn effectively, don’t read a book, look up the basic syntax and come up with a project to work on first. Then start working on the project. Ensure it’s something that has been done before, so there will be plenty of material online about each part of the process.Look in the book, or online, for precisely the parts you need for your project. Don’t use an LLM to write anything either.You’ll be a competent junior developer in a shorter amount of time than it would take you to read the whole book.",Kezyma,2025-07-31 18:55:20,0,learnprogramming,t3_1me9hn1,False,
n67r70v,Thank you for your reply. My main worry was that I’d do all the reading and end up with useless knowledge that wouldn’t be able to be applied today so I’m glad that’s not the case.,Anon695,2025-07-31 18:53:39,2,learnprogramming,t1_n67og4m,True,
n67qunp,Thank you for your reply. Your knowledge has given me a new perspective and a clearer understanding of what I’m getting into.,Anon695,2025-07-31 18:52:03,3,learnprogramming,t1_n67oo3h,True,
n67xr3o,"Changing a language is kind of dangerous. Imagine a language changed every 3 years. You write a bunch of code this year. Three years from now, they change it, and now your code is broken. Does that seem reasonable? Many beginners feel code changes and they want to learn the latest, not realizing, using the same argument, that in a few years, they'd have to learn something new because the current stuff ""became obsolete"".Of course, 20 years is a long time, but languages that last time often change without breaking.For example, Java has come out with new versions over the past 30+ years. Still, in principle, code written back then would still run now. The biggest changes occurred roughly 20 years ago when generics were introduced. Yes, there are a some other features that came out, but if you stuck mostly to that technology, you'd still be decently fine in Java. You'd only add to that knowledge instead of throwing it away.Keep in mind that code tends to stay around for long periods of time. Code can last 20 years or even longer. If you had to rewrite that code just to keep it up-to-date, that would be crazy amounts of unnecessary work. Beginners think new code is written all the time. They hear Rust is big, so they think millions of lines of Java code are tossed out, and they rewrite it all, not realizing how hard it is to rewrite code. If it took years to write, it takes years to rewrite.Now, there are things that have gotten old, but mostly in web technology. Even so, some still hangs around. I thought PHP went away 20 years ago. It's still around. People still use it because web sites were written 20 years ago. Sure, everyone tells you to learn React or something newer.There was a posted months ago that wanted to learn Carbon, Google's answer to C++. It's not even been released, had no compiler that was available, and is still (for all I know) in limbo today. If they just learned C or Java, they'd be in better shape.Also, many programmers learn more than one language, so even if you never use C again, learning to program translates (somewhat) to learning new languages, so it's not wasted time even if you think it is wasted time. The fact is, to learn programming, you will ultimately ""waste time"". Avoiding mistakes often means avoiding learning.",CodeTinkerer,2025-07-31 19:25:20,4,learnprogramming,t1_n67r70v,False,
n5nbolt,Surely you've looked at https://freecodecamp.org/ and the tutorials for the Unity and Unreal Engine gaming frameworks. Those are decent ways to learn without dropping a lot of cash.,Aggressive_Ad_5454,2025-07-28 17:51:00,13,learnprogramming,t3_1mbmycq,False,
n5niw45,"The boot camp era is dead, it lasted about 2 years during & after covid, and some of them got laid off. You can self learn but if you want to be competitive you need a CS degree + internship experience realistically.Some people report landing jobs after self learning, but those are usually outliers.",Rain-And-Coffee,2025-07-28 18:24:27,12,learnprogramming,t3_1mbmycq,False,
n5nnkbm,"Hey man, it’s never too late to start something new. Just keep your expectations realistic. You probably won’t land your dream job in the next couple of months, but you can definitely start moving toward it.Forget bootcamps they’re a waste of money and won’t guarantee you a job.Here’s what I’d suggest:Take Harvard’s CS50 course online. It’s free and gives a solid introduction to computers and programming.After that, it’s kind of a “choose your own adventure,” so to speak. Think about what you want to do, web dev, software engineering, IT, etc. Then go to nostarch.com and find a book that matches your interest. Start working through it, build your own projects, and network to land an entry-level job.It’s tough right now since the tech industry’s going through a downturn, but it’s definitely not impossible.If you have the money and the opportunity get a CS degree it will legitimize you.",Round-Homework5998,2025-07-28 18:46:41,9,learnprogramming,t3_1mbmycq,False,
n5naqfs,"If you want a career in CS, start with a CS degree.Bootcamps are a waste of time.Keep in mind this is the single worst time in history to try to break in to the career field.",polymorphicshade,2025-07-28 17:46:45,11,learnprogramming,t3_1mbmycq,False,
n5ncr0c,"At this point unless you're a top 1% self-taught developer with a lot going for you then I wouldn't recommend anything less than a 4 year degree. However, even they're struggling to land jobs in the last couple years (both previously mentioned groups). A bootcamp is not just a waste of time, but with some companies it's actually a red flag and that number is growing.",Serenity867,2025-07-28 17:55:49,7,learnprogramming,t3_1mbmycq,False,
n5q0epv,"I was at help desk and started with this book [https://automatetheboringstuff.com/](https://automatetheboringstuff.com/) Good luck, it's gonna be a rough ride for CS in the next 10 years, even if you're in AI",Complex-Web9670,2025-07-29 02:10:58,3,learnprogramming,t3_1mbmycq,False,
n5nae5m,What do you mean working with CS most of your life?,rtalpade,2025-07-28 17:45:11,2,learnprogramming,t3_1mbmycq,False,
n5o2mke,"Really bad timing and in your 40s, nothing is impossible, but since you really need money to live, switching fields right now for you will be extremely hard.If you arent passionate about this, dont waste your time.",Mol2h,2025-07-28 19:58:59,2,learnprogramming,t3_1mbmycq,False,
n5op17h,I'm not sure it's recommended. I used to work at faang now I'm working at REI for healthcare benefits and hustling on the side. It's rough out there.,mountainlifa,2025-07-28 21:47:09,2,learnprogramming,t3_1mbmycq,False,
n5qomyg,I am 36 years old. I just transiyioned to cs. The barrier to become a programmer is not high. The barrier to get a job as a programmer is higher than ever. Bootcamps and self taught says are over. Im getting masters in cs for people with no cs background. I highly recommend going this route. Trust me since im in the exact same boat as you are. Ive applied to 800 jobs with no luck after bootcamp :grimacing_face:,Ok_Helicopter7697,2025-07-29 04:55:03,2,learnprogramming,t3_1mbmycq,False,
n5m1rmp,You're still a baby in the grand scheme of things.,Pearl_Jam_,2025-07-28 14:15:13,56,learnprogramming,t3_1mbh2uv,False,
n5m11jl,"Practice your art, practice your 'C'.Unless you use Godot or some other engine , you will benefit greatly from knowing C, so stop judging yourself so harshly! As they say, compare yourself only to the person you were yesterday.I too am a procrastinator, but I have learned to ignore those horrid inner voices that say ""Do it later"" and just do it anyway.parents! haha we've all been there, they are, ultimately, on your side even if they sometimes don't come across that way; they will not want you to fail so they may be cautious of you trying anything adventurous, but you do what you need to do, and when it works, parents can bask in your glory.",bravopapa99,2025-07-28 14:11:33,26,learnprogramming,t3_1mbh2uv,False,
n5m5276,"For making games, your best bet is C or C++, maybe Java, Python is used a lot more for stuff like statistics, analytics, accounting, and data management.I enjoyed the free Harvard tutorial on YouTube for Game Development. It showed you how to make a games, but they are a little too advanced for beginners since they assume that you already know the basics of coding. At an absolute beginner though, I would study coding basics, there are a lot of free sources and videos on YouTube for basics.Being self-taught at the beginning is usually the hardest part about being self-taught. You have no basis on what you have to learn and how well you need to know it, or even why you have to learn it. It sounds like you're going to basically be behind a single semester, which to be honest, isnt TOO bad, even though at the moment it sounds like the end of the world, trust me, its not that much time. My honest advice for you is to try and calm your anxieties for now and build a good relationship with programming. Go and pick a youtube tutorial Playlist you like, familiarize yourself with compilers/code editors, and just practice the basics like variables and loops. Don't try and make it into homework or work, just have fun with it, make it low stakes. If you like podcasts or lofi play some in the background while messing with some loops to familiarize yourself with them. Write a loop, change the variables. Add stuff, if it breaks, oh well, start over, delete the whole loop and write it again and start testing new stuff out. Go into leetcode and try out some of the easier prompts, if its too hard, its fine, just make a point to try it out and get used to the way the syntax works.",Error-7-0-7-,2025-07-28 14:31:38,9,learnprogramming,t3_1mbh2uv,False,
n5m583p,You could start playing around with unreal engine or unity. Unreal uses c++ and unity uses c#. I know unreal has a lot of learning material. Unity probably does as well. Check out blender also for modeling.,nondickhead,2025-07-28 14:32:27,3,learnprogramming,t3_1mbh2uv,False,
n5mkari,"If you want to get a bit of a head start for university, try out the free online Harvard CS50!https://pll.harvard.edu/course/cs50-introduction-computer-scienceIt's a really nice introduction which dabbles in several fields so you get some insights on what is possible, and you can set your own pace learning. The videos are also really fun!",ObsidianHumour,2025-07-28 15:44:38,3,learnprogramming,t3_1mbh2uv,False,
n5m28j2,"You can work in the games industry without learning how to code. There are plenty of concept artists, character designers, level designers, modelers, etc who never need to learn code. Don""t just ""learn python"". Jump directly into a game engine and experiment there. And video games don't all have to be AAA 3D open world etc. Make a short hypertext game in Twine and you'll learn the basics of JavaScript. Cat.js was also a fairly intuitive engine for me. For Pythonic engines there's Godot or Ren.py. And if you know C you can try Unity (I kind of hated working in Unity though).Join a game jam to force yourself to make something quickly and without the need for perfection: https://itch.io/jams",mousachu,2025-07-28 14:17:36,2,learnprogramming,t3_1mbh2uv,False,
n5m4688,"Ok, so you want to be a game dev right? I’ll challenge you then. Start learning C++ by whatever means you learn best. Learn enough to make pong. I’d say start with pygame but since you already know a bit of C and this is your dream, jump right in the deep end. Good luck.",Dazzling-Tonight-665,2025-07-28 14:27:13,2,learnprogramming,t3_1mbh2uv,False,
n5m4m07,Usually when I feel stuck. I like to sit down and ask myself why. Feeling stuck is always a sign to me that I am not being true to myself. There is usually deeper trauma or Self-Misunderstanding that I have to force myself to work through. You say that it is your dream to become this so there shouldn't be no doubts. Unless you're going in into it with the wrong mindset. For the wrong reasons. Sit down and ask yourself why.,kaizenkaos,2025-07-28 14:29:23,2,learnprogramming,t3_1mbh2uv,False,
n5m7fab,"Hey OP!First, I know how much of a blow it may feel like to wait to get into university. This doesn't make you any less and is really an opportunity in disguise. You now have a few months to practice coding and get a feel for if you like it over design/story telling. Also don't be afraid to not get into programming and just stick with what you know (design and story telling). I know it sounds cliche, but you'll never be happy doing things to prove your worth to other people. I wasted a lot of time and opportunities in my 20s because I couldn't learn that lesson. Maybe consider pivoting your degree to design (some uni's have game design specific courses) or to something that would better suit storytelling for game development. My degree was in IT with a focus in programming and software engineering. To me the hardest thing in my program was understanding the ""thought"" process behind solving problems with code. A great way to practice this for me was actually playing the game Human Resource Machine on Steam. It forces you to ""think"" and ""problem solve"" in a way that is really beneficial to coding. The reason I harpe on this is because to me, my C# and Python classes were pretty similar. The foundation of WHAT you were doing was the same, but the syntax you use to execute it is different.",xTrashQueenx,2025-07-28 14:43:10,2,learnprogramming,t3_1mbh2uv,False,
n5mdab2,"As a fellow procrastinator, I would say you should work on something you're passionate about. Learning for the sake of learning can be difficult for some people, including me. You mentioned game development, so why not try to learn Godot, Unreal, or Unity? You will need to code various things in them, so you can get a jump start with coding while doing something you enjoy.",Zesher_,2025-07-28 15:11:27,2,learnprogramming,t3_1mbh2uv,False,
n6nxtao,"every single project is a book store but just on a grander scale and with more stuff tacked on. understanding large systems takes time.it sounds too simple but it really is the truth. hearing terms like cache, oauth and JWT makes you go ""scary! complicated!"" but it is a matter of demystifying the scary unknown into ""eh just grab the package and do these two lines of config"".do that often enough and you too can tack on 30 technologies that didn't need to be there, just like the rest of the professional software developers.",scandii,2025-08-03 08:45:07,30,learnprogramming,t3_1mge83z,False,
n6nxyov,One piece at a time,SirMudkippington,2025-08-03 08:46:35,9,learnprogramming,t3_1mge83z,False,
n6od5t0,"‘Man i wish there was an app that did X OR this thing i use all the time doesn’t do X’Implement X . Honestly you could just go fix bugs in open source stuff, that’s some really good experience and you don’t need an internshipBreaking a large problem down into discreet things to implement is one of the main skills of a developer",Trakeen,2025-08-03 11:12:25,5,learnprogramming,t3_1mge83z,False,
n6pg38l,"Learn by building. If you dwell on what you don’t know, you’ll feel stuck and overwhelmed. Instead, focus on creating and learning as you go—it’s the best way to grow.",Odd-Cap6436,2025-08-03 15:13:07,6,learnprogramming,t3_1mge83z,False,
n6ogsih,Don’t stress about it. Just study some more. I didn’t know shit for a time. Then it just clicked. Start with a simple idea and just make it. Like a todo app. Or calendar. Can even make a game like text adventure or pong or something else. Try Make a plan for each one for the scope out what is needed. Then get to implementing it. Yes everyone has done these projects and it’s nothing special. But doing them will help and have a start for a portfolio. In the meantime look for jobs. It’s not the end of your life if you don’t get it by the end of uni. A lot of people are still trying to figure it out.Edit: can even do an inventory tracker. Or a booking app or a seating chart + food tracker for a restaurant. Just take any idea you see and replicate it. It doesn’t need all the features.Can even do mini projects jsut to understand 1 idea. For example I wanted to learn about multiplayer so I made a small demo for jsut connecting moving around. Spawning in projectiles to do damage and logging out.,flow_Guy1,2025-08-03 11:42:08,1,learnprogramming,t3_1mge83z,False,
n6olsjv,"Practice makes perfect and you have to enjoy what you’re building. What you need is the principles of programming. Which is the basics such as knowing how to use variables, functions, logical statements, booleans, etc.Start small with basic projects related to something you enjoy in real life. For example, football, cooking, wrestling, gaming, etc. Take gaming for example, I’ve been playing runescape lately and enjoying that. I thought of an idea where you can select the items you want to upgrade to and it will tell you exactly the costs and items to upgrade it with and give a plan on that.With any project break the idea / problem down to smaller objectives you can easily do. For the above I would do something like:* Hard code the upgrade data and item list for now* Create a function that can calculate the upgrade route of selected items* Display the items that you can select * Display the upgrade route once items are selectedNow always keep your project simple and hard coded, then you can start adding improvements. For example I can connect it to a database, maybe supabase or MySQL or mongodb, etc. I can also connect it to authentication so users can save their ideal upgrade builds, presets, etc.You want to always start small, then incrementally add to it. By adding overtime, that’s when a project gets complex. Even with the complex projects you mentioned, if you break them down into parts they’re actually very simple.You have HTML, CSS and JS knowledge, so I’d recommend you pick up a framework like React / Next.js, Angular or Vue. I’d recommend you try all three with a basic project then you’ll get a feel on which one you’d like to use long term.If you want some project ideas give a shout on what you enjoy and I can hit you back with some ideas. Try not to use AI during this period, use things like documentation, googling, books. Then once you’re comfortable you can use AI for research but don’t heavily rely on it for your code, you want to use it to help you grasp concepts. The key thing for you right now is to learn problem solving while you’re doing these projects.",FaisalHoque,2025-08-03 12:19:14,1,learnprogramming,t3_1mge83z,False,
n6r1899,"Complex projects start with planning and functional specifications. Chop it into smaller pieces. Then you work through the components of your project until you can string it all together.This is what sets programmers apart from coders, imo. Programming is the craft of gluing together arrays of technical solutions, creating the ones that are missing.",jqVgawJG,2025-08-03 20:05:00,1,learnprogramming,t3_1mge83z,False,
n6rdh6m,"Piece by piece, Brick by brick. Component by component. Its like building a house. But you research sht ton and have the skill to do `How to do x y z` on what u need",jericho1050,2025-08-03 21:06:46,1,learnprogramming,t3_1mge83z,False,
n6rxbss,"Feel like im in the same boat started late im 36 been taking classes as well as doing udemy online in my freetime, I find manually writing everything down helps me tremendously",mattp1123,2025-08-03 22:55:48,1,learnprogramming,t3_1mge83z,False,
n6sc2vz,"Start with one simple project and build it without tutorials. If it breaks, fix it. If it works, improve it. That’s how real learning happens.",alpinebuzz,2025-08-04 00:21:09,1,learnprogramming,t3_1mge83z,False,
n5v5icz,">Is there anything wrong with spending 5+ hours a day working on my project if I enjoy doing it?Why would there be? Is there anything more urgent you're not doing instead? You won't regret doing things you enjoyed, unless you used that as a way of **avoiding** doing things you needed to do. If it will help you in your career (I think only you can judge that), so much the better.",numeralbug,2025-07-29 21:08:08,26,learnprogramming,t3_1mcnhx8,False,
n5v6blk,"There's nothing wrong with spending time doing the things you enjoy.  The only exception is if you are spending time doing something at the cost of your health or well-being or that of others.But if you're enjoying yourself and not hurting anyone, the topic doesn't matter.  Go enjoy life.",Luigi-Was-Right,2025-07-29 21:12:03,11,learnprogramming,t3_1mcnhx8,False,
n5v7tlf,"No dude this is literally ideal. I have a very similar temperament and spent a good chunk of my final year building certain AI projects that I thought were cool. I don’t regret a second of it. I ended up getting a job working with the same technology and so now I get paid to play with the technology I was happily doing for fun in my free time. Employer loves my passion for the tech, and those projects let me speak about these things in interviews very well. In my second year summer, I built an Arduino project that would present you with a math problem and you had to put in the answer using binary (with twos complement for negative numbers) by clicking physical buttons. It tracked the time spent on the answers, and I timed myself doing it sober for about 20 minutes, ingested a shit ton of cannabis and did it again. Then I spent the next few days analyzing the difference in performance using Python. I can never bring that up in an interview but I genuinely enjoyed doing it. I don’t regret it. Overall my point is you’ll never regret having fun. I don’t regret the time I spend playing video games, and I definitely don’t regret any time spent that has practical benefits to me. You should be psyched that you’re enjoying this stuff. You have the “knack”.",ProfessionalShop9137,2025-07-29 21:19:17,4,learnprogramming,t3_1mcnhx8,False,
n5v8d3f,I totally relate to your goals! I also want to contribute to groundbreaking research but at the intersection of computer science and either biology or neuroscience. I love learning about these topics! Although it can be really overwhelming. I’m excited to see where the knowledge will take me and what doors it will open. I get a sense of fulfillment when I’m coding and when I think about the things that can be done in the field. Just wanted to let you know you’re not alone in feeling this way.,Ojaura_,2025-07-29 21:21:56,3,learnprogramming,t3_1mcnhx8,False,
n5v72r8,What the heck is this,cev4,2025-07-29 21:15:41,3,learnprogramming,t3_1mcnhx8,False,
n5vlqsc,For my AI i spent over 3 years and averaged like 2 hours a day not including weekends. Its totally normal to love something and work on it.,Solar_Flare_00,2025-07-29 22:30:18,1,learnprogramming,t3_1mcnhx8,False,
n5vszky,"It's fine to spend as much time doing whatever you want. I spend an absurd amount of time programming. However, finding a balance in your life is important too. If you are so focused that you are neglecting your health or having a fulfilling life with family, friends, and meaningful relationships... you might indeed regret it later in life. As someone quite a bit older... I would give anything for a few more memories earlier in my life with my father ... and I could care less about all the late nights I spent hacking.",cgoldberg,2025-07-29 23:09:07,1,learnprogramming,t3_1mcnhx8,False,
n5wty9d,"im almost in the same boat as you , i’m 23 and was dreading uni classes until i started working on my first Python project this summer and i literally cannot stop coding now. Got too addicted and been working on it 4-12 hours a day the past month. Despite all the negative talk about getting jobs in tech it’s probably too late for me to stop now. Just gonna cross my fingers and hope for the best once i get my degree. Good luck to you bro",Lauty_6,2025-07-30 02:40:56,1,learnprogramming,t3_1mcnhx8,False,
n653ngt,"Sounds fine to me. Honestly, I've spend 5+ hours a day on code I'll probably never find again. But, at the time, it was very engaging. You'll be like ""hey, I could take a break, play this video game, but I'm having fun with this project, so...""Time spent coding is never a waste. Even if it might feel like it in the moment if things are goings sideways. You're teaching yourself things, regardless. How could that possibly be bad?",WystanH,2025-07-31 10:40:16,1,learnprogramming,t3_1mcnhx8,False,
n676e1y,"You already have your bachelors, being 22? And working towards that PhD? If that's the case - then great, yeah go for it. If you're pulling some pipe dream stuff and are 22 without any college experience drop the whole PhD/lab thing, it's still fine to work 5+ hours a day on your project, but you will burn out at some point.",Hail2Hue,2025-07-31 17:17:46,1,learnprogramming,t3_1mcnhx8,False,
n6enpdd,"Memory overhead? What do you mean? Memory usage is O(n). Run time is hard to determine. It could be as bad as O(n\^2) or maybe even worse. Depends on the implementation of realloc.The sensible approach is to double i and realloc, not to increment i by 1 and realloc.",cormack_gv,2025-08-01 19:44:44,28,learnprogramming,t3_1mf5slt,False,
n6er63z,"I'm unclear on what you mean by ""memory overhead"" and ""constant.""There are a few things your professor might be talking about:* The ""realloc"" call will quite possibly give you more memory than you requested, either because there's a conveniently sized chunk on the free list (if i is small) or because it's reserving whole blocks for you (if i is large). If the new size is still smaller than what you originally asked for, it's possible that realloc() might not do anything.* The total amount of memory used will increase with n, but because it's freeing what it had before, at most ""n"" memory will ever be taken up.* You might think 1 + 2 + 3 +... + n is some sort of exponential sort of thing, but it's just n\^2. Which still isn't nearly constant, but maybe that's a thing he's talking about?But honestly I have no idea what you and your professsor are talking about.",captainAwesomePants,2025-08-01 20:02:03,8,learnprogramming,t3_1mf5slt,False,
n6fw82e,My best guess is that on linux (maybe in other cases?) memory allocation at this level is just reserving virtual memory (i.e. reserving contiguous address space - not memory)Then when you try to use it and it hasn't been allocated yet a page fault occurs and actual memory is mapped to your virtual memory. Since in the loop only one element is accessed it'll just be one page of RAM.I'm not a kernel developer and I'm sure I said something not quite right here but I think this is probably what he means,random12823,2025-08-01 23:41:44,3,learnprogramming,t3_1mf5slt,False,
n6gfaf6,"Take the code wrap in in an infinite loop a see what happens. If you think something is BS, then fact check it. Don’t ask Reddit, establish your own facts.",ZogemWho,2025-08-02 01:37:39,2,learnprogramming,t3_1mf5slt,False,
n6enn2p,"The total allocation for `a` at the end of the loop is proportional to `n`, so not constant in that sense. It's also potentially dangerous in that if `realloc()` ever returns NULL then your program is likely to segfault. And it's inefficient to `realloc()` over and over again in a loop when you could just do one a =`calloc(n, sizeof(int))` before entering the loop to fill the array.",stevevdvkpe,2025-08-01 19:44:25,2,learnprogramming,t3_1mf5slt,False,
n6em10y,Time it. There are performance measuring tools. Then you will learn something and perhsps have something to discuss eith your professor.,Alive-Bid9086,2025-08-01 19:36:21,3,learnprogramming,t3_1mf5slt,False,
n6frod5,Sounds sketchy to assume what the allocator does internally.,DSrcl,2025-08-01 23:15:33,1,learnprogramming,t3_1mf5slt,False,
n6g0ps2,"Personally I would see this as an issue of memory fragmentation more than anything, particularly on a rather heavily used machine such as the server.The best thing I would suggest is to use a millisecond timing mechanism and actually record millisecond changes. Then you have concrete proof is to how the system you are using is actually performing. Modern day chipsets perform differently than those built even just a few years ago and so optimizations may very much change the way this whole process works.",RobertD3277,2025-08-02 00:08:12,1,learnprogramming,t3_1mf5slt,False,
n6g6bdq,"Yes the overhead is constant. It uses the standard stack frame ""boilerplate"" + 12 bytes for local variables.unless I'm overlooking something.",da_Aresinger,2025-08-02 00:42:34,1,learnprogramming,t3_1mf5slt,False,
n6lqhrb,"Your professor might mean the pointer size stays constant, but the actual memory usage doesn’t.",alpinebuzz,2025-08-02 22:56:19,1,learnprogramming,t3_1mf5slt,False,
n6pq5t5,One thing you can try is this https://github.com/practical-tutorials/project-based-learning GitHub - practical-tutorials/project-based-learning: Curated list of project-based tutorialsJust select the language you want,Fmatias,2025-08-03 16:04:26,6,learnprogramming,t3_1mgmmrm,False,
n6qelnj,I run a project based mentorship program. Here are the projects we get devs to work through. https://github.com/Ace-Interview-Prep/atc-haskell-projectsThe projects obviously aren't with real users but you are basically rebuilding a similar version of our platform.,_lazyLambda,2025-08-03 18:07:09,2,learnprogramming,t3_1mgmmrm,False,
n6skucy,"Glad I came across this thread, im in the same boat",mattp1123,2025-08-04 01:13:31,1,learnprogramming,t3_1mgmmrm,False,
n6pvdto,"A To-Do list or a Portfolio site are two options that you can try out. These might seem extremely common but they are good proejcts to start with, especially the to-do list app. It teaches you CRUD operations and data handling.",codingzap,2025-08-03 16:31:11,0,learnprogramming,t3_1mgmmrm,False,
n6qnuc0,"The point is that some people find it easier to use. If you don’t, and/or prefer something else, then don’t use it. It’s a tool like anything else.",backfire10z,2025-08-03 18:54:38,51,learnprogramming,t3_1mgr6mg,False,
n6qoc5u,"GitHub Desktop is a GUI on top of the command-line `git` client. VSCode's Git integration is a different GUI on top of the same command-line client. They both do essentially the same thing with a different interface.VSCode's Git plugin connects more directly to VSCode's editing tools, whereas GitHub Desktop provides more features that are related to GitHub but not part of Git itself (e.g. managing PRs and CI builds).And they're even both developed by the same company, since Microsoft owns GitHub.",teraflop,2025-08-03 18:57:10,42,learnprogramming,t3_1mgr6mg,False,
n6qoj8r,"Well these day git is integrated everywhere. But for some people that may not use vs code and that feel uncomfortable with the command line, having an application to do it might help.",nicolas_06,2025-08-03 18:58:11,5,learnprogramming,t3_1mgr6mg,False,
n6qnurl,"If you don't like it, don't use. It's UX to replace command line. I like it for convenience, but I definitely have to swap to the CLI for its inevitable edge cases.",VerbiageBarrage,2025-08-03 18:54:41,6,learnprogramming,t3_1mgr6mg,False,
n6qv0mb,"I just use it for some side projects. Some aren't even about programming. Just some data on github that I need to sync. For actual programming in a team I use the git inside the IDE, which is intellij right now.",vegan_antitheist,2025-08-03 19:32:05,1,learnprogramming,t3_1mgr6mg,False,
n6qvs47,I use it for syncing non-code items such as documentation or graphics I have exported from Illistrator if I don't have an IDE open.,I_am_transparent,2025-08-03 19:36:12,1,learnprogramming,t3_1mgr6mg,False,
n6qvuyg,"It's pretty useful if you have to use Xcode (insanely shitty IDE), so when doing stuff with Git, you can at least escape from Xcode.",Task_ID,2025-08-03 19:36:38,1,learnprogramming,t3_1mgr6mg,False,
n6qy205,"I use it to clone the repo because I am too dumb to figure out how to do that with VSCode. After that, I use VSCode for all, especially the staging.",BoBoBearDev,2025-08-03 19:48:23,1,learnprogramming,t3_1mgr6mg,False,
n6qzjt0,"The point of any git GUI is to make using git more convenient. Use whichever one you like. If whatever is build into vscode is sufficient for you, you don't need github desktop or any other GUI client.",Dissentient,2025-08-03 19:56:15,1,learnprogramming,t3_1mgr6mg,False,
n6qznsh,I just like it more,SpiritRaccoon1993,2025-08-03 19:56:51,1,learnprogramming,t3_1mgr6mg,False,
n63vgwl,"Pick a specialty that you have a passion for, and start researching the common ways to solve problems or create projects in that field. I'm interested in systems programming, so things like interpreters, compilers, kernels, etc. I've been learning to make interpreters/compilers for several months now and am making progress. It's a bit difficult to give you more precise and accurate advice because you haven't indicated what field(s) you have an interest in. C and C++ are very good languages, I'm very partial to C++, but they can be used in many things.EDIT: If you're looking for a C++ course, I recommend [learncpp.com](http://learncpp.com)EDIT 2: My mistake I see you specified you wanted to learn AI/ML. I would suggest researching job postings, assuming you want to find a job in it, look at what technologies they're looking for, and start doing projects with those tools/technologies.",Dappster98,2025-07-31 04:10:40,8,learnprogramming,t3_1mdrpp7,False,
n63x3cl,"> How should I begin?Go to class, pay attention, do the assignments, repeat…When you find yourself having trouble, go to your instructor’s office hours.Don’t spend so much time trying to relearn what you missed that you get behind in what you’re supposed to be doing now,",iOSCaleb,2025-07-31 04:22:26,7,learnprogramming,t3_1mdrpp7,False,
n641lny,"You should start with “why”?Why’d you want to study them?Once you can figure out a few answers, try narrowing them down.With those refinements, start first by collecting the resources you might need (books, notes, YouTube videos). Prepare a plan, a fixed time per day or whatever suits you. But it has to be consistent.Begin by studying and implementing them in your answers you found above. (More concise the answer, more you’ll find clarity)Build. Build. Build.And. Don’t look back.",nipunshakya,2025-07-31 04:57:10,3,learnprogramming,t3_1mdrpp7,False,
n644jjh,Are you AInoob2pro today or thats the plan?,rtalpade,2025-07-31 05:21:16,2,learnprogramming,t3_1mdrpp7,False,
n652cu0,You will have a lifetime to hone your skills. Dont worry,Regular-Log2773,2025-07-31 10:29:33,1,learnprogramming,t3_1mdrpp7,False,
n659e8a,"Generally you only learn the basics and starting points during your first year. I work with interns and new grads a bunch, and even after graduating I assume they only know the basics. So focus on your future courses, but don't sweat feeling like you don't know too much after just one year.",Zesher_,2025-07-31 11:23:45,1,learnprogramming,t3_1mdrpp7,False,
n6473r0,"No, you did not waste your time. Your brain was forming the connections that you need that will accelerate your future learning, and then AI will take over and then we will all realize that we've all wasted 10 years of our time",ApprehensiveDrive517,2025-07-31 05:42:46,0,learnprogramming,t3_1mdrpp7,False,
n63xswl,Thank you for the reply got a fair idea of how to proceed will surely go and check those out,AInoob2pro,2025-07-31 04:27:45,2,learnprogramming,t1_n63vgwl,True,
n63yfgs,"Solid advice, but I partially disagree with not spending time relearning. DSA would be a nightmare if you skipped fundamentals of programming for example.Best to work with your instructor to see where you are and how you can catch up.And of course, the most important advice that trumps all other advice: ""Go to class, pay attention, do the assignments, repeat…""",maujood,2025-07-31 04:32:31,2,learnprogramming,t1_n63x3cl,False,
n645ze3,I would say that is the goal,AInoob2pro,2025-07-31 05:33:13,2,learnprogramming,t1_n644jjh,True,
n6dgqau,"You can audit CS50x from Harvard for free online. Pretty useful course. Do the course work, listen to the lectures don't cheat. Harvard has a custom built LLM to help you without straight up giving you the answrTheres also websites like boot.dev or codecademy for some basic syntax and stuff for freeKhanacademy has a Java course I believe. You can also learn",Alexjp127,2025-08-01 16:17:29,11,learnprogramming,t3_1mf0jc4,False,
n6dgq1y,"Pseudo code is helpful for working out minor details of an algorithm or program, it can be used in place of actual code if you say dont have a computer, but by far the best way to learn programming is to make projects, at first these projects are simple from printing things out to simple string input and file handling to classes. One of the best ways to learn data structures is to start with an abstract data type, and then use test driven development to make your own version of that data type. Once you know how to program you can start to build out some of your high level ideas (not as in programming language ideas, more as how a project works) like how project life cycle goes, how to structure a project how to research and find applicable libraries and how to vet them how to reconcile licensing, how to deploy a project, etc.",bestjakeisbest,2025-08-01 16:17:27,5,learnprogramming,t3_1mf0jc4,False,
n6dh009,"what do you want to make with programming? Why do you want to learn it? What have you built so far? What language do you want to learn with? If you're just in it for the shiggles, you probably won't get too far, but if you've got a goal in mind, then you can work towards something.",diogenes_sadecv,2025-08-01 16:18:45,2,learnprogramming,t3_1mf0jc4,False,
n6dktm7,"\> To understand these concepts more I am told to try implementing them from scratch..but I don't know how.\> I don't understand how a computer is able to encode the concept of inequality such as 2 <3 or why I need a current and temp variable when traversing an array or swapping array values.I think you need to get out of the mindset of not knowing ""how"" to do something. Apply your own thought process. You don't need to understand a programming language or concept to understand the logic behind the topics you are thinking about. Lock yourself in a room and think about the problem from the base case.For example, why do you need a temp variable to store values when swapping in an array? Well, imagine you are organizing a stack of books. You want to move the one in the 5th position to the 3rd position in the stack. So aks yourself, what do you do? You have some options! First, you could pick them up in your hands and move them to where you want them. Or second, you could pick one up, lets say the 2nd one, and shove it in after the 5th book, shoving every other book after it down, then take the 5th book and put it back where the 2nd book was. Or visa versa.So which option is better? It's a lot harder to move a bunch of books after the 5th book just to shove that 2nd book in there. So lets pick them up and swap instead.You pick up book 2, pick up book 5, and swap them. Ok, so if you wanted to do that on a computer, what's different? Well, you used your hand to store the books temporarily, so it's clear you have to put them somewhere when you swap. But actually, we can do better! Because in a computer things don't physically exist and it's all information, we can just pick one of them up, and copy the other into it's place. Now you can ask yourself, what would happen if I didn't pick up that book before copying over it? Well you'd no longer know what the book was, right? You'd lose all the content, all the pages, the title, everything about that book would have been replaced by the book you just copied into its place. This is the thought process you have to apply to *any problem* you don't understand. Stand with the fundamentals. This actually has a name; ""principles first approach"". This is what I employ to most problems. As you gain more experience, you will start to see parallels and abstractions, and shortcuts you can take with the ""base case"".For example, now that you know you need to store a variable temporarily, and you are asked how to swap elements in a binary tree, or rotate it, you can start your base case at the fact that you'll need at least one temporary variable.Best of luck \~",yodog5,2025-08-01 16:37:05,2,learnprogramming,t3_1mf0jc4,False,
n6dofqz,"well, linear algebra and discrete math don't really have much to do with coding. and learning pseudo code isn't really going to really help with those topics. Your issue is not pseudo code, but skipping levels and being dropped into the deep end.What school did you go to? Did they have a recommened plan of study? For example, looking at the CS plan of study for purdue, you take data structures and algorithims in the second year, after having had two seperate progamming classes. Same with math. Did you have the necessary foundational skills before being dropped into linear algebra?",mshcat,2025-08-01 16:54:32,2,learnprogramming,t3_1mf0jc4,False,
n6dxa34,">I learn about \[...\] Godot or Kotlin \[...\] then go back to an ""intro to Java/Python/C# course""This is too much. Choose one and stick with it. It doesn't matter which.>When I am having trouble making a project from scratch I am told to start very simpleGraphical programs are too complicated. Start smaller. Make stuff **in the text console**. Have you made Guess-the-number? Tic-tac-toe? Snake? These are reasonable projects for a beginner. You should be able to study the basics of a programming language, and make guess-the-number at the end. If you've made guess-the-number you can make tic-tac-toe; if you have made tic-tac-toe you can make a snake game.It sounds like you've been trying to learn things out-of-order, and would benefit from studying in a more structured way.You may benefit from taking a break. IDK if there's anything going on that contributed to those bad grades, but if there is, try taking care of that first.",light_switchy,2025-08-01 17:36:08,2,learnprogramming,t3_1mf0jc4,False,
n6dimph,"Take some time away from your studies if possible. You dont have to tackle everything at once. Alternatively, you dont have to be fully knowledgeable in each and every field of study you decide to take up simultaneously. You say you struggled with identifying the pattern in questions but why are you fetching for patterns immediately? Just imagine that you are the person/scenario in the problem. What is the idea/thing that comes to mind first most intuitively? Like, ""Oh I just want to minimize the losses in my business venture. What should the prices of my items be then?"". From there, the ""pattern"" you seek emerges. But everyone sees this ""pattern"" differently so dont fret if you dont get it or you interpret it differently. You should start a project precisely because you are a novice. No one randomly goes from novice to expert out of thin air. The tools and libraries you see are there because someone sat there and thought ""What is the first solutiont that comes to mind?"" and explored the consequences. When that led to an unsatisfactory answer, they redid it until it was passable. Then someone else came along and tried themselves to improve it, and then someone else came along...You say you have trouble parsing documentation and reading code, but everyone does too. You are not alone in that. Everytime anyone decides to use a new library, its always tough to adjust to the new style of documentation that they have to sift through. Often times theres more information on there than you can even begin to understand. But as long as the thing you're working on works, why do you care so much as a user?To me, I feel like you're not dumb. You're just overwhelmed. Take some time off of studying. You have a lot more time to complete those last 2 years of CS",ApprehensiveDebt8914,2025-08-01 16:26:33,1,learnprogramming,t3_1mf0jc4,False,
n6dpwrp,"Learn programming to understand how to follow algorithms.>I then go back to an ""intro to java/python/c# course"" for the nth time, go over arrays, variable types, string, int, if else statements, loops, nested loops, pointers, but still don't feel I know how to design a program and implement it in code. Software design is very different from implementing the design. There's a reason why software engineers are paid more than just your average programmer who knows how to write some code but has no real idea how to actually come up with the design.If you're focused on DSA, you don't need to focus on software design.",mxldevs,2025-08-01 17:01:40,1,learnprogramming,t3_1mf0jc4,False,
n6dse1y,The sooner you start writing code the better,snowbirdnerd,2025-08-01 17:13:27,1,learnprogramming,t3_1mf0jc4,False,
n6e2wtc,Solving math problems will translate better than psuedocode,Neomalytrix,2025-08-01 18:02:38,1,learnprogramming,t3_1mf0jc4,False,
n64cp6j,"> Has this happened to anyone else?No, never, you are the only person in the world under several billion people who this happened to^/sReally, such questions are completely moot as you will never ever be the only one, unless you do something completely brand new (like jumping out of a balloon in the stratosphere).Losing the ""spark"" is completely normal, not only in programming, in everything. At first when you start something new, you're excited, but that excitement naturally wears off the more routine it becomes, the longer you are into it. This happens with everything.Yet, read: [I lost my motivation for programming/It is difficult to maintain my motivation](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_i_lost_my_motivation_for_programming.2Fit_is_difficult_to_maintain_my_motivation) from the **FAQ** here with the included articles.Relying on motivation as sole driver is a sure guarantee for failure. Discipline and persistence are what get people through.Treat your project as if you had a contract with a client. This sometimes helps.",aqua_regis,2025-07-31 06:31:50,12,learnprogramming,t3_1mdt02z,False,
n64iqzz,"Take out a piece of paper and write a short paragraph describing what the project does and who it will help. Keep it simple and to the point.Tape that paper to a nearby wall and let it be your North Star. When you’re not feeling motivated, take a minute to think about the goal and the people that could benefit (even if it’s just you). If you run into a difficult decision, go back to the paper and remember what your objective is. Don’t let the project’s scope expand before you reach the goal. Keep it simple and do only as much as you need to achieve the goal.",iOSCaleb,2025-07-31 07:27:26,3,learnprogramming,t3_1mdt02z,False,
n65gj9j,"What logically comes after the basics frontend tech, CSS, JS, HTML, would be API integration. Simply take any open web API and start building a small app with multiple views/routes and possibly a login feature. The idea is to expose any concepts you've yet to learn and how to integrate them into one project, even if you don't end up finishing it the project itself. Things like GraphQL, 0Auth, the fetch API, and other tech are pretty deep and knowing your way around them is quite valuable to potential freelance clients. Here's a link to some good APIs you can practice with: [https://github.com/public-apis/public-apis](https://github.com/public-apis/public-apis)",Several_Swordfish236,2025-07-31 12:11:14,3,learnprogramming,t3_1mdt02z,False,
n65q82m,"Motivation exists to create habits and systems of work. You're going to lose it at some point, so make good habits and build healthy systems to carry you through the days of low energy..",LoL_is_pepega_BIA,2025-07-31 13:07:30,3,learnprogramming,t3_1mdt02z,False,
n6456zc,Target whatever local agency or company you think is shit... research their infrastructure and boom.. you got a project/passive income if they accept your changes...,No_Understanding6388,2025-07-31 05:26:36,0,learnprogramming,t3_1mdt02z,False,
n64qe2d,"Yeah, fair enough. I know i'm not literally the only one, i guess i was just feeling stuck and just wanted to hear how others got through this stage. Thanks for pointing me to the FAQ, i'll definitely check it out. Also, treating project like a client work is I think a brilliant idea. I'll try it.",Klutzy_Point_7831,2025-07-31 08:40:08,4,learnprogramming,t1_n64cp6j,True,
n640die,"> CS is a glorified Math degreeThis is misleading. CS has foundations in mathematics, but it is very different from mathematics that you're studying right now. I don't think learning a lot of math will give you too much of an edge in a CS degree. Linear Algebra and Calculus are subjects you will study as part of a CS degree, but CS does not build upon them like Algebra builds on Arithmetic. CS is related to mathematics, but it is a different discipline.You could set yourself up better for a CS degree by studying programming, or taking a course like CS50 that introduces computer science.",maujood,2025-07-31 04:47:41,10,learnprogramming,t3_1mdrp85,False,
n63vnfv,"Calc 1,2 and linear algebra",bfhd72,2025-07-31 04:11:59,5,learnprogramming,t3_1mdrp85,False,
n63w02e,"you’ll likely take calc 1 & 2, for programming though, discrete mathematics is where you really want to lock in too",No-Strawberry623,2025-07-31 04:14:32,5,learnprogramming,t3_1mdrp85,False,
n64c57o,"Consider learning CS-related mathematics from books from notable publishers such as Pearson or, McGraw Hill, and the likes. These books are really good.For example, Discrete Mathematics by Kenneth H. Rosen, 8 edition is a gem to have. There are many other books I can recommend to you but only if you take the interest in reading them because book reading, let's be honest, is not everyone's cup of tea.",Competitive_Aside461,2025-07-31 06:26:48,2,learnprogramming,t3_1mdrp85,False,
n63w217,"Brush up on Arithmetic and Algebra (and if you're going into college or university for CS, also brush up on Calculus and Linear Algebra). Maybe also Geometry and Kinematics for game dev, simulation software, or other applications that require moving objects across a 2D plane or 3D space. Everything else can be learned or referenced from online resources as you go along, you'll learn more about the maths and systems relevant to CS in your degree (Discrete Maths/Logic, Digital Logic Systems, Data Structures and Algorithms, etc), so getting a solid grasp of the basics first will help you out a lot. Good luck OPEdit: also, to learn programming, you gotta build projects, rote memorization usually isn't enough. Start simple, and add as you go along. You don't need to produce anything production-ready from the beginning of your programming journey, just cement the concepts into your intuition",IndigoTeddy13,2025-07-31 04:14:56,1,learnprogramming,t3_1mdrp85,False,
n64vw0s,"What math you need depends on what you are coding. For most coding, only basic math is needed.If you have a problem with math being theoretical, it can help to first encounter the problem where you need it.",SymbolicDom,2025-07-31 09:32:27,1,learnprogramming,t3_1mdrp85,False,
n669u42,Just pass calc bro,Major_Fang,2025-07-31 14:46:08,1,learnprogramming,t3_1mdrp85,False,
n67zp6n,"You can do programming without knowing any complicated math. However, a general CS degree is kind of like a sampler of lots of different types of programming and some of those types will require some math background. Most notably, you’ll want to touch up on logarithms if you’re a bit rusty since you’ll be using them to analyze the complexity of algorithms in your DSA class(es). Depending on the electives you take, there might be more relevant math topics, such as probability and statistics for data science, or linear algebra for graphics and 3D game development.",Quantum-Bot,2025-07-31 19:34:53,1,learnprogramming,t3_1mdrp85,False,
n647k4d,Yes im currently taking cs50 introduction to computer science but I do sti plan on studying the math part in advance so I can get myself ahead,FirmAssociation367,2025-07-31 05:46:44,5,learnprogramming,t1_n640die,True,
n5xt8qk,"No more than basic math honestly, like you don’t really need to know more than high school algebra for most cases in web development.",Fun_Afternoon_1730,2025-07-30 07:18:34,25,learnprogramming,t3_1mczxde,False,
n5xtif8,It *rarely* goes any more complex than basic arithmetic.,plastikmissile,2025-07-30 07:21:08,17,learnprogramming,t3_1mczxde,False,
n5xv0tn,"Unless you get into animation which may lead into trig and basic calc which often is already done for you in libraries, basic arithmetic like others said",grantrules,2025-07-30 07:35:46,9,learnprogramming,t3_1mczxde,False,
n5xyg68,Like everyone said very little. I think creative writing skills for naming functions and modules prove to be more useful. Lol.,Miserable_Ad9577,2025-07-30 08:08:55,6,learnprogramming,t3_1mczxde,False,
n5xvepq,"Barely any maths at all. Maybe like once a year I'll reach for a calculator. Definitely nothing more advanced than high school maths, usually just basic PEMDAS stuff with ""big"" numbers that I can't do in my head - in the order of 10^2 to 10^6.I studied DSP at uni, lots of calculus and trigonometry. I do have maths chops. But it just never comes up.A few things that do come up that might be tough for a non-maths oriented person:- The 16 times table is useful. We don't use hex much in the front end, but we do for CSS colours. Also, converting from pixel values (`px`) to relative units (`em`, `rem`) usually means dividing by 16. A 32px icon is 2em wide.- Positioning stuff on the screen is just Cartesian coordinates, with (0, 0) at the top left, not bottom left like you were taught at school. But also, your computer is just a fancy calculator, so there's no need to do any of this stuff in your head. Just drop into `node` or the browser console and do the sum you need.",EarhackerWasBanned,2025-07-30 07:39:38,6,learnprogramming,t3_1mczxde,False,
n5y0c8l,"I did backend for a while, and both maths and theoretical computer science were useful only a few times a year. And all of those cases were only because I was doing senior dev / architecture things. In the normal development day to day it basically never comes up in webdev.",Beregolas,2025-07-30 08:27:28,6,learnprogramming,t3_1mczxde,False,
n5xuaq9,"None.Except, understanding scaling - like multiplying values between 0 and 1 to be between two arbitrary values, or the other way around. That is extremely useful when doing animation.And of course counting, adding values and subtracting them, understanding when it goes below zero.",peterlinddk,2025-07-30 07:28:42,5,learnprogramming,t3_1mczxde,False,
n5xvjqr,"nope. maybe if you're building stock market, finance, or over the top animations sites.",Elegant_Mongoose3723,2025-07-30 07:41:01,3,learnprogramming,t3_1mczxde,False,
n5y1st8,thanks to all of you guys. now I can prioritize stuff which matters. thanks a lot.,MAwais099,2025-07-30 08:41:49,3,learnprogramming,t3_1mczxde,True,
n5y3d1k,"I'm not a web developer as such, but I do make websites when my boss insists.For the things you've listed, absolutely none of it.And honestly you don't ""need"" maths, you need to be able to *look stuff up*.",ToThePillory,2025-07-30 08:56:54,3,learnprogramming,t3_1mczxde,False,
n5rljjq,"Stop following tutorials and build something from scratch, doesn't really matter that much what, as long as it's not trivial and not overwhelmingly large, then you'll just give up. You'll make a lot of mistakes and wrong choices, but that's part of the process, you just need to solve things and figure out problems yourself. You transition from basic tutorial projects to something else by just starting, you'll figure things out on the way. Real world project, including open source ones, are often quite daunting to approach if you don't have quite a bit of experience, so i wouldn't worry about it too much.",gramdel,2025-07-29 09:59:15,8,learnprogramming,t3_1mc786s,False,
n5rm2i0,"As usual with such posts: Stop using tutorials. Start creating your own small projects (as you call them ""beginner projects"") from scratch, without tutorials. Build your own things.Grow with your projects. Research what you don't know, but not in the form of tutorials for ""how to build X in language Y"", rather in ""how to connect a SQLite database in Python"" - short tutorials and narrow in scope, specific.Extend your projects, or gradually build larger ones. That's the way to learn.Open Source is an entirely different matter. First, you should only consider contributing to projects that you use and are attached to, not just pick random OS projects and think you can contribute. Sorry to tell you, but it seems that your current skillset is by far not developed enough to be able to follow and to contribute to open source projects with several thousand lines of code and with several modules.You need to gain experience in building your own fairly large applications first (again not through copying tutorials).----When you face a large code base it is usually beneficial to find the main entry. From there, go through each module in the order it is called. You could, if you want (I do it), draw a treemap, use Obsidian with Mermaid Diagrams, etc. to map out the project structure. Get a general overview first and then go into details. Look for *specific* things, e.g. how a certain value is calculated, how a certain part of the code works. Don't try to understand everything at once. This will be overwhelming.This is also the reason not to contribute to random projects. You are not familiar with the product. If you are familiar with an application through use and find an issue, you check the bug/issue tracker, and then go into the code. You try to find where your specific problem happens.",aqua_regis,2025-07-29 10:04:05,4,learnprogramming,t3_1mc786s,False,
n5rldhl,"Step 1) Give an example of a meaningful, complex project. Step 2) Build that project. Ignore that it exists already, just build it.Step 3) Use that product, identify weaknesses, find better solutions, implement them.",sububi71,2025-07-29 09:57:43,1,learnprogramming,t3_1mc786s,False,
n5roe28,"Build what you have you mind that has some complexity to it. You can also come up with your own complexity - for example: 1 billion users. When the complexity comes, you'll be faced with how to solve it. With that, you can think or find solutions. and then you'll learn how to do it. For me, I was building a [3D Settlers of Catan alternative](https://settling-in-rambutan.pages.dev/). That would have some complexity to it: 3D, tile generation, path traversal, a hexagonal grid, multiplayer.",ApprehensiveDrive517,2025-07-29 10:24:58,1,learnprogramming,t3_1mc786s,False,
n5rmsjq,"Thanks for the advice — I’ve actually tried doing what you suggested. I built a few small projects from scratch like a to-do list, a notes app that saves data to localStorage, a digital clock, and a timer — all using plain HTML, CSS, and JavaScript.While I did learn some things, I still feel lost when it comes to structuring code properly, using best practices, or scaling beyond these basic ideas. Sometimes I’m not even sure if I’m solving problems the “right” way, and it gets overwhelming without any guidance.Is there another method you'd recommend to go beyond this stage?Maybe something between tutorials and full independence — like guided projects that explain the why, or studying design patterns or architecture?Would love to hear your thoughts!",Odd-Version-5602,2025-07-29 10:10:39,1,learnprogramming,t1_n5rljjq,True,
n5rp2vv,"I think it's best to just jump in, pick something not trivial, i'd count all those small project you have done trivial. You don't need to know everything beforehand, you'll learn on they way. You'll make a lot of mistakes structuring your code and what not, but that's pretty much a good thing, you'll learn what works and what doesn't and probably learn to correct at least some of your mistakes. I think a good guideline for scope would be that it takes you months to build it rather than days or weeks.",gramdel,2025-07-29 10:31:02,2,learnprogramming,t1_n5rmsjq,False,
n5rq4n6,"these types of projects teach you very little once you've done one or two. the scope is extremely small and they practically only do 1 thing. when you work on something real, it does many different things and you have to then piece together the interwoven logic and structure. this is the part that is especially hard and also what stuff like genAI kind of sucks at. I think a good frame of reference is if something can easily be done by genAI (very small and focused scope), it's probably not challenging enoughthere are many smaller details about how you can approach this, but ultimately what you really have to do is commit to a larger project. in my uni program we already had 2 big (for 1 dev to do in a couple of weeks) projects also requiring UML diagrams and MVC code structure in our first courseI'm also always going to recommend beginners to start out with static-typed languages and NOT something like javascript. languages like these both make it harder to understand what the code you're reading (that someone else has done) is doing, and it potentially lets you skip certain fundamental knowledge that is important and helps you orient yourself with programming. if you really do not want to drop css+html+js I think you should just go on with basic fullstack and use something like java or c# for the backend",NefariousnessMean959,2025-07-29 10:40:00,2,learnprogramming,t1_n5rmsjq,False,
n5suovr,"There's two types of doing things: really not right way to do things (newbie garbage code) good enough way to do things (code looks nice and works properly, other ways to do it might be overengineering for the sake of it)",RealMadHouse,2025-07-29 14:43:09,1,learnprogramming,t1_n5rmsjq,False,
n5s6hg3,"Based on this, I think you need to dig into other peoples’ code.  You’ll probably see a mix of good and bad, and thus improve you discernment.  So instead of starting from scratch, do a project where you modify ir extend existing code.",mapadofu,2025-07-29 12:34:56,0,learnprogramming,t1_n5rmsjq,False,
n6ci8u2,"Try getting a copy Discrete Mathematics and its Applications by Epp. Should cover the basic maths you need for programming. For programming, pick a language and make sure you learn the basic stuff (Sequence, Selection, Iteration, I/O, File I/O, Variables, Arrays/List and a simple search and sort algorithm). I am currently trying to learn go and A Tour of Go, Go by Example, and Learn Go with Tests are what I am currently trying to get into. You could find similar stuff depending on your language like learncpp for C++ and the like.Once you get those mastered, try getting Grokking Algorithms then supplement with CLRS, Algorithm Design Manual or Algorithms by Sedgewick.",towerbooks3192,2025-08-01 13:29:34,12,learnprogramming,t3_1mew0sk,False,
n6cqjwa,Khan Academy to start with?,Mean-Squirrel-948,2025-08-01 14:12:07,7,learnprogramming,t3_1mew0sk,False,
n6d5eoh,"Tbh github has some great repositories for mathematics and programming, some has curricula and syllabus from well known universities.Some i have found for mathematics: https://github.com/Rafiquzzaman420/Math-Bookshttps://github.com/Developer-Y/cs-video-courses",notherex26,2025-08-01 15:23:21,4,learnprogramming,t3_1mew0sk,False,
n6cs1fj,"What kind of maths? The domain is rather large. Same for programming, what kind? It’s also very large. Maybe start in alphabetical order: algebra, then algorithms.",Comprehensive_Mud803,2025-08-01 14:19:21,2,learnprogramming,t3_1mew0sk,False,
n6cgjk5,"pluralsight has good stuff.that being said, start by picking a programming language, and then youtube. its free and good enough to get you going",O_xD,2025-08-01 13:20:34,1,learnprogramming,t3_1mew0sk,False,
n6dwaux,"What are you learning programming for? If you want to build a website or write some scripts for your computer, then you don't really need math.",Potential-Music-5451,2025-08-01 17:31:34,1,learnprogramming,t3_1mew0sk,False,
n6fxnh0,Mathacademy :thumbs_up:,HydrousIt,2025-08-01 23:49:57,1,learnprogramming,t3_1mew0sk,False,
n6hv03n,You can attend free training sessions - [eTrainBrain](https://www.reddit.com/r/eTrainBrain/),AdvertisingNovel4757,2025-08-02 08:28:18,1,learnprogramming,t3_1mew0sk,False,
n6i4j0b,"If you’re going to start with python, basic math is kinda taught as part of the initial learning modules like how to use (+ , -, %, x2 etc) to make calculations.",Broad-Carrot-9424,2025-08-02 10:05:15,1,learnprogramming,t3_1mew0sk,False,
n6cgffq,"What do you want to learn? which language? Maths? you dont need advance maths, just basic ones for most of it, ofc you might encounter problems or things you need to use advance maths, but you wont be ""clearing the ecuation"" (when you get another ecuation from another one, not sure the name in english) and if that happens you probably will be given what to use. If you dont mind the language, I could Recommend you go for MOOC Helsinki University, you have Python (wont recommend as first language I rather to have a strongly typed language for starters) , Java and full Stack for Front end",Nok1a_,2025-08-01 13:19:58,1,learnprogramming,t3_1mew0sk,False,
n5s564p,"Scrimba teaches you with projects which is great, and The Odin Project takes a more ""learn by doing research and projects"" approach which I really enjoyed and taught me a lot. I recommend Scrimba and The Odin Project.",W_lFF,2025-07-29 12:26:50,6,learnprogramming,t3_1mc9w1x,False,
n5s6964,Freecodecamp is good for basic first steps. From YouTube Maximilian Schwarzmüller has great videos,littlecodingthings,2025-07-29 12:33:32,5,learnprogramming,t3_1mc9w1x,False,
n5s4hhu,"It's not a YouTube channel, but I recommend [the very detailed JS tutorial on MDN](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Scripting)!",abrahamguo,2025-07-29 12:22:37,3,learnprogramming,t3_1mc9w1x,False,
n5s5xwa,Traver Media explains greatly,1tzRustyBoy,2025-07-29 12:31:37,3,learnprogramming,t3_1mc9w1x,False,
n5s4szr,Bro Code is good.,idontneed_one,2025-07-29 12:24:35,3,learnprogramming,t3_1mc9w1x,False,
n5s7hyo,"Check out Traversy Media’s JS Crash Course, then The Net Ninja’s Modern JS series. Mosh has a super clear 1‑hour intro, and freeCodeCamp’s got a solid 3‑hour beginner course.",Extension_Anybody150,2025-07-29 12:41:02,2,learnprogramming,t3_1mc9w1x,False,
n5sgirt,"Not free, but i learned a lot from Jonas Schmedman (idk if spelled right) on Udemy. $10 on sale, worth it",Boring_Dish_7306,2025-07-29 13:31:55,2,learnprogramming,t3_1mc9w1x,False,
n5sy23c,"I have stopped using tutorials and courses and just use books now. You can try ""Eloquent JavaScript"" by Marijn Haverbeke.",Ash_ketchup18,2025-07-29 14:59:02,2,learnprogramming,t3_1mc9w1x,False,
n5x0phm,supersimpledev,ayushkas3ra,2025-07-30 03:24:28,2,learnprogramming,t3_1mc9w1x,False,
n5sfu1t,"*sigh* the daily ""where can I find good resources"" postAs if there weren't any **Frequently Asked Questions** linked in the **sidebar** with plenty recommended learning resources.As if this question hadn't been asked near daily already. A bit of searching before posting would be in order.As usual:+ [Free Code Camp](https://freecodecamp.org)+ [The Odin Project](https://theodinproject.com)+ [Mozilla Developer Network (MDN)](https://developer.mozilla.com)",aqua_regis,2025-07-29 13:28:10,1,learnprogramming,t3_1mc9w1x,False,
n5nml4r,"I'm 100% on board with Exercism, I think it's a great platform. I used it and I loved it. Please consider donating if you can.What follows is purely me ""thinking out loud"" and not criticism.Something in the video in your link made me raise an eyebrow. They mention ""chunky AWS bills"". I'm a DevOps/Backend dev by trade so I'm privy to how expensive apps can get to run, but from what I did on Exercism it seems like a relatively simple platform, with an open-source CLI and a web app at its core. That shouldnt require a chunky AWS bill.In the end they need to pay their team of 3, that's totally understandable but I would have liked more transparency about how much is actually spent on the infrastructure itself.",klorophane,2025-07-28 18:42:02,3,learnprogramming,t3_1mbntl7,False,
n5ocb01,"looks good, definitly gonna use it",michiel11069,2025-07-28 20:44:23,1,learnprogramming,t3_1mbntl7,False,
n5qi2qz,"I like it but I feel like the mentors can be really hit or miss. I had a dude who would spend an unnecessary amount of energy on small formatting errors, and would hardly explain things or answer my questions in any useful way. He was like, the only guy doing reviews in my language too.",mierecat,2025-07-29 04:05:33,1,learnprogramming,t3_1mbntl7,False,
n5o7nby,"Sure, the website isn't all that complex, just a nice ruby monolithBut please don't forget the test runners, I'd say that's probably the biggest cost factor",-Danealus-,2025-07-28 20:22:39,2,learnprogramming,t1_n5nml4r,False,
n6bywex,"The pragmatic approach is to pick whatever has the biggest job market, these days web dev is by far the biggest, and recently AI/ML is catching up and maybe will pass it in terms of job availability within the next 5-10 years, so backend web dev or AI/ML is the easy answer. However I’ve worked in backend web dev the majority of my career and while it definitely pays very well it’s not very interesting or challenging to me anymore, 90% of work the past few years is just solving the same problems over and over with a new skin. If I had had the chance to go to school I probably would’ve leaned more towards computer vision, embedded, graphics/media or something else but being self taught I took the pragmatic approach to enter the web dev arena. So my advice would be to pick up whatever interests you most, because that’ll make you happiest in the long run. If you are enamored by the high salaries in big tech then stick to web dev or AI but plenty of places pay highly for specialized and niche knowledge.",MaybeAverage,2025-08-01 11:33:29,11,learnprogramming,t3_1metpao,False,
n6c5k2u,"Since you have learned HTML and CSS, you should build a few static webpages. Once you have that down pat, you can turn your attention to learning JavaScript as part of your journey towards creating dynamic webpages.",Aglet_Green,2025-08-01 12:17:07,4,learnprogramming,t3_1metpao,False,
n6bznki,"Programming is a trade, like carpentry. We make programs for people to use. A lot of university curriculums teach computer science (DSA) as if it were something like physics, where you learn the formulas and take the quizzes to succeed. That CS stuff is great to know, but it's not focused around making useful programs to delight users, or at any rate make their lives easier. HTML is used to create web pages. CSS is used to make them look nice. There are some data structures there (headings, paragraphs, captions, images, all that), but it is a stretch to claim you can code up actual algorithms in HTML/CSS. There's a lot more to programming than those. Javascript, for just one example.What kind of programs would you like to make for your users? Web apps? Games? Mobile apps? Controllers for washing machines and microwave ovens? Medical devices? I am not sure how you would know the answer to these questions as a sophomore. Take some more classes. Look at Unity or Unreal Engine for games. Do the web app tutorials in Microsoft C# / Dotnet. As for debugging your life, my response is this: ""It is functioning as designed."" Keep on learning. Keep on coding. Welcome to our great trade.",Aggressive_Ad_5454,2025-08-01 11:38:44,4,learnprogramming,t3_1metpao,False,
n6ccu8e,"If there are profs. that do research in the areas, you could drop by and ask about what a person needs to do research in computer vision. I've known people who have done that, and it requires quite a bit of math so you really have to be strong in mathematics.DSA is one of those fundamental topics that you need to know even if you don't apply what you learn that much (depends on the job). Some companies like asking DSA questions in interviews (leetcode), but those questions are pretty challenging. You should think about studying those in the next few years (you can start now on easy level which is actually a bit hard) just for interview practice.If you really want to do computer vision, you may need to look at grad school, but that requires high grades (3.5 or above in the US) and preferably you've taken relevant courses, perhaps done a undergrad research project.",CodeTinkerer,2025-08-01 13:00:14,3,learnprogramming,t3_1metpao,False,
n6dbwi1,Ready to be mind blown..HTML and CSS are not programming languages.,Interesting-You-7028,2025-08-01 15:54:17,2,learnprogramming,t3_1metpao,False,
n6cpveu,thank you for your advice!,WhaterZ_2305,2025-08-01 14:08:49,2,learnprogramming,t1_n6bywex,True,
n6cql99,"thank you for your advice! tho, i think you didnt get my question right",WhaterZ_2305,2025-08-01 14:12:18,1,learnprogramming,t1_n6c5k2u,True,
n6fu4k1,"I agree. Javascript as a seperate script making the webpages interactive.This will take you to the 200s-2010s level of technology.Next step is to learn a Javascript framework like React / Angular / Vue (in that order). You cannot really learn this without knowing basic HTML, CSS and Javascript.That will bring you up to date.",Python_Puzzles,2025-08-01 23:29:38,1,learnprogramming,t1_n6c5k2u,False,
n6cqd82,"i cant really say whether i like to build websites or games or apps in general, they include both designing a ui and building the internal software (as to what does what). my answer would be building logic for apps because it is what kind of intrigues me. however i would love creating flashy website designs as well.",WhaterZ_2305,2025-08-01 14:11:13,1,learnprogramming,t1_n6bznki,True,
n6cqx8l,thank you for this! its a really interesting field but im stuck between building webpages and building logic. i appreciate your help!,WhaterZ_2305,2025-08-01 14:13:55,0,learnprogramming,t1_n6ccu8e,True,
n65zawp,"For those interested, the book is free to read here: [https://github.com/SanQri/safe-by-design](https://github.com/SanQri/safe-by-design)",EgregorAmeriki,2025-07-31 13:55:05,3,learnprogramming,t3_1me284k,True,
n64e2b7,"it really doesn't matter.Pick which ever one you like, focus on it, and get a bunch of experience doing it.",justUseAnSvm,2025-07-31 06:44:21,4,learnprogramming,t3_1mdudrs,False,
n64elrq,"If you're in a university, maybe you could ask your career counselor or someone in a similar role what kind of skills employers are hiring for? Or maybe talk to seniors who recently graduated? Ultimately, you want to focus on a specialization that will get you a good job.It's okay if you're not very good at any of the specializations yet. Most students are not. I was not either.",maujood,2025-07-31 06:49:19,2,learnprogramming,t3_1mdudrs,False,
n64gxn5,"The good news is that University is the perfect place to figure this out. Take some electives in different areas and see what you like. It’s fine if you aren’t an expert at any of those, majority of material you would have to learn at your first job/grad school anyway. Think of your undergraduate studies as breadth first search, you want to explore a broad range of topics to see which ones you like, even if you don’t dive deeply into them. And then once you find what you like, study it, hardDon’t overlook your data structures and algorithms courses though because you will be doing leetcode regardless of which area you pick",WallstreetChump,2025-07-31 07:10:28,1,learnprogramming,t3_1mdudrs,False,
n65jxkj,"Since it is your third year, it is time to master one skill. Let’s call it your primary skill. Pick one track for 3-4 months (the one that you enjoy learning the most), go deep, and build 1-2 projects in it that you can add to your resume. If it doesn’t suit you, switch. You won’t know what is the best for you unless you try. And you don’t have to be good at it initially, you’ll eventually improve as you practice. Also, I suggest that you also keep revising topics that are important for the interview perspective so that next year you’ll catch up quick and be ready to sit for placements and apply for jobs.",codingzap,2025-07-31 12:31:34,1,learnprogramming,t3_1mdudrs,False,
n66vqec,"i will suggest to start development if you are in tier 3 college because big companies doesn't come and you will get overwhelmed with dsa since it's never going to be completed , first learn 1 language any language just learn one then see that what you can learn further in that language choose any single domain based on it and just keep going deep dive into it and enjoy the process and project.",ElevatorJust6586,2025-07-31 16:28:32,1,learnprogramming,t3_1mdudrs,False,
n690rih,Check job post offers and think what is the best for you.,pepiks,2025-07-31 22:37:02,1,learnprogramming,t3_1mdudrs,False,
n6sbmuf,Try building one small project in each area. You’ll learn faster by doing than by thinking about what to do.,alpinebuzz,2025-08-04 00:18:29,1,learnprogramming,t3_1mdudrs,False,
n64jo6b,"I genuinely enjoy working on them. Even though they’re simple—like creating a custom String class instead of using the built-in library—I find them really fun.Also, when I built a small website at university that only included the basics, I felt like I was capable of doing it too.The real issue is that AI is spreading rapidly, and no one can deny that the coming years will be some of the most significant in human history because of it. That’s why I wanted to dive deeper into it.So right now, I’m confused between: – studying C++- – studying Web development – Diving into artificial intelligence (though this one likely won’t happen)",FirmDoubt2581,2025-07-31 07:36:10,1,learnprogramming,t1_n64gxn5,True,
n64kxuh,"Do whatever you like. That way you won't regret it. Also, don't think that you have to learn one language or other. You'll learn several of them, since most of the basics can be applied to different programming languages.",VivaPitagoras,2025-07-31 07:48:19,1,learnprogramming,t1_n64jo6b,False,
n64lz7m,"You will need to know at least 1 language well, so if C++ is the language you’ve chosen you will need to study it regardless of which area you end up choosing. You are going to be changing languages/tech stacks as you progress in your career, so it doesn’t really matter which language you’ve chosen now. Be aware though that in interviews they are going to ask you to solve leetcode problems using a language of your choice, and for timed interviews you probably want a language that has simpler syntax than C++",WallstreetChump,2025-07-31 07:58:02,1,learnprogramming,t1_n64jo6b,False,
n6ru8os,step 1: choose a project ideastep 2: draw out/ right out how to do itstep 3: right out more advanced steps on how to do it without writing code yetstep 4: start designing the outline of you project like file structure and headers and while functions and classes will do what. for a beginner only using functional programming (no classes or methods just functions) is total fine especially for someone just starting to learn classes. about OOP.step 5: start filling in the blanks with code and testing along the waystep 6: fix mistakes step 7: expand the project to your goal,AffectionatePlane598,2025-08-03 22:38:07,3,learnprogramming,t3_1mgwn63,False,
n6rtmg8,also i am leearning basics of data sturcture and algorithm for my college cousre so that might also help in my future projects.,Jolly-Dragonfly5530,2025-08-03 22:34:35,1,learnprogramming,t3_1mgwn63,True,
n6ruiw3,"Do it the way it’s taught in school. Start with a basic concept and 1 new tool. Build something with that tool. Next makes something slightly more advanced maybe learn a new tool. Build a project with the old tool and the new tool. After gathering multiple tools. Find a larger projects that requires multiple tools you’ve learned how to use. Polymorphism, encapsulation, arrays and structs. Plan the project with object diagrams showing the relationship between them. Line out a use case diagram and flow chart if you feel like doing it right. Now build the big project, stick it out through the boring bits, see how things work well together, take notes on everything but especially the bits you found hard. Once the project is finished do a review on it. Note what improved along the way and what you might do differently next time. Then find a new tool, build a project with that tool…. (It repeats)",Immereally,2025-08-03 22:39:46,1,learnprogramming,t3_1mgwn63,False,
n6s2pen,I learned most of what I know about C from writing a chess engine. That might be a good project for you to make a basic chess engine if you think you're capable of it at this point. C++ is well suited for it and it teaches you a lot of the core concepts of the language.,haddock420,2025-08-03 23:26:15,1,learnprogramming,t3_1mgwn63,False,
n6s7zbw,"I'd say make projects related towards the field you want to get into.I'm a systems developer. So I'm making projects related to systems programming (interpreters, compilers, kernels, etc)So I'd first ask yourself ""What **specifically** do I want to do?""",Dappster98,2025-08-03 23:56:56,1,learnprogramming,t3_1mgwn63,False,
n6sbd98,Don’t wait to feel “ready.” You learn faster by messing up and fixing things than by reading another tutorial.,alpinebuzz,2025-08-04 00:16:55,1,learnprogramming,t3_1mgwn63,False,
n6ru3f5,"You can start on websites like codecademy that gives you tutorials for projects, udemy probably has cpp project tutorials, and youtube as well",Conscious_Jeweler196,2025-08-03 22:37:16,0,learnprogramming,t3_1mgwn63,False,
n6ruk65,thanks a lot for this comment .,Jolly-Dragonfly5530,2025-08-03 22:39:58,1,learnprogramming,t1_n6ru8os,True,
n6o7xa4,Helped me. Thank you!,Occasional_leader,2025-08-03 10:25:18,2,learnprogramming,t3_1mgfsmt,False,
n6l1e2m,"Languages are just tools and you should be learning the fundamentals behind the tools. You don't ask if a carpenter can use a hammer or a screwdriver, you just expect they can build you a table.",West_Explanation1766,2025-08-02 20:34:33,15,learnprogramming,t3_1mg0iia,False,
n6l29uu,"in learning computer science, languages do not really matter. You need to learn one to get proficient and comprehend underlying concepts. Then you learn a bunch because they are pretty much all the same.OK, there are major classes. But often you learn one by its difference and similarity to another one you learn. Being bad at two languages does not help you as much as being ok at one of them.",esaule,2025-08-02 20:39:18,7,learnprogramming,t3_1mg0iia,False,
n6l6089,"No. Learn as many different languages as you want at the same time. When I was in college, having concurrent courses that used three different languages was normal.",Dissentient,2025-08-02 20:59:07,4,learnprogramming,t3_1mg0iia,False,
n6l6svz,"If you're just starting, I wouldn't do it.Go for the fundamentals, then go for _one_ language.Omce _you feel confident _ with things like loops conditionals, recursion (and how to implement loops with recursion and vice versa) you can slowly go for other languages. Don't overextend yourself, I can't stress enough that slow and steady progress with small increments _will_ outperform bursts. You'll have plenty of time to forget things thru the course of your career..Do not drown yourself!",serverhorror,2025-08-02 21:03:27,6,learnprogramming,t3_1mg0iia,False,
n6ls09l,No. The concepts will be the same largely. You'll learn some things in the c class that you won't in the java class. If you've got experience taking programming classes then you'll be fine. My school actually had a class that taught 5+ langs in one class. The idea being that you should be able to pick up a new language and quickly learn it. But that was a later class becuse its easier when you already have the fundamentals down. If you are just getting into and are struggling to remember syntax. You might save juggling for when you're feeling a little more confident.,Opinion_Less,2025-08-02 23:05:19,3,learnprogramming,t3_1mg0iia,False,
n6myutu,Try to only study one language at a time.,JohnVonachen,2025-08-03 03:38:44,3,learnprogramming,t3_1mg0iia,False,
n6o310u,"Programming is like that bell curve meme of the noob thinking ""All languages are the same"", then the tryhard apex crying ""No! Every language has its own uses! Don't make games on COBOL!!"", then the enlightened jedi master admitting ""All languages are the same"".",PralineAmbitious2984,2025-08-03 09:37:35,3,learnprogramming,t3_1mg0iia,False,
n6lpdpq,"If your goal is depth, pick one. If your goal is exposure, take both and brace for chaos.",alpinebuzz,2025-08-02 22:49:48,2,learnprogramming,t3_1mg0iia,False,
n6ndw56,Totally fine. Moreover - it's better to take 2 languages,EgregorAmeriki,2025-08-03 05:37:20,2,learnprogramming,t3_1mg0iia,False,
n6l75bi,You should be fine. Working in different languages becomes a normal part of your CS education when you get to upper division courses as well.,coffeetoprogram,2025-08-02 21:05:23,1,learnprogramming,t3_1mg0iia,False,
n6ckufq,Are you asking if building a project/portfolio will make you more hire-able? The answer is yes.,DERAJ_,2025-08-01 13:43:18,38,learnprogramming,t3_1meworw,False,
n6cmygd,"I'd say the crazier part is building this project that users will use. It's a big ""if"". There are many parts to consider.* What will you build?* How will you build it?* How will you get users to use it?",CodeTinkerer,2025-08-01 13:54:08,3,learnprogramming,t3_1meworw,False,
n6dhgos,"It's very hit-or-miss. Hiring standards are different at every place. Some companies will give you some algorithmic coding challenge and immediately reject you if you don't score high enough. Another company might care deeply about your portfolio...but care far less about what you make and more about the specific tech stack used.Really though, if you can make a huge project that's relevant to already successful businesses, you are kind of leap-frogging an entry level position by a mile. That's like start-up territory.I've done a lot of new hire interviews... And while ever company is free to do whatever they want, in the three companies I've hired for, they all viewed portfolios the same way. It's mostly just talking point to bring up during the interview. It's not a huge deal, in the general case.Lots of applicants will have the same degree and a good GPA but, amazingly, some really will be awful at actually producing code. In the old days, whiteboard/quiz type questions were how we tried to see if someone really could code, but then everyone just started studying specifically for the type of questions that would be asked. I'm really not going to spend more than five minutes looking at a git repo or even a live website or whatever because there are just too many applicants and plenty of applicants are just going to clone somebody else's open source project. It's just something I would ask you about in the interview. I would expect you to be mildly passionate about it, because it's your project, and I would expect you to be able to speak intelligently about how you built it, on a technical level. Counter-intuitively an amazing project can be a reason we don't hire you.If we hire you, we would ask you to sign a non-compete and claim ownership of everything you develop. These contracts weren't always enforceable, and it might be different in your location, but the company wants you to give up your project and work full time on whatever they care about. If your project is so good, so impressive, so huge, that we think in 6 or 12 months it might take off and you would quit to pursue it, you would be a high risk hire. We want the applicant who will stick around for a handful of years. Only twice have I witnessed this. The first was a guy who clearly wanted to develop games. He had an indie game he was in love with and basically admitted he just wanted to make games but had run out of money. The other guy quit his full time job to launch his own app, wrote the app, and didn't sell as many copies as he thought. He was looking for a job but he was clearly super passionate about his app and wanted to keep working and focusing on it. As a person, and a developer who has my own side projects, I get it. We just need some money to pay the bills...but as an employee tasked with hiring good candidates... Those people aren't likely to be the best options and selecting a bad hire reflects poorly on me.",QuirkyFail5440,2025-08-01 16:20:58,3,learnprogramming,t3_1meworw,False,
n6fi134,I would build something smaller over a “huge project”.Additionally I would blog about my progress. The blogging part is even more important than the thing you build. People are unlikely to read your code. But they might read your article on LinkedIn or Medium or whenever you post. Your entire goal is to gain visibility.,Rain-And-Coffee,2025-08-01 22:20:52,2,learnprogramming,t3_1meworw,False,
n6ct7cq,"You’re crazy to think that with a mere 10 months of being self-taught, you can create a large project that’s big-free and attracts users, when this is often a team project requiring experienced devs and several months at least. Other than that, finished projects are always a good plus in a portfolio.",Comprehensive_Mud803,2025-08-01 14:25:00,2,learnprogramming,t3_1meworw,False,
n6ctw5d,"Will it help? Definitely but why not first build a strong portfolio with different projects?You're only 10 months in, with this experience it's highly overkill to put all your time into a ""large project"". While you should focus on being specialized in a certain path with fitting projects and portfolio.",Wingedchestnut,2025-08-01 14:28:21,1,learnprogramming,t3_1meworw,False,
n6cv1ax,"Oh, it's absolutely a good idea!Now, you don't have to build the project on your own, you could contribute to an open-source project, possibly one that already has users.",ImYoric,2025-08-01 14:33:50,1,learnprogramming,t3_1meworw,False,
n6drt7h,"I honestly don't think it helps at all. Either you have experience or you don't. If it ever comes to the point of your ""projects"" mattering, then that would probably mean the talent pool is dry/we are in a booking tech economy, which we are not in.I do think building your own projects helps you sharpen your skills (not overusing AI), but I think it has no real benefit in terms of landing you a full time job.",cantstopper,2025-08-01 17:10:45,1,learnprogramming,t3_1meworw,False,
n6hfrj7,Not crazy at all! I've seen self-taught devs get hired at big companies with their projects. Well polished good projects are better than multiple scrappy ones. I had the chance to work in startups and have more responsabilities than elsewhere and this opened a bunch of oportunities for me and I learned so much. In interviews I could talk in depth about a wide variaty of tech!,octoio,2025-08-02 06:03:26,1,learnprogramming,t3_1meworw,False,
n6i87b5,"Sorry, this post has been removed.",SamWest98,2025-08-02 10:40:14,1,learnprogramming,t3_1meworw,False,
n69rey1,"Github is a hub for 'git' repositories. Each GitHub user can create a folder (called repository) it contains source code (just textual files for code) for software they're developing. The purpose of ""git"" system is to efficiently store each version of file changes that the user made, to save that change the users make ""commits"" with an optional textual message describing what edits/changes they made. The commits have date time stamp, author name and email address. To not dox your GitHub registration email address in your commits history, there's a setting to generate no-reply garbage email address. Users can add repository to their favourites by clicking a ""star"", there's a counter of how many users added the repository to their ""stars"", so it acts like popularity indicator. There's a so called branches in repositories, there's a main branch called ""main"" or classically ""master"". Users can ""fork"" a repository, it copies a repository to their own collection of repositories and after the forking the repository points to the original one with ""remotes"", it's an url of a git repository. You can make changes to this local version of a repository you just forked and then you proceed to make a commit describing what you just changed, then you create a ""pull request"". It's request that's sent to the ""remote"" repository to approve a ""pull"" from your commit, it means getting those chances to his repository. You can turn your GitHub repository into a visitable web site with GitHub Pages. It servers your web site through a link like this: https://.github.io// It can only respond with a content of your files without dynamic functionality like databases and scripting languages. The git is a program that you can use locally on your computer to version your software (or anything else) projects. It creates a folder in your repository named .git (that's hidden in non-Windows operating systems) where it stores file changes and everything about git project. If you don't want some files/folders to be uploaded to remote repo, you can define them in .gitignore file. You can make git repo locally and then upload it to a GitHub (or other git repo hosting websites) GitHub adds more features to the git repositories than it's supported by a git itself, so it's recommended to manage a repo in a GitHub website. There's also available to download GH program that manages GitHub repo in a terminal window.",RealMadHouse,2025-08-01 01:08:51,3,learnprogramming,t3_1mehk37,False,
n6akxw4,"Learn git first. Then github will make sense. It is mainly used to share your projects. Personally, I use it as a way for prospective clients or employers to see my skillset and process.Github is useless without knowledge of git, more specifically version control. Learn git and use github as a platform to share projects you have built and request feedback for the code you have written.",iodarkstar,2025-08-01 04:20:07,3,learnprogramming,t3_1mehk37,False,
n69qova,"Github does actually have stars, which are a bit like likes. No one really pays much attention to them, it's not a social platform.What do you want to use it for, exactly?",ValentineBlacker,2025-08-01 01:04:29,2,learnprogramming,t3_1mehk37,False,
n6amdr3,"\> What is a github post?Never really heard the term used in regards to github, so I'm not sure what you mean.\> Is it called a repositoryA repository is a collection of files that are managed by version control. Git is a particular version control software that is very popular. Github is a place where you can store repositories online so that it's not just only on your computer. (To understand the difference, I've heard ""Git is to GitHub as Porn is to PornHub."" Meaning that porn exists outside pornhub, it's just one place to keep it, which is what makes it analagous.)\> And is there a way to bookmark and or like a repository just like you would like a Facebook post or something on Instagram?Github has stars, ""watch"" toggles, forks, and you can just use any standard way you'd bookmark a webpage too of course.\> Could someone just give me a short synopsis of some of the terminology used on the site?If you learn git separately from github, then I think most of the terms you'll understand.The specialized terms are things like a ""pull request"" which wouldn't make sense on just your own computer, but that is you submiting code for someone elses' project and, well, requesting that they pull it into their project. That could be bug fixes or feature implementations or documentation or anything else that makes sense for the project that the original author/maintainer might be interested in. There's also all kinds of options for automatically testing or building, or project management, etc. Frankly no one uses every feature, just the features relevant to their own workflow.\> I want to use it more but I just don’t understand any of the different things you can do.Most of the things it can do won't make sense without knowing git.\> Just to give you an idea, I didn’t build my PC just because I didn’t want to mess it up.Entirely understandable (although maybe I'm more reckless than you since I'm currently trying to fix my GPU with a soldering iron lol), and actually tangentially related to one of the problems version control/git aims to solve. By using git you can keep a history of all the versions of a file with a little note about what changed. That means if something gets messed up, you can maybe not ""easily"" but relatively easily go back to a version where everything in the file/project was in a good state and move on from there rather than hopiing you kept your ""known\_good\_backup\_file.py"" actually unmodified.\> main features someone like me who is not a programmer would need to know to work my way around it.Honestly as a non-programmer probably the main thing to do would be to submit ""issues"" for projects you use that you would notice a bug or miissing feature or whatever in. The exact way to do that varies for every project since everyone has their own preferences, but in general it's appreciated to get feedback from people actually using the tools you make.\> I have used a couple posts to my benefit but each time had someone walk me through setting it up and after that, didn’t have to revisit it so it’s all a foreign language to me.Unfortunately git is just weird, and it takes a little bit of time forcing yourself to use it to get used to it. Ultimately there's like 5-10 common commands but there's way more than that in the tool so it's more intimidatting than it needs to be. Some non-programmers like book authors sometimes appreciate the ""time travel"" ability that it gives them, so it's possible that even without writing code that there's something youd' appreciate using version control for which would help you build up a little more of a habit of using git.",DrShocker,2025-08-01 04:30:56,2,learnprogramming,t3_1mehk37,False,
n6bce6l,I’m getting ready for work but someone just sent me a link and it took me to this page: https://github.com/piyerx/Github-101Every other time I have visited GitHub I was in a repository and it was just crazy confusing navigating. This page that I linked is simple and straight forward and I don’t even know that format existed. If that makes sense?,Djxgam1ng,2025-08-01 08:18:12,2,learnprogramming,t1_n69rey1,True,
n6bcf6j,Gonna ask me questions after work if that’s ok. Thanks again brotha,Djxgam1ng,2025-08-01 08:18:28,2,learnprogramming,t1_n69rey1,True,
n6bbdxv,"Ahh ok….like I said in my post, there have been a couple things I used from GitHub for something basic but once I set it up and whatever, I never had to revisit it so I didn’t retain any of the info. Do you have a link to a YouTube video or an article explaining GitHub for non programmer coders like myself?",Djxgam1ng,2025-08-01 08:08:39,1,learnprogramming,t1_n6akxw4,True,
n6b3df8,"Stars are more like the bookmark button, just with a counter. You can even create different lists and move starred repositories between them.",yarb00,2025-08-01 06:54:30,2,learnprogramming,t1_n69qova,False,
n6bb84b,"Wow thanks…so I have a few questions, headed to work, but in short, sounds like I want to learn GIT first before GITHUB? Do you have an article or YouTube video that you recommend? Thanks for responding.",Djxgam1ng,2025-08-01 08:07:08,1,learnprogramming,t1_n6amdr3,True,
n6c41df,"Unless you're programming, you won't find github useful or even need it. Version control is a way to track and manage changes within a codebase. Github is like a social profile for your codebase.You're putting the cart before the horse. You need to learn version control for your projects and then utilize github for promoting them.If you're a 'non-programmer', there is no reason for using github. I assume you're downloading packages from Github, which, unless you are updating the code parallel to the initial project, you should stick to downloading a zip or tar release. Otherwise, to the main point, you would need to know git in order to pull the projects locally.Make sense?",iodarkstar,2025-08-01 12:07:54,2,learnprogramming,t1_n6bbdxv,False,
n6gz27c,"I'll comment and upvote to better your chances of getting actual good answers my brother, I'll be rooting for you",akoOfIxtall,2025-08-02 03:47:50,4,learnprogramming,t3_1mff0rb,False,
n6i5daf,Skim read *Cracking the Coding Interview*.,plastikmissile,2025-08-02 10:13:26,3,learnprogramming,t3_1mff0rb,False,
n6jl0h8,The technical portion is honestly comparatively easy compared to other big tech companies. It’s the behavioural portion where Amazon gets you.,ThunderChaser,2025-08-02 15:50:24,1,learnprogramming,t3_1mff0rb,False,
n6hnoqk,"Hey, thanks a lott!",Oblivion_2002,2025-08-02 07:16:40,2,learnprogramming,t1_n6gz27c,True,
n6mv3cl,This is not true at all btw. Amazon interviewers get to choose their own technical questions and it’s a total crapshoot whether you get someone with a very hard or easy problem. The behavioral portion is the only part that comes from a question bank.A good behavioral interview can save a soso technical portion btw. You just can’t be bad on all your technical interviews.,Trope_Porn,2025-08-03 03:12:04,1,learnprogramming,t1_n6jl0h8,False,
n6btqbw,"Please, go through the subreddit. This **very** question, including the title gets asked so frequently.",aqua_regis,2025-08-01 10:55:20,19,learnprogramming,t3_1met6n8,False,
n6cdfhd,Start with C++. It'll force you to understand how things actually work like memory and pointers and low level logic. Once that clicks then picking up Java later feels easy. If you start with Java then you'll write code that runs but not always know why.,Front-Palpitation362,2025-08-01 13:03:34,9,learnprogramming,t3_1met6n8,False,
n6bwgpm,"C++. You asked, don’t come arguing now.",Comprehensive_Mud803,2025-08-01 11:16:03,14,learnprogramming,t3_1met6n8,False,
n6bu6vu,"First question: have you checked or asked what your university is going to teach? While I can encourage learning either, if you're just starting out, it's better to follow what the university would teach you. It may be either C++, Java, or other programming languages like Python.For me, I've learned Java in my first year of college. As a quick description, Java is pretty verbose and specific on how it does Object Oriented Programming, so it's pretty word-y but you may have a strong background of OOP. I haven't learned C++ so I can't say much other than it being a more low level language while still being familiar in terms of syntax. In reality though you would start learning either flow charts or pseudocodes before going to write things using a programming language before Data Structures and Algorithms (at least that's how I started in my college)",Danque62,2025-08-01 10:58:57,3,learnprogramming,t3_1met6n8,False,
n6d4rt6,"I think pure C is better for core concepts. (Except OOP)C++ is a language which can do a lot and at good performance, it's why it's used for high performance tasks like game engines.Java has everything a business needs, and it's pure OOP, Memory safety, explicit everything, performance is not a major concern. It's used for backend of webapps like Reddit.Unless game dev is your concern, Java has much more frequent uses.",lukkasz323,2025-08-01 15:20:18,3,learnprogramming,t3_1met6n8,False,
n6btuuc,Java is easier to start and implement c++ need more time to go through and get to implementation phase of a project. From my personal experience I started from C then assembly for further optimization then spent ton of time on digital hardware design to understand what actually is going on then tried full bash programming translating or implementing projects solely in bash (wasnt fun at all) it was a brain bender but excellent experience then jumped to tensorflow as i dont want to learn python for pytorch. Never needed java for anything but knowing people who are all in java its easier and faster to learn than c++.,Ok-Sample-8982,2025-08-01 10:56:19,2,learnprogramming,t3_1met6n8,False,
n6bzsnp,Start with Java,Might0fHeaven,2025-08-01 11:39:42,2,learnprogramming,t3_1met6n8,False,
n6c76g3,"whichever language is taught / required in your courses. First language we were taught was Scheme, am now a professional java devbtw we went through many languages in unischemepascalprologCC++Arm assemblyjavamatlabmaplepythontypescriptA TA wanted to introduce me to OCaml but I was so done with these weird languages after a semester of having to write stuff in prolog my brain flatlined",LowB0b,2025-08-01 12:26:59,2,learnprogramming,t3_1met6n8,False,
n6chngw,"Between those two, I'd start with Java. It's easier to learn and has fewer pitfalls.But if you're doing classical pointer manipulation to implement trees, linked lists, and so on, I'd use the C++ compiler but just write C code. Use **new** and **delete** instead of malloc, but don't use smart pointers or templates or inheritance or any of the features that make C++ special.",Leverkaas2516,2025-08-01 13:26:26,2,learnprogramming,t3_1met6n8,False,
n6dodfv,C++ is probably the best academic language. There's everything implemented (many things in more than one way). Once you know it well - yiu can switch to anything else if needed. Bug you can study it the whole life.I'd start from C++ if I have more than a year.,lokiOdUa,2025-08-01 16:54:14,2,learnprogramming,t3_1met6n8,False,
n65vek1,In the FAQ (in the sidebar) you find some info and resources that can be useful (i.e. mooc.fi has free Python and Java courses).,joranstark018,2025-07-31 13:35:07,7,learnprogramming,t3_1me13l2,False,
n661e1x,I think cs50 is very good! It gives a solid base for you to start in the area and you can combine with other courses while taking it.,Caiiiiiiio,2025-07-31 14:05:24,3,learnprogramming,t3_1me13l2,False,
n65qw86,"Im 36 have a 12 yr old, starting CS classes at my local community college, and they were free to boot, idk your location but it's worth a shot to check out.",mattp1123,2025-07-31 13:11:13,2,learnprogramming,t3_1me13l2,False,
n66hh5o,"You can self learn the basics of coding using multiple resources. Most are listed in the FAQs (ex: CS50, Odin, Free code camp, Full stack open, Udemy, clusters, you tube, a book, etc)However breaking in without formal education or experience is very unlikely.",Rain-And-Coffee,2025-07-31 15:21:49,2,learnprogramming,t3_1me13l2,False,
n68mgmf,Buy a book.,rustyseapants,2025-07-31 21:23:38,2,learnprogramming,t3_1me13l2,False,
n66jhbk,"Check out the full web development course by Angela Yu on Udemy. It kickstarted my career :). Udemy courses are 90% of the time for sale at like 15 usd or so. After her course I also did a 10-week bootcamp and it literally covered the same thing, maybe even less. I’ve also tried or different courses on Udemy but this one stuck the best. She’s very good at explaining.",NonDeveloper,2025-07-31 15:31:10,1,learnprogramming,t3_1me13l2,False,
n674c09,"Harvard's CS50 will make you waste time initially, depending on what you choose.I'm Brazilian and I started programming in some Brazilian courses because I didn't know English, but you can do the same with some English courses.First: go to [roadmap.sh](http://roadmap.sh), search for Role-Based Roadmaps, and find an area that interests you.Then, you'll need to find a course focused on that area and always consult the documentation for what you're learning.Once you've learned the basics of the tool you're studying, try creating something yourself. If you make a mistake, no problem. You MUST learn from your mistakes, and learning how to solve them is the foundation of programming.Then, create a LinkedIn account, send connections to ""Tech Recruiters,"" post your projects, your completed courses, and so on.Finally, you study in CS50.I followed this path, and it worked for me",klinkonsky,2025-07-31 17:08:30,1,learnprogramming,t3_1me13l2,False,
n6obtmq,It depends what you want to learn. For Web Development I can highly recommend the Odin Project. I know it's a great course because I did it myself. It's free and open source and teaches you full stack web development. The great thing about it is that it not only teaches the theory but after each block of topics you need to do a project. You start with stuff like a HTML recipe project and rock paper scissors and end with a full stack social network you have to build yourself. It takes lots of time to finish but it's very worth it if you are serious about learning programming.,sandspiegel,2025-08-03 11:01:09,1,learnprogramming,t3_1me13l2,False,
n66iqiu,Yeah the mod told Me but i’m looking for a uk based part time course was just wondering if anyone knew of any,BigDiggidyD,2025-07-31 15:27:42,2,learnprogramming,t1_n65vek1,True,
n66isxy,Cheers i’ll have a look,BigDiggidyD,2025-07-31 15:28:01,1,learnprogramming,t1_n65qw86,True,
n5pgeyd,"That's kind of how it is in a working environment, maybe you swap trello for Jira or Google docs with Confluence, but same idea. I think it's important to link everything together. Say you commit something in git, link that to your trello/Jira task. In that task, like all relevant information, such as documentation or a link to a slack thread. Then when you look at code, you can do a git blame and see which commit introduced that code, then that commit message links to the ticket for the change, that ticket will link to the design specs, requirements, and slack discussions around it.There's a ton of strategies you can use, some may be overkill for your situation though. Product managers and scrum masters have roles dedicated to organizing work and projects. My company requires all features to have technical designs approved by a principal engineer and committed to a GitHub repository before we work on it, and that GitHub repository is the source of truth for documentation around how things should work.",Zesher_,2025-07-29 00:15:40,2,learnprogramming,t3_1mbwjs3,False,
n5pgmp9,"Good project management is the answer, but that also ties into following best practices when coding.Different teams have different workflows, but it’s common to have information scattered across platforms. That’s fine—you just have to be consistent. If bug reports go in Jira or Trello, then make sure they’re not just being left in a Slack channel to wither away.You’ll figure out what works for you and your team overtime. Personally, my team (game design) uses Discord for general communication; Jira for tracking tasks, issues, and documentation; and GitHub for version control.",dylantrain2014,2025-07-29 00:16:54,1,learnprogramming,t3_1mbwjs3,False,
n5php4v,"Yup unfortunately this is pretty much just the way it is. Most tools are great at one thing and meh at the others, so you end up with a mishmash of tools that all do their one thing well but a bit of overlap between them.I think you end up just getting used to it.",RobBrit86,2025-07-29 00:23:00,1,learnprogramming,t3_1mbwjs3,False,
n5pzyfh,"*Scattered* suggests that pieces are spread around randomly. There’re not. If you kept all your work on sticky notes jumbled together in a large box, that would be difficult. But using systems to keep track of the various parts is the opposite of scattered — it’s *organized*. There’s some structure there to help you know where to find what you need.Now, just having systems doesn’t mean that they’re *good* systems. If your systems aren’t working well for you and your team, you should of course improve them. Perhaps you have too many different systems, or your systems aren’t easy to use. But an imperfect system is better than no system, so use what you have until you’re ready to switch to something better.Look for ways to make your systems work together better. If you fix a bug, for example, add a link to the bug’s Trello card to the commit message or pull request in GitHub, and add a link to the pull request or commit to the bug’s card. That lets you move easily from one system to the relevant into in another.",iOSCaleb,2025-07-29 02:08:17,1,learnprogramming,t3_1mbwjs3,False,
n5ko6na,"Just keep going and focus on learning the fundamentals of programming instead of just ""learning Java"". I can relate to your feelings about feeling a bit lost and frustrated from my own time leaning but I can assure you that if you keep studying to build an understanding you will keep improving. Right now you're stuck with all these separate pieces of a puzzle and you're finding it hard to see how they all fit. At times you will manage to fit some together and as you connect more pieces it will get easier and easier to find new connections. Focus on the fundamentals and try to have some sort of own project at the side that you can tinker with on your own when you feel like it.My own experience - I found it hard when I had gotten my degree to structure and design code. Like you I felt frustrated and a bit lost. We had very briefly talked about the concept of Clean Code during one of the courses without going in-depth at all so I ordered and read the book. I found it to be extremely helpful and taught me structure and a bunch of common patterns and idioms when writing code in a very straightforward and helpful manner.Lastly - if there was something that I wish the school had focused more on to prepare me and my fellow students for the real world, I'd wish we'd gotten more time to work with how online services talk with each other, what protocols do they use, how is information exchanged, request/response etc, as well as how you work with web/appservers etc. It was all very hand waved and the only server we had to setup was a light-weight Firebird local server to host our SQL-dbs.So, personal opinion - focus on learning the programming fundamentals, read Clean Code, and check out how apps communicate with each other and get som practice doing that. Good luck!",Klossar2000,2025-07-28 08:13:07,5,learnprogramming,t3_1mb8cvh,False,
n5lh1fe,"I get how tough it feels, especially with backlogs and everything piling up. Since you like backend and Java, try this simple path: Java basics → DSA/Leetcode → Spring Boot → build small backend projects. If you ever feel stuck, I found having a mentor or even short 1 on 1 sessions,platforms like Lrnkey are helpful, they can guide you without wasting time. You’ve already done a lot, just focus on one step at a time.",prazeros,2025-07-28 12:18:13,2,learnprogramming,t3_1mb8cvh,False,
n5ltkxr,"Really appreciate the help, klossar, you are right, i should focus on nailing the language fundamentals, Leetcode, and DSA before worrying about anything else. If I can’t write code, writing clean code is a bit of a stretch anyway. Thanks for the suggestions, I’m definitely bookmarking your advice.",mosahel,2025-07-28 13:32:34,2,learnprogramming,t1_n5ko6na,True,
n5lt1fc,"Java basics → DSA/Leetcode → Spring Boot → building small backend projects.I had a lot of scattered topics to connect, and this path binds everything together. I was about to follow a similar roadmap but i was confused, what first, what order etc. DSA first or Projects etc.",mosahel,2025-07-28 13:29:32,1,learnprogramming,t1_n5lh1fe,True,
n5mmtuv,"Just keep it steady, Java and DSA first, then Spring Boot and projects will feel way easier. You're on the right track.",prazeros,2025-07-28 15:56:19,2,learnprogramming,t1_n5lt1fc,False,
n5n479f,"Leetcode when ? >!coming from the world of react, it neither existed for me nor i ever tried !<",mosahel,2025-07-28 17:17:11,1,learnprogramming,t1_n5mmtuv,True,
n5k62ei,"variables cost close to nothing, if it makes your life easier just go for it. oftentimes programmers assign variables simply for readability, e.g. catList = GetCats(location, token); catFood = GetCatFood(banlist); catToys = GetCatToys(); MaintainCats(catList, catFood, catToys); instead of: MaintainCats(GetCats(location, token), GetCatFood(banlist), GetCatToys());oftentimes your compiler (if you're using a compiled language) changes your code if it detects it can do so without detrimental effects, like as an example removing the variable declarations and using alternative 2. this way you get the best of two worlds: code that's easier to read that also becomes better automatically as it is deployed.also there's a saying in programming:premature optimisation is the root of all evildon't worry so much about performance, solve the problem first and if there's performance issues with your solution, go on to solve that.",scandii,2025-07-28 05:24:41,32,learnprogramming,t3_1mb7lsi,False,
n5k9nac,"IMO, always *readability and maintainability* over *brevity*.If it makes the code clearer, easier to understand, easier to maintain, use multiple variables. If it doesn't harm anything, a single variable can do the job.Looking at your example, I would change more in the `convert` function than in main. Your chained replace is more difficult to read (and later to maintain) than what happens in main.Also, sidenote, a word about your comments: your comments are basically meaningless, especially the ones in `main` as they tell *what* the code is supposed to do - this is clear from the code alone and doesn't need a comment. Comments should mainly be used to tell *why* something was done in a certain (unexpected or uncommon) way. Your comments are just visual clutter without any additional value.",desrtfx,2025-07-28 05:56:25,10,learnprogramming,t3_1mb7lsi,False,
n5kd4d6,"Your Solution 1 actually has two variables, effectively. Do you see what they are?I personally find that:- Variables are often a matter of taste.- Good names can save you a lot of grief.- Variables that you assign an expression to, only to immediately return, provide little benefit over just retuning the expression directly.- Modifying a function argument by assignment is a bit subversive. Unless I'm cleaning up what I've been given or something, I rarely opt for it.- One-liners can be easier to read (up to a point!), but can be harder to debug.- Comments are best when they don't just repeat what the code is already telling you. Great comments are for tricky bits, and to explain the ""why"" behind the code.",SharkSymphony,2025-07-28 06:28:13,2,learnprogramming,t3_1mb7lsi,False,
n5kb8er,"It is relatively easy to write code that the computer understands. The computer doesn't really care about how many variables you use.It is much more tricky to write code other humans can understand. This doesn't really matter in this toy problem, but becomes quite important in larger or longer-term projects.For humans, giving names to things matters. It can be worth pulling outoart of a computation and assigning it to a variable *just to give it a name*. In this sense, variable names and function names serve a similar purpose to comments, but names are easier to keep up to date as the code evolves.Here is how I as a very experienced programmer would refactor that code if this were a production problem (untested): import re import sys EMOTICONS_TO_EMOJIS = { "":)"": "":slightly_smiling_face:"", "":("": "":slightly_frowning_face:"", } EMOTICONS_PATTERN = re.compile(""|"".join(re.escape(e) for e in EMOTICONS_TO_EMOJIS) def _emojify(text: str) -> str: # see https://stackoverflow.com/a/2400577 return EMOTICONS_PATTERN.sub( lambda m: EMOTICONS_TO_EMOJIS[m[0]], text, ) def main(): for line in sys.stdin: print(_emojify(line)) if __name__ == ""__main__"": main()There are a couple of fundamental differences that you might find distracting – using a replacement table instead of `str.replace()`, or transforming all input instead of prompting for a single line. The regex related stuff is a fixed pattern for applying multiple replacements to the same string.But for the purpose of this discussion important observations are:* I think `_emojify()` is a better name than `convert()`. Converting *what*?* I decided against introducing additional local variables. They don't seem to add anything. In particular, naming a value just to immediately return it doesn't tend to provide much useful information to readers.* No comments like ""get input"". Comments are useful for providing information that's not visible in the code. If an `input()` function is called, I can already see that we're obtaining input. The thing that would benefit from a more detailed comment in my version would be the regex stuff, as this is highly non-obvious for people who don't already know this pattern. Unfortunately, this pattern has no name, but it has a canonical Stack Overflow answer.",latkde,2025-07-28 06:10:46,2,learnprogramming,t3_1mb7lsi,False,
n5kg0tr,"Do not combine variable unless you explicitly named the variable as combined. For example, when you compute changes in input latency, you need to make sure the time and latency are separate values, not combining them and calling that relativeTime. It is a mess, because relative time is not time, it is time with singal latency, amd singal latency is not time. Thus, calling it relative time is misleading.",BoBoBearDev,2025-07-28 06:54:43,1,learnprogramming,t3_1mb7lsi,False,
n5kjnjt,"I know Python is a bad example just because of how bloated its variable size is, but take for instance one float. You know how much memory it uses? At maximum, 24 bytes of RAM. Your computer probably has around 60-70% out of 1,6x10^10 bytes of disposable RAM. Don't worry, single variables do not matter.If there's three billions of them though...",memesdotpng,2025-07-28 07:28:58,1,learnprogramming,t3_1mb7lsi,False,
n5kp3xr,"There is no need to limit the number of variables - I know that many editors try and ""help"" you, by suggesting that you are creating redundant variables, but it can often be helpful to the reader if you create a variable, even if it is only for a single line.Changing the value of function parameters as solution 1 does, can be a bad idea - especially if the function grows larger, and you have to keep track of whether it was the original input, or the modified - so it is an improvement to create the temporary `converted_input` in solution 2.Variables document what the values are supposed to represent - when you have a `converted_input` variable as in your solution 2, it tells the reader that the input is converted, and that is what the function returns. The function could just be: def convert(user_input): return user_input.replace("":)"", "":slightly_smiling_face:"").replace("":("", "":slightly_frowning_face:"")but then the reader would have to read all the code to understand what is being returned.Also, I personally prefer to always store the result in a variable before returning or printing it - it helps with debugging, because I can print or inspect the variable, use it in if-statements and so on. The only thing I don't like about your solution 2 is the naming of the variable `final_answer` \- it isn't an answer to anything, and it also doesn't seem very final. That name suggests that there are more processes. Maybe just `converted_user_input` \- that would also get rid of the comment just above, that says exactly the same!",peterlinddk,2025-07-28 08:22:13,1,learnprogramming,t3_1mb7lsi,False,
n5krflo,"I don't know what's up with some of these answers. If they don't make sense to you, don't worry, it isn't you.Reusing a variable name is OK here. What you have to watch out for is* ""scope"" - the contexts that a name lives in, within a module/function etc., and* functions that change values, vs. return values.In Python, when you assign a new value to the name ""user\_input"", that is scoped in this case to the whole function. In a larger function body, you might have loops etc., and you can negligently change a name that elsewhere you've been assuming represents its original value. It's OK here, it could be a really bad move in another context. You know, like old school guys like me will use 'i' for an index counter, and then use it again in another loop inside that, and that of course is not going to work right.For the change/return thing ... Somewhat miscategorized as such, because what we have here is a function return. But from an object method. The .replace.replace thing Harvard handed you here, you have to decide what you think about that. It's vaguely familiar as if imported from a ""functional programming"" model, and I think Python programmers commonly get some jollies from doing things like that. But it's a little less transparent what's going on in an OOP object.method model and I personally don't get the attraction. I might split that up into separate assignments to user\_input\*. Consider how that would relate to your question - would you want to reuse user\_input, or have a trail of new identifiers - user\_input, user\_input\_with\_happy, user\_input\_with\_happy\_and\_sad ...? Again here I'd reuse user\_input, but in another context the more specific names might be more informative.",DonnPT,2025-07-28 08:45:12,1,learnprogramming,t3_1mb7lsi,False,
n5ku5lm,I’d always keep the user input intact for something like this. It can be handy for debugging later. Like if you have multiple functions executing you can set test parameters or print to the terminal. You might think the issue is in the 5th or 6th function but see in the debugger that user_input was “z” going in when it should have been “x”Yes you might know that anyway but it’s nice to have 2 variables blatantly different to what you expected when your looking for bugs imo,Immereally,2025-07-28 09:11:59,1,learnprogramming,t3_1mb7lsi,False,
n5kwa8t,"The answer to the question in the title is “it depends”. Using more variables can improve readability. Sometimes, it hardly matters. In the given example, I would not use additional variables. The code is too simple, and once you have converted your input, you aren’t supposed to use the original variable anymore. But it still there, and the compiler won’t tell you if you’d write `print(user_input)` in the second example.",Abigail-ii,2025-07-28 09:32:43,1,learnprogramming,t3_1mb7lsi,False,
n6kuckp,+ [The Odin Project](https://theodinproject.com)+ [Free Code Camp](https://freecodecamp.org)+ [MDN](https://developer.mozilla.com)+ [Roadmap.sh](https://roadmap.sh)+ **Frequently Asked Questions** in the **sidebar**----3 days for HTML/CSS is way too short. Give it way more time.,aqua_regis,2025-08-02 19:55:37,6,learnprogramming,t3_1mfyxz4,False,
n6kylkl,"This is a marathon not a sprint, take your time. One good start would be freecodecamp.org.",littlecodingthings,2025-08-02 20:19:23,4,learnprogramming,t3_1mfyxz4,False,
n6kquyk,Don't rush yourself... JavaScript after 3 days?!!!? If you want to be good web developer give everything time .. and don't run after crash courses,Fun_Discipline_6927,2025-08-02 19:35:35,2,learnprogramming,t3_1mfyxz4,False,
n6kt56q,"I like the Odin Project and Full Stack Open, both are free (text based) and guide you through the entire full stack process.You start off with JS, HTML, CSS and keep bulking on that with several projects.",Rain-And-Coffee,2025-08-02 19:48:43,2,learnprogramming,t3_1mfyxz4,False,
n6lqqe2,"Start small and build ugly. Pretty comes later, but working comes first.",alpinebuzz,2025-08-02 22:57:41,2,learnprogramming,t3_1mfyxz4,False,
n6mh6su,"I started js, html and css at the same time in 1999. They go together like that.Picked up Macromedia Flash in 2002 which began my love of object oriented programming and Adobe's acquisition of Flash in 2006 and recode to ActionScript 3 was crazy amazing! Object Oriented 2d UI heaven! Still haven't seen anything come close to it for interactive 2d work.It wasn't the best way to make a living, but I worked my way up the ranks and bought a nice house. And still had plenty of free time for other projects.I do math with js and html 5 canvas now. Picked up backend/server in 2004. Running my own servers in 2013. Mail servers in 2023. Now C#.NET Core. Stored Procedures.Programming basics are fairly simple. It's not as easy as some say to pick up new languages. It's kinda like making pie crusts. I've been making 4 a year for the last 20 years. 80 crusts now. Just 4 ingredients. Same routine/recipe, but I get better every time. More perfectly round. Less dough ripping mistakes. Better astheyics. Flakier baked results. Smoother process. Less mess.Essentially caring each time. Keeping at it. Coding is like that. Don't get overly discouraged at a mistake. Don't go on autopilot. Love. Care. Time.People would tell me ""Flash sucks. It's a terrible language."" Well, clearly they did not know what they were talking about. Yes, it could cause computers to use battery and get hot. That's cause it gave the programmer power to access those resources and do fancy stuff. Same with security. It could be abused. Make it more secure and you take power away from the software engineer. People can't abuse resources they don't have access to.Just like guns don't kill people, people with guns kill people. Just take away computers and that solves computer virus problems. Next problem.....AI Music.AI auto carriage control arm installation.Day 3 =^.^=Enjoy the journey..",for1114,2025-08-03 01:40:33,2,learnprogramming,t3_1mfyxz4,False,
n6nx4q2,"The best thing you can do is pick one resource and stick to it. Do not do multiple resources at once as it can easily overwhelm you. Almost everything I know when it comes to Web Development I know from the Odin Project and I can highly recommend this course. It's free and open source and teaches you full stack web development. It is a difficult course and will take a huge amount of time to finish. Projects can be hard but are great picks and require you to know everything learned prior to the project. You start with a simple, HTML only recipe Website and finish with a Full Stack Social Network you have to develop yourself. Also no matter what resource you pick do yourself a favor and don't let AI solve problems for you. You might think you learned something but you actually didn't. You need to struggle to learn and things won't be easy but that's how learning happens. I had my biggest aha moments when my code didn't work and I went through my code line by line explaining myself what happens exactly at what point. Debugging is an important skill and you cannot learn it if AI is doing all the work.",sandspiegel,2025-08-03 08:38:17,2,learnprogramming,t3_1mfyxz4,False,
n6krwf2,I just figured that since I used to play around with python when I was younger and that I have a good understanding of the basics of programming I might as well try learning all three at the same time but you are right I should just keep learning and give it time,mezo-404,2025-08-02 19:41:29,2,learnprogramming,t1_n6kquyk,True,
n6dsr72,"Leetcode are puzzles. They have no bearing on actual software development. If you want to pursue these, at least wait till your data structure and algorithm class.",fuddlesworth,2025-08-01 17:15:09,8,learnprogramming,t3_1mf22pn,False,
n6dtn8y,"If you can’t solve easy in an hour, you don’t understand concepts for this task (technically you can solve everything with bruteforce though).So, if stuggling, look at the topics. If you don’t know them, spent some time learning. If you can’t solve after that, check editorial solution. Checking solution is fine.",Gortyser,2025-08-01 17:19:18,4,learnprogramming,t3_1mf22pn,False,
n6e5b54,"Learn DSAs first? This is like trying to read Spanish before knowing Spanish. Leetcode is basically pattern recognition, where the solution will look very similar based on the type of problem it is. Learn the patterns and how to solve them and you’ll know how to do pretty much any question. I’m oversimplifying a bit, but I’m not too far off.Start with Neetcode and work through the graph. Learn the DS or Algorithm that’s is focused on then do problems.",connorjpg,2025-08-01 18:14:16,2,learnprogramming,t3_1mf22pn,False,
n6isb8o,"Just a question - what to you mean with ""DSA""?I am a software developer, but I don't know this abbreviation (maybe because I'm not american).",je386,2025-08-02 13:09:47,1,learnprogramming,t3_1mf22pn,False,
n6dv5b5,"I have only recently learnt binary search, and well trying to learn other data structures along with algorithms then I try to solve.I am still just beginning, but I bruteforce qs that are like add sum or whatnot. Bcz I can't really think up of an algorithm",Neat_Confidence9810,2025-08-01 17:26:12,1,learnprogramming,t1_n6dtn8y,True,
n6ivj5d,"Not really, it's just data structures and algorithms.Maybe you haven't heard it bcz you haven't been involved in things like competitive coding that much. Tho, knowing will help you regardless, maybe look into it a bit, it's a solid topic",Neat_Confidence9810,2025-08-02 13:29:53,1,learnprogramming,t1_n6isb8o,True,
n6iwzjs,"So DSA = data structures and algorithms.Isn't that the most parts of programming? Ah I get it - no UI/UX, no CI/CD..Anyway, for developing software, you need to organize and structurize your work and crack the tasks down to smaller tasks, all down to the coding.",je386,2025-08-02 13:38:38,1,learnprogramming,t1_n6ivj5d,False,
n6ixhlp,"Yup exactly. You probably already use it, just didn't know the name. It's pretty useful irl problems.Although from all of you guys advice, I am thinking of doing it as a hobby for a year and focus on open source for now.",Neat_Confidence9810,2025-08-02 13:41:39,1,learnprogramming,t1_n6iwzjs,True,
n6j1eby,Sounds reasonable. You have to code to learn coding and you have to make mistakes to learn.Did you already chose a project to start with?,je386,2025-08-02 14:04:52,1,learnprogramming,t1_n6ixhlp,False,
n6j3rgv,Check dm please,Neat_Confidence9810,2025-08-02 14:18:16,1,learnprogramming,t1_n6j1eby,True,
n6awuvh,"Both are getting flagged for hiring too much outside of their own countries. I wouldn’t bank on it being around forever. I’d find something more localized for yourself, wish you luck with that!",Hail2Hue,2025-08-01 05:56:11,5,learnprogramming,t3_1meo3cf,False,
n6b60m6,Yea and when people say code written by AI someone has to write prompt it and guide it so take it with a grain of salt,shakingbaking101,2025-08-01 07:18:42,1,learnprogramming,t3_1meo3cf,False,
n69qy7w,"Breadth and depth are both important. If you're frustrated with a new topic or concept, going and working on something else might give your brain a much needed distraction while a ""background thread"" (so to speak) processes it and you come back to it later and find it easier to grasp.",Own_Attention_3392,2025-08-01 01:06:03,10,learnprogramming,t3_1meixnb,False,
n69qpln,"Probably a variation on people quitting when stuff gets hard. Some people just give up when something is hard, others might move on to something else.I think so long as it doesn't become a pattern, it's fine. C isn't for everyone, especially beginners, it's OK to try something a bit easier first.",ToThePillory,2025-08-01 01:04:36,5,learnprogramming,t3_1meixnb,False,
n69sslv,"When people start learning to program, progress is initially very fast. ""This is print(). Look, we made words appear. This is an if statement. This is a loop. Look, we drew a picture."" Very satisfying, very procedural. Lots of dopamine. Then...you've learned the major parts of the language. Your work becomes a bit more self guided. Progress slows down, rewards and milestones are fewer and further apart. No more dopamine. It becomes a slog. Switching to a new language immediately fixes this, and the cycle repeats.Unfortunately, ""programming"" is mostly what you learn AFTER you pick up a programming language, just like composing poetry is something you learn after learning a spoken language.This is not unique to programming. Happens with everything. Ever take an in-person adult language class? The intro course will always be full. The third or fourth course will always be nearly empty.",captainAwesomePants,2025-08-01 01:17:05,4,learnprogramming,t3_1meixnb,False,
n69rbml,"I wouldn’t ngl. Pointers are tough, but the amount of stuff you can do in C/C++ after understanding them is insane. Maybe watch a couple YT vids which help you understand how pointer logic works visually. Don’t quit C though, toughing it out is apart of the process. Also IMO C is way more fun than JS, and its syntax tbh is way more intuitive and simple once you grasp it (it’s a really bare bones language)",None,2025-08-01 01:08:18,2,learnprogramming,t3_1meixnb,False,
n69rz3c,If it happens once sure that's fine but if you start over every time something is frustrating or you don't understand all you're gonna know how to do is write Hello World in a dozen different languages.,ehr1c,2025-08-01 01:12:12,1,learnprogramming,t3_1meixnb,False,
n69sevx,"You're going to get frustrated with everything sooner or later, so you might end up having learned a little bit of every language in the world.",ValentineBlacker,2025-08-01 01:14:48,1,learnprogramming,t3_1meixnb,False,
n69zzw8,I try and rotate between something easy vs hard. I.e python scripting and rust. I have tried a little bit of everything and looking at a new language isn't as daunting anymore. But still I try to stick to those for depth.,Its12amrightnow,2025-08-01 02:00:45,1,learnprogramming,t3_1meixnb,False,
n6ajhrh,"No. It’s not like you *need* to know how to use pointers to accomplish whatever you’re trying to do. Go find a language you like better, get proficient at it, and then when you return to the topic of pointers or whatever else you’ll have a better time at it.",mierecat,2025-08-01 04:09:29,1,learnprogramming,t3_1meixnb,False,
n6anm6d,LoL first i thought this was posted in the learning Japanese reddit and I felt it was relatable there too because I switch to Spanish or English depending on how annoyed I am LoL but I was learning C++ and moving into advanced topics but it was frustrating me so much I went to Java and I've been there for a while advancing more,LocdnessMomster,2025-08-01 04:40:24,1,learnprogramming,t3_1meixnb,False,
n6asjz9,"well, when you are dealing with full stacks, your projects will eventually use several languages in the same project.. Experience can show you what language is best for a particular situation and its great to learn several languages.",cyrixlord,2025-08-01 05:19:51,1,learnprogramming,t3_1meixnb,False,
n68r456,"My ~~did~~ daughter did biomedical engineering. That was a bit of a combination of both fields.Obviously it depends exactly what field you want to be. For example if your plan is to be a surgeon, there might not be much room for IT.",gm310509,2025-07-31 21:47:15,15,learnprogramming,t3_1meef7c,False,
n68u2vw,"You can do both but you need to understand how expensive and time consuming medical school is: incredibly. Realistically, if you choose to pursue medicine as a career and become a doctor, you will have limited time for programming. You can certainly take CS classes during undergrad or even minor or double major if you're really devoted to the idea. Programming can be a hobby or a side-interest, and there's nothing stopping you from getting good at it as a hobbyist.",Own_Attention_3392,2025-07-31 22:02:10,11,learnprogramming,t3_1meef7c,False,
n68yfp8,"Most of the people I personally know in medicine who code often are researchers: biostatisticians, epidemiologists, etc. However, I did help an ER doc with developing an algorithm for a project he was working on so I’m guessing some physicians code too.",ICouldUseANapToday,2025-07-31 22:24:38,6,learnprogramming,t3_1meef7c,False,
n68rad1,Yeah you persue medicine directly to help people and you can also persue coding as a hobby.,EntrepreneurHuge5008,2025-07-31 21:48:08,3,learnprogramming,t3_1meef7c,False,
n68r8hh,"You should do both, because that combination of skills is one of the most lucrative and in-demand right now. So much AI research is being done in the medical field. My university had a data science program with a focus in biology that was full of people trying to get into medical school. It's very hard, but if you're passionate about it you should give it a try.",40_degree_rain,2025-07-31 21:47:52,3,learnprogramming,t3_1meef7c,False,
n68vv1u,Sure. Why not? e.g. [https://www.cs.queensu.ca/people/Randy/Ellis](https://www.cs.queensu.ca/people/Randy/Ellis),cormack_gv,2025-07-31 22:11:14,1,learnprogramming,t3_1meef7c,False,
n69422r,"In the country where I lived, doctors have salaries 2 to 4 times lower than programmers. I just learned to code and left medicine for good. It cost me \~3 years to learn to code without any degrees or courses. So this is possible. You can try too.",Single-Caramel8819,2025-07-31 22:54:57,1,learnprogramming,t3_1meef7c,False,
n696uqi,"I think most research fields can really be helped by having someone who can program. Some ones I have heard that they can benefit from having people that can program are, Biology, Chemistry, one friend that does something with with the structure of brains but I forget what it it called right now.",AffectionatePlane598,2025-07-31 23:10:30,1,learnprogramming,t3_1meef7c,False,
n69dai6,"There are companies in the biomedical/biotech field, such as Thermo Fisher Scientific and others, where you could be involved with both medicine and coding.",RolandMT32,2025-07-31 23:46:35,1,learnprogramming,t3_1meef7c,False,
n6a7a8n,Learn as much coding in high school as you can. Some schools have career centers where you can learn programming as a junior and senior. My son did that. Then major in computer science in college and concentrate or minor in biology. Then decide if medical research is more for you or medicine is better. Medical school is extremely expensive and takes a long time and doctors are always super busy and at least in the USA it will pay more than writing software however creating new medicine or therapies using AI and modern computing can also pay well and help lots of people. Up to you.,dswpro,2025-08-01 02:45:54,1,learnprogramming,t3_1meef7c,False,
n63lzpp,"I got hired on as a full stack programmer right out of college. I got lucky and that pretty much never happens but I bring it up because I was looooost. Useless for 3 months, and not great for 6. After a year I was cruising though. In that first month at my job I learned more than an entire 4 year degree. You don’t know if you’re bad yet, keep interviewing, land something that gets you coding and run with it.",toddd24,2025-07-31 03:05:49,3,learnprogramming,t3_1mdpfkf,False,
n63eodh,"Go review CS material you forgot. Additionally start practicing interview questions. Soft skills, live coding & systems design stuff. It’s ok if you bomb a few interviews at companies you don’t too much about. Learn from those.Good luck",Rain-And-Coffee,2025-07-31 02:21:12,1,learnprogramming,t3_1mdpfkf,False,
n5zides,You should decide the language you use for each project based on the project requirements and what language is the best fit. You should not be switching languages for the sake of switching languages.,RajjSinghh,2025-07-30 14:37:35,4,learnprogramming,t3_1md7x1a,False,
n5zixd5,"Quality over quantity. Even if you have one or two projects that are actually solving a real problem and are scalable, accessible, secure, that’s enough. The objective is to learn while building. So, if you’ve learned about the concepts and can build a new project from scratch by applying those concepts, you’re good to switch to another language.",codingzap,2025-07-30 14:40:15,2,learnprogramming,t3_1md7x1a,False,
n5zn910,"It might help to tell us what you have done so far.* How long have you been learning a language?* Which languages?* What do you know about the language? Can you write classes? Do you know about inheritance? Recursion?* What resources are you using to learn a language?* What programming exercises have you done so far?When you've made ""decent"" projects, how did you do it? Did you copy a tutorial? Ask an AI? Could you have made the project only using Google and looking up resources?",CodeTinkerer,2025-07-30 15:00:42,1,learnprogramming,t3_1md7x1a,False,
n5zraps,Go and jump to another language right now and build projects there - its not like you are burning bridges and must never ever do anything at all in previous languages. Just explore away!,peterlinddk,2025-07-30 15:20:59,1,learnprogramming,t3_1md7x1a,False,
n5yi3oq,"You're mixing up two different methods, `substr()` and `substring()`.With `substring()`, when you use a negative number as the first argument, it uses `0` instead.With `substr()`, when you use a negative number as the first argument, it start(s) counting from the end of the string instead. So the `-4`th character of `""this string can be sliced""` is the last `""i""` in `""sliced""`, and then you count `8` characters, but there are only `4` left, so you get `""iced""`.",AmSoMad,2025-07-30 11:08:06,9,learnprogramming,t3_1md3hvt,False,
n5yh8xb,Checkout the documentation for the substr methodhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr,ConfidentCollege5653,2025-07-30 11:01:39,5,learnprogramming,t3_1md3hvt,False,
n5yhvco,the usual semantics of negative slice indices is counting from the end of the string. so here you are saying “from the fourth from last position take the next eight characters”,geeeffwhy,2025-07-30 11:06:21,1,learnprogramming,t3_1md3hvt,False,
n5zq10z,"Thank you so much, I should've realised there were two different functions, lol. That makes sense.",rabeeaman,2025-07-30 15:14:42,2,learnprogramming,t1_n5yi3oq,True,
n5yi0x2,"Ohhh, thanks!",rabeeaman,2025-07-30 11:07:31,0,learnprogramming,t1_n5yhvco,True,
n5zsmq5,"It's understandable.`substr()` is deprecated. It's an old method. But JS aims for backwards compatibility, so you can still use it.`substring()` is a newer implementation and still up to spec.But `slice()`, is the most modern implementation, and that's usually what I end up using. It simply says *""slice the array or string from here to here""* (which makes more sense if you've learned something lower-level, like C, because strings are technically arrays of characters). It considered a better abstraction (and I'd agree).",AmSoMad,2025-07-30 15:27:22,2,learnprogramming,t1_n5zq10z,False,
n603h47,I appreciate your help :smiling_face_with_tear:,rabeeaman,2025-07-30 16:18:22,2,learnprogramming,t1_n5zsmq5,True,
n5pwn98,"You are definitely doing it the way how it is presented. It's alright if it's taking you longer than usual because it is supposed to be that way. I would highly suggest though that after you had finished a lecture on CS50, and written them down like you've said. try to make a simple project based on the stuffs that the instructor had thaught to you. You could use A.I to copy the link and generate some simple projects according to the material and just attempt to make that on your own.",Lopez_Muelbs,2025-07-29 01:49:05,5,learnprogramming,t3_1mbyp00,False,
n5r4hsv,"Hey, you’re actually on the right track — seriously. CS50 is no joke, especially for beginners, and the fact that you’re not just watching but actively coding along *and* asking questions shows you're way ahead of just “passive learning.”Yes, it *will* feel slow at first. You’re not nitpicking — you’re trying to build actual understanding, and that takes time. It’s 100% normal to not remember everything or to need to look things up multiple times. Everyone starts that way.If you want to level up a bit without getting overwhelmed, here are a few simple tips:* **Keep a small notes doc** (which you’re already doing — big W)* **After each week**, try to build a *tiny* project using what you learned. Doesn’t need to be fancy — even a simple calculator or guessing game helps things stick.* **Don’t worry about memorizing syntax.** Focus on *what* each thing does and *why* it’s being used.* After a section, try explaining the concept to someone else (or even just to yourself out loud). It’s wild how much it helps.You're doing the hardest part right now: showing up consistently. Trust me, this isn’t wasted time — it’s the foundation that makes future stuff way easier to grasp. You're doing great. Just keep going.",Codeyoung_global,2025-07-29 07:15:04,4,learnprogramming,t3_1mbyp00,False,
n5pwq7n,"That's totally fine and is how the learning process is. Over time, and with repetition, the concepts will start becoming second nature. I also use ai to help me understand code, and will have it create problems that incorporate concepts I am learning, to help solidify them.",FCBitb,2025-07-29 01:49:33,1,learnprogramming,t3_1mbyp00,False,
n5pyknw,"You’re doing fine, learning to code takes time in the beginning. You have a solid foundation, anything thats unclear you ask an llm to explain it to you, you follow along with a course and try to understand what happens.Needing to look things up or use a reference is completely normal, especially in week 1. What matters most is that you’re making am effort to understand what’s happening.My advice is, use those concepts you’re learning and try to apply them in small projects. If CS50 provides assignments, try to do those with the concepts you’re learning.",ScaredStorm,2025-07-29 02:00:14,1,learnprogramming,t3_1mbyp00,False,
n5pzcd2,Your process looks fine—no issues here! Knowing how to use it is more important than remembering it.,Forward_Walk682,2025-07-29 02:04:43,1,learnprogramming,t3_1mbyp00,False,
n5qwabn,"I'm self taught/visual learner - i figured out that if I try to follow along coding while watching a course/tutorial - I tend to not fully grasp what I'm trying to learn - it becomes more that i'm just trying to recall syntax - it's almost like a typing test for WPM. my eyes/brain are looking ahead, but my fingers are following behind - i'm never focused on the actual _thing_And so basically when i want to learn something new i just kinda watch & listen, and I end up connecting the dots a lot better. I watch it however many times i need to, I watch other related videos, I look up things i need a little more detail on. Its good cuz, I know the thing that I want to code, isn't exactly the same as whats being taught to me in the video. At the end i've gathered bits and pieces of what I like from each piece of content.and then, with AI, i describe my understanding of that thing, and i have it just confirm my understanding. this leads to a lot of back and forth with AI because now i'm able to discuss the topic with it, adjust my understanding, correct the AI where it sounds wrong, and by the end of it, even if its not fully fledged out - i have a planonce i start coding, i have a stronger sense of the separate pieces of the puzzle that i need to build, and it becomes way easier to connect them all together",besseddrest,2025-07-29 05:59:36,1,learnprogramming,t3_1mbyp00,False,
n5py85f,>You could use A.I to copy the link and generate some simple projects according to the material and just attempt to make that on your own.Sorry i didnt quite get this. Do you mean i should copy the link of the lecture and paste it in to an ai and generate project ideas that are related to the lecture?,FirmAssociation367,2025-07-29 01:58:12,2,learnprogramming,t1_n5pwn98,True,
n5rt0ne,"Thank u so much, this just gave me more motivation!",FirmAssociation367,2025-07-29 11:02:51,2,learnprogramming,t1_n5r4hsv,True,
n5pxxzw,"Thanks for this. I'd like to ask how should I use AI as a tool to help ne learn. I don't want to rely on AI so much that it solves the problem by itself and id gaslight myself that I technically did that lol. People say dont rely on ai too much, other people say to embrace ai. So where do i draw the line?",FirmAssociation367,2025-07-29 01:56:33,1,learnprogramming,t1_n5pwq7n,True,
n5uj7e6,So true cause ive been studying for 4 hours today and im still at the 30 minutes mark lol,FirmAssociation367,2025-07-29 19:23:05,1,learnprogramming,t1_n5pyknw,True,
n6m1jwd,"Try stepping through a small binary tree search with a debugger. You can understand the algorithm by watching it work, step by step.",Building-Old,2025-08-03 00:01:50,7,learnprogramming,t3_1mg50lf,False,
n6m6lbi,Have you implemented a linked list before? The code will be similar except there are now two children nodes instead of just the next node.,rabuf,2025-08-03 00:33:32,3,learnprogramming,t3_1mg50lf,False,
n6mafdx,I disagree that you *really* understand the logic if you cannot write the code at all. What *specifically* are you having trouble with?,Temporary_Pie2733,2025-08-03 00:57:53,2,learnprogramming,t3_1mg50lf,False,
n6n6rbo,"It is not just you. It is hard.Usually the problem my students have is that they have a hard time writting recursive code. I recommend two type of things.1/start by writing recursive code for linked list operations. Then move on to simpler algorithms on trees. (find a particular value, compute sum of everything, find minimum). Also look into writing recursive code with an explocit stack instead of using function calls. It makes you understand much better how these things work.2/ learn debugging. And here i mean two different things. Learn how the debugger work to step through code and inspect memory. But also learn how to use invariants and how to verify them at runtime. This will help make sure that the code detects the first time it is in a state that is incoherent with assumptions made.",esaule,2025-08-03 04:38:01,2,learnprogramming,t3_1mg50lf,False,
n6na0zb,"Which part? Balancing logic can get pretty involved. An AA tree is a lot easier to implement than a red-black tree or AVL tree. A scapegoat tree is probably even easier.You say you've already implemented linked lists. Have you tried implementing skip lists yet? They're more like a tree in performance, but it's just a linked list with shortcuts. Have you tried implementing a binary search over a sorted array? This is kind of what a binary search tree is doing.Lisp has a built-in ""dotted"" notation for cons cells, so you can just write example trees out to test your lookups, for example. Maybe try implementing a scapegoat tree in Scheme before trying again in whatever language you're using. Scheme also kind of forces you to use recursion, which is what you need to process recursive data structures like trees.",Gnaxe,2025-08-03 05:04:21,2,learnprogramming,t3_1mg50lf,False,
n6m5ibi,"Learning how to implement a binary tree was one of the hardest things I learnt when I was starting to code, not because the concept of binary trees was difficult but because it was the first time working with recursion and using instances of objects If you already know how to do a tree by hand, maybe the problem is on the implementation concepts like recursion and object / data references",Solrak97,2025-08-03 00:26:39,1,learnprogramming,t3_1mg50lf,False,
n6mc81a,"I totally get where you're coming from — binary trees can feel confusing at first, especially when translating logic into working code.Here’s what helped me (and might help you too):Start with linked lists.They teach you the structure of nodes — how each contains data and a reference to another. Once you’re solid with that, binary trees become easier: it’s just two references instead of one (left and right).Then, build a simple Node class for your tree. Keep it minimal: just value, left, and right.Now, draw a small tree on paper and simulate what’s supposed to happen step by step:How insertion flows,How recursion works (base case + call stack),How traversal happens (in-order, pre-order, post-order).Use a debugger or print() statements to watch the logic unfold live. That’s how you bridge the gap between understanding the concept and writing working code.Finally — don’t rush. Trees teach you recursion, memory structure, and flow control all at once. So if it’s hard, that just means you’re learning something real.You're closer than you think.---Let me know if you'd like a sample in Python or a visual breakdown. Happy to help",faot231184,2025-08-03 01:09:14,1,learnprogramming,t3_1mg50lf,False,
n6muzlt,https://www.geeksforgeeks.org/dsa/binary-tree-data-structure/This site got me through college,Lotton,2025-08-03 03:11:21,1,learnprogramming,t3_1mg50lf,False,
n6nwodd,"The only time I've ever encountered a binary tree is in those contrived examples you're given on leetcode or hacker rank. If ever you actually needed something like a binary tree you'd either use a data structure from a standard library, or import a well tested and documented library. A high level understanding of the concepts and some experience with dealing with them is more than enough. Mastering their implementation is re-inventing the wheel.",skibbin,2025-08-03 08:33:45,1,learnprogramming,t3_1mg50lf,False,
n6plb5n,Do it step by step on paper.,Responsible-Push-758,2025-08-03 15:39:46,1,learnprogramming,t3_1mg50lf,False,
n6k9w07,"There are more than countless posts about ""Thinking like a programmer"", just type ""think like a programmer"" in reddit's search box and you will find ample threads.I'll leave some of my previous comments in similar threads here:+ https://www.reddit.com/r/learnprogramming/comments/1j9ezmx/getting_better_at_coding/mhdna2e/+ https://www.reddit.com/r/learnprogramming/comments/1iz7wv3/how_to_become_a_better_engineer/mf10qbg/+ https://www.reddit.com/r/learnprogramming/comments/1j3w7x9/how_to_actually_learn_problem_solving_skills/mg3q9ya/+ https://www.reddit.com/r/learnprogramming/comments/1ioehwa/struggling_to_put_together_my_own_code/mcirhxq/+ https://redd.it/1jyd36k",aqua_regis,2025-08-02 18:01:36,5,learnprogramming,t3_1mfwwr5,False,
n6kwcle,"You can learn, things can get better. Make sure to get good rest and ignore distractions, when it's time to study then it's time to study and when it's time to rest it's time to rest.On my first job as a programmer my boss fired me and told me I would never be good enough to be a programmer and that I should try IT support instead. 5 years later I make triple the salary I made before I started as a programmer.",klas-klattermus,2025-08-02 20:06:49,1,learnprogramming,t3_1mfwwr5,False,
n6kubg1,Do you feel imposter syndrome is also a very real thing OP and others might be dealing with?,EdiblePeasant,2025-08-02 19:55:27,-2,learnprogramming,t1_n6k9w07,False,
n6kv4y6,"Don't know how often I have to say it: Beginners can by definition (check it in Wikipedia) not suffer from ""Impostor Syndrome"" as it is *the feeling of incompetence despite __external proof__ of competence*.Beginners are neither competent, nor do they have external proof. They just have beginner's struggle.The term ""Impostor Syndrome"" is one of the most wrongly used terms at present.",aqua_regis,2025-08-02 20:00:00,3,learnprogramming,t1_n6kubg1,False,
n6mgkxi,thank you so much I will definitely look in the resources you gave,No-Chemistry-7047,2025-08-03 01:36:36,1,learnprogramming,t1_n6kv4y6,True,
n6btvgd,Microsoft learn. Though tbh I was in your shoes a few years ago and I just learned it on the job. It will be pretty natural coming from java,Defection7478,2025-08-01 10:56:26,3,learnprogramming,t3_1mesmwc,False,
n6bunzf,"Can u recommend a youtube playlist or a channel, cause i found lots and i got a little anxious...",Low-Effective3972,2025-08-01 11:02:35,1,learnprogramming,t1_n6btvgd,True,
n6bv8gy,"I pretty rarely turn to YouTube for c# tutorials. I really recommend ms learn, they have excellent interactive tutorials https://learn.microsoft.com/en-ca/training/paths/build-dotnet-applications-csharp/",Defection7478,2025-08-01 11:06:54,1,learnprogramming,t1_n6bunzf,False,
n6bvrxm,Ok tysm :white_heart:,Low-Effective3972,2025-08-01 11:10:58,1,learnprogramming,t1_n6bv8gy,True,
n67ztew,"Its like learning to read, write and speak a language.Study, practice, use until it becomes second nature.Not hard for those who have discipline.",Environmental_Pay_60,2025-07-31 19:35:28,35,learnprogramming,t3_1meax1x,False,
n687ed5,"Programming, in a normal, professional use of the word, is never, ever about memorizing anything. You do not need to memorize tags, functions, codes, algorithms, formats or anything of the like. You will always have resources available to review anything that you need. Thinking you have to memorize everything related to a programming language or environment is like thinking your car mechanic has to memorize every nut and bolt in every car they may work on. Programming is solving problems. Full stop.",az987654,2025-07-31 20:11:56,10,learnprogramming,t3_1meax1x,False,
n67yhj4,It's easy if you have goals. Programming is a tool no a goal. What are your goals?,PM_ME_YOUR_TITS80085,2025-07-31 19:28:54,15,learnprogramming,t3_1meax1x,False,
n67yi7j,">I'm fearing that I might not remember all the tags or elementsWell you can say that about learning **anything**. Coding is not an outlier. Approach coding how you approach learning to ride a bike, or cook, or paint, or whatever. Over time, things will stick, things will become second nature, things will become easier.",Dappster98,2025-07-31 19:29:00,4,learnprogramming,t3_1meax1x,False,
n67zu14,"The really hard part is to train a proper way of thinking, both in terms of instruction flow and in terms of specific language paradigm. You'll need to resign from you initial intuition of how stuff works and train a new, proper intuition. Memory is not going to be an issue, there's cheat sheets for beginners, you can take notes, you can find a ton of references and other help. Most solutions can be done using a handful of language tools, and while sometimes knowledge of a specific method can simplify a lot, it's not going to be blocking for your progress.",voyti,2025-07-31 19:35:33,3,learnprogramming,t3_1meax1x,False,
n681mlr,first learn to learn things,ObjectiveChoice3899,2025-07-31 19:44:21,3,learnprogramming,t3_1meax1x,False,
n687t0x,"Programmers don't remember everything. There are resources to look things up. If you use it frequently, you'll remember it. If you don't use it frequently, you don't need to remember it.If you're not remembering things, it's because you didn't get enough practice, or you're out of practice. Just listening to a course won't do it. You need to make stuff.",pavilionaire2022,2025-07-31 20:13:53,2,learnprogramming,t3_1meax1x,False,
n689fhf,It's as easy or as hard as whatever you're making is. Hello World: easy. A full-featured game engine: hard. Most business applications: somewhere in between.,HashDefTrueFalse,2025-07-31 20:21:28,2,learnprogramming,t3_1meax1x,False,
n680fju,"Yeah, remembering stuff at the beginning is difficult. You just have to keep doing it until it's like a part of your regular vocabulary. Just don't try to overthink the learning, like using anki or flashcards to try to remember keywords. Just put your butt in the seat and code, or you'll kick yourself later for wasting all that time.",wannacommissionameme,2025-07-31 19:38:29,1,learnprogramming,t3_1meax1x,False,
n683csh,"Everyone comes up with some random fear that keeps them from learning. It's all in your head bro, just try it. There is zero downside. You can try learning some stuff over like a month, put an hour in each day, no big deal. If it doesn't work out it's fine.It doesn't matter if you forget things You google it. Programming is so much more than just memorizing random syntax or libraries, in fact that aspect of it is almost entirely negated by AI. It's more about problem solving and managing complexity.It sounds like you're hinting that you only tried to learn basic web front end stuff in the past. It's not clear if you want to keep sticking to that or learn other things but they can be extremely different beasts.",silly_bet_3454,2025-07-31 19:52:39,1,learnprogramming,t3_1meax1x,False,
n68498q,"I professionally work on large codebase (~50+ million lines of code) containing a mix of backend and frontend code. We pretty much exclusively use plain-old dependency injection and do not quite use the service locator pattern.This is partly due to the architecture of our codebase, which is a monorepo containing a bunch of microservices. That is, we have one giant repo where all code lives, and the code contains several thousand smaller programs that are managed by different teams and deployed independently at cadences picked by the owning team. (The monorepo + microservice approach makes it easier for each team to move independently while still making it easy to share + reuse + mass-refactor code, etc.)Given this setup, having a central registry is not hugely useful because:1. If we create just one 'registry library' that everybody adds their thing to, it ends up introducing a major bottleneck to builds and tests. When we make a code change, our build system + CI pipeline tries building and testing only code that ends up depending on that code change in some way; having a single common module that nearly every microservice takes a dep on would add an unnecessary bottleneck.2. You don't really get much benefit out of having every single microservice create their own registry and register deps. If you're going through the hassle of this, you may as well just pass in those dependencies directly into your code and skip setting up the intermediary registry.Beyond this though, I personally think service locators are inferior to plain-old-code and dependency injection because:1. Having the dependencies be statically encoded in the source code instead of created dynamically via some magic framework makes it easier for IDEs and static analysis tools to determine where exactly different snippets of code are being used, programmatically update the code, more intelligently pick which tests must be run given certain code changes, perform type checking, etc. So, the less dynamic/runtime wiring we can have, the better.2. It also makes unit testing easier -- there's nothing simpler then just calling a plain-old-function or instantiating a plain-old-class. The less ceremony you can have, the better.3. Arguably service locators make it a little too easy to add new deps. Code that takes a large number of deps is usually a sign of poorly-designed code -- it should be broken up into smaller, better compartmentalized components. So, having a little bit of friction here seems like a pro, not a con.All that said, it's true that these microservices need a way to communicate with each other -- need some sort of [service discovery](https://en.wikipedia.org/wiki/Service_discovery). This has less to do with code architecture and more to do with the reality that these microservices need to run on a fleet of many thousands of hosts, and so need a way of discovering which IP address any particular microservice replica is serving from at any given time.To do this, we have microservices register their IP address in a system that's pretty similar to DNS; downstream microservices need to hard-code the specific service address and perform a lookup to talk to other microservices they take a dep on.In fairness, the actual code to do all of the above can end up feeling pretty similar to the service locator pattern in practice -- it's just that instead of registering a pointer, we register IP addresses. So, I suppose we do use a variant of this pattern in practice.> are multithreadedI think multi-threadness is irrelevant here. If your code is multi-threaded, your deps need to be thread-safe, no matter how they're passed around.",michael0x2a,2025-07-31 19:56:57,3,learnprogramming,t3_1me3q0l,False,
n685i7o,"I think this question is posed from an odd place because we’re basically asking which pattern is better as it relates to these massive contextually-sensitive topics. One question I’d ask is if we’re using unit tests to confirm smaller, isolated behaviors as parts of a bigger system, does the method these systems use to communicate matter?Another question might be, do I want/need multiple threads to have (essentially) global access to these systems? Because a service locator provides that. Just as an example with my context, I use service locators in game development to provide convenient access to main systems (audio, saving, scene loading). I don’t care about testing or have concerns with multi threading so it doesn’t factor into my decision. I use DI extensively in many other scenarios where I need to be explicit on my inputs. Definitely would recommend just building with velocity and if you run into a problem over and over again then consider refactoring or reaching for a design pattern.",Cidercode,2025-07-31 20:02:54,2,learnprogramming,t3_1me3q0l,False,
n68aump,"n general, you should use dependency injection instead of a service locator. However, there are situations where a service locator makes sense..like when you’re dealing with a mix of scoped services, singletons, and transient dependencies. In those cases, you often need to manage the dependencies manually with a service locator, in the sense you control their lifetimes but still use the container to initialize them.",yubario,2025-07-31 20:28:07,2,learnprogramming,t3_1me3q0l,False,
n6eyzvj,"Dependency injection has some pros over the service locator pattern:1. **No hidden dependencies!** \- You know exactly what dependencies an object has just by looking at its constructor, and what dependencies a method has just by looking at its parameter list. You don't have to read through all the implementation details, or figure out through trial-and-error, what services need to be registered in your service locator for things to not break at runtime. If all required dependencies are explicitly listed as constructor and method parameters, the compiler makes it basically impossible to try and construct an object or execute a method without having everything in the right place for it to work (at least if the services passed to the client themselves also use dependency injection, etc.).2. **Safer async initialization** \- If a service returned from a service locator requires some sort of asynchronous initialization before all its methods are ready to be used, then it could easily lead to a situation where a client forgets to check some IsReady property before calling some method, resulting in bugs. Or even if the service is explicitly registered as wrapped inside a promise object, then all clients need the additional complexity of handling waiting for the service to become ready, and unwrapping it. With dependency injection you can naturally always just wait for all services to be fully ready before you even initialize the client and pass them to its constructor. Thus all clients' code can remain very simple and focused, and the asynchronous nature of a few services don't end up spreading around the code base, and causing the whole APIs of all their clients to also become asynchronous in nature.3. **Better support for multiple services of the same type** \- with dependency injection, you can easily at any time pass completely different services to separate instances of the same client type. You can pass a default logger to most of them, but pass a more verbose logger to that one instance that you want to debug more closely right now. If you use a global service locator, then you might just be completely stuck with all instances of a client class being stuck using the same services at any given time. Or even if you use multiple separate service locators, it'll still probably be much way more complicated to swap the service of one client instance in some particular context - potentially even requiring some substantial architectural changes to pull it off.4. **Clients don't have to worry about lifetime management** \- if a client pulls out a service from a service locator, how do they know if they should dispose of it once they no longer need it? Did they get a transient service, or is it a singleton shared between multiple instances? Does the service locator have to return some other information besides the requested service, so that this can be resolved? Do clients just always have to return all services to the service locator, just in case? With dependency injection all the complexity of lifetime management is pulled out from all the many clients in your codebase, and can be centralized into a smaller number of composition roots, where the lifetimes of all the different services is probably more clear.5. **Clear initialization order** \- if services are initialized lazily by a service locator, in whatever order they're requested by clients, then their initialization order can become an unknowable, unpredictable black box, where the order of initialization can change drastically due to small changes in the implementation details of clients. This can potentially lead to random spooky-action-at-a-distance bugs, where a small change to some object causes a chain effect, resulting in some event being raised before some service has had time to subscribe to it, causing things to silently break. With (pure) dependency injection the initialization order is super clear, and doesn't just suddenly change ""by itself"" without you being aware of what has happened.",sisus_co,2025-08-01 20:40:55,2,learnprogramming,t3_1me3q0l,False,
n6l25p1,Service locator is just a glorified global variable. And global variables are usually bad. Prefer dependency injection when possible.,GodOfSunHimself,2025-08-02 20:38:40,2,learnprogramming,t3_1me3q0l,False,
n6dga7l,"Thank you for taking your time to craft this incredibly detailed response! It made me realize how much I was abusing the service location pattern in my project, and how many times I've unknowingly violated SoC. Again, I really appreciate your response!",Nick_Zacker,2025-08-01 16:15:19,1,learnprogramming,t1_n68498q,True,
n67ybiq,"This is extremely helpful information, and I deeply appreciate that you took the time to write all of that! In my case it’s C++, but the core principles you outlined apply here as well as they do to JS. However, I’m also curious how you’d handle DI hell, where a class requires a ton of dependencies? Is that a common issue or is it just a sign that there’s a problem with the class itself (e.g., it’s doing too much and violating SoC)?",Nick_Zacker,2025-07-31 19:28:05,1,learnprogramming,t1_n67ti39,True,
n6dgvno,Understood. Thank you so much!,Nick_Zacker,2025-08-01 16:18:11,1,learnprogramming,t1_n685i7o,True,
n6dh69s,Got it. Thank you!,Nick_Zacker,2025-08-01 16:19:36,1,learnprogramming,t1_n68aump,True,
n657bm7,"If you’re enjoying Django/Python, it’s smart to go deep before branching out. Mastery opens doors, and you can always diversify later.",irinabrassi4,2025-07-31 11:08:33,3,learnprogramming,t3_1mdn6ts,False,
n6394r9,The details don't matter. Learn the concepts,no_regerts_bob,2025-07-31 01:48:33,2,learnprogramming,t3_1mdn6ts,False,
n62ve86,"If you’re want to get a job go into databases, cloud computing, and automation.",darkmdosmicra,2025-07-31 00:26:50,1,learnprogramming,t3_1mdn6ts,False,
n630tdn,Could u please elaborate more ?,Kloudy17,2025-07-31 00:58:56,3,learnprogramming,t1_n62w5o3,False,
n64h5xr,"It sounds like you’ve grown a ton already—being a solo dev on a full stack project right out of school is no small feat! For deepening backend skills, I’d recommend reading “Designing Data-Intensive Applications” and building side projects.",Dependent_Gur1387,2025-07-31 07:12:36,1,learnprogramming,t3_1md67si,False,
n5rzt0p,Do you have the math and statistical background?,ArgoPanoptes,2025-07-29 11:52:29,3,learnprogramming,t3_1mc9ajp,False,
n5s2rw3,"Starting with Excel, SQL, and Tableau is good. These are core tools for most data analyst roles and as you get more comfortable, you should start adding things like basic statistics (which you're already touching on with the Coursera math course), and eventually some Python or R if you want to expand your scope. But focus on mastering the basics first. Your goal of building projects is key. Whether it's analyzing publicly available datasets, visualizing something you're personally interested in, or even cleaning and presenting data from a small business (if you can find one willing to let you play with their data), those projects will help you learn more deeply and give you something tangible to show potential clients or employers. It's possible to land jobs or freelance gigs within a year, especially when you can show consistent learning, project work, and a clear understanding of the fundamentals. Your lack of a tech or math background isn’t a dealbreaker. What matters most is how you build your practical skills and communicate them.",Content-Ad3653,2025-07-29 12:11:51,2,learnprogramming,t3_1mc9ajp,False,
n5xwd5q,"Definitely not a pipe dream! With focused daily study and project work, you can build enough competency in Excel, SQL, and Tableau for entry-level roles in under a year",Dependent_Gur1387,2025-07-30 07:48:56,2,learnprogramming,t3_1mc9ajp,False,
n5y95k3,"Totally get where you're coming from. I feel that starting with Excel, SQL, and Tableau is a solid move. These are the go-to tools for most data analyst roles. Once you're comfortable, adding basic stats and a bit of Python can help, but focus on building a strong foundation first. Try projects like analyzing survey results, tracking local business trends, or visualizing your own spending data. These are simple but effective ways to learn and build a portfolio. One of my friends had no math or tech background and started with similar tools. She took an online course from a learning platform, studied for about 3 to 4 hours a day, and worked on small projects. Within 10 months, she landed a data analyst job at a mid-sized company. It’s definitely possible if you stay consistent and show your work.",TrueStable7343,2025-07-30 09:52:44,2,learnprogramming,t3_1mc9ajp,False,
n5s07lr,"I do not. I'm currently doing a Data Science Math Skills course on Coursera while I'm waiting for my schedule to clear in Sep. So far, so good.",cheesemelikenow88,2025-07-29 11:55:09,1,learnprogramming,t1_n5rzt0p,True,
n5s33ja,This is very encouraging. Thank you!,cheesemelikenow88,2025-07-29 12:13:55,1,learnprogramming,t1_n5s2rw3,True,
n5y01ko,Thank you!,cheesemelikenow88,2025-07-30 08:24:33,2,learnprogramming,t1_n5xwd5q,True,
n5yna7j,Thank you so much. This is great info. I really appreciate it!,cheesemelikenow88,2025-07-30 11:45:16,1,learnprogramming,t1_n5y95k3,True,
n5s7751,"Without a degree in CS or Math, it will be hard to land a job and have a good career in this field.",ArgoPanoptes,2025-07-29 12:39:15,7,learnprogramming,t1_n5s07lr,False,
n5rbibq,"This game is pretty cool, very basic. https://sqlpd.com/",President0fEarth,2025-07-29 08:22:36,5,learnprogramming,t3_1mc5tb5,False,
n5rl4ul,You could try some of the pentesting platform like hackthebox or tryhackme pretty sure they have SQL injection problems,IHeartLife,2025-07-29 09:55:31,3,learnprogramming,t3_1mc5tb5,False,
n5rfi2c,"Figuring things on your own can be a bit tough especially when just starting and so maybe you could find a tutor on platforms like Lrnkey to take you through a few examples with someone step by step,that could make a huge difference in understanding what you're doing",prazeros,2025-07-29 09:01:37,1,learnprogramming,t3_1mc5tb5,False,
n5rbkdp,"Oh, I didn’t read that right. Sorry. That’s more for learning SQL itself, my bad",President0fEarth,2025-07-29 08:23:10,3,learnprogramming,t1_n5rbibq,False,
n5rmwd7,That's just what I wanted to suggest as well.,desrtfx,2025-07-29 10:11:38,1,learnprogramming,t1_n5rl4ul,False,
n5rbqpi,"Nah thats ok, It looks pretty cool wish i had that when i was first starting out. Thank you nevertheless",mindvenderrearender,2025-07-29 08:24:53,2,learnprogramming,t1_n5rbkdp,True,
n5qqmir,"React Native will work very well for cross platform development. I prefer Flutter, but ultimately it will probably come down to preference in your case.",Serenity867,2025-07-29 05:11:08,3,learnprogramming,t3_1mc2pvv,False,
n5qr94k,"Yes, React Native is fine for complex apps.React Native supports both iOS and Android, you might have some parts of the code that will required a bit of 'if iOS do this, if Android do that', but for the basics, it'll be fine.Map support on React Native is OK, but only OK, it'll work though.",Slow-Bodybuilder-972,2025-07-29 05:16:17,2,learnprogramming,t3_1mc2pvv,False,
n5tk31e,I honestly love Tauri. The whole ecosystem is awesome. Most of the native functions are available to you in javascript. If you don't have something you can just use rust and invoke that in the frontend. You can just use react for the frontend.,Rudresh27,2025-07-29 16:42:04,1,learnprogramming,t3_1mc2pvv,False,
n5xkb0t,"there is few framework you can use flutter, reactNative is most popular as for C# developer they prefer xamarin it is up to developer preference.",No-Project-3002,2025-07-30 05:56:04,1,learnprogramming,t3_1mc2pvv,False,
n5qryw9,"And if you wanted it to be better than just ok, what is your choice of action?",3esuss,2025-07-29 05:22:15,1,learnprogramming,t1_n5qr94k,True,
n5qs71d,"MAUI has better support for Maps, but it's worse at just about everything else.There is no cross platform toolkit that's good, they all have trade-offs. If I was making an iOS only app, I'd pick SwiftUI, no question, but since you want Android too, React Native is a good choice.Flutter has it's fans, but I've never used it professionally, so won't comment on that.",Slow-Bodybuilder-972,2025-07-29 05:24:08,2,learnprogramming,t1_n5qryw9,False,
n5qt5ks,Alright appreciate all the advice as it’s very needed!,3esuss,2025-07-29 05:32:19,1,learnprogramming,t1_n5qs71d,True,
n5ozrvp,"I would look for a challenge or project that's at the right level for you, rather than settling for something too easy or too hard. As a starting point, I always recommend [Simple Programming Problems](https://adriann.github.io/programming_problems.html)!Beyond that, AI should be able to work with you to brainstorm some ideas that are at the right level for you.",abrahamguo,2025-07-28 22:44:11,3,learnprogramming,t3_1mbuook,False,
n5p19eu,"Yes, this is normal. Your degree ultimately builds only the bare foundation you need to make actual, real-world projects. Around 80% of what I learned was on the job, although I ended up using everything I learned in uni, except for “old AI” which I never found a use for.",Joewoof,2025-07-28 22:52:20,3,learnprogramming,t3_1mbuook,False,
n5p5h0b,"Feeling underwater is quite common, specially since it sounds like you have no paid experience. On the job you usually get thrown into a giant codebase and just have to figure things out.What types of programs would you be interested in building?",Rain-And-Coffee,2025-07-28 23:15:14,1,learnprogramming,t3_1mbuook,False,
n5p62n0,"It takes a long time to know what you don't know. And from there to gauge what is worth learning for the potential task at hand. It's normal to get into something bigger than you guessed in the early days. Keep doing what you understand but push the boundaries. Sometimes you can learn a lot from stopping after you've ""made it work"" and look at how else it could work. How many ways are there to do X seemingly simple thing? Is my solution the best, and why?",no_regerts_bob,2025-07-28 23:18:29,1,learnprogramming,t3_1mbuook,False,
n5p7pyh,What exactly makes you feel in way over your head? I'm having trouble imagining that.,Ksetrajna108,2025-07-28 23:27:22,1,learnprogramming,t3_1mbuook,False,
n5pestv,"That clears it up a bit. Thanks. Have you heard of the composite pattern. It's a way to think of a complex whole as an assemblage of less complex parts. This can be used concretely, such as the parts of a car, or more abstractly, like the scenes in a play. When your mind is focussed on one part, it thinks of the other parts more or less abstractly. Trying to focus on too many parts at once strains the mind and makes it feel overwhelmed. Can you find an example of this in your project?",Ksetrajna108,2025-07-29 00:06:25,1,learnprogramming,t3_1mbuook,False,
n5phxha,"how much is ""plenty of programming""? in 2 years the bigger projects we've done have been: a minesweeper variant, an online multithreaded messaging desktop app, a 2-month project of choice (chose to do a barebones 2d roguelite with physics and no third party code/assets), a programming language using antlr, a basic mashup web service, a plant and watering info web service, and lastly a mostly complete eco initiative web service (register and log in, send and receive private messages, create and join initiatives, comment on initiatives, log eco actions, and receive various relevant notifications). I've used java, python, js, ts, and gdscript during my time studying. in my next 2 semesters I will also have 1 c++ course eachfrom what you're describing it sounds like you haven't programmed enough to be properly self-sufficient. I will emphasize that at this level you will definitely feel underwater. you still get that sometimes especially when using brand new things, but for example if I make something with plain java and standard libraries I will NOT be feeling like that even in an ambitious projectunlike what some comments are suggesting, there's no avoiding this and you simply have to push through",NefariousnessMean959,2025-07-29 00:24:19,1,learnprogramming,t3_1mbuook,False,
n5qsekx,Have you worked with SQL databases?,Jim-Jones,2025-07-29 05:25:52,1,learnprogramming,t3_1mbuook,False,
n5rayi0,"feeling a bit underwater with bigger projects is super common—it's part of bridging that gap from beginner to intermediate. Try breaking bigger ideas into smaller, manageable chunks, and don't be afraid to dig into real-world coding challenges",irinabrassi4,2025-07-29 08:17:10,1,learnprogramming,t3_1mbuook,False,
n5rfjup,"Yes it's normal to hit blocks, particularly when you're learning something new. Try to break it down into small pieces and make small incremental steps forwards. If you still need projects ideas, there are 30+ beginner level projects here: [https://codingchallenges.fyi/challenges/tags/beginner](https://codingchallenges.fyi/challenges/tags/beginner)",JohnCrickett,2025-07-29 09:02:06,1,learnprogramming,t3_1mbuook,False,
n6ofsw9,"> I’m more into backend stuff, like APIs and automations, but I can handle some frontend too. Just not sure what kind of personal projects actually help when applying for junior or entry level roles.Generally, I would focus on creating projects that:- Use the stack / technologies you want to use in practice, or want to get a job in. While not completely necessary, as you can show general software development aptitude by simply creating programs that work, having them also be using the technologies a company you are applying for immediately shows your general skill level to the person doing the interview with you.- Write applications that excite or interest you personally. You will find that in an interview just being able to talk about a project that interests you will convey genuine interest in our field of work. Personally as an interviewer, I am always very interested in hearing about projects people have written just because it interests them. - Document your projects, and make them representable. I like seeing Github URLs on applicant their CVs, but interviewers are likely not going to check out more than 1-3 projects. Pin or highlight the projects you are most proud of, provide them with good documentation, if possible with screenshots or in case of a web app: a demo website. Make it easy to run. Your goal is to entice the interviewer to check out the code, and maybe even clone your repo in order to do so. - Your Emotion-AiCbot repo is a good example of this. Your custom-domain and medstuff repo's not so much. - Try and make your projects non-trivial. I do not get excited by projects like calculator or to-do apps. These are simple applications, and there are a bunch of prebaked tutorials for those on the internet. Created some niche application for your hobby, or which you use in your day-to-day life? Way more interesting.> I’m more into backend stuff, like APIs and automations, but I can handle some frontend too. Just not sure what kind of personal projects actually help when applying for junior or entry level roles.Know that as a junior engineer, my expectation would be that you quickly pick up technologies and are a rapid learner. Try not to limit yourself too early in your development by preferring only certain types of task (e.g. back-end). Certainly do get proficient with at least one front-end technology, or you will not stand out among junior developers that are skilled in multiple domains.Best of luck.",Lerke,2025-08-03 11:34:12,4,learnprogramming,t3_1mgfuke,False,
n6jih1s,"You don't get comfortable, you apply, hopefully get a job, then you suffer with whatever they put on your plate :angry_face_with_horns:",Sziszhaq,2025-08-02 15:37:02,4,learnprogramming,t3_1mfsqxn,False,
n6jj9pe,"I am just a hobbyist and have been coding very casually until recently so PLEASE take this with a grain of salt. The only advice i can personally give is that it has been told to me that its okay to google some stuff when working. This is how you learn. You need to do something, you look for how to do it, and then next time you need to do it you know how. Make sure you're understanding why it works though and not just how to do it, thats a pitfall a lot of people fall into when learning anything. Also I personally dont use ChatGPT to write any code. If i use it its usually for syntax issues (usually when learning a new language) or as a substitute for google. Sorry I cant help more and im personally wondering the same question tbh. Its definetly hard to know when your competant enough to try and work in this field, but just make sure your always learning and try to always have fun doing it. :)EDIT: Typos",Turbulent-Ticket8122,2025-08-02 15:41:13,1,learnprogramming,t3_1mfsqxn,False,
n6o2bz1,"If you cannot build a project on your own then you didn't learn it properly imho. It's one thing learning the theory but even more important to know how and when to use it. You don't need to know everything as Google and AI exists (no programmer knows everything) but you need to build projects to learn how a project is constructed from start to finish and what is also important is that you don't use AI to solve problems. Struggling is part of the learning process and you only can learn debugging for example if your code, that you wrote yourself doesn't work and you go through it line by line trying to understand why the output is not what you want it to be. Like mentioned above theory is important too as you need to know that certain syntax even exists but then using this syntax so your brain gets used to it you can only learn by doing projects. Once you think you learned Javascript or Typescript for example (like you said you did), start a project and see if you know what to do. If the answer is you don't know then you need to spend more time with it until you can build a project yourself before moving on. I think even if you can get a job you will feel much more comfortable if you have done several projects. Like many here say, programming is not a sprint but a marathon. It takes a long time to learn properly.",sandspiegel,2025-08-03 09:30:34,1,learnprogramming,t3_1mfsqxn,False,
n6o5u7e,"Definitely check with r/cscareerquestionsIN as your own peers in the country you live are the best people to answer your questions about future employment and careers, especially if you've only been doing HTML and CSS for a month or so, skipped most JS training to jump right into React, and that you're 17 or so recent high-school grad based about to go to college.",Aglet_Green,2025-08-03 10:05:09,1,learnprogramming,t3_1mfsqxn,False,
n6i3gtt,"Carbon Footprint Tips Spinner - A small site or app that gives a random eco tip each time you click, with a short fact behind it. You can try this",itz_charlie01,2025-08-02 09:54:54,1,learnprogramming,t3_1mf0zci,False,
n6msf23,Add me,SleepInteresting6130,2025-08-03 02:53:36,1,learnprogramming,t3_1mf0djz,False,
n6euowi,Yess! Let's level up :grinning_face_with_smiling_eyes: Do you follow a plan or just pick random LeetCode questions?,Smooth-Baseball7107,2025-08-01 20:19:34,1,learnprogramming,t1_n6elusv,True,
n6hyobf,maybe yeh ! How much do you know about CP?,Smooth-Baseball7107,2025-08-02 09:06:17,1,learnprogramming,t1_n6hyg2v,True,
n6fslyd,Can i hop in too?,bean_headed,2025-08-01 23:20:56,1,learnprogramming,t1_n6euowi,False,
n6hhzjw,"That sounds perfect! Since we’re all beginners, maybe we can follow a beginner-friendly DSA roadmap like Striver’s sheet or NeetCode 150. We can solve 1–2 problems daily and discuss",Smooth-Baseball7107,2025-08-02 06:23:51,1,learnprogramming,t1_n6hgo1p,True,
n6adp8m,I'm interested,speedygen1,2025-08-01 03:28:30,1,learnprogramming,t3_1mek2dp,False,
n6ai02t,Interested,Prestigious_Self_336,2025-08-01 03:58:44,1,learnprogramming,t3_1mek2dp,False,
n6al4u7,Interested! Please share the access link when you can,i_use_reddit_007,2025-08-01 04:21:33,1,learnprogramming,t3_1mek2dp,False,
n6b7dpk,"Please give a 5 star review, many thanks.",Odd-Beautiful2131,2025-08-01 07:31:22,1,learnprogramming,t1_n6adp8m,True,
n6b7e4f,"Please give a 5 star review, many thanks.",Odd-Beautiful2131,2025-08-01 07:31:28,1,learnprogramming,t1_n6ai02t,True,
n6b7edo,"Please give a 5 star review, many thanks.",Odd-Beautiful2131,2025-08-01 07:31:32,1,learnprogramming,t1_n6al4u7,True,
n6hbfan,you didn't post anything,speedygen1,2025-08-02 05:25:04,1,learnprogramming,t1_n6b7dpk,False,
n64uwfr,"Things generally aren't set up that way. The public facing server would be on the same private network as the database, but could either be exposed to the public or it could be on an additional, separate public network. Or if they're both on a public network, you'd just use a firewall to deny everything except for your public server",grantrules,2025-07-31 09:23:06,8,learnprogramming,t3_1mdwo7w,False,
n64z47z,"Probably something like a reverse proxy? Basically the private server initiates a connection to open a tunnel into the public server. Basically you can link the database server port to a port on the public server.That would solve the problem of private server being in a different network, and not having a public ip.If it's on the same private network, but only the API server has a public ip, you would interact with the API externally, but the API service would then talk to the database server over the private network. That's probably a more standard way.In modern cloud setups you might do something like that with virtual networks, or you might just have a database with a public IP but basically limit the network traffic so it can only originate from the API server, and obviously have access controls in place as well.",MuscleZestyclose4893,2025-07-31 10:01:45,3,learnprogramming,t3_1mdwo7w,False,
n65rnqe,Changes to the public server are written to a message queue. Then a service on the private machine subscribes to the queue. Consumed messages are written to the db.,bikeram,2025-07-31 13:15:24,3,learnprogramming,t3_1mdwo7w,False,
n650kax,"You would just have your webserver on two networks: the external one, and an internal one, where the database server also resides. In the most simplest setup, your public facing server has two network cards: one connected to the big bad world, the other connected to the database server with a single cable. In practice, you’d be working with routers and firewalls.",Abigail-ii,2025-07-31 10:14:28,2,learnprogramming,t3_1mdwo7w,False,
n64vp83,"If you want instant updates you need to be able to notify the client, unless updates occur at scheduled intervals.The only alternative is constant polling for new information by the client, which is an absolute nightmare solution on public networks.In order to implement notifications from your server just register your client as a subscriber whenever your local IP changes.",da_Aresinger,2025-07-31 09:30:38,1,learnprogramming,t3_1mdwo7w,False,
n64z9ds,"If the updates need to happen immediately you just maintain an open connection. The private server needs to initiate a connection but after that traffic can flow two way all you want over a plain old TCP socket.But also depending on what exactly you are doing there's probably better ways. Plain old reverse proxy, cloudflare tunnel, VPN, etc.",Skusci,2025-07-31 10:03:03,1,learnprogramming,t3_1mdwo7w,False,
n655itj,You can set up a VPN to the server.,cormack_gv,2025-07-31 10:55:01,1,learnprogramming,t3_1mdwo7w,False,
n65gr8r,"This happens all the time, but it’s usually a different scenario. It’s usually a web browser or app client needing to receive updates from a central server without an addressable ip. There are two approaches. The first is polling, which is fine if updates can be delayed by a bit. iPhone email polls. The second is the CometD protocol which keeps a long lived socket open between client and server that closes after either a three minute timeout or when a “push” update is returned. This is inefficient in terms of open tcp sockets for the server and cannot massively scale but can support client counts in the thousands or tens of thousands.If you control the servers, you would allow inbound connections to the database and secure that point using a firewall and likely a vpn for an internal server. You would also strictly authenticate connections including restricting senders to known ip ranges. A common strategy is to route traffic through the vpn and only permit connections from it unless a device is physically in an office and authenticated on a trusted network.",Far_Swordfish5729,2025-07-31 12:12:35,1,learnprogramming,t3_1mdwo7w,False,
n67zcnc,"Often the solution is to layer internal networks. You have a public-facing load balancer. It takes incoming requests and passes them to your ""public-facing"" API server (which has no public IP address and can only get traffic from the load balancer). That API server is then allowed to open connections to the private IP of the database server (possibly via some complicated networking or handshaking thing verifying that only the right process/user/machine can reach it). But that's if ""public IP"" means ""internet"" and not ""any other PC."" If you need it so that the database server can't be reached by anybody, then you're in trouble. ""Immediately"" means you want a direct connection between the API server and the database, but ""only outbound connections"" means you need the database to initiate the connection to the API server, and that's a configuration mess. If you have lots of API servers, your database would need to connect to all of them and manage reconnecting to any that die. You could certainly build a solution for that, but why?",captainAwesomePants,2025-07-31 19:33:08,1,learnprogramming,t3_1mdwo7w,False,
n64zl6e,"The most elegant solution for the constraint where the database doesn't have a fixed IP and isn't in the same network is a reverse proxy. Don't need anything fancy, just a one liner ssh command to forward say port 5432 from the DB server to the API server. Would runssh -R [remote-port]:[local-host]:[local-port] [user]@[remote-host] from the DB server.",MuscleZestyclose4893,2025-07-31 10:06:00,1,learnprogramming,t1_n64vp83,False,
n5xg7j7,"Well, after all, it boils down to two things: ""pay more attention"" and ""practice more"".Really, that's basically all there is to it.Don't start even thinking about programming before you **fully understand** the task. You cannot solve what you don't understand.Sit down with pencil and paper and solve the task manually, your way. Then, once you have a working solution, start implementing it.> for example when doing a problem i didnt know i was supposed to return indexes instead of valuesSorry, but that is something that only attributes to lack of attention.",aqua_regis,2025-07-30 05:20:22,8,learnprogramming,t3_1mcxqv3,False,
n5xemf2,"Just keep doing more and more problems, and continuing to struggle. Over time, you'll get better.Programming requires a deep attention to detail, as well as being able to communicate precisely what you mean. Both are valuable skills that you should build up through continuing to practice problems like these.Also, follow the ""reps"" mindset. Just like how you don't perform an exercise just once at the gym before moving on to another exercise, apply the same mindset here. Once you complete a Leetcode problem, start over from a completely blank slate, and do the same problem again, and again. Then do it a day later, then a week later.",abrahamguo,2025-07-30 05:06:59,2,learnprogramming,t3_1mcxqv3,False,
n5r7vl5,cfbr (Similar position),MeIsYguy,2025-07-29 07:47:36,3,learnprogramming,t3_1mc58jh,False,
n5r8nca,"If the idea keeps you up at night and makes you code like a caffeinated squirrel, go all in. But grab also some freelance/remote gigs. Gotta fund the madness while building your masterpiece.",Alex_NinjaDev,2025-07-29 07:54:57,2,learnprogramming,t3_1mc58jh,False,
n5rj513,I’m in this same situation but I’m using AI to help code and I’m combing through it when issues arise. Keep at both! Something has to give.,YaOldPalWilbur,2025-07-29 09:36:48,1,learnprogramming,t3_1mc58jh,False,
n5tl2nx,"I was in a very similar situation after college, I had tried another small startup where I was the founder, and right after graduation I had an idea for an app for my school. I spent countless hours on it thinking I would make money off of it.The reality is, being a student, you likely do not have the skillset you need to succeed in starting a company and it becoming something that pays you.My advice is use the project you're working on as a learning opportunity, but keep your expectations realistic on what it will become. Having a solution to a problem is very different than taking that solution and selling it to enough people to make a living. If you spend an extended period of time grinding on the project, my advice is that you should be doing it because you're motivated to learn, not because you want to make it your job.I've always learned while passionately building a project that would eventually get thrown away, and I've spent a lot of time convincing myself that these things would pan out, but that's not really how the world works unfortunately.TLDR: Look for a job, build as much as you can, maybe get hired, see what professional development is like.",jamestakesflight,2025-07-29 16:46:40,1,learnprogramming,t3_1mc58jh,False,
n5r9jbb,It does indeed! Honestly I've learned a lot while working on it. Working a freelance gig is I think a great idea. I've never done one. Can you tell me how I can get started?,Klutzy_Point_7831,2025-07-29 08:03:24,1,learnprogramming,t1_n5r8nca,True,
n5k7cd7,"The best way to learn is to start building. It doesn’t have to be fast, as long as you understand everything that happens in the code, at least what you have written. Trying to understand every concept can be overwhelming, and shouldn’t necessarily be needed.So don’t worry, you’re on a good path.",ScaredStorm,2025-07-28 05:35:56,1,learnprogramming,t3_1mb7nrx,False,
n5lqbf1,"I think that no matter how the code is produced, we still need to be able to read the code and understand it (to accept it, or to reject it). You cannot blindly trust that LLMs generated code is correct, especially if you are planning to deploy your app. Code may contain vulnerabilities (e.g. vulnerable for SQL injection, cross-site scripting, cross-site request forgery, etc), all kinds of bugs and missing features. Who know, maybe even real API keys that found their way into the codebase somehow.That means, that we should still know fundamentals. Not sure what you meant by low-level stuff, but learning definitely will not hurt. Just make sure to apply your knowledge in practice and build something. That will improve your understanding of the material and help it stick in your memory for longer. Don't be afraid to reinvent the wheel for the sake of deeper understanding. At the same time, try to build something new, useful and challenging to really stress test your skills and ""level up"".The difficult thing is to focus on cultivating the right kind of skills and fundamentals. There is just so much to learn and to know. I don't know the answer either, besides the obvious: learn 1-2 programming languages well enough, learn data structures, pick a framework, know network protocols (at least HTTP), maybe OAuth, maybe cybersecurity fundamentals could be useful. Yeah, take this with a grain of salt. I actually started reading ""Structured computer organization"" by Tanenbaum. That maybe useful for low-level and system programming, i guess?That said, I would suggest to give these AI tools a try every once in awhile if you haven't done so yet. Just to see what they are capable of.I shared your hesitation at first. Then, I tried it recently and found it quite useful for generating boilerplate code and writing tests. No agentic stuff, just multi-line autocomplete mode. That way, you still are in control and can immediately review the suggested code snippet, but it saves you a lot a hand-typing.As for the AI, I am not gonna be a judge of whether the hype is justified or not. But, people do use these LLM-powered assistants in professional setting, at least to a degree. It's worth to at least keep tabs on from time to time.",two_times_three,2025-07-28 13:14:23,1,learnprogramming,t3_1mb7nrx,False,
n5jeccv,How about a simple blog?,abrahamguo,2025-07-28 02:03:20,9,learnprogramming,t3_1mb3zug,False,
n5jf5vw,It's best to make something that resonates with you and what you want. I will suggest something like a dictionary or some kind of language learning website that looks up a database. You will need to create your own api and have the frontend display the relevant information.,1000baby,2025-07-28 02:08:31,3,learnprogramming,t3_1mb3zug,False,
n5l1567,"build something you'd actually use, maybe a habit tracker, a budget app, or a small blog platform. you'll learn more when the project feels useful.",prazeros,2025-07-28 10:17:38,2,learnprogramming,t3_1mb3zug,False,
n5je7qs,anime goodies website :victory_hand_medium-dark_skin_tone:,Shino_s_Tokyo,2025-07-28 02:02:30,1,learnprogramming,t3_1mb3zug,False,
n5ji7pz,Health website,samjones2025,2025-07-28 02:27:57,1,learnprogramming,t3_1mb3zug,False,
n5jhw3c,Porn,pluhplus,2025-07-28 02:25:50,1,learnprogramming,t3_1mb3zug,False,
n5jxsb2,"I recommend making something silly. The sillier it is, the less pressure you will feel to make it perfect, and the more you can allow yourself to experiment. Go wild.For example, have a look at [the Condiment Packet Gallery.](https://www.condimentpacket.com/)",teraflop,2025-07-28 04:17:08,1,learnprogramming,t3_1mb3zug,False,
n5jeu30,Ok I will consider it,TheEyebal,2025-07-28 02:06:25,2,learnprogramming,t1_n5je7qs,True,
n5jzfxf,Oh thats smart,TheEyebal,2025-07-28 04:30:03,1,learnprogramming,t1_n5jxsb2,True,
n6k4q5f,"Well let me ask you a question: did you ever have to troubleshoot the java code because an integration test was not working as it should be? Did you ever find a bug?If no, or sporadically and easily remedied, then probably you don't need it. You are not writing customer facing code, so if things go wrong once in a while it's ok imo. Try to measure how much time you lose by troubleshooting, and estimate how much time you would spend on writing the unit tests.",Rhyze,2025-08-02 17:34:46,1,learnprogramming,t3_1mfvxqk,False,
n6k76nm,"Yes, sometimes we do have to debug the Java code because an integration test isn’t working as intended and end up finding some bugs as the Java code is badly written code in my honest opinion.Your point is valid, original intention was going to be to use AI to write some basic unit tests to have some proof checking. We have time to innovate so am thinking have a setup at least to future proof. But your point about the opportunity cost is valid.",wildguy57,2025-08-02 17:47:29,1,learnprogramming,t1_n6k4q5f,True,
n6i7qph,"You can do this in WordPress itself. The usual way to do it is by creating a simple plugin. https://developer.wordpress.org/plugins/ You could do it in functions.php, but that would be a super inconvenient and flakey way to develop this kind of code. Plugins are little chunks of code that go into .../wp-content/plugins/. Developing a private-use plugin is much less work than developing something up to the standards for insertion into the public https://wordpress.org/plugins/ repository.You could even do this in just one php file. There's a starting point template for that in the ""Hello Dolly"" plugin here. https://github.com/WordPress/wordpress-develop/blob/6.8.2/src/wp-content/plugins/hello.phpWordPress has a REST API subsystem that's set up so a plugin can extend it by adding one or endpoints to do what you need an API to do. https://developer.wordpress.org/plugins/rest-api/You can use short-lived access tokens (WordPress calls them ""nonces"") to authenticate access to your REST API. https://developer.wordpress.org/apis/security/nonces/ Your plugin will generate them as part of generating your web pages containing code that uses the REST API, and your REST API code will check them for validity. That way you don't have to put your long-lived API keys into your Javascript code in your users' browsers.",Aggressive_Ad_5454,2025-08-02 10:35:56,4,learnprogramming,t3_1mfls29,False,
n6i1jog,"Been a while since I ditched Wordpress, but like you said the current method you have is a security risk. If you want something more secure you can go the severless route by using Vercel functions or cloudflare workers.Basic flow:Write a simple Node.js function (like fetch + return JSON)Deploy it to one of these platformsFrom your WordPress site, just fetch('/api/my-tool') instead of the real APIIt’s basically a mini backend in the cloud without all the hassle of hosting PHP or Node yourself. Once you set one up, adding more tools becomes much easier and secure.",itz_charlie01,2025-08-02 09:35:49,1,learnprogramming,t3_1mfls29,False,
n6i7jil,"I suggest you look for something Wordpress specific, to keep your stack making sense and reduce the chance of shooting yourself in the foot and making a mess.There are infinite other solutions. But it would require you to learn, especially when it comes to security and deployment, and potentially a new language/framework. And if you wanna learn these things, that's amazing, but I suggest you do it outside of this project and on its own first and properly.",maqisha,2025-08-02 10:34:03,1,learnprogramming,t3_1mfls29,False,
n6jvm8q,"Whoa, I appreciate all of your really thorough and helpful responses! Thank you so much for your time.maqisha, itz\_charlie01, and Aggressive\_Ad\_5454 - You've provided me with two distinct options to think about:Making a basic plugin/REST API endpoint is the WordPress-native method.the serverless approach (with Cloudflare Workers, for example).I was looking for just this kind of advice. The website is ezytoolz.com to give you all a better idea of how easy my current tools are to use. You might be able to determine which of these two options would work best if you see them.Which path, in your opinion, has a more manageable learning curve for beginners?Once again, thank you!",Ok_Schedule_8895,2025-08-02 16:46:55,1,learnprogramming,t3_1mfls29,True,
n6emq9w,Svelte society might be helpful for reference material + tutorials - https://www.sveltesociety.dev/recipes,zchtsk,2025-08-01 19:39:52,1,learnprogramming,t3_1mf5fjz,False,
n6fejxm,"Official docs (for any framework) is usually a good starting spot.Reading lots of code is also useful. As an experienced programmer I read 20x more code than I write. GitHub is a good source, it has tons of filters.",Rain-And-Coffee,2025-08-01 22:01:35,1,learnprogramming,t3_1mf5fjz,False,
n6f1qvs,"Nice, they even have a podcast. Didn't know this existed.",First_Sky_9889,2025-08-01 20:54:31,1,learnprogramming,t1_n6emq9w,True,
n6h0ohg,The official text docs seem like they are for more experienced developers.Separately I just discoved official tutorials at learn.svelte.dev. Exactly what i needed.,First_Sky_9889,2025-08-02 03:59:31,1,learnprogramming,t1_n6fejxm,True,
n6dzps7,"Man,we have the exact same problem, only difference is I'm entering my 4th year,done some ctfs and learning low level systems rn.Cant really give any advice as I'm in the same situation :grinning_face_with_sweat: but if need someone to talk to you can dm",reverse_engineer136,2025-08-01 17:47:30,1,learnprogramming,t3_1mf2v8c,False,
n5wg6m5,"I graduated back in 2013 with degree in math (Algerbraic geometry) and had to start Software Engineering career because of financial issues.And what’s surprised me was that the interview at my first Junior (not an internship) PHP Dev position with literally 0 (zero) experience was just like “Hmmm, you look like you’re a good guy, you’re hired”.IDK how we ended up with all that ridiculous bs with multiple LC hard round and design twitter from scratch in 1 hour just to get a shitty internship.",Glum_Worldliness4904,2025-07-30 01:19:31,678,cscareerquestions,t3_1mcop22,False,
n5vfpox,Posts like these let me breathe a little easier. I feel like we all get tunnel vision sometimes. It’s good to know that there are other paths available.,Al_Pallll,2025-07-29 21:58:49,1402,cscareerquestions,t3_1mcop22,False,
n5wqbto,"I’m in my early 50s, and I’ve been in the software industry since 1995. I assure you it has never been as bad as it is right now. If I had literally any other marketable skills I would ditch it in a heartbeat, but it’s kind of late to switch careers now. I’m still clinging to the most senior individual contributor role because that’s what I love but I don’t know how much longer it can last.I got into this field because I was a nerd and I liked computers at a time when liking computers was a real loser trait. Honest to god, I miss that.",nodesearch,2025-07-30 02:18:46,170,cscareerquestions,t3_1mcop22,False,
n5vg15t,I quit selling Jet Skis and Boats for 100% commission for CS and I’m 500% happier,Bonzie_57,2025-07-29 22:00:28,826,cscareerquestions,t3_1mcop22,False,
n5w9s1n,"This is the plot twist most bootcamp blogs don’t talk about - sometimes the grind isn’t worth it, and peace of mind pays better than any tech salary. Respect for choosing joy over prestige.",alpinebuzz,2025-07-30 00:42:52,24,cscareerquestions,t3_1mcop22,False,
n5wjgpi,"Thanks for sharing this post. Tech as a whole has become toxic. Knowledge workers have become indentured servants and the competitive nature of the space has pushed people to form dysfunctional relationships with those they’d otherwise be good friends with. People with advanced degrees and certs performing for interviews, taking interview tests like they’re back in high school. It’s unfortunate, but the market has figured out it can get away with it. I wish you the best. There is life after tech. Besides, coding for yourself is far more rewarding.",Tekhed18,2025-07-30 01:38:53,49,cscareerquestions,t3_1mcop22,False,
n5viskj,There is no way in hell I would leave the salary and benefits of this career to be on commission selling boats and jet-ski's lol.,olduvai_man,2025-07-29 22:14:46,438,cscareerquestions,t3_1mcop22,False,
n5xfzlr,"The whole industry has been feeding on its own grift for a while now.Ever tried explaining SCRUM to someone who doesn't work in tech? They'll look at you like you take the short bus to the office.The average software engineer now applies to over 400 job postings for every interview. And many of those interviews are what, 6 rounds? No other industry comes close to that. And it's not an imbalance of supply and demand. It's a hiring practices problem.Don't even get me start on leetcode. Yes, I know it's supposed to weed out the fakers so the company doesn't end up with a bunch of devs who can't code their way out of a paper bag. And yet those same companies still end up developing massive piles of overcomplicated crapware. Almost like the devs aren't the bottleneck. Also, senior devs can spot the fakers a mile away.And now with the vibe coding. I'm seriously considering starting a new service that just fixes the messes people make with their vibe coded apps. I bet I'd make bank by advertising it with a bunch of LinkedIn posts saying how the service will ""take their vibe code to the next level"". Cannot wait for that bubble to burst.Thing is, it wasn't like this even 10 years ago. These are all problems the tech industry has created for itself.Now for the fun part. To people outside the industry, your skills are like magic. And it's not even the complicated CS stuff.Do you have any idea how many small businesses out there are paying marketing agencies to do SEO for them, yet they don't even have access to their own traffic data? And the agencies make up excuses because really they're just Wordpress shops that can't get their tracking pixels hooked up to Salesforce correctly so the data is useless and they can't say that part out loud.The reason so many people are talking about AI (aside from the grifters and enterprise salespeople) is because they want to be able to do the things you can do. They want their tech to work the way they think it should, yet every time they talk to a dev shop about it they end up talking about nonsense like user stories and sprint timelines.It took me way too many years to figure this out. The kicker was when I was working as consultant and somehow ended up on a small side project that was basically setting up a SquareSpace site for a local business. Our sales guy managed to bill it out at $150/hour. For a SquareSpace site. My techie brain thought this was a drastic overcharge because I thought the whole point of SquareSpace was that you didn't have to hire someone to do it for you. But for that local business that sold old muscle car parts, SquareSpace was over their head and it was worth $150/hour to have me do it for them.Eventually I got fed up building the umpteenth enterprise iOS app so I quit working with companies that do anything enterprise-y at all. It's too soul sucking.And you know what? Turns out it's not so hard to sell my skills to non-tech companies. What I think is easy is what they think is magic. That's a win-win.They don't buy unit tests (not that I want to write them), but they're game for anything that helps their sales funnel.My advice for anyone burning out in the tech industry is this. You probably see your skills and dedication to quality as an investment for a company. They probably see you as a cost center. So next time you get stressed by the nonsense, start thinking about how to apply what you know in ways that would help non-tech companies. Think outside the box. Then do the hard part and reach out to a few of them. You might be surprised at what you learn and end up with a whole new perspective on how all this really works.If nothing else, the experience will certainly help you write better Upwork proposals.",Comfortable-Tart7734,2025-07-30 05:18:29,33,cscareerquestions,t3_1mcop22,False,
n63roqv,"Lot of tech bros hating. Im a principal engineer have 10+ years experience in software engineering and i cant tell you how much ive grown to hate it. The work, the culture and cultist attitudes towards tech companies, languages, tools, brands. And all for what. It’s fucking lame. I hate it.Im happy that you got out.",NoobInvestor86,2025-07-31 03:44:01,12,cscareerquestions,t3_1mcop22,False,
n5w2l9a,I’m happy you’re happy! I’m sorry so may of these comments are so rude.,RuinAdventurous1931,2025-07-30 00:01:29,11,cscareerquestions,t3_1mcop22,False,
n60j11m,"“ it’s hard to believe this is the same company from 2016”It’s not.  People leave, new people come in, and the drive to keep stockholders happy means companies will do whatever it takes to maximize profit.",Horror_Response_1991,2025-07-30 17:29:25,1163,cscareerquestions,t3_1mdcl9n,False,
n60lrwa,"The era of “let’s nerd out and build cool stuff together and have fun doing it” is over. It’s been over for 10 years now. Everything today is built solely to appease Wall Street. Seriously, read that again if you need to. There are no ethics. There are no morals. There is only money. Companies don’t care about long term consequences and their employee’s mental health is in such decline that they can’t muster up enough fucks to give either knowing that there are swarms of people who are begging for work ready to replace them.",MilkChugg,2025-07-30 17:41:38,798,cscareerquestions,t3_1mdcl9n,False,
n60jbly,"For years, tech has been all about moving fast without the consequences. Zuckerberg even wrote, “move fast and break things.” Companies like Uber and Airbnb were built on moving fast before regulation could catch up. Ideally, the government would regulate things quickly, but our leaders are a bunch of ancient politicians who don’t even understand what is happening.Ultimately, this is all about chasing profit and power. If you get in the way, they will find someone else to do the same work. Worse, if they can’t find that person here, they will outsource the work or bring in a foreign worker to replace you.",bjdj94,2025-07-30 17:30:43,259,cscareerquestions,t3_1mdcl9n,False,
n60isv9,"There are a lot of cs majors and engineers who think ethics and liberal arts classes are a waste of time. So what we get is an industry full of severely one-dimensional people who think they are smarter the rest. But in reality, they dont have the social skills or understanding to understand why what they're doing is bad.Edit: spelling/grammar",Extra-Place-8386,2025-07-30 17:28:25,675,cscareerquestions,t3_1mdcl9n,False,
n60ni04,"Honestly I'm just coasting at this point. Idk what to do. I wonder if it's even worth my time to upskill. I'm a recent graduate and lucky enough to have landed internships and full-time positions but I have no idea what the future holds, not even a best guess. I'm just burying myself in my job but already know one day layoffs could and probably will happen. I just don't know what is worth doing in my spare time in order to ensure I'm able to make money in the future if jobs do actually get cut by a huge % (already have a good amount).",baja_freez,2025-07-30 17:49:20,28,cscareerquestions,t3_1mdcl9n,False,
n60i7vt,"It's because of the money. Let's be real. Most of this sub would take an AI engineer position at Google in a heartbeat, if offered.",Illustrious-Pound266,2025-07-30 17:25:49,247,cscareerquestions,t3_1mdcl9n,False,
n60mqp7,"Normally, history follows.New tech -> brings record change to society -> record profits/power grab -> something terrible occurs over decent time span -> regulation/guardrails slowly implemented.",MangoDouble3259,2025-07-30 17:45:56,21,cscareerquestions,t3_1mdcl9n,False,
n60jq7j,There's no time to discuss ethics when deadlines are approaching,SoggyGrayDuck,2025-07-30 17:32:32,65,cscareerquestions,t3_1mdcl9n,False,
n60l2ht,"Fight the good fight, don't get jaded friend.",WitsBlitz,2025-07-30 17:38:31,38,cscareerquestions,t3_1mdcl9n,False,
n66k0zn,"Companies filter out applicants with ATS. My CV got filtered out from roles I was qualified for based on some unknown criteria within seconds after applying.You can’t blame candidates for using similar AI tools for mass applications. I mean getting a rejection email within seconds after spending 30 min on a customised CV and cover letter, without any human ever looking at it is kind of boring too and very inefficient usage of the candidate’s time.Companies started the game, they should not complain about the AI escalation.",LogicRaven_,2025-07-31 15:33:45,652,cscareerquestions,t3_1me3qnu,False,
n66pi9k,"The ""Apply to everything, even if you're not qualified"" thing only began because job requirements had an average of 3-7 bullets of different technologies that you needed 5-10 years of experience for. Entry level jobs required 3+ years of experience in various technologies in multiple layers of a stack.Of course, those requirements were impossible to meet at scale so companies regularly hired people who did not actually meet them. This led to job-seekers understanding that ""requirements"" were a wish list and only generally pointed out what you should be familiar with.",NullReference000,2025-07-31 15:59:05,145,cscareerquestions,t3_1me3qnu,False,
n66cxw0,"Were you ever involved in the hiring process pre-2021?Cause I was, and what you're describing happened back then too. We'd have to sift through hundreds, or thousands, of resumes the overwhelming majority of which were grossly unqualified.This isn't new.The one thing that is new that's making things extra bad is the introduction of AI-applying. Now a lot of the desperate people that're blast-applying don't even have to spend their own precious time doing so. They click a button, and an AI applies to thousands of jobs for them.",SouredRamen,2025-07-31 15:00:37,594,cscareerquestions,t3_1me3qnu,False,
n66zg9w,"Yeah at the same time companies categorizing their jobs as “Entry Level” and asking for multiple years of experience is doing as much damage, if not more, than what you’re describing",BunnyTiger23,2025-07-31 16:46:13,37,cscareerquestions,t3_1me3qnu,False,
n66fykw,Lying on your resume to pass the screening is what hurt the market.Can't even blame them since companies are also lying about what they need,Due_Essay447,2025-07-31 15:14:48,183,cscareerquestions,t3_1me3qnu,False,
n66d6su,"Hiring managers with no technical understanding did a number on the job market, they really said **SDE I**Requirements: * Masters degree (doctorate preferred) * 7-10 years experience with technology that was released 2 years ago* 5-10 years of work experience* Proficient in Java/JavaScript* Ability to program a non-relational database in SQL* A rockstar who never goes homeSalary range* lol no * $80k-$85k",joshuahtree,2025-07-31 15:01:47,251,cscareerquestions,t3_1me3qnu,False,
n66n9po,"I’d respect this complaint if any of the job postings made a lick of goddamn sense with their requirements (COBOL for entry level 60k, really?), or if this wasn’t exactly what companies did to themselves with the “We won’t bother training, just keep poaching) rush when I was in school",D1xieDie,2025-07-31 15:48:49,22,cscareerquestions,t3_1me3qnu,False,
n66he75,"For at least a decade now, possibly longer, the only way to find a job has been to just fucking carpet bomb the entire job marked with your resume. It isn't great but that's how it is.",GargantuanCake,2025-07-31 15:21:26,41,cscareerquestions,t3_1me3qnu,False,
n66suvt,"When the employers adopted the strategy of ghosting the applicants midway and/or sending them no response for their application at all, at that time the burden of filtering the applicants shifted to them.It used to be a moral thing to self-evaluate before applying, but now it is a waste of time and effort to carefully craft the resume for each position, hand write a cover letter to just receive nothing at all in response. Employers did that to themselves",arstrel,2025-07-31 16:14:57,18,cscareerquestions,t3_1me3qnu,False,
n66kzra,"Look I completely get it, that if you're NOT qualified then don't apply. As another poster said if you have from 0-50% don't apply, I get that. I get that there are a lot of unqualified people applying, and even non-U.S. Citizens applying for jobs they shouldn't, but that is only PART of a much LARGER problem.I'm a very senior, experienced SWE with 35+ YoE. I am looking for new work, and I clearly have a realistic resume with the development tools I've used and where I've used them. I very carefully watch for Java, Spring Boot, Docker, Kubernetes, I have ONLY AWS (not Azure or GCP), I have HTML, CSS, and Javascript, and I am learning React now.When I look at a posting, and they want full-stack, I still apply. I know for a fact I have applied for jobs where I can hit 10 out of 10, or 90 out of of 100. Am I STILL unqualified? Of course, I'll never find out why I was rejected, but I know most of the jobs I've applied to I can hit the ground running, and knock it out of the park. So, I call BULLSHIT on this over-simplification of 'applying for everything is ruining the job market.' If you've ever seen ANY of these job boards including /recruitinghell, then you know there is a lot of shit going on from hiring managers and recruiters. They get NAMED and SHAMED all the time. I'm really getting tired of the rejections. With my many years of experience, it has never taken me longer than a few weeks to find new work, and I've been looking now for 10 months. The last time it was this bad was 2008, but this takes the cake.",Huge_Road_9223,2025-07-31 15:38:16,51,cscareerquestions,t3_1me3qnu,False,
n5sglx4,The question is going to be like one of those open book finals from college,res0jyyt1,2025-07-29 13:32:24,736,cscareerquestions,t3_1mcb3hg,False,
n5se2w6,"If true, I don't necessarily see this as a bad thing. You can identify if a candidate can finish the task as they would on the job. You can identify if they're ignorant to security practices and feed the LLM sensitive information. And you can identify if they are overly dependent on even the simpler parts of the coding exercises.",-Dargs,2025-07-29 13:18:33,853,cscareerquestions,t3_1mcb3hg,False,
n5t6a2m,From 2 Leetcode mediums in under 45 mins to “just use AI and we will observe.”Tech interviewing is horribly broken.,src_main_java_wtf,2025-07-29 15:37:52,74,cscareerquestions,t3_1mcb3hg,False,
n5sewdb,From grinding leetcode to using AI? Is the interview finally going to change from rote memorization? Doubtful but this is the most interesting change up in interview style from a FAANG that I’ve seen.,SlyCooper007,2025-07-29 13:23:05,386,cscareerquestions,t3_1mcb3hg,False,
n5shipe,"I guess this is an unpopular opinion here but I think coding interviews are supposed to be like aptitude tests. Obviously they’re nothing like actual work, and can be memorized, but it’s a way of testing whether candidates have problem-solving abilities, intuition, and simple, clean code practices. Yes, it’s imperfect, but letting AI autocomplete it will only make it even more imperfect.",ALostMarauder,2025-07-29 13:37:23,128,cscareerquestions,t3_1mcb3hg,False,
n5ser96,"Good. I know anti-AI sentiment is high here but these are tools that we should be using to help us. It's insane that we still interview people as if they're in an isolated bubble 24/7 with no tooling available. This encourages people to memorize problems just to pass interviews, and not show us how they actually work day to day.",maria_la_guerta,2025-07-29 13:22:19,209,cscareerquestions,t3_1mcb3hg,False,
n5sp3gg,Why do I have a feeling technical interviews will become harder?,MoneySounds,2025-07-29 14:15:56,15,cscareerquestions,t3_1mcb3hg,False,
n5syhrm,Using interviewees for training and refining their own model... Well played.,codeblockzz,2025-07-29 15:01:08,14,cscareerquestions,t3_1mcb3hg,False,
n5sn986,Some of you guys are in for a rude awakening. You’re gonna stop complaining about memorizing leetcode solutions and start complaining about memorizing AI prompt patterns.,L_sigh_kangeroo,2025-07-29 14:06:51,52,cscareerquestions,t3_1mcb3hg,False,
n5sgjok,"That articles behind a paywall so I'm just going off your title...How *much* are they going to let candidates use AI during coding tests?Are they going to let them utilize it as a tool, no different than Stack Overflow? To quickly lookup syntax, or simple things that nobody memorizes?Or are they going to let them prompt engineer the entire answer to the problem?Because if it's the former, that already happens today.... except it's not AI. It's asking your interviewer. In my experience, interviewers don't care if you have some dumb syntax memorized, they don't care if you stumble on how to do X in Y language. Those things don't matter on the job, and they don't matter in the interview. It's the problem solving they care about. Usually interviewers make it clear you can ask them syntax questions like that, or other nudges AI-as-a-tool would normally help you with. I've also been in interviews where they're totally fine with you googling, you just have to let them know you're doing that before you do it.If it's the latter though, good fucking luck. I don't know about you, but I always dreaded open-book tests/exams in college. Because they were always made difficult enough to *warrant* them being open book. They were *harder* then closed book exams. If you're vibe coding and prompt engineering your way through an interview, you can expect that interview to be written with the expectation that you're vibing through it at lightning speed, and it'd be unachievable if you didn't.",SouredRamen,2025-07-29 13:32:03,31,cscareerquestions,t3_1mcb3hg,False,
n6jkk7y,"These have been the hiring norms for decades.At the end of the day, no matter what questions you're asking...whether it's leetcode, system design, java trivia, something behavioural, etc.. the underlying question is ALWAYS ""do I want to work with this person for 8 hours a day?""It's also why people pass onsite interviews all the time despite getting questions wrong, or why people fail onsite interviews all the time despite getting answers right.It's the reason people get promoted, and the reason people don't get promoted.The single biggest thing you can do for your career is sharpen up your communication skills and be a likable, social person. You have to put yourself out there, offer to do demos and presentations, go to company events, etc. As an introvert, it kind of sucks that's how it is but you'll advance your career way faster this way.",Easy_Aioli9376,2025-08-02 15:48:00,541,cscareerquestions,t3_1mfteom,False,
n6jpce4,"This is a lovely sentiment and there are some good tips in here. But this also assumes that the candidate is able to consistently get through to have an actual interview with an actual person.In reality, few companies will even respond to your applications. I actually get a little thrill when I get a rejection email (I’d ballpark it at about 10% of my applications actually receiving a rejection). You have layers of AI filtering before you can even get to a human. And I can assure you that the AI filters do not care about the super exciting hike I went on last weekend even if it could create that moment of good vibes with a human that you are emphasizing.The hiring system IS adversarial. It’s turned into a sheer numbers game, a game of maximizing your odds of getting through the AI filters and still coming out vaguely believable on the other side. If I actually got a chance to speak with people regularly, I’d have a much different approach to how I apply, believe me. But I simply can’t afford to spend an hour retranslating my life experience into a bespoke application for every job listing when I know there is a very low chance anyone is even going to look at it and a lower chance I’ll beat out the other 300 people who applied for it within the first 5 minutes of it being listed.And while my heart goes out to all the gainfully employed hiring managers who find pressing a button to blanket filter out candidates a bit distasteful, I can assure you it feels infinitely worse on the other side where there are *actual* stakes (like can I feed my family next month).Again, I’m not trying to trash you or anything. I really do appreciate the tips and plan to make use of them as much as possible. But if you want people to act genuine in the hiring process, then the hiring process has to treat everyone like genuine people. And right now, I am VERY rarely treated like a genuine person.",Pathkinder,2025-08-02 16:13:30,161,cscareerquestions,t3_1mfteom,False,
n6jw4t5,"Fun anecdote: I interviewed for a job once and one of the sessions was with the CTO. Physics Ph.D., smart guy, kind of abrasive (as I would later discover).He looks at my resume and notices a course I took in college (15 years earlier) on cryptography. Asks me if I understand how public key cryptography works. I say sure, at a high level. He asks me to elaborate. I say something about factoring large multiples of two primes, trapdoor functions. Maybe I mumbled something about the Chinese remainder theorem and Fermat’s little theorem.This is for a genetic backend SWE position, mind you. Not one that would necessitate detailed knowledge of the math that supports public key.So then he asks me if I can lay out those two theorems for him and describe how they make public key possible. I say, “maybe, if you give me half an hour and a textbook”.That satisfied him. Apparently the whole thing was a psychological test designed to drill down on something the candidate says they know until they reach the end of their knowledge. You succeed by saying “I don’t know”. You fail by trying to bullshit an answer. Apparently one candidate was so pissed at being asked such detailed questions about topics unrelated to the role that he stormed out of the interview.",Ok_Experience_5151,2025-08-02 16:49:42,137,cscareerquestions,t3_1mfteom,False,
n6jnnc0,"the norms haven’t changed and the mistakes aren’t recent minus the ai assistant one, but wanting to cheat has always been a thingi disagree partly with your take on resumemaxxing: job postings get hundreds of automated applicants, hiring managers/recruiters use ATS to save time and do an initial filtering, therefore an ATS-friendly resume IS needed. i agree that it shouldn’t be ai slop and full of bullshit statistics because it technically should be read by a human at some point after the initial filtering though",Wall_Hammer,2025-08-02 16:04:25,81,cscareerquestions,t3_1mfteom,False,
n6krufm,"You all punish honesty so hard that of course you're going to mostly be dealing with bullshitters.The honest people probably don't even make it to the interview stage most of the time.What if you just put realistic requirements into the job posting? Maybe you'd get way, way less bullshit during your job interviews? Naturally, this requires that companies are willing to train people, which we know they mostly aren't.",The_Redoubtable_Dane,2025-08-02 19:41:10,50,cscareerquestions,t3_1mfteom,False,
n6kq48y,"Thanks for the feedback, but how are applicants supposed to apply for thousands of jobs and to be authentically excited for each and every job they apply to? It is very painful to be rejected repeatedly over and over and over again",Sauerkrauttme,2025-08-02 19:31:24,15,cscareerquestions,t3_1mfteom,False,
n6jpb6p,"Quick question since this wasn't super explicitly in the continued section: what do you think people should do instead of the numbers-maxxing ""concrete KPI metrics"" advice people often give?Especially if someone has a couple years experience but is still early career (like 1-2 years experience), should people be bringing hard numbers to back up their experience? I ask cause Ive been told by other SWEs to add more hard numbers which I can do, but it does feel hard knowing how to do it without feeling a little fake (capturing these metrics in production is not always clear). I don't really use AI for talking to people or in the interviewing process proper but it does feel like the job market is changing very quickly so it's hard to know what advice is still valid, especially as other people in the thread pointed out the best advice may be context dependent for where you're applying. Good post, I think it's really helpful getting a detailed perspective that fleshed out how people at startups may think differently about this problem!",Tecoloteller,2025-08-02 16:13:19,14,cscareerquestions,t3_1mfteom,False,
n6mf7xd,"There was a guy who was busted a few weeks ago named Soham Parekh for working at Google, Microsoft and like 6 different startups all at the same time. His resume was famously bullshit, filled with a fake graduation from the University of Georgia and founding engineer roles at startups that didn't exist. I want you to think long and hard about the fact that this man, by lying about every single facet of his life, was not only able to have his resume seen, but waved past several rounds of hiring managers at all the biggest corps in silicon valley. You need to accept the fact that you've built a system that optimizes for exactly this type of candidate. Every problem that every hiring manager posts about on here has such obvious solutions that aren't being implemented. Every manager who posts on here about receiving too many applicants all seem to not want to just auto reject applications that are from outside the country. They all seem to not want to hire from whatever colleges or universities are near them. They all seem to want to have as much of the hiring process handled over zoom or by automation as possible. If you are a small bank in Omaha Nebraska that needs some entry level engineers and you list the job globally on indeed and zip recruiter rather than listing it on your company website and having your recruiter reach out to the local college for recent graduates then you deserve every single bullshitter and scammer who gums up your hiring process.",LustyLamprey,2025-08-03 01:27:52,13,cscareerquestions,t3_1mfteom,False,
n6jwl0z,"""...jump directly into coding...""I'm pretty sure that the amount of time I take to think about most Leetcode problems is less than the amount of time it would take someone to type a query into an LLM and parse the results. So be careful about jumping to conclusions about whether someone is using AI if your only evidence is that they start and finish quickly. I've been doing that in interviews since before AI was a thing.Also, thinking about a problem is an easy thing to fake if you are using AI.",TimMensch,2025-08-02 16:52:10,20,cscareerquestions,t3_1mfteom,False,
n6k1hzw,"The entire post reads like a plea for candidates to make *your* job more comfortable when *their* survival is on the line.You say the most important question is “Can I trust this person?” But here’s the brutal truth: that trust only flows one way.Candidates are expected to be radically honest, vulnerable, and “real” while companies ghost, mislead, or drop them after six rounds with zero feedback.You want to optimize for a slightly better team vibe. Candidates are trying to feed themselves and pay rent. Those aren’t equal stakes and it’s insulting to pretend they are.",Bubbly-Concept1143,2025-08-02 17:18:21,59,cscareerquestions,t3_1mfteom,False,
n6ddjpl,"My day in a life is just stress, anxiety, and depression lol. Leadership asking for 120% output while targeting 10% layoffs. Every solution is to use Gen AI to reduce developer load.",ChadFullStack,2025-08-01 16:02:06,549,cscareerquestions,t3_1mf02cq,False,
n6dgf9r,"I work at Meta and there is no-one just sitting around chilling. Everyone is being pulled in 8 directions, and each direction leads to a super complex issue. Meanwhile you're pressed to perform so its a super stressful environment",zergling-,2025-08-01 16:16:00,218,cscareerquestions,t3_1mf02cq,False,
n6ddy2h,I watched a day in the life of an amazon junior recently and he gave a great vision into the life of someone who isn’t fucking around all day. he explained how hard it was being on call and would accurately explain his frustration while solving issues. I found it to be very enjoyable to watch.,xRhyfel,2025-08-01 16:04:02,674,cscareerquestions,t3_1mf02cq,False,
n6dca3l,It only takes 1 person to be hired for a DITL video to crop up. That is hardly an indicator.,Due_Essay447,2025-08-01 15:56:02,213,cscareerquestions,t3_1mf02cq,False,
n6dr5fz,There's also a lot of I quit my 200k SWE job at Google,daboywonder2002,2025-08-01 17:07:38,52,cscareerquestions,t3_1mf02cq,False,
n6dbvb6,"How many more CS degrees do you think there are today vs 2020?What you’re seeing is the great divide. The absolute top juniors and the bulk of the experienced seniors are fairly insulated from the problems with the market, but a median CS grad from any of the last 2-3 years is lucky to have a job where they’re worked HARD for like $80k or less. Like lucky to get more than an evening or two a week where they’re off early enough to have dinner without stressing about getting back on their laptop.",sevseg_decoder,2025-08-01 15:54:08,83,cscareerquestions,t3_1mf02cq,False,
n6dqi5i,"You know Reddit is a bubble right? It's not the real world. I lived in Seattle and there were tons of jobs outside of the big companies. Almost all reddit subs have ""the sky is falling""  mentality.",playtrix,2025-08-01 17:04:31,70,cscareerquestions,t3_1mf02cq,False,
n6du10l,Wait till OP finds out most of that content is fake and just rage bait,PositiveUse,2025-08-01 17:21:03,22,cscareerquestions,t3_1mf02cq,False,
n6dk8dg,Your brain is completely melted if you watch DITL videos or think they bear any resemblance to a real day of work or think they have any impact on the labor market.,publicclassobject,2025-08-01 16:34:15,23,cscareerquestions,t3_1mf02cq,False,
n6dj3le,"1) the job market for the top 50% is definitely much better than what the dominant narrative tells you on this sub, which is mostly an echo chamber for those who unfortunately didn’t succeed in their job search;2) the “day in a life” video are very misleading and usually those people are using fang jobs to build their brand and pivot full time to content creation.",EntropyRX,2025-08-01 16:28:47,27,cscareerquestions,t3_1mf02cq,False,
n6ccf8z,"Apple barely hired (relative to other tech firms) during the pandemic. That said, Apple is efficient on when it hires software engineers.And there is no guarantees of the future. Plus, Apple has done small layoffs in QA, etc from what I have heard. Just like you said, no massive ones.If Apple starts struggling, then expect bigger layoffs in the future as well.Apple is also the firm in which one of its researchers claimed LLM is overrated, no? All the other tech firms are throwing the kitchen sink on ""LLM""s right now relative to Apple as well.",Fwellimort,2025-08-01 12:57:52,1195,cscareerquestions,t3_1mevq5y,False,
n6cszrq,"Apple is much more conservative in hiring. Plus Apple tries to avoid layoffs. Multiple studies have found companies that can avoid layoffs during bad times even if they take short term financial pain for it come out on the other side better. Mostly when when things start picking up they already have people who understand the internal part of the company, very fimular with what the company does and all the tribal knowledge. Things you one get with time at a place. No amount t of hiring fixes that.",timelessblur,2025-08-01 14:23:58,89,cscareerquestions,t3_1mevq5y,False,
n6chkj8,They’ve laid off a ton of their contractors. That’s where they did most of their hiring in 2020 to 2024.,nofishies,2025-08-01 13:26:00,206,cscareerquestions,t3_1mevq5y,False,
n6cevxl,Apple uses contractors from agencies. When they are terminated you are not laying anyone off so no announcement,mephi5to,2025-08-01 13:11:40,261,cscareerquestions,t3_1mevq5y,False,
n6ceu1o,Apple already makes money hand over fist. They have more control to push back when shareholders demand blood from a stone. They aren't yet sacrificing tomorrow for today. If you think Microsoft and Google are having layoffs because of need you are being lied to. They are doing it to maximize profits. No other reason.,drunkondata,2025-08-01 13:11:23,151,cscareerquestions,t3_1mevq5y,False,
n6cf7ik,"Apple didn’t overhire as much after 2020, and is far less locked in on the AI hype train. If anything they’re one of the more AI-skeptical tech companies out there.",Due_Satisfaction2167,2025-08-01 13:13:24,50,cscareerquestions,t3_1mevq5y,False,
n6cj6ma,"While the other arguments are all very fair, I do wonder whether Apple knows the impact layoffs have on morale. I genuinely think that layoffs that happen too often are not worth the cost savings.",TheSexyPirate,2025-08-01 13:34:32,18,cscareerquestions,t3_1mevq5y,False,
n6ey3v7,"I’ve interviewed with Apple before. This is anecdotal but most people who I’ve seen that work at Apple have been there for 4+ years (one of the interviewers said their engineering staff tenure is like 3 years on average or something, online says a little less than 2 years but that’s including the 60%+ that are retail workers). This is virtually unheard of at other FAANGs where the average tenure is HEAVILY right-skewed with the mean around a little over 12 months. Their interview process for most of their teams is intense (the ones I’ve done lasted around 7-10 rounds with rejections). They hire very little, and they subsequently fire very little. They also don’t seem to throw the kitchen sink at the newest and shiniest thing. From a financial perspective, Apple sits on one of the largest stockpiles of cash of all companies, they are sitting on about $50 billion in cash. This usually entails that the company is slow to exhaust resources. TLDR; they are conservative with their investments (into new projects and employees) and their hiring process is very selective.",ToastandSpaceJam,2025-08-01 20:36:29,17,cscareerquestions,t3_1mevq5y,False,
n6cqq1z,Because they are the only one without a student driver at the helm,thepepperdude,2025-08-01 14:12:57,53,cscareerquestions,t3_1mevq5y,False,
n6cxoxa,"There are lots of reasons. First, they didn’t overhire in the pandemic. They stuck to their plan. Second, they’re seeing AI a bit more clearly than everybody else. They’re learning what the limits are, and they’ve recognized that no, the AI tools aren’t the game changers everybody wants them to be. No, AI doesn’t make you more productive: your gains are illusory, as AI takes easy typing exercises and turns them into hard debugging exercises. Third, Apple has products that normal people actually pay money for, and on which they make decent profit margins. This is not so for Google (an advertising firm in a time when online ads are having an apocalypse), Microsoft (a software firm in an era where people are less interested in paying for software), and Facebook (a scandal-plagued panopticon that provides minimal benefit to the public). And Amazon is and always has been a layoff factory with the shittiest culture in IT outside gaming (and has issues with poor margins on their consumer business).",thephotoman,2025-08-01 14:46:39,12,cscareerquestions,t3_1mevq5y,False,
n68zgbb,No honor among thieves,mscsguy,2025-07-31 22:29:59,566,cscareerquestions,t3_1mefing,False,
n69038r,"CS has been and is going to be a feast or famine field. Very much like law. The top echelon is going to make a lot of money and the rest are going to be making anywhere from ""eh"" money to struggling to pay loans.",TaxGuy_021,2025-07-31 22:33:22,481,cscareerquestions,t3_1mefing,False,
n6958n6,"First time? \*Insert gallows meme gif\*It's been this way for decades. The same phenomenon was occurring in the 90s. The key point was that the dot com boom/bust helped obscure it from people's immediate view. Same thing happens in the late 00's; MBS crisis up front helps people ignore the same movement in the back. Covid in the early 20s; same offshoring/outsourcing in the back.Productivity will continue to soar to meet management demands as long as rents/bills need to be paid. There's always somebody younger/hungrier than you; time only moves forward, never back...",Harbinger311,2025-07-31 23:01:27,123,cscareerquestions,t3_1mefing,False,
n69009x,Takes a while for stuff to take effect.,Servebotfrank,2025-07-31 22:32:55,173,cscareerquestions,t3_1mefing,False,
n697gp2,"Rich gets richer, middle class and lower class gets poorer. Typical late stage capitalism.",pcsx92,2025-07-31 23:13:50,48,cscareerquestions,t3_1mefing,False,
n69ax5b,They're not making record profits in spite of the layoffs but because of them,Anxious-Possibility,2025-07-31 23:33:04,102,cscareerquestions,t3_1mefing,False,
n6905g7,">Literally all that tells shareholders is that we aren’t needed as much as we think we are, and outsourcing is working.You are just finding this out? This ""do more with less staff"" is the new normal. And I highly doubt that companies raking in record profits is gonna lead to them thinking they need to hire more.",Illustrious-Pound266,2025-07-31 22:33:42,71,cscareerquestions,t3_1mefing,False,
n6944vv,"Congrats, you now realize the power of monopolies/duopolies. The big tech cos now have little to no competition so they can jack up the prices and crank down the quality with little to no repercussions. That’s why anti monopoly enforcement that Lina Khan was starting on. But yeah….. Consumers lose, employees lose, capital wins.",ByeByeBrianThompson,2025-07-31 22:55:23,78,cscareerquestions,t3_1mefing,False,
n692tpc,"The fewer employees they have the slower their products get shittier. Microsoft, especially, just seems to spend all their time extorting their existing customers by moving buttons around every few years. Apple and Meta just keep the ship going, the more they do the more money they waste! Nvidia probably has some productive work to do...",Navadvisor,2025-07-31 22:48:14,33,cscareerquestions,t3_1mefing,False,
n6967ik,"This is a part of the cycle. The incumbents are raking in money but don't have the staff to keep innovating. In a couple years this will open the door for the next Google, Microsoft, etc to form and these guys will turn into what IBM, DEC, and others were when they were formed.",Adept_Carpet,2025-07-31 23:06:55,19,cscareerquestions,t3_1mefing,False,
n5k4kfh,"2% of their workforce is 12,000 people? Damn they’re almost half as big as DocuSign",ReasonSure5251,2025-07-28 05:11:45,503,cscareerquestions,t3_1mb7cxe,False,
n5km12n,"One reason might be because many of their clients in US and Europe are setting up their own offshore units under own payroll in India, rather than outsourcing to the WITCH contractors. They call them Global capability centres.If they outsource the work to TCS, the company will take a 20-30% cut before paying the worker. Much easier to cut the middleman out and pay the worker directly..",Thick_tongue6867,2025-07-28 07:52:08,145,cscareerquestions,t3_1mb7cxe,False,
n5k8kcu,It doesn't necessarily mean offshoring is decling. This only represents that the offshoring to contractors are declining. It doesn't represent companies opening Indian branches themselves and hiring in India,Existing_Depth_1903,2025-07-28 05:46:52,177,cscareerquestions,t3_1mb7cxe,False,
n5k45e1,My F500 company used to have quite a few TCS contractors in India. They've switched over the past 3 years and actually hired onshore FTE SWE to replace them. Just my subjective experience.,Rokae,2025-07-28 05:08:14,192,cscareerquestions,t3_1mb7cxe,False,
n5k6n6r,"My job is actually ending all contracts. I don't think its because of AI, i think its because they are starting to learn they have just been burning money. We are currently up to version 6 on the same feature, that's how many times it has been pivoted on. several million dollars to show what is basically v1.",loudrogue,2025-07-28 05:29:45,144,cscareerquestions,t3_1mb7cxe,False,
n5kc0sm,2% is not even worth mentioning.Most companies will part ways with more than 2% every year as you want to get rid of your bottom performers.,HelicopterNo9453,2025-07-28 06:18:02,48,cscareerquestions,t3_1mb7cxe,False,
n5k7qtc,"Eh not entirely cause of AI, but my company has been cutting far offshore roles in India/Asia to instead hire locally (for mostly remote) in tech hubs and nearshore in LATAM. The middleman charges, having to hire entire teams as a package, time zone issues, mostly poor quality results, and the non-cap/cap r&d tax expenses are all just one big headache.",one-won-juan,2025-07-28 05:39:30,60,cscareerquestions,t3_1mb7cxe,False,
n5kdgza,that’s IT services,Brave_Speaker_8336,2025-07-28 06:31:22,13,cscareerquestions,t3_1mb7cxe,False,
n5l79ou,"A lot of potential for misinformation and speculation here, so will chime in as someone that has worked in contracting for 8 years.During economic uncertainty, contracting firms really start to struggle. A really successful small firm could die in a month if they were to lose two contracts back-to-back. For the huge companies, any sign of work slowing will often result in teams being let go. They're usually done silently, but in this case it's likely to be more noteworthy because layoffs and offshoring are popular right now. From a business perspective it's good, because it makes you look efficient. After all, if everyone else is doing it, it's fine, right...It's also worth noting that in contracting firms, a LOT of people might be classed as technical/service staff when their job is essentially a PM or AM role, basically tracking work, making sure the client is happy, etc.Finally, this is my own personal perspective on contracting, but the idea that a contracting firm will have any advancements in AI is utterly laughable. It's not even a skill issue, but one where work will need to be billed to a client, and there's no fucking way that TCS is billing someone for the time taken to mess around with AI issues. Contracting firms often believe that they're at the forefront of technology, but my experience of subcontracting for TCS was arguing with a PM because I had written unit tests and they viewed it as ""unnecessary work we will not pay for"". When I pushed back, their response was ""well, it should work first time"". It's an environment of shortcuts, and while they probably love the idea of AI doing dev work, it'll end in tears without any shadow of a doubt.",EnderMB,2025-07-28 11:08:54,14,cscareerquestions,t3_1mb7cxe,False,
n5lxk7v,"I've done work with TCS, and all the other other giant Indian consulting companies. It's all trash. You get what you pay for.",Early-Surround7413,2025-07-28 13:53:43,7,cscareerquestions,t3_1mb7cxe,False,
n60vv73,"you wouldn't work for porn hub, it might have changed by now, but it was mindgeek. But those sites also would be hard to beat with just sheer volume stats that you would get to put on your resume.",loudrogue,2025-07-30 18:27:36,1351,cscareerquestions,t3_1mdebmk,False,
n60w2b7,Usually those companies have a parent company and it wouldn't affect you because you would be working on the technical side of things.You don't have to be exposed to user data.,Fidoz,2025-07-30 18:28:31,911,cscareerquestions,t3_1mdebmk,False,
n60wy1k,"So, you're wondering if I would put on my resume that I worked as a software engineer for one of the most highly trafficked websites in the world? Without hesitation. And prominently.",Moloch_17,2025-07-30 18:32:38,820,cscareerquestions,t3_1mdebmk,False,
n60xdv1,"Back in 2018 or so, when streaming services were really starting to proliferate I remember reading something about how a lot of places were trying to poach talent from Mindgeek. Apparently it was one of the few places doing streaming at a scale to rival the big players (Netflix, YouTube/Google) but didn't have FAANG salaries to match. That might not be the case so much anymore, but it seemed totally plausible.",HaplessOverestimate,2025-07-30 18:34:41,284,cscareerquestions,t3_1mdebmk,False,
n615gbx,"They have some highest adopted features too. You know how YouTube allows you watch the video from the preview? Yeah, that's from PH. They also discovered that you could bypass adblock by serving ads over websockets instead of https, and instead of exploiting it, they submitted the fix to adblock. So yeah, there's a lot of technical accolades you could have working for them. The parent company would be on your resume, not the brand.",davy_jones_locket,2025-07-30 19:13:01,231,cscareerquestions,t3_1mdebmk,False,
n6107w2,"I did, and I would say that it had a positive impact if anything - definitely getting a lot of smiles and funny questions in interviews, but at the end of the day, I was securing a platform with millions of daily users and literal terabytes of data uploads per second, running a world-class bug bounty program and designing systems at a massive scales, which are all valuable skills. Definitely plenty of NSFW moments at the office though.",biblecrumble,2025-07-30 18:47:52,264,cscareerquestions,t3_1mdebmk,False,
n613qfm,"I worked at a NSFW company. Not as well known as those mentioned by you, but one site we ran was mentioned on an American TV show once. Next job was at a consultant agency and my boss was the one who tipped them I was looking for a job and they knew full well where I came from. Next job after that also connected the dots and asked me and was fine with it. All in all if it has affected it then it's been in a positive direction I guess. If it comes up we just have a laugh about it. Might be worth mentioning I'm not American though.",hallothrow,2025-07-30 19:04:46,38,cscareerquestions,t3_1mdebmk,False,
n60xcjc,"I've been on two interview loops over the years for people who previously worked in the adult video industry. I ended up recommending both for hire. Focus on the technical elements of the job on your resume. It might reduce your odds for small companies run by prudes or religious types, but I strongly doubt it would hurt your chances at mid- or large-size companies or tech-focused startups.",TheTarquin,2025-07-30 18:34:30,129,cscareerquestions,t3_1mdebmk,False,
n6140xd,"I would also be curious if sites like Leafly or Dutchie have any negative impact on your career as well, given the legally ambiguous place the cannabis industry is in.",_DCtheTall_,2025-07-30 19:06:14,23,cscareerquestions,t3_1mdebmk,False,
n5q2bv7,"I speak for everyone when I say, we were waiting on you to take on the challenge.Most of us have thought about solving it, but figured it wasnt worth our time/effort. You got this champ",travishummel,2025-07-29 02:22:23,993,cscareerquestions,t3_1mbzk6b,False,
n5q3ccs,"Hey, this is u from the future. I was able to solve it, but I don't have enough time ot tell you the answer now.",Runsey,2025-07-29 02:28:31,266,cscareerquestions,t3_1mbzk6b,False,
n5q5nge,i saw it asked as a Leetcode medium while interviewing for a used car lot help desk job /s,debugprint,2025-07-29 02:42:36,184,cscareerquestions,t3_1mbzk6b,False,
n5q35zk,There is [a million dollar prize](https://en.wikipedia.org/wiki/Millennium_Prize_Problems#P_versus_NP) waiting for you.,frankchn,2025-07-29 02:27:26,100,cscareerquestions,t3_1mbzk6b,False,
n5q4ftk,"Meh, I came up with a proof once while reading this book. Was about to write it down but the margins were kinda small.",pddpro,2025-07-29 02:35:10,96,cscareerquestions,t3_1mbzk6b,False,
n5q49a8,"I think I saw a YouTube video with terence tao, and if I recall correctly, he said it was the type of problem he would avoid because it was likely either unsolvable, or unsolvable with our current tools in math. Meaning that new tools would have to be invented/discovered before we could advance on it. I think even knowing if it's solvable would be a huge advancement. The truth is we don't know.If you are worried about wasting 30+ years of you life, I would strongly advise you avoid it. If you are not worried, then go for it.",std_phantom_data,2025-07-29 02:34:04,48,cscareerquestions,t3_1mbzk6b,False,
n5q92ls,OP has serious r/linkedinlunatics energy,aarrivaliidx,2025-07-29 03:04:12,44,cscareerquestions,t3_1mbzk6b,False,
n5q47eb,Just throw it into ChatGPT bro.,paranoidzone,2025-07-29 02:33:44,77,cscareerquestions,t3_1mbzk6b,False,
n5q66vb,"I solved this on the toilet in elementary school, but I flushed the notes on accident and forgot about it when the bell to end recess rang.",jsdodgers,2025-07-29 02:45:57,28,cscareerquestions,t3_1mbzk6b,False,
n5qbkyl,"Finally, this sub has evolved to its true form: the circlejerk sub for programminghumor",A_Guy_in_Orange,2025-07-29 03:20:42,28,cscareerquestions,t3_1mbzk6b,False,
n6e3a21,"Why would you apply to junior roles anywhere with 9 YOE? Apply for senior roles and include a cover letter explaining that you're intentionally hoping to move away from big tech, and what kind of work/culture you're looking for. Small companies hesitate to hire big tech engineers because they often struggle to adjust, showing that you've thought about this and are looking for this adjustment will make you a stronger candidate.",BubbleTee,2025-08-01 18:04:25,591,cscareerquestions,t3_1mf3glr,False,
n6e3ybf,"You are overqualified lol, any recruiter will immediately think to themselves: this guy is gonna reject offer/bail on the job within 1 yearIf you want to chill just do senior level at a bank",tuckfrump69,2025-08-01 18:07:41,206,cscareerquestions,t3_1mf3glr,False,
n6e30cn,"Well you’re likely not going to get Junior or mid level positions because you’re completely overqualified. Why, as a recruiter, would I waste time and money recruiting a senior FAANG dev that I believe is not truly interested in the job? It isn’t about the “pay grade”, it’s about the assumption that you will either leave immediately when you find something better or you aren’t interested in the first place",Impressive_Yam7957,2025-08-01 18:03:07,406,cscareerquestions,t3_1mf3glr,False,
n6e6vms,"I wouldn't bother interviewing you because I assume I couldn't afford you. (You're overqualified)You can try talking yourself down. Just call yourself a software engineer instead of a senior, etc",RemoteAssociation674,2025-08-01 18:21:54,57,cscareerquestions,t3_1mf3glr,False,
n6ei75f,You answered their most pressing questions quickly and confidently.. and were therefore deemed an existential threat and someone that would be 'difficult to work with',Euphoric_Sir2327,2025-08-01 19:17:18,16,cscareerquestions,t3_1mf3glr,False,
n6fm6ts,You’re not getting ghosted because you’re unqualified - you’re getting ghosted because they think you’ll ghost them first. The irony is exhausting.,alpinebuzz,2025-08-01 22:44:24,10,cscareerquestions,t3_1mf3glr,False,
n6eciur,"A senior FAANG applying to a junior role for 1/5 of what they used to make will raise some eyebrows, to say the least. Probably think you sprayed and prayed without reading the job description.",Plus-Anywhere217,2025-08-01 18:49:27,22,cscareerquestions,t3_1mf3glr,False,
n6edsaq,I actually got told by a recruiter once that a company turned down my resume because they didn't know if I'd be able to work outside of FAANG before (I had only worked at 1 FAANG company for about 5-6 years at that point). Some smaller companies don't want to hire FAANG people for multiple reasons.That said yeah most jobs are not going to hire someone overqualified for the job.,migustoes2,2025-08-01 18:55:37,8,cscareerquestions,t3_1mf3glr,False,
n6efzyn,"Hiring costs money and man-hours. So if it's a role that's seen as below your pay-grade and it has little room for upward-mobility within the org, a lot of orgs will assume that you'll get bored and leave within a year or two and they'll have to start the process all over again. With some midsized orgs especially, their bureaucratic process likely means that the cost to hire is going to be impactful for them while they might not be big enough to want to undergo looking for a new person every year or two. With some of the new automated tools too, there's a bit of disconnect between hiring personnel and the people that you'd actually be working with. So the department the role is for might be looking for just a fresh college grad and might not care about experience while the hiring department has their tools set to only spit out the most ridiculously overqualified candidates for the role, which makes the process even more annoying. Source: was dealing with this at my university's infosec lab while I was working there. Basically the only way they could get candidates they actually wanted from hiring was to ask for the top 100 resumes because anything less than that only netted them ridiculously overqualified people or stupidly-keyword/context-heavy resumes (one of the ones they sent up to us was 14 pages long)",NoMansSkyWasAlright,2025-08-01 19:06:29,7,cscareerquestions,t3_1mf3glr,False,
n6g79c2,"It makes people think ""what the fuck?"".Why would a senior developer be applying for junior roles? That's what I'd be thinking if interviewing you.Apply for senior roles, but in smaller companies if you want to get out of FAANG style stuff.",ToThePillory,2025-08-02 00:48:26,7,cscareerquestions,t3_1mf3glr,False,
n6fdezj,"I’ve been saving money since Covid, preparing for a long recession that never came. I think it’s here and ironically this administration will do its damndest to hide it.",CodeCody23,2025-08-01 21:55:23,406,cscareerquestions,t3_1mf8fwm,False,
n6fv9r1,market is dogshit and the number were mind-blowingly good and people were coping around hard with look at the good numbers,cryptoislife_k,2025-08-01 23:36:13,104,cscareerquestions,t3_1mf8fwm,False,
n6fevji,"No worries. Those numbers were obviously manipulated to make Dear Orange Leader look bad so [he fired](https://www.cnn.com/2025/08/01/business/trump-job-report-number-fire) the head of the Bureau of Labor Statistics.You can rest assured that, starting next month, the numbers will _look_ much, much better.Problem solved/s",NoApartheidOnMars,2025-08-01 22:03:22,157,cscareerquestions,t3_1mf8fwm,False,
n6fbmv6,Fake news according to this sub,No-Assist-8734,2025-08-01 21:45:50,123,cscareerquestions,t3_1mf8fwm,False,
n6f80bm,AI+Outsourcing :),g---e,2025-08-01 21:26:31,182,cscareerquestions,t3_1mf8fwm,False,
n6gtv1j,I took a below average pay job after 2.5 months of being unemployed and I wanna cry in happiness now.,OccasionalGoodTakes,2025-08-02 03:11:18,20,cscareerquestions,t3_1mf8fwm,False,
n6ic1xg,"I've had the same frustrations trying to track tech job trends—BLS data's a bit of a maze, tbh. For CS-specific breakdowns, hit up the BLS Occupational Employment Statistics page and search for codes like 15-1231 (Computer Programmers) or 15-1252 (Software Developers). That table covers the additions and revisions you're after, and it's right here: [BLS link](https://www.bls.gov/ooh/computer-and-information-technology/home.htm). It's pretty raw, but it's reliable as hell for spotting patterns. Keep at it.",Has109,2025-08-02 11:13:44,6,cscareerquestions,t3_1mf8fwm,False,
n6gbief,"It's been horrible for years, this isn't new.",1234511231351,2025-08-02 01:14:17,17,cscareerquestions,t3_1mf8fwm,False,
n6hzq2a,And its about to get way worstTariffs will lead to a worldwide economic crisisWe are heading towards 2008. Probably in 2026,Ok_Reality6261,2025-08-02 09:17:04,9,cscareerquestions,t3_1mf8fwm,False,
n6gap56,"Send all H1Bs home, no new ones.",Nofanta,2025-08-02 01:09:19,15,cscareerquestions,t3_1mf8fwm,False,
n5zth2n,Not when the paycheck hits tho,GlowingJewel,2025-07-30 15:31:22,403,cscareerquestions,t3_1md9h43,False,
n5zv5rr,"Yeah part of BE/MW/SRE is that nobody notices when you are crushing it but 1 mistake has all eyes on you. Good news is that you are also much more in demand for the same reasonAs for demos, people want 3 main takeaways:1. does it work?2. how do i use it?3. how does it provide value to me?If you can provide all 3 you'll have them locked in. Get good at powerpoint so they can see the flow chart, see the graphs, and see some bruno/postman requests. Make the non-tangible, tangible.",pewpewpewmoon,2025-07-30 15:39:13,71,cscareerquestions,t3_1md9h43,False,
n5zthlj,"I feel you. However, as long as your direct supervisor or manager is fully aware of your efforts and the value you are delivering, that's generally all that matters. I am in a similar situation because while I am a full stack dev, my experience and familiarity with the system means I like to work on, and am assigned a majority of the heavy lift back end tasks. My demos with the product owners are usually nothing flashy, but I don't care.",Austin4RMTexas,2025-07-30 15:31:25,77,cscareerquestions,t3_1md9h43,False,
n5zw4ht,"they can't see why this is cool- so you need to point it out. Literally, ""This doesn't seem like a big deal, but here's why it is...""",dethswatch,2025-07-30 15:43:41,9,cscareerquestions,t3_1md9h43,False,
n5zyjd6,"Take like…half a business day and learn to get good at building presentations. If you want to be really stereotypically developer about it, learn to build charts in your language of choice. Next step is to go full stack. Kind of a joke but not really.",Slggyqo,2025-07-30 15:54:53,35,cscareerquestions,t3_1md9h43,False,
n608fjm,"UI people have this problem in a different way.* Improve speed of UI, fix all the menus, consistent tone of speech --> yawn* Invert colors --> ""HOLY COW THIS IS AMAZING""",DigmonsDrill,2025-07-30 16:41:41,6,cscareerquestions,t3_1md9h43,False,
n5zx9km,"You're in good company and it sucks even if you have the experience to do the UI / UX stuff. Projects come and go, but the positive is if people keep coming back to you for backend development, you're doing something right.",__tothex__,2025-07-30 15:49:01,6,cscareerquestions,t3_1md9h43,False,
n5zuw61,Talk about what the complexity is during a demo and why it is critical.,caiteha,2025-07-30 15:38:00,9,cscareerquestions,t3_1md9h43,False,
n5zylq8,"Demos should be done by product, they are the owners of it and they’re a more customer facing role. Having engineers stop and demo an api is stupid, even show casing the front end is dumb.Only time we should be demoing anything is during a hackathon.",godofavarice_,2025-07-30 15:55:11,7,cscareerquestions,t3_1md9h43,False,
n6033ol,"This is not meant to ostracize you or to finger-wag, but perhaps this is a good opportunity for you to learn how to communicate better to non-technical business partners and stakeholders.This is an important skill. It's an opportunity to show others why you are valuable and why the technical challenge you accomplished is innovative/good for them.If your demo is boring screen with just letters, then consider making a more engaging demo/presentation rather than lamenting about it. The ability to catch the audience's attention is a crucial skill.",Illustrious-Pound266,2025-07-30 16:16:37,9,cscareerquestions,t3_1md9h43,False,
n674qi1,These pay packages are extreme outliers and cannot be extrapolated to the rest of the industry.,minimaxir,2025-07-31 17:10:19,525,cscareerquestions,t3_1me6pk0,False,
n67c5db,can we have a draft? I'd like to watch who's gonna be the first round picks and who's signing them,HoneyBarbequeLays,2025-07-31 17:43:46,88,cscareerquestions,t3_1me6pk0,False,
n67m4f0,A good CS PhD in AI involves a lot of maths. Not many people can work through that if they were just following the money,Historical_Flow4296,2025-07-31 18:29:34,34,cscareerquestions,t3_1me6pk0,False,
n68brw1,Would love some jerseys for my favorite AI researchers.,bitcoinsftw,2025-07-31 20:32:25,7,cscareerquestions,t3_1me6pk0,False,
n67ez4h,"If true, then it makes sense they cut the regular tech jobs like software engineers, IT etc. Pay the top big and fire the lower ones ahah",letsridetheworld,2025-07-31 17:56:27,12,cscareerquestions,t3_1me6pk0,False,
n67c1vb,"Everyone keeps asking what subfield of CS to go in for the best job prospects, its obviously AI, yet I see everything but AI upvoted on those posts... you can't make this stuff up man",throwaway133731,2025-07-31 17:43:20,12,cscareerquestions,t3_1me6pk0,False,
n68de78,How many nba players get $250M contract? And there are a lot of athletes that play basketball and are the top 1% in their high school but never see that kind of money. They could kick ass of almost any other basketball player but would be no match for a nba all star,ragu455,2025-07-31 20:39:55,3,cscareerquestions,t3_1me6pk0,False,
n675r0z,"No they're not.This is a rumor started by Sam Altman on his brother's podcast so that nobody would call him out live for his obvious bullshit.You're medically stupid if you really believe an AI researcher will get paid $250M. Even said researchers said it was wrong.This is higher than what Zuck and any other FAANG CEO gets paid in their best years.They get $10 over 4 years, that's it.",Bobby-McBobster,2025-07-31 17:14:53,55,cscareerquestions,t3_1me6pk0,False,
n6a6g76,Based. I rather see people who contribute to society than NBE stars making 250 million,Free-Design-8329,2025-08-01 02:40:34,3,cscareerquestions,t3_1me6pk0,False,
n676tek,">but I wonder if this will now just flood PhD programs with applicantsAt end of day, limited (barely any) slots for AI on LLM related stuff at schools like Stanford, CMU, Berkeley, MIT for PhD. Like what? A handful from all those schools combined? Let alone they need to be studying for 7 years. Then create groundbreaking research papers and have the relevant experience which will be another 3 years and barely be like 1 or 2 people from that year of cohorts in the country?So don't worry. It just means all those PhD rejects will flood the job market even more at bachelor's.All the while you keep hearing these outlier news. So more people around the world flock to the field.This field is going to be supppppeeeeeerrrr extremely saturated. We are done.",Fwellimort,2025-07-31 17:19:43,7,cscareerquestions,t3_1me6pk0,False,
n6jdb4i,Comparing cash + equity for big tech vs Series B companies is flawed methodology. Most of Series B equities will be worth basically nothing.,elegigglekappa4head,2025-08-02 15:09:49,478,cscareerquestions,t3_1mfsocm,False,
n6jdzpd,"Demo to live? That's just an MLE. Like all these jobs just machine learning jobs then, but renamed for hype",Bangoga,2025-08-02 15:13:22,70,cscareerquestions,t3_1mfsocm,False,
n6jh25s,Thanks chatGPT,Xeripha,2025-08-02 15:29:32,191,cscareerquestions,t3_1mfsocm,False,
n6jnpoe,Inb4 these 3 points get featured on some tech grifter's Instagram reel,samadmas,2025-08-02 16:04:46,17,cscareerquestions,t3_1mfsocm,False,
n6k38h7,Not surprised someone using ai to write their reddit posts doesn’t understand how to interpret statistics,MajorUrsa2,2025-08-02 17:27:08,15,cscareerquestions,t3_1mfsocm,False,
n6jdf6z,"I think the premium for moving AI from research to production makes sense. AI as a whole has gone from being research-dominated to production-dominated.For example, in the past developing a tailored model and infrastructure for a specific NLP task required significant R&D effort. These days it's much more often about fine-tuning a foundation model and getting that model into deployment. You want someone with strong academic knowledge about AI/ML, sure, but you also want people who can make things reliable and ship products on time. If someone can do both, that's ideal.With regards to the NLP example, the Quanta podcast recently had a good episode titled [""When ChatGPT Broke an Entire Field""](https://open.spotify.com/episode/22Q9bVUucdeSK3LDXicjwx?si=-Dpeunr5S6OtUTX4vr-6Kg&context=spotify%3Aplaylist%3A37i9dQZF1FgnTBfUlzkeKt) (based on [this magazine article](https://www.quantamagazine.org/when-chatgpt-broke-an-entire-field-an-oral-history-20250430/)). NLP as a field has been turned upside down by transformers, and the skills/knowledge needed to make an impact have rapidly been changing. Tasks that used to take several years to develop solutions for can now be handled in weeks.",Ameren,2025-08-02 15:10:24,32,cscareerquestions,t3_1mfsocm,False,
n6jdhf2,How are you getting cash + equity numbers from listings? I've never seen equity posted.,newtonium,2025-08-02 15:10:43,6,cscareerquestions,t3_1mfsocm,False,
n6kh1gp,Top AI scientists at OpenAI and Anthropic scrambling to start a public Github repo after seeing this.,bruticuslee,2025-08-02 18:40:39,7,cscareerquestions,t3_1mfsocm,False,
n6jgm20,"Startups are great if you are entering workforce but with lot of experience it’s a bad deal imho. When you have experience the ratio of learning to making money is skewed. This is where big tech is amazing because they pay you a lot, you learn different skills and are mostly in forefront to trying to innovate and get business. I interviewed very recently and was getting cash only offers around 400K from startups excluding joining bonus. Yet no where close to what big tech pays. Also the risk is high. With aquihire, unless you are in the inner circle, chances are very high you can get royally screwed. I would rather build my own startup than put my trust in some founder whose motivations are unknown. With startup offers, unless they have a history of buying back stocks like OpenAI, stock grant is 0 for me.",thegandhi,2025-08-02 15:27:07,8,cscareerquestions,t3_1mfsocm,False,
n6jtbmt,My AI startup Nip Alert is offering 800k total comp (0 base + 800k equity) to all new grads.,Trick-Interaction396,2025-08-02 16:34:44,11,cscareerquestions,t3_1mfsocm,False,
n6r7cdp,"I've been in the field for 10 years. I've never been interested in networking, servers or configuration. I can read documentation and muddle through things if I need to, but given the choice, I'd rather be doing almost anything else.",stagedgames,2025-08-03 20:35:47,735,cscareerquestions,t3_1mgtm8t,False,
n6r89dh,"Junior job postings are asking them to know 20 different technologies, each which you could easily spend months learning at a surface level. I get where you're coming from but it's not reasonable to ask them to know linux, docker, kubernetes, whatever flavor of CI/CD, nginx, databases, a scripting language, a compiled language, 20 different design patterns, algorithms + data structures.....I could go on. It was easy ""back in the days"" because your stack was simple. Now there are infinite layers of abstractions, each with their own online community saying why their solution is the correct one. Is it any wonder why juniors are confused?",brianluong,2025-08-03 20:40:21,252,cscareerquestions,t3_1mgtm8t,False,
n6r9j4l,"Honestly this whole thing of you needing to be doing work when you are at home and calling it a hobby is really really fucked up. In other professions people play golf, and coach little league, and spend time with their families and shit but in Computer Jobs people treat you like you somehow are a bad person for not doing unpaid work after hours as a hobby cuz its fun. There aint nothing fun about setting up apache. Oh you Coach Little league and help the poor after work we don't want you, you're not interested or passionate enough you should have been setting up apache.",Mission-Conflict97,2025-08-03 20:46:43,147,cscareerquestions,t3_1mgtm8t,False,
n6r92w0,"I'm kind of burned out on sysadmin stuff, and don't really want to be responsible for apache crashing having to restart it, or bad apache configs, or having to renew certs or setup certbot or anything like that.At this point, all I want to do is write code, and thankfully my previous job was like 90-95% writing code and my current job has been 100% writing code - at least, in terms of writing code vs sysadmin stuff. I'm already responsible for sysadmin stuff outside of work, like my personal site, home network(s), etc, I have no interest in doing that at work too.",ILikeFPS,2025-08-03 20:44:27,26,cscareerquestions,t3_1mgtm8t,False,
n6r8gr9,I have been programming since my teens in the mid-2000s and I have never had any interest in network configuration,bamfg,2025-08-03 20:41:22,34,cscareerquestions,t3_1mgtm8t,False,
n6r6qtv,"I feel a lot of people entered the field for the $$$ instead of any actual interest, and for them it's purely a 9-5 gig.",farsightxr20,2025-08-03 20:32:48,159,cscareerquestions,t3_1mgtm8t,False,
n6r9ox0,I started programming on a C64 in the 80s when I was 5 and I’ve never had an interest in servers or network config,gwmccull,2025-08-03 20:47:31,13,cscareerquestions,t3_1mgtm8t,False,
n6rasfd,There were things the generation before you enjoyed doing that was abstracted away for you and they probably thought that same thing you’re saying now. Time is a flat circle,SleepsInAlkaline,2025-08-03 20:53:01,14,cscareerquestions,t3_1mgtm8t,False,
n6r6ne7,"I have friends that find running servers at home for content management to be fun. I personally find it really cool, but it may be the exception as well. Out of my cohort not many pursue much outside of work or schooling. Passion to learn outside of necessity isn’t AS common in the field now since it’s so popular, but it is still there.",fathum770,2025-08-03 20:32:20,11,cscareerquestions,t3_1mgtm8t,False,
n6raokq,"Isn't it as simple as ""there's no **need** to learn it""?Any larger enterprise has a split between programmers and infra. Era of running your code on a basic VPS is more or less over. We are seeing k8s clusters, tons of monitoring tooks, managed databases and dockerization. >Same with setting up different network configurations and switches and firewallsNot even actual sysadmins nowadays do so. We have moved to the heavenly world among the clouds. It's unironically a serious struggle for any company that wishes to have their own on-site facility instead of relying on AWS to find anyone who can still handle physical switches/firewalls/routers etc configuration.>is it because it's soo much else to learn, people are not interested in the whole stack experience so to speak or something else? Or is this only my observation?I think it really boils down to the fact that we have more specializations now and at the same time initial level required to host something >properly< has gone up so there's no real **point** in learning it without going really deep. I most certainly can spin up a VPS and run a basic stack on it, set up a firewall and add some fail2ban + basic logging. But I would not be able to actually run a proper setup with multiple pods, specific levels of permissions, autoscaling, alerts, full CI/CD pipeline with secrets taken from AWS and so on. It's DevOps territory, not Developers. And in some cases it's also InfoSec territory.",ziptofaf,2025-08-03 20:52:29,8,cscareerquestions,t3_1mgtm8t,False,
n5sp5ek,"Put one less candle than his age, and write ++ in frosting next to it",a_library_socialist,2025-07-29 14:16:12,383,cscareerquestions,t3_1mc8oez,False,
n5s7ma7,"I feel like we’re missing a hello, world joke here",ssrobbi,2025-07-29 12:41:46,274,cscareerquestions,t3_1mc8oez,False,
n5rvz1o,"Aww this is really sweet (pun intended). In C++, the full minimal code to do this would be: #include int main() { std::cout << ""Happy Birthday!"" << std::endl; return 0; }But really all you need for him to get it is either `std::cout << ""Happy Birthday!"" << std::endl;`Or maybe even: `cout << ""Happy Birthday!"" << endl;`This is as small as it can get, hopefully it fits on the cake!",lukajda33,2025-07-29 11:25:18,354,cscareerquestions,t3_1mc8oez,False,
n5skwgh,"Cut off a little bit of the cake at the end (so its obvious a part of cake is missing), then stick some paper (or a sticky note) to the larger remaining cake with the message: Segmentation fault (core dumped)I find that pretty amusing.",PersianMG,2025-07-29 13:54:56,119,cscareerquestions,t3_1mc8oez,False,
n5sqaoh,cake.age++; // :birthday_cake:,No3Mc,2025-07-29 14:21:48,55,cscareerquestions,t3_1mc8oez,False,
n5ry7z7,"Get black and white candles, and use them to show his age in binary. Or cut some candles in half so they're shorter.E.g. 27 would be white - white - black - white - white, or pad it with black candles to a whole byte: black black black white white black white white",metaconcept,2025-07-29 11:41:35,184,cscareerquestions,t3_1mc8oez,False,
n5rww0w,I vote for ‘std::cout << “Happy Bday” << std::endl’And don’t put the ‘;’ at the end then see if he can spot the bug :saluting_face:,11markus04,2025-07-29 11:32:01,36,cscareerquestions,t3_1mc8oez,False,
n5rw0aq,Just do std::print(“Happy Birthday”);On the cakeEdit: that’s how you put happy birthday on screen in c++,misterespresso,2025-07-29 11:25:33,43,cscareerquestions,t3_1mc8oez,False,
n5s8aww,"Not directly programming language but for developers , I always liked the joke : “There are 10 kinds of people ; those who understand binary and those who don’t “ ( 10 being 2 in binary )",flarthestripper,2025-07-29 12:45:48,24,cscareerquestions,t3_1mc8oez,False,
n5tf49s,"In C++, it's a bit long. So I might use Python or Javascript, because it'd probably fit on a cake a bit betterI also think it'd be fun to increment his age (age = age + 1)In Python: age = age + 1; print(""Happy Birthday!"");In Javascript: age++; console.log(""Happy Birthday!"");",Substantial-Elk4531,2025-07-29 16:18:53,6,cscareerquestions,t3_1mc8oez,False,
n5yhiuz,"Frankly, outside of C and C++ developers, most people don't realize that it's not the same language. Heck, I used to be a C++ developers and, for years, I wrote C/C++, just because it was easier to go with the flow than to explain.Probably not helped by the fact that the toolchains are essentially the same.",ImYoric,2025-07-30 11:03:45,324,cscareerquestions,t3_1md3f1r,False,
n5yhquf,"Because schools still treat them the same, and even software engineers who haven’t used C++11 or later think of them as the same thing.A modern C++ codebase would be completely unrecognizable to a C developer.",Sesshomaru202020,2025-07-30 11:05:25,134,cscareerquestions,t3_1md3f1r,False,
n5ym1ag,"I suspect people are mistaking C++ being backwards compatible with C as C++ just being a direct extension of C.Even if the basic syntax of C is contained in C++, much of being comfortable with a programming language is knowing how to use the core libraries which are completely different. Even something as basic as how you manipulate strings is wildly different.",thequirkynerdy1,2025-07-30 11:36:36,31,cscareerquestions,t3_1md3f1r,False,
n5ywv86,Fuck I’d be happy if people learned that JavaScript and Java are different languages.,lifefeed,2025-07-30 12:44:43,78,cscareerquestions,t3_1md3f1r,False,
n5yir9l,My company always has Linux listed in the programming languages you need to know. Only for jobs that absolutely don’t require programming knowledge or Linux familiarity though.,APXH93,2025-07-30 11:12:56,12,cscareerquestions,t3_1md3f1r,False,
n5ygha9,If you know C you can probably get by pretty quickly in C++. Maybe a little less quickly the other way around but they are similar enough languages,igetlotsofupvotes,2025-07-30 10:55:48,85,cscareerquestions,t3_1md3f1r,False,
n5yiieb,"Very porous ecosystems, and a lot in common when it comes to software knowledge (close to the metal, memory, etc.), and ""how"" you develop C and/or C++ software. While both languages are definitely not the same, they're also very close through the fact that 98% of C will be compiled without fuss by a C++ compiler, and it's not uncommon to have both, in various ways, including through extern C wrapped code.I've worked a significant amount of time on cross-platform C++ projects, and it's not rare to end up with C++ code, using C and C++ dependencies, sometimes or partly vendored through a C interface (which helps a ton when you need bindings to other languages).",Ragnarork,2025-07-30 11:11:06,11,cscareerquestions,t3_1md3f1r,False,
n5z5gix,"In my experience, listing “C/C++” is just shorthand for “systems language”. When paired with Python, it probably just means you know enough to work with C and C wrapped C++ extensions for Python.",look,2025-07-30 13:32:16,4,cscareerquestions,t3_1md3f1r,False,
n5zg1eb,On my resume I list C/C++/Objective-C/Objective-C++ as if they were all the same language.,imaginarylocalhost,2025-07-30 14:26:19,4,cscareerquestions,t3_1md3f1r,False,
n5z6045,Because the industry is overrun with frauds who went to a bootcamp for 6 weeks and are now building critical infrastructure,imagebiot,2025-07-30 13:35:14,6,cscareerquestions,t3_1md3f1r,False,
n68bgqs,"Yes, but unfortunately HR is prepared to fire you and not whomever is harassing you because you are the subordinate.Spend your time applying to new places while you are fortunate enough to remain employed.",panthereal,2025-07-31 20:30:59,329,cscareerquestions,t3_1mecblh,False,
n68eu92,I'm 110% confident that the PIP feedback they're trying to give you is less about the difference of opinion and more about how you expressed it.,SpicyLemonZest,2025-07-31 20:46:43,305,cscareerquestions,t3_1mecblh,False,
n68dlmu,"Yes, like many PIP's there's a personal, not business, reason behind it. Some combine the two where HR or upper management says ""pick X number of people to layoff"" and your manager picks the people they don't like.",jfcarr,2025-07-31 20:40:54,53,cscareerquestions,t3_1mecblh,False,
n699ar3,"PIPs are unfortunately very hard to write in tech because so much of the work is tough to quantify. And a lot of managers are just engineers who got put on the spot and aren't exactly good at it.So the items in the list are probably whatever the manager could come up with to fulfill the process. Or could be miswritten.Difference of opinion is vague too. Could be an argument, could be pushing things too far when being asked to disagree and commit, could be not following conventions or existing decisions. Could be a poorly argued point.",phoenixmatrix,2025-07-31 23:23:57,13,cscareerquestions,t3_1mecblh,False,
n693v7b,"1. you're never gonna get real closure from internet randos. and certainly not from this response.2. if I assume you are being accurate in your descriptions, you are merely being treated unfairly. That is GOING to happen.3. If I assume you are being disingenuous, and further assume you gave a bad technical argument or just pissed off the wrong people, you are merely being treated harshly. That is GOING to happen.4. I would say the lesson to learn here is not ""this wasn't fair"", of course not, whether you're right or wrong you are going to feel that. The lesson to learn is that this type of thing will happen. How do you want to address it in future? In DM? In PR? EM? HR? Extremely deferentially or confrontationally? You do you. But the lesson is this will happen, fair or not, and how will you chose to deal with it. How will you shape the culture immediately around you. What are you willing to take, and not willing.5. Time to start preping for interviews. Always be prepared. Addendum: 6. when it rains it pours. I just noticed ""one of the items"". What are the others? Are they piling on because they ""had it up to here with you""? Or are they nitpicking the whole time? That should inform you if you're being treated fairly or harshly or just how it should be.",redditmarks_markII,2025-07-31 22:53:55,17,cscareerquestions,t3_1mecblh,False,
n69ba32,I had a disagreement with someone once who wanted me to report something as illegal which I knew to be perfectly legal. I refused. I was subsequently let go after a couple more weeks of suddenly everything I did was wrong from that manager’s perspective. It’s fucked but it happens.,NorCalAthlete,2025-07-31 23:35:07,8,cscareerquestions,t3_1mecblh,False,
n6a1ax0,"You obviously are going to say no, but was it an objectively bad opinion? The fact that you are failing to share the opinion throughout the comments makes me feel like it probably was.",Fun-Meringue-732,2025-08-01 02:08:43,7,cscareerquestions,t3_1mecblh,False,
n6b56l5,"If your description is accurate, then that's dumb. I'm somewhat skeptical your description is accurate, and suspect the real problem was the -way- in which you expressed your difference of opinion, or possibly what your opinion -was-.If you're a jerk when disagreeing, that's worth putting on a PIP. If you disagree politely but your opinion suggests you don't know what you're talking about, then that might also be reasonable fodder for a PIP.",Ok_Experience_5151,2025-08-01 07:10:58,6,cscareerquestions,t3_1mecblh,False,
n68q0w5,Without seeing what actually happened there’s no way for us to knkw,rco8786,2025-07-31 21:41:32,7,cscareerquestions,t3_1mecblh,False,
n6ai7ur,"You're awfully focused on this one point, when you say there are more. Perhaps this one is spurious, but if the rest are valid, why focus on this one?",ben-gives-advice,2025-08-01 04:00:17,8,cscareerquestions,t3_1mecblh,False,
n6mih6x,That’s annoying. Maybe just remove the first experience so you have 2.5 YOE only and then you wouldn’t be overqualified for junior,DesignerCalendar5104,2025-08-03 01:49:03,94,cscareerquestions,t3_1mg5gbl,False,
n6oqx2s,"The level of stupidity from recruiters right now, especially in the North American market, is really incredible. HR out here acting like their job is a creative writing exercise in how to reject applicants. Hopefully we see a shift in the labor market soon to correct this nonsense.",ObjectBrilliant7592,2025-08-03 12:54:08,31,cscareerquestions,t3_1mg5gbl,False,
n6mo3ap,What's IAM developer?,Chudsaviet,2025-08-03 02:24:54,31,cscareerquestions,t3_1mg5gbl,False,
n6pct0o,"You didn't read between the lines.When someone says you're overqualified they really mean we'd love to have you, because we're getting someone with X experience at the price of someone with X-Y experience. But we're also not idiots and know you'll leave us the second something better comes along that pays you, your true worth.",Early-Surround7413,2025-08-03 14:56:22,26,cscareerquestions,t3_1mg5gbl,False,
n6mnpg9,"I won't demean your frustrations, but I am also in the camp of graduates shouldn't be competing with mid level engineers for entry level jobs. They shouldn't have wasted your time to begin with.I wish you the best on your search, but I do give kudos to the company for not folding.",Due_Essay447,2025-08-03 02:22:27,27,cscareerquestions,t3_1mg5gbl,False,
n6m68ha,"> It was listed as junior IAM developer> I have 5YOE 2.5 which are in IAMIt's a huge red flag to me if someone with 5 years of experience is applying to a junior role. It means they are either incompetent or desperate. Neither of which are good hires. When they said you were overqualified, you should have asked if there are similar opportunities for experienced hires or if the hiring manager was willing to up-level the role.",allllusernamestaken,2025-08-03 00:31:18,120,cscareerquestions,t3_1mg5gbl,False,
n6nah0d,"That's a company that never promotes its employees, right there.",FlyingRhenquest,2025-08-03 05:08:01,3,cscareerquestions,t3_1mg5gbl,False,
n6m8qvn,Google Cloud?,Competitive-Adagio18,2025-08-03 00:47:15,3,cscareerquestions,t3_1mg5gbl,False,
n6ruiru,"So let me get this straight. They would get a mid level engineer for the price of a junior, but somewhere someone (possibly HR) decided that you are a flight risk...in this market ? 0\_o I dunno, maybe they just gave you some bullshit reason, because they didnt like your haircut or something...",KlingonButtMasseuse,2025-08-03 22:39:44,2,cscareerquestions,t3_1mg5gbl,False,
n5v38ep,"So, I run an agentic AI firm and we have AI in everything. I'll tell you, we hit walls all the time. Our engineers each have 30 years of experience. They're very passionate about AI and use it in everything they do, yet they're always hitting walls. I think firms on Wall Street are just really excited to lay people off because that prospect is so wildly profitable for them. But I just don't see things getting done correctly up to production and scaled without people that know what they are doing. It's just not happening.Frankly, I'd like to pick up some talent, so if organizations start laying off their super senior staff that is going to be a boon for me.",Personal-Reality9045,2025-07-29 20:57:23,493,cscareerquestions,t3_1mcn29h,False,
n5v1x2m,"It’s just as likely we are currently hitting a high water mark for usage of AI in the workplace. As it gets more widely used, employers will come to better understand the substantial risks and problems that come with it, and regulations and legal standards will be developed for its use.This is a very aggressively hyped technology right now, but like most such technologies the reality rarely matches the promise, and that gap inevitably causes people to lose interest over time.It has some genuine productive use cases, but it isn’t nearly as widely applicable as AI companies are desperately trying to make us believe.",Due_Satisfaction2167,2025-07-29 20:51:21,153,cscareerquestions,t3_1mcn29h,False,
n5v52t5,"I’m not going to claim to have any solid insight on the topic or a crystal ball, but IMO it’s more likely that we’re re-running the dotcom bust and AI for devs becomes more like MS Excel became for accountants/finance. I’m not convinced that AI is going to get significantly more “intelligent” any time soon, just slightly smarter in ways that it’s unreliable right now.I also wouldn’t be surprised if costs for using it blow up in the recession and companies start rate-limiting its usage a little bit in the future when pricing is more aggressive.",ReasonSure5251,2025-07-29 21:06:05,51,cscareerquestions,t3_1mcn29h,False,
n5vbr50,I think we can all agree Chick Fil A should be open on Sundays,Dev22TX,2025-07-29 21:38:50,29,cscareerquestions,t3_1mcn29h,False,
n5v1x7v,Who do you think will be pressing tab all the time when it DOES take over? Certainly not project managers. They'll still need us.,CarthurA,2025-07-29 20:51:22,36,cscareerquestions,t3_1mcn29h,False,
n5v5g4e,"When that happens just about no one will have a job except maybe healthcare workers, construction, etc. Let's all make a pact to become freedom fighters to fight for jobs or maybe UBI when we are all unemployable.",protomatterman,2025-07-29 21:07:51,5,cscareerquestions,t3_1mcn29h,False,
n5wcs3a,"The future is the Tea app. Lots of AI slop code dropping the ball constantly. They'll try firing engineers and replacing them with AI and when that inevitably shits the bed, they'll outsource to programmers in the developing world and then just like before the jobs will slowly trickle back to the US because it's still easier to work with people in your same time zone.",kokumou,2025-07-30 00:59:57,7,cscareerquestions,t3_1mcn29h,False,
n5v527p,Nobody can predict the future. People should stop caring about stuff they can't control. AI might hit a bottleneck and not really progress from here on out or it will accelerate further with the massive r&d spending and compute being increased. Neither the AI bros that think AI will replace everybody or the people that think AI is a joke and completely useless are right. Nobody in history has been able to predict the future of innovation with any kind of accuracy. There are periods of history where there is massive continuous innovation in a given field in a short amount of time and then there are certain problems that nobody can solve for decades even hundreds of years. The next paradigm shifting innovation in AI could take another 100 years or it could happen in a dorm room at Stanford next month. None of this is predictable.I think with the AI we have now its clear there is some use cases that are very valuable and the tooling around it will get better. Which should increase productivity. But there is no clarity whether that will result in less jobs. In fact it could result in more jobs if you listen to some economists. There is no clarity in any of this.,nepalitechrecruiter,2025-07-29 21:06:00,19,cscareerquestions,t3_1mcn29h,False,
n5v4m2t,What makes you think this coworker can predict the future? AI isn't capable of replacing even a junior dev right now. It may be at some point in the future. Nothing in AIs progress so far makes me think that future is anytime soon.,vervaincc,2025-07-29 21:03:52,12,cscareerquestions,t3_1mcn29h,False,
n5weyly,"It is hype created and sustained by people who profit off of laying people off that carry a huge amount of that convo. Yes, it's cool and can do cool things. No, it's not full on human-replacement ready or even anywhere near that level. Unless the human in question was already at a level of skill that is easily replacible.",VG_Crimson,2025-07-30 01:12:31,6,cscareerquestions,t3_1mcn29h,False,
n5oav06,can you take the offer and move closer to the job location?,wicccked,2025-07-28 20:37:38,277,cscareerquestions,t3_1mbrjn4,False,
n5obf2f,"legit just move lmao\- unless you got like actual reasons you can't move, then stay obviously. But perfect world, take the offer and move would be my move",deeht0xdagod,2025-07-28 20:40:15,200,cscareerquestions,t3_1mbrjn4,False,
n5opxw2,Use your extra $50k/year to move.,Coldmode,2025-07-28 21:51:48,98,cscareerquestions,t3_1mbrjn4,False,
n5ob66n,Only if you move within 30 minutes of the new job. 15 hours a week commuting would be a killer.,drew_eckhardt2,2025-07-28 20:39:06,102,cscareerquestions,t3_1mbrjn4,False,
n5oe238,"Its not gonna be only 1.5h, think about occasional strikes, accidents, rain & storm delays. Count the preparation before the take offs. Let it be 2h. That is a lot. Your time sometimes cant be paid with money.",AbbreviationsTrue183,2025-07-28 20:52:37,68,cscareerquestions,t3_1mbrjn4,False,
n5oexvk,i tried to commute 3 hours round trip and i quit. you have to move closer to the new job imo,SUsudo,2025-07-28 20:56:47,21,cscareerquestions,t3_1mbrjn4,False,
n5osgyt,"Yes you should take the new offer because:1. The pay is way higher, you'll get 2k/month more, a lot of money to move closer2. Your company were ok underpaying you3. They didn't follow through with your initial work agreement, why would they be different this time?",victillian,2025-07-28 22:04:57,28,cscareerquestions,t3_1mbrjn4,False,
n5obvxi,"Unless I was unemployed and extremely desperate, I would never willingly take a job that had a 1.5 hour commute.I once had an internship whose commute was 1-1.5 hours depending on traffic/accidents, and it was legitimately soul sucking. After that experience, I promised myself I would never do a commute like that ever again.If I wanted to take that job, I would relocate closer to the office. If that's not an option, I'd decline that job and continue job searching until I land something that's both more money, and a sane commute.",SouredRamen,2025-07-28 20:42:26,22,cscareerquestions,t3_1mbrjn4,False,
n5oi9hl,"Yea no, it might sound doable in your head to commute 3-4 hours a day but it will kill you very very fast. You either move closer to the new job site or stay with your old one.",curie2353,2025-07-28 21:13:04,12,cscareerquestions,t3_1mbrjn4,False,
n5ogibx,"Just move, you’re still gonna have to do that commute 3 times a week",bunnycabbit,2025-07-28 21:04:30,5,cscareerquestions,t3_1mbrjn4,False,
n6kbt1b,"In Chicago anyway, that market segment just copy-pastes everything from FAANG. Same interview process, same tech stacks. All Agile grinders with 2-week sprints. The low TC is doable though.",nsxwolf,2025-08-02 18:11:55,69,cscareerquestions,t3_1mfuvay,False,
n6jukiu,">  I took a sabbatical in 2023 to focus on a different career outside of tech,Oof you picked a helluva time to take a career break> Anyway, I was thinking about dipping my toe back into the industry next year. I don't really want to work at a FAANG company, and I don't really need huge TCTry higher Ed. Work is steady, salary is meh> Does anyone know what that world is like right now?Pretty fucked honestly> if it meant I didn't have to go through months of screenings and assignments competing with 200 other resumes. Or are even the small companies inundated with applicants, doing 4+ rounds of interviews for mid-level positions? Yeah pretty much. Unfortunately even at the small companies TA are high on their own LinkedIn fart sniffing sessions; convinced they're the next Facebook when in fact they make HR software for planning PTO",budding_gardener_1,2025-08-02 16:41:19,136,cscareerquestions,t3_1mfuvay,False,
n6jvog0,"I work for a small-ish company. Our recruiter said she has a hard time filtering through all the resumes trying to removing obviously fake ones, etc. When we had two node/express/react positions open, I thought it would be easy to attract very good talent given all the layoffs and RTO mandates. But for some reason the people they passed through to later interviews I was involved with were just ok. They are perfectly fine but I was honestly expecting better.We typically do a few rounds of interviews, but they never get super technical. More conversational - talking about experience with the stack and some libraries, a few simple ""how would you approach this"" questions.First is recruiter screen, next is leadership interview, then an on site (if local) with members of the team and manager. Pretty low key. If we were hiring right now, I'd send you a link, but we're currently at a good level. But it is totally possible to avoid all the leetcode BS if you keep looking!!!",_Abnormal_Thoughts_,2025-08-02 16:47:15,54,cscareerquestions,t3_1mfuvay,False,
n6k5woq,"> are even the small companies inundated with applicants, doing 4+ rounds of interviews for mid-level positions?I was unemployed and on the market for *ages*, as a senior engineer, and recently accepted a position where I had three interviews + recruiter screen. Two were with engineers, each technical but only pretty basic coding and mostly conversational. Then a final call with the engineering department director. It's a <100 person company, maybe 30 engineers.It's by far the shortest / least intense interview I've gone through, and I pretty much only interview for companies around that size or smaller. Most everywhere does 4+ rounds if you're including the intro call, but more than 5 is pretty unusual, and I am including ""take home exercise"" as a round.Most typical interview loops are:* Recruiter screen* Hiring manager screen* Technical round (often a take home)* Deeper technical round (common if last was a take home)* Final call with someone important (CTO, director, etc)Step 3 is *super* common when compared to 2020-2022, but sometimes rounds 2-3-4 there are combined in some way. Occasionally there will be no final round and it goes right to offer stage after the big technical round. It's also pretty common for the deep round to just be a discussion of the take home.Shortest I've ever had was screen, conversational with HM, then a technical. After that was offer phase. 3 rounds was more common in 2015-2020, I think, but I've found that losing the in-person technical round to remote interviewing has made the process longer pretty much across the board.",skodinks,2025-08-02 17:40:53,12,cscareerquestions,t3_1mfuvay,False,
n6n2u7i,I can only speak locally where I live but large layoffs and the same bad pay but now they expect you to work 50+ hours a week instead of being able to slack off. Leetcode gauntlets are still uncommon but it is a way rougher interview process than in the past where they might expect you to sink 30+ hours into a take home project or other insanity.,Aaod,2025-08-03 04:08:06,8,cscareerquestions,t3_1mfuvay,False,
n6nitz8,My company just hired a swe  . 2 rounds . 1 tech 1 non tech. Industrial pump company.  We got swamp with app but most of them  were tossed right away (hybrid role but the apps were remote only or h1b visa),Eastern-Zucchini6291,2025-08-03 06:21:34,7,cscareerquestions,t3_1mfuvay,False,
n6o0a17,"Where I am, the world is very nice. If you're interviewing for a medium-sized company (100-500 employees, I don't go smaller as the pay will be much lower), you will have 2 interviews: a technical one with a one to three engineers and a behavioural on-site one with an HR and probably someone ranking between your future team lead to the head of development. The technical interview REALLY depends on the company. I'm interviewing for C++ positions, so the company will ask you questions about the non-trivial part of the language most relevant to them (examples are virtual methods, exceptions, thread synchronization, templates, stuff like that). They will also ask you general language and data structure questions(examples: the differences between map and unordered_map and between list and vector), and they might throw a leetcode-like problem in to see whether you understand concepts like big-O notation. Some companies can also ask you a bunch of really low-level questions where you'll need to know about alignment, big-endian vs little-endian, and the C standard library.The behavioural interview is the basic HR questions(like ""what was your biggest fuckup?"" and ""why are you switching jobs?""). One company I worked at gave me a personality test, but it was a legit one developed by scientists for professional orientation purposes, not something like MBTI(and the company itself was really nice and chill). The entire process takes 2-3 weeks. They can even come with the positive feedback on the day of the interview. Then they give you a couple of weeks to think about their offer. The job afterwards is usually much more chill than in our Big Techs.",that_one_Kirov,2025-08-03 09:09:44,3,cscareerquestions,t3_1mfuvay,False,
n6kna0z,"The small company landscape has definitely changed since 2023, but there's some good news mixed with challenges. Many smaller shops are still struggling to find solid mid-level developers, especially those willing to work with ""boring"" stacks like PHP, .NET, or legacy systems. The AI hype has actually created opportunities since many devs are chasing trendy roles elsewhere.However, even small companies have tightened their hiring processes. While you might avoid the FAANG-style leetcode gauntlets, expect 2-3 rounds minimum and probably a small take-home project. The 200+ applicant pools are more common now, but your experience and realistic salary expectations could set you apart from fresh bootcamp grads demanding Silicon Valley wages.Regional markets vary significantly. Smaller cities and non-tech hubs often have less competition and more reasonable processes. You can use a service like Applyre to do a passive job search while you're still in your current situation. Local consulting firms, government contractors, and established businesses modernizing their systems are good targets.Your timing might actually work in your favor. Many companies are pulling back from over-hiring and focusing on steady, experienced developers who can maintain existing systems rather than rockstars building the next unicorn. The boring work is still there and still pays decent money.",Significant_Soup2558,2025-08-02 19:15:26,7,cscareerquestions,t3_1mfuvay,False,
n6oe0uk,"Took us a while to go through a mountain of trash resumes before we filled a hole. Bad pay, boring work, good lwb.",drunkondata,2025-08-03 11:19:40,1,cscareerquestions,t3_1mfuvay,False,
n6ok82d,Times are bad right now. My advice network or use your contacts to land a role. Your resume will be pushed to the front of the line.,Dave_1464,2025-08-03 12:08:05,1,cscareerquestions,t3_1mfuvay,False,
n5p3tkc,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-28 23:06:14,1,cscareerquestions,t3_1mbvces,False,moderator
n5p88g5,Non-technical industry. It’ll be boring and you’ll probably be bitching about that in a couple years.,nullstacks,2025-07-28 23:30:10,86,cscareerquestions,t3_1mbvces,False,
n5p7zgd,"I clock off at 5, I don’t do OT. Maybe it’s a job issue?",FlamingoEarringo,2025-07-28 23:28:49,25,cscareerquestions,t3_1mbvces,False,
n5p4rp2,"Sounds like a job problem, not a career problem.The truth that a lot of people here don't want to admit is that, for all the faults of this field, it's still one of the best careers to have by a mile.",olduvai_man,2025-07-28 23:11:25,115,cscareerquestions,t3_1mbvces,False,
n5p569q,"I feel you, I never realized how good I had it at my first job. It sucks if you end up at a place with horrible culture because then you have to think about how leaving early looks on your resume",futureproblemz,2025-07-28 23:13:37,8,cscareerquestions,t3_1mbvces,False,
n5p6704,"Typical answers I've seen: defense, government, non-technical companies with conservative strategies.",BurlHopsBridge,2025-07-28 23:19:08,6,cscareerquestions,t3_1mbvces,False,
n5prgbk,"Long term programmer here. You get used to the always learning. At the start, it's a heavy lift, but if you get one OS, one language, one database system, the rest tend to fall in place. Think about how hard your first language was, compare that to your 2nd and 3rd... The 3rd should be 10X easier.It's not going to change. There's always some OS that sticks around, a language that has more holding power than others, but they will mostly come and go.Sometimes you'll find an easy ride job, but that's really company dependant.",KarlJay001,2025-07-29 01:18:58,6,cscareerquestions,t3_1mbvces,False,
n5p54rj,"> Or is this industry really over at this point and I should start making plans to go elsewhere.There is nowhere else. There is no industry that pays this well and expects so little. You just want a ""normal job"", like the one you were laid off from... You were laid off because they could no longer afford to pay you to do a ""normal job""Don't get me wrong, there are other places. Electrician and Plumber are also great careers, but you will find the same shit (and sometime literal shit) there.Dealing with BS is literally why there is a paycheck. A no BS job is just volunteering.",slimscsi,2025-07-28 23:13:23,15,cscareerquestions,t3_1mbvces,False,
n5pg22f,"[You said it yourself, chief](https://archive.ph/TtCpj)[A couple times, actually](https://archive.ph/chDeT)EDIT: Look, bud. You're [discouraging others from pursuing this field](https://archive.ph/meVQK) while having an extensive posting history hinting at your own discontent with the field on this subreddit and elsewhere. I think readers should know that you might be projecting; there's probably a reason you've hidden your account's activity from public view.EDIT 2: Nice block, OP. After acting *so* tough in comment sections around here, you fold to the slightest bit of scrutiny.",DragonsAreNotFriends,2025-07-29 00:13:36,10,cscareerquestions,t3_1mbvces,False,
n5p7awj,“I just want a normal 8-5 job and log off”brother that’s most of them,CountyExotic,2025-07-28 23:25:06,8,cscareerquestions,t3_1mbvces,False,
n62fmib,Most things we do is to automate stuff that someone used be or could be manually doing as a job. You are in the wrong line of work.,raven_785,2025-07-30 22:59:41,200,cscareerquestions,t3_1mdik4r,False,
n61v4ey,"Any place I've worked your ratings would almost certainly be the least of your worries. Does ""fired for direct insubordination"" mean anything to you?",Loosh_03062,2025-07-30 21:13:50,127,cscareerquestions,t3_1mdik4r,False,
n61vcm7,"It's hard to understand without knowing what the project is.Are you just streamlining efficiency? That is what software developers are hired to do. it's a good thing to be creating software solutions to automate things. That's literally, what we do. Otherwise, we'd all be using pen and paper still. and we'd have a lot more secretaries",bluegrassclimber,2025-07-30 21:14:55,34,cscareerquestions,t3_1mdik4r,False,
n624i95,"if it's that important as a dealbreaker to you, you can quit doesn't mean the company won't bring in 5000 people who doesn't consider it as dealbreaker who would happily work on it though aka if the company wants it done, then it will be done, with or without you onboard",NewChameleon,2025-07-30 22:00:25,12,cscareerquestions,t3_1mdik4r,False,
n63ozbg,"I think it's totally valid to have your code of ethics that you stand by, and honorable to walk away when asked to violate that code of ethics. IMHO, this is one reason it's important to save money and have a nest egg to fall back on. Does ""they'll do it anyway"" and ""5000 other people would love to take your job"" make it any less of an ethical dilemma? I don't think so. I think you should consider your financial situation and look for a new job. If the project is as big and significant as your writing suggests, then I believe that even if you spent the next month or two working on it, you'll probably have enough time to land a new job while not doing enough for the new project to compromise your morals. Of course, if you can afford to give them the middle finger, go for it! I actually did that at a job in the past lol.",Kyanche,2025-07-31 03:25:25,7,cscareerquestions,t3_1mdik4r,False,
n62b3ck,The company is going to lay those ppl off regardless if you do the project or not. You refusing is buying your peers an extra week of work :grinning_face_with_sweat:Continue business as usual,former_newb,2025-07-30 22:35:08,13,cscareerquestions,t3_1mdik4r,False,
n62hxe6,">Have you encountered this before?That is quite literally the whole point of our jobs: We get computers to do work fast, cheap, and reliably that would have to be done by a bunch of people otherwise.Those people are not going to be hired for that work, because we did our jobs.>What would you do?I write software.Do you have any idea how many coachman are no longer being employed because we have busdrivers?",okayifimust,2025-07-30 23:11:51,20,cscareerquestions,t3_1mdik4r,False,
n62592l,"I don't know what you've been tasked with, but if the project itself was immoral I'd find a new gig. You work in CS/tech though. Your career is going to be full of engineering and optimizing efficiencies. That inherently will disrupt roles at some point. Sometimes that opens opportunities for these people/yourself to do more rewarding things.",elc0,2025-07-30 22:04:16,3,cscareerquestions,t3_1mdik4r,False,
n6591f6,"I build robots for factories. My job exists solely to replace people. Technology has been streamlining labor for thousands of years. Your concerns are legit, but it's the name of the game unfortunately.",caleyjag,2025-07-31 11:21:12,3,cscareerquestions,t3_1mdik4r,False,
n6b7b2v,When code looks like this: // For loop that increments a variable 10 times. int sum = 0; // do a for loop for (int i = 0; i < 10; i++){ // increment sum sum += 1; } // return our calculated value return sum,justUseAnSvm,2025-08-01 07:30:41,342,cscareerquestions,t3_1meprm4,False,
n6bld2j,Just ask them to explain their choices.If they can explain then it doesn't matter if they used chat gpt or not.,ObeseBumblebee,2025-08-01 09:43:34,116,cscareerquestions,t3_1meprm4,False,
n6b6007,"It's pretty difficult, the best way IMO is what you are already doing (asking specific questions in person). Of course, vibe coded dumpster fire repos are easily recognizable.",skwyckl,2025-08-01 07:18:33,41,cscareerquestions,t3_1meprm4,False,
n6btl1r,"I’m highly skeptical about the LLM-assistant coding tools.That being said, I’d evaluate a candidate’s project on its own merit. If they made something good with ChatGPT, I’ll not deduct points for them at that phase.If this is a basic app that is vomited out in a a thousand blog posts, I’m evaluating it poorly regardless on whether it is AI slop or artisanal.Likewise if it has a bunch of unnecessary code in function. Or near duplicated functions. Bad comments. Etcetera. Whether they coded it badly themselves or couldn’t refactor LLM code is a distinction without a difference. If a candidate has an interesting project that is well-written, at the pre-interview phase that is all that matters.",dashingThroughSnow12,2025-08-01 10:54:10,18,cscareerquestions,t3_1meprm4,False,
n6bdwq0,"Honestly? I look at the dates. We had a few people apply with OK-looking repos, I don’t expect anybody to be committing to their personal repo like it’s their day jobBut what stuck out was that several repos were generated and populated on the same or the next day.Even for some fresh grads - the disparity is too great. If you are an A+ student who can set up 6 repos easily and get them running, because you already habe code experience - then why is it all tutorials about buttons and for loops?If you are a bloody beginner, unsure how to even compile a project and are applying for a student job, then why do you have 12 repos which contain fullstack projects and have issues answering some simple questions about the choices you made",Mesapholis,2025-08-01 08:32:40,56,cscareerquestions,t3_1meprm4,False,
n6b6vhn,"Are you an IC participating in the interview process? I’ve never looked much beyond the README of a project, and that’s only if it sounds particularly interesting.If they have an impressive project, I will ask them questions about it to gauge whether they actually understand the domain.If none of the projects are interesting, links to public repos stay blue, and don’t factor into the interview at all. 95% of the time I don’t end up looking at them at all. Even pre-AI, there were ways to publish code on your github that you didn’t write. It’s not a strong indicator of anything.",LittleLordFuckleroy1,2025-08-01 07:26:40,30,cscareerquestions,t3_1meprm4,False,
n6bp84t,You guys actually look at people's GitHub? Im not doing that,Eastern-Zucchini6291,2025-08-01 10:18:08,21,cscareerquestions,t3_1meprm4,False,
n6br52l,The auto generated README gives it away for me.,KratomDemon,2025-08-01 10:34:25,7,cscareerquestions,t3_1meprm4,False,
n6d5lp1,It has solid documentation with lots of emojis,leafynospleens,2025-08-01 15:24:17,8,cscareerquestions,t3_1meprm4,False,
n6bsoby,"So how do you access someone who have dedicated full time to their company's work, and not doing much on github. Seriously if you are judging skillset of candidates by github links, then your HR filtering is worse than ATS.",srona22,2025-08-01 10:46:58,4,cscareerquestions,t3_1meprm4,False,
n6bqocr,Seek knowledge / in my experience the difference was learning about higher level components and architecture such that I can guide or heavily contribute to conversations around new feature function. I read other teams slack channels when I get time to understand what is going on in other spaces and what I can bring back and share with my teammates. This type of mentality has served me well and mgmt has taken notice,KratomDemon,2025-08-01 10:30:32,53,cscareerquestions,t3_1mestuk,False,
n6btlaj,"there is usually a misconception, that to stand out, you just need to work on your technical skills. That is wrong. To get to senior+ you need to hone in on your non-technical skills like communication, how you take initiatives, how you build alignment etc. these are absolutely crucial to be seen as someone with authority, and something most engineers neglect and plateau. I personally heavily leveraged these and went from junior to senior in under 2 years, getting promoted over solely technical engineers with 3-4x my experience. for these soft-skills (the real game changer), I would recommend focusing on good documentation (and I don't mean writing docs that no one reads, but being strategic with it) like writing summary docs to summarize complex discussions, writing well-thought-out design discussion tradeoff analysis docs to promote healthy, structured discussions and building alignment, etc. Speech is equally important - the phrasings used, the tonality used etc can immediately set an authority apart from a noob - this also translates 1:1 into slack threads, and code reviews as well. Small tweaks like that can instantly make someone come off as authoritative and knowledgeable.Feel free to reach out if you want to discuss more. I am an open book!",SomeRandomCSGuy,2025-08-01 10:54:13,81,cscareerquestions,t3_1mestuk,False,
n6bs34u,"To break out of it, you probably need to start looking for another role. It sounds like you’ve reached a terminal position at this current company. You could try making some noise and seeing whether you get any support from the higher-ups in working towards goals that help you become a senior. But at 4 years, idk. I’m in a similar position to you, 3.5 years in and officially considered mid, but I know I offer much more than that. But I’ve got a pretty good deal all things considered, so I’ve let go of any resentment and just contribute as much as I need and not extra, unless absolutely required (I’m not very visible, but sometimes I might be when other teammates are out). Basically, I prefer being an IC vs. leading projects because there’s much less scrutiny and the routine is much more chill. I even talked to a teammate who is leading a project, and they’re questioning whether the visibility is worth it lol. I’ve had the chance in the past and I knew that it’s not something I’m into. I also keep up with the latest advancements in the field, primarily in terms of AI. I know I have the passion and drive in me, so I don’t attach a lot of worth to my title anymore.",PureCamel,2025-08-01 10:42:13,13,cscareerquestions,t3_1mestuk,False,
n6btn3r,"I think you have to take some initiative. If you know and architecture conversation is going on, ask if you can sit in. Ask questions, when you feel confident start contributing to the conversation. Yes build something on the side. If you start demonstrating knowledge people will start asking you for contribution on more challenging tasks.",Defection7478,2025-08-01 10:54:37,7,cscareerquestions,t3_1mestuk,False,
n6cabww,"Assuming you’re doing your current work well, ask your management/tech lead for more responsibility/challenging work. They may think you’re fine with what you’re currently working on. Speaking up may change how they think about upcoming work.",Chili-Lime-Chihuahua,2025-08-01 12:45:54,2,cscareerquestions,t3_1mestuk,False,
n6d322e,">no real guidance on how to grow or get to the next level.Are you just waiting around for your manager to tell you how to grow unprompted? Or have you explicitly spoken to your manager about this? Essentially telling them *exactly* what you just told us?This isn't an unusual conversation to have. Your manager should be able to help you achieve those goals, and if they think you're not ready, you can work together to establish what things you can do to make you ready.If your manager isn't aware you feel stuck, they can't help unstick you. If your manager isn't aware you want to work on high-impact, strategic stories, then your manager isn't going to make it a point to find high-impact, strategic stories for you. If your manager isn't aware that you feel like you're not involved in planning/architecture, they can't help you get more involved in those discussions. If your manager doesn't know you were expecting to be mentoring junior devs at this point.... then they're not going to give you opportunities to mentor junior devs.You should speak up more, but not in the way you mean. Speak up more by keeping an open line of communication with your manager, and communicate when you have issues like this, and communicate your career goals with them.",SouredRamen,2025-08-01 15:12:06,2,cscareerquestions,t3_1mestuk,False,
n6brgjp,"dude i was literally in this spot last year, same kinds of tickets over and over, like i could do them in my sleep. i started thinking maybe i just wasn’t good enough for more responsibility. i got kind of desperate and started trying different things and found an website called mysmartcareer or something like that. it asked a bunch of stuff about what i liked doing and where i felt strong, and it kind of reframed what i could aim for. ended up pitching a small internal tool idea based on that, and it actually got me a mini-lead role. not a huge jump, but it got me unstuck.",TeamLiquidBlows,2025-08-01 10:37:05,2,cscareerquestions,t3_1mestuk,False,
n6cc9o0,"Ask, insert yourself! Suggest new ideas, volunteer for something, ask management if there are any projects on a back burner that you could maybe pick up.. there's a lot to consider. You can do it!",Manganmh89,2025-08-01 12:57:00,1,cscareerquestions,t3_1mestuk,False,
n6dg6kx,Have you tried getting a new job?,soscollege,2025-08-01 16:14:49,1,cscareerquestions,t3_1mestuk,False,
n6dhcyx,"New job/team would be the only way.And in the current economy, any job is great",x2manypips,2025-08-01 16:20:29,1,cscareerquestions,t3_1mestuk,False,
n5o4df2,I got out of salesforce development and am never going back. Too niche and you are hitching your wagon to the success of a single company for employment,SeaworthySamus,2025-07-28 20:07:16,82,cscareerquestions,t3_1mbqe68,False,
n5o4lwe,"So, the main issue with Salesforce is that you're probably not going to be doing proper ""application development"". In my experience, Salesforce is an ecosystem, a platform you'd be developing on. Salesforce has a proprietary java analogue called Apex, but it's mostly used to create integrations with your organization in the way of update triggers, web hooks, and basic API endpoints.So while you might end up hitting a lot of the core concepts of app development, it's all going to be Salesforce flavored. It's also going to be a lot of messing around with UIs, Salesforce is not exactly a developer first platform, it's very much a management / business people first platform.So yeah it's probably a pigeon hole, but it's a very high paying pigeon hole",FriscoeHotsauce,2025-07-28 20:08:22,29,cscareerquestions,t3_1mbqe68,False,
n5o1j51,"Salesforce is a niche subsection of programming. You can get bigger salaries as you specialize. You can also pigeonhole yourself out of a job. I can't tell you the best choice, but I can tell you I wouldn't go back to Salesforce after jumping to proper development.",drunkondata,2025-07-28 19:53:45,61,cscareerquestions,t3_1mbqe68,False,
n5o9hhe,Salaries can be high because it’s a smaller candidate pool. I personally wouldn’t build my skills around a single product/company even though salesforce is probably here to stay.,StandardBusiness9536,2025-07-28 20:31:11,12,cscareerquestions,t3_1mbqe68,False,
n5ob3w2,We had a restructure about a little over a year ago. I was a java back end developer and our team moved to Salesforce. We still worked on java back end stuff but the focus was Salesforce. Personally I absolutely hate it. It is niche and the whole platform is dumb for lack of a better word. I don't wanna rant but I've been searching for a new job ever since. Unfortunately in a bad market I have to put up with SF.,shadow2mario,2025-07-28 20:38:47,10,cscareerquestions,t3_1mbqe68,False,
n5o7xsl,"Former Salesforce dev here. I also was reorganized into the role after spending years doing DevOps stuff. (Mostly server automation development with Ansible/Puppet/Chef. After we moved to the public cloud space most of that server automation work disappeared.)Pay was fine, but frankly I just didn't like working with the product that much. It's all largely Java-based, and admittedly I've never been a fan of Java. But even if you ignore the ""Java-ness"" of it... I frankly just don't give a hoot about Salesforce itself. Straight up just do not care, and I found myself incredibly bored with the work.It's a specialized role, but the good news is Salesforce is widely used across multiple industries. In many ways I would say it is similar to mainframe. Those industries that still run mainframes really need developers who know what they're doing on mainframe. It's just not something they teach in school, and companies are willing to pay for devs who know what they're doing. But it doesn't change the fact that it's very specialized.",RagnarKon,2025-07-28 20:24:00,9,cscareerquestions,t3_1mbqe68,False,
n5oflgu,"Those who live by the Salesforce, die by the Salesforce.",mkx_ironman,2025-07-28 20:59:59,8,cscareerquestions,t3_1mbqe68,False,
n5odnf3,"As someone who was in swe then salesforce and now back to swe, it’s a career killer. Retire here or start fluffing your resume with what you actually want to do. I had to bust my ass and beg to get back into swe, getting interviews was so difficult and salesforce roles are hard to come by",wendiguzac,2025-07-28 20:50:43,7,cscareerquestions,t3_1mbqe68,False,
n5oby12,Salesforce can be great but you need to learn SAP integration with it to get high paying gigs.,burneremailaccount,2025-07-28 20:42:42,3,cscareerquestions,t3_1mbqe68,False,
n5z743j,I would recommend speaking to a therapist. These are challenging emotions to deal with.,Substantial_Health_5,2025-07-30 13:41:14,125,cscareerquestions,t3_1md6v3l,False,
n5zl7m6,Step 1 start working out. Seriously. No excuses just start today and work out hard. After a few weeks reassess your career situation.,PresentationOld9784,2025-07-30 14:51:07,41,cscareerquestions,t3_1md6v3l,False,
n60v496,"Make it a practice to invest 10% of your time or invest 10% of your income to sending your resume to new companies or clients. Build a system of marketing yourself for example sending 10 job applications a week. Whether you do it yourself or pay someone else to send the job applications, having other job options would keep you secure. If you have more time, learn another skill that you can make a craft or ""retirement job."" Personally, I trained weightlifting and martial arts and while it's my hobby now, I see myself maybe teaching this when I get older. I also explore digital marketing in the form of blogs, email, social media and video, so I could technically start a business or digital marketing agency or consultant if push comes to shove. Once you're comfortable, try your hand selling something based on your expetise so you have a test business. Your therapist, according to your comment responses is saying ""your feelings are valid"" and I'm reading it as since it's valid, your brain is probably detecing signs that you're going to actually become destitute. There are signs and writing on the wall that's why you're screaming internally and theres something you need to do about it. And I think you need to take it seriosuly. Be around people solving the problem. Be around people in higher positions within your career track. Be around people who are more successful and ask for their advice. Then do something. My suggestions are just examples. As I've had that thought since I entered the marketplace.",kevinolega,2025-07-30 18:24:08,4,cscareerquestions,t3_1md6v3l,False,
n5znvka,"No don’t do that. You might not know me, but I’m a fellow human being that wants the best for you and everyone going through similar situations.First thing is first, professional help will do wonders. Go to the nearest therapist and show them this post, see what they have to say.Those feelings, most people around you have encountered them. For some is easier to move on for others like you and I they linger. “Late 30s” this idea of being late is dumb, we can start and end at any point so you are never late. Do you like sports? Try practicing one, it will help you relax, excersice, and socialize, all in one. If not, pick one, and if you are still undecided listen this random comment and try tennis or pickleball, they are individual so you won’t be overwhelmed.Good luck stranger, sending you empathy and a hug.",CSguyMX,2025-07-30 15:03:45,9,cscareerquestions,t3_1md6v3l,False,
n5zgzm2,"Therapy, seriously. Your employer likely has an EAP that can set you up with a therapist for a few sessions for free and you can figure out where to go from there. And/or talk to your GP about meds. This isn't about CS, it's depression and/or anxiety talking.",anemisto,2025-07-30 14:30:54,4,cscareerquestions,t3_1md6v3l,False,
n60xmee,Keep procrastinating and see how well that works out for you.,Ok-Attention2882,2025-07-30 18:35:47,1,cscareerquestions,t3_1md6v3l,False,
n5ztkrr,Manifest destiny my friend. If you focus on this hard enough if will almost definitely happen. Try asking yourself what if that doesn't happen and you're absolutely fine?,crossy1686,2025-07-30 15:31:51,1,cscareerquestions,t3_1md6v3l,False,
n625g2z,Real,russiakun,2025-07-30 22:05:17,1,cscareerquestions,t3_1md6v3l,False,
n661tmn,"It's pretty easy to fall into a mental hole.In my case, I THINK it is how I feel, but if I properly stretch/exercise, and correct my posture, my outlook on life embarrassingly changes from ""misery"" to ""excitement"".I'd claim that this fact is awful, but I'm in ""happy"" mode, so it's just embarrassing to admit! This pattern started for me ever since I first started trying to start my career (no progress since then, painfully enough).Physical pain and fear/uncertainty can and will warp or suppress your willpower. We are very susceptible to oppression, be it external or unintentionally self-inflicted. Still relevant to the sub since it has ""career"" in the name, though I could be wrong about anything.",abandoned_idol,2025-07-31 14:07:32,1,cscareerquestions,t3_1md6v3l,False,
n69pb5p,"This post has two problems in one so I'll address each one separately.> Every single day I worry about losing my job and it makes me procrastinate endlessly. I always meet my (vague) deadlines but everyone around me can see me spend days, often weeks not typing a single letter or staring at my phone.> And it’s because my work is dull, vague and I am terrified of getting something else. I can get no references, everyone probably hates me and I have no other skills than being mediocre at coding.I can relate as I have the same fear. I think this is a healthy fear that one should directly address. My advice is to reduce costs and save so that you can live off of a decade from your savings if you lose your job. Work on your technical skills, interview constantly and get job offers so that you always have other options if you get laid off.> Everyone keeps harping about trades or jobs involving interacting with people and I am bad at both.I would stick to CS.> I am in terrible shape, am on the spectrum but not enough for psychologists to care about it, so I am basically someone who has no friends and no relationships in his late 30s. Should I through myself off a bridge?This is a separate mental health issue. Get in shape. Work on getting a relationship. Talk to a therapist or read a self-help book. I recommend [this book](https://www.amazon.ca/How-Be-Miserable-Strategies-Already/dp/1626254060)",BarracudaPersonal449,2025-08-01 00:56:14,1,cscareerquestions,t3_1md6v3l,False,
n61i75q,"It's exactly what you said, high competition or high selection barriers, there is no easy market anymore, I see this in embedded systems.",None,2025-07-30 20:14:02,41,cscareerquestions,t3_1mdfnru,False,
n61d590,"AI/ML is simultaneously in demand and  inundated with hundreds, if not thousands, of resumes. Not only that, a master's or a PhD is majority of applicants, even if you don't need them for many roles.",Illustrious-Pound266,2025-07-30 19:49:58,94,cscareerquestions,t3_1mdfnru,False,
n61syu2,"You want to look at industries that handle sensitive data and are mired in compliance. Health, defense, ~~insurance~~, etc...",bearicorn,2025-07-30 21:03:31,24,cscareerquestions,t3_1mdfnru,False,
n624gtn,Plenty of desktop development positions in defense if you got a clearance.,RapidRoastingHam,2025-07-30 22:00:13,14,cscareerquestions,t3_1mdfnru,False,
n61wlvv,"When people say webdev do they mean frontend? Because if you're talking about all the stuff that goes into making a true full stack app then it makes absolutely no sense, you have DBAs, Sysops, NOC, Devops, Cybersec, Backend, Data/BI, and like probably 10 more teams in big projects and they're all kinda web dev aren't they?",disposepriority,2025-07-30 21:21:00,8,cscareerquestions,t3_1mdfnru,False,
n6176kf,"Web dev is such a massive area with so many jobs out there, and honestly, I still feel like it's the *least* saturated out of all the areas. Especially frontend or fullstack with a bit more focus on the UI, a lot of companies are still willing to take a chance on you even if you’re pretty new or just know the basics...That said, I could totally be talking out of my ass here, so feel free to correct me if I’m wrong.",Sad-Sympathy-2804,2025-07-30 19:21:22,42,cscareerquestions,t3_1mdfnru,False,
n625f7b,"graphics programmer here with 2 years of experience (1 in graphics) and a masters. In Canada. Thankfully I have no problem getting interviews (started applying on the side last month, have an average of 1.5 interviews a week). So I don't really relate to all the doom on this subreddit. I don't grind leetcode but I revise graphics techniques and linear algebra.",Wandering_avali,2025-07-30 22:05:10,7,cscareerquestions,t3_1mdfnru,False,
n62qopc,There’s almost zero demand for cybersecurity role. Super niche and only hires experienced dev + PhD,2dum2dieUwU,2025-07-30 23:59:41,3,cscareerquestions,t3_1mdfnru,False,
n632inv,"I see bunch of rendering software engineer (opencl, vulkan) convert into GPGPU engineer (CUDA). And they are doing pretty well at the new job. And the skill is demanded and people need some time to build it",dayeye2006,2025-07-31 01:09:07,3,cscareerquestions,t3_1mdfnru,False,
n62am83,Embedded is in demand for experienced engineers. But you’re not landing a role with a CS degree and microcontroller projects.,ViveIn,2025-07-30 22:32:34,2,cscareerquestions,t3_1mdfnru,False,
n5smcpq,"If you are sending out 50-70 applications today, I know that you are using the same basic-ass resume and applying to jobs you aren't a fit for. That's a ludicrous amount",purrmutations,2025-07-29 14:02:17,34,cscareerquestions,t3_1mc96xi,False,
n5sll1k,"70 applications per day? There probably aren't that many Dev jobs coming out lol. I am a recent graduate and I managed to land a job in 4 months. On average I did 2-3 job applications per day. Cover letters, sometimes change the CV, answer their application questions and explain what I have worked with and how it can be relevant even if I don't exactly know their tech stack. The job I got was for a tech stack I never worked with.In total I had 3 interviews but I was preparing hard for them, spending days learning about the company and preparing questions that they may ask me (I cheated during the interview I had bullet points on the side so I can remember stories etc.). They don't want you to be professional especially for grad roles. They want to know that you are interested in their company (show your research) and tell them what you have been working on and learning. Keep your github profile public and show your repositories they want to see you are doing something.Another thing that helped was looking at some leetcode easy questions, Iearned some very simple yet important patterns that they didn't teach me at uni and I am usually able to solve the pair programming coding interview parts. During such interviews show your thinking, break down the problems, find a solution iteratively.Was I lucky? Probably, but luck is where opportunity meets preparation.",BulkyTrainer9215,2025-07-29 13:58:24,42,cscareerquestions,t3_1mc96xi,False,
n5u9y2w,"50-70 applications per day seems like not a lot of bang for your buck. I'd focus in more on specific roles using specific skillsets, then have templated, tailored resumes for those roles. Right now, your resume seems a little scattershot. As an example of what I mean, in your language skills section you have Java listed first, which tells me you'd be most comfortable in Java, but none of your projects or experience mention Java anywhere, so I don't have much to go off of regarding how skilled you actually are in Java other than current coursework from mthree, which doesn't tell me much.I was in a similar boat as a new grad, and it took me 10 months to get a job (2 months after graduating). I would have 2-3 resume's with the same or similar information, just re-ordered to fit the job description. Is the job a front-end position using React and TypeScript? You better believe I'm putting that first on the resume. If the job is enterprise Java, then Java, Spring, JUnit are all going to bubble up to the top. Normally I'd suggest having a cover letter too, but it just so happened that all my callbacks came from applications with no cover letter, so your mileage may vary. Last thing I will absolutely recommend is to **bold** the **relevant skills** in your **experience** and **personal projects**. So things like **TypeScript, Tailwind, etc.** should be bolded. HR people don't have a lot of time to sift through applications, so the easier you make it for them to find the technologies they need to see the better. Don't go too crazy with it though. If around 15% of the text in your bullet points are bolded, I'd say that's good. That's just the path I took though, there's other ways to go about this. My job hunt was from November 2024 to this month and took about 300 applications sent total , but I got the best results most recently when I was only sending 2-3 applications out per day to places I was 100% sure wanted new grads with little to no experience. I'd also like to know what your application-to-interview ratio is. For me and the people around me, it was normal to get 1 interview for every 50 applications or so. If you're not hitting that (or anywhere close to that I'm guessing) then you might be applying to places too liberally. That's all I've got! Good luck, going that long without a job is rough. P.S. if your personal projects fall on the gaps in your employment, it might be worth putting the timeframes you worked on the projects. That way it would at least show you're doing something between your internship and mthree, but idk how effective that would be.",Mason_Luna,2025-07-29 18:39:52,9,cscareerquestions,t3_1mc96xi,False,
n5un6hv,"> remote or hybrid Brother you’re effectively a fresh out of school junior fighting for the most competitive roles. It’s very unlikely you land one of these - full time in office for a bit of experience, then transition.Also your skills list is too long for your experience.",claythearc,2025-07-29 19:42:10,7,cscareerquestions,t3_1mc96xi,False,
n5u8s72,"Where are you located? Generally companies aren't hiring outside of local talent, because they have no reason to pay for relocation when there's a surplus everywhere. If you're trying to find jobs outside of your current location you're not gonna have an easy time.",CarinXO,2025-07-29 18:34:27,3,cscareerquestions,t3_1mc96xi,False,
n5tdf39,Well Ill say this. Either get a phd or do a startup.,Relative_Baseball180,2025-07-29 16:10:56,6,cscareerquestions,t3_1mc96xi,False,
n5wsjih,"Like everyone else said, focus on the quality of you applying vs mass shotgun applies. Don’t discount applying to gov jobs (state/local) as they sometimes go under the radar. On LinkedIn search using keywords for “Hiring”posts as they often link to the direct company site hiring form. Get your resume checked out at the r/EngineeringResumesIt’s a rough market so don’t give up, all you need is a little luck and preparation!",Pikarat_Nova,2025-07-30 02:32:13,3,cscareerquestions,t3_1mc96xi,False,
n5xjpd1,You did an unpaid internship for 10 months? That is absolutely insane.,litLikeBic177,2025-07-30 05:50:49,3,cscareerquestions,t3_1mc96xi,False,
n5s98yu,Join the uscg,Ok_Economy6167,2025-07-29 12:51:20,2,cscareerquestions,t3_1mc96xi,False,
n632bg3,"My side projects are getting better at golf and bowling, going to concerts, and spending time with my family. I have no desire to tech work after hours",nimama3233,2025-07-31 01:07:55,148,cscareerquestions,t3_1mdmbzg,False,
n62prke,I don’t. And I’ve met only one colleague who has  time and energy for side projects.,Glum_Worldliness4904,2025-07-30 23:54:31,93,cscareerquestions,t3_1mdmbzg,False,
n62p1i9,"Just a hunch so idk, but maybe you should try to find yet another hobby that seems less mentally taxing, thus affording you that R&R that it seems you need. Then you won't feel burnt out for the graphics hobby. Granted, it's trying to make time for two hobbies rather than one.Also, exercise.",paxmlank,2025-07-30 23:50:29,15,cscareerquestions,t3_1mdmbzg,False,
n62sxh9,"Most working people work plenty at work without working at home on work things that aren't work. Work.*honest advice is to spend that ""side-project"" time looking for another job.. at least now you have some professional experience and references, it might help you have an easier time finding something different. Maybe not.. but maybe.",runhillsnotyourmouth,2025-07-31 00:12:31,30,cscareerquestions,t3_1mdmbzg,False,
n62v307,"The secret isn’t energy - it’s momentum. Start with 10 minutes, even if it’s just tweaking a pixel shader or doodling ideas, and suddenly you’re in the zone. Passion projects thrive on tiny wins.",alpinebuzz,2025-07-31 00:24:59,25,cscareerquestions,t3_1mdmbzg,False,
n62tadm,The only answer is adequate usage of stimulants(caffeine),KhorseWaz,2025-07-31 00:14:34,11,cscareerquestions,t3_1mdmbzg,False,
n62zjsi,"I don’t have the time or energy for that I don’t even like spending too much time troubleshooting mod issues with my games outside of work. Spending 8 hours a day on stuff related to software engineering is enough If you want to do side projects, great. But you don’t have to. There’s a vocal minority of devs who love coding so much that they spend a good chunk of their free time on side projects, and are very loud about it on Reddit. but that doesn’t mean it’s something you have to do. I love coding and love my job, but if it was what I did all day even after work I’d go nuts, other people want to program stuff that they’re interested in as a hobby.Do what makes you happy, but it’s fairly common for people to do less of their hobby in their spare time if they’re also paid to do it.",epicfail1994,2025-07-31 00:51:28,6,cscareerquestions,t3_1mdmbzg,False,
n634k66,"Just got to do it. Arrive home, set a timer, even if it's just minutes, then over the year that makes a *big* difference",MathmoKiwi,2025-07-31 01:21:10,10,cscareerquestions,t3_1mdmbzg,False,
n62zzny,"Whenever I am bored. Otherwise, I don't really consciously make time for it. I just do it when I feel like it. I don't force myself to do it.",Illustrious-Pound266,2025-07-31 00:54:04,3,cscareerquestions,t3_1mdmbzg,False,
n63ki89,"For me personally, I get energy via exercise after finishing work",BarracudaPersonal449,2025-07-31 02:56:17,3,cscareerquestions,t3_1mdmbzg,False,
n5w041w,"Few things after looking at your linked resume:\- I'd take ""Junior"" out of your first title. I think here's where you can be a bit ambiguous and say you worked in a software developer capacity but not specify or limit yourself to their perception.\- Maybe I'm just dumb but I basically don't understand what any of the projects under Key System Implementations do at first glance. Recruiters with even less technical experience and patience, might glaze over it or hit the reject button when looking for buzzwords. I'd either try to simplify the language or concepts of what you actually delivered or just tailor this section to specific types of jobs (like how in these projects you used Python etc. to deliver).\- Probably remove the EE degree in progress as it's not really relevant or use it in your EE-only resume.\- The undergrad teaching assistant role sounds like fluff, and no employer really cares about how many assignments you graded etc. you should probably write something along the lines of what you taught and areas of focus you excelled at teaching like red-black trees or something etc. Or try and take a look at other undergraduate TAs on Linkedin or something and see what they wrote. To me, at least it seems very ""I want a TA job.""Last point is you probably want to tailor your resume to each of those roles you listed that you're applying for. At best this looks close to an ""EE major that used to be CS looking for an internship/jr role"" to me, but has some mixed signals so you'd want to orient the resume better towards those kinds of jobs if so.",terrany,2025-07-29 23:47:38,38,cscareerquestions,t3_1mcqr3o,False,
n5vx10r,"Might be worth searching for jobs with your niche skills you'll have better luck when you're one of the 10 people that knows how to do that. Generalist Python, C++... are extremely oversaturated",Plus-Anywhere217,2025-07-29 23:30:52,52,cscareerquestions,t3_1mcqr3o,False,
n5wf39a,"Hey man, just wanted to say hang in there. Thought I’d share my wife’s story to give you some hope.She got laid off back in 2023 after three years at a local company. It was really tough finding a new job, especially since she’s on a visa. A lot of conversations ended early because of that. She didn’t get many interviews, and the ones she did get early on didn’t go too well. But she kept grinding LeetCode and prepping. She finally landed an interview with Amazon in February 2025 and cleared it.It took her a year and a half after being laid off to land this job. Just wanted to share her journey in case it helps you keep going. You’ve got this.",RepresentativeMoose,2025-07-30 01:13:15,13,cscareerquestions,t3_1mcqr3o,False,
n5vw69g,Could NYC be the issue as there are not as many hardware related industry there as in Silicon Valley? Maybe check out some opportunities there.Hang in there.,fiji007,2025-07-29 23:26:16,26,cscareerquestions,t3_1mcqr3o,False,
n5vwkhn,"I feel you, man.",Buri_north,2025-07-29 23:28:25,13,cscareerquestions,t3_1mcqr3o,False,
n5vwnf8,"I’m in the exact same scenario. 2.5YOE, not a single response. I can’t know what I need to change if I can’t get a single response.Send your resume here, maybe there’s something wrong.",starburst-dev,2025-07-29 23:28:52,9,cscareerquestions,t3_1mcqr3o,False,
n5w2abl,"Improve resume (imo also use a better format) - someone else wrote up a pretty detailed reply. You’re in NYC which is a huge plus already - Python/C++ is really amazing to have for investment banks and trading firms which there are plenty of in New York.> I'm 27 and feeling like my career is over before it really began. I'm open to any and all brutal feedback.Absolutely not, and this is coming from someone who has less experience than you and had to go through something similar with unexpected layoff and go a stretch without landing something. It sucks but block the noise, focus on yourself, and keep trying. Wish you nothing but the best!",squeakyjamesbond,2025-07-29 23:59:47,4,cscareerquestions,t3_1mcqr3o,False,
n5vy6va,Post on LinkedIn consistently idk but you have good experience,DeadStarCaster,2025-07-29 23:37:08,3,cscareerquestions,t3_1mcqr3o,False,
n5x1crm,"I'm sorry to hear ur struggles. I just finished being laid off for 7 months and I struggled so much.I wish I had better advice, but step1 is clearly something is off with your resume. At this stage in your search I would pay someone to help you craft a resume and see if it helps. I don't have any recommendations on that but you need to find a way to get any form of interviews.I saw in your other post you only want NYC or remote. I was close to moving out of state too but I did hang tight and ultimately find something local. You may need to accept it's time to temporarily leave and come back the second you can.You can apply to jobs right when they open at 7-8am and again at 12-1pm that helped me I think.Messaging every single LinkedIn and making a post helped me get some extra interviews.I get spammed by this WITCH company that claims to pay 60-65k/yr and makes you move anywhere in the USA 2 year contract. if you want a referral for that DM me I can try to get u a phone call.I really do wish you the best, it's not a reflection on you why you're here.. but you have to find a way to dig yourself out. I'm rooting for you.",Super-Blackberry19,2025-07-30 03:28:51,3,cscareerquestions,t3_1mcqr3o,False,
n5yk5i8,Learn Java and get good enough to interview in it in a month. Tons of NYC banks are always hiring Java developers but they need Java experience out of the box. They won't interview a Python developer.,csanon212,2025-07-30 11:23:10,3,cscareerquestions,t3_1mcqr3o,False,
n5rc33i,">But he cannot do anything about it.Go above his head, or leave, and let the people above him know why.Life is too short.",okayifimust,2025-07-29 08:28:15,84,cscareerquestions,t3_1mc5iav,False,
n5rj5cw,Sounds like Bob is doing whatever he can to push out the new guy in an effort to keep his job.,Unintended_incentive,2025-07-29 09:36:53,54,cscareerquestions,t3_1mc5iav,False,
n5tqflf,"Let me guess, Bob has been with the company / project since the early days, possibly even the inception? It's not uncommon for people like that to feel a massive sense of ownership and entitlement over a project and not be able to let go of control. I have seen it many times in the industry. Unfortunately in my experience it's unlikely the situation is going to change unless something drastic happens like him leaving or the scope expanding beyond the point where he can keep track of everything.",kisielk,2025-07-29 17:11:01,8,cscareerquestions,t3_1mc5iav,False,
n5rk29p,"Don't bring up Bob in your first meeting with the VP unless he specifically asks. You should be working through your manager. If he says it's out of his hands, that's completely BS. Push him to ask what you can do to get this ironed out because it's ""creating a hostile work environment"" - not just for you but others as well.",RelationshipIll9576,2025-07-29 09:45:34,26,cscareerquestions,t3_1mc5iav,False,
n5se73h,"I am exactly in the same situation with a principal engineer who behaves exactly the same way, my manager cannot do anything.",NoWrongdoer2115,2025-07-29 13:19:13,5,cscareerquestions,t3_1mc5iav,False,
n5td4rz,"Don't complain about Bob. Just assume that they already know and ask ""What's the deal with Bob?"". Maybe you will get some insight.Some developers are insufferable. He might be the last person who knows a subject matter and management doesn't want to lose the knowledge.",TurtleSandwich0,2025-07-29 16:09:36,5,cscareerquestions,t3_1mc5iav,False,
n5rb7o8,"Bro you should document everything, collect feedback from others (anonymously is fine too) and go to HR. If even a VP tells him that he literally is being an asshole, it will be a slam dunk and they will get rid of him.I'd suggest mentioning that otherwise you'll come back with a lawyer to deal with what is characterized harassment.",Bobby-McBobster,2025-07-29 08:19:42,16,cscareerquestions,t3_1mc5iav,False,
n60clpx,Fight him in the parking lot and assert your dominance.,Apprehensive_Bee1849,2025-07-30 17:00:43,3,cscareerquestions,t3_1mc5iav,False,
n5suzgd,"Have you tried talking to him straight up? Schedule a 1:1 with him and tell him everything you’re saying here. Keep it on the facts and how’s it’s impacting your ability to get work done. Start the conversation acknowledging how smart and talented the engineer is and how you want to learn from them but their communication style is making it difficult for you. If it continues, it’s probably time to get HR involved. That will scare everyone straight, just be prepared to have a ton of documentation and examples of this principal engineer’s behavior. Too many assholes in this world and very few people with spines to do something about it.",sneak156,2025-07-29 14:44:33,2,cscareerquestions,t3_1mc5iav,False,
n5t8fuj,There is strength in numbers. Talk to the other people being bullied and see if they are willing to stand up with you.The usual reason why this is tolerated is that management feels they need to keep the bully on staff. If you and the others start going through the commit histories then you can build a case to management that the company can function without Bob. I'm sure he is doing this to protect his position so if you can strip that away then he'll have no defense.,rmullig2,2025-07-29 15:47:52,2,cscareerquestions,t3_1mc5iav,False,
n6blh67,Out of those I would only say Klarna and Duolingo.  The rest and many others like them currently use AI as an excuse for layoffs.,Horror_Response_1991,2025-08-01 09:44:38,96,cscareerquestions,t3_1merg07,False,
n6cbzh3,1 and 3 are lies. They hired in India for those jobs. Number 7 is a known crackhead that just makes shit up.,savetinymita,2025-08-01 12:55:24,21,cscareerquestions,t3_1merg07,False,
n6cz1fr,"\> IBM replaced \~200 HR roles with AI agentsThat one's not particularly interesting either. Some very large companies (eg: Oracle) ran HR on a skeleton crew and automated system before generative AI was even a thing. I think at some point they had a single digit headcount HR team for the entire company. Also, job cuts don't say the whole story. Eg: at my company (which is admittedly much smaller) we cancelled hiring for some positions because we could replace them with AI (and did, quite successfully). We didn't let anyone go over it, but those are still jobs that would have existed otherwise.",phoenixmatrix,2025-08-01 14:53:03,11,cscareerquestions,t3_1merg07,False,
n6btjk1,"AI cannot currently “replace” tech workers but it can make existing workers more effective. For instance a team of 6 might be able to do the work that 10 did previously. Net result: 4 laid off, even if the AI didn’t “replace” anyone.",PatchyWhiskers,2025-08-01 10:53:50,38,cscareerquestions,t3_1merg07,False,
n6d5967,"My company (F500) over hired.  Saw AI coming and used it as an excuse to downsize saying it increased our productivity.   I suspect many companies used a similar convenient excuse.  I've not seen any reasonable evidence to suggest AI is replacing actual productive employees.  I have seen a lot of existing features be rebranded as ""AI"" though",m0viestar,2025-08-01 15:22:37,3,cscareerquestions,t3_1merg07,False,
n6c86uw,"My brother is a parts manager at a Toyota dealership. Told me a couple weeks ago all the (insurance) adjusters are gone. According to him, their jobs were trivial, enter vehicle and type of accident, print out list of parts. He’s not super tech savvy so I’m not sure if an LLM or a series of if else statements replaced the adjusters. He’s also concerned for the future of his job, thinks any middle man position is in danger.",squeeemeister,2025-08-01 12:33:12,2,cscareerquestions,t3_1merg07,False,
n6dvhdi,"Just an anecdote, but Amazon's customer support chat appears to now be a bot which is trained on data from previous chats. There is no information that you are talking to AI, it still shows a human name.I chatted with one and it told me it would make exceptions and send refunds, once it even told me they successfully contacted the manufacturer of a product and I should expect a package in the morning...When I asked for proof or confirmation I was sent to a 'manager' who then told me that the ""person"" I spoke with had made a mistake and that I would not be given any of the things I have been offered.I was totally stonewalled from any help beyond what I could do myself via the amazon app.The number of things that were wonky aligns with how AI acts if you push it a bit.I have no idea how many employees this replaced but I think it must be a lot. These are of course off shore call center jobs, so I doubt we will see numbers from Amazon.",Aknottyman,2025-08-01 17:27:45,2,cscareerquestions,t3_1merg07,False,
n6fbh6i,"I think many of the companies that are saying ""We replaced roles with AI or reduced the amount of roles required because of AI"" ACTUALLY mean the following: ""The demand for the product / service we provide has decreased because of changes to the market, and we don't need as much staff. The staff we do need, we're going to seek out low cost alternatives to.""",GlorifiedPlumber,2025-08-01 21:44:59,2,cscareerquestions,t3_1merg07,False,
n6byohf,"Quite a few.People on this sub tend to view AI in a very black and white “1:1 replacement” way, which makes mature discourse almost impossible to have. It’s not about “replacement” rather it allows for a reduction in headcount when you have the equivalent of a supercharged junior assistant.It makes offshoring even more appealing, with real time translation tools and AI code editors (Windsurf/Cursor), it’s never been easier for engineers in Pune, Warsaw and Bogota to close the gap on their western counterparts.And as we saw with the Walmart cuts, even units decidedly unrelated to AI are getting axed to free up funds for it.OpenAI is already selling and developing specialized agents tailored to workload, that run 24/7, don’t need vacation or benefits and have no objection to being micro managed. The other major vendors won’t be far behind.",BigShotBosh,2025-08-01 11:31:57,3,cscareerquestions,t3_1merg07,False,
n6cge6b,TikTok replaced content manager with AI,RomeInvictusmax,2025-08-01 13:19:47,1,cscareerquestions,t3_1merg07,False,
n6dudw5,Why don’t you try to earn money from your app since you already got some users on it? Also getting some official certifications may help you stand out in the field you are looking forward to get a job into.,Putrid_Soft_8692,2025-08-01 17:22:42,47,cscareerquestions,t3_1mf26ye,False,
n6e37et,"You’re good at building an launching apps. Don’t ever discount how valuable that is.I’d recommend two things: targeting start ups with the same problem, they need to launch an app, and try to monetize your app. With start ups, you just need to make sure they have the money to pay you, don’t do anything pre-funding, since it’s super high risk.",justUseAnSvm,2025-08-01 18:04:04,27,cscareerquestions,t3_1mf26ye,False,
n6e3wu6,"Take any CS adjacent job available, even helpdesk or entry level IT positions. Just get your foot in the door somewhere, so you can gain experience for the resume and move up",No_Try6944,2025-08-01 18:07:29,18,cscareerquestions,t3_1mf26ye,False,
n6dvhe9,"3 year gap and no internships puts you in a bad spot. Would it be possible to do a CS masters and do internships this time?For your resume, remove the bootcamp program, and move your personal projects to the projects section, don’t try to pass this as work experience.",thewarrior71,2025-08-01 17:27:46,32,cscareerquestions,t3_1mf26ye,False,
n6dw7ay,"I didn't read the whole thing but I give you credit for having helpful context versus giving unnecessary life history. Yeah no internship hurts.>For that reason, I've spent most of my days working on projects to keep myself marketable. I have published a mobile app that has 1,500 monthly active users, but that didn't seem to help my chances at all. No one cares about or looks at projects. HR doesn't code and is the first line of filtering resumes. Hiring managers have 30 hours of meetings a week. They probably don't even read your resume before the interview.For every 1 person who says they look at projects, there's many more who don't. My hiring manager in banking said projects can only hurt the applicant because you can't defend yourself when someone good looking to judge you. I don't list my GitHub. Projects are fine to teach yourself tech stacks but no need to share the code.Oh 1,500 MAU app, like that's different, that's not some crap project copied off the internet or weirdly coded with AI. Is there not a website or App store listing you can link? But yeah, you're still entry level with 300-1000 applications for every job. You say ""top public school"" but that needs to be #1 or #2 in your state. Then you need to be willing to relocate.Consider forming an LLC to look more legit for self-employed status and mention revenue if over $500. I'm not a lawyer, not giving legal advice.Your resume, you underestimate how lazy HR is. **They read your resume for** [7-8 seconds](https://www.hrdive.com/news/eye-tracking-study-shows-recruiters-look-at-resumes-for-7-seconds/541582/). You need to say what languages were used in your first two projects. Most people don't know what Flutter is. Then you need to expand your Technical Skills. Don't just say Java, add Spring Boot, Postgres with JDBC, Hibernate mapping, other Spring modules, any IDEs used. If same info is within your Java project, that's fine, have it in two places so HR is more likely to read.Then consider an MS to ""reset"" your work gap and be eligible for internships again. [OMSCS](https://omscs.gatech.edu/) at Georgia Tech is legit and cheap but you miss out on in-person career fairs where I got all my entry level opportunity.",NewSchoolBoxer,2025-08-01 17:31:06,11,cscareerquestions,t3_1mf26ye,False,
n6e2hgf,"Pick one language per job description. With the top project in Flutter, I’d omit all the other languages and only apply to Flutter dev jobs. Otherwise rewrite in Java/Swift and apply to those roles. (In other words leave off C#, Node.js, Python.)",St0xTr4d3r,2025-08-01 18:00:35,3,cscareerquestions,t3_1mf26ye,False,
n6fma60,"I am in a similar scenario only difference being I had internships. At this point I have just given up even my friends in the industry couldn't help because it has been so bad the past 3 years. Locally I had HR people I charmed or was friends with tell me I got turned down for certain jobs I was interviewing for because they were having people with three years of experience apply for these jobs paying 40k in the middle of nowhere freezing cold who the fuck wants to live here Midwest. Guess I just get fucked despite spending years busting my ass, getting internships, good grades, tutoring and working as a TA, etc and am back to working the very same kinds of poverty jobs I worked before I started college. The place I had my main internship laid off over 20% of the company in a single month and according to the people I know that still work there has hired grand total of 6 people in three years only two of which were coders the others being in roles like marketing. On top of that they have had other layoffs or people quitting so realistically it is more like a third of the company gone. One guy I know that worked there lost his house because he got laid off.",Aaod,2025-08-01 22:44:56,3,cscareerquestions,t3_1mf26ye,False,
n6dz742,"Go back for a Masters - college round 2. Use your time there to farm internships.If that means take on more student debt, then so be it. Else, cut your losses and change careers entirely.",kingp1ng,2025-08-01 17:45:06,7,cscareerquestions,t3_1mf26ye,False,
n6dzlwy,Try to start on support analyst first,tfcheung,2025-08-01 17:47:00,2,cscareerquestions,t3_1mf26ye,False,
n6fmtah,"You’ve been doing the work without the paycheck, which ironically makes you more qualified than half the entry-level pool. The resume says unemployed, but the reality says relentless.",alpinebuzz,2025-08-01 22:47:56,2,cscareerquestions,t3_1mf26ye,False,
n5m245n,Who cares if it’s out of the norm or not? Ask for the raise. If they decline you accept the other job offer,TheConSpooky,2025-07-28 14:17:00,150,cscareerquestions,t3_1mbh9up,False,
n5m2t0p,"If you're willing to leave for that other role, but would prefer not to. Ask for the raise, if they say no - you switch. If they say yes - you stay.It sounds like you don't bug them for a raise often, so I think it's more of than fair to ask for an occasional correction. I wouldn't phrase it as an ultimatum - just let them know you recognize you're being underpaid and have been solicited by other places.",Ok_Report9437,2025-07-28 14:20:27,33,cscareerquestions,t3_1mbh9up,False,
n5m4o1w,Is this a position you were only contacted about or you’ve actually gone through the interview process and received a job offer? Those are two different things.,Chili-Lime-Chihuahua,2025-07-28 14:29:40,24,cscareerquestions,t3_1mbh9up,False,
n5m2v4g,"It all depends on how you ask, Anything that implies ""I got a better offer or I say someone on the internet paying more"" will be met with ""see ya"".A bird in the hand",Daily-Trader-247,2025-07-28 14:20:44,14,cscareerquestions,t3_1mbh9up,False,
n5m2wf0,"This is a tough one if you don’t want to leave and your job is remote. If you are willing to walk, you can go to your boss and be candid. But if you really don’t want to leave, it’s hard to use the offer for leverage.Is there opportunity for promotion? A safer way to approach this might be to have a career conversation with your manager.If your responsibilities and personal impact have increased over the last 5 years yeah you definitely can ask for more. It also might be worth asking for more PTO if you have a long tenure.",pissposssweaty,2025-07-28 14:20:55,6,cscareerquestions,t3_1mbh9up,False,
n5mzp0h,"OP you do not have a offer , you have a linked in message from a recruiter",Less-Opportunity-715,2025-07-28 16:56:51,5,cscareerquestions,t3_1mbh9up,False,
n5mm8eb,"This is a bit tough because 10 years there, means you are likely a valued member (to a certain degree) and you basically know what to expect at your job and likely excel. The expectations are tasks you can meet. The other job even if it's a salary increase, you just dont know what the expectations will be. I once jumped ship from a chill defense job to a big tech cloud developer. The pay was at least 50% more, but the expectation was 200% more. It drained me. Im not saying that the other job isnt worth it, im just saying just because it's eremote doesnt necessarily mean it will be similar expectations. Tbh, if you like this job, Id say ask for a raise. Say you have been offered a place with a 20% raise, give your job the benefit of the doubt too (assumingyou like being there) and say that you prefer to stay but you have to do what's best for you and see if you can come to an agreement. Maybe they give you 25% more or maybe they give you 15% more. Would you stay if they didnt match the 15% but gave you around the same ballpark (10-15%?)?",Broad-Cranberry-9050,2025-07-28 15:53:35,2,cscareerquestions,t3_1mbh9up,False,
n5mcj3v,"No one is giving out 20% raises right now. I'd take the new job, but stay on good terms with everyone. Then try to go back if you need to.",mcAlt009,2025-07-28 15:07:50,2,cscareerquestions,t3_1mbh9up,False,
n5mwj73,"This is a common thing to do. Ask your company if they’ll counter the offer to keep you, if they do - great, you stay. If they don’t, you go. If you are unattached to the outcome and just trying to get the highest offer - a common approach is get current company to counter, take the counter to new employer. Then if they give you a higher offer, you go - if they don’t, you stay",FalconHorror384,2025-07-28 16:42:22,1,cscareerquestions,t3_1mbh9up,False,
n6giot9,"Can only speak for myself, 25 years, never doubted it. My career has been in smaller companies and not in the US. So I was never chasing the bigger thing, just enjoying the day to day problem solving and the quality of life this career provided.",Excellent_Panic_Two,2025-08-02 01:58:34,57,cscareerquestions,t3_1mfehit,False,
n6gmr6l,"Hmmm... it's actually the opposite for me.I knew I wanted to pursue a degree in CS very, very early on. In 5th grade we had to write a report and publically present it about ""What I want to be when I grow up"". A bunch of kids picked things like professional baseball player, firefighter, cop, ""business man"", etc.I wrote my report on wanting to be a ""Computer Scientist"".I wasn't even pursing SWE specifically. I wanted to get a CS degree, and find *any* technical job that utilized my CS degree. So from day 1 I was ride-or-die CS/tech-industry.But around 10-12 years into my career, my mind has started drifting to simpler times. When I was a teenager, I worked in fast food, and it was one of the best jobs of my life. I literally met life long friends through that job that I still keep in touch with. It's what really brought me out of my shell as an awkward teen, it was pretty formative for my life.The pay was shit, dealing with customers is god awful, but the job itself was very ""zen"". I go in, I sling some burgs for 6-12 hours, and I go home. There's no week/month-long projects, there's no quarterly objectives, there's no product managers, there's no on call, there's nothing to think about after work. It's just burgers. The only thing that followed me after my shifts was I always smelled like beef.But around 10 YOE? I already got my bag. I literally have enough money stashed away that I could afford to work a full time minimum wage job for the rest of my life and not sacrifice anything about my current lifestyle. So when my last job went south, and I started looking for my current one.... I kept thinking ""what if I just... went back to fast food"". I made a spreadsheet to forecast my runway.Ultimately I'm glad I stuck with it and landed my current job.... but I am at the point where if I get laid off, or this job goes south, ""soft-retiring"" is a very realistic option for me.My passion in CS and computers is still as strong as ever. But I don't need to work in the industry to enjoy that side of my life anymore.",SouredRamen,2025-08-02 02:24:15,30,cscareerquestions,t3_1mfehit,False,
n6gn0rl,"I got to take a programming class in high school. Halfway through I realized I was very good at it, really enjoyed it, and there were lots of jobs available. I never was a striver or a ladder climber. I took seven years to get to senior (tho there's been a lot of title inflation since I started). I went into management five years after that. I'm a lot smarter and a lot calmer and have a better life outside of work, which lets me prioritize how I want to approach my working life a lot better. I do better at work because I have an identity outside of work. I still deeply enjoy coding, and now I also enjoy mentorship, collaboration, certain forms of planning, serving business needs.",TheMoneyOfArt,2025-08-02 02:26:00,9,cscareerquestions,t3_1mfehit,False,
n6gj2tq,"I didn't go through that phase, but that was because CS was the pivot after I had tried something else in my life. I also didn't make the pivot by choice; rather, having to pivot was forced upon me.I also don't buy into the ""career is something we need to focus on"" argument. My job is a means to an end, not an end in of itself.",OneOldNerd,2025-08-02 02:00:58,5,cscareerquestions,t3_1mfehit,False,
n6gy803,I started in those big Silicon Valley companies in my early 20s. I thought about getting an MBA and be a big time executive. Anyways I got rejected from the top schools and just stayed and saved. 10 years later with a lot of option trading I’m retired. Usually when one door closes another one opens,VanillaMaterial356,2025-08-02 03:41:51,5,cscareerquestions,t3_1mfehit,False,
n6gk304,"15yrs, it was real from day 1 for me. i’m here for the bag tho, there’s no inherent love for my work. i tolerate it and am adequately productive, so they pay me",rotinegg,2025-08-02 02:07:12,4,cscareerquestions,t3_1mfehit,False,
n6gonq2,Year 7 now. Don't intend to leave anytime soon.,ArkGuardian,2025-08-02 02:36:47,2,cscareerquestions,t3_1mfehit,False,
n6grh0o,"Working outside in the Midwest for 2 years then in a 95°f factory building cars for 10 years is all the motivation I'll ever need for a tech job.Tech is seriously ridiculously cushy compared to most jobs. I'm not saying it's easy or not stressful but sitting in a climate-controlled building typing out code and going to meetings is truly a gift. Hell, just being able to use the restroom at any time during the work day is enough motivation. Tech might not be the perfect job, but there are far more worse jobs than better ones.:person_shrugging:",thewiseguy8,2025-08-02 02:55:23,2,cscareerquestions,t3_1mfehit,False,
n6grprf,I started my side business (non-tech) which I intend to become my full-time job when I had about 9 YoE.,csanon212,2025-08-02 02:56:59,2,cscareerquestions,t3_1mfehit,False,
n6h2bic,"12 years experience, 14 since I graduated from college. I knew I wanted to do this and worked very hard to get the first role. Periodically I get frustrated with either the work or the tooling and dream about being a carpenter but that has gotten rarer as I’ve gotten older. I can’t imagine doing something else for work.",Coldmode,2025-08-02 04:11:40,2,cscareerquestions,t3_1mfehit,False,
n63zsl4,"Live your dreams, pie guy",ryan_770,2025-07-31 04:43:10,137,cscareerquestions,t3_1mdsaxw,False,
n63zbdv,It’s fine,jeffbell,2025-07-31 04:39:26,80,cscareerquestions,t3_1mdsaxw,False,
n63zy9g,"Not weird, everyone will love it!",AnonymousPie_,2025-07-31 04:44:25,58,cscareerquestions,t3_1mdsaxw,False,
n6403lx,I wish my teammates would bring pie,TheDoodler2024,2025-07-31 04:45:34,31,cscareerquestions,t3_1mdsaxw,False,
n643ly6,Only if the pie filling is made from your recently-missing coworker.,farsightxr20,2025-07-31 05:13:32,7,cscareerquestions,t3_1mdsaxw,False,
n65jbuv,Bribing people with food is incredibly effective.I still know one Cybersecurity guy as the lasagna guy. This guy had some major personality conflicts with me but I forgave him because of his lasagna.I'm not recruiting him for any roles but his lasagna saved me from punching him in the face while I was there.,csanon212,2025-07-31 12:28:00,5,cscareerquestions,t3_1mdsaxw,False,
n6472vo,I think this will make you very popular. Everyone loves when someone brings a treat in to share.I guess you could check with HR if it’s ok that you bring in something home made to share.,mr_brobot__,2025-07-31 05:42:33,4,cscareerquestions,t3_1mdsaxw,False,
n640whg,"A coworker mentioned that she bakes too much and doesn’t know what to do with the extras, and our whole team requested that she bring it to work so we can eat it. I’m sure your team would enjoy it",FishWash,2025-07-31 04:51:45,3,cscareerquestions,t3_1mdsaxw,False,
n6430ee,Also should I tell them about it before or after the meeting and should I leave the pie on the table or should I keep it in a bag.,cooltunes186,2025-07-31 05:08:34,2,cscareerquestions,t3_1mdsaxw,True,
n64k7rm,I'm more interested in how amazing your pie is for you to consider it a bribery.,LegitimateCopy7,2025-07-31 07:41:25,2,cscareerquestions,t3_1mdsaxw,False,
n6o11gs,"I’m pretty sure your supervisor is full of shit. I’ve seen people bounce between big tech and startups and back again, and in the other direction as well. In that respect, joining a startup won’t box you in completely.One thing you do need to be careful of with smaller companies, though, is toxic founders or management. A lot of founders are actually terrible managers, and some aren’t even good visionaries. And even among relatively successful startups, it’s not unheard of for founders to screw their employees on equity (see Scale.ai, Windsurf). Having trust in the founders’ vision, competence and loyalty to their employees is critical to a good startup experience.",Independent-End-2443,2025-08-03 09:17:24,124,cscareerquestions,t3_1mgelfd,False,
n6o0krc,"That's one of the dumbest things I've ever heard.you have no idea what you really want now or what you'll want in 5 years. Bigger orgs mean more rules, more hoops, less control over work, tech, and design. I started small and over a few job changes ended up big but I only have to code when I want to and manage my own product.",dustywood4036,2025-08-03 09:12:42,136,cscareerquestions,t3_1mgelfd,False,
n6o4kgx,There’s a lot of weird big tech myths and basically none of them are true.,culcheth,2025-08-03 09:52:52,27,cscareerquestions,t3_1mgelfd,False,
n6o50po,"No this is not true. I'm a big tech manager, I've hired from all sorts of backgrounds. Getting into big tech is about two hurdles: (1) getting an interview (2) passing the leetcode hurdles. Neither are easy, but #1 is the biggest hurdle. Interesting experience + education helps there. If I wanted to optimize getting in, and assuming you've already got an education, I'd join a startup.It's true that once you're in big tech, it's easier to get other jobs in big tech, as those resumes tend to float to the top of recruiters stacks. But when you get your first big tech job is flexible.",staatsm,2025-08-03 09:57:12,18,cscareerquestions,t3_1mgelfd,False,
n6o35wm,"That's not true at all- your birth defines whether you will work at big tech. If Jeff Bezos doesn't mark you with the special amazon recruitment tattoo at birth you will never be eligible to work at amazon, same goes for every other big tech company.",disposepriority,2025-08-03 09:38:57,30,cscareerquestions,t3_1mgelfd,False,
n6pgead,"Your manager is kind of right but in a wrong way. What is true is your first job shouldn't be about money. The money will come down the road. Your first job however is a baseline on which you build. Make the first job be as consequential as you can make it.Foe example is the choices are between more money but no name company vs less money but brand name company, go for less money. Or more money but doing shitty old tech vs less money buy doing cutting edge tech. That kind of thing. But's not big vs small company, tech vs non tech company. That's just stupid.None of this is black and white and there's no ""rule"" on exactly how to do it. You'll know when you know.",Early-Surround7413,2025-08-03 15:14:39,9,cscareerquestions,t3_1mgelfd,False,
n6o41sj,I don't think anybody gives a fuck what your first job was.,Pale_Height_1251,2025-08-03 09:47:46,6,cscareerquestions,t3_1mgelfd,False,
n6o5il3,"There is some truth to this. If it comes to a tie between two candidates for a big org, and the only difference is that one worked at big orgs while the other did stints at startups, org guy wins.Of course it is dumb AF to have some manager decide this who has no idea on a technical aspect of the work but it is the hard truth.Then again, there are companies like FAANG that dont let dirt like HR or managers prevent hiring of good talent.",gdinProgramator,2025-08-03 10:02:00,9,cscareerquestions,t3_1mgelfd,False,
n6pq8yr,"There is SOME truth to this. Having a recognizable name on your resume early opens up doors for you right away. A friend of mine graduated same year as me with a better gpa. I got a job at a company that was a well known name (not faang), while he had to get a job at some no name insurance company. When we both went to look for new jobs it was SIGNIFICANTLY easier for me to get interviews for well known companies while he was only getting calls from more no names.",NoNeutralNed,2025-08-03 16:04:52,3,cscareerquestions,t3_1mgelfd,False,
n6o8jet,My first job was at a small office of a company probably nobody here has ever heard of. Also it was in Japan.My second job was at a FAANG company.,JazzyberryJam,2025-08-03 10:31:09,3,cscareerquestions,t3_1mgelfd,False,
n6e7vn9,At this point no job is bad for your career lol,FundamentalSystem,2025-08-01 18:26:45,357,cscareerquestions,t3_1mf3ve4,False,
n6e84pz,Is it a role that leads to a security clearance? Having a clearance is a good way to get job stability,zergling-,2025-08-01 18:27:57,76,cscareerquestions,t3_1mf3ve4,False,
n6e6z2f,"Nah man, defence wins championships",PortGenz,2025-08-01 18:22:22,176,cscareerquestions,t3_1mf3ve4,False,
n6er7ts,"Anyone who says it's bad doesn't know what they're talking about. Military is recession proof and will always be in demand. You also will never compete with H1Bs since most defense jobs require at minimum a green card and typically US citizenship. Plus once you get into the defense world and get entrenched and make connections, you'll never have to send a resume again.",Early-Surround7413,2025-08-01 20:02:17,34,cscareerquestions,t3_1mf3ve4,False,
n6e6kvw,"No, it’s not bad for your career. In fact, given the way dev work is going in many other sectors I would highly recommend defense.",large_crimson_canine,2025-08-01 18:20:27,69,cscareerquestions,t3_1mf3ve4,False,
n6eae6w,You can make a killing in defense.,Angerx76,2025-08-01 18:39:01,37,cscareerquestions,t3_1mf3ve4,False,
n6eio7s,I used to work in defenseThere’s MANY roles where you get stuck maintaining legacy systems and your skills basically deteriorate - but it’s mostly by choiceManagers will try to put you places where you learn/grow if you ask for it. Many people I worked with also went on to big tech or other cooler jobs after. It does not look bad on your resume,Zealousideal_Theme39,2025-08-01 19:19:37,37,cscareerquestions,t3_1mf3ve4,False,
n6e6auk,"No. Big industries look good and the domain knowledge applies to other industries. Fast moving teams where you have freedom, I've never seen that in 15 years in 3 different industries. Everything is due yesterday.You can have freedom in extra tasks you aren't required to do if you want to exploit yourself and work 50 hours a week and still risk the layoff bat. I have zero choice in tech stacks for what I'm assigned. Best case, I can use a different IDE or Python instead of Java on an AWS lambda.",NewSchoolBoxer,2025-08-01 18:19:06,69,cscareerquestions,t3_1mf3ve4,False,
n6e8cp9,"Aside from the numerous benefits of being in defense (job security, security clearance, usually good benefits), it's usually pretty structured and not fast moving which you might not like. Very old school, older languages like Java are common.I have friends working in defense in non-CS roles and they claim it's great. Good PTO, chill vibes, good job security, every other Friday off. Sounds like a great place to end up after grinding up enough experience.",OuchieMaker,2025-08-01 18:29:02,17,cscareerquestions,t3_1mf3ve4,False,
n6fafp6,"It would be good for your career. Comparisons aside, FundamentalSystem nailed it, you aren't even in a position to be picky if you are jobless with zero experience. o .o/",Jaguar_AI,2025-08-01 21:39:26,7,cscareerquestions,t3_1mf3ve4,False,
n61cieu,"if you genuinely enjoy it go for it, just don't expect a chill 6 figure desk job off graduation anymore",pixelizedgaming,2025-07-30 19:47:01,104,cscareerquestions,t3_1mdgdxa,False,
n61k657,"If you want stable employment in a low stress job (even if it pays less), pick something else. If not.. welcome and good luck.",Plus-Anywhere217,2025-07-30 20:23:01,32,cscareerquestions,t3_1mdgdxa,False,
n64ph8r,"I originally wanted to go for Software Engineering but did Electrical Engineering, focusing electively on CS and Computer Engineering, instead due to credit transfer issues from my first year program. In hindsight it was a good option because if worse comes to worse I can pivot from SWE to EE or CE. Perhaps I would be more competitive in SWE jobs with an SWE degree, but an EE degree is still very prestigious as it was the default for programmers up until the late 90s or perhaps even early 2000s. For example the CEO of Microsoft has an EE bachelors. The CEO of Google did his Bachelors in Metallurgy and Masters and Materials Engineering.I would definitely do something engineering though. CS is less challenging (4 courses vs 6 in engineering), more saturated and offers less flexibility. And even if AI does automate most human labor, licensed Engineers still have state granted authority to sign off on safety critical projects (this matters more in an age with powerful AI, because powerful means dangerous). The reason engineers are sometimes grouped with doctors, lawyers etc. is because they all need to go through stringent licensing and all have serious legal considerations when they sign off on something. Getting a degree that enables you a path to such a license would be extremely valuable, and CS won't give you that option.",swegamer137,2025-07-31 08:31:21,7,cscareerquestions,t3_1mdgdxa,False,
n61mjfu,You might as well major in art because either way you’ll be flipping burgers after college.,ice_and_rock,2025-07-30 20:33:48,40,cscareerquestions,t3_1mdgdxa,False,
n64uaso,"Most people in the CS field get related jobs after graduation, around 9 in 10. The tenth posts in cscareerquestions about how the field is cookedBut seriously though you’ll be fine",epicfail1994,2025-07-31 09:17:22,14,cscareerquestions,t3_1mdgdxa,False,
n63okgt,I work as a janitor in the cs department...I have a cs degree,dj_Magikarp,2025-07-31 03:22:41,27,cscareerquestions,t3_1mdgdxa,False,
n61i9ui,"I came from mechanical engineering to software development.No one can tell you what the job market will look like in 4 years or what impact AI will have on entry level jobs. But my advice as someone with a few career regrets would be this:1) Only go to college if you feel ready to give school your full attention. It is relatively easy to fuck around for 4 years and walk out with a degree. But if you limp your way through a STEM degree without fully internalizing the content and setting aside time for relevant clubs and student associations, you're not getting much more than debt out of school.There are plenty of things you can do in the mean-time if you want to focus on being young for a little while.2) Only go into a major you actually have some passion for. Engineering is a lifelong grind. You need to always be learning new things, taking classes, and skilling up. A lot of people in software burn out or decay because it's too draining to grind something you hate.3) The most important thing your college gives you access to is not the degree. It is professional work experience through internships and co-ops. Your entire college career should be centered around securing as much work experience as possible as early as possible. A college degree without at least 9 months of work experience is borderline worthless.",AHistoricalFigure,2025-07-30 20:14:22,8,cscareerquestions,t3_1mdgdxa,False,
n64a1jz,"Major in something you want to do for the rest of your life. Try it out in school. If you don’t find it rewarding, switch to something you do. Now is the time to experiment with what you like doing - something that calls to you. If you enroll in something just for the money, the people that have passion for the job are going to eat you alive.Took me two rejections from Dental school to figure that out. I always loved coding, and now I don’t do anything I don’t love doing at work.",oishii_33,2025-07-31 06:08:10,4,cscareerquestions,t3_1mdgdxa,False,
n64kt1s,"People who enrolled into CS majors four years ago expected to graduate into the market they started their degree in. What they got is a terrible market. It may be the complete opposite for you, literally none of us can accurately predict this.",Ferovore,2025-07-31 07:47:01,4,cscareerquestions,t3_1mdgdxa,False,
n61iu0d,Reddit is full of salty people who lost their jobs. You'll do fine in CS.,marsman57,2025-07-30 20:16:57,44,cscareerquestions,t3_1mdgdxa,False,
n6mpbp7,With better offers in hand. This way you are able to walk away.,p5phantom,2025-08-03 02:32:53,134,cscareerquestions,t3_1mg803f,False,
n6mqvig,">What’s the right way to negotiate salary as a new grad in this market? with competing offers last year when I was job hunting I went really hard with negotiation because I had several competing offers $150k-200k for mid level in NYC sounds about right, for new grad though... if that's their mid level range, if I'm a new grad I'd probably ask for somewhere between $90-130k, no need to lowball yourself with $80k",NewChameleon,2025-08-03 02:43:10,46,cscareerquestions,t3_1mg803f,False,
n6mp9ru,"Do you have another offer? I would say especially during these times, negotiating without an offer seems like an especially risky move. I think ""fair"" for a new grad if mid is 150-200 is probably around 125k or so, but again, if you don't have another offer, you don't have leverage. They may accept out of the kindness of their hearts if you try to negotiate, or they can always just go to the next lowest bidder for the job. The rest of the factors you mentioned don't really matter IMO, there's a lot of other students who come from similar (or stronger) programs than you, and there's always going to be someone at those schools with a strong GPA.",BlueDragonKorea,2025-08-03 02:32:32,20,cscareerquestions,t3_1mg803f,False,
n6mt6le,"Based on this job market, you should say, “thank you for the generous offer”. You will be in a much stronger negotiating position after you demonstrate that you can do actual work. As far as the commenters who think a new grad should be getting 125K, you are on NYC crack.",Joe_Starbuck,2025-08-03 02:58:50,36,cscareerquestions,t3_1mg803f,False,
n6n66np,"Take the first offer you get, then leave when something better comes along. Don't give them any reason to pass on you. The market is horrible.",Riley_,2025-08-03 04:33:37,4,cscareerquestions,t3_1mg803f,False,
n6o8pzf,"Feel like folks are being a little too snarky by answering ""with competing offers."" It might be the truest answer, but it's not helpful if OP can't get multiple offers at the same time. Lots of people in this market would kill for one offer, let alone multiple and all at once.What does everyone think of this advice for OP: try to avoid giving a number first if he can, but if he really has to give a number, ask for $100k and be content if they counter with $90k? If the company's offering mid-levels $150k to $200k, I feel like $90k to $100k has got to be in the lower range of what they normally offer entry levels.",KiwiCologne,2025-08-03 10:32:54,4,cscareerquestions,t3_1mg803f,False,
n6mqdhc,You never provide a number first. Ask them what range they have in mind.,lightningvolcanoseal,2025-08-03 02:39:50,7,cscareerquestions,t3_1mg803f,False,
n6mtslo,"So, as a new grad (and this applies to anyone without a job), your leverage in negotiating comes in two forms:1. Your next best choice2. Your willingness to walk away from the offerIf you don't have another offer but you have rich parents who will bankroll you until you get a better offer? You have leverage.If you have another offer, you have leverage.If you don't have another offer but don't care about having to crash on a friend's couch and sell feet pics for money, you have leverage.If you don't have another offer and you really want this job and you're not willing to risk losing it, then you don't have leverage.With that in mind, and in this market, you need to be really careful as to how you legitimately negotiate, but you don't have to be that careful in how you position yourself to get the best offer possible.Things you want to do:1. Try not to give a number first. If they ask you for a number, ask what their range is. If they don't want to tell you and refuse to keep going without a number, you might have to give it to them - but even then, you can say ""I'm looking for $X, but I'm flexible depending on what the job, team and benefits look like"". Because that gives you the ability to come back later and say you need more.2. Tell them you're at different stages of interviewing with different companies, but this is the opportunity you're most excited about. Because here's what you're trying to balance - you want to make them feel like they have competition, but you don't want to make them feel like you're going to waste their time. Also - if they ask for what companies you're talking to and what stage of conversations you're in, you can straight up lie - and you should. However, you want to make sure that it doesn't sound like you're too far along with anyone else (again, don't want to waste time). But if you're talking about e.g., an on-site interview, feel free to tell them you have an onsite scheduled with Google for the week after. Not only are they not going to doubt you, but also they have no way of confirming or debunking that claim.",dfphd,2025-08-03 03:03:03,2,cscareerquestions,t3_1mg803f,False,
n6myw8w,1. Get multiple offers.2. Figure out what it would take for you to accept each of them over the others.3. Ask for that.,k_dubious,2025-08-03 03:39:01,2,cscareerquestions,t3_1mg803f,False,
n6ofapi,80k is a bit low. I made 96k as a new grad 3.5 years ago in NYC for a f500 company known for low compensation,theflyingma,2025-08-03 11:30:08,1,cscareerquestions,t3_1mg803f,False,
n69xacj,"2023 graduate also struggling to get a job, also did an internship in between. I thought I was the only one (alongside a couple friends) struggling to get a role. Would love to stay connected if you dont mind?",DatEngGirl,2025-08-01 01:44:19,25,cscareerquestions,t3_1mejm3z,False,
n6a3fag,"The entire market is messed up right now because a lot of ""experienced"" programmers are competing for entry level positions with new grads and are filling up all of our interview slots. We interviewed hundreds of recently laid off Microsoft and Amazon employees last month, a lot of whom had 4+ years of experience... And they performed on par or worse than recent grads usually do. We usually offer them entry level positions, which have far lower pay and title, and they still accept them within 24h.",01010101010111000111,2025-08-01 02:21:41,20,cscareerquestions,t3_1mejm3z,False,
n6au8hc,"2021 graduate with 4 years experience and still struggling to find a new job. It was easier getting a job with no experience in 2021 than with 4 years experience in 2025. lol. Also, I noticed interviews have gotten significantly harder now.",NaranjaPollo,2025-08-01 05:33:49,6,cscareerquestions,t3_1mejm3z,False,
n6as18n,Go to career fairs at target schools. A person I know from my college did that and got into google that way.,bindastimes,2025-08-01 05:15:33,5,cscareerquestions,t3_1mejm3z,False,
n6a18xr,"Move to India, then re-apply. You'll have a job in no time.",claydwg,2025-08-01 02:08:22,12,cscareerquestions,t3_1mejm3z,False,
n6a0p0r,"Ae you applying enough? I did some math and your interview rate is about .0008% assuming 11 interviews and 15 applications a day - so about 1 per 1250 apps (ideally should be more, but understandable if employed).Assuming you got to 11 interviews, I think perhaps you should focus on passing the interview? Maybe look into mentorship sessions/mock interviews for both behavioral and technical and try to get some feedback.",yukiel_,2025-08-01 02:05:01,2,cscareerquestions,t3_1mejm3z,False,
n6at6nr,Genuinely just luck. Did a lot of LC grinding while applying. Saw a role that got posted as soon as I refreshed the page and got a recruiter call that way. Otherwise probably wouldn’t have gotten it. Lucky timed page refresh,InfernalSpectre3076,2025-08-01 05:25:03,2,cscareerquestions,t3_1mejm3z,False,
n6b5f9i,Show us your CV,Historical_Flow4296,2025-08-01 07:13:13,2,cscareerquestions,t3_1mejm3z,False,
n6djb86,"Internal referrals.. I took a year off with over 6 YoE and had a hard time getting to a first round interview unless I had a referral from somebody I knew.Think of who you know at any company that has software jobs. Find a job you’re a fit for and then ask that person very nicely if they can refer you. Sometimes they have to give you a referral application, so don’t apply until you ask.The market is virtually impossible for cold application sending unless you’re experienced in exactly what they want. You have to ask people you know for help to get your resume in front of a person.",HideSelfView,2025-08-01 16:29:48,2,cscareerquestions,t3_1mejm3z,False,
n6eu42r,"I followed the r/resume subreddit to make sure my resume was on point (it really wasn’t). Then I started applying to jobs that matched my skills and that I found potentially interesting using LinkedIn and Indeed (not sending applications randomly).Then it was a matter of two months before I found a job, ended up getting 3 offers and settled on the one that had the better work life balance instead of pay, not regretting it so far.It was my first job out of school, but I had a good track record of internships that 100% made the difference.",maxou2727,2025-08-01 20:16:42,2,cscareerquestions,t3_1mejm3z,False,
n5l8egv,"I think there's multiple things here.1. If you work in an AI product company, it's probably a startup with managers that have sales backgrounds. That's a hype bomb, everyone thinks they are building the next google but it's just a chatgpt wrapper. As far as I know, hallucinations are baked into transformers, you can contain it, but you need a different approach if you want to be sure it's not happening anymore. So as long as hallucinations are a part of LLMs, a human will have to check the output all the time, ao SWEs are not going anywhere.2. The SWE market in eastern europe is shifting. For a long time this was an outsourcing hub, nowadays it""s shifting towards product companies. So there will be SWE jobs in bug tech and startups.",Jijelinios,2025-07-28 11:17:39,57,cscareerquestions,t3_1mbcovz,False,
n5lc99i,"Sounds like you’re more aligned with your long-term goals now than you were before. You’ve already got great credentials: a strong academic background, Big Tech experience, and a thoughtful understanding of what you don’t want (which is huge, especially early in your career). Plenty of people end up stuck in roles that don’t match their strengths just because they’re afraid to pivot.As for those comments from managers warning you about AI replacing software engineers. Honestly, take it with a grain of salt. Most of the loudest voices predicting the ""end of software engineering"" aren’t engineers themselves and are often coming from a business lens where disruption = fear. But if you’re in engineering, you can already see what’s really happening. AI is changing the way engineers work, not eliminating the need for them. Sure, some lower-level tasks are getting automated, but that just means the bar is shifting toward people who understand AI systems, prompt engineering, model integration, performance tuning, security, ethics, etc. You’re positioning yourself exactly in that space.Also, the fact that your new role is in AI software engineering? That’s one of the most resilient and high-impact areas to be in right now. There’s still a massive shortage of engineers who can build, scale, and fine-tune AI products responsibly.",Content-Ad3653,2025-07-28 11:46:08,9,cscareerquestions,t3_1mbcovz,False,
n5lk65g,"You lost me at ""Hi, I'm 25""Software Engineering isn't going anywhere, and you're young enough that you could start over again several times over.Some advice. Random people telling you that AI is taking your job is like me telling a chef that the air fryer will take away their job...",EnderMB,2025-07-28 12:38:07,23,cscareerquestions,t3_1mbcovz,False,
n5ln5zs,You're good. End up not liking engineering or jobs hard to find? You've set yourself up with great experience to pivot to a sales engineer. I wouldn't worry too much,MCFRESH01,2025-07-28 12:56:09,6,cscareerquestions,t3_1mbcovz,False,
n5nn6y9,"These people are ignorant at best and morons at worst. An ML/AI role is the perfect place to be positioned. Even if certain software engineering functions can be replaced by ML/AI, the people who understand the models and can implement them will be the last to go, and if that time ever does come, they'll probably be held on in some sort of process management role.",marsman57,2025-07-28 18:44:54,3,cscareerquestions,t3_1mbcovz,False,
n5ma2gy,Only people who are far from tech roles can say that AI will replace SWEs with such certainty. This is not true. You’ll be fine as long as you are flexible and always learn to meet changing market demands,Easy_Language_3186,2025-07-28 14:55:56,2,cscareerquestions,t3_1mbcovz,False,
n5r1naw,"Honestly, sounds like you made the right call for yourself—being in a role you enjoy matters way more than what some non-engineering managers say. The future for SWE (especially in AI) still looks solid if you keep learning",Dependent_Gur1387,2025-07-29 06:48:47,1,cscareerquestions,t3_1mbcovz,False,
n5nkoo4,"I would say that, yes, I think sales is a much better path. Also, Southern Europe is much safer in the context of WW3",alexifua,2025-07-28 18:32:59,0,cscareerquestions,t3_1mbcovz,False,
n5lwhdf,"Less likely for AI to replace sales jobs than dev jobs. Plus tech sales can be very lucrative. I have a couple of friends at Oracle and Microsoft. Every time we chat I kick myself for not having gone that route, lol. Don't get me wrong I do just fine for myself. But these dudes probably make twice what I make and work 1/3 as much.",Early-Surround7413,2025-07-28 13:48:06,0,cscareerquestions,t3_1mbcovz,False,
n6ktste,"It will be pretty overwhelming the first few months. That's expected and it doesn't mean you're an imposter.You will be confused, feel stupid, and need a lot of hand holding to even finish your first few tasks.Again, all normal. So don't get discouraged. Instead, continue learning, asking questions and being a likable person. It will all start clicking in a few months.",Easy_Aioli9376,2025-08-02 19:52:31,19,cscareerquestions,t3_1mfz90j,False,
n6kur5s,"The coding is the same but the communication is everything. Think about when to ask for help, when to ask for feedback, how to sync",Haunting_Welder,2025-08-02 19:57:51,12,cscareerquestions,t3_1mfz90j,False,
n6l43ch,"Congratulations!My general advice -Your first few weeks might involve being given some random small tasks or bugs to look at. Work on those, ask quesitons, etc but at the same time: \- Learn the version control system / branching strategy / release schedule / rollback policies etc better than anyone else in the organization. You'll find that most people are fuzzy on large parts of it and you'll be able to solve and prevent many problems simply by not being fuzzy.\- Find out where all the documentation is and start reading it. It will be of varying quality and often out of date but get comfortable with the org's business, architecture, network infrastructure, personnel structure, etc.\- Talk to as many people as you can, in all roles and departments. Learn what they do. You will eventually save someone from a million dollar mistake because you will have awareness of things that no one else does. Make people like you and see you as useful. You will get many more opportunities that way.\- Learn your tools and technology stack deeply. In the AI era it's more important than ever. It just takes a few books. Learn everything about Java, be able to talk about the major features that were added at various milestones and why you would use them. Same with Spring or whatever else you're using.",nsxwolf,2025-08-02 20:48:57,3,cscareerquestions,t3_1mfz90j,False,
n6m333f,"Here is a list of topics that you could play around with. You might not have to directly work on these topics, but knowing how they work adds clarity. Just being more knowledgeable in general is the biggest lever for success IMO, it frees up brainpower. Maven springboot jenkins github webhooks / actionsMETA-INF folderjar -tf",solid_soup_go_boop,2025-08-03 00:11:19,2,cscareerquestions,t3_1mfz90j,False,
n6lyoed,If it's java I'm guessing you will be using Spring Boot? I would start looking at that and following a few of their simple tutorials on their site.,mleclerc182,2025-08-02 23:44:29,1,cscareerquestions,t3_1mfz90j,False,
n6ohijy,Get ready to see that all that time you spent learning how to solve LeetCode problems is basically being thrown out the window because you won't use 98% of what you learned.Gz on getting your foot in the door!,Fun-Meringue-732,2025-08-03 11:47:44,1,cscareerquestions,t3_1mfz90j,False,
n6m2il2,What are some books you recommend?,russiakun,2025-08-03 00:07:47,1,cscareerquestions,t1_n6l43ch,False,
n6ojb59,I'm aware of that ! But OOP woulr still be a very critical part of the job no?,Aggressive-Slice-179,2025-08-03 12:01:26,1,cscareerquestions,t1_n6ohijy,True,
n6rsvcs,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-08-03 22:30:20,1,cscareerquestions,t1_n6rsva5,False,moderator
n68rnnc,2 years off? you mean that time you were running a successful freelance business?,octocode,2025-07-31 21:50:03,187,cscareerquestions,t3_1meeikn,False,
n68xnef,"Not a dealbreaker with the 6 YoE. I personally don't even ask questions about gaps. Could be anything, sick parent, health issues. i.e. stuff that's none of my business",Primary-Walrus-5623,2025-07-31 22:20:32,44,cscareerquestions,t3_1meeikn,False,
n68yx3e,Anyone running an actual business can talk about it at length. There are tons of challenges and strategies that can be discussed in an interview.,oalbrecht,2025-07-31 22:27:09,12,cscareerquestions,t3_1meeikn,False,
n68znkk,"I have a coworker who took a year off after layoffs (from FAANG though) and came back with no issues 6-8 months ago, so I'm guessing 2 won't be much worse, plus as others said you can list your business as a job.",Landya,2025-07-31 22:31:02,10,cscareerquestions,t3_1meeikn,False,
n6brh48,You didn't take 2 years off. You were trying to build your own start-up as CTO. change it to your resume.,Cokemax1,2025-08-01 10:37:13,5,cscareerquestions,t3_1meeikn,False,
n69kli0,"LOL, Exactly. Got it now!",Andydaltonblowhard,2025-08-01 00:28:49,1,cscareerquestions,t3_1meeikn,False,
n6eiyz0,nah mate you cant come back. Rules are rules.,CardinalHijack,2025-08-01 19:21:06,1,cscareerquestions,t3_1meeikn,False,
n68spck,Exactly. Phrase it correctly and it's actually pretty impressive. This is not what I would call a gap at all.,ObeseBumblebee,2025-07-31 21:55:23,58,cscareerquestions,t1_n68rnnc,False,
n68tddg,"Hypothetically, how do you prove that sort of thing when recruiters or hiring managers ask for details? Also doesn’t it show in a background check?",goro-n,2025-07-31 21:58:43,9,cscareerquestions,t1_n68rnnc,False,
n5vte3u,"My read from keeping tabs with my network (about half SWE, half data whatevers): it's not quite as bad as Reddit makes it sound, especially if you're both experienced and have the right degree(s), but it's still bad.",cy_kelly,2025-07-29 23:11:17,26,cscareerquestions,t3_1mcpukl,False,
n5x0g5x,"It's bad enough. 6 months of unemployment is absolutely normal in this market, and you should expect that going into your job search. Hopefully not that long, but don't be surprised if it happens to you.",Illustrious-Pound266,2025-07-30 03:22:43,9,cscareerquestions,t3_1mcpukl,False,
n5vo719,"It's not as bad as last year and it is getting a bit better, but i just went through it. It took me 3 months to get a job but even then I got lucky. It was a lot of applications (in the hundreds) and only like 4 interviews I got out of it. It's not great. Basically expect to be unemployed for 3-6 months. I think you should go in with a plan and just start right away with the applications because companies are taking forever to respond. Then after 2-3 months if you dont have much going on, be ok with starting a contract or something.",Broad-Cranberry-9050,2025-07-29 22:43:22,37,cscareerquestions,t3_1mcpukl,False,
n5xq4b1,"I’m a C# dev and it took me about 6 weeks to get an offer after my fed contract was DOGE’d. I got pretty dang lucky though that the perfect job was posted at the perfect time. It’s not nearly as bad as this sub makes it seem, especially those with a handful of YOE under their belt. Don’t wait till the last day to start though. Get your resume sorted, brush up on leetcode, and start applying.",AdMental1387,2025-07-30 06:49:05,8,cscareerquestions,t3_1mcpukl,False,
n5vssx8,"C# and 6 years is probably gonna be okay, but still a few months. I have 8 years web development (mostly frontend) and took about 2.5 months to get a job. Time of the year also matters a lot—Id rather be unemployed now than Q4.",aeroplanessky,2025-07-29 23:08:08,7,cscareerquestions,t3_1mcpukl,False,
n5wqq4j,"was actively doing job search last year back when I got laid off, I was doing on average ~4 interviews a day (or 15-20 a week) and ended up with several competing offers, including several big techs so, not very bad in my view",NewChameleon,2025-07-30 02:21:08,5,cscareerquestions,t3_1mcpukl,False,
n5vu7ox,"Not sure, been employed for 8 years with a 1 week break and 5 years before that. I interviewed once 3 years ago to get leverage for a large pay adjustment... worked out well.My team hasnt been hiring for a while but other engineering teams are onboarding every few months. Seems OK from that perspective.",-Dargs,2025-07-29 23:15:40,2,cscareerquestions,t3_1mcpukl,False,
n5wxqj8,"Start applying, only way to find out",TheNewOP,2025-07-30 03:04:55,2,cscareerquestions,t3_1mcpukl,False,
n5wjjb2,If you’re an American citizen trying to work in US it’s close to impossible to find a job. Unless we can send all the visa workers home and not bring any more in it’s time to switch careers. Any place that is hiring will have thousands of applicants.,Nofanta,2025-07-30 01:39:20,6,cscareerquestions,t3_1mcpukl,False,
n5x0695,It sucks ass. But I think it might be getting better.,cs_pewpew,2025-07-30 03:20:54,2,cscareerquestions,t3_1mcpukl,False,
n69894x,"First, learn how to code yourself. Make apps and stuff. Do not use AI to code for you until you can build a full-stack application yourself.Then, learn how to use coding agents (like Claude, Copilot, Gemini Cli, etc) to speed up the boring/tedious parts of development (i.e. boilerplate code).Use things like ChatGPT/Deepseek/etc to speed up your research.Do not use AI as a replacement for knowledge gaps, instead use it to fill those gaps faster.",polymorphicshade,2025-07-31 23:18:10,52,cscareerquestions,t3_1megjkj,False,
n698hef,"I think it means learn how to work with AI to help you when you do something but don't rely on AI to give you the code for reasons, one you will never be a better developer if you always copy, paste and run, second AI is not smarter than a human In other words, use it as a tool where possible",HeavyAd9463,2025-07-31 23:19:27,4,cscareerquestions,t3_1megjkj,False,
n69boi4,"A big part of learning to use AI tools means knowing *when* to use AI and when to code it yourself. For example, basic code that you would just copy/paste from documentation and tutorials can be written with AI (because that's basically what the AI is doing anyway).You also need to know how to read and debug the code that the AI produces. This is VERY important because AI tools are good at spitting out code that looks like it works, but if you can't understand what it did then you should absolutely not use that code in anything important.",emetcalf,2025-07-31 23:37:24,3,cscareerquestions,t3_1megjkj,False,
n69hte7,Just get an intuitive sense for what you can ask of it. Having an agent in you're ide is helpful for the context it gets. Yeah it's mainly a mantra to encourage adaptation though.,solid_soup_go_boop,2025-08-01 00:12:39,2,cscareerquestions,t3_1megjkj,False,
n6aan4l,If you don't use it at all you are leaving productivity on the table and will be outproduced.If you copy paste everything that AI spits out you are redundant and will be completely unable to tell when the AI is feeding you horseshit and be completely unable to fix it when said horseshit hits the fan.Learning to use the AI tools is figuring out where to draw the line.,leagcy,2025-08-01 03:07:47,2,cscareerquestions,t3_1megjkj,False,
n6981dh,"“Please work hard to make yourself obsolete. We don’t know how to actually make AI do your job effectively, so we need you to do it.”",Doub1eVision,2025-07-31 23:16:59,6,cscareerquestions,t3_1megjkj,False,
n6994kv,"Cursor is a good place to start. How to prompt it to get what you want and avoid going down rabbit holes or ending up with unmanageable slop. After that considering working with Claude Code (or one of the desktop apps), adding some MCP servers, and configuring some sub agents. I find this useful for taking a first pass on tasks which I then tidy up manually / in cursor.If you work on UX working with Vervel, bolt, or magic patterns can be useful for vibe coding prototypes to spin things up.If you want to get fancy you can try running a model locally or using open source alternatives (eg Qwen) to get some of these capabilities without having to pay - with the assumption you have a place to run the model.Second what others have said. If you want it learn something you have to do it yourself. Offloading to AI does *not* help you learn though it may enable you to do things you couldn’t otherwise do. Eg we have PMs at my company who are able to prototype their own solutions and even moon light as devs on simple tickets when short staffed. They aren’t learning how to dev. But they are learning how to get things done and, assuming they are given appropriate parameters to not create extra work for everyone else, this has been valuable for the team",DeliriousPrecarious,2025-07-31 23:23:01,3,cscareerquestions,t3_1megjkj,False,
n69xsio,"There is nothing else to learn. That’s just it. The executives are talking out of their asses right now. A bunch of companies are selling them the idea of digital slaves. And the capitalists love that, because they’re capitalists. They love money and hate you.",thephotoman,2025-08-01 01:47:25,1,cscareerquestions,t3_1megjkj,False,
n6bdsb0,"Copy-paste is fine for small functions, but LLM-enabled IDEs can search your whole codebase to see how things fit together as a whole.",The_Other_David,2025-08-01 08:31:29,1,cscareerquestions,t3_1megjkj,False,
n6qzs7x,"It means to vibe with the code like Satya. It means to embrace the slop and mediocrity. It means to stifle any unique thought in your brain.On the plus side, you’ll appreciate generic inoffensive action movie #455 more. And laugh your remaining brains out at generic sitcom #677. You’ll love it!",Traditional-Hall-591,2025-08-03 19:57:29,1,cscareerquestions,t3_1megjkj,False,
n5jmxy7,"Real talk, just lie and say you're full stack. Go to interviews and tell them you're fullstack, change your resume and tell them you're full stack.",Few-Artichoke-7593,2025-07-28 02:59:11,118,cscareerquestions,t3_1mb4vsr,False,
n5jqn7r,I was like you and aggressively asked my manager if I could pick up more backend tickets last year. Now I’m full stack but still learning more backend as I go,cwolker,2025-07-28 03:24:43,17,cscareerquestions,t3_1mb4vsr,False,
n5jqwbf,Do you have a CS degree or at least the knowledge that comes with one?Backend is just regular programming. Generalist software engineering skills open the door to it. Do you have that?,kevinossia,2025-07-28 03:26:33,5,cscareerquestions,t3_1mb4vsr,False,
n5npy4w,"Apply for full stack. If you get to an interview, you will find that a lot of full stack engineers don't like picking up front end tickets and will be glad to have someone who is an expert in those, but can still pick up backend tickets.",marsman57,2025-07-28 18:58:02,3,cscareerquestions,t3_1mb4vsr,False,
n5jre1q,"Currently a 1yoe backend engineer and hiring new grad - 3 yoe backend engineer for my team.We ask questions what’s OOP, what’s an API, SQL joins, any experience in backend programming? We dive deeper in each topic depending on candidate’s experience and high level concepts to see how they think.Surprisingly, we interviewed around 8 people and none passed. These were candidates from good schools or interned at like TikTok, Samsung, Microsoft.",BronnyJamesFan,2025-07-28 03:30:01,4,cscareerquestions,t3_1mb4vsr,False,
n5jwemv,In my experience I seen more openings for front end. So thought easier for you to find jobs. Have you applied to full stack positions? When it comes to interviews just say you want to code in TS,thatsreallynotme,2025-07-28 04:06:40,2,cscareerquestions,t3_1mb4vsr,False,
n5k9oyb,"You just break in, bro. Say you know things by knowing what is asked in back end interviews. Then hope that things work out for you.",ser_jaime95,2025-07-28 05:56:50,2,cscareerquestions,t3_1mb4vsr,False,
n5kz09c,"Your transition from frontend to backend is absolutely doable with 9+ years of experience, but you need to reframe how you're approaching it. The biggest mistake would be positioning yourself as a career changer when you're actually a seasoned developer expanding your skill set. Your deep understanding of how applications work from the client side gives you a massive advantage in backend development because you understand the full picture of how data flows and what the frontend actually needs. Companies should see you as someone who can build APIs that actually make sense for the consuming applications, not just someone learning Java from scratch.The interview struggle you're facing is real and frustrating, but there are ways around the traditional leetcode gauntlet. Target smaller companies and startups where you can often get in front of actual engineering managers who care more about your ability to solve real problems than your ability to reverse a binary tree under pressure. Focus on companies that do practical coding exercises or take-home projects instead of whiteboard sessions. Your strength in systems design and high-level thinking is incredibly valuable, especially for backend roles where understanding architecture matters more than memorizing algorithms. Some companies do hire based on these skills alone, particularly in more senior positions where they expect you to learn the specific technical details on the job.I actually work on [AI interview helper](http://interviews.chat) to navigate exactly these kinds of tricky interview situations where you need to showcase your transferable skills and handle technical questions that might be outside your current wheelhouse.",akornato,2025-07-28 09:58:07,2,cscareerquestions,t3_1mb4vsr,False,
n5nuc9c,"If you're serious about switching to back-end, build a solid portfolio with real-world back-end projects. For example, set up APIs, work on database management, or contribute to open-source back-end projects. When hiring managers see real-world applications of your back-end skills, it makes a strong case for your transition.",Moist_Leadership_838,2025-07-28 19:19:21,2,cscareerquestions,t3_1mb4vsr,False,
n6rfrty,"Nah, I've interviewed a bit and it's wild what companies want right now. I had to design and code a rag chatbot in 45 mins for a normal non-six figures AI/ML job. Another gave me 2 lc hards to do in 90 mins and I had to record myself doing this. I cried and wrote ""This is not why I became a coder"" and submitted that.If this is what the market is right now I'm happy chilling in my job.I consider myself pretty well up to date on all things LLMs, certainly not a bad coder.. but like, who interviews like this? I have 9 years of experience myself, built entire platforms and systems and know what impacts a company's bottom line. I've deployed pretty much every model that exists from your nans calorie counter to a chunky transformer. Miss me with this market tbh.",MyBossIsOnReddit,2025-08-03 21:18:44,22,cscareerquestions,t3_1mgtp2b,False,
n6r7pc2,"Nah I don't think so, I would keep doing what you're doing.While the 100 million dollar salaries are enticing, those belong to the people who have been working on that stuff for years, not the dude going into CS now or even those starting their PhDs.I anticipate there will be an enormous bust cycle just like there was for full stack SWE and those just getting in will be holding the bag big time.",roleplay_oedipus_rex,2025-08-03 20:37:34,30,cscareerquestions,t3_1mgtp2b,False,
n6r9ov4,Depends. Do you want join the temporary industry grift and make bank or stay in a stable field?Ask yourself why it is tech industry pushing LLMs and not consumers.,EnvyLeague,2025-08-03 20:47:30,20,cscareerquestions,t3_1mgtp2b,False,
n6r7mbw,"You don't have to follow the latest and greatest, but these are tools that are integral to some modern apps and use cases. Not just to write code but to use as the underlying system of the apps we build. You need to know what is possible, what system design around these tools look like and what their limitations are. At least the basics, like embeddings/vectors, RAG, how agents work with tools, how context engineering work etc If you don't know all of that now you are fine for a bit longer, but start to dabble at least so you're not starting from scratch when you have to work on a project involving the tech. Because you will sooner or later.",phoenixmatrix,2025-08-03 20:37:09,13,cscareerquestions,t3_1mgtp2b,False,
n6r9qnb,"Given the amount of money being thrown around, yes.Honestly, the entire tech industry is morally bankrupt and racing to the bottom. AI is coming for all of our jobs, and anyone not trying to jump on the hype train is doing themselves a finanical disservice.It's mostly a hype bubble. Some of the tech is legit. But it's a VC funded hype bubble. There's going to be a lot of losers in a few years. And imo, that VC money is way better off in the hands of average engineers like you or I.I say take a stab at it. You have the credentials, both academic and professional. And you could probably ask for some ridiculous pay/options/stock contracts.You literally have everything to gain and nothing to lose seeing as you have stable employment. My general take: if you have the skills and the ability to do so, get aboard the hype train while money grows on trees, get your bag, and gtfo.",leroy_hoffenfeffer,2025-08-03 20:47:45,10,cscareerquestions,t3_1mgtp2b,False,
n6rt1rv,"AI is not a grift. Don't listen to those folks. You have to understand that a lot of people on here want AI to fail because they are afraid it will take their jobs. So that's why they describe it as mere hype and grift. They tell themselves this because they want it to be true.But I don't think you need to get into LLMs to have a good career. However, as I am in the field myself, more and more of your projects will probably increasingly have some kind of LLM component. At a certain point, you'd actively have to avoid LLMs if you want to stay in ML but not work on them, which might limit your opportunities.",Illustrious-Pound266,2025-08-03 22:31:20,3,cscareerquestions,t3_1mgtp2b,False,
n6rc9us,"You don't have to literally use a specific tool or tech stack, but transformers and RLHF are state of the art for a wide swathe of ML problem domains. You need to understand the architectures and training techniques, but probably not any specific API or langchain and stuff",vanishing_grad,2025-08-03 21:00:34,1,cscareerquestions,t3_1mgtp2b,False,
n6rezvu,A little bit unrelated but I’m curious about the part time PhD your doing. Are you doing it through work and still in the MLE field?,ishadyj,2025-08-03 21:14:40,1,cscareerquestions,t3_1mgtp2b,False,
n6s2pom,"If you want to work at big techy firms then yes you will probably eventually need to work with LLMs. Going forward a big part of machine learning at these companies will involve embedding multimedia data into vectors that can be used as features in supervised models. It’s hard to say if you’re screwing yourself over or not though. Working with LLM APIs is pretty easy. My sense is if you want to transition from on device ML to cloud based ML there will probably be a bunch of skills you need to pick up, working with LLMs being one of them. So I wouldn’t over index on them too much.",light-triad,2025-08-03 23:26:18,1,cscareerquestions,t3_1mgtp2b,False,
n6r9pt6,You're screwing yourself out of frustration and confusion as the dissonance between hype and reality sets in.,stevefuzz,2025-08-03 20:47:38,-1,cscareerquestions,t3_1mgtp2b,False,
n6cfy0z,"1. Get good at your current job. Buy the textbook for JS and read it cover to cover. It sounds boring but you really get a deep understanding of JS. You'd be shocked at the amount of JS devs who dont understand the call stack and event loop or don't know if js is a dynamically or statically typed language LOL2. Get good at DSA. Identity patterns and solve 2-3 mediums and 1 hard leetcode a week3. Get good at architecture. Buy the Alex Xu book and do some mock interviews. Maybe set up a server at home with redis since you're primary a front end. Cloud certs are just an extension of this. The AWS solutions architect exam is literally 65ish system design questions with an Amazon flair. 4. Get good at soft skills. I recommend ""Grow: the essential guide to get promoted"". It's a 2 hour read and has been Invaluable to my career. Simply being active in meetings and sending follow up emails in the format of this book allowed me to lead projects early in my career 1 and 4 can be done in a few months. Getting good at DSA is a lifelong skill unfortunately. Everything you mentioned (devops, cicd, etc) is built on this foundation. It's not sexy at all but being good at the fundamentals is more important than learning the latest framework.",Reasonable_Bunch_458,2025-08-01 13:17:25,41,cscareerquestions,t3_1meuds6,False,
n6c7ck9,AI and DevOps are both valuable skill areas that are well worth learning in depth.,New_Reference4564,2025-08-01 12:28:03,19,cscareerquestions,t3_1meuds6,False,
n6daild,"""soft"" skills like communication, humility, empathy, critical thinking, executive presence. Make yourself as a human being someone that people like working with.",Xenadon,2025-08-01 15:47:45,6,cscareerquestions,t3_1meuds6,False,
n6ecao0,SDE skills are overrated since you’ll just pick those up on your job anyways. Leetcode and system design skills to get high TC triumphs studying SDE skills on your own any day,CucumberChoice5583,2025-08-01 18:48:19,4,cscareerquestions,t3_1meuds6,False,
n6dbsxh,"TypeScriptTesting (unit + e2e)DevOps basics (CI/CD, Docker)System design (Alex Xu + home projects)Soft skills (read GROW)",No3Mc,2025-08-01 15:53:49,2,cscareerquestions,t3_1meuds6,False,
n6h3l1g,Architecture,ninseicowboy,2025-08-02 04:21:20,2,cscareerquestions,t3_1meuds6,False,
n6h7kg3,Learn more about the industry you are working in. Putting some more keywords on your resume isn't as valuable as understanding how technology is used within the finance sector.,rmullig2,2025-08-02 04:52:51,1,cscareerquestions,t3_1meuds6,False,
n6mikdh,How to install gutters,hopfield,2025-08-03 01:49:38,1,cscareerquestions,t3_1meuds6,False,
n6d9zsb,"I've been a full stack (but mostly back end) dev for over 10 years now. I primarily work in the microsoft ecosystem. While I am by no means a bad dev, I'm not a strong dev either. Soft skills have carried me through the early parts of my career.Being someone who's even remotely competent and NOT an asshole, NOT someone who people need to constantly check up on to make sure they're doing something... someone who communicates effectively and often enough are at least half the battle.I've worked at 3 different companies in that span. The two universal truths are that your largest raises come when you change jobs and outside of someone being the only one who has critical domain knowledge.... no amount of being a technical powerhouse will offset being an asshole. I've seen some insanely talented devs get shown the door because they were just absolutely awful to work with both directly and indirectly. Just having them on the team was like a cancer. In one case, it took a lot longer than it should have, but eventually they were let go. In the others, it happened pretty fast.The people I work with now are all very strong devs. They are very happy to help me when I need it, explain things to me so I can learn and grow, and are patient with me. That's because I try, I put the time and effort in and I communicate. A lot of them have said they'd rather teach a great team mate to do the job than work with an asshole team mate who can knock the work out of the park but you can't stand being around them.TL;DR - Don't be a dick. Do your job. Be polite, friendly and communicate often. Be personable. Those things plus half of a clue as to what is going on technically will get you far.",Any-Neat5158,2025-08-01 15:45:15,9,cscareerquestions,t1_n6cfy0z,False,
n6d5cvg,"On point 2, is it that important? I’ve never ever used a linked list, binary tree or DS in my job in one year. Or it is more for interviews and so on? Just curious do you use DSA in your job?",Negative_Highlight99,2025-08-01 15:23:07,3,cscareerquestions,t1_n6cfy0z,True,
n5uf5j7,"I work with people. Not their results. If I don't want to work with you, I don't want to work with you. Soft skills are much harder to develop. So I'll take the candidate with the better soft skills every time. Is the code solution binary?  Do you believe all that matters is the result, and the implementation irrelevant?That tells me a lot about your coding ability, and it's not painting a pretty picture.",drunkondata,2025-07-29 19:03:56,32,cscareerquestions,t3_1mcjeqk,False,
n5u8vzi,"Depends on the job specifically, but as a manger I disagree. Multiple people are going to pass the coding challenge most likely -- I can't hire you if I don't feel like I can work with you.",kmed1717,2025-07-29 18:34:57,25,cscareerquestions,t3_1mcjeqk,False,
n5uafts,">In my opinion the coding section is the most important as it is a very binary result. If you didn’t get the solution you failed the interview.I dont think it's as binary as you think. For me when I've taken coding interviews, i've gotten jobs at major companies when I dont even get the question entierely right. If im in the ball park and my explanation as to why I got there is correct, i've impressed the interviewer. There's def been times I didnt get the answer but I also realized my mistake or didnt and said ""my next idea would be to do XYZ since this didnt work"". For me all 3 are just as important but the more Jr you are the more the coding interview should matter. The more Senior you are the more leadership and system design should matter. Because as a Jr it's important to know how to code and learn system design within the company, as a principal it's more important to know design/leadership over code. Seniors and mid-level need to know more about leadership/system design than Jrs but less than principals. So for percentages id say:Jrs - 80% coding, 15% System, 5% leaderMid-level - 65% coding 25% system, 10% leaderSenior - 40% coding 30% system, 30% leaderPrincipal - 20% coding, 40% system, 40% leaderThe higher you go in this career the less you code so for a principal coding shouldnt be important because at that point it's assumed you already know.",Broad-Cranberry-9050,2025-07-29 18:42:08,8,cscareerquestions,t3_1mcjeqk,False,
n5uoz7y,"I can tell you last year when I was job hunting one of the written offer I received I know for a fact that I did not fully pass the coding portion (it was a LC-hard in ~40min), explained logic and only managed to write partial code, the different interviewers were clearly satisfied with the overall performance (coding + system design + behavioral) during the debrief to extend offer anyway so, the answer isn't as clear as you think on which part is ""most important""",NewChameleon,2025-07-29 19:50:42,7,cscareerquestions,t3_1mcjeqk,False,
n5v38l8,This post has been removed. Sorry for the inconvenience! 0.0.2.1,SamWest98,2025-07-29 20:57:25,6,cscareerquestions,t3_1mcjeqk,False,
n5urei5,"I've interviewed a lot of developers. It is NOT a binary result.I tend to ask 3-6 questions of increasing difficulty. I'd say most people we've hired didn't finish all of them.It's all about seeing how you think about the questions, what solutions come to mind, and your ability to collaborate and think clearly because I'll help the candidates. For example, they might think of a straightforward brute force approach and we start with that, then I indicate towards a way they might be able to make it more efficient and see if they catch on and can take the hint and follow it to a better solution.It's also to account for people have one or two 'bad questions', like basically having a mental blank on one. You can mess up on the easiest question and still pass the interview (not common depending on how badly you mess up on the simplest question, but the point is it's not pass/fail).",StrangelyBrown,2025-07-29 20:02:07,5,cscareerquestions,t3_1mcjeqk,False,
n5v68ut,Do not listen to this advice.There are too many engineers that have zero people skills. People skills are hugely valuable.,ProfessorMiserable76,2025-07-29 21:11:40,4,cscareerquestions,t3_1mcjeqk,False,
n5v6rbi,"In my 15 YOE coding skills are less important on the job. Most people want to work with SWEs that work well together. The average coder is probably going to be fine as long as they can take feedback well.In an interview meeting the company specific hiring bar for coding is very important. You can have the best social skills in the world, if you don't show you meet the bar for coding you are not going to get the job. This doesn't mean social skills are not important, but I've never met somebody fail the coding portion and still got the job because of social skills. I have met people who excelled in the coding portion and had meh social skills. This is just my experience at non-tech companies in non-tech cities. I cannot comment at working in a tech company as I have never received an offer from one of those companies.",diablo1128,2025-07-29 21:14:09,3,cscareerquestions,t3_1mcjeqk,False,
n5uh9vs,"And this is where so many people go wrong. They overemphasize the coding part of the job when in reality it’s a people/problem-solving game. Coding is important, don’t get me wrong but it’s not the hard part of the job at all",grizltech,2025-07-29 19:13:55,2,cscareerquestions,t3_1mcjeqk,False,
n5uqvtp,Not really. You can pass the coding interview and still not get the job. Happened to me quite often.,Illustrious-Pound266,2025-07-29 19:59:39,2,cscareerquestions,t3_1mcjeqk,False,
n5ula0f,"120 means your team isn’t prioritizing system health at all.My previous job 1 a week, maybe. Current job, 1 - 2 a week",ChickensFloatOverAir,2025-07-29 19:33:02,55,cscareerquestions,t3_1mcijaq,False,
n5uld7o,120 pages is not normal for most jobs no.,chevybow,2025-07-29 19:33:27,43,cscareerquestions,t3_1mcijaq,False,
n5ucw0n,I’m so tired of poor alerts. Most of the alerts I get is not actionable. So why was the alert created?,qrcode23,2025-07-29 18:53:26,18,cscareerquestions,t3_1mcijaq,False,
n5u36yg,"There's really no such thing as normal as it differs wildly from company to company, team to team, product to product etc. With that said, your experience is definitely worse than the average i have personally done, but ive never been part of a tier 0 service. Mine is usually 2-3 high sev pages a day, and maybe 1 incident every other on call. How often is your oncall and is it 24/7 or do you get to switch off at night?",lewlkewl,2025-07-29 18:08:28,12,cscareerquestions,t3_1mcijaq,False,
n5u5fu4,"It differs on project. In my first job it was once a month for a day for major tasks and once every 3 months for 3-4 days for minor incidents. It depends on how well the automation is. I have only done it for 1 project. It wasnt great at first. Most of the automation wasnt built and most major issues came up from the same few things. Because it wasnt automated, we didnt notice until the customer complained and once customer complaned theyd wnat to get on a 3 hour call because they wanted an explanation. Then wehad to write a report to send to them. It sucked.We could get 20 tasks in a day of on-call. Once automation got better, there were less customer complaints and less tasks in general. Most days Id have at most 5, one time I had no incidents and it was like I hit the lotto. But this project was also a major big tech company with customers worldwide. My current company has on-call I have yet to be added to. From what I hear it's one week long. Unless it;'s major incident there is no requirement to fix it until the next business day.",Broad-Cranberry-9050,2025-07-29 18:18:56,3,cscareerquestions,t3_1mcijaq,False,
n69ovhn,"120 can be standard for some Tier 1 AWS teams (Ec2, DynamoDB, etc). People who are saying this is your team’s fault for not prioritizing system health have not worked on services with 9+ 9s of availability guarantee source - worked at amazon",rucksack_of_cheeses,2025-08-01 00:53:40,3,cscareerquestions,t3_1mcijaq,False,
n5ujqme,"I've been called 3 times total on call at my current job, with 2 days a week being expected to be near a phone and able to get back to my machine in ~30 min.All but 1 time was upper management telling me I could go do whatever because we were going into the christmas break.",BellacosePlayer,2025-07-29 19:25:37,2,cscareerquestions,t3_1mcijaq,False,
n5uzbh8,"Depends on the teamUsually when your oncall is that bad you'll have either follow the sun (12 hours of oncall then another team picks it up) or you have 2-3 day rotations so that no one is completely wrecked.For all of the sev 2s that no one cares about, you should be working to get rid of those since no one cares.",termd,2025-07-29 20:39:19,2,cscareerquestions,t3_1mcijaq,False,
n5wzgmw,"My old job was one every couple months, current job is one every other day and it sucks. High double or triple digits is unhinged",zelmak,2025-07-30 03:16:13,2,cscareerquestions,t3_1mcijaq,False,
n5yxu7v,Were the 93 alerts actionable? That is what is most important - did you have to drop what you were doing to mitigate or investigate further…,KratomDemon,2025-07-30 12:50:13,2,cscareerquestions,t3_1mcijaq,False,
n5msh5c,Entry level CS/software jobs are not in high demand while supply of new grads has flooded the entry level market.,Illustrious-Pound266,2025-07-28 16:23:04,31,cscareerquestions,t3_1mbigaj,False,
n5msj2r,"Where did you go to college, IMHO, that matters.I think it is worth it, so long as you are aware just getting the degree is not enough to get a job. You will need to take advantage of whatever resources your college offers to get a job.Whether that is job fairs, company information sessions, hackathons, design/build teams, you need to utilize that as much as you can. That is the difference maker right now.",Drauren,2025-07-28 16:23:20,9,cscareerquestions,t3_1mbigaj,False,
n5mbok0,"Cdl making way more money than the average CS grad, or atleast thats what it seems like from this sub.Edit: Wow my first reddit award :face_holding_back_tears:. I was being sarcastic btw lamao. I myself am a Swe turned PM recently and couldn’t have done it without a cs degree.",DockerKafkaContainer,2025-07-28 15:03:45,14,cscareerquestions,t3_1mbigaj,False,
n5nk77h,Finish your degree. Leverage your domain experience with trucking to get a CS job in a related field. There are plenty of trucker adjacent tech companies.,marsman57,2025-07-28 18:30:40,3,cscareerquestions,t3_1mbigaj,False,
n5ocfap,"Don’t listen to all these doomers on Reddit CS is alive and well and AI is no where near taking over comp sci jobs. Half the people here think that if they can’t get a fang job making 200k right out of college that CS is dead but that is not the reality. You should get your degree and start applying everywhere, with a CS degree you should be able to get a job doing just about anything in technology so just apply everywhere and start getting experience and then focus on finding a specialty you like!",Mundane_Mulberry_545,2025-07-28 20:44:58,3,cscareerquestions,t3_1mbigaj,False,
n5ob8gq,Definitely finish it.,ALAS_POOR_YORICK_LOL,2025-07-28 20:39:23,2,cscareerquestions,t3_1mbigaj,False,
n5qttar,You need to pair your degree with [internships](https://www.levels.fyi/internships/). The ones screaming about not finding employment didn't do them.,GratedBonito,2025-07-29 05:38:00,2,cscareerquestions,t3_1mbigaj,False,
n5ow9u0,Its not in demand anymore dont even bother. Driving trucks is a good job,Comfortable-Insect-7,2025-07-28 22:25:06,4,cscareerquestions,t3_1mbigaj,False,
n5pjpg6,"Ready to join the herd of new grads all begging for work, eh?",MilkChugg,2025-07-29 00:34:35,1,cscareerquestions,t3_1mbigaj,False,
n5qbkm5,Is it too late to switch to an engineering degree?,Kevin_Smithy,2025-07-29 03:20:38,1,cscareerquestions,t3_1mbigaj,False,
n6jyv45,"No it doesn't. Regardless of who refers you, they won't look at your resume",Fun_Highway_8733,2025-08-02 17:04:44,75,cscareerquestions,t3_1mfv428,False,
n6k3t65,"Not usually, unless your mates name is Satya.",BulliedAtMicrosoft,2025-08-02 17:30:06,20,cscareerquestions,t3_1mfv428,False,
n6k6cp4,Everyone applying has a referral from the most senior person they can :) Right now the internal shuffle is going like crazy. If an internal person doesnt take it then someone with a referral will. Think of it as necessary but not really helping you unless they go hunt down the hiring manager etc.,we2deep,2025-08-02 17:43:09,7,cscareerquestions,t3_1mfv428,False,
n6rqeib,you need your referral to reach out to the hiring manager and ask them to look at your resume. the referral portal does nothing. i referred lots of people and the HM never saw their resume. i think only the recruiters see referrals and they have their own candidate pipeline.,Magikarpical,2025-08-03 22:16:22,1,cscareerquestions,t3_1mfv428,False,
n6nto7l,"Yes, because famously Microsoft has never hired anyone ever",SmolLM,2025-08-03 08:04:10,18,cscareerquestions,t1_n6jyv45,False,
n6kldfu,Rip in pieces,m1ndblower,2025-08-02 19:04:55,1,cscareerquestions,t1_n6jyv45,False,
n6kvcnd,And this is nothing new. I’m convinced they’ve never hired anyone who wasn’t a new grad.,Eric848448,2025-08-02 20:01:13,-5,cscareerquestions,t1_n6jyv45,False,
n6s7bw7,It's just a good joke. Of which your response is not. I was referred twice to Microsoft and not as much as phone screened both times. At least one instance I learned that the position was never going to be an outside hire in the first place.,apajx,2025-08-03 23:53:06,1,cscareerquestions,t1_n6nto7l,False,
n6sgs3d,The recruiters seem to actively ignore internal referrals.,megor,2025-08-04 00:49:24,1,cscareerquestions,t1_n6nto7l,False,
n6f8pdz,Sounds like you need to apply elsewhere. This is a toxic environment.,MrSnakeDoctor,2025-08-01 21:30:10,78,cscareerquestions,t3_1mf8skd,False,
n6fw4am,My first job out of college I joined a small bioinformatics research lab. I was there only 10 weeks when my boss says “you don’t know anything do you ?” It was over a small documentation standard I wasn’t aware of. I quit the next day (maybe foolishly- but fuck it) and thought that was it for me in software. Found a software job in defense a month later. I’ve been here two years and am in line for a promotion. I say this because sometimes it’s the environment . If you can find another job- take it. If you don’t and get canned- keep trying.,redditkarma_dotcom,2025-08-01 23:41:08,9,cscareerquestions,t3_1mf8skd,False,
n6f95d4,"I mean, I would at least try another job first. And understand that these people suck. Learn what you can from the experience, but don’t carry too much baggage into the next place.",BelieveInPixieDust,2025-08-01 21:32:33,8,cscareerquestions,t3_1mf8skd,False,
n6fzdt1,"It sounds like the real question is whether you have a communication problem. Seems to be a communication breakdown between yourself, and your tech lead, manager, and HR. There's no way for us to know where that stems from. If you're confident you're communicating clearly, you should start getting instructions in writing as much as possible. If that's not possible, start making your own notes about your conversations with your lead and manager. That said, you claim to be finishing your work, so it's presumably not like you can't program. Give it time, and if you can't get along or communicate clear with the lead and/or manager, look elsewhere. No need to throw in the towel on your career.",Squidalopod,2025-08-02 00:00:10,2,cscareerquestions,t3_1mf8skd,False,
n6g6iag,"And if you didn’t ask for questions and you messed up, they will say why didn’t you ask? :rolling_on_the_floor_laughing:",EffectiveLong,2025-08-02 00:43:47,2,cscareerquestions,t3_1mf8skd,False,
n6gh400,"Yeah, your environment sounds like crap. There's a lot of gatekeepers in tech (for reasons). Most of them are stuck at the entry level jobs because they either a: don't care or b: smell their own farts c: never upskill d: some combiation of a, b and c. My experience is my first job was the worst. I was treated the worst there and it was where I learned to cut my teeth and make it to the next one. Just try to up skill and learn what you can from the position. If you enjoy IT then keep at it. It is only up from here.",travelwithtbone,2025-08-02 01:48:56,2,cscareerquestions,t3_1mf8skd,False,
n6hfltv,"Try another few organisations - for example, 3. If they are all the same and you get the same feedback each time and are managed out, then quit tech.",planetwords,2025-08-02 06:02:00,2,cscareerquestions,t3_1mf8skd,False,
n6flqhd,"This is absolutely a toxic team problem, not a ""you"" problem. Completing all your work without defects or carryover while being told you're struggling is contradictory feedback that makes no sense. Your tech lead sounds unprofessional and possibly threatened by having to mentor someone, which is literally part of senior roles.The fact that you study outside work, use proper question etiquette, take notes, and have certifications shows you're doing everything right. Good developers ask questions, especially early in their careers. A healthy team would encourage this, not punish it. The ""vibes-based"" performance reviews are particularly concerning red flags.Don't let one dysfunctional workplace convince you to abandon an entire career. Most tech teams aren't like this, and your methodical approach suggests you actually have good instincts for the field. Your current situation is damaging your confidence unnecessarily, and the longer you stay, the harder it becomes to remember that this isn't normal or acceptable.Start job searching immediately while you still have income. A service like Applyre might be helpful. When interviewing, ask about mentorship programs, team dynamics, and how they support junior developers. Good companies will have structured onboarding and patient senior developers.",Significant_Soup2558,2025-08-01 22:41:52,2,cscareerquestions,t3_1mf8skd,False,
n6fq6rv,"From your description, your tech leader sucks and should not manage people if his emotional intelligence is so low. Looks like your tech lead is using you as a scapegoat for his incompetence in mentoring. Laughing at someone new to the job, at anyone really, is a sign of emotional immaturity.",Sweet_Witch,2025-08-01 23:07:06,1,cscareerquestions,t3_1mf8skd,False,
n6g8sxe,Get out of there ASAP. Sounds toxic af. You don’t need that,OliveFun3608,2025-08-02 00:57:49,1,cscareerquestions,t3_1mf8skd,False,
n6nby1r,"You could ... ask them? Running over a scheduled meeting is not respecting your time, but start by assuming good intent and talk to them.",WitsBlitz,2025-08-03 05:20:38,41,cscareerquestions,t3_1mgabe5,False,
n6nxgim,">What is this supposed to mean? why don't you ask your mentor as your mentor is the only person who can answer this question, instead of playing guessing game?",NewChameleon,2025-08-03 08:41:35,16,cscareerquestions,t3_1mgabe5,False,
n6nsgma,Mentor does not seem interested in investing their time into you. I'd find a new mentor or a new job.,p5phantom,2025-08-03 07:52:24,4,cscareerquestions,t3_1mgabe5,False,
n6pu216,You walk into the meeting room at your scheduled time.,pandasareprettycool,2025-08-03 16:24:23,6,cscareerquestions,t3_1mgabe5,False,
n6pid02,"Pretty obvious what it means. Your ""mentor"" has no interest in being your mentor.",Early-Surround7413,2025-08-03 15:24:40,2,cscareerquestions,t3_1mgabe5,False,
n6nd2at,Brutal to know they have no faith in you.,Ok-Attention2882,2025-08-03 05:30:11,4,cscareerquestions,t3_1mgabe5,False,
n6pkgay,"Mentor doesnt seem interested, maybe ask to make it monthly/bimonthly if they are still interested",moosebeef888,2025-08-03 15:35:23,1,cscareerquestions,t3_1mgabe5,False,
n6snajp,It doesn't hurt to ask. Making up assumptions in your head only hurts you.,frosty5689,2025-08-04 01:28:19,1,cscareerquestions,t3_1mgabe5,False,
n6q1pw7,"I can just imagine the mentor asking a question about this same situation!""I have a mentor who I meet every week in the same meeting room. I had a meeting in the same room with a colleague, and we were chatting while I waited for my mentor to arrive. After 20 minutes my colleague left, and it was only then that my mentor arrived - why are they 20 minutes late for a meeting that is purely for their benefit?!""",HiddenStoat,2025-08-03 17:03:18,3,cscareerquestions,t1_n6nby1r,False,
n6s7qr1,E4 here so not sure how much I say will relate. 40-50 hrs is reasonable if you are time efficient and are good at identifying what’s actually necessary (80/20 rule). I only work 4-5 hrs/day but with full concentration and make sure I meet all the axis neededCrunch time is hard though. Then I have to ramp up to 60-70hrs/week. This always happens due to leadership coming up with new design that MUST be done ASAP or their general indecisiveness,Puzzleheaded-Moment1,2025-08-03 23:55:31,116,cscareerquestions,t3_1mgyby0,False,
n6s7pfu,"M2? >Hoping there are folks on here with a more balanced perspective uh.... probably 99% of people here can't even secure a E3 offer, I wouldn't hold my breath expecting insightful responses regarding a E7-equivalent role, Blind is better for this type of questions imo",NewChameleon,2025-08-03 23:55:18,117,cscareerquestions,t3_1mgyby0,False,
n6s93k3,Squid Game,StyleFree3085,2025-08-04 00:03:32,37,cscareerquestions,t3_1mgyby0,False,
n6sf7dy,"IC5 here, 7 months in. Pretty toxic culture from what ive experienced, but totally possible to have a 40 hour work week",zergling-,2025-08-04 00:39:54,23,cscareerquestions,t3_1mgyby0,False,
n6shb56,"I was at Meta for about 8 years. So I saw the degradation of the culture from its glory years back in 2017. I took a voluntary severance in 2024 when the opportunity came because of how sick of the company I was. It’s a toxic mess. M2s are middle managers and were hit hard during layoffs The company’s culture is basically hunger games where everyone is constantly fighting for scope. It’s a high stress environment, though you are compensated very well for dealing with the company’s shit. If you value comp over anything else and are willing to learn how to play the games and be cut throat then go for it.",sneak156,2025-08-04 00:52:33,18,cscareerquestions,t3_1mgyby0,False,
n6s9c84,"Do not join unless you know for a fact your D1 loves you or knows you personally and wants you to join.Meta doesn’t hire M2+ externally too often, and has a 20% BE target (though not level specific). M2 is related to org stability and the bar is really high which makes it easy to throw you under the bus.Its not necessarily the hours but if you do join be prepared to earn trust and love from everyone you manage in a very short period of time",blockedbyme,2025-08-04 00:04:58,35,cscareerquestions,t3_1mgyby0,False,
n6s89df,"The WLB is not the issue, it’s just not a good place to be right now. Which area (roughly) would you be joining? Feel free to DM me.",Error401,2025-08-03 23:58:33,27,cscareerquestions,t3_1mgyby0,False,
n6sjeq5,"E6 been here a while, so much is team/org dependent. Ads or any org with significant leadership focus/pressure (currently AI) it might be tough to get by especially while ramping up. In general though especially for an M2 it’s going to depend heavily on your direct leadership chain which hopefully you got some feel for from interviews All that said 40/50 hours is certainly doable but there may be periods where you may need to flex more. I rarely work weekends and more importantly for me currently is it’s flexible. If I need to take a kid to the drs or there’s something in the evening it’s never been an issue, but that might mean I’m putting in a few hours after bed timeLast thing I would add is you definitely need to be honest with yourself, if you’re confident you can prioritize/push back to protect your personal life you’ll be fine. But if you can’t this place will consume as much time from you as it can get",mttddd,2025-08-04 01:04:56,10,cscareerquestions,t3_1mgyby0,False,
n6sjxsf,Blind is a cesspool. Take everything with a large grain of salt.,NorCalAthlete,2025-08-04 01:08:08,3,cscareerquestions,t3_1mgyby0,False,
n6sid8l,I mean isnt Meta like the Harvard of tech jobs. Id take it cuz shit if you get laid off you're less fucked than 95% of the people in the industry,dinidusam,2025-08-04 00:58:48,4,cscareerquestions,t3_1mgyby0,False,
n6qoko9,"A lot of brilliant developers are like this early career. They see mentoring or teaching as slowing themselves down. They often appear impatient when having to decompose their design so others understand it. They either become fou nding members of a new team, or alienate their team to an extent where they get ousted.Some of the best mentors I've seen are mostly average developers, but have the heart of a teacher. They're happy to take time to explain things, lend a second set of eyes, or even just provide feedback. Most of them either taught or tutored outside of work or before they transitioned to tech.",Theo20185,2025-08-03 18:58:24,32,cscareerquestions,t3_1mgr716,False,
n6qr5lf,"I worked at a company where the most productive person was this staff engineer who yelled at everyone else. Not even exaggerating, he literally yelled at others. The manager let him get away with it because he was the golden goose.I had a similar experience at Meta where a teammate was super abrasive and rude (no yelling though). Surprisingly, he had his promo to senior blocked for being an asshole because a staff engineer on the team was fed up with his shit, and our manager listened to this feedback. After that, he actually mellowed out and got better.",Bubbly-Concept1143,2025-08-03 19:11:44,22,cscareerquestions,t3_1mgr716,False,
n6qprfa,"Nobody is born knowing how to hire. The first thing many people do when they don't know better is just look for any reason to disqualify. That said, actual errors in a resume are generally disqualifying. If you can't get the details right in something as high-stakes as getting a job, what will your attention to detail be on the job, day to day? But if they are about not having exactly the desired exposure and experience, it's important for the team to have a discussion about hard-to-learn vs easy-to-learn stuff.",ben-gives-advice,2025-08-03 19:04:31,11,cscareerquestions,t3_1mgr716,False,
n6qwwm3,"All the time.Rarely are brilliant developers brilliant at all things. The more common scenario is that someone is really good at one thing and sucks at everything else, even adjacent programming disciplines. Good ones recognize their shortcomings and are good at learning. Bad one assume they are great at everything and make all sorts of blunders.",Zimgar,2025-08-03 19:42:17,3,cscareerquestions,t3_1mgr716,False,
n6qxnig,"My current boss is an experienced dev. The problem is that software development is nowhere in his current job description, and he steps on the actual developers all the time.",OneOldNerd,2025-08-03 19:46:16,2,cscareerquestions,t3_1mgr716,False,
n6qyiss,"You also could be dealing with someone who's good at projecting an image they're brilliant, but actually is mediocre. Since he's a skilled manipulator, if you put him in the interview loop, he's going vote ""no hire"" for anyone more qualified than him.",fsk,2025-08-03 19:50:50,2,cscareerquestions,t3_1mgr716,False,
n6qz6gt,"I never saw a brilliant developer become a manager but I have seen become a bad team player. They're too smart for their own good and throw their job title morality around and half the people hate them. I got along with one because he hated the people I hated lol.The example I like is the best boxing coach in the world, Freddie Roach, was an average pro boxer. The ability to teach and mentor doesn't have much to do with skill. I see other comment saying something similar.Management is a completely different skillset. Nice if they know how to code but can backfire when they think they know how long things will take.",NewSchoolBoxer,2025-08-03 19:54:18,2,cscareerquestions,t3_1mgr716,False,
n6rgtjq,"Worse, I've seen them sabotaged managers in favor of yes men",SamWest98,2025-08-03 21:24:15,2,cscareerquestions,t3_1mgr716,False,
n6r23lf,"I want to offer some contrarian observations. I have worked with some brilliant and strong ICs that turned to be EMs and they usually weren't the best people persons to start with and took the roles usually out of necessity (previous EM leaves, re-orgs, etc) However, overtime those EMs have became some of the best in both mentoring as well as managing down because their strong technical background and strong desire to succeed (perhaps also wanting to prove they can be better managers after having experienced bad ones themselves). They might not able to move quickly upwards themselves due to disinterests in politics and inability to distance themselves from being technical. Their sincere passion to be better manager usually allows mid-senior engineers to thrive and advance their career quickly.tldr; people ability is also learnable when intelligence and desire demand.",Remote-Blackberry-97,2025-08-03 20:09:27,1,cscareerquestions,t3_1mgr716,False,
n6r5jkp,"People say I'm one of them.I have countless memories of things I said at work that I regret. Being rude, neglecting feelings. The memories keep circling in my head again and again and again and hate myself for it. I really wish I could do better, but everytime I'm little under pressure or tired or whatever, I endup loosing patience and tolerance.",papawish,2025-08-03 20:26:48,1,cscareerquestions,t3_1mgr716,False,
n5neezg,"With an MSCS, you know more about theoretical CS but don't necessarily become more employable or earn more.Knowing more CS can be useful, but working with people (in a production setting), fighting fires (not just bugs, but can also be people) and having an intuition of which problems to solve and which not to, are stuff you can't really learn in school. You have to experience it.Something my first manager said that has always stuck with me is, a piece of code you wrote 6 months ago was written by someone else. In school and in Leetcode, people prioritize performance and brevity. In professional development, I much prefer code that is readable and quick to fix (in the sense that I can react, debug, and fix things quickly when shit hits the fan).",big_clout,2025-07-28 18:03:28,15,cscareerquestions,t3_1mbmvot,False,
n5nfk4l,MSCS is not really useful unless your undergraduate degree was not in CS.,beyphy,2025-07-28 18:08:46,26,cscareerquestions,t3_1mbmvot,False,
n5nnmca,"I think the better question is, what's to prevent that you won't end up in the same position? let's say you go do a Master's degree, then after the completion of that, whats to prevent you asking ""should I grind leetcode or should I go for a PhD"" later?",NewChameleon,2025-07-28 18:46:57,7,cscareerquestions,t3_1mbmvot,False,
n5nhvrz,"With MSCS, i agree with others. It's not rreally that necessary for us. It does help to make your resume look a bit nicer and might get you a slightly higher role and pay off the bat, but to me it's not worth 2 years of missing out on experience to do for an extra 5k-10k in pay you would've just likely had if you started to work. The key really is if you can get a job to pay for your masters degree. So in summary, it's not worth the MSCS unless you get someone to pay it for you or if you can escape paying minimal and not having to get loans. I had my job pay it for me and I grinded for 2 years as a part-time student and only had to pay 5k out of pocket those 2 years. But I also did summer courses as well to finish on time. As for your leetcode grind. I am not someone who really thinks you need to ""grind"" leetcode to get a job. You can and might be good at it to land the job, the problem is that many people think they can just grind it and dont care to learn the ins and outs of what they are doing. So they basically are hoping to get a similar question where they can think ""omg that's leetcode question #100 or similar to it, i just need a map"". But they dont care to learn why they need the map, or if there's a slightly different approach they could take. I have been in the job market twice in my career, never had to grind leetcode and I got into two big tech companies (one of them a Mag7 company) by just following a google DSA guide I will link below. It has videos from cracking the coding interview author that explain DSA very well. Also links free leetcode study guides with example questions to practice on. Companies dont care if you get the questions right, they only care if you know what you are doing and explain your thought process well in the questions. I got both those jobs and didnt do 100% well on the questions. A few times I got stuck but because I explained my thought process well they liked my approach. They know you wont get it 100% off the bat, they just want to know where your heads at. So for me i like to say ""hey i think I can possibly use a map here because of XYZ possibly a set"" and then I try it. I also go step by step. So usually the first thing I tackle is the return cases. I.e. if I am doing a array traversal the first thing I write is the return case if array is empty. It sounds dumb, but they appreciate when you tackle the small things first that could easily be forgotten. Also it's one of those things of once you start coding your nerves go down even if it's a simple lin. Then at the end I write test cases and try to go through multiple different cases (empty array, edge cases, etc). If any of them come out wrong, then I quickly refactor.Google DSA link is: [https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/](https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/)",Broad-Cranberry-9050,2025-07-28 18:19:39,3,cscareerquestions,t3_1mbmvot,False,
n5nj75c,"I think you would get the best value out of applying for jobs. Real interviews will help you more than playing around until you think you are ""ready"". YMMV if it is FAANG or bust.",marsman57,2025-07-28 18:25:55,2,cscareerquestions,t3_1mbmvot,False,
n5nk7xn,"For what it's worth, I went down the M.A.Sc route. I did it with the Comp Eng department, but the research was pretty much all coding. I also had my degree in Electrical Engineering so this was a nice way to transition to programming. Anyway, my supervisor had tons of industry contacts, and it made my job search so easy. Literally the easiest interview I've ever done, they sent me an easy assignment then shot the shit during my interview and I got a quick offer.I don't think the degree itself made much difference, but I don't think I could have got those industry contacts any other way. I was also somewhat considering the academic route, but realized pretty soon into the degree that I didn't want to.I think course based programs are pretty much useless. Make sure you do a research based program.",TraditionalClick992,2025-07-28 18:30:46,2,cscareerquestions,t3_1mbmvot,False,
n5nawv3,"MSCS is in my opinion a door to academic career but not industry. Unless it is an R&D position, nobody in the industry will care and ask about your masters degree (i am told so, correct me if exceptions exist).YOE matters first.",AbbreviationsTrue183,2025-07-28 17:47:33,4,cscareerquestions,t3_1mbmvot,False,
n5pqfo3,Just do leetcode or pursue a PhD. MS is a half way house with not enough juice for the squeeze,finfun123,2025-07-29 01:13:03,1,cscareerquestions,t3_1mbmvot,False,
n5rcusy,"The brutal truth is that grinding LeetCode and building projects will get you hired faster and cheaper than spending 2-3 years on a master's degree. Most tech companies care way more about your ability to solve coding problems and demonstrate practical skills than they do about advanced degrees. A master's degree might open some doors at research-heavy companies or for certain specialized roles, but for the majority of software engineering positions, you're better off investing that time and money into sharpening your interview skills and building a portfolio that shows you can actually code.That said, the interview grind is real and can be soul-crushing if you're not strategic about it. Focus on understanding patterns rather than memorizing solutions, and make sure your projects actually solve problems or demonstrate technologies that companies use. The market is tough right now, but candidates who can confidently navigate technical interviews still get offers. I'm on the team that built [AI interview helper](http://interviews.chat), and we created it specifically to handle those tricky interview moments when you're stuck on a problem or need to think through your approach out loud.",akornato,2025-07-29 08:35:50,1,cscareerquestions,t3_1mbmvot,False,
n5zyvww,"For me, I dont think you need to grind LC tbh. Some do and get that job well but I personally have gotten into two major big tech companies and never had to grind leetcode either time. Im not someone who would consider myself amazing at coding either. Usually I follow the Google DSA guide: [https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/](https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/)It links videos from cracking coding interview author who goes through each DSA pretty well. Also links many LC study guides that have example problems. For me, it's more important to understand DSA than actuall just grind and hope to get a similar problem. Gridning can get you the job but good interviewers will really test your knowledge and if you fall down the wrong rabbit hole you wont understand how to get out of it. For me I try to do coding questions step by step and when I speak loudly I say ""Im thinking about whether a set or map makes sense here"" and say why. It's not about getting it right it's about showin gthem your mindset when you are presented with a problem. Since you are good at your job. and know your shit this guide is probably all you need tbh.",Broad-Cranberry-9050,2025-07-30 15:56:30,5,cscareerquestions,t3_1md911u,False,
n5zpl7z,"I would prob ask your current comp and baseline tbh.If your goals is tech/unicorns, your going need grind lc, system design, etc.If your underpaid in non-tech sector and just want a boost, I think its 100% reasonable. A lot of non-tech companies won't ask you lc questions. They will just talk through your resume, test your general technical knowledge based on their positions verbal format, and see if your current skillset/personality alligns with their role.",MangoDouble3259,2025-07-30 15:12:27,5,cscareerquestions,t3_1md911u,False,
n64rv0j,"don’t just shotgun apply—definitely brush up on interview skills, especially since the market’s tough. Try to get company-specific questions ([prepare.sh](https://prepare.sh) is great for that, plus LeetCode if you’re burning out on generic stuff).",Dependent_Gur1387,2025-07-31 08:53:56,1,cscareerquestions,t3_1md911u,False,
n6dpacz,"Totally hear you and you're not alone in feeling like interview prep is a strange game that doesn't reflect the real impact you deliver daily. The reality is, yes, most competitive roles (especially outside of internal moves) still filter through DSA-style interviews, so some level of prep is necessary but it doesn’t need to be full grind mode.Start applying *and* build interview momentum in parallel. Choose 1–2 roles you’d genuinely like, and let them drive your prep direction. Focus on high-yield patterns (like sliding window, recursion, trees) rather than solving random 300 problems. Your goal isn’t to become a LeetCode machine it’s to show structured thinking under time pressure. You already solve harder things at work. Just reframe this as “translating” your strength into interview language.",Superb-Education-992,2025-08-01 16:58:39,1,cscareerquestions,t3_1md911u,False,
n618ex4,"I agree, if you have a good grasp of data structures and algorithms, you should be able to get to where you need to get to during an interview.The only reason I leetcode is so I can get good at writing code during an interview (I practice/interview with python because it's just so much quicker even though I've never used it in production). I also mostly look at leetcode questions as a mental exercise to see if I could think up of a solution - rather than actually code it out.",still_no_enh,2025-07-30 19:27:17,2,cscareerquestions,t1_n5zyvww,False,
n6bwho8,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-08-01 11:16:14,1,cscareerquestions,t1_n6bwhmk,False,moderator
n6196cy,"I get it. Im not against using leetcode to practice, just the idea that you need to spend hours on end because I feel like most people grind but dont really try to understand.",Broad-Cranberry-9050,2025-07-30 19:30:58,1,cscareerquestions,t1_n618ex4,False,
n61c1gk,"I agree with you. It's the problem I see with the whole Leetcode thing. People are literally just trying to pass the interview using rote memorization which might work in class/exams, but they'd fail as soon as the interviewer asks any clarifying questions - as an interviewer I've definitely seen this.The interviewee immediately ""figures out"" the optimal solution, I throw in a complication that invalidates the optimal solution and brings it back to exponential (n^2) time and they fumble.",still_no_enh,2025-07-30 19:44:50,1,cscareerquestions,t1_n6196cy,False,
n6h3vre,I churn bank account sign up bonuses.,h0408365,2025-08-02 04:23:38,77,cscareerquestions,t3_1mfh83g,False,
n6h4lut,"Fractional CISO work for startups. They can’t afford full-time but desperately need your 10 YOE. Charge $200/hr, skip the app rat race.",Adrienne-Fadel,2025-08-02 04:29:17,34,cscareerquestions,t3_1mfh83g,False,
n6h52o0,"I have a couple of Minecraft mods that generate $200 a month, it’s nice to be able to buy shit on Amazon every now and then",NaCl-more,2025-08-02 04:32:55,36,cscareerquestions,t3_1mfh83g,False,
n6h6vvq,"Not me personally, but one of my good friends thought exactly like you. They had around 7ish YOE at the time if I remember correctly.They did end up landing some pretty decent contracting work that added a pretty significant amount of income to their networth. They were juggling several clients.But you know where they ultimately ended up? Working full time for a company and dropping all their clients. That life was too chaotic for them. It's not just programming, it's running your own business. You have to consider things like marketing, accounting, taxes, legal, etc when you're the one operating your own business.I personally have made some good money on the side... but not via working for anyone. I refuse to do that again (outside my full time job of course). I made some mobile apps for shits and giggles. Most of them never got any meaningful user base... but one of them took off and makes me low 5-figures of passive income. I've tried, and tried, and tried, and have never been able to recreate that success. It's not enough income to live off of, so I still maintain my full time job to put food on the table.",SouredRamen,2025-08-02 04:47:19,22,cscareerquestions,t3_1mfh83g,False,
n6hhywx,"Lecturing at a community college is great per hour and fun, as long as you don’t have to do grading.",MrPiggeh,2025-08-02 06:23:41,8,cscareerquestions,t3_1mfh83g,False,
n6h9vma,Fuck that. If I wanted to use more of my leisure time to make more money I'd do it to upskill my actual career.,TonyTheEvil,2025-08-02 05:11:52,48,cscareerquestions,t3_1mfh83g,False,
n6hhcjt,"I've got 5 years doing data engineering work with healthcare data, am consulting for 70/hr to help an NGO get their EHR reporting operational. I enjoy helping a company get their stuff together and being able to put my expertise to work for someone who gives a shit. But I've come to really lament doing work for them because the initial allure has worn off, the tasks have become rather mundane, and the income, while comparable to my full time job, is not really impactful to my life outside of the thought ""maybe I can retire a couple years earlier than I otherwise would have in 20 years"". I hardly even have motivation to do my hours at my full-time job, let alone more on top of that.",Touvejs,2025-08-02 06:17:57,6,cscareerquestions,t3_1mfh83g,False,
n6ipd6c,"Yes, small Shopify app, should pass $50k per year in the next few months.Granted it took 10 years to get to that level but it’s great now because i just invest every it of it.",grizltech,2025-08-02 12:50:44,5,cscareerquestions,t3_1mfh83g,False,
n6hzwwl,I do sports gambling in my free time.,cantstopper,2025-08-02 09:19:01,7,cscareerquestions,t3_1mfh83g,False,
n6in2bl,"I run a non-tech business on the side - eCommerce. Honestly is refreshing because it's a whole different mindset and competitive space. AI can't take it away, I own 100% of the equity. It's great.",csanon212,2025-08-02 12:35:19,4,cscareerquestions,t3_1mfh83g,False,
n65u7af,"You don’t, especially if you’re a L1 or something. Leave it to management. If you have a solid manager (and even better a solid exec in charge of the dept) they’ll be constantly pushing for improvements and you’ll win some and lose others. What’s more likely is these “politics” = finance doesn’t believe the benefit outweighs the cost or management literally cannot competently perform whatever the recommendation is and doesn’t want to report back to the VP why you spent a month on a project that didn’t really affect overhead or productivity by much in the long run.",DifferenceClassic201,2025-07-31 13:28:58,11,cscareerquestions,t3_1me1fu9,False,
n65v11i,"i wish i knew too. client adds feature at every meetings. The PM complained i was late 3 weeks but they add a week's worth of my time. Told him, he did not care at all.",Toys272,2025-07-31 13:33:11,4,cscareerquestions,t3_1me1fu9,False,
n65w8ji,Never mess with another man's breadbasket.https://en.wikipedia.org/wiki/Bullshit_Jobs,OnlyAdd8503,2025-07-31 13:39:25,3,cscareerquestions,t3_1me1fu9,False,
n67vyf0,"Listen, ask questions, fuck up.There's really no other way to learn then by doing.",Drauren,2025-07-31 19:16:35,2,cscareerquestions,t3_1me1fu9,False,
n683oyj,"I don't agree or follow all of them, but the 48 Laws of Power has been very useful for office politics.",FailedGradAdmissions,2025-07-31 19:54:16,1,cscareerquestions,t3_1me1fu9,False,
n68vcw6,"How do you deal with it? You give zero fucks about it, that's how.You have an obligation to provide your opinion on what is the best approach to solve a problem. If that opinion is then waved away because of politics, that's a company problem, not a you problem. Let it be and move on.",Early-Surround7413,2025-07-31 22:08:40,1,cscareerquestions,t3_1me1fu9,False,
n6fdmi2,This post has been removed. Sorry for the inconvenience! 0.0.2.1,SamWest98,2025-08-01 21:56:32,1,cscareerquestions,t1_n65u7af,False,
n6fhayn,"Didn’t say they don’t affect you, I did say you don’t master office politics at an entry level position. The only politics there are suck up, perform well & don’t burn out. Management cares little about how the work horses feel, execs care even less, you’re purely there to generate revenue and maximize shareholder profit. Maybe you’ll have one or two opportunities to say something that matters depending on the setting but what should an L1 be worrying about apart from looking good? Management is the one that needs to deal with the politics of their people and their outlook to the executives while still managing department costs and other outlooks. Execs have to deal with snakes and below management needs to worry about layoffs",DifferenceClassic201,2025-08-01 22:16:46,1,cscareerquestions,t1_n6fdmi2,False,
n6fiyze,This post has been removed. Sorry for the inconvenience! 0.0.2.1,SamWest98,2025-08-01 22:26:08,1,cscareerquestions,t1_n6fhayn,False,
n6fktev,"Okay I see that. But in my opinion that’s just an environment I need to leave because I mentally refuse to keep up with that atop a workload. In my eyes, I will pick a decent Fortune 500 company and give it a try, see how the managers perform and treat people and use that handbook to their advantage and if I dislike it I’ll move on. I get it’s not the best economy but showing weakness and being overly tolerant of office antics that are below a career in higher education won’t make it any easier",DifferenceClassic201,2025-08-01 22:36:40,1,cscareerquestions,t1_n6fiyze,False,
n5pxf33,">Is getting a job with no internships having graduated from a mediocre/below average university a sheer numbers game? you could have asked this exact question back in ~2015 era and the answer would be yes now? the hiring bar and competition is like 10x more fierce >quite literally apply to every single open position in the country and just move wherever at a whim I mean, is there something that would prevent you from doing that? I remember when I was a new grad I had like 10 cities on my radar and I'd be willing to fly to any of them",NewChameleon,2025-07-29 01:53:31,15,cscareerquestions,t3_1mbygci,False,
n5rx1pw,"It has for many years been the case that it is a numbers game (especially in the digital applications era), and the degree is not sufficient. Internships, impressive academic projects, connections, etc. are ways to get more chances. Grinding applications is table stakes if you haven't landed anything prior to graduation.For the majority of jobs that are not basically localized services (e.g. education, healthcare), it is common as a new grad to have to apply broadly and relocate wherever the job is.Most or many new grads in a lot of fields don't end up working a job related to their field of study.A degree helps unlock a lot of paths but it is one step in a process, not the whole journey.",rajhm,2025-07-29 11:33:10,1,cscareerquestions,t3_1mbygci,False,
n6h8h3u,"You’re right that it *feels* like a numbers game, but the truth is, most applicants aren’t actually competition. They mass-apply with generic resumes, no context, and little signal. Your job isn’t to outshine 1,000 applicants, it’s to give 2–3 companies a reason to pause and say, “Let’s talk to this person.”If you don’t have internships or pedigree, your edge has to come from clarity and signal: a crisp, narrative-driven project that solves a real problem; a GitHub profile with commits that show learning depth; a blog post or case study that breaks down *how* you built something and *why*. This industry still rewards proof of work you just have to package it in a way that cuts through noise.",Superb-Education-992,2025-08-02 05:00:11,1,cscareerquestions,t3_1mbygci,False,
n5pvbuz,Everything is a numbers game. If you have a 1% to get an offer for each position then you only need to apply to one average 100 positions.,Haunting_Welder,2025-07-29 01:41:33,0,cscareerquestions,t3_1mbygci,False,
n5q5acx,"idk I've been thinking about trying really, really, really hard to get into Amazon but the fact that I went to a relatively unknown, bad university kinda makes me doubt I'm much higher categorywise than a bootcamp graduate",throwaway10015982,2025-07-29 02:40:22,2,cscareerquestions,t1_n5pthap,True,
n5pxrl8,>now? the hiring bar and competition is like 10x more fiercengl I'm increasingly wishing I had at least gotten a degree in something fun like music is if I knew CS was going to have literally zero employment opportunities for the average new gradas I get older I realize I honestly probably wouldn't have even been that bummed about doing music ed with some personal development and could have become a professor somewhere on a long enough timescale but now I'm kinda fucked permanently lol,throwaway10015982,2025-07-29 01:55:31,1,cscareerquestions,t1_n5pxf33,True,
n5qdl88,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 03:34:11,1,cscareerquestions,t1_n5qdl6s,False,moderator
n5pzeqk,">ngl I'm increasingly wishing I had at least gotten a degree in something fun like music is if I knew CS was going to have literally zero employment opportunities for the average new grad well, depends on year, imo most of the gloom and doom happened after 2023-onwards before-2019 I feel is the more ""normal"" era, but even back then it's normal to send out couple hundreds of applications then 2020 was covid, first half was doom with countless layoffs and offers rescinded, then second half was party again once Fed turned on infinite money printer then 2021-2022 was peak hiring frenzy with the money printer, people shouting things like ""name and shame on Google for only offering me $150k as new grad! I was expecting $200k!"" or ""Amazon offered me $190k as new grad is that good?"" and you'd have people reply ""nah that's a lowball I got $230k at Facebook""",NewChameleon,2025-07-29 02:05:05,4,cscareerquestions,t1_n5pxrl8,False,
n6kdgwd,Wherever you can be around a lot of smart engineers to learn from.,j_schmotzenberg,2025-08-02 18:20:56,42,cscareerquestions,t3_1mfxcj2,False,
n6kdfey,Established big cities,TonyTheEvil,2025-08-02 18:20:42,66,cscareerquestions,t3_1mfxcj2,False,
n6kf6km,"Big cities. There are usually more established companies there with their main offices. Means more people and more companies to possibly switch to. You can always move to a growing city due to it usually being lower col, but the opposite is harder due to needing a job that justifies the higher col.",honey1337,2025-08-02 18:30:21,16,cscareerquestions,t3_1mfxcj2,False,
n6kgnxx,"Big cities. Lot more opportunities. Ample funding. Most vcs are collocated here. More people to bet on you and give you a chance to work on something meaningful. I would even say there is massive difference between Bay Area and seattle,nyc. Experienced it first hand. As much as Bay Area sucks for housing and being expensive, it is expensive because it is most desired for career growth",thegandhi,2025-08-02 18:38:34,12,cscareerquestions,t3_1mfxcj2,False,
n6kgf3e,"Big Cities, or really just coastal ones with established tech scenes.",justUseAnSvm,2025-08-02 18:37:11,4,cscareerquestions,t3_1mfxcj2,False,
n6kl0kd,"Big cities.Growth compounds, whether it’s career, social, mental. IMO there’s no better place to cultivate these aspects of life in your 20s than a place like SF or NYC.",idgaflolol,2025-08-02 19:02:57,5,cscareerquestions,t3_1mfxcj2,False,
n6knoke,"Big cities. The amount of AI/tech meetups is wild in SF and even NYC to a lesser extent. It's easier to network and meet people (including VCs) on the street, on public transit, while doing hobbies.",Tight_Abalone221,2025-08-02 19:17:41,3,cscareerquestions,t3_1mfxcj2,False,
n6kgma4,WFH,ssaw112,2025-08-02 18:38:18,2,cscareerquestions,t3_1mfxcj2,False,
n6kply6,"definitely big cities, whether or not you can get in, is an entirely different discussion, but big cities nevertheless although, from your replies I sense you've already made up your mind that it's the other",NewChameleon,2025-08-02 19:28:31,2,cscareerquestions,t3_1mfxcj2,False,
n6kwhqf,"SF, Seattle, NYC. No question. In that order.",jjopm,2025-08-02 20:07:37,2,cscareerquestions,t3_1mfxcj2,False,
n6etkty,"I worked in such a company and it’s one of the top 10 companies in the world. Apparently they have spying software to snoop on what the employee are up toEdge is a chromium browser, so don’t sweat",PessimistPrime,2025-08-01 20:14:03,20,cscareerquestions,t3_1mf6tyc,False,
n6et0nl,"A little strict, but within the boundary of what I’d call “normal”. Don’t quit over a web browser.",locke_5,2025-08-01 20:11:17,46,cscareerquestions,t3_1mf6tyc,False,
n6exvsv,"This isn't terrible. On one consulting gig for a very large fintech organization, I was doing bugfixes for iOS and Android. We had perfectly good top-of-the-line Macbooks, but no, we had to remote into a virtual Windows VM in the cloud, and from there to a different physical Macbook. In New Zealand.All keyboard shortcuts went through multiple translations (Mac -> Win -> Mac) and were borderline useless. Which window was going to receive your keystroke? Honestly who knows. Is it CMD+C or CTRL+C to copy? Shrug. You could see the delay in typing, sometimes several seconds per keystroke. And of course, absolutely no way to test your changes on a physical device connected to your computer, even though that's basically essential when doing mobile work.As trusted partners, we ran the numbers on how much this was costing us in terms of productivity, and thus costing the client in terms of dollars, and the response was ""we don't care."" In other words, they KNEW that they could save money by doing it differently, but they did not feel that the savings outweighed the risks.You will probably hit a similar wall and, to be honest, your situation does not sound as bad.",RichCorinthian,2025-08-01 20:35:22,22,cscareerquestions,t3_1mf6tyc,False,
n6ey5ur,"You need to build a productivity argument. ie. *""My productivity is lower because XXXX task now takes YYYY more time than it did before.""*They'll either improve the virtual machine performance, install software on your Windows 11 machine, provide a secondary machine for other activities, or they'll have to accept that the tools they are providing you results in lower productivity than you had before.Having been in a similar spot at a previous employer... they went with the last option: accepted lower productivity.",RagnarKon,2025-08-01 20:36:45,9,cscareerquestions,t3_1mf6tyc,False,
n6eugjq,Isn’t edge built on chromium these days anyway?,Free-Design-8329,2025-08-01 20:18:25,6,cscareerquestions,t3_1mf6tyc,False,
n6ewa09,"I would frame your thoughts a little differentlyThey are giving you win 11, but it sounds like no new hardware. Given that, done questions from you to the agency are in order:- how old is your machine- what is the minimum spec for the new build- when are you due for a replacement machine- you are required to have any non standard software in a VM, what is the VM platform?- what is the comparative benchmarks of the chosen VM platform- what is the expected performance overhead of the chosen VM platformSaying things to ask yourself- why do you want chrome vs edge- why do you want Firefox vs edge- what other SW do you need to use to do your job that the IT agency say needs to be run in the VM - are there ways for you to comply with their policy and still get the workflow you need- can you live with a docker style arrangement (each app you use in a seperate VM that doesn't *really* look different from standalone- does this policy allow you to have any app you want installed if it's in a VM? (Maybe there are things you weren't allowed before that you CAN be allowed under this new policy = win/win)As already mentioned, don't pick this Hill to die on. I chose to think of it as, be a Willow. Stand tall, but bend with the wind and don't break. Best of luck! (I'm interested in the outcome for you, a follow up would be nice)If you don't already know why I suggest all these questions, please ask, I can give expansions on why I suggest them. Each of the questions leads down one of 2 paths - you comply, but are happy with it because you get a new laptop or the performance hit is not too bad- they give you what you want",kiltannen,2025-08-01 20:27:25,3,cscareerquestions,t3_1mf6tyc,False,
n6etcnx,It's reasonable. Maybe you need a PC upgrade if the VM is so slow?,dllimport,2025-08-01 20:12:57,8,cscareerquestions,t3_1mf6tyc,False,
n6ewn8f,"For some software, I have to use a VM in the cloud controlled via the browser. But VMs can be fast.",BananasAndBrains,2025-08-01 20:29:15,2,cscareerquestions,t3_1mf6tyc,False,
n6ezijm,"Is the VM running locally on your machine, or is it running on a server somewhere? If it's that slow, then either your main machine which was upgraded to windows 11 needs an upgrade, or the server running the VM needs to be upgraded.I'd keep a log of how long it takes you to do repetitive tasks now compared to the new setup. Once you have an idea of how many hours are wasted a week, speak with your manager and give them demonstrable evidence of how much this will cost them on average per person, per week. Complaining about being restricted for arbitrary reasons is one thing, but offering them the data that shows the cost of their choices is usually a much better way to effect change in your favour. It looks less like you're complaining about a personal thing, and more like you're looking out for the company's interest.",Martyn_X_86,2025-08-01 20:43:28,2,cscareerquestions,t3_1mf6tyc,False,
n6fa79y,"VM performance ""can"" be great. There's sometimes a delay in input from the latency to the VM. The VM might also have 1 vCPU and 2GB of RAM on a 10MB NIC. Look into the resources on the VM so you can compare them to your workstation. If you're having real performance issues, time them. Share benchmarks with leadership to explain the day to day impacts of the VMs performance on your throughput. They'll either provision more resources or be okay with reduced productivity.",Strongfatguy,2025-08-01 21:38:11,2,cscareerquestions,t3_1mf6tyc,False,
n5u085b,"Id take the interview and expect nothing. See it more as interview practice. Think about it, if tomorrow you had a chance to work with your dream company, make twice as much as you do now, etc, you dont want that to be your first interview after a few years. You want to have already interviewed with other companies to get those nerves out the way and get an idea of what you can fix for the next interview. So again, a phone interivew is usually just the recuriter asking you what you do and to give brief descriuptions so he can send it to the hiring manager. It wont guarantee interviews at all, just that you are in the system. If you get interviews, I say take them and expect nothing from them. If you get it and you feel it's a better opportunity than you cross that bridge if you get there.",Broad-Cranberry-9050,2025-07-29 17:54:52,21,cscareerquestions,t3_1mchcvw,False,
n5tsew8,Unfortunately the modern interviewing process is a lot of wasted time and effort so I would recommend embracing the suck if you really want a new job,dsm4ck,2025-07-29 17:19:53,8,cscareerquestions,t3_1mchcvw,False,
n5uw32v,"If you don't want to study super hard, then just don't and take the interview anyway. 1% chance is still more than if you don't try at all. Probably still worth studying if you think you'll have a shot, though.The worst thing that happens in either of those cases is the same thing that happens if you decide not to take the interview, so...accept the interview.",skodinks,2025-07-29 20:24:14,3,cscareerquestions,t3_1mchcvw,False,
n5v18fw,"Honestly - it’ll be a very tough sell right now. As an example, I have over 12 YoE and I’m applying for senior level roles (despite my last two roles being staff and lead) and I have recruiters bringing up YoE on skills that wouldn’t have mattered to them 3 years ago.",ReasonSure5251,2025-07-29 20:48:12,2,cscareerquestions,t3_1mchcvw,False,
n5wc8mv,"You should take the interview but expect nothing. I used to believe studying super hard could help me land jobs, but in reality it's not like that. If you never take interview, once you take one, you will likely be super nervous and inconsistent.",Confident_Yogurt_389,2025-07-30 00:56:55,2,cscareerquestions,t3_1mchcvw,False,
n5ttih5,Imma be 100% with you. Study and hit some leetcode mediums. You're in consulting so you can probably sell yourself well. But using a technology for 8 months and only coding 2/3 years you've been working aren't exactly senior dev level despite what the HR rep says. I'd obviously try and get the job but I wouldn't be super optimistic,Reasonable_Bunch_458,2025-07-29 17:24:48,1,cscareerquestions,t3_1mchcvw,False,
n5xc9rb,"If you like the job, give it a try. You’ll learn either way, and it could lead to something better.",employHER,2025-07-30 04:48:09,1,cscareerquestions,t3_1mchcvw,False,
n5xjcea,"> What would you do if you wanted a new job? Me personally? In order:1. Hit up my past managers and coworkers that I still keep up with to see if they're hiring or can refer me directly to someone who's hiring, since I know they'll vouch for me.2. Polish up my resume & catalog what I've been doing for the past N years at my current employer.3. Go onto some jobs website, maybe Glassdoor, and do some keyword searches to find roles that match my skill set and seniority level. Either local to where I live, or fully remote and based elsewhere.4. Start applying for them using a customized cover letter for each employer that highlights some reason I want to work for them -specifically-.",Ok_Experience_5151,2025-07-30 05:47:40,1,cscareerquestions,t3_1mchcvw,False,
n5y1pba,"I’d say go for it if you’re interested! Even if you don’t have every requirement, sometimes companies are flexible. I’d do some digging on the company and check out real interview questions",Dependent_Gur1387,2025-07-30 08:40:52,1,cscareerquestions,t3_1mchcvw,False,
n5u0udo,:thumbs_up: They also have a jr role that basically does the same thing as the Sr role according to the job description,br_234,2025-07-29 17:57:39,3,cscareerquestions,t1_n5u085b,True,
n6mv81f,"I did OMSCS, after I dropped out of a bioinformatics PhD, so I both know what it takes to get into grad school, and did OMSCS.OMSCS does have some research opportunities, but they are a bit limited and remote, so you have to really push. It's very much a class based masters and the majority of students don't do any research. If your goal is to find advisors, ones who can write the type of letters that get you into grad school, you can certainly do that. I'd ask on r/OMSCS for stories, but I know it's possible.I was also interested in Type Theory (Haskell programmer at the time) and unfortunately I didn't find any faculty working on that. I wasn't going back to grad school (did that once), though, and my main focus for doing the program was to get a better grip on CS fundamentals and help grow my industry career. For that, it was extremely effective and I got into big tech pretty soon after graduating. I did find this: [https://omscs.gatech.edu/research-opportunities](https://omscs.gatech.edu/research-opportunities) I'd check that out. All that said, the way I got into a PhD program was by working for a professor as a lab tech, doing good work, and getting into the program hosted by the school. To get into a PhD program, grades and papers help, but what it really comes down to is one professor with influence speaking on your behalf. If you push, that should be possible with OMSCS.",justUseAnSvm,2025-08-03 03:13:00,10,cscareerquestions,t3_1mg8j0f,False,
n6myr27,"I know of several people that went on to do a CS PhD from OMSCS. The thing is, from my experience, GT sets you up to succeed much faster in a CS career than a PhD. So because of that, most folks don't see the reason to do a PhD. The main exception is FAANG or Quant Finance Research Scientists - almost all want a PhD. There are great professors - Joyner, Jeff Wilson, Jay Summet - who would be willing to write a letter if you do well in the class and are active in discussions and office hours.The biggest difference between in person and online is that you get out what you put in in terms of social interaction. It's less forced than in-person. The education is exactly the same.",Whiskey_Jim_,2025-08-03 03:38:00,4,cscareerquestions,t3_1mg8j0f,False,
n6n1doi,"Thanks so much for the input and thanks for the link! Sad but expected that they don't have much Type Theory research going on (which is why I expect to have to apply to Europe for the PhD). Stony Brook actually seems reasonable for theoretical CS and is in commuting distance which is why it's still currently my goal for a Masters.Just in case, do you know if OMSCS as a Masters might carry more weight than a lesser known program? I mostly want to do the Masters for myself and I assume any reasonable CS Masters probably carries *enough* weight for job market purposes. Juts not sure if maybe OMSCS might actually be the safer route job-wise (I'll probably still just go to Stony Brook but wanted to collect the info).",Tecoloteller,2025-08-03 03:57:17,1,cscareerquestions,t1_n6mv81f,True,
n6n0qp1,"Thanks so much! Honestly this is a big relief, I knew that going OMSCS would still be a good route career-wise. I'm glad that it's also still a viable route for PhD after the fact. One question tho, what do you mean by FAANG ""wants a PhD""? Sorry I might have misunderstood what you meant. I've met plenty of people who did FAANG right after undergrad.",Tecoloteller,2025-08-03 03:52:36,1,cscareerquestions,t1_n6myr27,True,
n6ngx7k,"It carries enough weight for market purposes, especially at FAANG/big-tech. A lot of people go through the program and talk about how difficult it is, so graduating is generally seen as an accomplishment. We have a slack channel at work, and right now there's a few other people going through the program.The only caveat I'd give, is that OMSCS is course based, not thesis based, so if you're looking for the masters to qualify you to do some specific type of dev work, like distributed systems or databases, it might be harder since you won't have a lot of project based experience on that one specific thing.As for just a general qualification, it's definitely good enough for industry roles like FE, BE, full stack, infrastructure/platfor, product. I have a biology undergrad, was working as a Haskell programmer at a small start up, and 2 years after graduating I made it to a big tech company with pretty good pay. If you're thinking about making CS a career, it will definitely help out.",justUseAnSvm,2025-08-03 06:04:16,1,cscareerquestions,t1_n6n1doi,False,
n6nd73o,"Talking about the role ""Research Scientist"" for FAANG/quant specifically. You could probably get a RS role elsewhere but the top tier companies do seem to have a requirement for PhD for RS roles. Applied Scientist roles are 50/50 on MS or PhD requirements.Pretty much any other role in tech (any SWE or MLE) - GT MSCS is more than enough to get you in the door for the interview.",Whiskey_Jim_,2025-08-03 05:31:22,1,cscareerquestions,t1_n6n0qp1,False,
n6ptqf2,"$110k is a good income in Jacksonville.Cleared work means you are not competing with the whole world for your job.I would stay put, but the decision is yours, not mine. Edit: Corrected typo.",fedput,2025-08-03 16:22:43,9,cscareerquestions,t3_1mgmgyv,False,
n6quv1o,Depends on salary of new job,Mountain-Bar-2878,2025-08-03 19:31:17,2,cscareerquestions,t3_1mgmgyv,False,
n6pung4,Yeah but I like to travel and it makes it a pain in the ass also my ethics play a part,hydecide,2025-08-03 16:27:26,1,cscareerquestions,t1_n6ptqf2,True,
n605g9n,"No, it's a scam.",Bobby-McBobster,2025-07-30 16:27:39,22,cscareerquestions,t3_1mdaw5e,False,
n604ndz,Sounds sketchy,cs_pewpew,2025-07-30 16:23:55,11,cscareerquestions,t3_1mdaw5e,False,
n60xg3h,Run!,Dakhnas,2025-07-30 18:34:58,5,cscareerquestions,t3_1mdaw5e,False,
n612r45,"Not to scare you or to endorse this company, but I'm a contractor at a fairly large tech company and my agency had me show a photo ID during the document verification call towards the end of my onboarding process.",PLTR60,2025-07-30 18:59:57,3,cscareerquestions,t3_1mdaw5e,False,
n613db4,Asking for an ID before any interviews feels very suspicious. The fact they were so eager to get in touch with you is another red flag.,Chili-Lime-Chihuahua,2025-07-30 19:02:57,3,cscareerquestions,t3_1mdaw5e,False,
n66smqw,Scam. They're going to use your identity/persona to put someone else (probably offshore but pretending/appearing to be on-shore) into a job.,alinroc,2025-07-31 16:13:53,3,cscareerquestions,t3_1mdaw5e,False,
n60ftue,https://www.youtube.com/watch?v=0JlDzlX0Uqw,supra_kl,2025-07-30 17:15:12,2,cscareerquestions,t3_1mdaw5e,False,
n611faz,WHOIS the domain those emails are coming from.,Dababolical,2025-07-30 18:53:35,2,cscareerquestions,t3_1mdaw5e,False,
n61eseu,Sounds like a scam. That looks like a scam given how low the money is for California. Heck I told someone last week he wasn’t offering enough money and it was still more than that.,Longjumping-Ad8775,2025-07-30 19:57:40,2,cscareerquestions,t3_1mdaw5e,False,
n605o6f,When I have had to take automated assessments that require video they sometimes ask me to hold up photo ID at the beginning. So they might be concerned that you aren't who you say you are or have someone else interviewing for you.,ConfluentSeneschal,2025-07-30 16:28:40,2,cscareerquestions,t3_1mdaw5e,False,
n5lb7mn,"It's not unreasonable to feel dissatisfied, especially if your role isn't aligned with your skills and career goals. Acknowledge that you’ve given it time but still feel out of place. Clearly outline your frustration and express your desire to work in Java development, offering potential solutions or compromises. For example, ask if there’s a chance to transition into a more relevant project or team that aligns with your skills.",DojoLab_org,2025-07-28 11:38:39,3,cscareerquestions,t3_1mbc7c7,False,
n5mqyu9,"Data centric work involving Python, AI, BigQuery all sounds very exciting. You imagined doing something different. I would try to be flexible and open to any interesting work that comes your way. I'm sympathetic to the fact that you interviewed and signed on for one type of work, and they give you a different type of work. But I would try to be fleixble; and the work sounds actually interesting, at least to me. Java is great, but I wouldn't limit myself to one tool, I'd work with any interesting tool that comes my way. I do have limits; I'm sure if I got tasked with writing ancient COBOL or Visual Basic, I couldn't do that for very long.Every job is supposed to have a mix of tasks you enjoy and tasks you don't. The big red flag is if after six months or so, it's all tasks you don't like. In that situation, you should raise the issue to your manager, and ultimately, look for another job.Lastly, QA is often less interesting work than dev. But often they stick newer devs on QA, you learn how all the different internal systems and workflows and processes work, you make sure things don't break, and as you demonstrate competence you transition into actual development efforts. FWIW, I'm in a new dev job, I have 30 YOE, I'm officially a dev, but I'm limited to more QA type tasks at the moment. However, I'm learning how everything works, building rapport with colleagues, and building lists of improvements that would benefit the product, and I'm sure I will get the chance to implement some or most of my ideas, during the next year.",Joram2,2025-07-28 16:15:44,1,cscareerquestions,t3_1mbc7c7,False,
n5nnu4t,">I really want to continue working with Java.If this is the case, then you should keep bringing it up with your manager.That said, otherwise, learn Python and move on. You'll have better career opportunities with data science experience than as a Java developer in my opinion as someone who joined a company as a C# developer and now does Python almost exclusively in data science applications.",marsman57,2025-07-28 18:47:59,1,cscareerquestions,t3_1mbc7c7,False,
n6ghncq,The fact Devin managed to survive after all its shit on launch is amazing.,loudrogue,2025-08-02 01:52:16,8,cscareerquestions,t3_1mf8gm2,False,
n69byf1,"You could potentially chart your path to pick up skills that'd help with DS roles. I started as a data analyst, taught myself SQL and Python to do data engineering work. DS role varies a lot, can be more an analyst, running A/B tests and predictive analytics or more of an ML role. My sense is that experience is more important than a degree but you do have to be vigilant that you're teaching yourself the right skills, learning best standards, which can be hard without a mentor so consult some technical books/blogs/etc.",throeaway1990,2025-07-31 23:38:59,5,cscareerquestions,t3_1mefae7,False,
n6a5ovt,"Nah. Our data science teams have been shrinking and merging, essentially resulting in having just a handful of data science PhDs that work directly with data engineers. Just go full data engineering route. Do leetcode and ""SQL leetcode"" for a few months and apply for every position you can find.",01010101010111000111,2025-08-01 02:35:49,6,cscareerquestions,t3_1mefae7,False,
n69ecs4,"I know data engineer is more concrete in terms of job description and daily tasks. Along with self taught SQL and Python, what kinds of things did you learn and build on your own to get into that role?",Odd-Custard-5497,2025-07-31 23:52:39,2,cscareerquestions,t1_n69byf1,True,
n6c3usf,Shrinking as in only keeping those around who have PhD education?,Odd-Custard-5497,2025-08-01 12:06:45,1,cscareerquestions,t1_n6a5ovt,True,
n69gi3z,"Docker, Kubernetes, Airflow, Looker, cloud (AWS, GCP), read books from O'Reilly/Manning on data (db internals, streaming data, architecture) and ML (unfortunately was too busy at work to do ML projects because that would help me pivot to MLE roles)",throeaway1990,2025-08-01 00:05:01,1,cscareerquestions,t1_n69ecs4,False,
n6dk9ht,"Observation of correlation, not causation. Experts are doing more with less by harnessing the full potential of latest tooling and automations. Having a dozen experts who can discover new possibilities and provide thorough/accurate forecasting is more valuable than having hundreds of average data analysis who report numbers and maintain dashboards.",01010101010111000111,2025-08-01 16:34:24,1,cscareerquestions,t1_n6c3usf,False,
n68mnum,"The more people disuaded from pursuing CS, the more secure I am already in CS. It's a win/win for us both. Don't do CS. Lol",-Dargs,2025-07-31 21:24:37,12,cscareerquestions,t3_1me5zri,False,
n66v2v5,"I would not pursue CS if I was about to start college. AI won’t replace us, but it will very significantly reduce demand in about 5-10 years. If I was starting college now, I would pick something in healthcare where you need to physically work with people.",EquivalentAbies6095,2025-07-31 16:25:28,30,cscareerquestions,t3_1me5zri,False,
n67xgd5,"The golden age of CS is dead, if you have a backup it is probably a good move",Alienbushman,2025-07-31 19:23:53,7,cscareerquestions,t3_1me5zri,False,
n67n2c3,In my experience most cs majors have zero coding experience when going into it. You will likely be successful if you do it as long as you can handle the workload.,Walreen,2025-07-31 18:34:04,4,cscareerquestions,t3_1me5zri,False,
n68r4b2,"If you’re passionate about software engineering, do it. If you’re not, don’t. Your passion is the only thing that gets you through application hell.My team didn’t even put up an application form for the last time we were looking for an entry level, we just interviewed people already working in the company who had applicable degrees and applied internally.If AI becomes capable of replacing software engineers, it’s going to be capable of replacing every job that doesn’t require a human at that time.People saying to consider going into healthcare clearly don’t know how much nursing sucks, too. An ex of mine who is an RN was attacked by a dementia patient. Do you enjoy wiping asses? Because that’s [apparently not even the worst part](https://www.reddit.com/r/nursing/comments/hr4vrq/comment/fy2eboz/?utm_source=share&utm_medium=mweb3x&utm_name=mweb3xcss&utm_term=1&utm_content=share_button) of the job.",Uncreativite,2025-07-31 21:47:16,2,cscareerquestions,t3_1me5zri,False,
n69ee4z,"Go to med school. The road is a lengthy one but you’ll have everything as an attending. Money, respect, and job security",Savassassin,2025-07-31 23:52:51,1,cscareerquestions,t3_1me5zri,False,
n69suyj,"if you really truly love it, go for CS I say. If you are driven by making a lot of money and job security, I would look at something else. As others have said, security and money Im not sure CS is going to be what it once was moving forward. Im not all doom and gloom though, if you truly love it I think you will be able to mkae a way.",tgage4321,2025-08-01 01:17:29,1,cscareerquestions,t3_1me5zri,False,
n6af26p,"Do something that is not popular and has historically been stable, even if it doesn't have FAANG salaries. FAANG salaries were a temporary bubble, that has long bursted. If I were to go back to being a HS senior, I would do trades, but I have a feeling thats about to experience the CS effect, with how much hype its been getting in social media. I think the best field right now is Civil Engineering. With a global housing crisis we are going to need more homes built and fast. Even in a recession people need a place to live and society needs buildings to function.",DepressedDrift,2025-08-01 03:37:57,1,cscareerquestions,t3_1me5zri,False,
n6andb4,"If you enjoy it pursue it. You will likely be able to have a good career. AI isn't replacing anyone important, people just freak out at QoL technologies. They did with phones, they did with the internet, they did with search engines, ect. Do yourself a massive favor. Do not use AI at all. Learn to program without it. Search things up manually. You will be in a significantly more confident and superior position compared to your peers if you do so :). Save AI for a tool you use later in your career. Not while you're in academia, not while you're a junior.Once you get going though, start a long term passion project you're interested in. Continue working on it through college, if you're consistent with this - you'll have very good ammunition for interviews.",Ok_Report9437,2025-08-01 04:38:31,1,cscareerquestions,t3_1me5zri,False,
n6c1ulb,"Your passion for coding is the most important thing! the ai fear is way overblown - it's more tool than replacement.cs + applied math is brilliant. gives you tons of flexibility - machine learning, data science, finance, research. math skills transfer everywhere.professors are right - ai helps with coding but someone still needs to architect systems, solve problems, understand business needs. that's not getting automated.your family might be seeing one area struggle, but tech is huge. cybersecurity, cloud computing, ai engineering all need skilled people.ended up at tetr college building actual tech solutions across countries. seeing how different markets use technology shows way more opportunities than just """"traditional programming.""""you're being smart about planning. double major gives backup options and makes you more valuable.what coding projects have you enjoyed most?",Smart-Wise-Shadow,2025-08-01 11:53:35,1,cscareerquestions,t3_1me5zri,False,
n5y40w1,"Not so much a career win, but a 3 month 40% paid sabbatical is a blessing. And it still build up 7 weeks of fully paid vacation this year.",swiebertjee,2025-07-30 09:03:22,7,cscareerquestions,t3_1md0otb,False,
n5yfx3x,"I’ve been a dev at Amazon for ~4 years. Recently got an offer at a promising startup! Will be a pretty big change of pace, but excited for the accelerated learning and ownership opportunities.",rucksack_of_cheeses,2025-07-30 10:51:26,7,cscareerquestions,t3_1md0otb,False,
n5zpy5y,"Got laid off in June, found a job in this shit market and got a 10% raise on my previous salary.",That_anonymous_guy18,2025-07-30 15:14:17,7,cscareerquestions,t3_1md0otb,False,
n5y03ua,"Background: No CS/IT degree and not in USA/EU/AU/CAJust got my first ""developer"" job while being an occasional contractor for an engineering project. I get to practice my skills everyday and steadily improving by trying out ""hard things"" in my design and code.Tips\- Use ChatGPT as a teacher e.g. work on the bug first for 10-15 minutes, then have a working theory, confirm with ChatGPT, and work from there.\- No substitute to actual work. Side projects, online courses, and all those stuff help but nothing beats working on a task that's from an external party. Working with constraints is something personal projects cannot simulate.\- Be hopeful! No one can be always positive but constantly pitying yourself and thinking we're all doomed will lead you nowhere. I believe that opportunities came my way because of luck, preparation, and my general optimism to life.",dabolrayd,2025-07-30 08:25:11,2,cscareerquestions,t3_1md0otb,False,
n69r2qu,"Finally got switched to a new team after 2 years of languishing by myself on an old product, and am now helping with the highest visibility product in the company. Company got acquired and all employees got payouts for our private stock with fully accelerated vesting, meaning life changing money for a lot of amazing people. Got a new boss who is super engaged and really pushing my growth.",sm0ol,2025-08-01 01:06:48,2,cscareerquestions,t3_1md0otb,False,
n5yc4po,"This is something many people would be envious towards. How did you approach your employer to partially pay for the sabbatical? You aren't in the states, are you?",r-randy,2025-07-30 10:19:27,1,cscareerquestions,t1_n5y40w1,True,
n603noh,Good job - literately . How many months did it take and what was the x factor you had?,r-randy,2025-07-30 16:19:15,1,cscareerquestions,t1_n5zpy5y,True,
n5y1jud,Good stuff! What's your stack if you don't mind?,r-randy,2025-07-30 08:39:23,1,cscareerquestions,t1_n5y03ua,True,
n6b0j7c,i understand the private stock was given to each employee when signed? or purchased explicitly?,r-randy,2025-08-01 06:28:38,1,cscareerquestions,t1_n69r2qu,True,
n5yin2t,"From Europe indeed, it is part of our collective labour agreement that every employee can do this once every 5 years.It may be a lot harder in the states to find something similar, but I'd recommend anyone to talk about it with their current or future employer.",swiebertjee,2025-07-30 11:12:03,2,cscareerquestions,t1_n5yc4po,False,
n5v6puk,if you enjoy coding then software dev for sure,jkh911208,2025-07-29 21:13:57,40,cscareerquestions,t3_1mcnlxh,False,
n5vaplr,I would say that it's a lot easier to go from a developer into devops than devops to go into development.I personally would go developer and then when you hit the burnout stage maybe think about trying devops out.,tech_b90,2025-07-29 21:33:35,37,cscareerquestions,t3_1mcnlxh,False,
n5v8y6n,How about you request to shadow both teams for like 2 weeks each?And then make an decision based on which one you liked more.,CyberChipmunkChuckle,2025-07-29 21:24:48,7,cscareerquestions,t3_1mcnlxh,False,
n5vl2f5,"Software dev > dev ops. Being devops, sometimes you get the short end of the stick and need to be putting down fires all the time.Being sw dev, you have more flexibility. Ideally, dev ops is a sub set of being a sw dev.",TVBlink,2025-07-29 22:26:45,5,cscareerquestions,t3_1mcnlxh,False,
n5vrbxq,DevOps if you like being paged at 3 in the morning.,AngelicBread,2025-07-29 23:00:13,4,cscareerquestions,t3_1mcnlxh,False,
n5v966u,"You better pick right, dude. This determines the entire rest of your life, forever.",abluecolor,2025-07-29 21:25:55,7,cscareerquestions,t3_1mcnlxh,False,
n5w809y,"Software dev, for sure.",epelle9,2025-07-30 00:32:34,2,cscareerquestions,t3_1mcnlxh,False,
n5wqz71,"Devops, if your company will invest in implementing proper high availability, site reliability, telemetry and recovery. Once all that’s in place, the need to fight fires is rare. If they won’t, and your job is just reactive fire fighting, you’ll burn out quickly.",fingerofchicken,2025-07-30 02:22:39,2,cscareerquestions,t3_1mcnlxh,False,
n5x7ezz,"What? You are a coder... Or you are not. If you are a coder, devops is boring as hell.",stevefuzz,2025-07-30 04:11:20,2,cscareerquestions,t3_1mcnlxh,False,
n5t2dtb,talk to your manager,bravelogitex,2025-07-29 15:19:30,24,cscareerquestions,t3_1mce6wv,False,
n5tb941,"Have a chat with your line manager, any chance it's the same person for both of you? Additionally have a call with HR, there should be some kind of ethical codex internally that can address this. If there is a public callout again, I would not start defending myself publicly. Take a note, even say thank you for raising something. You need stay on the moral high ground there.",CyberChipmunkChuckle,2025-07-29 16:00:45,3,cscareerquestions,t3_1mce6wv,False,
n5tcim7,Fire back in said public channel - “reviewed concerns above and turns out I was correct. No issues”,KratomDemon,2025-07-29 16:06:43,5,cscareerquestions,t3_1mce6wv,False,
n6cnjl4,"All these comments are perfect. I just can’t help but think how bad a picture it draws of him. Most people know mistakes happen at work, it says a lot about them than you. Like I wouldn’t want to work with him.",SZA44,2025-08-01 13:57:07,1,cscareerquestions,t3_1mce6wv,False,
n5t6l5n,"You’ve already answered your own question. Your boss wants you to transition to a leadership role. This most likely threatens this senior dev. If you do transition into a leadership role, you are going to have to approach this situation with that in mind. Go to your manager for mentoring.",stile213,2025-07-29 15:39:19,1,cscareerquestions,t3_1mce6wv,False,
n5ttkmg,"Like others said, bring concerns to manager. Say something like ""hey the senior dev I noticed has been a bit critical of my work recently and doing it in public spaces more often. I dont mind being called out but it seems like he's going out of his way just to do it to me is there anything you can suggest that I can do to best approach this. I dont mind talking to him but I felt it may be best to bring it up to you so to avoid the wrong approach."" Something like that.Unfortunately in this career there are always hostile devs. Some you can learn to co-exist with them, others it's impossible. I've worked with 2 guys like that. First guy, was a screamer. His way or the high-way. I was terrified of hij when I first go tthere. Then I had to work with him. Funny thing was, he ended up being the nicest guy. I learned how to work with him basically. I noticed that if I had a difference of opinion I had to back up my words. Most of the time I was still wrong lol, but sometimes I was right and he gave me credit. I think he liked that I did my own investiagation and even had my own points. I wasnt just taking his word as the god given truth. Now in my second job, I could never figure out the hostile dev. He had no people skills that I could crack. In a lot of ways I compare him to Michael Jordan. He was the guy that knew everything of the project. He produced in his sleep. He didnt mind working 12 hour days. He told managers how to do their job. I fhe didnt like your work ethic, he didnt want to work with you. And I think he realzied early on he didnt like my work ethic (Im more of a9-5 guy). I worked with him on a major project he had created and it went terribly. I kept finding erors and had to change my design like 20 times because each time I came up with a design, another problem would come up. Then he gave my manager a list of his complaints of me. My manager kind of walked on eggshells for him tbh. I will admit some was fair, but others just seemed unfair. The biggest one I remember that I felt was unfair was that my manager said that I have too many commits in my MRs. That happened once and it was because the design changed so much. I fought it but my manager even 6 months later was still using that against me. I ended up getting fired. I dont blame that dev but it defintelty felt like the beginning of the end when I wasnt on his good side.",Broad-Cranberry-9050,2025-07-29 17:25:04,1,cscareerquestions,t3_1mce6wv,False,
n5uohb0,They’re intimidated by you,imagebiot,2025-07-29 19:48:20,1,cscareerquestions,t3_1mce6wv,False,
n5uk086,"Talk to the dev directly, but not aggressively or accusatory. If that doesn't work, talk to managementif that doesn't work, start shopping resumes around",BellacosePlayer,2025-07-29 19:26:54,0,cscareerquestions,t3_1mce6wv,False,
n5v3kse,"So, I’m a senior and we’ve dealt with devs and senior devs like this on my last few teams. Sometimes they do this to cover their own mistakes using a highly visible chat. Sometimes they are completely clueless people that don’t understand that using a wide audience chat is not how you deal with things.So, we’ve fixed this a few ways. First step is to document every single time they call you out on a wide audience chat of any kind. If this person does this to others, probably should document that as well. The more records you have the better. Screenshots are also preferred.Second step is to let your manager know that you don’t appreciate being put on blast by this other dev in a company wide chat especially when they you’re not at fault for the issue. Include your record of every time they call you out specifically and what the actual issue was that had to be resolved. Ask your manager how this should be handled. The wrong answer is “nothing”. We had to do a meeting where all the devs agreed to not individually name people even in our team only chat for issues. Senior Devs can ping people directly and handle it not in a chat.Third step is if this behavior continues and your management doesn’t do anything, notify HR with your documentation. Make sure you have save this documentation somewhere you have access to in case they retaliate (manager, HR, senior dev).On most of my teams, we never had to get past step 2. Only once did we have someone get to step 3 and HR talked to the offending dev and manager. Behavior stopped for a few months and then started up again. In that case, the guy was gone in like 48 hours after he started again because he started blaming people who weren’t on our team or didn’t work on the project with issues.",Enabling_Turtle,2025-07-29 20:58:59,0,cscareerquestions,t3_1mce6wv,False,
n6fo9q0,"stop victimizing yourself, this gets harder to read the longer it goes. Zero sympathy for your lack of awareness, communication skills, and tolerance for the day-to-day of any given workplace.",Jaguar_AI,2025-08-01 22:56:12,-1,cscareerquestions,t3_1mce6wv,False,
n6ox4p7,"Based on my experience the magic ingredients are good communication and presentatiins skills, and politics.",NoWrongdoer2115,2025-08-03 13:32:06,5,cscareerquestions,t3_1mgiuut,False,
n6psfg5,"As a starter:Daniel Goleman - Emotional Intelligence, also his writings on leadership styles and when to switch between themChecklist Manifesto is good for delegationThe Chimp ParadoxPeoplewareAtomic Habits, though I didn't really care for itMedium articlesSource - Diploma for Department Operations Management (UK)",chamigur,2025-08-03 16:16:02,3,cscareerquestions,t3_1mgiuut,False,
n6q9p1b,"Director, vice president and ctos tend to be more people management focus tracks. So you’ll need to go down the EM route which normally isEm -> Sr Em -> director -> senior director -> vice president -> senior vice president -> ctoThe higher the food chain the more day to day becomes big picture, ensuring alignment with leadership down to teams, metrics and more metrics, resourcing, budgeting etc etcObviously mileage will vary but if you're thinking of this track, I would seriously consider an mba with a tech focus. Especially bigger up the food chain you wish to go.",notimpressedimo,2025-08-03 17:42:48,1,cscareerquestions,t3_1mgiuut,False,
n6q2wng,"Thank you. I’m not familiar with the Chimp Paradox, will check it out!",jcasimir,2025-08-03 17:09:12,2,cscareerquestions,t1_n6psfg5,True,
n6ocms3,"You’re not in an awkward spot you’re in a **very normal** one for post-layoff grads. With <1 YOE, you can absolutely apply to both *new grad* and *entry-level* roles. Many companies aren’t strict about that “1-2 YOE” requirement it’s more about whether you’ve shipped code, collaborated with teams, and understand the SDLC, which your Walmart experience already covers.You don’t need a passion project portfolio to get hired, but adding 1–2 small, relevant repos (e.g., a clone or tool using modern stacks) can make a difference if your resume lacks breadth. Focus on roles that mention early-career talent or don’t specify graduation years. Also, referrals have been working for you double down on that through cold LinkedIn outreach or alumni networks. If you're interested, [interviewhelp.io]() has solid system design prep and a community of folks in similar situations. Might help you stay sharp and feel less isolated during this stretch.",Superb-Education-992,2025-08-03 11:07:58,2,cscareerquestions,t3_1memf0k,False,
n6bt1xr,"Im in the same boat. 1.5 years of experience between 2 roles after layoffs at 2 different companies, 2024 grad.",iamjacksbigtoe,2025-08-01 10:49:58,1,cscareerquestions,t3_1memf0k,False,
n5zx0wo,"I started in a support engineer role. If you're looking for something to study, learn what tech stack your company uses. Learn that and bang out a few projects. Then a year from now, ask your boss for some projects from the dev/ops teams. My first job was a support engineer role. I learned Python and powershell to assist the worst team in the company :face_with_tears_of_joy: (because no one likes powershell). I was eventually promoted and learned cloud ops. We were moved to devops. Then I learned the dev side of devops and went to an integrations role in dev. Then I learned leetcode and went to a big tech company.",Reasonable_Bunch_458,2025-07-30 15:47:54,4,cscareerquestions,t3_1md9mb2,False,
n60qzjn,"Eh, honestly if you are doing larger support for a semi large company? You should def be able to talk to people internally. In my honest opinion, experience trumps all. Projects + connections in my op is the only way to really gain traction now a days.",Manney200,2025-07-30 18:04:58,4,cscareerquestions,t3_1md9mb2,False,
n63hnvi,"Use every chance you get to go a little deeper than your job description. If you hear about someone working on cloud migrations, network configurations, or server maintenance, ask if you can shadow, help, or at least learn what tools they’re using. You’d be surprised how much access and insight you can get just by showing curiosity and initiative. Outside of work, keep building your skills around cloud fundamentals. Since you're studying cloud computing, start applying what you're learning in small personal projects. Spin up a website using S3 and CloudFront, automate infrastructure with Terraform, or play around with IAM policies in a sandbox AWS or Azure environment. The AWS Certified Cloud Practitioner or Azure Fundamentals (AZ-900) are great early on. You don’t need them to get a job, but they can show recruiters you're serious. Then, stack on more practical, intermediate certs (like AWS Solutions Architect Associate or AZ-104) when you feel ready. Definitely apply to internships as much as possible, but also start building a presence online. Maybe a GitHub with your cloud projects, or even posts on LinkedIn showing what you’re learning. Follow your interests too but with intention. If you're curious about DevOps, play with CI/CD pipelines. If security piques your interest, try setting up least privilege access or configuring network firewalls in the cloud. Over time, your interests will naturally start guiding you toward the kind of engineering roles you’d enjoy most.",Content-Ad3653,2025-07-31 02:38:53,4,cscareerquestions,t3_1md9mb2,False,
n5zv4xn,"> I always see that the way in is help desk or tech support.Criminally inaccurate.""The"" way is is a degree, with good grades, multiple internships, and demonstrated competence.Then, there's a lot of nothing. If you can't hack that, the ""next best alternative"" might be one of those jobs.Much the same as if you're climbing mount Everest, you should have a pair of well insulated mountaineering boots.The next best alternative might well be a pair combat boots - in the sense that some people wearing those might still lose their feet to frostbite - but they survived. Pretty good if you compare it to a nice pair of flip flops or ballet shoes...To be honest, I don't quite understand your position and your plan - you're at university still, getting the right degree? Focus on the degree, and internships. Better grades, stronger projects, more internships should be worth more than a help desk job in a student's schedule.",okayifimust,2025-07-30 15:39:07,5,cscareerquestions,t3_1md9mb2,False,
n61jx94,"You don't have to be there for a year. Look now while you're working. While you're there, look for ways to utilize coding to make your job easier. Including that on a resume would be impressive and make sure you can quantify the value you added as it makes it much more impactful when discussing it. Good luck!",JBDynamito,2025-07-30 20:21:55,3,cscareerquestions,t3_1md9mb2,False,
n64r2ma,"Great job landing the tech support role! While you’re gaining experience, I’d focus on building projects related to cloud computing, automating parts of your daily work, and learning scripting (Python, PowerShell, etc",Dependent_Gur1387,2025-07-31 08:46:37,3,cscareerquestions,t3_1md9mb2,False,
n66sscd,1. What’s the culture like ? Is development onsite or in another office / country ? 2. Are there levels you can get at your job ? Master that and level up 3. How does your voice help improve the product and what you’re seeing in support ? Historically at a smaller shop with everyone onsite you can relay because of things going on. All I’ve previously needed was one good friend to help get into cool stuff on other teams. I’d look around for mentoring and other ways the company promotes from within,HackVT,2025-07-31 16:14:37,2,cscareerquestions,t3_1md9mb2,False,
n6de2cq,"Definitely keep learning cloud concepts (AWS, Linux, scripting), and start applying for internships early. Tools like Zippia can help you see what roles people with your background typically move into, it’s been helpful for my own planning too.",SnTnL95,2025-08-01 16:04:36,1,cscareerquestions,t3_1md9mb2,False,
n63j92b,"Thank you for your advice! I've already learned a ton more in my job in the last two months than I have in the last 1.5 years at school. They're Definitely giving me more projects I have to do on my own, but none of them are related to anything I'm wanting to grow into. My current work project is installing some cameras in our psych department.",tboneee97,2025-07-31 02:48:28,3,cscareerquestions,t1_n63hnvi,True,
n6096o4,I've seen people move from help desk into workstation support and then from there into other infrastructure side roles. This was not at a software company. I would assume it to be rarer at a software company.,marsman57,2025-07-30 16:45:14,3,cscareerquestions,t1_n5zv4xn,False,
n5xkhna,"It really depends on where you get in. MIT, Stanford, Berkeley might be worth it. Career wise Waterloo might be similar but the student experience at waterloo is not as good.",migoden,2025-07-30 05:57:41,31,cscareerquestions,t3_1mcyd3s,False,
n5xp27e,Does your younger brother plan to work in USA or Canada?,metalreflectslime,2025-07-30 06:39:18,4,cscareerquestions,t3_1mcyd3s,False,
n5z7zku,"For a regular SWE role in tech at any big tech company you're probably better off going to Waterloo considering how astronomical the price difference is. An industry or role that's more prestige-focused for recruiting you'd definitely be better off going to an Ivy or equivalent. So yes, it would open more doors but if he just wants to work in big tech there's no sense in throwing away six figures worth of money for marginal benefit.",ComparisonCharacter,2025-07-30 13:45:52,4,cscareerquestions,t3_1mcyd3s,False,
n5z1wos,"First off, apply to everything. Worst case is he doesn't get in. As your fellow Canuck, The Great One said, you miss every shot you don't take.Second, the connections you make at an Ivy League (and Ivy adjacent like Duke, Rice, Stanford, etc) are invaluable. Despite what tech people like to tell themselves it **does** matter where you go to school. And it matters 10 years after your graduate too.",Early-Surround7413,2025-07-30 13:12:59,10,cscareerquestions,t3_1mcyd3s,False,
n5ykprc,Why do you keep asking this question or very slight variations in so many subreddits (I think even the same subreddits multiple times)?You have your answers. Be happy with them.,dashingThroughSnow12,2025-07-30 11:27:12,4,cscareerquestions,t3_1mcyd3s,False,
n5ymhc7,"Regarding the Ivy League specifically, I’ve encountered vanishingly few Dartmouth, Brown, or Yale grads in my experience in tech over +12 years (big finance, scale up that ipo’d, VC/start up ecosystem). Lots of Harvard, Princeton, Cornell grads. I’m in New York so a lot of Columbia grads wherever you look. Penn has a lot of kids in finance but I can’t think of too many I’ve met outside of that.",DeliriousPrecarious,2025-07-30 11:39:44,2,cscareerquestions,t3_1mcyd3s,False,
n605rbz,"Waterloo is great. It has a great reputation in the Bay. At an Ivy, you'll probably have a better experience as a student and make friends/go to the area that hires those grads.But yeah idk I feel like its only good if you're going for Non Stem reasons. I dont really see an ivy being a cut above except maybe CMU.",just_a_lerker,2025-07-30 16:29:05,2,cscareerquestions,t3_1mcyd3s,False,
n5zbk8e,"It is worth it for any degree, I would think. It would had been nice for me to have had the option when I was young.",etancrazynpoor,2025-07-30 14:04:10,1,cscareerquestions,t3_1mcyd3s,False,
n5zep9o,Attending Waterloo's co op program yielding 2 years of professional experience is better than going someplace else with less internship experience.,drew_eckhardt2,2025-07-30 14:19:46,1,cscareerquestions,t3_1mcyd3s,False,
n60eh9m,Not really.,Eccentric755,2025-07-30 17:09:11,1,cscareerquestions,t3_1mcyd3s,False,
n6iosj1,"You’ll likely be completely away from any technical work. if that’s what you enjoy doing, you might want to rethink. If you’re interested in bringing your technical skills to a more customer facing element of the industry, consider a solutions architect or sales engineer role.",hamdans1,2025-08-02 12:46:58,9,cscareerquestions,t3_1mfotjq,False,
n6ikwno,I’d just be hesitant on doing these moves. It might be harder to shift back to technical roles later. But if you want to explore PM / CSM / manager type roles this is a good transition.,WorstPapaGamer,2025-08-02 12:20:33,2,cscareerquestions,t3_1mfotjq,False,
n6isupj,I guess solution architect is probably the role that suits me better. I have domain experience (Econmics + CS degree) and I am already helping our domain architect and PO a lotI have good social skills and I enjoyr facing customers but I dont want to get completely detached from technical workHow should I work towards a Solution Architect position?,Ok_Reality6261,2025-08-02 13:13:14,3,cscareerquestions,t1_n6iosj1,True,
n6itqge,"Your engineering background gives you what you need, and it’s a highly transferable role. Technical Account Management is another role that would probably give you the balance you’re looking for between technical problem solving/customer interaction. Sales engineer -> solutions architect -> technical account management are all the same skill set but at different points of the customer lifecycle. Those titles sometimes get a bit wonky from place to place but they’re all combinations of the words above.Support Engineering is another one to consider. Bit more transactional, and not as account driven but closer to what you’re doing currently.",hamdans1,2025-08-02 13:18:42,3,cscareerquestions,t1_n6isupj,False,
n6eq9e0,"Try to find a more stable company, startups are great but they're by definition instable. Look for things that are at least Series C and above but the bigger the better.",MountainBluebird5,2025-08-01 19:57:29,2,cscareerquestions,t3_1mesyno,False,
n6eu745,"It was borderline slave labor, but I needed the experience. The pay wasn’t bad \_\_ So it was well paid slavery. Got it.",Early-Surround7413,2025-08-01 20:17:07,1,cscareerquestions,t3_1mesyno,False,
n6h787b,Get into health care if you want more stability,No-Principle422,2025-08-02 04:50:05,1,cscareerquestions,t3_1mesyno,False,
n6kfk6t,"It's pretty rough given your location and the market isn't great either. You could try to do a side hustle in fiverr/upwork, but the pay there borders on exploitation.",fakehalo,2025-08-02 18:32:28,1,cscareerquestions,t3_1mesyno,False,
n6oc9gl,"You've already done what many wouldn’t kept pushing through unstable roles, unpaid labor, and an under-resourced tech scene. That’s not a lack of talent; that’s evidence of grit.Honestly, this doesn’t sound like a you problem. It sounds like a geography + circumstance issue. The startup failures weren’t your fault, and your consistency delivering work, taking initiative is a strong signal that you belong in this field. If I were in your shoes, I’d keep looking for remote dev roles but widen the net platforms like [interviewhelp.io]() have solid job prep resources and community-led support for folks in emerging markets. Also, you could explore regional tech hubs (like Türkiye, UAE, or India) for hybrid or relocation options.If you’re still passionate about coding, don’t let bad luck write your ending. You’ve already proven you can make things work now it’s about finding the right setup to thrive.",Superb-Education-992,2025-08-03 11:04:49,1,cscareerquestions,t3_1mesyno,False,
n6dphk5,Get a master's degree in a rich country in North America or Europe. I know we had Iraqi graduate students in the US. CS job market is super overcrowded everywhere but you have a better chance of making it with a degree from a place people have heard of. Cheapest graduate degree that is legit is [OMSCS at Georgia Tech](https://omscs.gatech.edu/) that is 100% online. You're cut out for CS but nothing about entry level is fair.,NewSchoolBoxer,2025-08-01 16:59:36,-1,cscareerquestions,t3_1mesyno,False,
n6cf6mw,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-08-01 13:13:17,1,cscareerquestions,t1_n6cf6kg,False,moderator
n6bs20r,"Yes, generally anything in R&D",BobbyShmurdarIsInnoc,2025-08-01 10:41:58,2,cscareerquestions,t3_1meshg7,False,
n6ccf0y,"When the VCs get bored of LLM, the slop will settle into spam, bad blogs, and scammers. ML will continue on as a useful, productive technology in a non glamorous way.",Traditional-Hall-591,2025-08-01 12:57:50,2,cscareerquestions,t3_1meshg7,False,
n6g7rsa,"LLMs have a specific niche, no? They basically replaced the field of NLP outside of research (or companies that don't want to waste a fortune on ""AI"" when a simple cosine similarity will do... but those seem to be dwindling). But they're not at all useful for anything related to regression, time series, anomaly detection, etc. except as a feature engineering tool. If you want to move away from LLMs, look for a job in those domains like fraud detection, forecasting, etc. Or better yet, you could even try searching for specific phrases like that on LinkedIn to see if non-LLM API calling jobs show up.",Great_Northern_Beans,2025-08-02 00:51:34,2,cscareerquestions,t3_1meshg7,False,
n6bsw7v,"I work at small medium sized company and we have 0 people who are ai/ml experts yet we have a ton of data that can be uniquely used in machine learning, if somebody knew how to train/build it. Management also loves ai so imo theres likely room at a lot of companies to be the senior ai guy",the_pwnererXx,2025-08-01 10:48:42,1,cscareerquestions,t3_1meshg7,False,
n6drkcz,I worked at a small contracting company. They were still creating their own models. They also did work for the federal government. So these still exist.,Chili-Lime-Chihuahua,2025-08-01 17:09:36,1,cscareerquestions,t3_1meshg7,False,
n6gp3fi,"Yes, my job is looking to hire people for ML but not LLMs (jobs are not posted yet, I'm not involved with the hiring process).",maccodemonkey,2025-08-02 02:39:38,1,cscareerquestions,t3_1meshg7,False,
n6gqyhc,What sort of company/domain are you working in? I've experienced none of the shift you're describing.,anemisto,2025-08-02 02:51:58,1,cscareerquestions,t3_1meshg7,False,
n6k1fgn,"The hands-on core ML work hasn’t vanished but it *has* become a niche within the broader AI wave. Most companies today are shipping products faster via LLM APIs, so roles that once demanded model training and debugging have been flattened into integration-heavy workflows. That said, the deeper work still exists just in more focused places: research teams, model pre-training groups, infra/startup labs, or proprietary AI stack builders.If you’re not seeing these roles on portals, it’s likely because they’re less advertised and more network-driven. You’re not burnt out you’re underutilized. Consider targeting orgs building from scratch (e.g., open-source foundation models, RLHF stacks, or custom embedding workflows) where your skill set is still a competitive advantage. Happy to point you to a few such paths if you're open.",Superb-Education-992,2025-08-02 17:18:01,1,cscareerquestions,t3_1meshg7,False,
n6e5n9x,Probably requires a PhD and publications in top journals (at least at any Fortune 500 company),WeastBeast69,2025-08-01 18:15:55,1,cscareerquestions,t1_n6bs20r,False,
n695dfz,"With only two years of experience, i think you are still in the bottleneck of people trying to break in the industry. The fact the you only want a front end job isn't a good sign imo. Like why did you make all these decisions? Why computer science in the first place, why mechanical engineering, why was it a mistake?",solid_soup_go_boop,2025-07-31 23:02:12,15,cscareerquestions,t3_1meg517,False,
n698ure,No. Source: Current job market,SpecialistIll8831,2025-07-31 23:21:30,18,cscareerquestions,t3_1meg517,False,
n6aac79,"I’d focus on getting a mechanical job, I bet there’s plenty that involve some software skills. Something to pay the bills for now at least then look at transitioning back to software focused after a couple of years, maybe into embedded.",RapidRoastingHam,2025-08-01 03:05:45,4,cscareerquestions,t3_1meg517,False,
n6axuy7,"I have a B.S. in Mechanical Engineering and 4 YOE as a Mechanical Engineer and just switched over to Software Engineer in the space industry. There are absolutely a lot of skills that transfer especially in industries that do a lot of physics-based software development like target tracking or guidance, navigation and control. I’d stay away from front-end development and leverage your skills as a multi-disciplinary engineer and do something physics/real-world based. I think you’re on the right track pursuing aerospace roles.",OrlandoQuintana,2025-08-01 06:04:52,4,cscareerquestions,t3_1meg517,False,
n6a8btr,"I have 5 yoe, no degree but back in Uni.I didn't do front end but my sector (mobile) is completely dead.I got front end interviews, almost landed 2 but there is always someone better.I gave up after a few interviews because it always seemed like someone had more experience or knowledge. So, i would say if you cant land interviews something is really wrong with your resume or skills.My issue was mainly the competition not really the lack of interviews. Although they did dry out and some started saying you need recent experience so it started weeding me out.",Excellent-Benefit124,2025-08-01 02:52:32,2,cscareerquestions,t3_1meg517,False,
n6a9es7,"Try to find Engineering jobs with a software component. Plenty of apps needed in Engineering domains where cross knowledge is extremely valuable. If you are looking for some company to hire you to write a time tracking app, your chances are slim. They can find that talent anywhere now.",InlineSkateAdventure,2025-08-01 02:59:35,2,cscareerquestions,t3_1meg517,False,
n694e9e,"Sorry to not be helpful, but out of curiosity, can I ask why you went from CS to ME?",contactcreated,2025-07-31 22:56:47,1,cscareerquestions,t3_1meg517,False,
n69vax2,Why did u quit cs in the first place,Savassassin,2025-08-01 01:32:13,1,cscareerquestions,t3_1meg517,False,
n6aa438,I'm an angular developer for the last 7 years. Angular definitely is easier to get hired for if you are knowledgeable enough about it.,CheapChallenge,2025-08-01 03:04:14,1,cscareerquestions,t3_1meg517,False,
n6b04ee,You have two strong degrees. Just make some shit up about your work experience. And say you were in school too. Just keep applying. You’re actually in a better spot than a lot of people asking for advice here.,anonybro101,2025-08-01 06:24:54,1,cscareerquestions,t3_1meg517,False,
n5x5t9y,"You need to learn how to code on a team, and usually the best place to do that is product teams that are PM driven and essentially feature factories. I'm not sure what infra you are working on, but when I took an infra job, I ultimately left because I was frustrated with the shit code we wrote and the lack of any sort of real development work. I did all sorts of stuff with cloudflare tunnels, DNS migrations, and dealt with TLS certs, plus on call. The work I really wanted to do, on the database engine, was just not a priority for us, compared to cloud operations.I've seen juniors and new grads do well on infra teams, so it's definitely possible, but all things career progression depend on how much you excel in your roll, and the opportunities your org has to promote you. I'd say that's equally true as a junior engineer trying to make senior in 5 years, as it is for a senior trying to make staff and looking for projects with company wide impact, at least under the system of stack ranking that will average on the organization level.I basically left infra to go back to product, and am trying to make staff now as a team lead. There's no shortage of impactful projects, especially if you can step up and be a leader. I am hesitant to think one domain mints more staff engineers than another, and I'm staring down a company wide rollout of our project for next year, so that hasn't been the case with me.In my experience, the biggest factor is just what you want to do. I tried infra, didn't like it, so went back to product. If you like infra, do it, the amount of work is pretty much insane, and when you don't like it, you'll really struggle to outcompete the equally smart people who do. Most of the job is simply showing up everyday, moving the ball, and stepping up when you need to. If you're looking for opportunities, there's no shortage of that in either domain.",justUseAnSvm,2025-07-30 03:59:48,13,cscareerquestions,t3_1mcwau7,False,
n5x88mf,"This was basically my path and it worked out well for me.In my experience teams like that with a lot of seniors in core/non-product components can be something of a crucible. All projects are relatively large, important, and difficult. If you keep up you can get straightforward and relatively rapid advancement. If not my observation was that there's less knowledge of how to (and willingness to) support than some other teams.Also remember a project with a lot of long tenure seniors is a good sign that the project is interesting and impactful which is generally good for your career and working with experienced people is a good way to learn new things.",scialex,2025-07-30 04:17:20,5,cscareerquestions,t3_1mcwau7,False,
n5xoqnl,"I can share my experience as someone who started out in this kind of role. It is a mixed bag and you can end up being forced into SRE even if you don’t like it. It is ideal if you end up on a platform team that builds products for other engineers, but product engineering can work out poorly for infrastructure in terms of designing systems and making plans that account for reliability, scalability, and anticipating technical debt. Product engineering relies heavily on quick iteration, optics, and easily marketable impact which can be hard to do with infrastructure and legacy systems. You can have a harder time getting promoted and may need to spend more time on painful parts of the job instead of pure coding experience.",Weary-Technician5861,2025-07-30 06:36:22,2,cscareerquestions,t3_1mcwau7,False,
n5xmzei,">Hello! I'm currently a new grad working in FAANG on an infra team.This highly depends on how your company views Infra as a whole, and what specific infra you are working on. Anyone who gets familiarity with GPU infra will be in demand for the next decade",ArkGuardian,2025-07-30 06:20:08,1,cscareerquestions,t3_1mcwau7,False,
n6a5vay,"I landed on an infra/platform team as a new grad at a f500 household name fintech. I was misled and thought I'd be doing mobile, it was a miscommunication during the team matching process. I've been on the team for 3 years. To be honest, it has been pretty miserable, and I actually think it has hindered my career.My team is very top heavy, its all senior and staff engineers. We maintain the service mesh, the problems are all pretty abstract and challenging and require a serious knowledge of the *entire* system, and every item we own is a tier0 critical service meaning zero room for failure. It requires both breadth and depth of knowledge. So finding junior-appropriate tasks was really difficult for the first couple of years. Most of our time is spent putting out fires and handling incidents, and dealing with horizontal asks. The work is hard and the on-call toil is extremely stressful, the work life balance is bad, and the work is simply not fun. It is more of a devops/sre role than SWE, and I am not actually building or creating anything, the work is not fulfilling. I expressed some concern to management that I was not writing enough code and was missing out on vital early-career experiences to hone the basics, but everybody always changed the conversation to tell me how lucky I was to have the opportunity to learn system design and get exposure to kubernetes (sound familiar, OP?). Unsurprisingly, when I finally decided I wanted to switch teams, I was told that I couldn't because I don't have enough experience writing code and other managers want to see evidence that I have worked on substantial projects with object oriented languages. So at my company, I am basically stuck. I worry that if I look for a job elsewhere using another stack, they will think I don't have the skills they are looking for (or that I will land the job anyway and then struggle to ramp up). I do not want to work in similar roles in the future. Going from devops back to SWE is hard - so choose carefully.I think that infra/devops is something that people tend to do when they get tired of app development and are seeking more complex challenges. Some people really just enjoy this type of work, as well, but my experience is they tend to embody the negative stereotype of misanthropic back-end developers, more-so than regular SWEs. That is anecdotal, admittedly. I also think that having a background in regular SWE work will help somebody do better with devops once they eventually get there - it is hard to maintain a platform for service owners to develop microservices on top of, when I have never really done it myself. I do not believe in the idea of ""take on something extremely challenging as a beginner, and rise to the occasion"". Science has shown that this is not the most ideal pedagogical approach. It is like weight lifting: give me a 300lb weight, and no matter how long you let me try, I won't ever get strong enough to lift it. Give me multiple plates and let me progressively try heavier ones, and I will eventually get to the heavier ones.This is just my experience. I struggled to find mentorship and that is a big part of it. The team is constantly busy with high-severity urgent incidents, nobody wants to make time to answer questions and help me. It's been a really shitty experience and I burned out very quickly.tldr: I advise against it, but in this labor market, it may be wise take what you can get.",asteroidtube,2025-08-01 02:36:56,1,cscareerquestions,t3_1mcwau7,False,
n5x77gh,Thanks for the detailed response. I work on cloud infrastructure. Don't think it will entail working on DNS migrations and stuff. Mainly ruby for scripts and kotlin for API development. I'll update it in my post.,Money-Ability-7548,2025-07-30 04:09:51,0,cscareerquestions,t1_n5x5t9y,True,
n5ubxhi,Stop comparing yourself to your brother first of all,LowWhiff,2025-07-29 18:49:02,11,cscareerquestions,t3_1mce4yb,False,
n5t2kzl,"It’s the middle of the summer, every company hired for new grads to start after they graduated in May. The prestige of the companies you’ve worked at are absolutely not the thing that’s holding you back. Just keep it up and you’ll find something eventually. In the meantime always try and talk to your bosses to get the kind of work you want.",duggedanddrowsy,2025-07-29 15:20:26,8,cscareerquestions,t3_1mce4yb,False,
n5yillj,"Keep working, and applying. Lie on your resume to make this sound like a dev job",dmoore451,2025-07-30 11:11:45,3,cscareerquestions,t3_1mce4yb,False,
n5t9lmw,"You graduated in May. Currently it's July. Do the math if it feels like a long time while you already have a job. Yeah it sucks if it's not what they actually advertised. But still, you have a job try to make the best of it.I'm sure there were plenty of decent people at those ""no name companies"" that made you a ""dogshit unserious candidate"", you sure about being this harsh?",CyberChipmunkChuckle,2025-07-29 15:53:10,3,cscareerquestions,t3_1mce4yb,False,
n5xfyn0,The old I.T bait and switch :loudly_crying_face:,throwaway133731,2025-07-30 05:18:15,2,cscareerquestions,t3_1mce4yb,False,
n5y0zk7,"Totally get how you’re feeling—lots of us have been in that “bait and switch” spot early on. Keep grinding on projects and Leetcode, and definitely start networking (it’s awkward but works), If you don't like leetcode questions, I discovered a new leetcode style site named prepare.sh, I saw it mentioned a few times in Reddit subs, its pretty solid",Dependent_Gur1387,2025-07-30 08:33:52,1,cscareerquestions,t3_1mce4yb,False,
n5yayvs,Bro is buying pre built PCs,Special_Fox_6282,2025-07-30 10:09:08,1,cscareerquestions,t3_1mce4yb,False,
n67qb40,You do realize you can automate your tasks in your job and gives you more time to apply to the SWE roles it sounds like you want. Unless by “IT” stuff you mean end user support?,LBishop28,2025-07-31 18:49:33,1,cscareerquestions,t3_1mce4yb,False,
n6cc55q,"Totally fair. Here's a shorter, authoritative version in 1–2 paragraphs. You’re not alone this bait-and-switch into IT roles happens more often than people admit, especially at smaller companies. The key now is to pivot deliberately. Your CS degree and ML background already give you technical credibility; what’s missing is visible *signal* that aligns with SWE roles in fintech or defense.Cold applying won’t cut it anymore not without standout projects or warm intros. Build something sharp and public that mirrors the kind of problems your target companies solve, then use that to spark genuine networking. You’re not starting from zero—you just need to steer with intent now.",Superb-Education-992,2025-08-01 12:56:18,1,cscareerquestions,t3_1mce4yb,False,
n6sh1i0,"Sometimes “leadership” refers to more than just managers. It might include tech leads, architects, or other senior people in key positions who don’t manage anyone else.",dmazzoni,2025-08-04 00:50:58,45,cscareerquestions,t3_1mgzjaj,False,
n6sgonh,Make your manager feel more important. You want that promo or keep your job yeah?,frosty5689,2025-08-04 00:48:49,8,cscareerquestions,t3_1mgzjaj,False,
n6shpks,probably cuz thats what managing is... telling other people what to do is kind of the definition of leading them,ExtraGoated,2025-08-04 00:54:58,6,cscareerquestions,t3_1mgzjaj,False,
n6sh0hg,"It’s one of those things that probably originated in some sort of Ted talk or LinkedIn post at some point, but the intention is a good one. Don’t (micro) manage your people, lead them. Allow your people to make good decisions and trust their judgment. Provide guidance not prescriptive tasking.",I_ride_ostriches,2025-08-04 00:50:48,2,cscareerquestions,t3_1mgzjaj,False,
n6sk1mt,"Because it's definitionally accurate. The words can be, and are, used interchangeably. A leader is someone who has commanding authority or influence. A manager falls within that definition. Even if they're ""spineless yes men"", they still have authority. That's why you have to listen to what they say. That's why they approve your PTO requests, and not the other way around.It sounds like your problem is more with the people working at your company, and less about the semantics of the word ""leadership""... It's not worth your time and mental sanity to get caught up in semantics.",SouredRamen,2025-08-04 01:08:46,2,cscareerquestions,t3_1mgzjaj,False,
n6sitn7,"I architect solutions and guide my team to execute on that architecture. I'm a manager, but also a leader.",c4virus,2025-08-04 01:01:28,2,cscareerquestions,t3_1mgzjaj,False,
n6sh5sn,Idk where you’re are but typically the distinction I make is managers are managers of ICs. Managers of managers I consider leadership since they help navigate the direction of a product or the company while playing a bigger picture. Not sure if that makes sense in your context.,brutusnair,2025-08-04 00:51:41,1,cscareerquestions,t3_1mgzjaj,False,
n6skm88,A leader is someone who makes decisions. A manager is someone who executes those decisions.,Trick-Interaction396,2025-08-04 01:12:10,1,cscareerquestions,t3_1mgzjaj,False,
n6st5r0,lol the modern “leadership” culture is so fucking cringy90 percent of the time these are people who have nothing else to stand on so they invented their own qualifications that they determine the criteria for.Ironically it’s the opposite of leadership,imagebiot,2025-08-04 02:03:09,1,cscareerquestions,t3_1mgzjaj,False,
n6shm7u,“manager” gained a negative connotation so they co-opted a new self-aggrandizing name for themselves,octocode,2025-08-04 00:54:24,1,cscareerquestions,t3_1mgzjaj,False,
n6q9g8y,"That depends on what those changes are. Are those changes increasing the scope of the feature, in the sense that the acceptance criteria for the story get changed? Then politely decline and point out that this is a decision for the product owner.If they are technical in nature (like some refactorings of the code that you are doing, or additional test coverage), then you should probably start creating smaller PRs, and asking for feedback earlier.> After I'm near the finish line and the PR is put outAnyways, try not to equate 1 story = 1 PR. For trivial stories that can be done a in a few hours this might be the case, but for anything complex you should really create multiple, short-lived PRs instead.",just_here_for_place,2025-08-03 17:41:34,3,cscareerquestions,t3_1mgp1ak,False,
n6qifai,">After I'm near the finish line and the PR is put out, he will suddenly remember changes that we should add to the feature I'm working on.This sounds like it should just be a new story where you are modifying a feature, but we really don't know unless you get in to specifics. If the change they ""suddenly remember"" changes how some API would work rendering your current work useless, then that's different then building upon a current feature.>they turn out to not be as straightforward as he thought and I have to work longer to complete the story.By ""work longer"" do you mean the story takes longer or do you mean you are working overtime? If you are working more than 40 hours per week then stop doing that. You probably have standup in the morning since you are talking about stories and points, is this correct?If so, you should be advertising that Senior Dev has requested X / Y / Z changes and that means the story is going to take longer than initially planned. This makes sure everybody is on the same page and people like the team lead can interject if they think something doesn't pass the sniff test.>It wouldn't be such an issue if I found out earlier in the sprint, but with him, it's usually like 1-3 days before the sprint ends and this is a noticeable pattern with him. It drags me down in completing the original task that was assigned to me and the story has chance to rollover and nobody wants that.Nobody should really care if a story rolls over. Sprints are there to collect data for velocity not some hard deadline. If you are constantly rolling over stories the solution is for the team to agree to less points in a sprint.If anything this pattern should show that you need to agree to less points because you know the Senior Dev is going to drop the hammer late in the sprint.> I just want to meet the original expectation of my story before going further and doing more work. The changes he talks about make sense, I just think they can be added in a productive stable manner.If the make sense then talk about adding new stories for these unexpected changes. Those stories can be added to the next sprint in exchange for other work if they are important enough.You should be talking about this like this with your boss in 1-on-1s. You don't have to call out the Senior Dev directly, but ask your boss how they want you to handle situations like that. The answer they give you show you how they want things to run and you can make better decisions going forwards.",diablo1128,2025-08-03 18:26:38,2,cscareerquestions,t3_1mgp1ak,False,
n6qg854,">he will suddenly remember changes that we should add to the feature I'm working on.""This is out of scope; if you want it included i'll have to re-estimate.""Or, in not so many words: ""No!"">Then he pushes for me to make the change in the same sprint by hand waving away ""it should be quick"". I take issue with this because more often than not, when working on the changes he wants, they turn out to not be as straightforward as he thought and I have to work longer to complete the story.""Your taking issue with it"" - that's nice. It doesn't do anything.>It wouldn't be such an issue if I found out earlier in the sprint, but with him, it's usually like 1-3 days before the sprint ends and this is a noticeable pattern with him. It drags me down in completing the original task that was assigned to me and the story has chance to rollover and nobody wants that.What ""nobody wants"" is not your problem. This is the way the cookie crumbles: More work takes more time. It has to come from somewhere.And you need to say so.>""it should be quick"". So.... estimate it and see if it's true. Also ""quick"" isn't the same as ""still fits in the sprint"".>I try not to take it personal, but it's getting harder. It's like he purposefully tries to put me in tight spots to try and get out of it. And it's not like I'm trying to not work. I just want to meet the original expectation of my story before going further and doing more work. The changes he talks about make sense, I just think they can be added in a productive stable manner.Don't tell us, tell him.He might listen, or not. But the main choice you get here is whether you roll over, or stick to well-defined processes, all which tell him that he shouldn't do what he is doing.",okayifimust,2025-08-03 18:15:24,1,cscareerquestions,t3_1mgp1ak,False,
n6qkkok,">After I'm near the finish line and the PR is put out, he will suddenly remember changes that we should add to the feature I'm working on. cool, add it to the sprint board, I'll work on it whenever I get to it >Then he pushes for me to make the change in the same sprint by hand waving away ""it should be quick"". I take issue with this because more often than not, when working on the changes he wants, they turn out to not be as straightforward as he thought and I have to work longer to complete the story. so, there's a communication gap somewhere, he thinks it should be quick, you think it is not quick, both could be true (it's quick if HE do it) >How does your team deal with changes in scope during sprints? we do our sprint as more of a guideline, nobody cares how much task you finish, or finished more, or didn't finish, or keep dragging it to the next sprint, because it'll all come out during perf reviews, everyone is responsible for writing their own perf regarding business impact, if you can't then it's your own problem",NewChameleon,2025-08-03 18:37:45,1,cscareerquestions,t3_1mgp1ak,False,
n6qo0uy,It depends on team culture. Every team does things differently. Typically small changes in PR’s are okay but if it truly is days of additional work you should feel comfortable as a dev to push back and recommend creating a follow up ticket to address next sprint. But it really depends on the changes requested. If they are scope changes then it sounds like your team should be doing a better job refining tickets. If it’s extra work because you didn’t consider all use cases in the application for your change- there’s room for opportunity to gain a higher level understanding of the application.,chevybow,2025-08-03 18:55:34,1,cscareerquestions,t3_1mgp1ak,False,
n6r0u1i,"""If it isn't in the scope, it's not getting done.""Period, end of story.If senior dev still wants those changes, bring it up for discussion in the stand-up. As others have pointed out, more work takes more time, and such changes to the sprint plan need to be discussed.",OneOldNerd,2025-08-03 20:02:57,1,cscareerquestions,t3_1mgp1ak,False,
n6spt8t,"Without details it is hard to say.If its additional features or more testing requirements. Push back and have it be a separate task.If it is required changes or the feature doesn't meet requirements, API interface won't work or there are critical errors in the PR. Try getting feedback early. Either with small PRs or coming up with an approach and running it by your senior. Or do both",frosty5689,2025-08-04 01:43:24,1,cscareerquestions,t3_1mgp1ak,False,
n6ae1iw,"Yes. Learning how business works and how to talk to business people is a very valuable skill.  At my company the most rapidly promote staff Eng are those with these skills, they know how to explain things in ways business stakeholders care about.",Fit-Radio6598,2025-08-01 03:30:52,6,cscareerquestions,t3_1meli1u,False,
n6m0obb,"Do it.You might actually have job security and it's not 0% coding. If it pays the same still do it. The higher you go in CS, the less percentage of time you spend coding anyway. I was Team Lead and was in charge of all training, work allocation and documentation for the team. I also had to talk to other teams about defects and bugs that could have cross-company impact.>Would I be able to come back to full IT work if I don't like business side?Yes, just playdown the business side on a resume. 2 bullet points for that, 2 bullet points for coding, done. Even 100% coding jobs like seeing some business analyst work. Interpreting ambiguous requirements from non-coders is life.",NewSchoolBoxer,2025-08-02 23:56:28,2,cscareerquestions,t3_1meli1u,False,
n6asid7,Domain knowledge can be very valuable if you want to continue to work in the same field.,marsman57,2025-08-01 05:19:28,1,cscareerquestions,t3_1meli1u,False,
n6aet2j,"Thank you for your input. There's a stigma among technical folks that ""Business work"" is not challenging or not worth it.",SadWaterBuffalo,2025-08-01 03:36:09,1,cscareerquestions,t1_n6ae1iw,True,
n6msw6u,Thank you,SadWaterBuffalo,2025-08-03 02:56:51,1,cscareerquestions,t1_n6m0obb,True,
n5zk3mz,"> When I’m asked something technical, I usually need some quiet time to fully understand the question, then I look through the relevant files and documentation before I can come up with a good answer. 17 YOE here -- this is the best way to answer questions, and is what I strongly prefer to do when I have time.The skill is not in having memorized everything, but in knowing where the docs or code are, which parts are relevant to the person asking, and how to synthesize the information you find into an answer that the person who asked will understand. Sometimes the skill is also in realizing that they've asked the wrong question and proposing an alternate question with a more useful answer.Unless you've very recently answered the same question for someone else, or the question is related to the work you were doing moments before the conversation began, being able to give a deep, accurate, off the cuff answer is not expected. Give the best answer you can in the moment, be clear that it's a preliminary answer, tell the person you'll get back to them with a more complete answer soon, and then follow through on that promise as quickly as possible, e.g. via email or chat. (In my position, the real challenge is having time to follow up on question A before I get questions B, C, and D coming in...)The other senior engineers you see answering questions off the cuff are either answering about their current work, or giving a rehearsed answer to a common question, or (worst case) bluffing about how complete/correct their answer is. You might occasionally encounter someone with a near photographic memory for technical things, but it's not the norm. I don't expect it from my team, and I don't feel like others expect it from me.",tylermchenry,2025-07-30 14:45:51,5,cscareerquestions,t3_1md73xr,False,
n5ze0yw,"4.5 YOE is not senior. Imposter syndrome is completely normal.Some tips on communication:- Develop a shared domain language. No terms should have multiple meanings across different teams.- Understand the spheres of “need to know”. E.g, don’t communicate implementation details to non engineers or management… it’ll fall on deaf ears. The higher up or orthogonal to engineering someone is, the more “big picture” they are.- Writing things down is more effective than talking. - Fight your urge to be ultra specific. It’s good for coding, not good for communication. ELI5, always.",unlucky_bit_flip,2025-07-30 14:16:26,6,cscareerquestions,t3_1md73xr,False,
n5zqa4x,"Re: the not having an immediate answer: that never goes away. There is not a dev in the world who can answer every question immediately and accurately. Developers are terrified of saying “I don’t know,” but say it, as long as you follow it with “…but I will find out, just need to check a few things to make sure I’m giving you the best answer possible.”I’ve been a professional SWE for 25 years and I still say this.",RichCorinthian,2025-07-30 15:15:58,3,cscareerquestions,t3_1md73xr,False,
n5zx4yz,"4,5 years is nothing. I call it the ""knows just enough to do serious damage to a codebase"" stage.It's a bit weird you can be a senior after 4,5 year and then it just kind of ends, unless you end up in one of those rare as a hens teeth Staff or Principal roles. But nothing like a Master Builder kind of role for 12yo+ exp developers that just build.With 4,5 years know just enough to get something to work, but don't ask what it looks like. If I see what a lot of seniors in your experience bracket build I get kindergarten glue, cardboard and paper flashbacks. If we would build bridges like that we would be doomed.And they know how to talk about it like it's amazing, using buzzwords, jargon, patterns, everything. CLEAN architecture with Repositories. Yada yada yada. Then you open it up and see a bunch of pathetic tie-wrapped together ViewModels where the actual application's state is passed and duplicated around, interspersed with network logic and other random bits thrown in.So if you feel like you're not that great: it's probably realistic. Try to figure out where your weak spots are and do some deliberate studying in that are. Build throw-away projects to test things. Nothing helps more than studying by doing.",lucasvandongen,2025-07-30 15:48:26,2,cscareerquestions,t3_1md73xr,False,
n644z53,Normal for amount of experience. Focus on learning how the things you’re working on work at the lowest level possible. Expand from there. You’ll always find someone with more knowledge on a given topic.,dandecode,2025-07-31 05:24:49,2,cscareerquestions,t3_1md73xr,False,
n64u292,"Thank you all for the helpful comments. While 4.5 years of experience may not traditionally qualify as senior in most contexts, for the last 2.5 years I was responsible of leading FE initiatives, mostly responsible of onboarding junior developers, made decisions and ensured the team delivered on its goals. So, while I may not fit the classic “senior” definition in terms of experience, my level of responsibility has definitely been on par with that of a senior developer. This is the reason of the feeling and imposter syndrome I was having, because I wasn’t ready for all this. I know I have a long way to go, but I believe acknowledging this is the first step forward. I’ll definitely be putting your communication tips into practice as I keep improving.",caramel_macchiato27,2025-07-31 09:15:03,1,cscareerquestions,t3_1md73xr,True,
n5sonla,Won't even comment on the second point because the first is just so batshit insane from multiple angles.,BKrenz,2025-07-29 14:13:45,25,cscareerquestions,t3_1mccfpp,False,
n5sp6y1,1. Is sus2. Is normal. Many companies even have lifetime NDA,Slappatuski,2025-07-29 14:16:25,11,cscareerquestions,t3_1mccfpp,False,
n5sssba,tell them they accidentally included the C level stipulations into your intern contract,CyberChipmunkChuckle,2025-07-29 14:33:59,11,cscareerquestions,t3_1mccfpp,False,
n5sqs9r,The first clause is reason enough to run,joshuahtree,2025-07-29 14:24:11,5,cscareerquestions,t3_1mccfpp,False,
n5spazr,"That's... Interesting.Those clauses are more for like senior management, and it goes the other way where the company is promising to pay for you. Need more information, break that NDA and tell us what you'd be working on.",BillyBobJangles,2025-07-29 14:16:59,5,cscareerquestions,t3_1mccfpp,False,
n5sz8l2,"Not a lawyer but depending on where you live, they could be unenforceable, or at the very least, not enforceable unless you’re compensated in exchange for it",no_nao,2025-07-29 15:04:40,5,cscareerquestions,t3_1mccfpp,False,
n5sstay,"1 - This would probably scare me away. Buf AFAIK these clauses aren't really as far reaching as you're making it sound, it's usually very specific to if you do something *wrong* that brings about damages to the company. For example, say you infringe a copyright as a part of your work, and the company gets in trouble for it. Or if you leak sensitive company information and it causes damages to the company.It's still a scary clause, and one I don't recall ever seeing. Talk to a lawyer first. Most lawyers would be happy to have a quick consult with you for cheap, some might even do it for free. And I mean a *real* lawyer, not a reddit one.2 - NDA's aren't unusual. *Especially* for a paranoid startup that's still in the stage where they think everyone's out to get them. You leaking their big beautiful startup idea even a couple years after you quit could cripple the company. At least that's what they're imagining.Outside of the startup world, and the government-adjacent world, NDA's become less common.",SouredRamen,2025-07-29 14:34:07,3,cscareerquestions,t3_1mccfpp,False,
n5t0wou,"I would ask in a legal sub, or better yet find an actual employment lawyer, about these stipulations. As others have said some items may actually be pretty limited and/or outright unenforceable. I wouldn’t sign something like that without clarification though.",funkbass796,2025-07-29 15:12:34,2,cscareerquestions,t3_1mccfpp,False,
n5wmkh4,"Are you in the US? Is there a substantial educational component in this internship? If not, unpaid internships are now illegal. Back to your question. You should cross out all the indemnify language, it is inappropriate. The legal relationship between you and your employer is fully and sufficiently defined in various legislation including Worker’s Comp, EOE, ADA, etc. regarding an NDA, very normal. It should be lifetime. Blabbing about your ex employers work processes and IP is not cool.",Joe_Starbuck,2025-07-30 01:56:41,2,cscareerquestions,t3_1mccfpp,False,
n6lkntw,never do unpaid work,thenextdemna,2025-08-02 22:21:51,1,cscareerquestions,t3_1mccfpp,False,
n5snrxi,"The formatting on your resume is a little wonky (inconsistent spacing, indentation, capitalization) so I would clean that up first",Many_Reindeer6636,2025-07-29 14:09:25,13,cscareerquestions,t3_1mcca9v,False,
n5stxjs,"I am sorry but that is very hard to read resume. The indenting changes from section to section, in the last and second to last section the bullet points are different indented. Then in the section before that, you use hollow bullet points instead. In the section before that, you have spaces between your internships, spaces that were not between key projects. Even in the last section, you have 3 leaderships opportunities, with a spacing between the 2nd and 3rd, but none between the 1st and 2nd. Literally every section is formatted differently, and content in same sections is formatted differently.I also wonder what happened that neither of your internships nor your trainee role resulted in return offers?",Haunting-Speech2038,2025-07-29 14:39:30,10,cscareerquestions,t3_1mcca9v,False,
n5t6lug,"This is normal for new grads. Try to get your number up to 500-800 applications, and expect to not get an offer until at least 6 months into your job search. Hopefully you get one before then, but 6 months to a year of unemployment is very common.",Illustrious-Pound266,2025-07-29 15:39:25,9,cscareerquestions,t3_1mcca9v,False,
n5sx03m,"Your formatting (especially alignment) is a mess, especially alignment. You aren't consistent with capitalization. Your internships are in reverse order. You mention your degree in two places, why? The banner ad for your school should get your resume rejected immediately. Did you do any proofreading?If the format is this wonky one has to wonder if anyone's actually reading the text.",Loosh_03062,2025-07-29 14:54:05,6,cscareerquestions,t3_1mcca9v,False,
n5t5wzm,Bro remake your CV in Canva pliz...no offense but it is just horrible,Ok-Lifeguard-9612,2025-07-29 15:36:11,4,cscareerquestions,t3_1mcca9v,False,
n5tyc6x,"Your resume is ugly and I don’t know where to start. I hate reading it. Don’t bold individual tech in the middle of the sentence just to emphasize it. It make me think “why he bold it? It’s not so impressive to know some tech” Try a minimalist cv.Think : 100 CV, 100 people, all of them say they know NodeJS and API. Do I trust them not lying? No. “I helped, optimized and transformed some websites with amazing techniques” - why should I believe it? It’s too vague.Maybe try say some original bullet points like : know how to reverse a linked list or can implement quicksort algorithm from scratch. Or helped debug some strange programs and solved problems . These quality sounds like junior and believable snd genuine. Merge these statements with your academic performance",PomegranateBasic7388,2025-07-29 17:46:27,3,cscareerquestions,t3_1mcca9v,False,
n5tcdvh,"Something I've noticed about new grads is that they tend not to realize that all new grads tend to have roughly the same experience/skills as all the other new grads because you've all roughly taken the same coursework and the same projects which means none of you really tend to stand out and therefore getting picked becomes luck of the draw. So I think the answer that I would have here is to think about what you're doing to set yourself apart from others and how you're showcasing this to potential employers.Other than that, I'd say that software engineering jobs seem harder to come by than usual, even for those with experience, and the first job people find after college in their career field is typically the most difficult job search they have, so finding a job will probably take a while. TBH 100+ job applications really isn't that much and I kind of think you have unrealistic expectations on how long and how much work goes into finding a job as a new grad. Also, in addition to the resume advice others are giving you above that you should listen to, your resume also seems to be missing a skills section which generally should be included for a software engineering or other technical role.",Zealousideal_Meet482,2025-07-29 16:06:07,3,cscareerquestions,t3_1mcca9v,False,
n5stw48,It's maybe good idea to open your github so that your projects are visible.,Astral902,2025-07-29 14:39:18,1,cscareerquestions,t3_1mcca9v,False,
n5t0d4m,"Your resume formatting is weird. Clean that up like other comment says. Eye tracking surveys show HR spends 15 seconds max reading it. Your font size is small. I'd get rid of one project to make more space. You have internships, you don't need projects anyway. Leadership experience in extracurriculars looks just as good, maybe better.You have internships right, you should be getting callbacks. I looked up the university given the non-4.0 grading scale, TCS in India had [big layoffs](https://www.reddit.com/r/cscareerquestions/comments/1mb7cxe/offshore_services_giant_tcs_is_laying_off_12000/) and that's not a good sign for the industry as a whole. Still, you should at least make it past the initial screeningOne of those companies should have wanted to hire you or offer a second term to come back. It's not a big stretch to think you were just resume boosting and didn't really want to work for them. Better to have 3 internships than 0 by far but you really only needed one. I'm not saying take 1 or 2 off your resumes, just that 3 isn't all upside.",NewSchoolBoxer,2025-07-29 15:10:01,1,cscareerquestions,t3_1mcca9v,False,
n5q50lh,It’ll take extra time that’s a given but it’s not over no. You need math for computer science thats without a doubt,styada,2025-07-29 02:38:43,11,cscareerquestions,t3_1mbzrpk,False,
n5q6t82,i had take math from remedial algebra at my cc all the way to calc 3 & linear. it was a grind but if i could do it you can definitely do it! take a math class every summer if you can. also you don’t have to wait for class to start coding.,SUsudo,2025-07-29 02:49:49,2,cscareerquestions,t3_1mbzrpk,False,
n5q4myd,lol no,Sufficient_Face_4973,2025-07-29 02:36:24,2,cscareerquestions,t3_1mbzrpk,False,
n5q8htv,"Nah. Keep going, your path sounds normal. I did all the same shit you’re describing except my pre cal was one semester. If it takes an extra year then who cares. Just focus on your gpa if you want to transfer.",ATXblazer,2025-07-29 03:00:29,1,cscareerquestions,t3_1mbzrpk,False,
n5qe1un,"if it makes you feel any better, when i went to regular state university i couldn't pass discrete math the first two times and because of that i couldn't move on to the rest of my CS courses for a year because they all depended on the students having passed discrete math.",spike021,2025-07-29 03:37:24,1,cscareerquestions,t3_1mbzrpk,False,
n5qgi07,"I had to take precalc in college freshman year, and even failed calc 1. now have a full time SWE job. so yeah you'll be fine.",LurkingSlav,2025-07-29 03:54:23,1,cscareerquestions,t3_1mbzrpk,False,
n5qlpuf,"I mean you probably have to take extra classes but it's legitimately no big deal. School isn't a race trust me. People start college late in life. Just actually take in the material and learn. Math IS programming. You know how in algebra you're manipulating equations and assigning variables and shit? That's literally how you think as a programmer. Those geometric proofs? That's essentially stepping out code. Math brain and code brain are very similar to a certain extent. Buckle down and take the classes more serious now. Don't worry about speeding through, actually learn. You'll be thankful later on you did",Edraitheru14,2025-07-29 04:32:34,1,cscareerquestions,t3_1mbzrpk,False,
n5r943g,"If you decide to not take the earlier maths or learn on your own, it's over. If you decide to spend a year and a half catching up your math skills, you'll be fine.",Empty-Scale4971,2025-07-29 07:59:21,1,cscareerquestions,t3_1mbzrpk,False,
n5svwoq,Summer school to catch up (2026),ewhim,2025-07-29 14:48:55,1,cscareerquestions,t3_1mbzrpk,False,
n5q6b4v,CLEP exampatrickJMT,kmanifold,2025-07-29 02:46:41,1,cscareerquestions,t3_1mbzrpk,False,
n6qkcqg,Is this for senior manager or manager? If the latter that sounds like a crazy down level.,Clean_Breakfast_7746,2025-08-03 18:36:36,2,cscareerquestions,t3_1mgnkwh,False,
n6qs4cc,I don’t think the titles tell anything about seniority but I will find out. Hopefully I can get some answers to my question,Some-Strawberry-584,2025-08-03 19:16:48,1,cscareerquestions,t1_n6qkcqg,True,
n6pv4dp,Depends on the details. A start up can be terrible. It can also be a fantastic learning experience.,Firm_Bit,2025-08-03 16:29:51,13,cscareerquestions,t3_1mgnkvl,False,
n6q6rkx,"In general, startups can be a great way to learn a lot. The issue with new grad though is you may not learn the extra stuff around working at a company that a more corporate environment would give you, like having the best practices in code, ensuring approvals are up to standard, etc.Also from the context you gave around this startup:* Cofounder is pressuring you to join* They already haven’t paid you for work* Gave you an exploding offer (< 24 hour turnaround time)* Average tenure is a year which implies high churnThese are all red flags, I would really consider if you want to work here since from the small info you’ve given me it doesn’t sound great. That being said, it’s a tough market and a job is 100x better than no job.",JustJustinInTime,2025-08-03 17:28:18,9,cscareerquestions,t3_1mgnkvl,False,
n6qien7,"In this market, new grads should work wherever they can get experience. Emphasis on ""work"" not volunteer.",cs_pewpew,2025-08-03 18:26:32,4,cscareerquestions,t3_1mgnkvl,False,
n6q3awn,What’s the alternative? Unemployed?,soscollege,2025-08-03 17:11:10,5,cscareerquestions,t3_1mgnkvl,False,
n6pvn5i,Depends tbh you will probably have to get up to speed quickly but will be able to learn a lot. As long as you believe in the product/like the work and are getting paid/(can handle periods without) you should be fine,No-Money737,2025-08-03 16:32:30,1,cscareerquestions,t3_1mgnkvl,False,
n6pwrdp,"I worked at a startup of around 15-20 people straight out of college. It was incredibly stressful but it was also an incredible learning experience not just as a software developer, but just dealing with things in an office environment that’s outside of software development",benwithvees,2025-08-03 16:38:15,1,cscareerquestions,t3_1mgnkvl,False,
n6q3bka,"My first job was a startup. It was total chaos, but it was also amazing. I was thrown in the deep end of the pool and told to sink or swim. No hand holding, no nothing. Don't know something? Figure it out, nobody is there to babysit you. I was there for just over 2 years and I think it was the equivalent of 5-6 years of experience had I gone to a more established place.",Early-Surround7413,2025-08-03 17:11:15,1,cscareerquestions,t3_1mgnkvl,False,
n6qa65d,If you’ve got grit it’s the best option. You will learn so much but it isn’t easy no matter the environment and there’s a wide spectrum.,hensothor,2025-08-03 17:45:10,1,cscareerquestions,t3_1mgnkvl,False,
n6qg4av,"If I have a small pre series A team, I don't understand why I would be pressuring a new grad to join unless I was planning on paying a comically low salary and not really letting them take PTO, or something equivalent.Still an income, though, so take it if it's your only option and/or you just want the startup experience.",BubbleTee,2025-08-03 18:14:51,1,cscareerquestions,t3_1mgnkvl,False,
n6ql3x1,startups can be really great in terms of actual learning and responsibility but this particular startup has red flags out the wazoo,motherthrowee,2025-08-03 18:40:33,1,cscareerquestions,t3_1mgnkvl,False,
n6edryr,Python is used more often with AI and data analysis.,khanman504,2025-08-01 18:55:35,8,cscareerquestions,t3_1mf4sve,False,
n6edzry,"Because C# and TypeScript are both ""made"" by Microsoft, they play really nicely together, and have a lot of the same features/concerns. So I'd recommend JavaScript (TypeScript).If you're looking to go deep in AI, LLMs, data science, data analysis, that kind of thing, then Python is probably the better choice. But I'd go with TypeScript.Plus, Python is pretty easy to read and write, once you have a few years in your primary language. I play with the free AI model's all the time. Editing the Python isn't an issue at all.",AmSoMad,2025-08-01 18:56:38,3,cscareerquestions,t3_1mf4sve,False,
n6elifh,Btw I hope you know that the guys who do the Math behind it are the ones who get paid a fuck load of money. They usually all have at least masters or phd’s so you probably wouldn’t have gotten the Role. Otherwise I think you should build projects and learn the stack which companies need,No-Test6484,2025-08-01 19:33:47,2,cscareerquestions,t3_1mf4sve,False,
n6ffj1m,"SQL + Python can take you towards AI, Ml, Data Analytics, lots of opportunities. For Python you can try out my free daily newsletter where I send byte sized Python snippets that you can just glance through to start with.https://pandas-daily.kit.com/subscribe",freshly_brewed_ai,2025-08-01 22:06:57,1,cscareerquestions,t3_1mf4sve,False,
n6rg7mg,"Well for AI, you'll need to know Python since that's what everyone is using for AI and Data Science (although R is another popular option). You can also use Python for back-end like you would with C# or Java or JavaScript/Node.js. But for front-end web development, JavaScript is pretty much an essential requirement, there's no way around JS for front-end web dev (there is TypeScript, but TypeScript is just JS with static typing and additional features, and you need to know JavaScript in order to know TypeScript, but since it includes static typing, your knowledge of C# will make it easier to learn TypeScript, but you must have JavaScript fundamentals down beforehand!)",rbuen4455,2025-08-03 21:21:01,1,cscareerquestions,t3_1mf4sve,False,
n6eyypp,"JS/TS is easier to learn if you know C#, also being one of the C inspired languages it follows much of the same syntax. Python is a simple language, but does things completely differently. If you want to do AI, Python is a better pick. JS isn't really used for AI other than some niche web stuff.",Plus-Anywhere217,2025-08-01 20:40:46,1,cscareerquestions,t3_1mf4sve,False,
n6ejh70,"This, if you are into AI models python should be your focus",AffectionateZebra760,2025-08-01 19:23:37,1,cscareerquestions,t1_n6edryr,False,
n6ej2f4,Thanks for the tip!,Willy988,2025-08-01 19:21:35,2,cscareerquestions,t1_n6edzry,True,
n6emvy7,"Yeah I’m fully aware of that, but I don’t love math like that so I’m staying away from being a “data scientist” lol",Willy988,2025-08-01 19:40:40,1,cscareerquestions,t1_n6elifh,True,
n6fj727,"Great, subbed’",Willy988,2025-08-01 22:27:25,1,cscareerquestions,t1_n6ffj1m,True,
n648kmg,"TLDR -  Stripe pays twice but WLB sucks.What's the question? If you are young and single and want to save a nest egg ""at any cost"" .. sure!",Mo_h,2025-07-31 05:55:24,6,cscareerquestions,t3_1mdtm6z,False,
n64hc5z,"I just got hired at Stripe. I was in the same position as you reading all the complaints about stripe WLB etc. I left a job I got bored at even though it was very nice WLB. From talking to real people at Stripe it sounds like the WLB is not terrible, but I also don't think it is a place to coast and chill. Fine for me because I am looking for a bit of a new challenge.My guess is the WLB complaints are a bit negatively biased.",flash_crypto,2025-07-31 07:14:11,7,cscareerquestions,t3_1mdtm6z,False,
n64gi0s,I work at Stripe; been here for a few years.I think Stripe got a bad rap in 2022-2024 when a ton of Amazon middle managers joined and tried to import their work culture. There was a ton of empire-building and politics at the time. Many of those people left or were purged in waves of performance-based layoffs.I personally think that the work culture has improved but of course it depends on the team and manager. Don't just take my anecdotal experience as truth: you can tag the company on Blind and try to solicit some opinions from other employees.,boi_polloi,2025-07-31 07:06:25,11,cscareerquestions,t3_1mdtm6z,False,
n64ap5c,"I'm at a Stripe like company: performance reviews every 6 months, high expectations, and tight delivery schedules.From your description of how you work, ""bust my ass for 1.5 years"", you'll most likely do fine, in fact you might even have better teammates. When you work for a company like that, you're basically signing up for onboarding yourself in 6 months, and committed to staying out of the bottom 5-10% of the team.At larger companies, there's opportunity to really go beyond your role, the performance review process is standardized, and when you submit a a promo packet, you'll get a response. I don't think it's that bad, but I also stepped up as a Senior to be in a team lead role, so that's a sort built in ""exceeds expectations"" as long as we deliver impact every perf period. It's fine to be motivated by money, I check stock price all the time, but the challenging nature of the work means folks that are passionate really hold an advantage.As far as concern over getting PIP'd. I've found that the people on the PIP shortlist are the same ones that are more motivated by money than actually becoming better software engineers. In a workplace like a large company with stack ranking, you're not only competing against smart people, but smart people who are highly motivated and ambitious to move ahead.",justUseAnSvm,2025-07-31 06:13:59,2,cscareerquestions,t3_1mdtm6z,False,
n65p4wf,I guess they always are,HackVT,2025-07-31 13:01:27,1,cscareerquestions,t1_n64hc5z,False,
n65l37g,Sounds like bs. I bet it's still toxic AF.,None,2025-07-31 12:38:24,-3,cscareerquestions,t1_n64gi0s,False,
