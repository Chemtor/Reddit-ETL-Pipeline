id,body,author,created_utc,score,subreddit,parent_id,is_submitter,distinguished
n5ogb1b,">What’s changed?It's a bad job market. There have been waves and waves of layoffs across the industry. Even for experienced folks, there are lots more laid-off people looking for jobs in this market so it's just more competitive. Entry-level is fucked beyond belief.>Why are companies acting like jerks?They can afford to be more picky. Sometimes, it does seem quite ridiculous though and I do feel that many employers actually have unreasonable expectations and are so hostile/skeptical of others' work experience that they want perfection.",Illustrious-Pound266,2025-07-28 21:03:30,258,dataengineering,t3_1mbs1iw,False,
n5okh9y,"Yes 1000%. Data engineers are now expected to be a business analyst, data engineer and data analyst at the same time. I recently joined a new company and I'm absolutely blown away by the use of delivery teams, lack of anyone doing real work outside the data engineer and dashboard critiques from end users. Then they wonder why they can't find someone or when they do ends up telling them ""I haven't done that before"" and throws off the quarters goals, which is unacceptable. No idea how to deal with it but I really think they're just using the shit job market to expand our responsibilities to save money in the short term. In 5 years when the data no longer makes sense and they need to find another excuse for a redesign we will see the find out part of fuck around and find out.",SoggyGrayDuck,2025-07-28 21:24:06,105,dataengineering,t3_1mbs1iw,False,
n5pa727,"Agreed. The skill set required for data engineers has grown a lot faster than the pay. It’s basically the awful job market allowing employers to be more picky and hold out for unicorns.These days DE’s are also expected to have a deep knowledge of things that used to fall under DevOps, like CI/CD, and infrastructure as code. There’s also far more stakeholder management required as BAs and middle managers have gotten wiped out.",Acceptable-Wasabi429,2025-07-28 23:40:54,27,dataengineering,t3_1mbs1iw,False,
n5okjk6,Funny post history,Onaliquidrock,2025-07-28 21:24:24,98,dataengineering,t3_1mbs1iw,False,
n5ofwxg,Tell me more about your Reddit post / comment history … how many jobs do you typically have at a time?,winsletts,2025-07-28 21:01:33,71,dataengineering,t3_1mbs1iw,False,
n5oqt16,"The perks part is funny since you did have two full time jobs. That said, the job market is brutal. Healthcare is the main industry that is hiring but it is difficult to transition from one industry to another",shadow_moon45,2025-07-28 21:56:13,28,dataengineering,t3_1mbs1iw,False,
n5oubbo,"Bro, same. 10+ years. Was in the position where I was the one hiring a team last year. Now on a bullshit job search myself for 10 months.",Resquid,2025-07-28 22:14:43,11,dataengineering,t3_1mbs1iw,False,
n5ox80u,Willing to connect my fellow data engineers with two potential opportunities. DM me directly.,ahmer_amin,2025-07-28 22:30:15,8,dataengineering,t3_1mbs1iw,False,
n5pfzr5,It’s all data scientists or AI engineers now. Pipeline are taken for granted.,flyingbuta,2025-07-29 00:13:14,8,dataengineering,t3_1mbs1iw,False,
n5qc9jq,Most all of these interviews are performative so I try not to take them personally. I just got hired on mid-level and the technical interview question I had to answer was a LC easy question asking to return a min value from an array.I’ve done a bit of work in AWS and they liked that I understood the industry and had done extensive work in regulatory research and converting those to technical solutions. But what I think what actually got me hired was that a Senior Engineer at the company who is respected by my new boss vouched for me pretty hard.It’s dumb that we have to do a ridiculous song and dance for employers in the interviews but that’s the metric we’ve all collectively agreed to compete with each other in. When the person making the decision likes you they will scrutinize less over the petty things and hire you for those transferable skills and mostly that they could see themselves actually want to work with you.,bg_bearcules,2025-07-29 03:25:14,7,dataengineering,t3_1mbs1iw,False,
n5tcbuh,Nice idea !! but please remove \_\_pycache\_\_ from the repo,Awkward-Cupcake6219,2025-07-29 16:05:51,81,dataengineering,t3_1mc9qcp,False,
n5u2qsq,You missed the chance to call your project `kafkaesque` :face_with_tongue:,sjcuthbertson,2025-07-29 18:06:23,80,dataengineering,t3_1mc9qcp,False,
n5u5e9v,Insufficient bureaucracy and alienation. Could be improved by implementing a dreamlike sequence where the code is inexplicably flogged in an attic.,Impressive_Bed_287,2025-07-29 18:18:44,35,dataengineering,t3_1mc9qcp,False,
n5u36x6,Show this over in r/apachekafka,kabooozie,2025-07-29 18:08:27,13,dataengineering,t3_1mc9qcp,False,
n5sy3oj,That theme is nice,duranium_dog,2025-07-29 14:59:15,8,dataengineering,t3_1mc9qcp,False,
n5uiqq2,"Awesome, the best way to learn!",calvincat123,2025-07-29 19:20:53,3,dataengineering,t3_1mc9qcp,False,
n5uzhqw,"That's so cool! I haven't done Kafka from scratch, but I did spend time automating some web tasks with Python. For proxies and scraping, Webodofy worked well for me. If you dive into automating Kafka tasks, those skills might come in handy too!",Anyofourclients,2025-07-29 20:40:08,2,dataengineering,t3_1mc9qcp,False,
n5v45xa,This is so cool! Great job!,anxietymeetsart,2025-07-29 21:01:45,2,dataengineering,t3_1mc9qcp,False,
n5wr283,"You built a simple somewhat queue with lots of flaws, could have just used -> https://docs.python.org/3/library/queue.html.You did not implement actually anything that makes Kafka unique such as topic partitioning, segmenting, storage, restrained pulling on the consumer side...What you built has NOTHING to do with kafka, not even a mini version. You implemented a simple observer pattern with a broker in between that is neither thread safe nor supports any form of concurrency (it's not even in a state to be called a queue)",liveticker1,2025-07-30 02:23:09,5,dataengineering,t3_1mc9qcp,False,
n5t6tvy,Where did you find the paper,k_schouhan,2025-07-29 15:40:27,1,dataengineering,t3_1mc9qcp,False,
n56y1ap,Was just in a meeting today and was promised “data is encrypted. “Good time to recall the story of the scorpion and the frog,chock-a-block,2025-07-26 01:27:36,74,dataengineering,t3_1m9gksl,False,
n56y8ne,Microsoft stocks are about to take one hell of a hit. The EU is going to want a lot of clarity on this and could easily spell the end of Azure in the EU.,fake-bird-123,2025-07-26 01:28:54,53,dataengineering,t3_1m9gksl,False,
n56w9cq,Submitted article mirror: https://archive.is/he5ui,throwaway16830261,2025-07-26 01:16:23,10,dataengineering,t3_1m9gksl,True,
n59c9rz,"I think it would be a good time for people to review the Patriot Act (several of the clauses are quite active), the FISA courts, SCHREMS II and GDPR. all of those are interrelated and the US ones caused the EU ones. This has been an issue for quite a while. This is just the first time Microsoft has publicly admitted it. BTW, this is also true for AWS and Google. People are always confusing data locality with data soverignty.",marketlurker,2025-07-26 13:05:04,7,dataengineering,t3_1m9gksl,False,
n58m0ui,"That's not news at all, the CLOUD act has been around for a lot of time and specifically states this.",SpookyScaryFrouze,2025-07-26 09:37:00,3,dataengineering,t3_1m9gksl,False,
n580p5w,Current US sentiment towards ingestion of data for training LLMs is not helping the optics here either.,MrB4rn,2025-07-26 06:10:49,3,dataengineering,t3_1m9gksl,False,
n59zcf9,"This applies to all American companies doing business outside US. The CLOUD act has been here from 2018. MS, Amazon and Google will have to create completely independent companies for Europe if they want to avoid CLOUD act.",Apart-Entertainer-25,2025-07-26 15:15:59,3,dataengineering,t3_1m9gksl,False,
n570r5f,So like China? I didn’t think that was possible in the U.S. :neutral_face:,LiKenun,2025-07-26 01:44:41,8,dataengineering,t3_1m9gksl,False,
n59s1ag,This must be why Microsoft and others also do Sovereign Clouds.,Additional-Ad8147,2025-07-26 14:37:04,1,dataengineering,t3_1m9gksl,False,
n59br61,Seems like they killed their homomorphic encryption research as well.,Mithrandir2k16,2025-07-26 13:01:45,0,dataengineering,t3_1m9gksl,False,
n5z38gq,Sane take. Ironically I'm pretty sure this was written by AI,One-Salamander9685,2025-07-30 13:20:14,56,dataengineering,t3_1md5wp9,False,
n5z62dt,"Great take. Large orgs are filled with sycophant middle managersI have had two F500 CTOs tell me “when one of my managers asks for headcount, I tell them they first need to explain why AI can’t do this job in a year” word for word. I know they all socialize with each other, so I’m sure the mindset will continue to spread until there’s an infamous AI-employee blow up",EazyE1111111,2025-07-30 13:35:34,13,dataengineering,t3_1md5wp9,False,
n5zh7zi,"I'm so glad we created a ruling class of idiot-kings convinced that bullshitting each other is the highest calling and the only way to manage a business, then built a machine that writes infinite sycophantic bullshit.Honestly we're lucky they aren't *all* worshipping ChatGPT yet.",GrandMasterSpaceBat,2025-07-30 14:32:02,7,dataengineering,t3_1md5wp9,False,
n6462vg,"This is a really great take. LLMs are great tools, but nowhere close to replacing anyone. Now we just have to convince management to pay for licenses *and* headcount lol",wombatsock,2025-07-31 05:34:03,2,dataengineering,t3_1md5wp9,False,
n661vy9,"I don't even go to my boss with questions anymore. He literally just types into ChatGPT, *prints it* then gives it to me. ![gif](giphy|Mp4hQy51LjY6A)",Drone_Worker_6708,2025-07-31 14:07:51,2,dataengineering,t3_1md5wp9,False,
n5zd8lb,"Sure it works ""well enough"" now but without experience and knowledge how will a user know when LLM goes sour or starts hallucinating. Without people to correct the output, what do you do when it does?  AI is a tool.  History's most expensive rubber duck.",CiDevant,2025-07-30 14:12:34,3,dataengineering,t3_1md5wp9,False,
n68pb1n,"> You won’t be replaced by a language model. But you can be displaced by the perception that one is “good enough.”I think the arguments on both sides of the LLM table are misplaced.Every conversation online about AI replacing humans is centered around looking at it from an individualistic perspective. But that’s not how labor works in the workplace.Essentially, both of the below statements can be true:- AI can’t be a drop-in replacement for Data Engineering- I, as a Data Engineer, can be replaced with AI.If a company begins using LLMs to perform tasks that are repetitive/boilerplate/specific to the strengths of the LLM, and that work makes up a X% of the labor of their data engineering department, allowing for more time from each individual data engineer to perform more work suited for the human DE, then justification for keeping ALL of the original labor isn’t there - assuming the same amount of work is being done.When looking at this from the macroeconomic scale, yes the usage of LLMs to increase productivity in the workplace - whether by agentic automation or simply by using it as a quicker and more efficient task-oriented search engine, WILL have an effect on the number of jobs available in DE and very well could lead to YOU being replaced by an AI, while not replacing all DEs.At any rate, I generally agree with your points on side-stepping being labeled for replacement by embracing and becoming the expert in the business with LLMs usage. It’s what I’ve done and led to me being promoted and now sitting in a much higher position within the company I work for.",cloyd-ac,2025-07-31 21:37:50,1,dataengineering,t3_1md5wp9,False,
n5z7hzk,"I used AI to clean up my brain dump a bit but it missed many points (LLMs do not understand what is important in a text for example, LLM summaries feel like random sampling sometimes) so I re-edited it and that's why it looks like a readable partly generated mess. Hence ""quick"" This take comes from talking to a ton of people in the industry from practitioners to vendors (i am a DE and a cofounder at dlthub and thus come in contact with a lot) and tying together what i see from people in different positions.",Thinker_Assignment,2025-07-30 13:43:17,13,dataengineering,t1_n5z38gq,True,
n5z96y5,"there's another character i didn't talk about in the above and that's the LLM ""oracle"" - the person who believes LLMs will solve everything, and believe LLMs are actually a replacement or on track to be a replacement for humans. Those are the most dangerous because they spread false ideas that are very attractive and get traction despite their incorrectness.This makes me think back to 2014? when consultants promised data science would predict the future and who wowed management in presentations because big words and pretty charts, but in practice charged for work that never worked.The good news is this won't change our outlook - the antidote to being scammed is having knowledgeable people in house to cut through the BS.",Thinker_Assignment,2025-07-30 13:52:13,7,dataengineering,t1_n5z62dt,True,
n5zm0li,I like the emphasis on *all*,Thinker_Assignment,2025-07-30 14:54:55,2,dataengineering,t1_n5zh7zi,True,
n5adjlq,"The concept you discuss is unique identifier, not primary keys. A primary key is a unique identifier in the context of a relational database. For a long time, it was impossible to have a primary key in a data lake (which is the main storage strategy in DE right now) because data was stored in files, within a file system. Most files structures / tables probably (hopefully) had some kind of unique identifier but no primary keys.Regarding DRY, this is a not really a database or data modeling concept, it is a development concept. In data modeling, the concept you are looking for is data normalization. A ""dry"" schema is in third normal form or 3NF of higher. Which is 100% related with having a unique identifier. You can search for Boyce Codd rules.",hectorgarabit,2025-07-26 16:30:13,83,dataengineering,t3_1m9xbk5,False,
n5aegpa,"Surrogate keys in the DW as PKs built from one or more business columns. DW must be agnostic to the sources. Hashing is one method, guids another. Guids are safer for truly unique, and hashing is ok to detect any change in a row for SCD2. Layering is important. Staging, unique raw, business layer, snowflake/kimball layer. Single source of truth and data lineage end to end. Users will ask, where does the data of this table/column come from. So make a data dictionary as tables in a DB. I use mine for generating code.",SirGreybush,2025-07-26 16:35:05,24,dataengineering,t3_1m9xbk5,False,
n5ahdh4,"Most Data Warehouse don’t support the concept of primary key. I think the only reason is the size of the data. You don’t want to make sure your 300 billions records are unique every time you add a new row.But the concept of unique identifier should be introduced into almost all tables. That unique identifier is normally a surrogate key. Surrogate key are unique identifier derives from other fields. For example a md5 hash of the concatenation of 4 columns. This give you a unique identifier.What’s great about surrogate keys is that they are not random. You get consistency in any systems, if you migrate to another platform your surrogate keys are still valid and that’s very powerful. Also you can reproduce the same results over and over again, which is not possible if you use a UUID generated by another system for example.Then depending on the tool you use you can validate the uniqueness of the fields yourself. There’s some reason you might want to do this yourself and not the system like you would have in a normal db and is that because you can have multiple time the same records or a different version of what you consider the same records.Since the DW is for analytics you might want to analyze those different records which are not unique in your raw layer but could be in your marts.So it’s a powerful thing to let you control de uniqueness of the fields yourself.Obviously if you don’t manage it you’ll probably end up with a lot of duplicates. But since the DW store all your data it’s better to avoid having the constraint on inserts and give the users more flexibility. Because he might need all version for what he is trying to achieve.TLDR; yep a surrogate key should be something you have in all tables (when possible)",Commercial_Dig2401,2025-07-26 16:50:20,21,dataengineering,t3_1m9xbk5,False,
n5aezl7,"I would say there's no real reason to not have a ""primary key"" though i think you are having trouble differentiating between a primary key and a business key.Business keys are very often a primary key but thats from a basic perspectiveYou can also have composite keys (which are a combination of multiple columns that can make a record unique)Then you add on row scd ids which makes a record unique in the context of adding slowly changing dimension (so ""at worst"" youll have multiple columns for your composite key then add a row updated at date from scd to identify your unique record)Think about it this way, there really is no good reason for a record to be wholly duplicated (including metadata) so one way or another all of your rows should be unique",kittehkillah,2025-07-26 16:37:51,5,dataengineering,t3_1m9xbk5,False,
n5aeyql,"Because the constraints that come with enforcing primary keys are incompatible with the scale of operations of some enterprise data warehouses. Most of them are designed to operate at petabyte scale, fyi.It is far preferable performance-wise to resolve inconsistencies at read-time, with deduplication rules, than to do full table scans to ensure unicity with every insert, because read operations are (most of the time) only applied to a subset of the table.Nothing prevents you from applying cleaning strategies yourself on the table though. But you will definitely pay for it.Edit: unless you are only talking about primary keys as data modelling artifacts, with no constraint on storage/querying?",ManonMacru,2025-07-26 16:37:43,11,dataengineering,t3_1m9xbk5,False,
n5bxapb,sometimes it doesn't really make sense -- i.e. a fact table of time series measurements with billions and billions of rows,themikep82,2025-07-26 21:27:38,3,dataengineering,t3_1m9xbk5,False,
n5dxill,"There are days where I wish I didn’t have keys on my fact tables. These are the days where we are serving aggregated data, at an appropriate grain and it is responsive and all is good in the world. Unfortunately, my reality is one in which they want to go as low grain as they can and look up objects by their ids.The reason you would try to avoid them is cardinality. If you can avoid them you can hopefully pack your data denser, and that can have a very positive effect. Same deal as separating date and time to two columns.",-crucible-,2025-07-27 05:27:20,3,dataengineering,t3_1m9xbk5,False,
n5af1mk,"FWIW, with Snowflake and other OLAP systems, you can have rows duplicated in a table, that will mess up joins. Even if you set the DDL for a unique PK. So always have control columns like datetime of row insertion, so you can find them.",SirGreybush,2025-07-26 16:38:09,2,dataengineering,t3_1m9xbk5,False,
n5axj32,Redshift doesn’t support primary or foreign keys they’re purely documentation if you set them. If a database support them though it seems like a no brainer.,MonochromeDinosaur,2025-07-26 18:12:49,2,dataengineering,t3_1m9xbk5,False,
n5gyaca,"I’d think the answer is no. If you don’t have a unique key and determine grain, you have no data model. Without primary keys, there are no relationships.",onewaytoschraeds,2025-07-27 17:57:48,2,dataengineering,t3_1m9xbk5,False,
n5t92b0,"It's an unfortunate problem. I've been a DE for about 3 years and could probably list a lot of tools among my experience, but the coding in the actual day to day work of my job is little more than df = spark.read.parquet --> df.write.saveAsTable. I've done a fair amount of platform admin stuff, setting up and managing Unity Catalog in Databricks, but my team is mainly responsible for simple raw data ingestion. A lot of the stuff we use, even if it isn't AI, just abstracts away the parts that are interesting or challenging. I'm pretty close to looking for a new job and I'm not optimistic about it. For now I'm trying to supplement my work with projects.",TheSocialistGoblin,2025-07-29 15:50:42,57,dataengineering,t3_1mce29s,False,
n5t97fs,"As someone on both sides of the table, I get the frustration. There's a huge gap between listing every tool under the sun and actually understanding core data engineering concepts. And yeah it’s very obvious when someone’s leaning too hard on AI-generated answers.Honestly, the best interviews I’ve seen (or given) focus on real-world tradeoffs: pipeline design, data modeling, debugging stuff you can’t fake with Chat GPT. Tooling comes and goes, but critical thinking and basic coding skill are non-negotiable.",eb0373284,2025-07-29 15:51:21,22,dataengineering,t3_1mce29s,False,
n5t7e7m,"I just reject them all until I find a genuine person. 10-15 minutes phone screens for resumes that don’t look keyword stuffed or chatGPT’d. Technicals for people who sound like they know what they’re talking about and don’t sound like a robot. Canned/vague answers instant reject. I wrote a long technical about data validation with ambiguous instructions to prompt conversation and clarifications, candidate is not expected to finish and is expected to communicate and think about the problem.I’ve had candidates who just type out the “perfect” solution in silence without asking a single question. Instant reject.Also recruiters are ass and send me horrible resumes. Also sometimes I can’t believe people aren’t embarrassed by the mess of a resume they send out (not the contents, the horrible formatting, unreadable fonts, badly formatted, 10 densely packed pages or jargon, etc.)",MonochromeDinosaur,2025-07-29 15:43:04,17,dataengineering,t3_1mce29s,False,
n5u1icu,How else does someone get past the recruitment filter? I have two years of engineering experience and I've built projects to showcase that I have the appropriate skills to become a good data engineer. My resume might not be great but I don't even get interview calls. I'm open to any criticism on my resume if you're willing to have a look. It feels like recruiters see my two years and put them in the garbage. How else am I supposed to get any experience without landing any interviews or roles. I don't believe your post is extremely helpful for those who genuinely have put in efforts and don't get any callbacks. It's hard for people to see or understand our perspective. I have the skills and projects to back up my argument. I'm not saying I'm the best data engineer with limited experience but I believe I can get the job done. I just need a chance to prove that which doesn't come by often if at all.,deathstroke3718,2025-07-29 18:00:39,11,dataengineering,t3_1mce29s,False,
n5u0sql,"If you’re looking for a senior/lead, I’ve been having a bad time applying, just saying :disappointed_face:",EarthGoddessDude,2025-07-29 17:57:27,9,dataengineering,t3_1mce29s,False,
n5tla7x,"I see this all the time with candidates. It shocks me how the majority of candidates don’t even have basic SQL or Python skills. It’s on their resumes and they say all the right things to our recruiters but can’t pass basic coding tests. I understand that people can be great at using tools, but not knowing the basics is a nonstarter.",Greendaysgood,2025-07-29 16:47:37,7,dataengineering,t3_1mce29s,False,
n5tbn9u,"It's simple, all of a sudden the hiring processed is totally divorced to daily work of a data engineerSpecs now create an impression from my DE work experience anyway, that a data engineer is involved in ALL implementation stages of taking data from the source to the final dashboard.Not saying that does not happen or is not something worthy of aspiration but I just did not see this in my experienceWhat I saw is the delegation of tasks based on random team dynamics and of course strengths, where one will focus on complicated sql transformations in one project in another configure data factory tasks in some pipeline, process this weird file format with really data and insert it to this delta table, write this api whose data source is some ancient Google backed up file system, automate these views based on some ill defined metadata table and so on",xahkz,2025-07-29 16:02:38,3,dataengineering,t3_1mce29s,False,
n5vrf8r,"Yeah I seriously appreciate fairness in hiring. There have been some interviews I was rejected from where I felt like it was a learning experience and totally fair. Others, it felt like they had unrealistic expectations or that they created problems from unrealistic situations. Those have just been demoralizing",ironmagnesiumzinc,2025-07-29 23:00:43,3,dataengineering,t3_1mce29s,False,
n5zw0ak,But dude I’m trying to get a vibe job/s,Dielawnv1,2025-07-30 15:43:09,2,dataengineering,t3_1mce29s,False,
n5ue9zw,Companies are pushing AI just as heavily. I feel it is disingenuous to ask candidates to stop coding using AI when that's what my company is asking our engineers to do (code as heavily with AI as possible).,Toastbuns,2025-07-29 18:59:50,4,dataengineering,t3_1mce29s,False,
n5fe0k0,"a company is not your family. If they wanted to retain you, they’d pay you more to secure you from competition. You are nothing but a cog in machine, and their life will go on without you. do what’s best for you always, just as they will do what’s best for them (company) if needed",ayeoayeo,2025-07-27 13:09:07,613,dataengineering,t3_1maloa5,False,
n5fftbd,"I highly recommend not working for free, the people I know who have done it say they’re available to help on a contract basis for x period, if the company is interested they give a rate, and it’s usually a multiple of their salary. If you really value a connection, give that connection a means to contact you, but don’t give a company more resources that didn’t value your time enough to do the same for you. Give it your best effort to build transition materials in your remaining time, but once you come to your end date, part ways.If you worked for a non profit, or something where people’s lives are on the line, maybe make an exception but for anyone else, nah. They got by without you prior to you starting and they will get by without you after you leave, it’s a little egotistical to think otherwise.ETA: Just want to add, if you do make the transition seamless, it may be harming your coworkers more than it would if you just let it fail. The problem you describe is a systemic problem of not prioritizing debt/technical need, and if you give the company an out to have it ""all work out in the end"" they won't address this systemic problem. They need to feel the consequences of their actions, because higher ups only notice the problem when it causes money to be lost, and that's how you actually see change in management/practice.",Pandapoopums,2025-07-27 13:19:53,154,dataengineering,t3_1maloa5,False,
n5fgha0,I managed critical infrastructure for my last company. All data flowed through the platform I built from nothing.  I was laid off to save the company about 30k on my role.I learned through previous coworkers that the replacement is floundering and had been a disaster. My phone never rang.,Bingo-heeler,2025-07-27 13:23:53,124,dataengineering,t3_1maloa5,False,
n5fhrkq,"This is so dumb, just give your notice and move on. The company will find someone to replace you in no time. No one is irreplaceable",Maiden_666,2025-07-27 13:31:30,73,dataengineering,t3_1maloa5,False,
n5fen6c,If your work was that valuable they'd either pay you more or have you on a longer notice period (in exchange for more pay). Ideally you don't burn bridges on the way out and maybe just focus on writing some good documents on your last day or two for important bits. Maybe leave them a contact But personally I'd focus on your new job more than trying to piecemeal help out an old company first. TL:DR they either done goofed letting you get to this point or they determined they'll be fine,tdatas,2025-07-27 13:12:53,48,dataengineering,t3_1maloa5,False,
n5fepxj,This is not your problem. Proceed with your plans. If the company decided to lay you off they would not care about your plans at all.,pragmatica,2025-07-27 13:13:20,60,dataengineering,t3_1maloa5,False,
n5fgv55,"Not your problem, they made their business decisions, now they need to make theirs. If they need your support going forward, contract back to them at exorbitant rates.",puzzleboi24680,2025-07-27 13:26:11,17,dataengineering,t3_1maloa5,False,
n5fk217,"I've seen someone laid off and the company realized after that they needed the person.They hired him to work.TLDR; if they need you, they will hire you and you can choose the rate.",cerealmonogamiss,2025-07-27 13:44:54,13,dataengineering,t3_1maloa5,False,
n5fl3t4,"A former, boss said sometimes it’s best for everyone to just move on and to not continue assisting. You’ll be doing a disservice to yourself not committing fully to your next role and the old company won’t learn to be sufficient on their own.Sometimes it’s just business and neither they or you owe the other anything beyond what you committed to",minormisgnomer,2025-07-27 13:50:46,13,dataengineering,t3_1maloa5,False,
n5fwofh,You need your head examined. You quit. That's that.,dataindrift,2025-07-27 14:53:07,13,dataengineering,t3_1maloa5,False,
n5j7q7u,"That's the neat thing, they all become data swamps",programaticallycat5e,2025-07-28 01:22:06,294,dataengineering,t3_1mb3280,False,
n5ja2a0,The sick joke is that it’s whatever will land you your next job. The reality is that for 99% of cases if you’ve only got a few TBs to manage and 10-100 users you could get by with postgres with some decent data modeling.,farmf00d,2025-07-28 01:36:54,82,dataengineering,t3_1mb3280,False,
n5j8syf,"You don’t. That decision is made at a golf course that you’re not invited to. The quicker you learn this, the better for you.",domestic_protobuf,2025-07-28 01:28:56,174,dataengineering,t3_1mb3280,False,
n5ja44m,"Use the right data model for the job. If you’re torn, use a database because it’ll force you to have structure and if you denormalize your data—performance. Call me a luddite or something.",shockjaw,2025-07-28 01:37:13,26,dataengineering,t3_1mb3280,False,
n5jydq6,"Database for transactional stuff, warehouse/lake/lakehouse based on whatever long term contract your executives signed",MateTheNate,2025-07-28 04:21:41,26,dataengineering,t3_1mb3280,False,
n5kg1oy,"Database: your mom cleaning your bedroom as a kid. she knows what this is an where to put it. You don't know where it is now or how to get it.Datalake: you try cleaning your own bedroom, by shoving everything into a cupboard. DO NOT open that door or try to look inside. Ever.Data Warehouse: you finally think you can tidy it like your mom. Organised, scheduled, you have a place for everything.Data lakehouse: what you actually built instead of a warehouse. Some of it makes sense, but then you got bored before finishing the job and just shoved all the rest into a cupboard. You proudly tell mom you tidied your room just like her, and show her the warehouse only bit of it.",umognog,2025-07-28 06:54:55,44,dataengineering,t3_1mb3280,False,
n5kacqt,I just call them all database so I dont have to worry about that,NoleMercy05,2025-07-28 06:02:45,24,dataengineering,t3_1mb3280,False,
n5jlu6i,Personally I like the data cesspool.,Just-A-Thoughts,2025-07-28 02:51:44,13,dataengineering,t3_1mb3280,False,
n5m27am,"This is really funny and really sad at the same time. You are getting confused by marketing terms and, unfortunately, that is by design. I think you can spot me what a database is. That's pretty straight forward. A data warehouse is just a very, very large database. There are two different database areas, operational and analytic. They are characterised by the SLAs you have on the data. Smaller databases are normally used for operational because you need fast response times. In analytic, the response times aren't normally as critical but they handle quite a bit more data; much of it historic. In a perfect world, if you could do both with the same system, you would. The problem is the cost to do them all in one. Of course, these are gross oversimplifications but it gets the idea across. In addition to the database component, the surrounding data ecosystems are different but they have many commonalities.Data Lake and Lakehouse are both marketing BS. Nothing more. The same is true of ""medalion architecture."" It is an attemp to make the standard three tier (staging, core, semantic) into to something different by giving it a new coat of paint. Someone noticed that you can store quite a bit of extra ""stuff"" in the staging layer beyond what the database needs. Of course, the marketing folks thought that needed a new name. I think we are at the point now where we just keep adding buzzwords to the names. It's like a technical pin the tail on the donkey. The latest is ""now with more AI!."" A data ecosystem is a complicated enough of an endeavor without all the confusion that is being pushed on it purposefully. I haven't even started in on Inmon, Kimball, Stars, Snowflakes, the various normal forms, ETL/ELT, etc. Good luck on your journey.",marketlurker,2025-07-28 14:17:25,8,dataengineering,t3_1mb3280,False,
n5k77wj,Whoever answers these questions without an “it depends” shouldn’t be near any of these systems with an access policy beyond reader.,Old-Scholar-1812,2025-07-28 05:34:50,11,dataengineering,t3_1mb3280,False,
n53rrkv,"Yes it's mostly all true. Data engineers often source data produced by other teams, so they have to absorb whatever messy data comes their way. It's worse at non-technically forward companies that rely on Excel as a data store.Yes many data engineering teams have lots of non-technical people. On this sub on a nearly daily basis there is someone asking how he/she can break into DE from an analyst role. This person has no CS knowledge.The one thing I'd disagree with is pay. Generally speaking, SWE's get paid more than DE's at most companies. Perhaps at that person's company DE's get paid more, but I'd say that's not normal.For these and other reasons I'm trying to move to SWE - Data Platform or MLE but ML is harder to get.",codemega,2025-07-25 15:41:49,77,dataengineering,t3_1m92akn,False,
n54hp6e,"Yeah, if you don't enjoy working with non or less technical people, DE is gonna be hard.That said, I'd say that same trait will not serve you well as a SWE, it's just easier to hide in that subfield.",a_library_socialist,2025-07-25 17:42:09,23,dataengineering,t3_1m92akn,False,
n55ra6r,"What he says is generally true. The role of a DE can vary widely. It isn't super glorious and pretty invisible until something goes wrong. I could say the exact same thing about integration and the two are pretty similar in a lot of ways.I work in data migrations within tech consulting. The greatest benefit to it is that I often get chances to start over and build something from the ground up. As far as I know, there's less opportunity for that in the SE space and that's why I personally haven't tried making the switch. But consulting also has it's downsides. I struggle with the same things you mentioned: A lot of non-tech people who can't spell git much less use it. People handing you massive Excel sheets. Shoestring budgets with tooling. Having to explain to overconfident customers that their data is not clean. Etc.It isn't for everyone, but there's a lot of job security in it IMO. And working with less technical people makes you shine all the more come review time (usually).",SmegHead86,2025-07-25 21:24:02,20,dataengineering,t3_1m92akn,False,
n54bmwi,"Similar boat, only for me, it would be back to data engineering. Taking a money grab is great for a while, but at some point, you have to do what you enjoy. Or at least, what you hate less.",Lower_Sun_7354,2025-07-25 17:14:29,8,dataengineering,t3_1m92akn,False,
n5702os,"> I regularly have to argue with/convince people that basic things like source control are necessary.This is my biggest frustration with many data scientists and analysts (I am one, to be clear). They often have no experience with source control, and any suggestion to adopt it is usually met with something like, “We don’t have time for that.” Ironically, we end up wasting far more time managing multiple versions of code across different files and manually merging teammates’ changes.",YIRS,2025-07-26 01:40:29,5,dataengineering,t3_1m92akn,False,
n54hm4s,This team structure isn't how it should be. I've been writing about and speaking at conferences about this for years.,eljefe6a,2025-07-25 17:41:46,5,dataengineering,t3_1m92akn,False,
n57cwyh,"the problem with all data jobs ive had, analyst or eng, is you somehow get no it/dev shielding from the biz ppl the way you might (not always) in a dev role. youre always directly contacted by stakeholders with no one mediating to say like, whoa this makes no sense. there are no milestones and requirements constantly change and theres no one to push back on it. idk if this matches anyone elses experience but its been mine, from basic sql focused app analyst roles up through legit data eng roles where we were actually developing something you could call software.i was the data eng for a small team of analysts at a law firm where by the end of my time there, our manager was having us make trial graphics for use in court. none of us had design experience. you know why? the trial graphics team gave reasonable timeline estimates for work and our boss said we could just do anything in a week. because its all DATA right?????",zazzersmel,2025-07-26 03:04:06,4,dataengineering,t3_1m92akn,False,
n55pzma,I'm a DE studying to be full stack web dev. I'm interested in switching. Grass is always greener though.,drunk_goat,2025-07-25 21:17:25,3,dataengineering,t3_1m92akn,False,
n589m8e,"There's some things that ring true, some that ring partially true and some that don't, to me. (~3YoE, more in data space as a non-engineer, so view my comments through that lens however you will).Testing is a problem, yes. Especially when you work with things that are closer to ML, that have testable behaviours that only manifest when working on a huge dataset with specific patterns. This is not an intractable problem, though. You still can factor your code correctly and cover with unit tests as much as you can, and write queries for ongoing data quality monitoring (a good data analyst will be a very important ally in this activity). For more complex stuff, talk to your platform/infra/governance people about having a ""sandbox"" environment - prod data but all the sensitive parts masked. Nobody understands the complexity? That sounds like your org needs more ""less technical"" people like analysts, not less. And yes, you as a DE need to be in touch with them, because they will be able to tell you what to expect of your data.People questioning numbers when they don't match vibes? Honestly that sounds like something a data product manager/owner has to tackle. As an engineer, all you can do is deliver data quality assurance, and point to that. After this it's with the PM/PO to sell the value of the team's work.Version control issues? Yes, that happens when an org has a lot of DAs/DSs with more science/business background. I think the will to do git appears after one or two incidents when someone does a breaking change that nobody had a chance to review, or accidentally deletes some script on some server somewhere. If your data team is subsidary to technical leaders in the org chart, I think they're usually sympathetic to the idea, and you can go through them to push git adoption. You can also smooth things along by writing a ""git for dummies"" document for your DS/DA. No need to deep dive into advanced features, just teaching them commit/push/pull and merge requests should be enough. Do make sure your main is protected in all your repos, though.Stuff outside of your control, but you have to fix it? That exists, yes, but I don't think that's unique to DE. Don't backend devs in microservice-oriented companies deal with the same problem?",szrotowyprogramista,2025-07-26 07:33:50,3,dataengineering,t3_1m92akn,False,
n58oc3b,"It’s true, but it won’t always be true. It’s important to remember that low-code tools like Talend were the most popular DE tool until a few years ago.We REALLY need more engineers coming into the field. And by engineers I mean people willing to learn Git, CI/CD, Python, unit testing, DBT, etc.Data Engineering has the potential to be the most interesting field, but often a team is propped up by one guy on the team who has that expertise, and then the rest of the team don’t really bother.",General-Parsnip3138,2025-07-26 09:59:31,3,dataengineering,t3_1m92akn,False,
n614sye,"Before taking drastic actions talk with your boss to understand why you where staffed there and how long are you going to be in that project. They may be playing internal politics and just have you staffed there while another project opens up, unless this is one of those consulting companies where they don't care about who they staff where.",linos100,2025-07-30 19:09:55,54,dataengineering,t3_1mdeifk,False,
n61u90x,just do it. this is how i learned scala. as long as they understand you're ramping up and to expect some dumb questions from you at the start you're learning for free.,Fearless-Change7162,2025-07-30 21:09:39,36,dataengineering,t3_1mdeifk,False,
n61joes,"You’re already there. Good way to learn, latch on to one of your seniors. Make your manager aware of the confusion though.",MonochromeDinosaur,2025-07-30 20:20:48,7,dataengineering,t3_1mdeifk,False,
n60yzwl,How on earth did you go through the entire interview process and the necessity for Java experience wasn’t discussed? And if it truly wasn’t you should be extremely candid with your manager and discuss alternative approaches that match your strong suits imo.,pewpshewtbaby,2025-07-30 18:42:08,16,dataengineering,t3_1mdeifk,False,
n630cj8,"I feel it's normal in this case and maybe a good opportunity to deep dive into data engineering.Java and data engineering are close together, e.g the famous Spark (written in Scala but basically JVM which related to Java), or Trino or Kafka.When I first came into data engineering, I worked with java BE API services and also with Spark, Kafka,.... People usually use Python things for data engineering but in the end, when it comes to high performance and streaming which involve more low level optimization, data engineering and backend dev are closer too. They share similar principles related to system design or distributed computing...I think this would be a good opportunity for you if you want to advance your career into low level stuffs which may help in the future",daszelos008,2025-07-31 00:56:11,5,dataengineering,t3_1mdeifk,False,
n60zell,"In my experience the only way to do the right thing is to reach out your immediate supervisor or boss and be sincere with him/her sometimes could have a chance to relocate you in other project , but I want to ask the job description asked for strong background in Java ?",Many_Insect_4622,2025-07-30 18:44:03,3,dataengineering,t3_1mdeifk,False,
n610ic8,The “Java project” is about writing a Spark job? :man_shrugging:,dev_l1x_be,2025-07-30 18:49:15,2,dataengineering,t3_1mdeifk,False,
n64iweq,"Lol, before data engineering was a sole separate profession, everything data engineering was pretty much done by software engineers. Java was, and often still is, the language of choice for big enterprise software.I spent the better part of a decade writing java for data engineering tasks. Most ETL platforms of yesteryear used Java as their language.If you're scared of a literal language... I feel like you must not be very deep into data engineering. Java is just a language, same as python. If you actually know how to write Python for example, you can adjust to Java. Different libraries, different syntax, but software is software. Same concepts apply.",DiabolicallyRandom,2025-07-31 07:28:51,2,dataengineering,t3_1mdeifk,False,
n60z1px,What is this Java project about? Dev? It might have some kind of DE aspect!,rtalpade,2025-07-30 18:42:22,2,dataengineering,t3_1mdeifk,False,
n60zcgl,"Is the java project related to data engineering? You stressing the Java bit or the change in job description? I know it's crazy talk, but some people like java. I've come to appreciate it for complex projects.",Seven-Prime,2025-07-30 18:43:46,1,dataengineering,t3_1mdeifk,False,
n60b9og,"Hype is hype precisely because it is emotional, and not factual. Only emotions matter in hypes. FOMO is a powerful one to choose from your arsenal, for instance.There is hardly anything controversial in these conclusions. They are accurate and factual. And everyone who now pumps ""vibe coding"" is going to tell you they knew it very well from the get-go, and will be selling you (likely AI-based) solutions for that problem.",Special-Bath-9433,2025-07-30 16:54:48,18,dataengineering,t3_1mdb9p7,False,
n608ykm,"Especially when domain knowledge, or business rules between the chair and the keyboard, are lost or obfuscated. Will read later…",SirGreybush,2025-07-30 16:44:11,35,dataengineering,t3_1mdb9p7,False,
n60oqo9,"I love using AI for my work, but I'm careful with how I use it. I treat it like I would a junior dev, I give context and details when tackling a new problem, then plan with it and refine the plan before I let it execute. Then I review, and it's a harsh review. After a few rounds of iteration, always going back to the plan stage, then it's sent to rest of the team for a PR. If you just open some code and use the fancy auto complete, or put GitHub copilot in agent mode and let it start working without making sure it understands the full scope you're in for a world of hurt.",Siege089,2025-07-30 17:54:51,9,dataengineering,t3_1mdb9p7,False,
n60cjwb,"Good read. The last few years on projects, my internal voice tells me: “I am charging a lot more going forward”The technical debt some of these devs racking up will be collected in a future date or crush them.",notlongnot,2025-07-30 17:00:30,6,dataengineering,t3_1mdb9p7,False,
n619ycc,"On point. The main problem is managing complexity, not generating code. Being able to do the latter more easily actually makes the former more difficult.",ambidextrousalpaca,2025-07-30 19:34:45,3,dataengineering,t3_1mdb9p7,False,
n61vlxt,"I think AI is great when you already know all of the facts and can accurately describe all of those facts with zero (and I mean literally zero) ambiguity. A really basic example is getting AI to do something you already know how to do.Sadly, this doesn't reflect real life when things hit a certain scale or complexity.",MikeDoesEverything,2025-07-30 21:16:10,4,dataengineering,t3_1mdb9p7,False,
n64j0u1,"Good read, might as well call it degenerative AI",Thinker_Assignment,2025-07-31 07:30:01,2,dataengineering,t3_1mdb9p7,False,
n60ah3r,Isn’t LLM generated content kinda reach an equilibrium where all the output for an input is the same? So it just means that there is no adaptation for new cases and thus no innovation?,Phenergan_boy,2025-07-30 16:51:14,3,dataengineering,t3_1mdb9p7,False,
n60ona3,"Nah, it's about changing the metric vs making sure it's correct now. It's all shareholders see and as long as you don't know it's wrong it's legal",SoggyGrayDuck,2025-07-30 17:54:26,1,dataengineering,t3_1mdb9p7,False,
n63d0xa,"It takes deep experience to appreciate what this means and why it is so important. The people with this experience are, paradoxically, the ones who need no convincing.I find it helpful to frame this as attempting to DIY a simple repair or home improvement. Most adults can relate to the 1-hour faucet replacement that took two weekends and five HD/Lowes trips.",slin30,2025-07-31 02:11:35,2,dataengineering,t1_n619ycc,False,
n5jzr3e,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 04:32:28,1,dataengineering,t3_1mb6wqc,False,moderator
n5k257m,"1- Nope. But a STEM major certainly does help. I only know a single DE without a BA in a stem field, most have post-graduate education.2- Don't think of DE as like a discipline or a subfield within math, it's more like a trade? There are great books that outline the math and engineering behind it, but the only real way of becoming a data engineer is dipping your toes in keeping data stacks running.3- Most successful way I know: solid stem education. Acquire work experience consuming data as an analyst, data scientist, etc. Slowly transition your work to backend/production systems e.g. making changes to ETL code, finding out infrastructure requirements, doing incident response, thinking about data modelling. Do this for long enough, and you're now able to reason about data along its journey to whatever end-consumer there is.",verysmolpupperino,2025-07-28 04:51:40,21,dataengineering,t3_1mb6wqc,False,
n5lquni,"If you're coming from a stats or analyst background, the biggest shift is thinking in terms of infrastructure: how to move data efficiently, how to model it well, how to build pipelines that scale and don't break. This includes learning how to build ETL/ELT workflows, manage data quality, and work with cloud-native tools and orchestration frameworks like Airflow or dbt.Books like *Fundamentals of Data Engineering* or *Designing Data-Intensive Applications* give good theoretical grounding. But they don’t replace hands-on work. So the best learning path combines both: read to understand the concepts, then build mini-projects to apply them. For example, try building a pipeline that pulls data from a public API, stores it in a cloud bucket or local database, and runs some transformation on a schedule. We have a lot of interactive courses, so feel free to check out our site and browse! And finally, don’t get overwhelmed by the tool soup. AWS, GCP, Azure, Snowflake, Spark, Kafka, dbt... You don’t need to learn everything at once. Start with one cloud provider, one orchestration tool, one data warehouse. The concepts transfer well once you understand them.",DataCamp,2025-07-28 13:17:23,13,dataengineering,t3_1mb6wqc,False,
n5k218i,"With your stats background, why are you not applying for DS roles?",69odysseus,2025-07-28 04:50:46,13,dataengineering,t3_1mb6wqc,False,
n5koosr,"2 - I think the book Fundamentals of Data Engineering gives a good high level overview of the different components of DE. You'll have to dig deeper after that, for example building your own projects.3 - M.Sc. in planetary sciences, kind of 3 months bootcamp co-financed by consulting companies and French job agency, a couple of years on banking Hadoop with the consulting company, a couple of years in startups/scaleups on cloud, public authority on premise, wanted to move to another country for martial arts and found a job to do just that. Overall, after about 2 tough years to get into DE and learn on the spot, I am really satisfied of career change, the job market has always been good for me.",sib_n,2025-07-28 08:18:04,3,dataengineering,t3_1mb6wqc,False,
n5k8w83,"STEM major does help but you can do without. Stats major does scream data science more than data engineering, but to each their own.There's a bunch of creators that talk about best practices and two bibles that are usually very good to read: Designing Data Intensive Applications and Fundamentals of Data Engineering.If you're the kind of person that likes to study based on roadmaps, I run this website that is just about that: https://dataskew.io",dorianganessa,2025-07-28 05:49:48,6,dataengineering,t3_1mb6wqc,False,
n5lfq27,"I graduated with degrees in economics and accounting. I spent the first 4 years of my career in corporate finance. Mostly, I was transforming and consolidating data using on prem tools to automate our processes. After that, I took a BI manager role with our data science team (data science was initially part of BI at my company). Spent a year there until a big reorganization occurred. We moved to the cloud, data science became its own thing, a data engineering team got stood up. I initially moved with data science, but it was clear my skills did not mesh well except for the data engineering, but they wanted to move all DE work over to the DE team eventually. I took that opportunity after just over a year in that position. On day 1 with the DE team, we were building stop gap solutions. I spent that time getting really good with pyspark. I already had a large background with pandas, so pyspark was very easy to figure out. From there, we had consultants build our long term data platform while the full timers worked on ad hoc requests to keep the business moving and start making a name for our team. During this time, I learned I was really good at programming business logic and transformations. I was not nearly as good at ingestion or tools outside of databricks. Eventually our SAAS integration started, and I was working directly with consultants. I was well out of my depth, but I learned the process pretty quickly, patched some early holes in my technical knowledge, and got rolling. I learned that I was really good at functional programming, but pretty bad at DevOps and way out of my league in OOP. Now, I'm working on a project to rebuild our data platform to one easier to maintain, more flexible, and moves data faster. I'm focusing more on architecture, but making sure that these new consultants are training my team and me every step of the way. My manager assigned me as lead for this project. My manager wants me to train to become an engineering architect. Whereas I'm a decent engineer with a lot of potential to grow there, I am kinda a natural on all things architectural. So that is how I'm leaning now.",BoringGuy0108,2025-07-28 12:09:43,3,dataengineering,t3_1mb6wqc,False,
n5kffgf,"I also come from a stats major and I am currently working on a master's in CS. I would suggest you to enroll to a CS master's, where you will have to study the basic CS courses (intro to programming, OOP, discrete math, DSA, OS, computer architecture and networks) before taking the master's courses. This will help you a lot",FlyingSpurious,2025-07-28 06:49:19,2,dataengineering,t3_1mb6wqc,False,
n5ou4og,"You can do much more with your statistics background than DE. DE is subset of software development, do you really need it?",baubleglue,2025-07-28 22:13:43,2,dataengineering,t3_1mb6wqc,False,
n5k0o4b,School not needed,ephemeral404,2025-07-28 04:39:50,2,dataengineering,t3_1mb6wqc,False,
n64awle,"Absolutely yes. This isn't even internal users, extends to clients also. After an initial period of usage, no one uses them.The only exception is when dashboards provide actions that they need to take on a near daily basis. Anything purely analytical just gets exported.",junglemeinmor,2025-07-31 06:15:49,43,dataengineering,t3_1mdtjv7,False,
n65jmyv,"I agree with your premise and support the article. That said, this is not a great article. I understand that this is more of a blog post than an academic paper, but you make multiple claims without backing them up with evidence.> Tableau's $15.7B acquisition by Salesforce (in 2019) hasn't changed the fact that 75% of dashboards are crap and go unused within weeks.If you're going to use a number like 75%, you need to back that up with evidence.> Elite leaders like Jeff Bezos, Warren Buffett, and Jason Fried rely on alternative methods—narrative memos, deep reading, and gut checks—to make effective strategic decisions.Appeal to authority fallacy. Those methods may be better, but you don't explain why. Instead you hide behind the world's richest as justification.> They create decision bottlenecks. ""We need more data"" becomes the excuse for indecision.While the second sentence is true, that isn't the fault of dashboarding.Remember, I'm on your side, I agree with what you said, but you're not going to convince the non-believers without improving your arguments.",Automatic_Red,2025-07-31 12:29:50,28,dataengineering,t3_1mdtjv7,False,
n659r67,"I think exporting to excel should be considered a win. It’s users making use of a joined up database using correct business logic. They may not have direct db access or the knowledge or tools to correctly replicate metrics. And they export to excel because they’re trying to make a decision or get more insight. For the rest? Yeah if a dashboard is for information only, it is used rarely at best. If it packages all the information someone needs to make a decision, it will.",HumerousMoniker,2025-07-31 11:26:20,19,dataengineering,t3_1mdtjv7,False,
n64m7p7,"It presents a good argument though it misses a few basics of people.A lot of leaders don't want accountability, dashboards and metrics allow them to obfuscate that, the percentage of leaders who'd even be willing to embrace a test like this is very much in the minority.",Alogan19,2025-07-31 08:00:13,17,dataengineering,t3_1mdtjv7,False,
n65h3ib,"I don't disagree with the general point being made but I can't say the other media being offered offer much transferrable practical insight - it just comes across as more specious management course claptrap.> But more revealing is Bezos's ""70% rule"" for decision-making. He advocates making decisions when you have about 70% of the information you wish you hadOk, and how much is that, exactly? A lot of decisions don't have a massive checklist of ""all the things I need to know"" that, when you get to 70% acts as a threshold triggering the decision. A lot of decisions rely on knowledge and experience and attempting to quantify that at all ends up falling into the same trap that dashboards do: Qualitative judgements are only loosely connected to quantitative amounts.I don't doubt Jeff Bezos knows what he's doing up to a point but I have my doubts his actual working practice bears much resemblance to the principle he's expressing here. Plus I expect there's a healthy amount of survivorship bias going on when analysing whatever Bezos is doing - 100th idiot syndrome if you will. Just because it worked for him doesn't mean it will work for anyone else.",Impressive_Bed_287,2025-07-31 12:14:41,5,dataengineering,t3_1mdtjv7,False,
n65b3qx,"""""leaders"""" shouldn't use dashboards at all. Get a domain expert to look at them and formulate a course of action, then propose that to the """"leader""""/decision maker.It is pretty rare for someone doing strategy or upper management to know enough about the details to properly interpret dashboards in my experience.I disagree with the article that dashboards are necessarily backwards-looking though. Good dashboards ideally include some amount of forecasting, and can even be prescriptive.",Tarqon,2025-07-31 11:35:50,9,dataengineering,t3_1mdtjv7,False,
n65r9cx,"> In 2012, CEO Ron Johnson eliminated all coupons and sales for ""everyday low pricing,"" despite data showing that 70% of JCPenney's sales came from discounted items.You'd think this metric would be important to have on a dashboard. Sounds like they just didn't look at the data at all.",statusmalus,2025-07-31 13:13:14,4,dataengineering,t3_1mdtjv7,False,
n64of5y,"Don't their usage falls under Pareto/long tail usage definition?Only 20% of them are going to represent 80% of results? So, shouldn't we focus to bring support and all the priority structures to only 20%.The rest of the 80% can be monitored with some data lineage tool (or other type of tool) and as soon their life usage stops, all non used structure should be dedicated.As all data engs/analysts have been see this behavior everywhere.",Vreichvras,2025-07-31 08:21:05,5,dataengineering,t3_1mdtjv7,False,
n66k1yq,"Great article.It's interesting that you talk about the narrative-memo approach Bezos uses, because I've had the same thought for a while -- reading an essay backed up by data is much more convincing than just staring at a contextless dashboard. Numbers need to be put in context and fit into some kind of overarching narrative before it clicks. The great writers of Substack already understand this. Think Scott Alexander, Noah Smith, Nate Silver. Or go read Wolf Street. MUCH more intuitive than any business dashboard I've ever looked at.But the flip side of that is: when are dashboards appropriate? Should all analysis just be ad-hoc and narrative-driven? My intuition is that you should curate a very small, simple set of business-wide KPIs and put them on an internal website and have them update reliably a few times a day. For anything more strategic or involved, where there is a key decision to be made, you need analysts to put on the researcher hat and go do the analysis (hopefully with a nice clean data model that the DEs have set up). You need them to be opinionated. Dashboards aren't opinionated, they just tell you what happened without any further guidance.",BigNugget720,2025-07-31 15:33:52,2,dataengineering,t3_1mdtjv7,False,
n66k5kv,"The day we start auditing the utilization of the dashboard we come to realize that. Lots of dashboard are use just few week because it a for a short term need or question. After few month people forget about the existence of the dashboard. That is so depressing. The most use dashboard are the one for operational day to day of worker, not the one for decision making of the director.",suburbPatterns,2025-07-31 15:34:20,2,dataengineering,t3_1mdtjv7,False,
n6710gn,"Depends how good you are in programming and SQL. And nothing wrong becoming max an analytics engineer. But yeah, if you really want to go into platforming, then that would be tricky. But most of the things you will learn on the job. Is there an option for you to enroll in the DE team?",yellowmamba_97,2025-07-31 16:53:30,37,dataengineering,t3_1me6rsv,False,
n67a0jz,Depends on where the **job you are applying to** is in the data engineering spectrum.Unfortunately Data Engineering is not a well defined concept across companies. It’s a title whose responsibilities are on spectrum that can range from full blown software engineering all the way to and including analytics engineering. There’s more money the closer you are to the software engineering side. That is true. I just got 2 competing 200K+ offers this week (still deciding) due to my software and DevOps experience. Looking at the SQL side of the spectrum when doing compensation comparisons for this decision compensation was closer to 100-130K which is what I currently make doing waaaay more than just SQL. I wasn’t looking for a job but my network reached out to me and clearly I was undervaluing my skills because I was comfortable.,MonochromeDinosaur,2025-07-31 17:34:04,15,dataengineering,t3_1me6rsv,False,
n6789sj,"u/informatica6 I have been in BI & DE since 2008 and I have seen and built on-prem to on cloud solutions.You can go forever in BI & DE considering you acquire the new concepts, new platforms and new technologies consistently. Now when it comes to networking, security & alogs those are required in Solution Architect or Enterprise data architect roles. If you are aspiring such roles you will have to learn all of those. Also you can learn those gradually as you will elevating in your role and learn the advance skills over the period of time.Keep learning, keep working and keep earning.",Intelligent-Pie-2994,2025-07-31 17:26:13,7,dataengineering,t3_1me6rsv,False,
n671ou9,"Currant...Not that it's wrong to know, it's always good, especially architecture in my opinion, a huge difference, but whoever told you this weighed in, it goes from company to company, I dare say that in large companies the work will be so segmented that you won't even have space to ""think""",AfroTsundere,2025-07-31 16:56:35,4,dataengineering,t3_1me6rsv,False,
n672ppc,Data & software are different fields in my country (EUW),Wingedchestnut,2025-07-31 17:01:11,4,dataengineering,t3_1me6rsv,False,
n679psk,"Ultimately, it’s about how much you can learn and the depths you take it. But I will say typical data engineering in my experience is very different than software engineering. We just care about optimizing for different things, usually. I was a DS for 5-6 years, decided it wasn’t for me but got reaaaaally good at SQL. Got an Analytics Engineer position where I got really good at dbt without knowing any dbt prior (like power user doing crazy jinja gymnastics). I then moved to the internal analytics data architecture team as basically a DE/architect but officially “lead AE” with an expertise in ML and dbt. Now I’m a staff DE at a a huge company making dbt models still, but also creating data pipelines. I basically picked something that could be used across other disciplines and got really good at those things. If I picked something to learn, I learned the shit out of it.",ImJustMedium,2025-07-31 17:32:42,4,dataengineering,t3_1me6rsv,False,
n671xjs,"You are fine as long as you stay in the Analytic side (data warehousing), because everything is preserved in an upstream source for a certain number of days/weeks/months, and you can always scrape and do it from scratch if you messed things up (hopefully not though).But once you go upstream then SWE principles immediately become more than a good-to-have, a mandatory.",redditthrowaway0315,2025-07-31 16:57:40,3,dataengineering,t3_1me6rsv,False,
n67xwxj,How far can you get into Wood Working without Working?,numbsafari,2025-07-31 19:26:07,3,dataengineering,t3_1me6rsv,False,
n68ri62,bruh titles are just titles! I’ve worked with AEs who have legit SWE ability and DEs that don’t even know git.it’s really dependent on your willingness to learn and the kinds of roles you pursue. it’s fully up to you how far you go into DE and skew towards SWE-specific skills.,muneriver,2025-07-31 21:49:16,3,dataengineering,t3_1me6rsv,False,
n68npby,"It really depends on which part of the data layer you're working on. We're a small team of two Data Engineers and a Data Analyst at a startup, and we’ve divided things based on our strengths.I mostly handle Airflow, Docker, and the infrastructure side, so I end up writing a lot of Python, some SQL and have to follow SWE best practices and patterns. My teammate works more on DBT, he deals with the data that flows in through Airflow and writes a lot of SQL to build DBT models, plus some Python for custom macros. Our Data Analyst focuses purely on the gold layer and the reporting tools, so their work is mostly SQL. Even though we're Data Engineers working with data, my responsibilities are closely related to SWE and the other person is close to an Analytics Engineer.",PunctuallyExcellent,2025-07-31 21:29:49,2,dataengineering,t3_1me6rsv,False,
n5dm32s,"During the design phase, yes.After on-boarding and 300000x iterations of a kitchen-sink-syndrome company, no.",programaticallycat5e,2025-07-27 03:55:51,63,dataengineering,t3_1macii2,False,
n5dp9g7,"\> In a totally cloud-native worldIn a overwhelmingly contractor/sub-contractor/outsourcing world no one at the bottom of food chain gives an actual f\*ck about the architecture. Spice must flow, it's the only scope.",taker223,2025-07-27 04:20:03,71,dataengineering,t3_1macii2,False,
n5dl93e,"""It depends.""* may write a less facetious answer later",tolkibert,2025-07-27 03:49:40,44,dataengineering,t3_1macii2,False,
n5dn34n,"If it’s legit “big data” and/or the complexity/number of the data sources is high and requires a lot of coordination and custom work for ingestion sure architecture becomes extremely more important.If it’s not (9/10 companies are here) throw the data in an object store pop a cloud DWH on top and spend time on modelling, insights, and AI/ML. The hardest decision in this scenario nowadays is whether or not to pay for extraction(Fivetran/etc.) or just use open source.",MonochromeDinosaur,2025-07-27 04:03:23,17,dataengineering,t3_1macii2,False,
n5dm0jf,"This is an odd question. You seem to be simplifying data architecture down to the bare minimum of “what tool has the best price performance for X given Y”. That is just one out of many questions and considerations for a data architecture. And if that was the only question you had about your architecture, I’m not sure what is different now vs before.",evlpuppetmaster,2025-07-27 03:55:20,18,dataengineering,t3_1macii2,False,
n5eb6kd,"The less you care, the more power you give to the platform vendors. Compute is what is being optimized nowadays. Bad architecture will lead to unnecessary compute. The vendors couldn't care less. Or rather, they love phrases like ""scalable compute, just increase the cluster, use an XL warehouse"". The less a customer is thinking of good architecture, the better the paycheck for them.",kiquetzal,2025-07-27 07:33:17,13,dataengineering,t3_1macii2,False,
n5do1lq,"It depends on your business but for me I don’t really hear about latency etc anymore. All of that is up for negotiation. It’s always about cost. But it’s complicated. You can drop tens of thousands on Azure or AWS and nobody blinks an eye because it’s billed automatically and mixed in with everything else; not many places have true FinOps capability.But if you want to purchase $5k on a tool from some other outfit it’ll never get through the paperwork. You’re fucked in that regard. So personally I only really care about simplicity and maintainability.Because once it’s live nobody gives a fuck about latency and cost when it’s completely dead. And when it fucking breaks, which it always does, someone has to be able to understand and fix it, and that’s almost never the designer who long ago pissed off and left absolutely zero surviving records of their design decisions.",codykonior,2025-07-27 04:10:40,25,dataengineering,t3_1macii2,False,
n5em2hg,"Data architecture current purpose is to keep code clean and maintainable first. Cost hacks can come later. Some people obsess over technical debt too much though. Most of it gets rewritten or replaced anyway. If the code works and drives business value, stop nitpicking. Don’t waste time “fixing” things that aren’t broken for the sake of best data architecture practices. Focus on shipping real stuff, not polishing abstractions no one asked for.",bloatedboat,2025-07-27 09:21:08,8,dataengineering,t3_1macii2,False,
n5f88jl,"Architecture is my job, so I have opinions. Mostly about how easily managers fall for buzzwords and I have to make sure there is something that actually implements correctly.",JonPX,2025-07-27 12:32:04,6,dataengineering,t3_1macii2,False,
n5dtapr,"Seems like an obvious question. If you’re responsible for building it and managing the costs, absolutely. If not, why would you care?",SquarePleasant9538,2025-07-27 04:52:06,3,dataengineering,t3_1macii2,False,
n528gij,"Who are the customers for these data models? If they're primarily analysts and data scientists then it's a structure that will only slow them down. It might work if your team see this only as the ""silver"" layer and will be developing a ""gold"" layer on top (e.g. with denormalised reporting structures).",Specific_Mirror_4808,2025-07-25 10:27:02,27,dataengineering,t3_1m8vf1g,False,
n528u6t,"As with everything in DE, it depends on the use case.Strict data modelling standards don't really explain slow progress. Shifting requirements and inefficient development processes are normally the culprits.",New-Addendum-6209,2025-07-25 10:30:14,18,dataengineering,t3_1m8vf1g,False,
n52r6f5,"I agree with all your thoughts and those of the other posters. As with all dev work there's a fair amount of ""it depends"" to be had in any situation, but I can't see where this level of normalization would ever be useful inside a data warehouse.I think people pursuing this behavior have lost sight of the ""why."" The Star Schema model was originally created during an age with storage was the scarce resource so it was important never to store duplicate data. Nowadays, storage is so cheap it's practically free so it's compute that we must optimize for. Having to do dozens of `join`s to gain context on every record certainly doesn't support that. Usually, I practice some form of what you might call ""Star Schema Light"" in the silver layer where I create tables around business entities. So all the 'user' dimensions would be in one table (and it would probably have a companion SCD table), all the 'session' dimensions in another etc. Then these can be `join`d and de-normalized in gold to expose to BI tools as needed while analysts can still have some flexibility by using the silver tables. Having said all that, be careful. Myself and two colleagues were recently fired for suggesting this very thing and pointing out we shouldn't administer Snowflake like one would on-prem Oracle.",bengen343,2025-07-25 12:38:03,15,dataengineering,t3_1m8vf1g,False,
n52dox8,"This looks like a snowflake schema with additional normalization instead of star schema, I too agree that this look complicated",msdsc2,2025-07-25 11:08:28,6,dataengineering,t3_1m8vf1g,False,
n52rbf3,"> full star schema normalization, as it was a transactional databaseIn database design, normalization means third normal form (3NF). That's how transactional databases are supposed to be. A star schema is a denormalized schema (it breaks the rules of normalization, 3NF).Your use case doesn't look very ""star schema"" to me as many to many relationships should be rare. Another way to reword this is that the UserTag entity is a fact table. You could add a date / calendar dimension to this fact and this would allow you to see how many users one tag have, which users have which tags... It also depends on how ""fast"" these tags are attributed. Could they be considered an attribute to the fact? It is hard to decide without having a closer look at your use case and the data.Regarding the surrogate keys. You don't need them on all dimensions. You need them on SCD2 dimensions, and not all dimensions need to be SCD2. You also need SK when combining data from different sources into one single dimension, and they don't have a common key.Regarding the project... 20 people working on one single star schema, 2 years. That's insane. Do you work in insurance? It sounds like something massively overengineered which goes against the premises of dimensional modeling: easy to query.",hectorgarabit,2025-07-25 12:38:52,11,dataengineering,t3_1m8vf1g,False,
n565xu3,"What you have there doesnt quite seem like a dimensional star schema from Kimball pov as you describe it. You could have although for example if you can source the events of when tags of an user were applied or otherwise manipulated:- Fact table: Tagging Event / Activity - Possibly ""factless fact"" table or so that has a timestamp when the tagging (or tag removal, etc.) of an User happened and references the User and Tag dimensions- SCD2 User dim- SCD2 Tag dimWriting this reply a bit quickly on the go, but maybe it makes sense? Or not.. :grinning_face_with_smiling_eyes:",gbuu,2025-07-25 22:42:48,3,dataengineering,t3_1m8vf1g,False,
n55dtk3,What you described isn't a star schema.  It sounds like some Inmon crap maybe?  Star schemas have facts and dimensions and are all one to many unless you absolutely need a many to many and then you use a bridge table.  The main reasons to use that model now is that PowerBI and some other BI applications like it or if the concept of conformity across facts is useful to you.  If your facts aren't related to each other via rate calculations or similar then it's probably more work than it's worth.  Most companies are just going with obt by functional areas and a master data domains now.,Gators1992,2025-07-25 20:17:44,2,dataengineering,t3_1m8vf1g,False,
n56z2c1,"Not everyone dimension needs to be a slowly changing dimension. In my experience the actual need for that level of string change is rare.Like, at that point you're halfway to DataVault.Just saying grain of salt, start simple star, just a fact and simple dimensions.",SaintTimothy,2025-07-26 01:34:11,2,dataengineering,t3_1m8vf1g,False,
n531z7h,"Why?Lake storage is cheap. But if it's from on-prem or some random location to cloud, they might be trying to save money. Find out if they are trying to reduce their cost of data transfer. You get billed by the gb of data you move. But then you're just transferring your cost to compute. It's also pretty popular in dbt to just scd2 everything. Again, it becomes a pain when you try to translate it to a self-serve bi tool, that could really benefit from a star schema.Hard to say whats going on without a bunch of whys.",Lower_Sun_7354,2025-07-25 13:37:57,1,dataengineering,t3_1m8vf1g,False,
n53b27x,I feel validated reading this kind of post because I am fighting the same battles.I’m guessing there’s at least 1 boomer DBA on the team who bangs on about Codd and has lost perspective that delivering analytics products to the business is the only reason we get paid. Like why are you even using OLTP for the semantic layer? It’s the most administratively expensive way of doing this.,SquarePleasant9538,2025-07-25 14:23:55,1,dataengineering,t3_1m8vf1g,False,
n5eq0wa,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-27 10:00:47,1,dataengineering,t3_1maijoh,False,moderator
n5ertc9,"Nobody knows what will happen in the 3-5 years. Just stick with the fundamentals (SQL, programming, data modeling) if you want to make that transition and open source stack (Airflow, Spark, DBT). Cloud concepts are important to learn. Azure, AWS, and GCP are still market leaders in the cloud realm.",yellowmamba_97,2025-07-27 10:18:11,82,dataengineering,t3_1maijoh,False,
n5fefmy,LLMs without DE is impossible.,ArgueWithYourMom,2025-07-27 13:11:38,39,dataengineering,t3_1maijoh,False,
n5go6ey,"The immediate future? Security, governance, more streaming, data quality, AI support, and communication skills. A long list of things I am seeing. More data validation. Way more focus on security and governance than ever before. For gov employees, figuring out how to securely condense environments to limit costs (dag bundles, rbac in dagster, you name it), learning to teach others what is data engineering v. Security/infrastructure. Learning to preach data quality over just throwing all your trash into power bi or an analytics tool. Learning rag and llms and what can feed them best (feels a bit like data mining). Possibly data mining (mathematically looking at data and performing tasks such as imputation and quality analysis on numerical variables). Mlops. Helping build agents for llm or buidling semantic layers. Helping find nlp tools for clean data and showing what happens when crap enters the system. Ramming quality reports down managements throat while Cys because theres always that guy. A lot of api work. Documenting and tagging everything. Doing more with way less aided by tools like claude.",asevans48,2025-07-27 17:09:20,6,dataengineering,t3_1maijoh,False,
n5f99z8,"I’m not sure why you think DE is not SWE. In my company, every DE needs to be very good at databases, networking (optimizing delays), squeezing out performance within architectures etc. We just happen to be good at other DE aspects as well",frusth,2025-07-27 12:39:05,16,dataengineering,t3_1maijoh,False,
n5jczb7,"Just to clarify, data engineering is a specialized software engineer. So a data engineer is also a software engineer",m915,2025-07-28 01:54:50,4,dataengineering,t3_1maijoh,False,
n5k875l,"The way I see it, at the right companies, DEs are just software engineers verticalized on data.The most upvoted comment gave you a good overview of the fundamentals you need to master.I run a data engineering roadmaps website I'm working steady on improving that could give you insights on how to continue too if you're interested: https://dataskew.io",dorianganessa,2025-07-28 05:43:34,4,dataengineering,t3_1maijoh,False,
n5lsaie,"Plenty of folks enter data engineering through analyst or hybrid roles. It’s great experience. To level up: focus on SQL, Python, data modeling, and orchestration tools like Airflow. Get comfortable with cloud (AWS, GCP, Azure) and tools like dbt or Spark when ready.As for the future? DE isn’t going anywhere. With LLMs, real-time pipelines, and growing data complexity, engineers who understand infrastructure, governance, and how data flows will stay very important.",DataCamp,2025-07-28 13:25:24,2,dataengineering,t3_1maijoh,False,
n5jub7t,DE is underrated skill,No-Map8612,2025-07-28 03:51:11,1,dataengineering,t3_1maijoh,False,
n5nudzh,ikd,SitrakaFr,2025-07-28 19:19:35,1,dataengineering,t3_1maijoh,False,
n51kav2,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-25 06:41:41,1,dataengineering,t3_1m8s3rz,False,moderator
n52fz5s,"Just leaving a consulting firm for many of the same reasons. I spent 75% of my time doing non DE work, selling, talking to customers about what they actually need after the sales people in Microsoft did a number on them, doing project tasks unrelated to DE, organising etc. Then the actual DE work has to happen in outside normal work hours, then the clients complain about that happening. At least my firm gave me some development time to keep my skills up to date, but it was like a very small amount of time per week.Am switching back to a leadership DE role in a non-consulting org, which should be far better.",blobbleblab,2025-07-25 11:25:17,6,dataengineering,t3_1m8s3rz,False,
n51swwa,"Your company does not sound like a good situation. Assuming your whole team is fundamentally competent, the frequent late nights suggest someone is promising too much and/or failing to manage expectations. The bad news is that can happen anywhere. But if it's the norm, then it's probably time to move on and parlay the recognizable name into a better role.You can definitely find consulting companies that take quality of work more seriously. I don't know how to vet them besides just talking to people in similar roles. When you do, ask about the sales process, the role of vendor partnerships (this can almost singlehandedly determine your technical focus!), how they go about scoping, how satisfied clients generally seem, etc. If you get engineers to answer those questions, that will shed a lot of light on the kind of environment you might be stepping into (which is tightly linked to the kinds of clients your sales and marketing people are able to reach).(Edited to add: If those discussions make it sound like that firm is bent on pitching solely AI everything these days...huge red flag. Obviously I'm speaking from my own biases here, but IMHO it's a recipe for perpetual scope change at best, and completely unrealistic expectations at worst. Too many un-serious people selling to other un-serious people who are spending still other un-serious people's money for no clear reason. Naturally, YMMV.)By way of background, my data career has been solely in consulting. It's been about 10 years at a couple of relatively small firms (in the 100–200-person range) so I don't know what things are like at much larger ones. I have worked in-house before but in a very a different field. Overall, I'm satisfied with my career path, but it has its drawbacks, especially if technical learning is your *top* priority.There have been long periods where my technical skills stagnated. Once I've reached a certain degree of experience with our bread-and-butter projects, most of the work is on the business logic and requirements side, not the technical side, since I've probably done it a dozen times before.Obviously I'm always keeping up with developments from vendors we typically use (and what's new from others to some extent)...but it's not like I'm frequently taking on entirely new kinds of projects. That's not a bad thing in my book! All those less- or non-technical skills are extremely important. What's more, even if selling the same solution repeatedly isn't the most technically exciting, it's one way to keep increasing your effective hourly rate.Granted, my favorite clients have been smaller ones (like a few hundred staff members or less) who need all kinds of random data things solved. Sometimes that does require unfamiliar technologies, which are often equal parts fun and frustrating at the same time. But those more open-ended projects, where I'm sort of the ""data guy"" on call, are inherently less specialized, and often less lucrative as a result.",TL322,2025-07-25 08:01:28,11,dataengineering,t3_1m8s3rz,False,
n51uhll,">Has anyone else experienced this after moving into consulting?Yes, exactly what you described",mrbartuss,2025-07-25 08:16:29,4,dataengineering,t3_1m8s3rz,False,
n52gx50,"I also recently started with a consulting firm but still have my old company as the client for now. I definitely feel what you're talking about but we haven't had the pressure ramped up quite that much. I'm also surprised that the learning is all basically after hours and up to you to find yourself. It sounds like you get 2 weeks between projects to focus on skills but being on the ""bench"" sounds like being laid off from a union or something if it was blue color work and my anxiety would be crazy until I knew I had something lined up. Trump's new agenda of stopping h1b visas might really help us, finally",SoggyGrayDuck,2025-07-25 11:32:11,3,dataengineering,t3_1m8s3rz,False,
n52kei0,"PWC? :DI work as a consultant, and I do everything but invoicing myself. You're just in the wrong consulting company.",IrquiM,2025-07-25 11:55:43,5,dataengineering,t3_1m8s3rz,False,
n51l229,Either you earn or learn!,rtalpade,2025-07-25 06:48:26,4,dataengineering,t3_1m8s3rz,False,
n521dk2,"Unfortunately this is quite common with consulting firms. Steve Jobs summarized it quite well in this speech: [https://www.youtube.com/watch?v=-c4CNB80SRc](https://www.youtube.com/watch?v=-c4CNB80SRc)Some consulting firms have strong integrity and deliver quality work, but in my experience, they’re few and far between. You really need to dig in and do your research before deciding which one to work with or hire.",Flat-Independence-37,2025-07-25 09:22:52,5,dataengineering,t3_1m8s3rz,False,
n532qcw,"Damn I had to join a consultancy firm to land my first DE role. I hope I don't siffer the same fate, but they did tell I'm in a more technical DE specialised in cloud and Databricks. Hope you get a more technical role, good luck!",mean_king17,2025-07-25 13:41:57,2,dataengineering,t3_1m8s3rz,False,
n5danu3,"Cool, what data source are you using?",007_reincarnated,2025-07-27 02:34:16,3,dataengineering,t3_1mab3ww,False,
n5ddobw,What the source for earnings call transcripts? I hope it will have the latest and the greatest as earnings are released,dead_drop_,2025-07-27 02:54:56,2,dataengineering,t3_1mab3ww,False,
n5dlp8a,"Looks cool, thanks for doing this",skysetter,2025-07-27 03:53:00,1,dataengineering,t3_1mab3ww,False,
n5dayy8,"Oh it's still yahoo finace, just cached on hugging face to avoid rate limits",007_reincarnated,2025-07-27 02:36:24,6,dataengineering,t1_n5danu3,False,
n5dawim,All my data sources are on [Hugging Face](https://huggingface.co/datasets/bwzheng2010/yahoo-finance-data) Each file has a description of its origin.,Mammoth-Sorbet7889,2025-07-27 02:35:56,1,dataengineering,t1_n5danu3,True,
n5dejnv,"earnings call transcripts source Public available APIs, and it includes  the latest and the earliest transcripts released.",Mammoth-Sorbet7889,2025-07-27 03:01:02,1,dataengineering,t1_n5ddobw,True,
n5dnofc,thx,Mammoth-Sorbet7889,2025-07-27 04:07:52,1,dataengineering,t1_n5dlp8a,True,
n5dbbld,"right, but it also includes some data that Yahoo Finance does not have. includes [TTM EPS](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#11-stock-ttm-eps), [TTM PE](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#12-stock-ttm-pe), [Earnings call transcripts](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#15-accessing-earnings-call-transcripts), [Revenue by segment](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#171-stock-revenue-by-segment) and [Revenue by geography](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#172-stock-revenue-by-geography) etc.",Mammoth-Sorbet7889,2025-07-27 02:38:49,4,dataengineering,t1_n5dayy8,True,
n5deyf9,Thanks for sharing . Can you please share info around your tech implementation? Will you incur costs if this takes off . How did you handle scalability ?,dead_drop_,2025-07-27 03:03:54,1,dataengineering,t1_n5dejnv,False,
n5dgm58,"I'm using a web crawler + LLM technology, and this code is still being optimized with no plans to open-source it yet. The main costs of this tool come from my personal time investment, as well as server and LLM API expenses.Regarding scalability, Hugging Face provides excellent infrastructure - all their files are distributed via CDN. I've also implemented DuckDB's cache\_httpfs, which offers local caching for significantly improved access performance.",Mammoth-Sorbet7889,2025-07-27 03:15:45,1,dataengineering,t1_n5deyf9,True,
n5kt5rk,"""The Lindy effect (also known as Lindy's law) is a theorized phenomenon by which the future life expectancy of some non-perishable things, like a technology or an idea, is proportional to their current age. Thus, the Lindy effect proposes the longer a period something has survived to exist or be used in the present, the longer its remaining life expectancy. Longevity implies a resistance to change, obsolescence, or competition, and greater odds of continued existence into the future.""https://en.wikipedia.org/wiki/Lindy_effect",Greedy_Bed3399,2025-07-28 09:02:05,19,dataengineering,t3_1mb6ar1,False,
n5lbyp7,"Brb, rewriting pipeline in sas and Cobol",One-Salamander9685,2025-07-28 11:44:06,13,dataengineering,t3_1mb6ar1,False,
n5lcnbc,this doesn’t really make the point to choose boring technology. first the author basically says “i experimented and learned a bunch from exploring new things but you shouldn’t do that” which frankly I think is terrible especially now with AI destroying the ability of the new batch of engineers to learn things even more and then the point he actually makes is “see if you can get away with using what you already have because ops is not free”. that actual point applies to running literally anything. and the title is somewhat absurd too - let’s take it to its logical conclusion in most enterprises: if you do this you will be an sql server guy whose software runs on windows and is probably written in c# or old java. sounds great but that stack doesn’t pay very well,adappergentlefolk,2025-07-28 11:48:52,3,dataengineering,t3_1mb6ar1,False,
n5pj9ov,"Another perspective is the idea of a ""innovation budget"". Where, for any large project or product, you can choose 1-2 pieces of novel/fancy technology, but for the rest you stick with well established technology.",One-Employment3759,2025-07-29 00:32:00,2,dataengineering,t3_1mb6ar1,False,
n5pj178,This only applies if it's not a Google product though.,One-Employment3759,2025-07-29 00:30:39,4,dataengineering,t1_n5kt5rk,False,
n5okh3r,I feel like this is tied to Zipf’s law. VSauce has a nice video on it.,EarthGoddessDude,2025-07-28 21:24:04,3,dataengineering,t1_n5kt5rk,False,
n5ktm18,Thank you for sharing! That is closely applicable.,Nekobul,2025-07-28 09:06:34,1,dataengineering,t1_n5kt5rk,True,
n5lcwpm,for a “law” this is surprisingly worthless for predicting any future outcomes,adappergentlefolk,2025-07-28 11:50:39,-3,dataengineering,t1_n5kt5rk,False,
n5lu2gh,>most enterprises: if you do this you will be an sql server guy whose software runs on windows and is probably written in c# or old java. sounds great but that stack doesn’t pay very wellThink you make his point pretty well.Resume driven development is what's good for *you*.Boring technology club is about what's good for *the software*.,kthejoker,2025-07-28 13:35:16,5,dataengineering,t1_n5lcnbc,False,
n5r3z8t,"Indeed.See also Gall's law:""A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system.""https://en.m.wikipedia.org/wiki/John_Gall_(author)#Gall's_lawWell established often implies simple (or at least, simple to use, even if the internals are complex)",warehouse_goes_vroom,2025-07-29 07:10:19,3,dataengineering,t1_n5pj9ov,False,
n5ri1vs,"I had an interview that started like that. Just told them that I cannot recall some info since I've seen them last time at University but I know there's X and Y to be checked if this problem would ever arise. A live coding challenge followed. I managed to pull out good design, code and repo structure, long term thinking, edge cases and broader choice with architecture in mind. They did not like that I could not recall the syntax to follow for some arguments in a function.I do not know what games they play anymore.",Awkward-Cupcake6219,2025-07-29 09:26:26,55,dataengineering,t3_1mc5pnc,False,
n5rb3xq,whenever I get these types of questions Ii assume the interviewer is a bullsh!ter with no hands on experience of the actual area so asks random technical questions likely got off the internet,wheredidiput,2025-07-29 08:18:41,26,dataengineering,t3_1mc5pnc,False,
n5rbjyq,"I had an interview like this. It was a joke TBH. There wasn't much practical stuff, mainly theory, and it seemed to be a way to filter out the non CS graduates.",GreenWoodDragon,2025-07-29 08:23:03,18,dataengineering,t3_1mc5pnc,False,
n5rqh19,"I've been on interview panels. You know we don't get paid extra to interview you guys. It's usually extra worked tossed at me that I'm supposed to do in addition to my other work assignments. Some companies have a hiring guide, but most expect me to come up with questions on the fly. I usually have a handful of questions already lined up. I can't tell you how many times I have to deviate because the candidate clearly lied on their resume. I'll see something like ""expert in cloud technology"" so I'll ask a basic question like ""what cloud provider?"" And they just freeze because they lied or embellished. It's really hard watching somebody fumble in an interview with what feels like softball questions. I normally go back and forth between high level questions about their experience, a few high level technical questions, and a few deep dives into ares of particular interest that either I need then to know for the role, or I'm trying to see of they were being honest on their resume about.",Lower_Sun_7354,2025-07-29 10:42:51,21,dataengineering,t3_1mc5pnc,False,
n5st70z,"Encapsulation can also just be done with a function, or anything that build their own environment no?",defuneste,2025-07-29 14:35:56,3,dataengineering,t3_1mc5pnc,False,
n5v421u,"You give a brief, vague description that shows you're familiar with the concept, then follow with a smile and a quip about how you can't recall the exact textbook definition. Then you move the conversation forward by asking how they use the theory they just asked about in their code and show interest and engagement in their implementation. Ask follow-up questions demonstrating that you can discuss the pros and cons of the implementation.They're not asking for a textbook definition, they're probing your soft skills and making sure you're not regurgitating AI answers.",organic-integrity,2025-07-29 21:01:14,2,dataengineering,t3_1mc5pnc,False,
n5wgu3v,They are just asking ChatGPT to write the questions,thepenetrator,2025-07-30 01:23:18,1,dataengineering,t3_1mc5pnc,False,
n5xmts4,"That's quite common in software testing as well with a particular nationality of interviewer. Either your interviewer didn't know anything about DE and looked up interview questions online and got a guide from outside the US, or you are interviewing with someone outside the US.",Fun_Independent_7529,2025-07-30 06:18:43,1,dataengineering,t3_1mc5pnc,False,
n5w1r4q,being slammed with leetcode is just part of the cultural experience. but encapsulation based programming is pretty self descriptive. i think its a good question. encapsulation =/= oop,Certain_Leader9946,2025-07-29 23:56:47,-1,dataengineering,t3_1mc5pnc,False,
n5riydc,"That's the perfect answer, i didn't think about that",HMZ_PBI,2025-07-29 09:35:01,6,dataengineering,t1_n5ri1vs,True,
n5yciyp,"Huh, interesting. Looks like it’s not actually running in a true Spark environment, but rather interpreting Spark code and executing it on Snowpark resources. Not a bad idea in theory, but I’m skeptical it can fully replicate everything Spark does (or do it in quite the same way).Snowpark still feels a bit clunky to me in some areas, especially when working with unstructured data. And if it’s ultimately still running on Snowflake/Snowpark resources, it seems like you’d still need to rely on Snowflake specific constructs (like combining functions and stored procedures) to achieve things Spark can often handle with a single function.",BaxTheDestroyer,2025-07-30 10:22:54,29,dataengineering,t3_1md072b,False,
n5y3jko,Going literally full circle fricking LOL,CrowdGoesWildWoooo,2025-07-30 08:58:39,26,dataengineering,t3_1md072b,False,
n5z6y9f,"Hi Guys, Snowflake employee here & just wanted chime in with a bit more info on this topic so you guys are clear what the new feature is and what it is not.Previously, we had 2 main methods for Spark users to interact with or leverage Snowflake vectorized engine.1. Snowpark Dataframes: These were close to PySpark APIs but (not exact). Initially (2,3 years ago) they were limited in coverage but as of now, do cover most of PySpark functions so if you tried it before, experience is much different now. Because Snowpark was not exactly as PySpark, it did require about 10% code refactoring so some migration effort was necessary. Benefit of Snowpark dataframes was that they were not held back by OSS PySpark Functions so you had access to Snowflake specific ML & AI functions and the newest features. Snowpark Dataframes allowed you to leverage 100% Snowflake Serverless Compute engines for SQL, Python, Java & Scala UDFs.2. Snowflake Spark Connector: This was meant to connect existing Spark clusters to Snowflake to read, transform & write data to/from Snowflake. Driver has some optimization where some of the aggr functions could be performed in Snowflake before delivering the data to Spark cluster but the Spark Compute Clusters did bulk of the work where Snowflake was input and/or output for the data.The new Apache Spark Connect from Snowpark combines best of both worlds Apache Spark code that developers love & use for Data Engineering & ML and Snowpark which gives access to serverless vectorized engine for SQL, Python, java & Scala jobs.Recent innovation from Spark Connect from OSS Spark community was the catalyst that Snowflake was waiting for to integrate OSS Spark in to Snowflake ecosystem the right way.This means you can now run your existing Spark jobs with 0 code changes on Snowflake compute which comes with many added benefits such as unified security & governance, performance, auditability & simplicity as compute is serverless and requires little to no optimization or maintenance.How it works is that the OSS Spark sends the job details to Snowflake, Snowflake generates a new execution plan based on the original details that can run on Snowflake Vectorized Engine (SQL, Python UDFs & etc.) sot he original code remains the same but where & how it executes in back are different.Our initial focus for Public Preview was majority of the customer use cases that we have seen which are Data Engineering & ML workloads that use SQL, Dataframes & UDFs. We are actively working on collecting feedback and build support for other new Spark features supported by the OSS Spark Connect project so definitely would love any feedback that you guys have to take to our PMs.I understand this may not be the right fit for every Spark team. If your team enjoys tweaking Spark params & cluster configs to get every ounce of performance out of clusters then this solution may not be a good fit. However, if the team enjoys Spark code and has a ton of existing pipelines but would rather spend their time building & deploying new projects vs. optimizing & maintaining cluster, it will be a great benefit. Especially if Snowflake is the downstream analytics layer as it would eliminate any Export & Import jobs(time & cost) between Spark & Snowflake environments. The main goal is to meet developers where they are by offering ways for them to leverage advances Snowflake capabilities by offering them different means to work with Snowflake in their preferred language and coding frameworks.If you guys give it a try and have inputs don't hesitate the reach out and let us know feedback.The good, bad & the ugly.",Mr_Nickster_,2025-07-30 13:40:22,27,dataengineering,t3_1md072b,False,
n5yil09,Spark is much more than just mimicking the API,alien_icecream,2025-07-30 11:11:38,13,dataengineering,t3_1md072b,False,
n64awfk,It's pretty big news that Snowflake has decided to follow the industry trend. Having Spark on Snowflake definitely helps from the interoperability perspective.,Sheensta,2025-07-31 06:15:47,3,dataengineering,t3_1md072b,False,
n5ybsg3,I’d guess the previous (garbage) offer to port your spark code to the proprietary snowflake libraries went over like a turd in the market.,cutsandplayswithwood,2025-07-30 10:16:26,6,dataengineering,t3_1md072b,False,
n60mcb5,RemindMe! 3 days,saif3r,2025-07-30 17:44:09,1,dataengineering,t3_1md072b,False,
n661ao4,I wish Snowflake would solve real problems with their platform and maintain stuff instead of announcing new shit that nobody wants and which will probably be too half baked to use anyway.,riv3rtrip,2025-07-31 14:04:56,1,dataengineering,t3_1md072b,False,
n5zjelm,I'd like to see Snowflake take over and crush Databricks in next few years:face_with_tears_of_joy::face_with_tears_of_joy:.,69odysseus,2025-07-30 14:42:32,-5,dataengineering,t3_1md072b,False,
n5zsvac,"> Write or onboard your compatible Spark SQL, DataFrame, and UDFThey deliberately didn't say ""Dataset"", so yeah, most Scala stuff probably won't work. Though supporting udfs is good. Hopefully that includes UDAFs too.",BernzSed,2025-07-30 15:28:30,3,dataengineering,t1_n5yciyp,False,
n58cvvy,Incremental pipelines can be a great pain when there are bugs and info needs to be reprocessed backwards. Full refresh pipelines are easier to operate.,oalfonso,2025-07-26 08:05:39,71,dataengineering,t3_1m9n3fz,False,
n588zl6,"One reason for full refresh can be simplicity, it needs less logic overall and ease therefore quicker to implement and easier to maintain.On the transformation side, it might also make sense for dimension models since you would overwrite 90% of records during a run anyway",r4h4_de,2025-07-26 07:27:41,28,dataengineering,t3_1m9n3fz,False,
n594lxf,The key is idempotency. We built a system that implemented both because we knew the only constant is change. We leveraged a full refresh pipeline so historical data could be reprocessed when either business rules change or defects were found then saved the delta. This allowed us to keep multiple versions of the same logical fact.Because we knew this system could always easily backfill fixes or reproduce old history under new business rules we could move fast.Effectively full refreshes are easier to test and debug because they should be idempotent. System go down? Restart it. Job not finish? Restart the system. Idempotency is a powerful concept that will make your life so much easier in the long run but without the ability to refresh the entire unit of work it becomes difficult to reason about.,mRWafflesFTW,2025-07-26 12:14:17,21,dataengineering,t3_1m9n3fz,False,
n589zur,That 'robust' incremental pipeline? It fails silently when business rules change. Full refresh doesn't care.,dragonnfr,2025-07-26 07:37:35,41,dataengineering,t3_1m9n3fz,False,
n58xkr9,How do you backfill when you only incrementally load?,paulrpg,2025-07-26 11:21:40,8,dataengineering,t3_1m9n3fz,False,
n589rwe,"In my experience, incremental refresh pipelines are for fact tables while full refresh are for dimension tables (unless the business wants you to implement SCD, but if not, full refresh)",404_adult_not_found,2025-07-26 07:35:23,14,dataengineering,t3_1m9n3fz,False,
n592toa,This is one if the reasons I enjoy using dbt:You can pretty simply set up an incremental model using jinja syntax. Then you can tag models with “full-refresh” as needed and it does that. So you get the best of both worlds.Where dbt doesnt excel in this is doing this for incremental builds for scd tables. But for simole staging its generally a great tool.,fleegz2007,2025-07-26 12:01:42,7,dataengineering,t3_1m9n3fz,False,
n59f954,"It's easy enough with the example of CSV files because you can track exactly which files are loaded and which aren't (and tools like Databricks autoloader do this for you easily).It's more nuanced with systems they may do hard deletes, or late arriving records. In either case it's very typical for incremental pipelines to drift slowly away from the source.A few patterns to combat this like a lookback window on incremental loads (depending on just how late records can arrive)Also you can mix BOTH - for example incremental loads every hour to keep data fresh, but nightly or weekend full loads to minimize drift",Fidlefadle,2025-07-26 13:23:40,5,dataengineering,t3_1m9n3fz,False,
n58aram,"I generally use full refresh if I cannot trust incremental loads. Think of source system records being deleted but that not showing up in the source data other than the record being gone. I also have source systems where the identifiers can change without updates in the system columns that should mark these updates.That being said, if you have a robust incremental setup that beats the full refresh. It might be good to consolidate it with a full load every once in a while to check if the incremental loading is indeed as robust",juicd_,2025-07-26 07:45:05,3,dataengineering,t3_1m9n3fz,False,
n58m68c,"If the processing logic changes, you likely need to reprocess the stuff you processed. If you just copy from A to B as it is, then this will likely never happen. However most pipelines will do some transformations, e.g. adding a new column. Say you processed all the input files (so far) and now need to add a new column to all the output files. Are you going to write a new pipeline to do that, or edit the existing one and re-run on the same input data?Another example I didn't see mentioned is data size. Your pipeline might be written such that it extracts a delta of changes in the input db table and writes them to the output. This is because just copying the whole table every day is too expensive, and the changes are expected to be small, so could instead use a smaller machine. Now what do you do if the processing logic changes?Of course there are solutions to write a pipeline such that it handles both entire data and deltas, but those solutions always depend on the specifics of the input. It's often much easier (faster) to have a 2nd pipeline for full reloads, configured for a bigger machine, etc.",kathaklysm,2025-07-26 09:38:30,3,dataengineering,t3_1m9n3fz,False,
n5duupo,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-27 05:04:53,1,dataengineering,t3_1madx18,False,moderator
n5dvxwl,"You’ve said you’re new and you’re a bottom rung data engineer?Then none of that stuff is your business. This is a senior management or chief architect / distinguished engineer problem. Go about your day.Try to change it and you’ll be making enemies of the people you need to succeed in your actual projects, and next thing you know there’ll be no environment to worry about because you’ll have no job.",codykonior,2025-07-27 05:13:55,71,dataengineering,t3_1madx18,False,
n5f817h,"Talk to your lead about it. Identify concrete problems, and be solution based. Float the idea of making a tech debt backlog. Then see if you can carve out some time to work on prioritized issues.",One-Salamander9685,2025-07-27 12:30:39,3,dataengineering,t3_1madx18,False,
n5dwfx7,"This is an organizational cloud governance issue. Ideally, your org should set up an AWS Organization (if not done already) and provision guardrails vis tools like service control policies and AWS config rules to enforce standards and prevent people from doing anything too crazy. There should also be a standard for how things go from dev to test to prod. But that might be beyond the scope of your team, so the best way to maintain your sanity in the short term would be to provision a new AWS account within your organization, and provide access to only the data engineering team. Analysts and the like don’t need AWS console access if they’re just making JDBC connections to some data service. If you share details about your planned architecture I can give more specific advice, but I definitely recommend not trying to deploy this in the chaos of any of your existing accounts.",worseshitonthenews,2025-07-27 05:18:07,2,dataengineering,t3_1madx18,False,
n5fm2gc,You’re new do exactly as youre told for a few months at least. None of that is your fault so don’t worry about it. You’re in build trust mode.,boboshoes,2025-07-27 13:56:14,1,dataengineering,t3_1madx18,False,
n5fzbcs,"Can’t believe the top comment is “do nothing”. By doing nothing you already know this is going to blow up into a mess at some point. Yes it won’t be “your fault” but I bet work will absolutely suck trying to get everything to a decent state. In addition, it’s a potentially great opportunity to make real positive change. On the flip side as someone who is new you can’t just start saying everything needs to change. The approach I would take is talking to your peers and manager and ask questions to see if there’s a reason things are the way they are. This should help you identify who can actually influence the org to make changes down the road.",bass_bungalow,2025-07-27 15:06:53,1,dataengineering,t3_1madx18,False,
n5f2a8a,just use AWS CDK,liveticker1,2025-07-27 11:49:11,1,dataengineering,t3_1madx18,False,
n5ek1ck,"Semi agree, but I go with the approach of show them what good looks like. Would do this a lot when consulting.If it was me and I was building something new id terraform it and not add to the existing problem. People may get curious and ask questions, you can do demos and explain benefits and hopefully by proxy some change may be instigated.",RexehBRS,2025-07-27 09:00:32,3,dataengineering,t1_n5dvxwl,False,
n5dzgih,"Thanks for the kind advice. Apparently the structure for this is non existence, which explains the chaotic situation we are in now. Even I myself feel that it should not be my problem to resolve but it was just thrown onto us to solve it.",DeluIuSoIulu,2025-07-27 05:44:23,1,dataengineering,t1_n5dvxwl,True,
n5dzvj4,"Definitely. There is a cloud team that does the governance work for all aws accounts within our organisation. However I’m guessing they are not exactly strict with the people who can access to the accounts, as long as the account custodian agrees then they will create a new user for the employee. I also got to know that the first person who set up our current account have left the org 2 years ago, and ever since then the chaos start and no one bothers to maintain it. Would love to chat with you more, let me process my thoughts before dropping you a message.",DeluIuSoIulu,2025-07-27 05:48:03,0,dataengineering,t1_n5dwfx7,True,
n53vebd,Maybe I’m wrong here but I feel the interview is more important than the pipeline. It’s certainly context dependent but if it’s something cloud based there’s tons of videos displaying E2E pipelines. Handling emergent issues and communicating with the tech and non technical folks is a huge part of the job.,Historical-Fudge6991,2025-07-25 15:58:33,18,dataengineering,t3_1m92bwc,False,
n53s03m,"Yes, it’s too much IMO. In our last round of hiring we interviewed a great engineer coming from Amazon, he had to do a ridiculous assignment like what you’re describing, with design docs and a presentation about pros and cons etc as well as specifically what tools he would use. They didn’t give him the job. I felt so fucking bad, it must have taken him hours.",mistanervous,2025-07-25 15:42:54,32,dataengineering,t3_1m92bwc,False,
n541kgy,"We did some tests where we obfuscated (hashed) names and IDs in a well known data set and then gave to candidates as a parquet file and asked them to code an ingestion/validation framework and use duckDB to return e.g. top ten sellers for the month of March or similar. Mainly we were concerned with *getting the correct answer* vs the work they did to get there. I know the answers to this test are nowhere on line. I ran a few of these by others in the dept. and they were able to do them in ~30-60 minutes. I didn't think that was entirely onerous. It was VERY clear that what was being generated was essentially random and wasn't trying to get free work, just seeing if people had the chops to do what they claimed in the interview.I suppose someone could feed the whole thing to a GPT model and ask it the questions, but...that's just a hazard these days I suppose.I agree that people trying to have candidates do full-on business case + pipeline design for free are overreaching and I would never ask that of a candidate.There's a lot of the 'fuck you pay me' attitude and that's not wrong per se, but speaking from the hiring side, if you get asked to do a 45 minute task to show you can do it and you reply with 'fuck off', well...that's a choice you can make. It will probably result in your not getting the position.",andpassword,2025-07-25 16:27:35,10,dataengineering,t3_1m92bwc,False,
n53t9ls,0. If you want me to do homework you pay me for it.,RobDoesData,2025-07-25 15:48:42,27,dataengineering,t3_1m92bwc,False,
n53uzni,"Between take home assignment and live sql / python coding, I'll take take home assignment all day every day. I've never felt I wasted time on a take home assignment because I always pick a tool or technology I wanted to learn / practice to do the assignment, so there is no real downside imho. I have recently started seeing companies offer up to $500 in gift cards for the assignment which I think is the right thing to do.",sahilthapar,2025-07-25 15:56:40,13,dataengineering,t3_1m92bwc,False,
n544r6z,"The big issue with these is that someone unemployed, single, without kids can always put in more hrs to come up with something better, which leads to ever greater investments of time despite ""this should only take x hrs"".I think they should be a binary filtering step of: meets standard/does not meet standard. If you spend ages creating a better solution, you get no extra credit for it.You can also ask for something small and ask then person to briefly describe limitations in this approach, what they would do next to make it production ready etc. which takes less effort or even defer that until an in person interview.",speedisntfree,2025-07-25 16:42:47,4,dataengineering,t3_1m92bwc,False,
n54b07a,"Dude you can just build a quick API class that reads the endpoint with pagination and dumps into a json or a df, then a df.to_sql into a postgres or something.Now if it has weird logic or need ti explore the api in depth or schedule sql files or even setup a complex docker architecture, yes it is too much",Obvious-Phrase-657,2025-07-25 17:11:36,4,dataengineering,t3_1m92bwc,False,
n555c0z,"As always, depends on how much I want the job. Ultimately I quite like take-homes because they give me an advantage over worse candidates that is harder to differentiate solely on a CV.An basic end to end pipeline is fine imo, especially if the endpoint is just a database. Slightly more work if it needs to expose endpoints of its own, but if frameworks are allowed, still more than doable.",TA_poly_sci,2025-07-25 19:36:00,3,dataengineering,t3_1m92bwc,False,
n552uq7,"I would see this in two different scenarios. If you are hiring a junior dev, then take home assignment could be good. But it works more or less the same as those hackthon coding test, it is also easy to cheat, even the question is a well crafted one, as long as the candidate has a very close friend who is a good developer. (Yes we do see cheating in this kind of coding test, basically, the hundsband help the wife). But for hiring a senoir or even intermediate dev, this is ridiculous. All employed seniors have tons of work to do, no one will spend more than 4 hours on this kind of test, especially, there will be hours of interveiw coming up potentially. Also we will be careful to not helping the hiring company solving their problem. Thus it is more difficult for us to finish an assignment (I assume you will give serious difficult take home assignment in this scenario) without helping the hiring company to solve their problem. I would say, if you are a junior dev, take it, learn the new knowledge, if you are a intermediate to senior dev, just pass by, don't spend time on it. Meaningless, the one who review you result might be even less experience than you and give a false judgement and decide to not move forward with you.",ImmediateSample1974,2025-07-25 19:23:32,2,dataengineering,t3_1m92bwc,False,
n63nr9o,See here https://georgheiler.com/event/magenta-data-architecture-25/ and https://github.com/l-mds/local-data-stack as a free and open template plus https://github.com/complexity-science-hub/llm-in-a-box-template for genai if that is something you care about,geoheil,2025-07-31 03:17:20,13,dataengineering,t3_1mdogaa,False,
n63u58j,"Use version control for everything, infrastructure as code wherever possible, store raw data outside of the database in an open format and have at least a 3-2-1 backup, capture slowly changing dimensions or snapshots for all data source elements, capture and store metadata and logs, have data transformations in code and completely idempotent, transform data in layers into business entities by domain and skip Kimball modeling, add a consumption layer for apps and pre-built reports, use an orchestrator to manage pipelines end-to-end, use security groups and roles for access grants, place documentation with the code in markdown, have a dev, test, and prod environment for tools, with the testing as part of an automated pipeline run, add alerting for failures anywhere in the platform, avoid pii or gdpr data as much as possible or have a plan to deal with it.",vizbird,2025-07-31 04:01:13,11,dataengineering,t3_1mdogaa,False,
n6494de,"I would go in on Snowflake. 50k\yr is a lot of money and you can get very far. The product is solid, and they have a lot of extensions points (openflow for example for ETL, container services for anything custom).Keeps it simple to have it all in one platform.",RustOnTheEdge,2025-07-31 06:00:10,6,dataengineering,t3_1mdogaa,False,
n648q39,"I did something similar and went full into databricks with dbt-core. All deployed via terraform and asset bundles. We already had powerbi so that connects to databricks.Currently running on ~7000 euros a year with a development and production environment. A large part of the costs come from working within Azure VNets with private endpoints.For our current data it sometimes feels a bit overkill (we are moving GBs of data but not TBs) but having everything in one place (ingestion, orchestration, transformation) makes it smooth to work with.",juicd_,2025-07-31 05:56:42,6,dataengineering,t3_1mdogaa,False,
n63ux7p,"Fantastic question! I literally just spent the past \~6 months spinning something like this up from scratch for my company, except I wasn't blessed with a $50k/yr budget on tools. More like $5k/year tops. Here was my approach:* Sources: AWS Aurora Postgres database, various APIs, potentially Netsuite down the road* Destination: Timescale (now TigerData) database hosted using Timescale Cloud but linked to our VPC via VPC peering -- **this is where the bulk of our budget is going**.* Tech stack: * Pulumi TypeScript to build infrastructure in AWS to support the open source version of the orchestrator, mostly using ECS Fargate for the containers and leveraging existing networking infrastructure * Dagster OSS as the orchestration (went back and forth between this and Prefect before landing on Dagster) * Sling as the core extract and load software to sync data from Postgres to Timescale * dbt core running within the Dagster framework to apply transformations on new data in Timescale * Python scripts orchestrated by Dagster to get data from APIs. Originally wanted to try dltHub but ended up just writing my own scripts using requests (probably not ideal) * Monitoring/notifications via Slack app integration (originally was using [ntfy.sh](http://ntfy.sh) for quick and dirty SNS topic-like notifications, getting Slack approval was challenging) * Dockerized local development using the pre-built Timescale and Postgres Docker images + the same custom Dockerfile I use for Dagster production deployments to keep things as simple as possible.Data is synced from Postgres every 4 hours and daily for the APIs as that's essentially all that's required by our business. The Postgres sync with Sling runs incrementally and is complete in about 20 minutes, which is not optimized by any means but is sufficient for our purposes. For context, our entire source database was only about 330GB and I wasn't replicating the entire thing.Writing YAML for Sling and later for dbt was a huge time slog for 100+ source tables; I leveraged an AI tool (Claude) to help generate a lot of that code after manually building some of the transformation models myself. Bonus to this is it was the generated YAML was pretty consistent for common columns like `created_at` or `_sling_loaded_at` audit columns.I am the lone developer and maintainer of this project -- most people on my team are unaware that I'm even working on a project like this, let alone what its purpose might be. It has been a wild and frustrating ride at times without many others to turn to for help, but it's been a great learning experience as well. Throughout the development, I tried to stress simplicity, modularity, and ease of maintenance as much as possible. Once a larger team becomes available to support something like this, you can make different decisions like moving your data replication tasks to something like Fivetran or using a real data warehouse like Snowflake (again, budget constraints for us).~~Best of luck to you!~~ Edit: I reread the question and realized this is hypothetical but best of luck if this is ever you in the future all the same! Also I feel like my stack is pretty interchangeable with SQL Server as the source, just use different connectors with Sling (I believe SQL Server is supported).",s0phr0syn3,2025-07-31 04:06:43,9,dataengineering,t3_1mdogaa,False,
n6456mz,keep it simple where possible.-adf is easy and cheap for ingestion and orchestration -snowflake/postgres-dbt-powerbi if your company has an o365 e5 license or is a ms shop otherwise this should get you very far and the knowledge ramp up is by far much less than any other answer i have read so far. also finding new people is much easier with this stack,vikster1,2025-07-31 05:26:32,3,dataengineering,t3_1mdogaa,False,
n63es3b,"Considering that I just did this over the last two years, it's all about keeping it simple and robust. The services need to look normal to semi-technical users that you have to collaborate with (SQL Server rocks!)- PowerBI- Azure SQL Database - Azure Data Factory (only for copy data tasks. Nothing fancy)- An Azure Windows VM running:DBT core wrapped in a python scheduled task that checks for new landed data from data factory and runs the appropriate downstream modelsA few random python scripts for activities that are hard to do in Data Factory. The VM also runs the gateway client for PowerBI cloud service to get into the VPN.",Mordalfus,2025-07-31 02:21:49,8,dataengineering,t3_1mdogaa,False,
n6373q4,"There are a lot of factors. What is your budget and timeline? What is the existing tech stack? What is the current data storage at rest and data throughput? How is the projected to scale in 1, 3, and 5 years?",Peppper,2025-07-31 01:36:18,2,dataengineering,t3_1mdogaa,False,
n63rx6u,Check out stackable.tech (all open source),No_Dragonfruit_2357,2025-07-31 03:45:40,2,dataengineering,t3_1mdogaa,False,
n647071,"Some SQL Servers, 3GB of data movement per day, no streaming or real time - with those requirements, honestly you could just get away with setting up a separate SQL Server instance as your “analytics” database and using bash scripts and cron jobs for movement. Sounds like the company is in its early infancy with anything data-related. Setting up an “enterprise” environment with a bunch of tooling and process is likely to just fail at any sort of acceptance/understanding at this point without further education and knowledge of business users/analysts.So yeah, keep it simple - basic necessities - then as the company’s data needs grow you can reassess.",cloyd-ac,2025-07-31 05:41:53,2,dataengineering,t3_1mdogaa,False,
n5qvrar,"The ""Joins are expensive"" is said in the context of running OLAP queries on distributed databases with massive amounts of data. Unless I misread, the article missed this point by using DuckDB or PostgreSQL, so the premise of this article might be incorrect.",sib_n,2025-07-29 05:54:58,54,dataengineering,t3_1mc2ass,False,
n5qrj3i,We regularly see slow queries with multiple joins can have major performance improvements through materialization or denormalization. Anecdotal but makes a real tangible difference to the end user.,Gargunok,2025-07-29 05:18:34,18,dataengineering,t3_1mc2ass,False,
n5r4z9k,"I've done this same test on both spark and bigquery, with roughly ~100 times the data used here (~100-200B rows) and got exactly the opposite results. Joins being massively slower than the OBT.The key is that the table you are joining against needs to be big enough to not be broadcast joinable. As long as you can broadcast join, I'll buy the argument that joins are not slow.",kappale,2025-07-29 07:19:36,17,dataengineering,t3_1mc2ass,False,
n5qtxn5,Now do it in spark,Embarrassed-Falcon71,2025-07-29 05:39:01,17,dataengineering,t3_1mc2ass,False,
n5rack6,Now try doing distributed joins with subqueries,yudhiesh,2025-07-29 08:11:11,6,dataengineering,t3_1mc2ass,False,
n5rpbao,EXPLAIN command will tell the truth,AipaQ,2025-07-29 10:33:03,5,dataengineering,t3_1mc2ass,False,
n5shv59,This is what happens when controlled tests don't match reality. Confirmation bias in action.,DenselyRanked,2025-07-29 13:39:13,2,dataengineering,t3_1mc2ass,False,
n5qnsew,Broken URL :(,JadeCikayda,2025-07-29 04:48:27,1,dataengineering,t3_1mc2ass,False,
n5vazob,Really? Come on with the title. If depends and sure as heck can be.,NoleMercy05,2025-07-29 21:35:02,1,dataengineering,t3_1mc2ass,False,
n5qqj0h,This was an easy and interesting read. Thanks for sharing,Historical-Fudge6991,2025-07-29 05:10:19,0,dataengineering,t3_1mc2ass,False,
n54x93m,"personal thinking, I have no freelance experience, just personal thinking. Small companies does not require data engineering, they need someone can help build their product quick before they have the money to scale up. Only Big companies will need data engineers to help them scale up the data solution. And Big companies don't hire freelance I believe.",ImmediateSample1974,2025-07-25 18:56:05,32,dataengineering,t3_1m97exi,False,
n561bpx,"A challenge I see with hiring freelancers is that companies can be apprehensive about sharing their data with a freelancer. Of course NDAs etc. can be signed but unless they really need a freelancer, they'd probably look towards a contract worker.",booyahtech,2025-07-25 22:17:02,7,dataengineering,t3_1m97exi,False,
n54yp9w,"I've gotten a few gigs over the years just by making a post on LinkedIn about my availability. There is some risk there though unless you know the person, that you'll get scammed out of payment.",ntdoyfanboy,2025-07-25 19:03:05,4,dataengineering,t3_1m97exi,False,
n565y6z,"I got converted to FT employee and I took it, because the market is dry. Why? Cloud tools, PowerBI and business analysts. Quality of the data is often overlooked. I do more interoperability work as a DE than true Snowflake modeling.",SirGreybush,2025-07-25 22:42:52,3,dataengineering,t3_1m97exi,False,
n59fbaa,"The best way to get gigs nowadays is specialize in one thing and advertise the hell out of it. Big companies won't hire a generalist, they will hire somebody who will fix their problem. Things like cost optimization of snowflake or aws is music to their ears.",BarbaricBastard,2025-07-26 13:24:02,3,dataengineering,t3_1m97exi,False,
n54znlf,I watched a youtube video today and they recommended using Linkedin to look for freelancing opportunities.,serrji,2025-07-25 19:07:43,1,dataengineering,t3_1m97exi,False,
n551pp5,Am doing my engineering and currently in last year Looking forward to become an data engineer what's the 3 advice you should give me to become an data engineer,Vivid_Pumpkin7290,2025-07-25 19:17:53,0,dataengineering,t3_1m97exi,False,
n577h37,"Yep, that's the reality of this job. Only big places need a full time DE.",SquarePleasant9538,2025-07-26 02:27:35,8,dataengineering,t1_n54x93m,False,
n54y43c,Indeed I can feel that but there are too many job listings on Upwork and I am not sure if someone is getting that or not,Dangerous_Pie2611,2025-07-25 19:00:14,0,dataengineering,t1_n54x93m,True,
n5ayhy4,So the roles I am applying on Upwork will not go anywhere,Dangerous_Pie2611,2025-07-26 18:17:55,1,dataengineering,t1_n561bpx,True,
n61k175,I like your color scheme. Which one is it?,UnusualPhone7691,2025-07-30 20:22:24,3,dataengineering,t3_1md5m6c,False,
n68dwvs,Yeah nah,Witty_Tough_3180,2025-07-31 20:42:21,1,dataengineering,t3_1md5m6c,False,
n63ydjq,"It's customised, not installed",Substantial_Fig_7849,2025-07-31 04:32:07,1,dataengineering,t1_n61k175,True,
n5lp8f7,"You need to automate it in the pipeline moving it from bronze table to silver table, then in your gold table you join with relevant cleaned data to build your dimensional model. I personally like the audit publish pattern and I put bad rows in a quarantine table and link it to dashboard to add observability to my errors, like if you have a source that have the same constant bug use that to open a ticket in that teams board or a bunch of errors at the same time could signal a bad deployment on your stack or the source stack.But if you have need for something that scales better, dbt has good testing capabilities and streamline the pipeline building process. There are also great open source data quality tools such as great expectations or soda. If you're already on aws, there is a data quality service called deequ i think.Good luck!!",Equivalent_Effect_93,2025-07-28 13:08:15,13,dataengineering,t3_1mbap0p,False,
n5m1ep7,As an intern you don't have to pick an ETL engine by yourself. Ask your mentor or whoever gives you tasks.,invidiah,2025-07-28 14:13:24,7,dataengineering,t3_1mbap0p,False,
n5lgqqj,dbt/sqlmesh. To understand it look into the dbt build command,Zer0designs,2025-07-28 12:16:18,9,dataengineering,t3_1mbap0p,False,
n5psfgq,"Entire departments are built on QA/UAT. This isn't an easy quest you are starting, and hate to say it, but it will never end either. This is a constant need project.",MathematicianNoSql,2025-07-29 01:24:36,2,dataengineering,t3_1mbap0p,False,
n5q8yyt,"What do you mean by ""automate"" the data quality process?Take a try on Great Expectations and Pydantic (if you want, maybe it's good to know to test properly using unit test, integration, etc)",SupoSxx,2025-07-29 03:03:32,2,dataengineering,t3_1mbap0p,False,
n5p0wec,"Have only used fabric data pipelines not Azure data Factory. I'd see if a notebook can be added to the pipeline then write a function using python that dynamically checks each column for white spaces, nulls, duplicates, etc",shadow_moon45,2025-07-28 22:50:20,1,dataengineering,t3_1mbap0p,False,
n5qnirv,Theres a pretty useful data cleaning automation software: [https://www.project-mist.net](https://www.project-mist.net),Late-Albatross7675,2025-07-29 04:46:22,1,dataengineering,t3_1mbap0p,False,
n5qs8n0,Use dqx tool from databricks. Easy to use compared to other solutions. My experience.,DecisionAgile7326,2025-07-29 05:24:30,1,dataengineering,t3_1mbap0p,False,
n5trehj,"Since you're already using Azure + Databricks, one practical path is to define a set of reusable validation rules (like null checks, ranges, or referential integrity) and apply them dynamically across tables in your Spark notebooks. Think of it as building a small rules engine using metadata.If you're exploring tools, dbt + dbt tests are great once you’re in the silver layer. For more advanced checks, Soda, Great Expectations, or Deequ can help—but they can be heavy to start with. Sometimes a few well-structured PySpark functions and good logging go a long way.",DataCamp,2025-07-29 17:15:22,1,dataengineering,t3_1mbap0p,False,
n5v50pj,"This varies by organisation so much. A lot of words and lines of code seem to get spent on the real basics like just counting nulls, empty strings, or zeros across all columns - but for my org, that would be totally wasted effort. It wouldn't help the business at all.We've got shedloads of tables with oodles of columns, but for many of them, things like nulls are totally inconsequential, or even good sometimes.And then folks start talking about duplicates, but if you're defining that to mean the database-managed PK identity column, it's clearly not going to have any dupes, and if it somehow did, it's a bug in the database engine which is far outside our responsibility. I don't want to spend CPU cycles testing MS SQL Server features that have been in place for decades.If you don't mean that kind of dupe, then that starts a valuable but lengthy discussion about what we DO mean by a duplicate; the answer for us varies by table/entity, and is generally too complex for any off-the-shelf tool to handle (that I've seen).So in short, for us the only business value is in a much more manual DQ process (manually defining what DQ means, not manually checking it!). And I rolled our own implementation because nothing I could find came close to what we need.",sjcuthbertson,2025-07-29 21:05:48,1,dataengineering,t3_1mbap0p,False,
n65gyck,aye-cee-docka,aboerg,2025-07-31 12:13:48,17,dataengineering,t3_1mdzv0a,False,
n65on4c,You get the person that decided on the SAP migration to do it.,JonPX,2025-07-31 12:58:44,15,dataengineering,t3_1mdzv0a,False,
n661y8a,"MSEG_MEINS: Message MinesAFKOCY_SEQNR: Afkosee seckner MSEG_LGORTBWART?!?!It's a blast to say them as words, but I will spell them out if other people in the meeting take themselves too seriously.",StemCellCheese,2025-07-31 14:08:10,7,dataengineering,t3_1mdzv0a,False,
n663oi4,Some of the best laughs I had during migration was in saying these out loud (between crying),PantsMicGee,2025-07-31 14:16:38,5,dataengineering,t3_1mdzv0a,False,
n67fkns,"""look, we move data from left to right. that's all you need to know right now and ever""",vikster1,2025-07-31 17:59:08,3,dataengineering,t3_1mdzv0a,False,
n67jw48,FUKRTrust me on this one.:beaming_face_with_smiling_eyes:,mr_thwibble,2025-07-31 18:19:09,5,dataengineering,t3_1mdzv0a,False,
n68etg1,"Based on prior experience with SAP, everyone just pronounces the table as it’s spelledMARA -> “Ma-rah” -> Material dataEKKO -> “Echo” -> Purchasing document headerEKPO -> “Eck-Po” -> Purchasing document itemsFuck SAP btw",Eatsleeptren,2025-07-31 20:46:36,3,dataengineering,t3_1mdzv0a,False,
n65v8sk,"I personally make it a word like your example for VBELN. BUKRS would be Bu (sounds like boo) - kers. If you're with SAP functionals or the tech peeps (ABAP/Fiori/BW), they'd get it. If it's too complicated, maybe the descriptive name? Or just list it down?",nahihilo,2025-07-31 13:34:18,3,dataengineering,t3_1mdzv0a,False,
n65yda0,I usually just spell them out unless they're fun to say. GJAHR(too lazy to check the spelling rn) is a personal favourite. GUH-JAR,custardgod,2025-07-31 13:50:22,1,dataengineering,t3_1mdzv0a,False,
n68puod,"I am German and I use the descriptive name like Belegsegment instead of BSEG, god inteded",Capinski2,2025-07-31 21:40:37,1,dataengineering,t3_1mdzv0a,False,
n5kd0t2,"Happy to see this blog post being covered by newsletters and podcasts organically. Here's why I recommend to read it and share your insights:* This system has scaled to **100k/sec events** and meets the critical requirement for enterprise users* These insights were learned over the past 6 yrs of continuous improvement* RudderStack chose Postgres over solutions purpose-built for Queuing/Event-Streaming solutions. A bold and not so intuitive choice for many.* Covers insights related to indexing, compaction, CTE, WAL, optimized configurations, etc.* You may check out the code at - https://github.com/rudderlabs/rudder-serverP.S. I am a bit biased because I contributed to this article and the project",ephemeral404,2025-07-28 06:27:18,3,dataengineering,t3_1mb591a,True,
n5rcf9k,"If we’re talking about the future of data engineering, it’s worth first asking: *why does it exist at all?*Originally, businesses needed someone to get them data for decision-making. First came BI developers/ETL engineers, they built warehouses and reports so analysts could do their work. Later, data analysts became more self-serve and focused on interpreting the past. Then data science took off, using that historical data to predict the future.Both analysts and scientists quickly ran into the same problem: clean, reliable, well-structured data was hard to come by. That’s when the modern data engineer role emerged, not just to build infra, but to make data usable at scale.Early DE work was infra-heavy, but as platforms matured (Databricks, GCP, Azure, Snowflake), more of the plumbing became automated. That doesn’t mean the job is going away, it means the focus shifts. You spend less time reinventing connectors and clusters, more time on things like modeling, scalability, governance, security, cost optimization, and integrating multiple data sources into a coherent system.This is also where analytics engineers come in, they work closer to the business, doing a lot of SQL/dbt modeling and BI integration. In small teams, AEs might cover most data needs; in bigger orgs, DEs still handle the scale, complexity, streaming, and compliance side.If anything, the “easy” DE tasks are disappearing, which makes deep skills more valuable:* Real-time pipelines (Kafka, Pub/Sub, Flink)* Data contracts, governance, compliance* Multi-cloud / cross-platform integration* ML data pipelines & feature stores* Performance and cost tuning at scaleI wouldn’t say DE is shrinking, it’s just changing shape. The safest way to future-proof yourself is to stay close to both the business context *and* the technical challenges. Platforms will keep automating, but stitching them together, governing them, and making them serve the business well? That’s still human work.",PolicyDecent,2025-07-29 08:31:35,32,dataengineering,t3_1mbypdh,False,
n5qdmzy,Lego sells molded blocks and sells the blueprints on how to make something out of those molded blocks. But you still need to understand how to read the blueprint and build the thing. Sometimes you may even want or need to free style with those blocks,bjatz,2025-07-29 03:34:32,19,dataengineering,t3_1mbypdh,False,
n5qid06,"Our job is similar to the job of people building houses. You have a set of basic components you use the to assemble the most comfortable and practical house. When you don't have to spend time on nuts and bolts, you can focus on delivering the best possible solution on time and under budget. You can even be creative by finding more uses of the data being processed.",Nekobul,2025-07-29 04:07:38,1,dataengineering,t3_1mbypdh,False,
n5qz5n9,"Some roles in companies without big data or specific needs are and will be more and more just maintenance/monitoring and business then creators.A bunch of companies and industries will still have needs to create custom pipelines, use cutting edge tech etc.It's still a good idea to understand what it means to talk to stakeholders and drive impact, but if you want to be a creator, in the era of AI, I believe we're still going to be very relevant, we just need to better understand the skillset needed",dorianganessa,2025-07-29 06:25:42,1,dataengineering,t3_1mbypdh,False,
n5sx3xp,"If companies adopt to drag and drop ETL tools like Talend, then the DE field will hold no value as you're only going to get bad quality DE's. Our team used Talend at Air Canada and it's a horrible tool. The decision was taken by some non-technical folks and the technical team faced the issue with the tool.",69odysseus,2025-07-29 14:54:36,1,dataengineering,t3_1mbypdh,False,
n5u09o1,"Overall we are getting more efficient but i would not call it plug and play. Internal apis etc will never go away and this kind of boring work will get automated.what is different this time is that the ""block"" you plug is a ""workflow"", or an automation specialised at making that block as needed quickly from your instruction. so perhaps it's ""converse, plug, play""there is incentive to automate the easy and time consuming stuff so that will go away sooner.you can use the extra time to upskill - you will also be able to do that faster and farther with LLMs.",Thinker_Assignment,2025-07-29 17:55:03,1,dataengineering,t3_1mbypdh,False,
n5zqw1m,"No, every company’s data infrastructure is different. It just breaks my brain trying to figure it out. It’s more nuanced than plug and play. Lots of these out of the box solutions don’t fulfill all the needs of a business so there’s that…",pl0nt_lvr,2025-07-30 15:18:59,1,dataengineering,t3_1mbypdh,False,
n613nhx,There is a domain knowledge that you would like to add data engineering skills? that is what I am doing I like crypto and focus my learning projects in that industry just to learn the business and when I think that is a good time to jump to an own business or a crypto company i will be kind of a hybrid professional and that is challenging just giving my opinion,Many_Insect_4622,2025-07-30 19:04:23,1,dataengineering,t3_1mbypdh,False,
n5szsel,"Although the excessive bolding isn't my style, I think this post is spot on. I'd include AI/LLM stuff in the skillset as well. It's one of the reasons, the easier work is getting even easier *and* it'll change how ETL is done even if only by assisted coding or AI systems coming into DE scope.",ProfessorNoPuede,2025-07-29 15:07:16,5,dataengineering,t1_n5rcf9k,False,
n5w1dzn,"Building nice things with Lego is a skill, especially when you have so many options and requirements.The real trick, though, is being able to build pieces of totally-custom work to fit with the other Lego pieces. I've known many a GUI tool power user who have had their tech escapades fully halted by needing to write a few lines of bespoke code.",JJ3qnkpK,2025-07-29 23:54:44,2,dataengineering,t1_n5qdmzy,False,
n5qk3ar,My company recently implemented fivetran and it is ridiculous how quickly we were able to replicate our source systems.,SellGameRent,2025-07-29 04:20:18,26,dataengineering,t3_1mc1k9c,False,
n5qkpqo,"The main question for me is, how much do you expect your data to scale? The price starts to ratchet up once you get past the free threshold for monthly active rows. Taking a dependency on this could potentially be very expensive in the future. If you have small data utilization (and plan to remain at that level), then don't see an issue from a pricing perspective.Another thing to consider here is making sure you temper expectations of the wider business. With no data engineers and a single analyst, there is limited investment in the data function (based on the provided information). Given the connector choice, maybe you report to finance? Regardless, it's one thing to get the data from point A to point B, it's another to ensure the data is correct. For example, what happens if they change the configuration of Salesforce objects? How will you handle that downstream?I say the above to warn of the trap of the business thinking that increased access to data easily results in more data utilization.",on_the_mark_data,2025-07-29 04:24:58,7,dataengineering,t3_1mc1k9c,False,
n5ql30r,"Fivetran is plug‑and‑play and charges on rows. Skyvia is more manual but flat priced. Airbyte, Hevo, Rivery and others are also in reach.We cannot narrow it further without numbers on rows, refresh needs and budget. Too many tools to guess.",bcdata,2025-07-29 04:27:44,8,dataengineering,t3_1mc1k9c,False,
n5qnxzh,"Hi. I can't comment about Skyvia but we use Fivetran. It is exceedingly easy to setup up new replications but it can get expensive. We spend about $30k per year to replicate, SFDC, and several other cloud based systems. We tried using it for replication of large SQL Server databases (300 million rows that change, get inserted often). It was too expensive so we rolled our own (not as nice, but does the job). Not sure how your trial estimated only $50 but I it may be possible if your rows don't change often.",GreyHairedDWGuy,2025-07-29 04:49:40,4,dataengineering,t3_1mc1k9c,False,
n5qmiwb,"When it fails, like it really really fails. Rare, but spectacular. Have had a few instances where things just stopped working out of the blue for a few days. Talk about up shit creek...Building around others obviously has some downsides with any of these 3rd party ETL tools. Fivetran is big name because they're good enough more often than not. They're lot perfect, but they have the resources to be good",EmotionalSupportDoll,2025-07-29 04:38:45,3,dataengineering,t3_1mc1k9c,False,
n5rtmmz,"It has a ton of value if you’re a small team. We have less than 10 people on the data team at a manufacturing company that has over 5 billion in sales. We only write our own connectors if the connector does not exist or our performance requirements are beyond what is available on the market. I would have to have another 2-3 people full time to write and manage connectors for all of our data sources. It’s real hard to explain the value of that to executives, so we buy what we can and only build when necessary.",Jealous-Win2446,2025-07-29 11:07:35,2,dataengineering,t3_1mc1k9c,False,
n5sbx0p,"Fivetran’s turnkey connectors and automated schema drift handling make it a great fit for a team with no dedicated engineers. Your $50/mo estimate for Salesforce, QuickBooks, and SharePoint is very reasonable. Just be aware of the vendor lock‑in and that you won’t be able to customize complex transformations in‑flight; if you need more control down the road, an open‑source option like Airbyte could slot in without a big migration.",GreenMobile6323,2025-07-29 13:06:34,2,dataengineering,t3_1mc1k9c,False,
n5qmp0x,With what you said it’s great. It’s not great if you want to fine tune and control your CDC. Also troubleshooting is a pain due to having to dig through logs. Also the less sources you have the better,wytesmurf,2025-07-29 04:40:03,1,dataengineering,t3_1mc1k9c,False,
n5qt4d8,Where do you push the data from the source systems? What is the target?,Nekobul,2025-07-29 05:32:02,1,dataengineering,t3_1mc1k9c,False,
n5ud1ot,"If you're exploring alternatives to Fivetran, you should definitely check out [COZYROC Cloud Gems](https://cozyroc.cloud/gems/gallery). It's a **modular, low-code platform** that offers prebuilt “gems” (connectors/tasks) for ETL workflows from REST APIs, databases, flat files, Excel, Azure, and even tools like Salesforce, SharePoint, NetSuite, etc.The best part? **It's** ***way*** **more cost-effective**. Pricing is usage-based and doesn't lock you into a per-connector monthly plan. Here’s their [pricing page](https://cozyroc.cloud/gems/pricing) for comparison.You can build and automate production pipelines quickly, without worrying about vendor lock-in or inflated data volume pricing. Worth a try if you're looking to scale without bleeding budget.",NeckNo8805,2025-07-29 18:54:10,1,dataengineering,t3_1mc1k9c,False,
n5jhrxg,"\> My technical intuition is nowhere near as strong as my peers, and I often need hand holding in solution designYour technical intuition is not near your peers might be because you haven't been there long enough to get a full picture of the system. It takes time and practice to build intuition. \> I am the only “BI” guy in my orgYou are literally there for a reason. You are not a fraud, you are not the village idiot.",Objective_Notice_271,2025-07-28 02:25:06,27,dataengineering,t3_1mb47hg,False,
n5jh9jo,"Tbh you sound like a medium skilled dev who doesn't have a burning passion for tech and learning more. Which is totally fine, you don't need to be a rockstar. Do your job the best you can, take advice where given, and just keep trying. Lots of REALLY bad devs out there and it doesn't sound like that's you.But I wouldnt expect to move up quickly or get good promotions.",dcent12345,2025-07-28 02:21:51,18,dataengineering,t3_1mb47hg,False,
n5jk2wt,">I am the only “BI” guy in my org, everyone else is stronger in software engineering. EveryoneI would lean into this. It offers a different perspective on the team and one that is especially important given the reporting layer is what end users see. Your background is certainly an advantage here. This bit:>We no longer have 1:1s or talk about anything really while he still talks regularly to the rest of the teamI know it’s not easy but I would try and muster up the courage and ask for 1:1. Come prepped with an action plan and ask for advice on areas to grow in. A good manager can help here. Good luck and as a DE who leans more BI, it’s easy to doubt our technical skills but there is so much more to this profession. Understanding the underlying data, how to present it, and just how to communicate with teammates goes a long way. Good luck and let us know how it goes!",big_chung3413,2025-07-28 02:40:11,7,dataengineering,t3_1mb47hg,False,
n5jszz1,"Hey, firstly a lot of folks in tech feel like failures/frauds - there's a lot of imposter syndrome floating around, so discount that.However, I'm going to suggest something that hasn't been suggested already. Study/learn. A lot. I often feel like a fraud often but it's usually ameliorated by being the only person in the room who has the answer to a technical question, or enough free-floating context to extrapolate one if it doesn't exist. This was through truly backbreaking amounts of study, often around technical subjects that were only tangentially related to data engineering (microprocessors, operating systems, machine learning, data science, maths) in addition to spending plenty of time learning about core software engineering (languages, design patterns, best practices, tooling) and throwing time at random new tech constantly (agentic workflows, vector dbs, scalable anonymization techniques, heck even occasionally frontend stuff) *in addition* to the obvious stuff (data modelling, query optimisation, infra/cloud). I read the entire Postgres docs from start to finish at one point. Waste of time? Sure, maybe not the most strategic choice. But it's definitely one path to feeling like you deserve your job, because I assure you the vast majority of other folks aren't going to do it. Good luck.",actualhumanfemale2,2025-07-28 03:41:38,5,dataengineering,t3_1mb47hg,False,
n5k7qw2,"I work for a tech company (not small, making billions in revenue), right in the central data engineering team. No unit test is used, as most of the codes are SQL and Python for airflow and terraform for infrastructure set up. I was so surprised when i joined, I do unit test as I came from software engineering background. I think you shouldn’t judge yourself too hard. They chose you for a reason. Learn one thing at a time. Ask ChatGPT or use copilot, Claude- they make decent unit test and can teach you as well.",Extra-Ad-8033,2025-07-28 05:39:31,2,dataengineering,t3_1mb47hg,False,
n5lajh1,"Firstly, it doesn't sound like you have a very supportive team. You joined a team of experienced engineers, whereas you're new to the position. You needing training was a given in that situation and it is a seniors job to mentor. I would definitely ask for a one on one with a regular cadence. Get feedback and start working on the low hanging fruit. Also, talk to your manager about specializing. With you being the only BI guy, it likely makes you in the best position to do data modeling and documentation, working with downstream users, etc. Find something you can do well right now, and gradually learn the rest. Finally, stick it out here and learn as much as you can. You'll probably want to find a new company eventually. Or you'll be there long enough that you get as good as they are. They have 10+ years on you, you can probably get where they are with practice and training by the time you get experienced enough. I started as a BI guy myself. I did a lot of data transformation work at first, which is what I love anyways. Eventually, I had to expand and that was painful. But firstly, I gained additional technical skills which is always good. Secondly, I found that I have a pretty good intuition for architecture, and my manager is eagerly supporting that. Thirdly, I made a name for myself working across teams to build data engineering solutions. That meant that I did not always need to be the most technical guy. I just had to figure out things at a high level and let our consultants who have 15+ years on me with highly technical expertise do their thing. In the meantime, I'll gradually get better technically, but I don't NEED it as my niche isn't as technical.",BoringGuy0108,2025-07-28 11:33:42,2,dataengineering,t3_1mb47hg,False,
n5jzaor,"I will be the bad guy it seems. You're struggling because you sound like you don't care and you're not interested. I was sympathizing with you a bit until I got to your last bullet, then you completely lost me. The fact you don't care about the domain and you don't want to learn more tells me you belong in the struggle you're in. You put yourself there and you don't care about getting yourself out the whole you dug. Thus, the only advice I can give you as a senior engineer is to find some passion, stop crying about what you did to yourself, and get better.",Tehfamine,2025-07-28 04:28:55,2,dataengineering,t3_1mb47hg,False,
n5kxt3t,"OP, I work with lots of computational scientists who I think are fairly similar to the people you worked with in your previous role. They would all struggle hard if they jumped into where you are now, because they mostly just write scripts and things to get their analytical work done - they are not engineers. Engineering is quite a different mindset, I'm also a career switcher but I came from aerospace engineering so the mindset shift wasn't as big.The best advice I can give you to read 'The Missing README A Guide for the New Software Engineer' by Chris Riccomini and Dmitriy Ryaboy. I think it would be very helpful for where you find yourself now and it a pretty short read.",speedisntfree,2025-07-28 09:47:12,1,dataengineering,t3_1mb47hg,False,
n5l7djt,Everyone gets imposter syndrome at some point of another the difference is you are actually getting advice and self-reflecting one foot in front of the other focus on what you can do well if you are finding it hard to pay attention to detail slow things down and then if you are not working fast enough ask if there are quicker ways of doing tasks someone in your team might have an insight or a trick they know from experience that could help you.,brenanweston,2025-07-28 11:09:45,1,dataengineering,t3_1mb47hg,False,
n5mvxsw,"I mean, obviously it’s nice to have a good salary, but do you want to be a data engineer? If you applied for a DE position, it’s probably reasonable to expect some understanding of CI / CD, version control, maybe some basic OOP etc. Your post is giving me the impression that you’re not interested in expanding your skill set, despite your new position having a higher standard of development. That’s not to say that they couldn’t have handled the situation better, but I would be more open to up skilling. Definitely talk to your manager about rescheduling 1 on 1’s and maybe consider creating a plan for additional training, etc.",rewindyourmind321,2025-07-28 16:39:33,1,dataengineering,t3_1mb47hg,False,
n61rqn9,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-30 20:57:44,1,dataengineering,t3_1mdiajk,False,moderator
n61vut7,Don’t get caught up in job titles because they vary from org to org. Find the type of work you want to do and the skills and toolset needed for it. Look at the job responsibilities and qualifications that match.,Financial-Hyena-6069,2025-07-30 21:17:22,20,dataengineering,t3_1mdiajk,False,
n61tt9m,"too personal to say. Its also very complex since every company, and even every org within every company has all different variation of what these roles actually do",IAMHideoKojimaAMA,2025-07-30 21:07:34,16,dataengineering,t3_1mdiajk,False,
n62hmft,Are you more interested in learning about the business and helping translate insights into results? Or are you more drawn to technicals and creating and maintaining complex data systems?Good news is that it’s not terrible hard to transfer between the two. Maybe a little easier to go eng -> analyst than vice versa but far from impossible,Auggernaut88,2025-07-30 23:10:13,9,dataengineering,t3_1mdiajk,False,
n637ej6,"DE pays a lot more. Realistically I see a lot of Data Analyst work cross over heavily with DE work, but they are respected less and paid less. The work isn't necessarily easier either. I'd just do DE if I were starting over. If you genuinely like the data analyst type of work, just choose data science. It's closer to that type of work, but you will make significantly more money. I kinda feel that a lot of the ""do X if you like Y"" advice isn't super helpful because the role varies a bit from company to company. You also have no clue which one you would like in practice, especially if you don't have experience. You're just guessing. I'd suggest at least trying the options that pay well, so that even if you hate it, at least you are financially well off.",harrytrumanprimate,2025-07-31 01:38:05,6,dataengineering,t3_1mdiajk,False,
n62qxvx,"As a guy with masters in data science who currently works as a ""data analyst"" that does an awful lot of ""data engineering"" I would argue you should know both and eventually decide which one you want to focus on. It will make you a better data engineer or data analyst.",5PointsVs56,2025-07-31 00:01:09,3,dataengineering,t3_1mdiajk,False,
n62lzds,"I would say get into software/web development, that does not require much maths and is easy to pick up for cs grad!",rtalpade,2025-07-30 23:33:44,3,dataengineering,t3_1mdiajk,False,
n6464u8,As a lot of other people have mentioned it’s going to mainly depend on what you enjoy. Do you enjoy creating process to manipulate data to create data tables that are easy to understand and query for downstream users or would you rather take data and perform analytics to drive business decisions? This might be something you can only solve by doing. There’s plenty of examples of projects you can do on YouTube which might help with this decision.I’ve been a data analyst for 5 years and will start a role as a data engineer in a few weeks so I’ll let you know which I end up liking more.,RandomAccount0799,2025-07-31 05:34:30,2,dataengineering,t3_1mdiajk,False,
n65bafz,Data analyst seems like a dead-end job. You're not as technical as a data engineer and you don't have the math / statistics of a real data scientist. Both of those roles are readily positioned to take over data analyst responsibilities if you want it.,forserial,2025-07-31 11:37:07,2,dataengineering,t3_1mdiajk,False,
n65mmh4,Please go with DE as I’m already a DA and struggling to switch a job in the same profile hence I’m switching my profile to DE so that the options will be a bit wider for me. Moreover after DE you can deep dive into Software engineering.,explorer_0627,2025-07-31 12:47:22,1,dataengineering,t3_1mdiajk,False,
n661b2s,"I just used a coding agent to code a pipeline start to finish and it was pretty damn good. I walked it through each thing I wanted vs just asking for it to do large pieces by itself. That said, I already knew how to do this. I could correct it when it was wrong or sub optimal. But it made it a lot easier. I’m pretty bullish on experienced and knowledgeable engineers making a lot of use of AI. I wouldn’t trust it to do any foundational work/spec creation that drives other projects unless output was verifiable. So I’d rather organize the metadata myself than have an AI guess at semantic meaning, for example. Cuz people will use it wrong without much question. A pipeline on the other hand can be verified - input and output.",Firm_Bit,2025-07-31 14:05:00,13,dataengineering,t3_1me284l,False,
n67wpad,"I've found it to be really helpful, but it works best with tools that have a good CLI, run time modularity and a solid schema. If you have those three things your AI can safely build and test. Wrote an article last week about coding up a dlt, duckdb & visivo end to end data pipeline that created coldplay dashboards from the spotify api. Started a blank repo and got a pretty good result in one context window! If you're interested - [https://visivo.io/blog/dlt-claude-visivo](https://visivo.io/blog/dlt-claude-visivo)",jared_jesionek,2025-07-31 19:20:13,5,dataengineering,t3_1me284l,False,
n68qpe7,"I have a super simple pipeline that is fully agentic. The data scrape, cleaning, db queries, for reporting transforms, and email generation. Process: scrape > transform > select interesting for highlight > surface data + additional fields from other tables > create html dashboard and email it off to stakeholders. It’s more of a test than anything but the model decides everything. Even what the email should look like (which has been interesting to say the least).",jimtoberfest,2025-07-31 21:45:06,3,dataengineering,t3_1me284l,False,
n67e2hp,"A few things we’re seeing work well right now:* **Agents for metadata labeling**: Like you're doing—using tools like LangChain + LLMs to auto-suggest docs for new tables, columns, or metrics based on naming and past examples. It’s not perfect, but great for first drafts.* **Error triage and alert summaries**: Agents scan logs and Slack alerts, flag likely causes, and group repeated failures so your team doesn’t waste time digging.* **Workflow bots**: Think of agents like wrappers around dbt jobs or Airflow tasks. You can “ask” them things like, “why did this job fail?” and they’ll trace logs and give a quick readout.But yeah—data access and vendor lock-in are real concerns. What helps:* Keep critical logic in your pipeline code, not in the agent* Let the agent suggest, but not act unless a human approves* Keep agent inputs small (e.g., just metadata or logs, not full datasets)Curious what tooling you’re testing?",DataCamp,2025-07-31 17:52:23,5,dataengineering,t3_1me284l,False,
n66ggv8,"Was given a new project similar in design to an existing one.Wrote a long detailed prompt, asking ai to follow the same design as the previous one with all logic and requirements bullet pointed.It gave the whole repo with all files and everything.after that followed with some more back and forth prompts to tailor it to my needs.This would have take atleast 5x more time if done it myself.",Significant-Carob897,2025-07-31 15:17:09,2,dataengineering,t3_1me284l,False,
n665ql2,Do you have thoughts on the best way to learn how do this from scratch ?,notmarc1,2025-07-31 14:26:39,2,dataengineering,t1_n661b2s,False,
n68yvaz,"Gotcha. In this case, with a good level of human supervision I see this working. The example I mentioned was because I saw a demo the other day that was full-agentic, having full access to the data platform that made my hair stand on how much governance the agent/MCP had over it.If you mind saying, what tech stack did you use? Cursor + dbt or something else entirely?",Different-Umpire-943,2025-07-31 22:26:54,1,dataengineering,t1_n661b2s,True,
n667tij,Why do people want to deny this fact? Pipelines are an ideal candidate for AI automation. Hell you could have users manually clean data and AI can learn and build pipelines from it. I need more experience with AI but I'm surprised it's not used heavily in data engineering. I think security is one problem but as soon as an AI can sit inside your database everything will change,SoggyGrayDuck,2025-07-31 14:36:38,-8,dataengineering,t1_n661b2s,False,
n67y8xm,Hmm cool. How did you deploy it?,Brave_Edge_4578,2025-07-31 19:27:43,1,dataengineering,t1_n67wpad,False,
n5644c9,"Here's a couple of questions/thoughts I have for you that I've been asking myself as well (looking to modernize a bit too)* I assume loads are by customer and inserted into their own datasets* How many people are on your team?* Who will be in charge of maitaining the stack and making sure it runs as expected?* Depending on your workload, why PySpark over SQL? That's one more layer of complexity that may or may not be required.* You may be able to batch often enough to be real-time enough for the business without streaming (they need to define real-time)* We're looking at Prefect more than Airflow, especially the cloud version because it's fairly cheap for our needs and having the local worker is easy to setup. We are not planning on using PySpark though, probably sqlMesh or something in thata category.",meatmick,2025-07-25 22:32:32,11,dataengineering,t3_1m9c42u,False,
n58nfbe,"You want to simplify things, not make them more complex. You have too many unnecessary parts and tools. Keep it as simple as possible, don't need airflow and pyspark for this amount of data.",Demistr,2025-07-26 09:50:47,9,dataengineering,t3_1m9c42u,False,
n57zy78,"You should have a look to duckdb for your pipelines it can attach a pg database and it's very fast, easy and efficient.",GeneralFlight2313,2025-07-26 06:03:59,5,dataengineering,t3_1m9c42u,False,
n5eoomx,"Disclaimer: co-founder of [Bruin](https://getbruin.com) here.The setup you defined does sound fun, but also very complex. Not sure how big the team is but it sounds like a lot of stuff to glue together and maintain.I have quite a bit of experience working with multi-tenant data architecture, and almost always they benefitted significantly from shared larger data warehouses rather than per-customer instance, so I suggest centralizing. Down the line some new usecases will require cross-client insights, some new developments will benefit all the customers at once, and you'll thank yourself.In terms of the architecture, it sounds like SQL-only stuff might not fit the bill here. I would suggest:- land the data in your dwh somehow- run transformations in SQL as much as possible, go with python where needed.- stay off of Spark, I don't see any benefit here for you, it is a complicated piece of software that is not even modern at this point.For individual pieces, you can either go bit by bit, e.g. one tool for ingestion, another for transformation, orchestration, etc. There are quite a lot of good alternatives, e.g. Fivetran + dbt + airflow. I suggest taking a look at [ingestr](https://github.com/bruin-data/ingestr) for ingestion stuff.[Bruin CLI](https://github.com/bruin-data/bruin) could also fit the bill here since it is like dbt, but does ingestion, transformation with SQL and Python, orchestration, quality, and governance. It is open-source, you can run it anywhere you'd like.Hit me up if you'd like to chat, sounds like an interesting problem you are tackling. Good luck!",karakanb,2025-07-27 09:47:38,3,dataengineering,t3_1m9c42u,False,
n56qbz4,"I forgot to ask, is there a benefit to merging all the data in a single tenant? Will anyone be leveraging the combined data? If you need to rework everything to a new standard, make sure current dashboards keep working, as well as migrate to a completely new toolkit, it sounds like 3 people for the job will be tough.I think it may be short-sighted on my part, but our team is 2 engineers, with one being a junior. I think I'd migrate to new tools first, and then I'd look into reworking the data in a unified dataset if the need arises.",meatmick,2025-07-26 00:40:15,2,dataengineering,t3_1m9c42u,False,
n57hfiq,"You might want to check outhttps://docs.stackable.tech/home/stable/demos/jupyterhub-keycloak/ For scheduling, Airflow could be added easily.",No_Dragonfruit_2357,2025-07-26 03:35:49,2,dataengineering,t3_1m9c42u,False,
n5857ge,Why are you skeptical about dbt?,t9h3__,2025-07-26 06:52:19,2,dataengineering,t3_1m9c42u,False,
n58fvar,"I don't have an answer (we're in a similar situation so I'm reading this sub) but I'm curious about your current setup:What's the storage type of the star-schema tables on your postgres dwhs? columnar storage or row-wise?If it's row-wise, how's the performance on the biggest databases? Did you need to add lots of indexes or not?",digEmAll,2025-07-26 08:35:22,2,dataengineering,t3_1m9c42u,False,
n58x3it,"You might want to check out Estuary Flow. It supports CDC from Postgres and other sources, works for both batch and streaming, and is self-hostable. It could be a good fit for your stack if you're trying to stay flexible and open-source.",Which_Roof5176,2025-07-26 11:17:47,2,dataengineering,t3_1m9c42u,False,
n5ceed9,"Maybe i jumped over it, but why didnt you consider Snowflake, BigQuery or Databricks?If you do it know in postgres and Talend I am somewhat confident that the modern SQL dialects of the major 3 cloud providers will be able to deal with it too.Dbt is generally great to run tests with minimal effort and allow members to develop and prototype outside the prod environment. As others mentioned, version control included. (And you don't need to pay with dbt-core)If latency for downstream use might become an issue maybe duckdb can fix that.For ClickHouse I have heard it the other way around: quick dashboards but slow pipelines and non trivial optimizations.",t9h3__,2025-07-26 23:08:06,2,dataengineering,t3_1m9c42u,False,
n5p6l0o,Doesn't Avro already fit this bill?,phonomir,2025-07-28 23:21:12,41,dataengineering,t3_1mbrby7,False,
n5peyxj,"Most databases are row lookup….SQL, mongo, Cassandra etc are all essentially row wise.Columnar is popular in DE/DA as most of the queries are calculations over large number of rows in a given set of columns.Typically, when you want to do analytics from your database, common wisdom is to query a duplicate of the database or have a normalized copy of it in the analytics environment.I think a row wise format sounds nice in theory, but can’t see the value in practicality. Plus intergrating with engines and the optimizations they have for columnar wouldn’t scale nicely on large data sets",Oct8-Danger,2025-07-29 00:07:23,16,dataengineering,t3_1mbrby7,False,
n5p78jd,SQLite?,phonyfakeorreal,2025-07-28 23:24:45,8,dataengineering,t3_1mbrby7,False,
n5pxbpg,CSV is the mvp on open data format designed for row-oriented storage. And I'm not kidding.,Misanthropic905,2025-07-29 01:52:59,16,dataengineering,t3_1mbrby7,False,
n5o9t4w,Microsoft just announced https://github.com/microsoft/amudai and https://github.com/vortex-data/vortex is gaining traction. Time is likely better spent on integrating these formats into existing tools/infrastructure,ReporterNervous6822,2025-07-28 20:32:43,9,dataengineering,t3_1mbrby7,False,
n5ptv1s,"What would be the advantage compared to using the open-source, widely used and integrated open-source row-oriented* databases like PostgreSQL or SQLite?",sib_n,2025-07-29 01:32:58,3,dataengineering,t3_1mbrby7,False,
n5t9jg0,"we’ve optimized so much around columnar formats for analytics, but row-oriented workloads still dominate in OLTP and mixed-use cases. An open, efficient row format could open the door to more interoperability across engines like Postgres, MySQL, etc.That said, adoption is the real hurdle vendors would need deep incentives to support it natively. Maybe a middle ground could be Iceberg or similar table formats evolving to abstract both row and column storage under a unified access layer.",eb0373284,2025-07-29 15:52:53,3,dataengineering,t3_1mbrby7,False,
n5rty2a,"If you are looking for simple, text-based options at smaller scale or lower performance needs, NL-JSON is a simple option as well. Not space efficient but useful for complex data models (eg nested objects, arrays) in ways where CSV isn’t great. If performance or space efficiency needs are greater, agree w Avro.",nagoo,2025-07-29 11:10:03,1,dataengineering,t3_1mbrby7,False,
n5s3tzg,But sir you can just query JSON lol,cranberry19,2025-07-29 12:18:33,1,dataengineering,t3_1mbrby7,False,
n5psjhd,"I was going to say, parquet is columnar. Avro is rowstore",wytesmurf,2025-07-29 01:25:15,17,dataengineering,t1_n5p6l0o,False,
n5kkr9v,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 07:39:49,1,dataengineering,t3_1mb9y5s,False,moderator
n5kvzo8,"There's plenty of publicly available datasets. Think up a project using them that ends in a nice Power BI report on your own website.Build the project. You'll learn a lot.Drop the URL into your resume along with a couple of sentences about it. It'll then be easy and interesting for prospective employers to discuss it with you. If you just post a link to GitHub, then that's a bit like homework.",salinungatha,2025-07-28 09:29:52,2,dataengineering,t3_1mb9y5s,False,
n5kzki6,With your existing power bi skills this should not be a problem. ask yourself about the non aggregated source of the data used in building the reports.Then once that's figured out ask yourself for corporate dashboard the business process that produced that data. It's the business process that will then scope your data engineering learning project.,xahkz,2025-07-28 10:03:16,2,dataengineering,t3_1mb9y5s,False,
n5xhq81,"A project. Preferably a retail dataset, or something easy to understand in day to day life but would get you in data modeling. Enterprise DNA is good.",PointRealistic456,2025-07-30 05:33:23,1,dataengineering,t3_1mb9y5s,False,
n5rtbaa,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-29 11:05:08,1,dataengineering,t3_1mc8gpz,False,moderator
n5uu14f,Obligatory: [https://martinfowler.com/bliki/TwoHardThings.html](https://martinfowler.com/bliki/TwoHardThings.html),dbrownems,2025-07-29 20:14:39,7,dataengineering,t3_1mc8gpz,False,
n5xsizd,"Very general structure I usually follow:1. Pattern: `[qualifier1]..._[qualifierN]_[plural noun of what a row represents]`2. Lower case and words separated by underscores, it is the most compatible with SQL standards.3. Common English language pre-noun qualifier ordering: 1. Qualifiers are appended to the left, so they read from precise to general (or in the order of processing). 2. Adjectives ordering should follow the English grammar rule. https://en.wikipedia.org/wiki/Adjective#Order- Good: `monthly_amazon_payments`: - a row represents monthly aggregated properties of Amazon payments: revenue sum, unique customers count etc. - processing order: source `payments` table > Amazon only filtering > monthly aggregation- Bad: `monthly_payments_amazon` (a row does not represent an Amazon)If you need to group tables together so it is more readable for a specific use case, or you need to restrict access, put them in the same schema/database. For example, all the gold tables for the financial analysts go in the schema `finance`.This is not a dogma, maybe your context needs to have a specific strongly discriminating qualifier first which could go against the rule 3. It depends on the use case, give us some anonymized examples.",sib_n,2025-07-30 07:11:41,3,dataengineering,t3_1mc8gpz,False,
n5xtmp0,"Using API as an example, my workplace typically uses something like [system].[endpoint]. For example, Salesforce.Account or Salesforce.Product_Order for bronze/silver layers.",leakyfaucet49,2025-07-30 07:22:16,2,dataengineering,t3_1mc8gpz,False,
n66srib,`src_source_subsource__type_or_any_other_information`this was i think recommended by dbt guys and it worked a lot of us.e.g.`src_excel_customers__sales``src_shopify_orders__details`,Significant-Carob897,2025-07-31 16:14:30,2,dataengineering,t3_1mc8gpz,False,
n5woni0,"Just start with the source as the prefix followed by the dataset category such as primary or adhoc. Then slap a name on the data. For primary data coming from operational data stores, it would be the table name. For more adhoc data, it can be the query name analysis purpose. You can further group these by domains like sales, marketing, inventory, etc to help describe the data. Then as you move up from raw to more production deliverables, the naming should start collapsing into something closer to the domain like fact_sales for your Sales domain.Examples* rtmdba01_inventory_primary_productCageories* rtmdba01_inventory_primary_productFlags* adwords_marketing_report_campignNames* googleAnalytics_marketing_adhoc_formSignupsEtc",Tehfamine,2025-07-30 02:08:48,2,dataengineering,t3_1mc8gpz,False,
n5vfaog,Can you give examples of things in the gold layer that are neither facts nor dimensions? That smells like a modelling problem to me. There is nothing else in a dimensional modelling context.,sjcuthbertson,2025-07-29 21:56:41,-1,dataengineering,t3_1mc8gpz,False,
n640m70,"""There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors.""",siddartha08,2025-07-31 04:49:32,3,dataengineering,t1_n5uu14f,False,
n5uvclp,Haha true! So how do you deal with this?,Quantumizera,2025-07-29 20:20:48,1,dataengineering,t1_n5uu14f,True,
n5xuxlg,"Generally good recommendations, but instead of \`monthly\_amazon\_payments\`, I'd go with \`amazon\_payments\_monthly\`. It sounds more hierarchical, and makes it easier to find tables. So \[source\]\_\[dataset\]\_\[detail/aggregation\]",PolicyDecent,2025-07-30 07:34:53,2,dataengineering,t1_n5xsizd,False,
n64m0wc,"Depends on your team size and data size I would say.The “right” approach is to have data loaded to s3 before redshift. But most company won’t ever do anything with this. But it allow your to grow, avoid potential vendor locking, reduce DW cost by doing preaggregation yourself before loading it in redshift, etc, etc. But all of this requires a lot of effort? Which might be slowing you down to achieving you company goals. If you have a big enough data team it make sense, if you are pretty small the loading directly to redshift is very appealing.You’ll always have the possibility to offload the data from redshift to s3 in the futur if that’s needed but you won’t shoot yourself in the foot and not deliver anything for the first 6 months.In terms of pricing, you are analyzing storage cost which shouldn’t be a factor imo. Yes storage is way cheaper in s3. But the size of data you have in SAP isn’t probably not that big. You need to define that first. For example I don’t see a world where you have a terabyte of data to load from SAP to redshift. A terabyte of text files is a LOT of data for things that are entered manually or mostly in SAP. Now let’s say you have a terabyte of data because your company has a lot there (which you probably don’t) then having the storage cost in redshift would be something are 25$ per month for the hole data set. Our conversation here cost more than that. Depending on type of s3 storage you might save a lot but storage is negligible for small datasets.The real DW cost is compute, and that needs to be considered. I know the business wants SAP and ALL other sources, but you should chunk this a lot so you endup delivering things in small chunks. Everyone wants everything yesterday but that’s not how things work. Start with SAP but not all, the most relevant concepts because there’s probably a lot of tables there to sync, clean, transform to make the data usable. The goal of you DW is to make data usable but also to get a single source of truth. If you just load raw data in and let business build dashboard on top of the raw data I can tell you this is going to be a mess in 2 months. Start small, get the table requirements that allow you to clean the data, make the data available, then repeat.To go back on pricing, if for example you think that you have A LOT of data multiple terabytes. And that the storage cost will be around 1000$ a month because you have 40 terabytes to load and that can be an issue, then I can assure you, you won’t like the Fivetran Bill. If you need to think about the storage cost, then you need to rearchitect this because Fivetran is not the option you are looking for. It’s very good to load data quickly. It gets insanely expensive when you start to really use it. Most companies won’t have issue with fivetran cost because most company don’t have a lot of data.Good luck",Commercial_Dig2401,2025-07-31 07:58:28,2,dataengineering,t3_1mdsm5n,False,
n64noei,"I'm gonna share with you what I have here and see if it works to you:Go with a lakewarehouse solution, so stage all data in S3 first, since:- cost is lower- you can plug this data in any other tool besides redshift, - can also storage as hot, cold, glacier later to save costs- if data grows quick in some point, you save cost not storaging everything in redshift- S3 also allows organization here with different business areas in folders- you may change a daily batch CDC to a realtime CDC with Kafka/stream processor if business reqs change- store it as Delta/iceberg/Hundi. See correct config to save processing and make it write faster, as no retention period. You may also apply clustering rules here.Then I would ask, do you really need redshift? I know it exists and basically how it works but never worked since I mostly only move data from staging area to silver and gold areas in S3, using again Delta/iceberg, leaving data with dimensional modeling as needed by business.I generally use Databricks/snowflake to process it,but so far I know, you can also use Glue for it.Delta/iceberg have acid properties/time travel/and others that can be selected and designed as your need, replicating redshift pros.If it is enough, you totally save redshift costs, and got a simpler arch in only one place. If you really need redshift you send only totally needed tables there. And allow silver/gold tables being connected to other tools in future.I am totally opened to comments here and up to suggestions if it works or not.",Vreichvras,2025-07-31 08:14:00,2,dataengineering,t3_1mdsm5n,False,
n645gnx,"Im still fairly new to the field, so while you wait on responses from people with more knowledge and experience, my first and main question is what is current state of your data and what is the predicted state of your data. If you currently only require a structured warehouse that doesn’t require a large quantity of tables with potentially a large amount of rows and/or columns and you don’t foresee that changing anytime soon, then maybe go the easier route directly into Redshift. But let’s say in the next 3 years the data requirements explode and you need to house triple the size of data your currently hold or start to introduce unstructured data types, then building out the Glue pipelines from S3 to Redshift now will build a solid foundation for the future.Again, take my response with a grain of salt as this is coming from a more junior perspective.",RandomAccount0799,2025-07-31 05:28:49,1,dataengineering,t3_1mdsm5n,False,
n645mhr,"I think you should go with the s3 approach as the data grows there you would need lot of transformations and you don’t need all the data in redshift so you can be flexible with that so in long run s3+ redshift is the way to go considering scalability, flexibility and costing",Tiny-Secretary-6054,2025-07-31 05:30:10,1,dataengineering,t3_1mdsm5n,False,
n65h178,"How is your team's staffing and skill set? How is your team's budget? How valuable is your data to your end users? I came from finance, and IT people really struggle with big picture and materiality at times. Not saying you do, but I see it a lot. In my experience, start with the most maintainable approach. Be transparent about costs, but still go with it. More maintainable means you can add more features, fix breakages faster, and have fewer breakages. Your end users would vastly prefer that you don't have outages on critical delivery days, your boss will prefer that you get this finished and off your plate to work on the next thing, your successors will prefer an easier onboarding, and you will look better throughout. Also, compute is often more expensive than storage. If you're only focusing on storage costs, you may be missing the bigger expense.",BoringGuy0108,2025-07-31 12:14:18,1,dataengineering,t3_1mdsm5n,False,
n65qsg3,"Hey!Thanks so much for the input.So SAP tables are a LOT. But for now, we use only 50-60 tables, it’s just that we don’t know what tables will we use exactly in the future based on the use cases. For now the size of the data is very less like max 50gb worth 10 years of data.For this much data, direct redshift would be ideal. But considering the future, if data size increases, it will be a problem. Although data honestly wouldn’t spike much. Coming to your point where if redshift is even needed: yes I feel so because we currently have tableau connected directly to sap where the devs created views which consume a lot of compute making dashboards slow. If we use s3 tables, we will have to use Athena for querying and connect that to tableau, and we have a lot of complex queries/views built on top. I don’t think it’s a good solution to use Athena as our query engine.And I am the only DE here so it will be difficult for me to write code for every table and it’s upsert logic if it lands in s3 first. And it’s really too much dependency on me for every new table. Fivetran makes it easy to load data and also handles auto schema changes. But again, it’s expensive.Hence I am at cross roads.",Bolt0029,2025-07-31 13:10:38,2,dataengineering,t1_n64noei,True,
n666tam,"So, it is a migration, not building from scratch. I would go with other comment bellow, start migrating what is query ready to redshift and let users query there.As far as it works, identify used tables in SAP and start to write them on S3, and later make it the intermediate path between sap and redshift. Do it with POCs then check consistency, performance, cost, and iterate.",Vreichvras,2025-07-31 14:31:48,1,dataengineering,t1_n65qsg3,False,
n5ule1r,No one really knows the future and every career carries risks. So you have to make a decision and go with that.,nonamenomonet,2025-07-29 19:33:33,7,dataengineering,t3_1mckr0s,False,
n5unyyv,"If you like both, stick with full stack for now.Software engineers are always needed. You can build the actual product, which keeps the company running. Data engineers are super useful but usually come in later, when there’s enough data to justify the role. Smaller companies might not even have one.Also, as a dev you can always move into data later. Going the other way is harder.That said, if the data role is solid (e.g. real PySpark work, solid infra, not just moving CSVs to S3), and you want to be in that space long term, it’s not a bad move.But full stack gives you more flexibility and job security early on. Just my two cents.PS: I'm a data engineer, so no hate",Ahmouu,2025-07-29 19:45:55,8,dataengineering,t3_1mckr0s,False,
n5umcey,"Nothing is safe, go with where you excel most.",ProfessorNoPuede,2025-07-29 19:38:09,2,dataengineering,t3_1mckr0s,False,
n5wgrz0,"+1 to this. BE opens up a wider range of jobs (which seems to be a factor towards safety)PS: I am also a DE, so no hate.",joseph_machado,2025-07-30 01:22:57,1,dataengineering,t1_n5unyyv,False,
n5x6ff0,I agree with this take. I’m at a smaller ~40 person startup and I was their first data engineer hire. But they have 5 other software engineers building the actual product in Scala/Java.,I_Blame_DevOps,2025-07-30 04:04:12,1,dataengineering,t1_n5unyyv,False,
n5xei2y,"Thanks for the response, I have two queries1) is the work of a DE repetitive/monotonous compared to a full stack, or do you find each day different ( I know it varies from one team to another, but just in general am asking )2) One main fear in full stack is the impact AI has on the work ( AI may be a hype term now ), but I feel demand may reduce due to this, but DE is needed for AI to grow and may see increase in demandWhat's your take on this",Thin-Pomegranate-98,2025-07-30 05:06:01,1,dataengineering,t1_n5unyyv,True,
n5ws68d,Excel Pun intended?,boss-mannn,2025-07-30 02:29:56,1,dataengineering,t1_n5umcey,False,
n5xoalx,"I think the potential impact of AI on DE and backend software engineering is similar, well-defined testable repetitive stuff may get automated. I think some DE may be more exposed to having to communicate with business and stakeholders. Human communication should be harder to replace with AI than a well-defined testable coding task. So, I would look for positions that have this component if possible.",sib_n,2025-07-30 06:32:14,2,dataengineering,t1_n5xei2y,False,
n5xo5yt,"DE isn’t boring if you’re actually building stuff. You’re modeling warehouses, designing schemas, choosing tools, fixing broken data, dealing with scale, permissions, costs, putting out fires and so much more. There are tons of tools and approaches out there, and every company does things a bit differently, so you’re always figuring things out. It only gets repetitive if the setup is already done and you’re just maintaining pipelines (that's the only thing that might get boring after a certain time)DE is important for AI, sure, but unless the company is seriously building AI products, that won’t matter much. Most just want dashboards or plug GPT into a chatbot. AI is nowhere close to replacing good engineers. It can speed up parts of the work, but it’s not making the hard decisions or owning the system when things break. So don’t pick based on hype. Pick based on what kind of work you actually want to do.",Ahmouu,2025-07-30 06:31:02,1,dataengineering,t1_n5xei2y,False,
n5lyo6u,It will only get worst since there are not gatekeepers for AI.,69odysseus,2025-07-28 13:59:26,3,dataengineering,t3_1mbgri9,False,
n5m47s7,123456? That’s amazing I got the same combination on my luggage!,JimmyTango,2025-07-28 14:27:25,2,dataengineering,t3_1mbgri9,False,
n52f74g,"[dbt Core](https://github.com/dbt-labs/dbt-core) is the original open source project, written in Python.[dbt Fusion](https://github.com/dbt-labs/dbt-fusion) is an interface-compatible, optimized source-available project. It's rewritten in Rust. dbt Labs isn't super crisp on the branding, so it's hard to tell if dbt Fusion is ""just"" the engine, or if it's the engine + features to be released in dbt Cloud.dbt Cloud is a cluster of offerings around dbt Core / dbt Fusion. For years, the IDE and orchestration were the major features, but they've been accumulating features via acquisitions: Semantic Layer, Catalog, and dbt Mesh being the big ones.\*dbt Labs isn't entirely clear about what all falls under the dbt Fusion brand, but the engine is available under the",onestupidquestion,2025-07-25 11:19:40,14,dataengineering,t3_1m8v11u,False,
n52n8v3,"dbt Core is the free, open-source version you run locally (like in VS Code). dbt Cloud is the hosted platform with a web IDE, scheduling, CI/CD, and advanced features. It comes in tiers: Developer (free), Team, Enterprise, and Enterprise+. The Semantic Layer (for tools like Power BI) is only in the Enterprise tier. dbt Fusion is a new engine combining SQL and Python, available only on dbt Cloud for now. So yes, dbt Cloud is the full premium product, and the tiers decide which features you get.",eb0373284,2025-07-25 12:13:56,3,dataengineering,t3_1m8v11u,False,
n54upo5,"Hey, just wanted to give you a heads up about dbt pricing since we went through this recently.To answer your questions: dbt Cloud is the whole premium product (not just the web IDE). Developer/Team/Enterprise are all tiers within dbt Cloud, and yes, the semantic layer for PowerBI is Cloud-only. Fusion is a feature within the Cloud product.Here's the thing though: we were on the Teams plan and everything was fine until we hit 8+ people. Then dbt Sales basically forced us into Enterprise tier. The initial quote? $300/seat/month on a 3-year contract. Even after heavy negotiation we only got it down to $220/seat/month.For context, that's $26,400/year for 10 people, which feels pretty steep for what's essentially a task scheduler running on top of open-source dbt.If you're just getting started with the engineering side, I'd honestly suggest sticking with dbt Core + your own orchestration (Airflow, GitHub Actions, whatever). The semantic layer is nice, but probably not worth $20-30k/year for a small team. You could build your own metrics layer or look at alternatives for way less.Just something to keep in mind as your team grows. The jump from Teams to Enterprise pricing is brutal.",sleeper_must_awaken,2025-07-25 18:43:47,3,dataengineering,t3_1m8v11u,False,
n5lsell,"> I find myself wishing that I could write all my macros in pythonSame, and [dbt Labs have outright said that this is something they won't support](https://github.com/dbt-labs/dbt-core/pull/5274#issuecomment-1132772028) :loudly_crying_face:If you're sticking to dbt core (not cloud or fusion), I've released a package that allows you to use your own Python code in Jinja:https://github.com/billwallis/dbt-pyIt's pip installable and configured in the pyproject.toml file (currently). ```pip install dbt-py-wrap```The annoying bit is that you need to use the dbt-py command instead of dbt, so it doesn't play nicely with a lot of other external tools, but it's been working well enough in isolation for me :person_shrugging:",Bilbottom,2025-07-28 13:26:02,1,dataengineering,t3_1m8v11u,False,
n52uwx5,"Core is the legacy all python library that was OSS and is no longer developed by the company dbt. They have released a new product with a rust based engine called fusion that has a modified license to avoid other companies leveraging and reselling their work. There is supposed to be both a free cli version (registration required but no cost) and the premium version through the cloud or premium cli. Yes semantic models are gated behind the premium license. They also are sort of limited in that you can't build a full model with multiple tables, each semantic model is 1:1 with a dbt model, which is one table or view. If you use an obt data structure then you are good. If you have a star schema or something like that that you want to represent semantically then it doesn't work. We wanted to to do a PBI on top of dbt thing too, but ultimately just built a big model in PBI because it did what we needed it to. There are a few other options out there right now like Cube and Snowflake just released a few options if you use that platform. There isn't Snowflake to PBI integration yet though.[https://www.getdbt.com/blog/new-code-new-license-understanding-the-new-license-for-the-dbt-fusion-engine](https://www.getdbt.com/blog/new-code-new-license-understanding-the-new-license-for-the-dbt-fusion-engine)",Gators1992,2025-07-25 12:59:22,-1,dataengineering,t3_1m8v11u,False,
n52mvht,"In addition, dbt-fusion is their “new” product. They bought sdf https://docs.sdf.com/introduction/welcome and took their engine which is faster and give you error without the need to go to actually query the destination so it’s way faster.It’s not clear what they planned to do with DBT-core as it’s not the same product as fusion. But since they announced fusion they still work on core.Also their DBT-fusion licensing is quite complexe. It’s like you can use it for like an open source software but not too much. Not sure the community really likes what they did with this.We will see how they manage this but currently they have those 3 products (core, fusion, cloud) which they support.Their cloud thing is good to have some extra feature that they didn’t include in core like DBT mesh and catalog, but it’s quite bad for orchestration, so you pay for something you will try to orchestrate another way…. Which sucksHope that doesn’t confuse you more than you were already",Commercial_Dig2401,2025-07-25 12:11:35,5,dataengineering,t1_n52f74g,False,
n53xult,"Ok got it thank you, I didn't see a clear ""dbt Core / dbt Cloud"" split on their website so I was scratching my head.",8_Tailed_Koala,2025-07-25 16:10:03,1,dataengineering,t1_n52n8v3,True,
n53xz46,Core is no longer developed??? You mean I get excited by all those dbt linkdin posts for nothing...,8_Tailed_Koala,2025-07-25 16:10:38,2,dataengineering,t1_n52uwx5,True,
n558lok,Dbt isn't actively developing it but said something about maintenance.  I would guess someone would fork it and contine development eventually.  Other free options are stick with dbt and use their free version with the limited license or see if SQLMesh works for you.LinkedIn is a cesspit of lies that nobody should get excited about.,Gators1992,2025-07-25 19:52:14,1,dataengineering,t1_n53xz46,False,
n59y8u6,"The comment above is false. Core is still actively developed, they published a roadmap. Fusion, a new separate engine and code base from core, is free to use and source available for an unlimited number of seats. They only applied a limit to their new VS Code extension, which is only compatible with Fusion.",3dscholar,2025-07-26 15:10:13,0,dataengineering,t1_n53xz46,False,
n5unaik,"Two men enter, one man leavesHave them interview eachother until one determines the others a nincompoop.",SaintTimothy,2025-07-29 19:42:42,61,dataengineering,t3_1mcl3tn,False,
n5umclp,I would be honest and tell your boss that you are not qualified to properly assess a data engineer.,Ashamed_Wheel6930,2025-07-29 19:38:10,45,dataengineering,t3_1mcl3tn,False,
n5uvb07,"Just do sql FizzBuzz.Start with, can they actually query a table and then move up from there. Don’t overthink it.",pragmatica,2025-07-29 20:20:36,8,dataengineering,t3_1mcl3tn,False,
n5upeth,I think you can come up with something.  I believe in you dogg,PresentationSome2427,2025-07-29 19:52:46,8,dataengineering,t3_1mcl3tn,False,
n5x4p9y,"use llms.  copy paste the text you posted here, in the prompt.  use chatgpt, kimik2, deepseek, qwen, claude, gemini, then  summarize the output, it is a good way to get introduced to new topics. mention your limitations to your boss but be prepared.",oioi_aava,2025-07-30 03:52:03,3,dataengineering,t3_1mcl3tn,False,
n5xv6sn,Ask some easy/medium questions and go by your gut feeling,Kachi68,2025-07-30 07:37:26,2,dataengineering,t3_1mcl3tn,False,
n627pe4,"As multiple pointed out, you can test their SQL skills by having them do complex joins, window functions, filters, etc. Since you know Python you can also test their ability to manipulate data utilizing numpy and pandas.Piggy backing off of others again, you can also ask ChatGPT to create a list of questions about Azure with a list of appropriate answers.",RandomAccount0799,2025-07-30 22:17:09,2,dataengineering,t3_1mcl3tn,False,
n5ulytf,"I don't mean to be patronizing, but why not ask an LLM to generate questions to start things off?",git0ffmylawnm8,2025-07-29 19:36:21,12,dataengineering,t3_1mcl3tn,False,
n5v6omc,"If all the suggestions fail, ask them simple questions. If they come up with overly complicated answers, they’re BSing and don’t know what they’re doing. They’re trying to sound smart.",mycrappycomments,2025-07-29 21:13:48,1,dataengineering,t3_1mcl3tn,False,
n5zpaeo,"for tech assessment i suggest looking into leetcode medium sql or python pandas, if you're familiar with cloud but not azure, maybe ask them technical concepts on the implementation, system design, or services they would use in a specific scenario",hardrock2474,2025-07-30 15:10:55,1,dataengineering,t3_1mcl3tn,False,
n51vt60,I think Databricks has pretty good guidelines on this somewhere. Having one metastore with both kinds of catalogs makes it possible for you to have a dev workspace in which you gran only read-only access to prod tables so you can run tests on them without running the risk of altering production data,SSttrruupppp11,2025-07-25 08:29:15,12,dataengineering,t3_1m8tdl6,False,
n52ctmb,"It's one metastore per region, so if you wanted to go with 2 metastore it would need to be in two different cloud regions.dev and prod catalog with different workspaces is what people usually do, you can remove the permissions or even not bind a catalog to a workspace, so you can isolate the environments pretty easy",msdsc2,2025-07-25 11:01:52,3,dataengineering,t3_1m8tdl6,False,
n52i8li,You can have one metastore and multiple workspaces. Create prod and dev workspaces and then then bind individual catalogs within the metastore to each workspace based on which workspace that data belongs to.https://docs.databricks.com/gcp/en/catalogs/binding,jesreson,2025-07-25 11:41:26,4,dataengineering,t3_1m8tdl6,False,
n52mzg8,"The safer and more future-proof approach is one metastore per environment (e.g., dev, staging, prod). It gives you clear isolation, better access control, and avoids the risk of accidental writes to prod from a dev job. While managing multiple metastores might seem like extra overhead, it aligns better with CI/CD best practices and Unity Catalog’s long-term roadmap.",eb0373284,2025-07-25 12:12:17,-1,dataengineering,t3_1m8tdl6,False,
n520jxe,What about the security aspect of exposing prod data in a lower environment?,elotrovert,2025-07-25 09:14:59,2,dataengineering,t1_n51vt60,False,
n5206yg,This is the understanding I have from the documentation and reading around but I wonder how it plays out as the environment scales up. I imagine keeping everything in one region(and so in one metastore) is good from a security and ingress/egress perspective BUT from a data code perspective it feels odd (wrong) that I need to parameterise my catalog/database name in my sql/python code. Maybe it’s just my mindset which comes from having identical databases across servers and only having to parameterise names at cicd deployment time.,dataferrett,2025-07-25 09:11:32,1,dataengineering,t1_n51vt60,True,
n5f1ccw,"Or multiple accounts, but they don't yet have centralized billing.",Leading-Inspector544,2025-07-27 11:41:45,1,dataengineering,t1_n52ctmb,False,
n523seq,"How is that a security risk?Databricks offers many protections for access to sensitive data, of course those should be applied in both dev and prd workspaces.",SSttrruupppp11,2025-07-25 09:45:37,4,dataengineering,t1_n520jxe,False,
n523nxt,I'd imagines the test user would receive a cleaned up version of the data due to stuff like row and column level masking/flitering.,psychuil,2025-07-25 09:44:30,2,dataengineering,t1_n520jxe,False,
n52d8hc,"Yeah you will need to use parameters, databricks asset bundles can help with this, but even so sometimes you will need to put catalog parameters in the code",msdsc2,2025-07-25 11:05:01,4,dataengineering,t1_n5206yg,False,
n558la8,I know you guys hate me. But these guys are worse,eczachly,2025-07-25 19:52:11,2,dataengineering,t3_1m8rhbs,False,
n58bbo5,What is this DE academy?,sergeant14016,2025-07-26 07:50:34,1,dataengineering,t3_1m8rhbs,False,
n56nvku,I’m doing your data engineer community boot camp and I’m loving it so far. It has really helped me so much.Thank you so much Zach!OP try out Zach’s boot camps. They’re awesome,halcyon_10,2025-07-26 00:25:27,2,dataengineering,t1_n558la8,False,
n58ylgw,"Bro nobody hates you. I think you're absolutely a lunatic. You're my kind of lunatic, but absolutely a lunatic. I think you know what you know. As a positive you do know how big faang companies are doing stuff. I do think you haven't had to be scrappy and work with constrained resources like the majority of shops do.",flatulent1,2025-07-26 11:29:53,2,dataengineering,t1_n558la8,False,
n62bpgg,"I help run the OpenMetadata community and help people that are getting started with documentation daily, now that you've done the basics, I'd say keep going with documentation work that is going to help your regular job as a data analyst as well...Lineage. Documenting where a table and/or column came from and what services use it is going to really useful in helping you build out new data assets and discover or refine kpi's. Once lineage is being tracked I'd dive into... Usage. What tables do you and other analysts actually query? Are there copies of tables that aren't getting used or empty tables that could be marked for deletion. I've seen a lot of people save a lot of money and time here. You don't want to spend your time meticulously documenting 100% of your tables if 5% are being used. Can you classify tables in different tiers and make sure top tier tables have...Tests. It's important that a tables' documentation matches what tests are producing. Are your columns staying consistent, is your data fresh, things like that. [OpenMetadata](https://docs.open-metadata.org/latest/connectors/database/bigquery) is an open-source tool that automates all these for bq ;)",NA0026,2025-07-30 22:38:23,10,dataengineering,t3_1mdc8q8,False,
n60rd56,"What drives me crazy about this stuff like this is that everything we learned about this in school has basically gone out the window by now. Sacrifice organization for speed, which eventually works you into a corner but that's tomorrow's problem.",SoggyGrayDuck,2025-07-30 18:06:43,14,dataengineering,t3_1mdc8q8,False,
n60fxvs,"Did you make any changes from the default variables? If so, document why. Backup and restore procedures, how often is the database backup, what’s the expected recovery time. User credentials and policy and where to find them. You will want to store it somewhere secure like Secret Manager",Phenergan_boy,2025-07-30 17:15:41,2,dataengineering,t3_1mdc8q8,False,
n60trwa,"You can add table or column descriptions, describing what the tables contain. If possible this should be done with the sipport of AI, otherwise it is likely too much work.You can use a tool to draw and document data models, there are tools that can analyze it for you like sqldbm.Somehow the documentation should be made accessible so others could benefit. Eg in a data dictionary.It is important that the documentation is up to date, that means it has to become a part of your dev and change process.",Cpt_Jauche,2025-07-30 18:17:52,1,dataengineering,t3_1mdc8q8,False,
n63jz37,"I am like most of us here don't know what it looks like. When in doubt I usually comeback and check Gitlab Data team guide: [https://handbook.gitlab.com/handbook/enterprise-data/data-governance/](https://handbook.gitlab.com/handbook/enterprise-data/data-governance/)To see how they do it. Not what you expect to see, as a finished catalogs/documents (they use Atlan, it's internal, and I haven't found a screenshot/sample how it looks like yet).",robberviet,2025-07-31 02:52:59,1,dataengineering,t3_1mdc8q8,False,
n64q20n,Use dbt. Docs are built in and amazing,Life_Conversation_11,2025-07-31 08:36:57,1,dataengineering,t3_1mdc8q8,False,
n66ilwh,Use dbt. Then use an ai agent to add documentation.Rule that still works for me: keep it close to the code.,Significant-Carob897,2025-07-31 15:27:06,1,dataengineering,t3_1mdc8q8,False,
n622lg2,"Genuinely asking, but can AI even accurately describe tables and columns? That seems like it's too dependent on good documentation to begin with.Unless you mean column types and whatnot, at which point BQ already has the information schema.",paxmlank,2025-07-30 21:50:44,1,dataengineering,t1_n60trwa,False,
n63sid1,"Nice end to end walkthrough! RE: DirectQuery (in part 11), DirectLake is also an optionConsider cross-posting to r/MicrosoftFabric :)BTW, the link seems to have a space in it, it should be [https://www.linkedin.com/posts/zeeshankhant\_dbt-fabric-activity-7356239669702864897-K2W0](https://www.linkedin.com/posts/zeeshankhant_dbt-fabric-activity-7356239669702864897-K2W0)",warehouse_goes_vroom,2025-07-31 03:49:44,2,dataengineering,t3_1md2n3i,False,
n63t6kx,Thank you. I tried the directlake too but went with directquery for the Walkthrough.,Ze3shankhan,2025-07-31 03:54:25,1,dataengineering,t1_n63sid1,True,
n5lb2wt,How do you feel about the SQL graph extension? I.e. https://duckdb.org/community_extensions/extensions/duckpgq.htmlSome more thoughts: One issue are the different and poorly compatible eco systems like RDF Graphs and Property Graphs. https://www.semantic-web-journal.net/content/onegraph-vision-challenges-breaking-graph-model-lock-0Another issue are the schema languages for property graphs https://arxiv.org/abs/1909.04881Another issue is that you imo probably ultimately don’t want to put a graph in a database/lakehouse but generate it based on rules and your data.One more issue is that you might end up wanting to use hypergraphs or something like that. There’s a lot of semi related stuff like http://typedb.com or https://egraphs-good.github.io,Operadic,2025-07-28 11:37:42,3,dataengineering,t3_1mbbnlf,False,
n5ls8z4,"For me the main missing part is a storage standard. Like yes, we can read graph with Kuzu, GraphFrames or DuckDB from tables by creating it manually... But for doing that we need to know all the kinds of relations, etc. I see that GraphAr may really fill the gap. We have already a lot of tools, would be nice to have a way to prepare my graph from big tables on spark with graphframes, do deduplication, projection, etc.; save it to the standradazed format and after that read by in-memory tool like DuckDB or Kuzu. Something like Iceberg that connects different tools by one standard, but for graphs. And yes, GraphAr is about Property Graph, not RDF.",ssinchenko,2025-07-28 13:25:10,2,dataengineering,t1_n5lb2wt,True,
n5x5iom,"Without saying too much, I had a similar technical background and joined a tech ""consultancy"" but it was essentially a bootcamp grad mill where they ship you off as the lowest bidder. I'm personally skeptical based on what you've shared.I would go with the bank offer. If they're doing ML, then they have a need for proper clean data. You could become that go to person by building your niche. If the money is enough, you could consider moving closer to work in order to reduce commute time.Every single company has their peculiar tech stack so don't worry about learning the ""right thing"". Get in the job market, build fundamental skills and determine what you like and dislike and evaluate from there.",adiyo011,2025-07-30 03:57:44,5,dataengineering,t3_1mcrhcq,False,
n5xg656,"The consultancy can be good for you or really really bad. In general they allow you to learn a lot as you possibly switch projects often, however from what you're saying this is more one of those firms that employs people at lower cost and trains them just enough for them not be sent back.The bank is average and will remain average.If possible I wouldn't focus too much on being fully remote at the start of one's career because not all firms are good/equipped to teach you properly remotely, so you might grow slowly.",dorianganessa,2025-07-30 05:20:01,1,dataengineering,t3_1mcrhcq,False,
n5xpd7s,"Honestly, maybe it’s just time talking, but working for banks (especially in Europe) is usually a nightmare. Everyone I know who’s worked at one either left quickly or is trying to.Keep in mind you're not marrying the company lol, so think about which offer actually helps you level up and stay close to what you enjoy. The consultancy one sounds more aligned with your long-term goals, especially since you’re into data engineering and architecture. Even if the pay is lower, you’ll probably learn more relevant stuff and grow faster. That kind of experience compounds.The bank might look good on paper, but if the role leans more toward ML and that’s not your thing, you’ll just end up bored and trying to pivot again later. And that commute sounds miserable.Go with the offer that builds skills you actually want to use in your next job. You’re early in your career, optimize for learning, not comfort.",Ahmouu,2025-07-30 06:42:10,1,dataengineering,t3_1mcrhcq,False,
n642bnp,"My partner has been working for banks for a long time. It pays well. On the other hand I have friends who worked for companies and felt miserable because of the long hours and poor pay. If I were you, I would take the in-person job. There is nothing that gives you the in person experience. You will not only learn the technical skills, but also the non-technical aspects, which is critical for overall career growth. You are young so why not bite down and take the in person job. After a few moths or years you can look for another job if the commute turns out to be too much. - ex data developer/ data architect.",DizzySuccotash1613,2025-07-31 05:02:57,1,dataengineering,t3_1mcrhcq,False,
n642g6m,"My partner has been working for banks for a long time. It pays well. On the other hand I have friends who worked for companies and felt miserable because of the long hours and poor pay. If I were you, I would take the in-person job. There is nothing that gives you the in person experience. You will not only learn the technical skills, but also the non-technical aspects, which is critical for overall career growth. You are young so why not bite down and take the in person job. After a few moths or years you can look for another job if the commute turns out to be too much. - ex data developer/ data architec",DizzySuccotash1613,2025-07-31 05:03:58,1,dataengineering,t3_1mcrhcq,False,
n684zhy,"Progression doesn’t exist, they’re both data engineering, everything is shifting towards python but scala is improtant if you want good foundations, but it won’t really be anything you can’t teach yourself. I would go with the bank. I work for whoever pays me more when I can’t choose. In the end of the day you are selling your ability to learn",Certain_Leader9946,2025-07-31 20:00:24,1,dataengineering,t3_1mcrhcq,False,
n5w4mg3,"If i'm not intruding, can you let me know how did you land interviews for those roles?I would love to gain some insight as to what you had in your resume that you think made you stand out in the application process?",deathstroke3718,2025-07-30 00:13:03,1,dataengineering,t3_1mcrhcq,False,
n5w9alj,WFH wins for me! Consider travel time as work hours and calculate potential earnings. More pay is a close second. What do you think?,SpecialistDaikon8866,2025-07-30 00:40:05,0,dataengineering,t3_1mcrhcq,False,
n5y9ef9,"From what I’ve heard, there’s a two-week in-person training period mainly focused on Scala and Spark. After that, you’re assigned to a project. So if you want to learn other technologies, like Airflow, for example, I’m not sure how that would work in a fully remote environment (I guess linking you to a course). From what I understand, the consultancy is very technically focused and puts a strong emphasis on training, and they’ve been running this fully remote system for a while now, though I’m not sure how well it’s been working. In any case, if I were to join that company, my plan would be to study on my own in addition to whatever training the company provides.",Existing-Mousse3509,2025-07-30 09:54:59,1,dataengineering,t1_n5xg656,True,
n5yc3vm,"From what I’ve heard, and from people who work there, employees at the bank tend to feel comfortable; in fact, many of them stay until retirement (at least for this bank), partly because the conditions are quite good. Aside from that, I agree with most of what’s been said. If I do join the bank, it would mainly be to see if I like it, and if not, maybe after a year I’ll move on and focus 100% on Data Engineering.The only thing that gives me second thoughts is that the offer from the consultancy seems very tailored to recent graduates and designed to train them specifically for Data Engineering, which I think is really valuable. I’m just unsure whether, a year from now, I’d still be able to get an opportunity like that if I pass it up now.",Existing-Mousse3509,2025-07-30 10:19:15,1,dataengineering,t1_n5xpd7s,True,
n5v6d4h,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-29 21:12:15,1,dataengineering,t3_1mcnpnr,False,moderator
n5vge5x,"I’ve been on a very similar path, so let me share what I wish I’d done differently.Early on, I spent a lot of time on PySpark and Pandas. They’re powerful tools, but for most of my early projects, SQL could have solved 90% of my problems faster and more cleanly. SQL is easier to debug, easier to optimize, and much more universal across platforms. If I could go back, I’d master SQL-based transformation first before diving deep into dataframe libraries.That’s why, instead of jumping straight into Docker/Airflow, I’d start with a SQL-centric transformation tool like dbt (or Bruin, which also lets you run Python and handle ingestion). This will teach you the fundamentals of data modeling and pipeline design without the operational complexity of containers and schedulers. Since you already use Tableau, learning the “one step before the dashboard” will make the whole puzzle click.Another big lesson: don’t get lost in technical rabbit holes. The fastest way to grow is to chase the highest-impact business problems, things that save your team time, increase accuracy, or unlock new capabilities. If you focus there, you’ll naturally pick up the right technical skills along the way.Also, don’t work in isolation. Get your code reviewed, and review others’ work. You’ll learn more from those reviews than from most courses.If I were mapping a path for you, it’d be:1. Master SQL + data modeling (dbt/Bruin/SQLMesh)2. Add Python tasks in the pipeline only when needed3. Develop a tool in Streamlit and deploy it for the use of business team4. Develop an ML model, and deploy it.You’ll hit Docker and Airflow eventually, but starting with modeling skills will make everything else much easier.",PolicyDecent,2025-07-29 22:02:20,5,dataengineering,t3_1mcnpnr,False,
n5w9d60,Start learning and using Git for version control which is a Must Have! Managing your own Airflow and setting it up can be quite a lot of work especially keeping up with dependencies. If you have access to a cloud version of hosted Airflow might be a bit easier to get a handle on. Also DBT Core is very good to learn and tons of docs on getting up and running quick which saves you from stored procedure hell.,Trigsc,2025-07-30 00:40:30,1,dataengineering,t3_1mcnpnr,False,
n5xeupj,"I run this website for data engineering roadmaps, the modern data stack one could probably work for you: https://dataskew.io/There's also projects you can build to test your skills. Next will come interview prep and AI grading",dorianganessa,2025-07-30 05:08:51,1,dataengineering,t3_1mcnpnr,False,
n5wh7fk,>get your code reviewedDamn I wish there was another coder at my org,qc1324,2025-07-30 01:25:29,2,dataengineering,t1_n5vge5x,False,
n600hyr,I am new to data engineering and I always hear the word data modelling and want to understand what it really means?,Puzzleheaded_Gur4818,2025-07-30 16:04:06,1,dataengineering,t1_n5vge5x,False,
n5xu8pc,"I tried to keep the post short, but can add more details about it :) Use Reddit, Stackoverflow, Slack, LLMs for that. All the internet is yours. There are thousands of people happy to help. Don't be shy, just explain your situation, and your solution, and ask how that implementation could be better.",PolicyDecent,2025-07-30 07:28:09,1,dataengineering,t1_n5wh7fk,False,
n64ptip,"Data modeling is about organizing data in a way that makes it easy to find, understand, and use, whether that’s in BI tools or for analysts and scientists. A well modeled warehouse means people can quickly locate the right dataset and get what they need without searching for hours or joining dozens of tables.",PolicyDecent,2025-07-31 08:34:41,2,dataengineering,t1_n600hyr,False,
n5y2sub,Uploading proprietary code that belongs to the company to the internet ... yikes.,Budget-Minimum6040,2025-07-30 08:51:32,1,dataengineering,t1_n5xu8pc,False,
n5y4qr2,"Man, you don't have to share all your code. You can create a minimal replica of the code and ask for advice. Don't you ask any questions to Stackoverflow?",PolicyDecent,2025-07-30 09:10:24,1,dataengineering,t1_n5y2sub,False,
n52xnpf,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-25 13:14:38,1,dataengineering,t3_1m8yuyv,False,moderator
n54s7gu,Git,DeezNeezuts,2025-07-25 18:31:39,23,dataengineering,t3_1m8yuyv,False,
n560two,You are on the right track. They could use Azure Data Studio (I know it is on a deprecation path - VS Code is the replacement) and there you have access to db and git repos. Are the data analysts wanting to run dbt or sqlmesh? This would be the next step.,Illustrious-Welder11,2025-07-25 22:14:20,1,dataengineering,t3_1m8yuyv,False,
n5646mr,"We're doing something similar right now Git Bash is the easiest way once you get to know it, otherwise stick with the DevOps UI with a very small group of approvers that review the code before approving and completing the PR.",seiffer55,2025-07-25 22:32:53,1,dataengineering,t3_1m8yuyv,False,
n56awdn,"The file comparison features of Azure DevOps are good. Use git, and you can do PRs if you have prod and non-prod environments (you mentioned that these are analysts), and are doing promotions of this kind of code.This works fine. Sql files are just files.",Eastern-Manner-1640,2025-07-25 23:10:40,1,dataengineering,t3_1m8yuyv,False,
n56fb6c,"What I have done is just make a separate folder in my project directory, whether it be python or terraform project and call it ‘sql’ and just throw the sql files in there and then use git. Your CI/CD pipelines shouldn’t be looking or doing anything to this folder so it should be fine",benwithvees,2025-07-25 23:35:28,1,dataengineering,t3_1m8yuyv,False,
n5805ps,Main idea is to get used to use physical files for your queries (maybe paired with auto-save features) instead of those worksheete that some IDE-s have. Once you have the files it’s very easy to version them,tiny-violin-,2025-07-26 06:05:54,1,dataengineering,t3_1m8yuyv,False,
n5q4vjm,I use... [https://www.ssmstoolspack.com/Features](https://www.ssmstoolspack.com/Features) which stores the adhoc queries I run.For everything else we dump the objects to text and commit them to Git.,mdzmdz,2025-07-29 02:37:51,1,dataengineering,t3_1m8yuyv,False,
n56ajva,"Just want to say, VS Code is such a poor replacement in many ways. I cant comprehend how MS have SSMS, VS Code & ADS and all of them have amazing features, but none of them have all those features.Really need jupyter native SQL exec, graph formatting of output cells, agent jobs history & setup.None of the extensions get this right.",umognog,2025-07-25 23:08:42,6,dataengineering,t1_n560two,False,
n59p65f,"With the end of the file nam containing the date\_time of completion. For a given stem, alphabetical sorting will preserve the version order.",BarryDeCicco,2025-07-26 14:21:30,1,dataengineering,t1_n56fb6c,False,
n66jip2,THat is a classic. Everyone serious about the data engineering sphere should read it.,Nekobul,2025-07-31 15:31:21,5,dataengineering,t3_1me4ein,False,
n64r0n6,"you could consider dlt library for proper partitioning incremental etc with schema evolution and a few other self healing features.[https://dlthub.com/docs/dlt-ecosystem/destinations/redshift](https://dlthub.com/docs/dlt-ecosystem/destinations/redshift)disclaimer i am one of the dlt cofounders (formerly DE, dlt is the tool i wish i had)if you wanna use cloud functions instead of glue, one of our users offers this template [https://dlthub.com/blog/dlt-aws-taktile-blog](https://dlthub.com/blog/dlt-aws-taktile-blog)if you go for athena we also support iceberg on it (which would help with your scale). We have deployment helpers for both GH actions and airflow.as for your overall architecture yeah it sounds like moving from ""first setup, quick wins"" to ""scale""",Thinker_Assignment,2025-07-31 08:46:06,2,dataengineering,t3_1mdw8ef,False,
n64thnx,"It sounds ok. Nothing complex here.And it's surprising to see Airbyte not support S3, Redshift. I have just googled and it does? (though to S3 then COPY).",robberviet,2025-07-31 09:09:33,1,dataengineering,t3_1mdw8ef,False,
n64vld9,How much data you have to process daily?,Nekobul,2025-07-31 09:29:38,1,dataengineering,t3_1mdw8ef,False,
n650g5u,"Seems like a good plan. Seems over engineered depending on the size of data.The only part where you might want to adjust is “replace DBT with spark for more flexibility”. What do you mean by this ? Spark is a supported engine by DBT. The two tools does 2 different things very well.If you want to go away from sql transformations that may be your answer. But note that it’s kinda nice to have a language that anyone can easily understand and transform data with rather than a specific one. Even more if you are a very small team of 1.Also this is nice , but doesn’t seem manageable by only you. It’s a lot. Also I think you need some really good argument to change something that is currently working (redshift) with something that slower and would do the same thing. Yes, cost can be an issue, but it seems like it need to be in your case for this rearchitecture to make sense.",Commercial_Dig2401,2025-07-31 10:13:29,1,dataengineering,t3_1mdw8ef,False,
n65oiam,Why dont you use s3 as datalake and load it to redshift. i'm using this setup,oishicheese,2025-07-31 12:58:00,1,dataengineering,t3_1mdw8ef,False,
n67sqhu,"The list of improvements which can be made is endless. But that is true for any team.The big flag for me here is ""with DBT jobs triggered by GitHub Actions""Github actions isn't a good scheduler for ETL jobs. There was a thread about it sometime back https://www.reddit.com/r/dataengineering/comments/1kmmv20/airflow_vs_github_action_for_orchestration/The other elements I didn't see here are 1) SLA and data quality monitoring and 2) data catalog of some kind. Just a autogenerated wiki page is better than not having one.",vish4life,2025-07-31 19:00:58,1,dataengineering,t3_1mdw8ef,False,
n64sukc,"I will look into DLT thanks.Yes indeed Redshift is easy to deploy but it's overkill for our data volume and usage, while costing a lot on the bill. On the other hand Athena is cheaper but many say performance is not good enough for user-facing application. BigQuery was such a good product but I feel like Athena doesn't reach the same expectations while being more expensive.",Adrien0623,2025-07-31 09:03:22,2,dataengineering,t1_n64r0n6,True,
n64tso0,It support those destinations but doesn't support partitioning on them. It's such a an important feature they are lacking. I've found GitHub issues asking for it since many years without progress.,Adrien0623,2025-07-31 09:12:29,2,dataengineering,t1_n64thnx,True,
n6521tg,For now a few MB but maybe GB in a 1-2 years,Adrien0623,2025-07-31 10:26:59,2,dataengineering,t1_n64vld9,True,
n653j0y,"By replacing DBT by spark I meant getting rid of DBT and write spark jobs to make transformation and why not imports so I can partition tables (Airbyte doesn't do it on S3 or redshift).Nobody is touching DBT expect me and another engineer. When people need to have a dashboard or something we deal with writing the model for it. As a data engineer I consider it's part of my job.My concerns about DBT is that it's a simple product but not sealable in the future. Especially doing unit tests is very limited as some column types are not supported making testing some models impossible. With Spark jobs I can fully test queries making sure to handle edge cases properly and it's easier to scale jobs when data volume will grow, with DBT running on GitHub actions runners we are limited in performance and from my point of view it's not a clean way to schedule jobs: no clear monitoring, retry policies etc. like with Airflow for example",Adrien0623,2025-07-31 10:39:17,1,dataengineering,t1_n650g5u,True,
n63qoio,"Database per customer if it's storing customer data, IMO. Can't speak to HIPAA. Do your own analysis, not intended as a substitute for your own engineering judgment. But consider: customer manages to truly screw up their data. They want you to restore them to the last backup.If you do the RLS approach... Well, now you get to try to restore /part/ of every table.If you do single tenant / database per customer, you restore that databases' backup and are done.Also consider that you'll have to scale out eventually either way pretty much. Again, easy if it's database per.Customer demands database be on premise /encrypted with their key / whatever... Again, good luck if it's all one database.",warehouse_goes_vroom,2025-07-31 03:37:00,11,dataengineering,t3_1mdqkew,False,
n63t5et,PostgreSQL supports multiple schemas per database.Keep all your code in public schema and one schema per customer That is most efficient and optimal way of doing along with being secure.,Informal_Pace9237,2025-07-31 03:54:11,3,dataengineering,t3_1mdqkew,False,
n66245z,"For strict HIPAA compliance, a single-tenant model gives you true data isolation and simpler audit trails, at the cost of more operational overhead. A multi-tenant setup with Postgres RLS can work, but it increases the risk surface. Every bug or misconfiguration in your RLS policies could expose data across tenants. So for healthcare, I’d lean single-tenant unless you have a mature security team.",GreenMobile6323,2025-07-31 14:08:59,3,dataengineering,t3_1mdqkew,False,
n63mbi0,"I haven’t used it in anger, but Nile Postgres has tenancy built-in as a first principle",kabooozie,2025-07-31 03:07:55,1,dataengineering,t3_1mdqkew,False,
n64gw0a,"Yeah, dumping all into one SMP database, which will hit a ceiling, is not the way to go. You should be factoring in the costs of these databases as part of the billing anyways. There is also cases where legally, tenants will not want to be sharing the same network as competitors etc too. So, consider the fact you should be isolating each DB on it's own network to offer even more security / reducing blast radius.",Tehfamine,2025-07-31 07:10:03,3,dataengineering,t1_n63qoio,False,
n63r4ic,"If that becomes a cost issue, consider something like Azure SQL DB's elastic pools, that allows them to share processes while still being separate databases from the engine's perspective. Then you're relying on the databases engines' isolation, rather than having to do it in software, as long as you don't screw up the top level database level permissions.",warehouse_goes_vroom,2025-07-31 03:40:07,1,dataengineering,t1_n63qoio,False,
n68gpg3,"Pipelines and db schema consistency are definitely more complex for single-tenant. So much easier to scale and maintain, though. Maybe passing as much of the db hosting costs along to the customer is possible, too.I've done both mutli and single tenant systems, albeit not for health care. We did have to accommodate payment data and PCI, which is similar, though.",sighmon606,2025-07-31 20:55:30,1,dataengineering,t1_n66245z,False,
n63svy3,"why out of anger haha, will check them out thanks",RPSpayments,2025-07-31 03:52:21,2,dataengineering,t1_n63mbi0,True,
n63spo7,"makes sense, and was what i was thinking, thanks! I'm thinking about using AWS right now, they offer a lot of ease with the HIPAA side, but cost may be an issue -> Neon is another interesting option [https://neon.com/use-cases/database-per-tenant](https://neon.com/use-cases/database-per-tenant)",RPSpayments,2025-07-31 03:51:09,1,dataengineering,t1_n63r4ic,True,
n63t0cy,"Oh, that’s just a silly phrase I heard and liked. The saying goes, you don’t know a technology until you have “used it in anger.”",kabooozie,2025-07-31 03:53:13,2,dataengineering,t1_n63svy3,False,
n6199dq,"Please provide your definition of ""real-time"". Is the solution required to run on Linux or Windows is also acceptable?",Nekobul,2025-07-30 19:31:23,2,dataengineering,t3_1md7q68,False,
n63yzx7,"I think you have quite a few commercial options to choose from. For OSS solutions, Debezium + Kafka comes to mind, but it'll come with a trade-off of having to maintain everything yourself.Except for BYOC + real-time, what are the other requirements/deal breakers? Are transformations needed within the pipeline, or just simple replication? Is that a new project, or do you have a solution in place? Do you use Snowpipe streaming?",oli_k,2025-07-31 04:36:57,2,dataengineering,t3_1md7q68,False,
n61h12j,https://www.starburst.io/starburst-enterprise/,Operadic,2025-07-30 20:08:25,1,dataengineering,t3_1md7q68,False,
n5zjxj9,We support [BYOC](https://estuary.dev/deployment-options/) at Estuary! You can bring your own compute in any cloud and we can deploy the data plan on top of it. We can also deploy a data plan in multiple regions for strict compliance requirements. You still get to use the SaaS dashboard though for convenience. Happy to answer any questions about this deployment mode.,dani_estuary,2025-07-30 14:45:03,0,dataengineering,t3_1md7q68,False,
n5zjdap,"disclaimer: I build such a platform called [Bruin](https://getbruin.com) that has a managed control plane + BYOC data plane, so everything runs on your infra. ingest + transform + check + govern. also [open-source](https://github.com/bruin-data/bruin).I think the tricky part of such solutions compared to their batch alternatives is that running streaming ingestion workloads require running long-running processes and connectors on your infra, which in turn requires a singificant engineering investment, monitoring, etc, which makes it harder to offer it as a managed service and a good experience.If you'd like to build these yourself, the most common suggestion would be Debezium via Kafka Connect or via Debezium Server pushing the events to another broker, where you can replicate them in the destination then. We are about to roll out Debezium event collector on ingestr as well, which could help you consume them from the broker and land on Snowflake.Another alternative could be openflow maybe? [https://www.snowflake.com/en/product/features/openflow/](https://www.snowflake.com/en/product/features/openflow/)",karakanb,2025-07-30 14:42:22,-1,dataengineering,t3_1md7q68,False,
n5xy762,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-30 08:06:30,1,dataengineering,t3_1md0rb4,False,moderator
n5y3qez,"Databricks is mostly spark underneath, some would say it's the commercial version of spark but I think there's more to it. So you could prioritize learning spark's python API Pyspark, plenty of tutorials on YouTube, then it would make sense to learn Databricks. Hadoop might only be necessary if you end up working in an onprem legacy system, maybe in banks for example, and you'd really only need to learn how to use hdfs. Although I'd still learn about Hadoop's history as it would help you make sense of where spark comes from.I'd also learn the basics of how AWS works (or its competitors), services likes S3, EC2, IAM. You'll most likely need to interact with one of these when setting up Databricks or working on Databricks.",sholopolis,2025-07-30 09:00:30,6,dataengineering,t3_1md0rb4,False,
n5yab2x,"You can find PySpark, Databricks, Spark Streaming all beginner friendly from this YouTube channel [Ease With Data Playlists](https://www.youtube.com/@easewithdata/playlists)",Complex_Revolution67,2025-07-30 10:03:13,3,dataengineering,t3_1md0rb4,False,
n64rcdt,"Learn Spark and learn SQL, I wouldn’t prioritise Hadoop skills at all, more of a legacy platform, lots of new things built on top of it but you shouldn’t need Hadoop knowledge unless you use it in your job.",Mclovine_aus,2025-07-31 08:49:08,1,dataengineering,t3_1md0rb4,False,
n5y3tca,"thank you so much, this information is very helpful",Low-Yak2608,2025-07-30 09:01:19,2,dataengineering,t1_n5y3qez,True,
n5trqek,"Airflow, dagster.",robberviet,2025-07-29 17:16:51,13,dataengineering,t3_1mcg336,False,
n5u6hhc,"Airflow, Dagster, Prefect, or cron are all self hostable and good enough for production. I would hesitate to use anything other than those. Cron is only kind of a joke. It’s fine if all you’re doing is running python scripts on a schedule and don’t care about the UI, logging, etc. that the others offer.",JaceBearelen,2025-07-29 18:23:48,7,dataengineering,t3_1mcg336,False,
n5tk6v4,[https://dataengineeringcentral.substack.com/p/review-of-data-orchestration-landscape](https://dataengineeringcentral.substack.com/p/review-of-data-orchestration-landscape),averageflatlanders,2025-07-29 16:42:34,2,dataengineering,t3_1mcg336,False,
n5whmhy,"Airflow (Dagster, Prefect), etc are extremely powerful, but also do a lot of things & require devops work, maintanance, monitoring, etc.If you want something lightweight, i'd just stick with idempotent Python + logging + cron (or APscheduler if you have some sort of webserver running). If you are looking for a tool to define more complex pipelines (such as task order, branching, etc) and writing them in Python may be a ""lot of work"" you can look at simpler tools like Hamilton data.What are the features you are looking for in an orchestrator?",joseph_machado,2025-07-30 01:27:56,2,dataengineering,t3_1mcg336,False,
n5tvdt8,Check this list: https://github.com/meirwah/awesome-workflow-engines?tab=readme-ov-file,limartje,2025-07-29 17:33:12,1,dataengineering,t3_1mcg336,False,
n5wrt99,There is Netflix Conductor ( https://github.com/Netflix/conductor ) and it has Python interface and it is open source.,antibody2000,2025-07-30 02:27:44,1,dataengineering,t3_1mcg336,False,
n5xhame,"I had a similar issue with YAML-heavy tools like Argo. Ended up using Data Flow Manager (DFM) - it’s built on NiFi but way easier to manage and deploy flows. Visual UI, no code required, and works great even on small setups. Was a nice balance between control and simplicity.",mikehussay13,2025-07-30 05:29:39,1,dataengineering,t3_1mcg336,False,
n644gwq,"Just use the default `pip install apache-airflow` setup.Sure, it won't run parallel pipelines, but for low volume orchestration, it'll work fine.And it's very low effort.",DoNotFeedTheSnakes,2025-07-31 05:20:39,1,dataengineering,t3_1mcg336,False,
n5xhimh,n8n?,dorianganessa,2025-07-30 05:31:33,0,dataengineering,t3_1mcg336,False,
n61rusn,"Would you recommend DFM for rapid testing & POC? For example, how long to setup a kafka ingest over a number of partitions, including offset management and committing messages?",umognog,2025-07-30 20:58:17,1,dataengineering,t1_n5xhame,False,
n5cahed,Github copilot in vscode?,seph2o,2025-07-26 22:44:28,6,dataengineering,t3_1ma67b5,False,
n5cg6bf,"We've got a corporate license for Github Copilot, and I've found it to be very, very useful in asking it to explain code in local copies of repos (we have a private Github org and Copilot won't look at github.com to analyze things for us).One example which I showed my team last week was an analysis of a rules engine framework I build last year. The analysis was spot on, and included a note that what the framework implements an exclusion rather than inclusion rule. Which I knew, but had forgotten to document.We've got other repos where we've asked Copilot to document pieces of it, and it's been reasonably successful - worst case it was unable to do anything, usual case was that we got something to build on.",CalmTheMcFarm,2025-07-26 23:18:45,2,dataengineering,t3_1ma67b5,False,
n5dqfe2,"Use sqlglot to extract your lineage, almost trivial if you have all SQL code in 1 place.",w0ut0,2025-07-27 04:29:14,2,dataengineering,t3_1ma67b5,False,
n5cpbem,"Poorsql.com at least for formatting. One column per line. If there are now over 5,000 lines, it could use a rewrite. What we call, refactoring.",SirGreybush,2025-07-27 00:14:54,2,dataengineering,t3_1ma67b5,False,
n5d4fks,"Lineage is a stretch and you are better off mining metadata (snowflake, for instance, has amazing lineage metadata) or writing lineage at time of job run for which you may consider Openlineage standard.Views and Procs documentation are a shoe-in for AI though.",SalamanderPop,2025-07-27 01:52:55,1,dataengineering,t3_1ma67b5,False,
n636zht,"Documentation is intent.If you have a bug in your code, the next guy is going think it’s correct. Rarely anyone goes back to the original requirements.For example, you wanted to add columns a+b but instead you added a+c. Next guy who hasn’t seen the requirements just says “this is correct according to the docs”",mycrappycomments,2025-07-31 01:35:36,1,dataengineering,t3_1ma67b5,False,
n5dozu3,Try deepseek. I used to ask to prepare a seq. diagram (mermaid),gdmitrii,2025-07-27 04:17:58,0,dataengineering,t3_1ma67b5,False,
n5clhpl,"I've had good experience with [elementary](https://docs.elementary-data.com/cloud/best-practices/detection-and-coverage#data-quality-dimensions-framework), and it gives you a nice dashboard (HTML), [see this](https://docs.elementary-data.com/oss/quickstart/quickstart-tests).**BUT** it is a dbt package so it runs on top of a dbt setup (you can use a dbt setup with your tables as source), not sure if it works with your stack, but worth a shot.Most tools are primarily aimed at data quality checks, pass/fail and not always focussed on profiling/reporting.Good luck! LMK how it goes.",joseph_machado,2025-07-26 23:50:43,2,dataengineering,t3_1m9nykt,False,
n58x3bu,Veeeeery old resource but have you checked [this](https://aws.amazon.com/blogs/big-data/build-an-automatic-data-profiling-and-reporting-solution-with-amazon-emr-aws-glue-and-amazon-quicksight/)Deequ is no longer maintained but it could give you a head start?,Independent_Body_137,2025-07-26 11:17:44,1,dataengineering,t3_1m9nykt,False,
n5avxxk,"> Am I wrong to assume that a tool exists that has the capabilities described?No. Or at least kind of.I once worked with Informatica's data quality product and it supports most of what you want. And I am quite certain that other expensive data quality tools does the same.I am not entirely sure about your point 3. If the schema changes or more columns are available, *as I remember it* you get a warning/error, that something has changed in your profiling. Not the actual change I think. But again, not sure.As for point 4, it generates a report that you manually have to click on and open. Actually quite nice overview in the automatically generated reports with stats on all your metadata in your profiling. It is annoying that you have log in to a different system to see them, but you can extract the metadata through the API if you want to collect it in your regular data warehouse and do your own reports.But it is expensive. And I believe a lot of other proprietary expensive data quality tools can do the same. It is just not available in any cheap/open source way. At least to my knowledge, but would be very interested if it exists.",Gnaskefar,2025-07-26 18:04:32,1,dataengineering,t3_1m9nykt,False,
n5izmok,I’m a big fan of Pointblank (https://github.com/posit-dev/pointblank). It can do all sorts of validation (very flexibly) and it generates reports that can be passed over to others in an organization (and spur conversations about data quality). Also: you can do ad hoc data scans with the Python API or with their CLI utility. It’s really impressive stuff!I’ve been using it quite a lot for the last few months so AMA about it.,Erik-Benson,2025-07-28 00:31:34,1,dataengineering,t3_1m9nykt,False,
n58y810,"I have heard about it, never tried it though. Wouldn't want to use deprecated tools neither, our compliance guys don't like to take chances. I did notice the SparkDQ framework? Any idea if it's any good?",Kojimba228,2025-07-26 11:26:52,1,dataengineering,t1_n58x3bu,True,
n5bgo24,"Yeah, I'm really opposed to informatica (informatica cloud sucks ass) and we don't use informatica stack at all, so bothering with expensive dq from them is too much. Thanks for the info though, never thought that informatics provides any kind of decent dq reportsP.S. Now all that's left is to find an open-source one, preferably with Python support :melting_face:",Kojimba228,2025-07-26 19:56:20,1,dataengineering,t1_n5avxxk,True,
n5ko7vv,"Upon checking the docs and features provided, it does seem like a fairly decent choice.Seems like it's more integrated with Polars, which I haven't used but heard about being faster than Pandas and it seems to be less integrated with PySpark. Still, this seems to be the best tool I've seen yet. Thanks!",Kojimba228,2025-07-28 08:13:28,1,dataengineering,t1_n5izmok,True,
n5b4i3l,"No clue, I have not used it :/",Independent_Body_137,2025-07-26 18:50:08,1,dataengineering,t1_n58y810,False,
n5fisbz,"Fair, it is -after all- borderline illegal to mention Informatica in this sub, but I really don't agree, that their modern products sucks ass or similar.",Gnaskefar,2025-07-27 13:37:33,1,dataengineering,t1_n5bgo24,False,
n5lm4us,"YW! About Spark, it works currently if you pass in a Spark DF as an Ibis table. But now that Narwhals supports Spark directly, the developers of PB are going to make it so that you don’t need to use Ibis for this DF type.",Erik-Benson,2025-07-28 12:50:06,1,dataengineering,t1_n5ko7vv,False,
n574hti,"Calling it Parquet CDC is ambiguous, in first look I read it as “Change Data Capture” :grinning_face_with_sweat:Maybe it’s just me.",LoneL1on,2025-07-26 02:08:04,4,dataengineering,t3_1m92qoz,False,
n5jip6n,You are not alone!,Then_Crow6380,2025-07-28 02:31:06,1,dataengineering,t1_n574hti,False,
n67fbqn,When you don’t have a lot of money for a better LLM so you’re stuck with polluting the internet with low quality crap like it’s 2024 again…,RustOnTheEdge,2025-07-31 17:58:01,5,dataengineering,t3_1me6ah1,False,
n66zh3j,*Postgres,Temporary_Depth_2491,2025-07-31 16:46:20,0,dataengineering,t3_1me6ah1,True,
n5mwwat,"Excellent idea. A unified dashboard for Dagster metrics and Snowflake costs is a game changer, not overkill. It solves a real efficiency problem and the skills learned are incredibly valuable. For implementation, using Grafana with Dagster's GraphQL API and Snowflake's `ACCOUNT_USAGE` schema would be a powerful approach.",Substantial_Fig_7849,2025-07-28 16:44:05,-1,dataengineering,t3_1mbiio9,False,
n52tf3x,"Maybe this is the python talking, but does that dot syntax give other people feelings? That's my syntax for interacting with methods and functions, I don't want to see it in raw data...",ratczar,2025-07-25 12:51:00,3,dataengineering,t3_1m8y3im,False,
n52u2e4,Has anyone actually claimed that this is a problem? what exactly are you trying to solve for?flattening the json seems like an extremely weird design decision to me - how would I know if a field is expected or not? how deep does the dot nesting go? and how do I parse it? you're asking me to split on dots instead of just using the infinitely many json parsing tools that exist already within any programming dialect,ThroughTheWire,2025-07-25 12:54:37,3,dataengineering,t3_1m8y3im,False,
n5dm3hm,Can you clarify?,cptshrk108,2025-07-27 03:55:56,1,dataengineering,t3_1m8y3im,False,
n530j94,"Hm....but when something breaks, and of someone else if debugging, they will end up seeing the syntax, right? :p",ExcitingThought2794,2025-07-25 13:30:10,1,dataengineering,t1_n52tf3x,True,
n52zk2k,"Our customers have pointed this as a problem (we are an observability tool). They want to optimize log pipeline to reduce cost, increase query speed, and also reduce cost",ExcitingThought2794,2025-07-25 13:24:57,1,dataengineering,t1_n52u2e4,True,
n541e66,I have zero interest in confusing myself with what's data and what's a function or method. If I really want to do it this way I'll just use an ORM,ratczar,2025-07-25 16:26:45,-1,dataengineering,t1_n530j94,False,
n52zz7b,I don't think I get your question - 'how would I know if a field is expected or not'Why does one need an observability tool and what outcome do they expect should guide the selection of attributesEdit: oh ya and we use ClickHouse as our back-end.,ExcitingThought2794,2025-07-25 13:27:12,1,dataengineering,t1_n52zk2k,True,
n54276p,"ORM won't work in our case. Happy to be wrong. And since you have no interest in the data, function or method, I have no way to present a counter either.",ExcitingThought2794,2025-07-25 16:30:34,1,dataengineering,t1_n541e66,True,
n532uir,"I think I misunderstood the entire point of the post - I thought you were providing the end users the dot notation to parse through, but you're actually asking the users to use your configuration to send over the dot notation over to you for processing - does that sound right?If that's the case, I think it is a bit weird that users are asked to manually configure how to ""dedupe"" info sent over to logs but if it's a part of the docs and setup it seems reasonable as an optimization. seems like something that can be done on the saas side for the customer though - attributes with same names and values could be consolidated during or after ingest via some configurable setting on your side saying like ""easy dedupe"" or something?similarly - are you asking users to flatten the json on send? why don't you flatten it on read for them?",ThroughTheWire,2025-07-25 13:42:35,2,dataengineering,t1_n52zz7b,False,
n606z3o,"Write some views to transpose the table names and columns to A-Z 0..9 names only, and use the views to export.Maybe make a new schema name called ParquetExport and put the views in that schema.Bonus, you can do simple transformations like putting the datetime as a standard ISO yyyymmddhhmmss string, nulls as empty string, a missing calculated column based on row info, and some extra column names to simplify import management, like ExportedDate column. A Hash md5 of the data row, a hash of the PK columns.",SirGreybush,2025-07-30 16:34:51,5,dataengineering,t3_1md73sq,False,
n5zh9y5,"Special characters in your content shouldn’t be a problem. However in your column names they cannot be used with parquet sink. Not even spaces. If you can define a custom tabular translator to rename the columns explicitly then you don’t need a dataflow. If you are ingesting a large number of tables and cannot establish a translator specific to each table, then you will have to use dataflows or another compute option.",Simple_Journalist_46,2025-07-30 14:32:18,4,dataengineering,t3_1md73sq,False,
n619qt3,Why not use SSIS to generate and upload the Parquet files?,Nekobul,2025-07-30 19:33:44,-1,dataengineering,t3_1md73sq,False,
n609kv3,Thanks . I’ll have a look at this .,Few_Individual_266,2025-07-30 16:47:05,1,dataengineering,t1_n606z3o,True,
n5zld0g,How do I define a custom tabular translator? Just a python script that can convert all the column names? could you pls explain your approach ?thanks,Few_Individual_266,2025-07-30 14:51:49,1,dataengineering,t1_n5zh9y5,True,
n608mkm,"""senior data engineer"": how do I rename a column?",One-Salamander9685,2025-07-30 16:42:36,6,dataengineering,t1_n5zld0g,False,
n60k4yi,"You cited dataflows so I assumed you are using ADF. If so, its a part of the Copy Activity options. Read the docs. If you are using python and no ADF pipelines, my response will not help.",Simple_Journalist_46,2025-07-30 17:34:21,2,dataengineering,t1_n5zld0g,False,
n609aox,lol! I asked on how to do the bulk copy and build the bridge table. Read ?,Few_Individual_266,2025-07-30 16:45:45,2,dataengineering,t1_n608mkm,True,
n65f9up,Dataflow is an option but it’s expensive . Using ADF pipelines but finding an alternative to change column names,Few_Individual_266,2025-07-31 12:03:22,1,dataengineering,t1_n60k4yi,True,
n69clb3,"I use Data Flows in my ADF pipeline to rename columns, haven’t found a workaround with the Copy activity unfortunately. Only other option I found was the Notebooks but that may be costly too.",poptropica4life,2025-07-31 23:42:35,1,dataengineering,t1_n65f9up,False,
n5p01pt,"You should sync each object seperately, and always use Foreign Keys instead of the connected object attribute.For ex: Let's say you have a contact / person entity. You should only sync attributes relevant to this person, but not from the connected objects like company, deals, etc. If you need information about the company, just join it using company id from the objects.I built a similar logic, and was pretty easy. Happy to help if needed.",PolicyDecent,2025-07-28 22:45:40,2,dataengineering,t3_1mbtb0x,False,
n61aby2,"This is a well documented limitation for the likes of Stich and Fivetran. They load the raw data so they dont really see that an update in Table B should trigger an update in Table A because that logic lives inside Salesforce. You can either replicate fully (expensive) or rebuild all logic in dbt (time consuming and annoying). Or, use can use Integrate or another ETL platform to build a visual work flow that- Pulls both Table A and Table B from SF- Perfoms a JOIN to correctly recalcuate the formula field based on the fresh data from Table B.- Loads final fully updated Table A into Snowflake.",Conscious-Comfort615,2025-07-30 19:36:36,2,dataengineering,t3_1mbtb0x,False,
n5qkrx0,"What is the biggest table you have to synchronize? If the data is not much, doing full table replication might be acceptable.",Nekobul,2025-07-29 04:25:25,1,dataengineering,t3_1mbtb0x,False,
n5qsim6,"This is not unique to Stitch. In general, I would not replicate formula fields or roll-up fields. Instead, create views or other tables which emulate these formulas in your target db. Fivetran also has this limitation.",GreyHairedDWGuy,2025-07-29 05:26:50,1,dataengineering,t3_1mbtb0x,False,
n5w4p8p,"Yeah that makes sense, thanks",Unusual-Affect-8310,2025-07-30 00:13:28,1,dataengineering,t1_n5p01pt,True,
n61eu58,Do you know any ETL platform that can do that? And but by Integrate do you mean integrating salesforce with snowflake directly?,Unusual-Affect-8310,2025-07-30 19:57:54,2,dataengineering,t1_n61aby2,True,
n5w4rds,"Got it, looks like it’s a pretty common issue",Unusual-Affect-8310,2025-07-30 00:13:48,1,dataengineering,t1_n5qsim6,True,
n67xguj,Umm.. Integrate as in Integrate.io. It was previously called Xplenty,Conscious-Comfort615,2025-07-31 19:23:57,1,dataengineering,t1_n61eu58,False,
n5wzc2u,I only know of 1 vendor that offers accurate replication of SFDC formula fields (in the situation you describe) but it has other faults and I prefer Fivetran.,GreyHairedDWGuy,2025-07-30 03:15:24,1,dataengineering,t1_n5w4rds,False,
n60didk,Which vendor is that? Want to look into it,Unusual-Affect-8310,2025-07-30 17:04:50,1,dataengineering,t1_n5wzc2u,True,
n5c0vb3,"Adopt dbt, train people how to use it, then slowly revoke all other access to the db (e.g. analysts pulling data directly then loading it back with Python).",davrax,2025-07-26 21:47:54,1,dataengineering,t3_1ma4aip,False,
n5dq39d,Why not use SSIS for your data transformation needs? You already have licenses for it so use it.,Nekobul,2025-07-27 04:26:34,0,dataengineering,t3_1ma4aip,False,
n5dj0rt,Thanks for the response.,looking_for_info7654,2025-07-27 03:33:16,1,dataengineering,t1_n5c0vb3,True,
n67nche,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-31 18:35:24,1,dataengineering,t3_1me9knz,False,moderator
n68lzxc,"Are you new to your team? Does your manager know about the skills/experience difference? Assuming yes to those, I’d work with your manager to define a peer/pairing type of mentorship with another member of your team. Better to tackle this head-on, rather than try to vibe code or bluff your way through. Production Infra isn’t something to take lightly.",davrax,2025-07-31 21:21:20,6,dataengineering,t3_1me9knz,False,
n66dgb9,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-31 15:03:02,1,dataengineering,t3_1me3ymx,False,moderator
n603z7n,[https://www.reddit.com/r/programming/comments/1md8fcw/comment/n5zwgnj/?utm\_source=share&utm\_medium=web3x&utm\_name=web3xcss&utm\_term=1&utm\_content=share\_button](https://www.reddit.com/r/programming/comments/1md8fcw/comment/n5zwgnj/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button),Temporary_Depth_2491,2025-07-30 16:20:46,1,dataengineering,t3_1md8f9n,True,
n5n9n7c,I offer paid mentorship in this area. DM me if interest ed,RobDoesData,2025-07-28 17:41:49,1,dataengineering,t3_1mbl92t,False,
n5qkot0,I’m interested,ManagementMedical138,2025-07-29 04:24:46,1,dataengineering,t1_n5n9n7c,False,
n5lvfdn,Here is the blog: [https://www.mitzu.io/post/designing-analytics-stack-with-streaming-and-event-driven-architecture](https://www.mitzu.io/post/designing-analytics-stack-with-streaming-and-event-driven-architecture),Still-Butterfly-3669,2025-07-28 13:42:35,1,dataengineering,t3_1mbgihi,True,
n5s8ac5,"Multigrain is good for bread, not so good for fact tables.",idodatamodels,2025-07-29 12:45:42,2,dataengineering,t3_1marnw3,False,
n5goupj,I should also specify that there is already a traditional snapshot source table (not dimensionally modelled) that captures balances with start and end date for each balance change,Boltonet12,2025-07-27 17:12:34,1,dataengineering,t3_1marnw3,True,
n5icvsg,"We do the snapshot thing and capture daily for the last month and monthly otherwise.  Those were the requirements.  At one point I was trying to think of a way to use a type 2 structure of customers and do some kind of cross join against a set of dates that would yield a view at whatever grain we needed (daily, weekly, monthly).  It wasn't hogh priority so I never went back to it, but probably wouldn't be too hard.  Downside would be the processing load to do the type 2 on a customer base that big.",Gators1992,2025-07-27 22:17:30,0,dataengineering,t3_1marnw3,False,
n5idnow,I would build a daily snapshot view that shows balances by day and then current / weekly / monthly could be 3 downstream views using different filters,wait_what_the_f,2025-07-27 22:21:51,0,dataengineering,t3_1marnw3,False,
n5j35zu,"If you work for a bank, especially one that has billions of accounts, you're probably regulated as to when these snapshots need to be taken and for whom. At that point damn the hard drive space, because it's all regulated environment requirements and hard drive space is cheap compared to a fine.",SaintTimothy,2025-07-28 00:53:37,0,dataengineering,t3_1marnw3,False,
n5s9l3k,"That’s the thing, the “grain” is a balance for that day, the only thing that makes it weekly/monthly is that day happens to be at the end of the week/month. There is no aggregation to get to the weekly grain or monthly grain. It’s truly daily data, but the consumers care more about the week end and month end dates so what I’m really asking is to have a daily snapshot table but remove dates we aren’t interested in to save memory/storage",Boltonet12,2025-07-29 12:53:15,1,dataengineering,t1_n5s8ac5,True,
n5sar7y,With the above being said; is what I’m asking something that has been done before or against normal practices,Boltonet12,2025-07-29 12:59:56,1,dataengineering,t1_n5s8ac5,True,
n5h3poh,"you dont need three fact tables,are you just building something to run agg on the balances? if the source already has the historization, you can model it such that each balance is one fact with a date dimension attached. Since you will have the start and end date of each balance, you can drive the weekly and monthly agg. and include them in the fact model,let me know if i didnt understood",Scepticflesh,2025-07-27 18:24:37,2,dataengineering,t1_n5goupj,False,
n5mfvnv,That could be a solution but my counter argument would be the requirements for data storage for the daily snapshot (it would be huge) and the other views would literally be a subset of the original daily snapshot data so personally I'd prefer a filter to get to that level.,Boltonet12,2025-07-28 15:23:43,1,dataengineering,t1_n5idnow,True,
n5swv5r,"It's a bad idea, [Keep to the Grain in Dimensional Modeling - Kimball Group](https://www.kimballgroup.com/2007/07/keep-to-the-grain-in-dimensional-modeling/)",idodatamodels,2025-07-29 14:53:26,1,dataengineering,t1_n5sar7y,False,
n63pcbp,openmetadata,QuaternionHam,2025-07-31 03:27:50,6,dataengineering,t3_1mdnx34,False,
n633w1z,AWS Glue,SquarePleasant9538,2025-07-31 01:17:13,3,dataengineering,t3_1mdnx34,False,
n64zy15,"shameless plug: I am the founder of the company, but take a look at [Bruin](https://getbruin.com) maybe?",karakanb,2025-07-31 10:09:08,2,dataengineering,t3_1mdnx34,False,
n64sbse,What's your current tech stack? It totally depends on what other tools you use right now.,PolicyDecent,2025-07-31 08:58:22,1,dataengineering,t3_1mdnx34,False,
n65qxsg,"You run into an interesting problem that has been around since Adam started counting apples. There are two sides of the data cataloging coin. One side, technical, is fairly easy and straightforward. Almost all RDMS's have a data dictionary that will normally suffice for the basic needs. The other side of the coin, the business meaning, has never really been solved. In other words, what does the data mean? It has always been a manual effort to get good quality business information about the data. It is almost a data project unto itself.This however is just the start. You will probably want to document lineage, transformation, quality, etc. Those are all needed and highly helpful but take time and effort to establish. I have never found a silver bullet for any of this. Lots of vendor out there claiming to solve the issues but none really do.",marketlurker,2025-07-31 13:11:27,1,dataengineering,t3_1mdnx34,False,
n68jwe8,Go on dbt and document your models. Period. You don't need a catalog nor a semantic layer at this level,Al3xisB,2025-07-31 21:10:57,1,dataengineering,t3_1mdnx34,False,
n63cob3,"While I agree, specially as it comes with a crawler for maintaining and populating the catalogs, the crawler is quite a headache to set up. Or at least it was last year, haven't worked on in since I changed jobs.",linos100,2025-07-31 02:09:31,2,dataengineering,t1_n633w1z,False,
n68gpcf,I am missing a proper Developer Reference Guide for RDBMs databases. The last decent one I had in my hands was for the HERE maps backend database we bought for one project we had.,tiredITguy42,2025-07-31 20:55:29,1,dataengineering,t1_n65qxsg,False,
n63jflv,It's not that complicated. It's a good option for batch processing. Then Glue Schema Registry for real-time analytics with Kinesis etc. Use Glue to catalog and version your schemas for you. It's cheap and easy for small-to-mid sized companies. Especially being it does crawl your data for you.,Tehfamine,2025-07-31 02:49:36,2,dataengineering,t1_n63cob3,False,
n5swctn,"I do a little of this for an energy efficiency utility, AMA",ratczar,2025-07-29 14:51:02,1,dataengineering,t3_1mcb8mf,False,
n5vj49a,"I work in a climate research institute as a data engineer. Where are you located? A lot of our funding comes from Horizon (EU) projects, you can do some exploration about (past) Horizon projects here: [https://cordis.europa.eu/projects](https://cordis.europa.eu/projects)",Zyklon00,2025-07-29 22:16:29,1,dataengineering,t3_1mcb8mf,False,
n5umpud,"Oh very cool !I guess just initially and more importantly to me here's some questions I have:1) What sort of tools//platforms do you use in your work and what are some of the daily tasks you perform?2) Where does the data that is being ingested come from in this sector? I hear electrical utilities using things like IoT sensors, to monitor energy usage etc. Depending on the sector, perhaps even things like weather data as well (wind, solar) 3) When you say energy efficiency utility does this involve employing smart grid modernization strategies? Does your data feed dashboards, digital twins, etc.?4) Would you say that you see a demand for data engineering skills in this sector?",Green-Tea-21,2025-07-29 19:39:56,1,dataengineering,t1_n5swctn,True,
n5zn6m3,Incredible !! I’m located in Washington DC area of USA. What sorts of tools do you use on the job ? I’d imagine a lot of remotely sensed datasets - do you use Apache Sedona at all ? Is there a demand for data engineers in this space ?,Green-Tea-21,2025-07-30 15:00:22,1,dataengineering,t1_n5vj49a,True,
n5usgbz,"1. SQL server, SSRS, Python, Airflow, Snowflake. There's some GIS work involved as well to measure where we're working and what the people in this areas are like. We do a lot of compliance work - data products being created to share with state regulators and auditors. 2. We're generating some of it ourselves via our engineering teams, who are looking at buildings and quantifying impacts and expected savings. Weather data is big, as is data from partner utilities. Also data from solar inverters and smart meters (the IoT you mentioned)3. Actually no! We do building retrofits/home upgrades and estimate and measure the energy savings that result. We get a lot of our funding from states and utilities. We do have some dashboards (too many)4. Data engineering requirements for us are about compliance and quality - automated quality checks, integrity checks, matching and joining datasets across domains. Elsewhere in the power sector you'll see a lot more streaming data as folks are trying to monitor the output of power stations and plants and turbines - you're basically checking to make sure everything works safely. The pay is relatively less than other sectors but by God is it stable, we lost 15%+ of our revenue when the Feds cancelled contracts but we've had no layoffs.",ratczar,2025-07-29 20:07:09,1,dataengineering,t1_n5umpud,False,
n5zyovi,"It depends on the project. A lot of it is also data management and deciding on how to do stuff. Gathering data and developing methodologies. But I think for climate research with the current administration in the US, there is not a lot of funding...",Zyklon00,2025-07-30 15:55:36,1,dataengineering,t1_n5zn6m3,False,
n5zobul,"Excellent stuff ! Ok , sounds like you use a lot of the standard tools of data engineering applied to a super interesting use case. What sort of data from partner utilities do you use ? Also , could you expand on the way you use data engineering here ? You said compliance and quality checks - is that in the data itself or with the nature of the operation ? As much as you’re able to divulge , could you give an example ?",Green-Tea-21,2025-07-30 15:05:59,1,dataengineering,t1_n5usgbz,True,
n5i1z9r,"I would look into dynamic DAGs. Instead of one pipeline doing dynamic tasks, it would generate a DAG per table based on list of configs.",Pledge_,2025-07-27 21:18:56,3,dataengineering,t3_1mav3sj,False,
n5hnrz2,I would store files like configs somewhere on the hard drive of the server that runs Airflow (probably in Docker) and make that files available to the Docker container. S3 just to be used for data files thst are supposed to be ingested into Redshift,Cpt_Jauche,2025-07-27 20:06:21,2,dataengineering,t3_1mav3sj,False,
n5hrzxt,"I do a config pipeline with dagster. There will always be a little bit of coupling because of the logic to pare the config. With that, and because we want to make the config immutable, we put it with the docker container that’s deployed. The EL code references the file locally.The drawback of putting the config in s3 is having safeguards around changing the file and if you want clear history of the Config.",dr_exercise,2025-07-27 20:27:45,2,dataengineering,t3_1mav3sj,False,
n5ie9hr,Is it okay to store the config with airflow? Should i have a separate config for the list of tables and a different config for the tables' ddl structure? How would you go about designing the overall architecture?,afnan_shahid92,2025-07-27 22:25:16,1,dataengineering,t1_n5i1z9r,True,
n5i2ak8,"I want to create a separate ecs task for each table, with the approach you are recommending, how do i go about it? Do i use dynamic task mapping?",afnan_shahid92,2025-07-27 21:20:35,1,dataengineering,t1_n5hnrz2,True,
n5hw9oi,"A follow up question to this, i want to create a separate task for each table. Is there a straightforward to do this in airflow or dagster? How do you get this information from the config file given it is stored in the docker container?In the workflow you implemented, were you running it on all the tables sequentially or were they being processed in parallel?",afnan_shahid92,2025-07-27 20:49:22,1,dataengineering,t1_n5hrzxt,True,
n5jelfr,"Typically you create a git repo for the DAG and then have a separate repo for the configs. The DAG iterates through the configs and creates a DAG per config file. I typically use JSON, but YAML would work too.The DAG can reference the files on the Airflow filesystem or a blob storage, it would all be defined in Python. The config CI/CD pipeline will copy the files to where your DAG references them, your DAG CI/CD pipeline will deploy to wherever your airflow DAG bag refreshes.The dynamic DAG can be as flexible as you want. For example create all the same tasks but with different parameters, or it can dynamically create different task structures based on the config. Every time the DAG bag refreshes DAGs will be updated or created based on what’s in the config directory. You can then manage each resource separately and see its history in the web portal",Pledge_,2025-07-28 02:04:53,2,dataengineering,t1_n5ie9hr,False,
n5lbuor,"Factory pattern: https://dagster.io/blog/python-factory-patterns. I believe airflow offers something similar but haven’t used airflow in a while. The config is referenced by the EL pipeline. I usually write a pydantic settings file to parse the config and making reference to the file like `Path(__file__).parent.joinpath(“config.yaml”)`. The pipeline, Including config, is built in a dockerfile then deployed.",dr_exercise,2025-07-28 11:43:17,1,dataengineering,t1_n5hw9oi,False,
n5ge2wi,**\*For Postgres\***,Temporary_Depth_2491,2025-07-27 16:20:29,3,dataengineering,t3_1maqe1u,True,
n5b5pix,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-26 18:56:39,1,dataengineering,t3_1ma19ck,False,moderator
n5bj6it,"For operational use cases - take the data, do something to it, send output to some downstream system - your instinct is correct in that trying to shoehorn the “medallion” concept into this sort of flow can be counterintuitive. My team and I went through a lot of back-and-forth on whether we wanted to support such use cases in our Databricks environment, or wanted to keep them separate. There were arguments to be made for separate - the data volume of these use cases is lower than our analytical workloads, and so Azure Functions/Logic Apps could be sufficient. However, then we would need to use a non-Databricks orchestrator, which would be a bit annoying for some of the multi-step operational workflows. Doing it in Databricks meant that all of our data jobs live in one place and are orchestrated through one set of tools, regardless of whether they’re operational or analytical in nature. Databricks Asset Bundles have been great for us in this regard, in terms of allowing us to define our job configurations as code. Once we got past that, we came back to the medallion. We landed the operational data in its own schema in our bronze catalog, but rather than moving it to “silver”, we created an operations catalog that serves as the use-case layer for all of these operational pipelines. They’re still sourced from bronze, and in the future, we might source analytical “silver” tables from either the bronze or operational catalogs, but this approach has been working well for us.We leverage Databricks secrets (backed by Azure Key Vault) for all of our connection secrets, and give our service principals READ access to the scope in each environment. We have also modularized our code for SFTP/FTP into a helper library so we don’t have to maintain the same logic in each pipeline. We try to stick to asynchronous patterns for our downstream writes (e.g. we drop off a file somewhere and some downstream system picks it up), but if we had to, we could also make a direct API connection and write our data that way. We just haven’t really had to do that for our use cases thus far.",worseshitonthenews,2025-07-26 20:10:05,3,dataengineering,t3_1ma19ck,False,
n5ffrst,"Thanks for the response! It sounds like we are on the right track. We left off last week deciding to land the data in bronze and then separate downstream data from silver/gold, just need to align on specifics of how to organize that data.I've read about DABs, but I'm not a developer myself, and I've struggled to understand how it can help our team. Do you have any pointers there?Also curious what your SFTP code does. Our typical pattern is to drop the file on an on-prem server and use a separate MFT application to manage scenarios where we need to push files to an external source, but maybe there's a better way we can consider as we design our new standard.",Full_Metal_Analyst,2025-07-27 13:19:38,1,dataengineering,t1_n5bj6it,True,
n5nvgte,"Just think of a DAB as a representation of your job logic as code. The tasks, dependencies, cluster configurations, etc. DABs allow you to deploy your jobs from a version-controlled code base rather than needing to configure them manually in the UI. Especially when you’re working in a multi-environment space (dev > test > prod) this simplifies your life by alleviating the need to deploy jobs manually via the UI in each environment. Our SFTP helper library is basically just a wrapper around paramiko (a library that offers a Python implementation of SSHv2). By passing a few secrets to our helper class, the helper handles the rest and supports both key and credential-based auth. It saves us from having to write the same 30-40 lines of code in each pipeline, since we can instantiate our connection object with a single line of code. Our class also has prebuilt functions for getting/putting a file, checking a hash of a file against a previous version, and a few other operations we have found helpful.",worseshitonthenews,2025-07-28 19:24:46,1,dataengineering,t1_n5ffrst,False,
n61jtew,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-30 20:21:26,1,dataengineering,t3_1mdhd2r,False,moderator
n5lq1zp,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 13:12:54,1,dataengineering,t3_1mbftbx,False,moderator
n58o5gq,"You can definitely use GraphX the graph library of Spark if you need to compute the shortest path between all nodes. Although the API is a bit confusing.Otherwise if it is just computing the path between 2 given nodes and doing so more sporadically, then maybe look into storing the graph in a graph database, like neo4j",ManonMacru,2025-07-26 09:57:46,3,dataengineering,t3_1m9nc41,False,
n59ekvn,Try igraph.,Budget-Minimum6040,2025-07-26 13:19:29,1,dataengineering,t3_1m9nc41,False,
n5b3dqr,will we be able to calculate all the paths between all nodes in a single go?,NenavathShashi,2025-07-26 18:44:05,1,dataengineering,t1_n58o5gq,True,
n5besw8,"Well, ""in one go"" is not very precise. It is possible to do so in a single spark batch job yes.But do realize that computation can be expensive depending on the size of your graphs, disjktra algorithm is n^2 in terms of complexity, and the result is also n^2.The smaller the average graph is the faster your processing will be, as it can be parallelized by Spark. I really hope you don't have a single 400 million graph. Then the size of the result and the computation are ungodly.",ManonMacru,2025-07-26 19:46:12,2,dataengineering,t1_n5b3dqr,False,
n5jc420,"Yeah, unfortunately it won't be feasible to compute and store the (400 million)^2 shortest paths all at once / in advance. You'll probably need to calculate the shortest paths of two nodes on demand as needed. GraphX / GraphFrames make sense if you're working with Spark.",structure_and_story,2025-07-28 01:49:28,1,dataengineering,t1_n5besw8,False,
n54z1g6,Volumes is the new recommended approach since it’s governed through Unity Catalog.,Purple-Assist2095,2025-07-25 19:04:44,5,dataengineering,t3_1m97ric,False,
n54zwdb,Thanks for your reply :smiling_face:So basically it is replacing mounts? And files stored in volumes are “accessible” through azure blob storage?,Responsible_Roof_253,2025-07-25 19:08:55,1,dataengineering,t1_n54z1g6,True,
n551xmj,Yes exactly,Purple-Assist2095,2025-07-25 19:18:58,1,dataengineering,t1_n54zwdb,False,
n5523g8,My man! Thanks a lot - for some reason this was very confusing for me when reading the docs,Responsible_Roof_253,2025-07-25 19:19:46,1,dataengineering,t1_n551xmj,True,
n51xpfx,"First just dump every API hit as one‑line JSON into cloud storage, grouped only by day or hour like `raw/hotel_api/date=2025‑07‑25/`. No need encode star rating or guest count in path; that info is inside the JSON and query engines can read it later. Cheap storage lets you keep whole history for replay.Each night run a compact job with Spark or any lake engine. It reads yesterday’s tiny files, writes a handful of big Parquet or Delta files, then deletes the fragments. Big files mean faster scans and less metadata load. Create a lake table on top of those compact files and partition by the field you filter most, usually `check_in_date`. Too many partitions slow things instead of helping.Flatten and enrich data in a second pass, then load it into a serving database like Postgres and put indexes on hotel\_id, date, guests. The lake stays the single source of truth, the SQL db is only for fast API reads. If something breaks you just replay from the raw JSON folder and rebuild everything. Simple flow, little maintenance, still keep all the data.",bcdata,2025-07-25 08:47:33,2,dataengineering,t3_1m8tc37,False,
n53do30,"Thank you for the advice, this seems very solid. I think querying multiple raw json files might be a bit slow, but then if I’m using the lakehouse as a source of truth I doubt I’ll have to do this often if at all. Thanks your help!",kingofthesea123,2025-07-25 14:36:24,1,dataengineering,t1_n51xpfx,True,
n54ker0,"Do consider that put requests are charged for nearly all cloud storage services. You should definitely batch to a much larger number, 5-10k. There are no downsides to immediately using sql, a table in sqlite that has an autoincremint id of the request, when the request was made, and a text column that has the raw response. Personally I wouldn't use the cloud and only a local db unless you're getting into 100s of gigs of data. Even then a simple rsync of the local sqlitedb to s3, would work. You can always add more complexity and redundancy but if you're prototyping a mvp choose what's worth it. Also remember writing *into* cloud storage is generally free, bandwidth wise. But it's not free to read it back.",FridayPush,2025-07-25 17:54:28,1,dataengineering,t1_n53do30,False,
n58bdvk,"Thank for your response. Definitely while I’m prototyping I’m not going to be using cloud services, I’m more concerned with building it in a nice way to a) teach myself best practices and b) ensure the design would scale if needed. What would be the benefit of storing raw json in an sql table over a directory? I guess querying by request time .ect would be faster? Maybe less overhead with filesystem metadata? I think I like this idea more than raw json, just curious to hear your take on it.Thanks for helping!",kingofthesea123,2025-07-26 07:51:09,1,dataengineering,t1_n54ker0,True,
n5b30tf,"Guess I'm very proficient with SQL and any scripts that I'm writing usually use sqlalchemy or similar which supports most any database. So if I'm at a point that I want to productionize my prototype the codebase is mostly ready. Two other points would be metadata. I almost always want to record when the record was fetched, as the time series makes it easier to observe patterns or know when a job wasn't performing correctly so I can disregard it's responses. Like maybe the hotel returns cheaper prices for future reservations on Mondays than on Saturdays. Or if my request was made with an apple device identifier vs a windows one. Lastly performing any updates to data is easier in a DB. Plucking attributes from inside the json to it's own column for filtering/indexing is simple. Or while processing each new batch of data I can perform a ranking to generate an SCD2 type table of differences with lags can help reduce storage over time (ie have a record for each change rather than a record for every request). I generally never use sqlite anymore and use duckdb as I like it's datatypes more. I mentioned sqlite as I think more people have heard of it.",FridayPush,2025-07-26 18:42:10,1,dataengineering,t1_n58bdvk,False,
n50zjrd,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-25 03:55:50,1,dataengineering,t3_1m8p7pm,False,moderator
n51024f,If you want to learn more DE it seems detrimental to take a job somewhere you’ll be the sole DE resource.,GrumDum,2025-07-25 03:59:25,8,dataengineering,t3_1m8p7pm,False,
n51pjg6,"Its not just about being a DE, but also being the only person the rest of the business works with. If you are confident in your ability to handle possibly non technical senior execs of the business, fine.But if you havent gained that experience, they arent technical, it can be absolutely brutally challenging.",umognog,2025-07-25 07:29:29,1,dataengineering,t3_1m8p7pm,False,
n56uxyk,"With the details it will be hard to give good advice.Do they have tech stack decided, which gave a better interview, travel time if not remote, etc.",redditreader2020,2025-07-26 01:08:16,1,dataengineering,t3_1m8p7pm,False,
n5wmfmf,"I went from being the only tech person in a team, to being one of many engineers in a global team. There's benefits to both, but I work harder now, but I am more motivated, enjoy work more, and have learnt more in the past year than I have in the four before that. My employability has also shot up significantly. That's not to say that a team is always great, but a great team is high value. Like they say, if you want to go fast, go alone; if you want to go far, go together. I would very much assess the roles based on who you would be working with. The exception to all of this is if the company looks good and can give you lots of stocks as part of the package - sometimes this can be extremely lucrative.",PossibilityRegular21,2025-07-30 01:55:55,1,dataengineering,t3_1m8p7pm,False,
n511rsm,"Agreed, I was in OPs position a few years ago. Hired as sole DE resource. The stack worked fine once I had it all set up, but I had no one to learn from or help take it to the next level. It basically stayed at beginner level with very few innovations",ntdoyfanboy,2025-07-25 04:11:37,2,dataengineering,t1_n51024f,False,
n5121ch,Okayy...... but what made you think learnings would be lesser?! Coz I couldn't work with senior folks if I opt for a young Startup?!,Any-Homework4133,2025-07-25 04:13:31,1,dataengineering,t1_n51024f,True,
n56z8ql,"Younger startup has hybrid, tech stack is Databricks, any cloud platform, Gen AiThe other one - 5 days wfo- Azure Databricks",Any-Homework4133,2025-07-26 01:35:19,1,dataengineering,t1_n56uxyk,True,
n512i2j,Was it challenging?! Coz I am more scared over there? Also there were no learnings?!,Any-Homework4133,2025-07-25 04:16:49,1,dataengineering,t1_n511rsm,True,
n512lci,"Because you, and only you, are the person doing dashboards for their VC overlords.And, likely in both jobs,",chock-a-block,2025-07-25 04:17:28,1,dataengineering,t1_n5121ch,False,
n671xv6,Ditch the .NET orchestrator fast. Airflow/Dagster + dbt will make you marketable—Python skills already give you a head start. Snowflake’s optional juice.,EffectiveClient5080,2025-07-31 16:57:42,3,dataengineering,t3_1me6mgb,False,
n68chxd,"A couple of years ago at did a short POC with the product when we were looking to replace some Fivetran integrations. At the time, the product didn't seem as robust as we liked, so ultimately we stopped looking at it after the two week trial. Things could have changed in the years since",ntdoyfanboy,2025-07-31 20:35:45,1,dataengineering,t3_1me33o5,False,
n5u86f3,"Make a YouTube channel and teach there or create a free Udemy course. You might even be able to make an income from it in the future.Maybe you're being sincere but this post screams scam.Edit: just seen you have a YouTube linked on your profile ( not saying it's legit, maybe it is).",Lego_Division,2025-07-29 18:31:38,346,learnprogramming,t3_1mcemxd,False,
n5tppz2,This seems phishy :winking_face:,Embarrassed-Form5350,2025-07-29 17:07:48,234,learnprogramming,t3_1mcemxd,False,
n5u75sj,Spidey sense is tingling,MrKnives,2025-07-29 18:26:55,51,learnprogramming,t3_1mcemxd,False,
n5ugqg2,Last time someone offered free mentoring it did not end well. I really hope you don't keep kids in your basement mate.,wmute,2025-07-29 19:11:22,47,learnprogramming,t3_1mcemxd,False,
n5xg4bs,"Make a youtube video about teaching process and how it goes, how student code improves and so on. In that case you would help more than 5 in 3 months.",V---y,2025-07-30 05:19:35,10,learnprogramming,t3_1mcemxd,False,
n5tc9kf,Any chance you'd continue this trend and create another cohort 2 years down the line?,damian_wayne_ka_baap,2025-07-29 16:05:34,19,learnprogramming,t3_1mcemxd,False,
n5uhw40,"Hey Imanol, I would love to talk to you about an idea that I had.I am a self taught programmer (I also got a very poor free Data analytics bootcamp from the unemployment office in Germany). I worked as a chef for 10 years and before that in media and now I transitioned to programming.One thing that was worth it from the bootcamp that helped me a lot was the access to mentors. I have been thinking that it is a shame that a lot of people pay so much money just to access to a weekly 30 min call with a mentor (sometimes even less). The material to learn is already online with even well structured tutorials or learning path, but free mentoring options are missing.I have been planning for quite some time to build a website in which programmers and other professionals can offer free mentoring options for people who are learning or starting. It doesn’t have to be for a long time or long sessions but some guidance or even code review could work. Would you be open to help me build this project? Would anybody be interested in something like this? Does a similar platform exist? It has to be completely free of charge (kind of like freecodecamp but for mentoring)",Hydnum_repandum,2025-07-29 19:16:51,9,learnprogramming,t3_1mcemxd,False,
n5tyxop,"This is an insanely generous offer. OP is offering to commit 2 1/2 hours daily towards 1-2-1 mentoring, for **free**!If you have time and/or energy, it would be absolutely invaluable if you wouldn't mind providing monthly updates to the sub:- progress of 5 mentees- common issues- feedbackIt would also be interesting to understand knowing what you would know 1 month later, what would you have done differently? I personally think that you are heading for burnout with such a daily commitment. Look after yourself, and don't be afraid to changes things if the commitment proves too challenging.Really hope that your mentees are genuinely focused, put the necessary work in, and put your guidance into practice to really propel their progress.You are doing the Lord's work!",putonghua73,2025-07-29 17:49:07,22,learnprogramming,t3_1mcemxd,False,
n5w5yli,"Mentorship like this is rare, especially from someone who's been through the self-taught trenches. You're basically giving people a map through the fog - and that’s priceless.",alpinebuzz,2025-07-30 00:20:42,2,learnprogramming,t3_1mcemxd,False,
n5xr8xs,"Good luck. I offered the same thing here few months ago as a self-thought dev with 20+ years of experience. Picked 3 people, all of them flanked",SoftwareDoctor,2025-07-30 06:59:36,2,learnprogramming,t3_1mcemxd,False,
n6017ps,"Don’t do LeetCode. It looks nothing like real projects. Come up with a basic project idea, write up a blueprint for it, and then suffer through the coding. Use stack overflow or other classic sources when you get stuck (or use man pages and other official documentation, even better.)There’s no easy way to learn. It takes time, patience, and effort.",ATD67,2025-07-30 16:07:33,512,learnprogramming,t3_1mdacq9,False,
n600fux,"You just got addicted to finishing the assignment rather than struggling through it.. You're in deep deep trouble in terms of your long term career, but nothing you can't fix. You're just going to have to pull yourself up by your bootstrap, and struggle through the process of writing code without looking. Use the documentation, divide bigger problems into smaller ones and solve them..I too use gpt, but more to guide me rather than to get answers directly..",LoL_is_pepega_BIA,2025-07-30 16:03:49,383,learnprogramming,t3_1mdacq9,False,
n603ztv,"Don’t waste your time with the leetcode nonsense, and skip the endless tutorials. Nobody actually learns like that, what they do is use those things to delay the learning process while feeling like they’re still doing something. Pick a project, start building it yourself, just look up the very specific things you need, as you need them, you’ll learn rapidly and if you can dedicate a solid month to it full-time, you can be a passably competent junior dev in that time. There’s a reason so many people on here think it’s all very confusing and spend years getting nowhere, and it’s because they’re trying to memorise the entire recipe book before they’re willing to try cooking for the first time. If you want to learn how to make a chair, you can spend months learning about different woods, their density, different joins, the history of different chair architecture, and it all seems very complex. If however, you grab some random bits of wood and some nails, you can make your first chair in no time, and then look up specifically how to improve it, learning as you go, and become competent much faster and without drowning in useless information you’ll forget anyway because you’re not using it.",Kezyma,2025-07-30 16:20:50,101,learnprogramming,t3_1mdacq9,False,
n600pl1,"You're not alone, this is a very common thing. It sounds like you need to take a step further back than learning DSA. Like, back to the basics. You probably have gaps in the very fundamental stuff, which all needs a lot of practice - a lot more than most people realise. Get a book / go back through all your course material / see a tutor / use all your college/universities resources (ask for help) and most importantly \*practice\*, do challenges, do exercises, all of it. If you're in college you're paying a lot of money to be there so...use whatever resources they have - office hours, etc.My guess is you rushed through all the assignments, even the basic ones, and used help / AI / whatever to finish them. And now you're stuck because you didn't do any learning.Completely forget about AI for now. You need to actually \*learn\* by doing. Learning happens by being put in uncomfortable (but still reachable) situations and grinding through it, and then gradually increasing the difficulty.",racingking,2025-07-30 16:05:08,47,learnprogramming,t3_1mdacq9,False,
n60ciyk,"You can keep using ai, just change the way you use it. Talk to it as if it were a teacher or friend helping you set up a project:Instead of “create a windows desktop app” ask “how do i create a windows desktop app?” dont let it do stuff for you, allow it to give suggestions and propose changes, but make sure that anything the AI is doing, you will be able to do next time. If the AI does or suggests to do something you dont know how to do yourself, ask it what that is or how its done.AI is a great learning tool if you use it as such.I recently wanted to do something and AI suggested using a denounced search and suggested code for it. I didnt knew like 3 methods it was using or what a debounced search actually is, so my next 3 prompts where asking the AI to explain what a debounced search is and how the code it suggested actually works. Even after this i was very unfamiliar with the methods being used, so my next step was jumping into microsoft documentation to see the definition of these methods. Now i can confidently say i could come up with this approach on future projects.",GODstonn,2025-07-30 17:00:23,24,learnprogramming,t3_1mdacq9,False,
n60djwk,"I worked with a girl who insisted on turning off autocompletion, because she was afraid to forget things and get lazy. It made her a better developer than almost everyone else I ever worked with. You should force yourself to use you mind and memory more.",Narrow-Coast-4085,2025-07-30 17:05:02,8,learnprogramming,t3_1mdacq9,False,
n60b0v8,"Yeah you fucked up. Just realize that you’re not the only one who is making this mistake, there’s an entire generation of students who are going to do the same thing and the majority of them aren’t going to bother fixing it, hit their first technical and realize they cheated themselves out of a job and now they have tens of thousands in debt.I would take a semester off or check to see if you can do a personal project course. I’d pick up a project like a path finding visualizer, sudoku solver, something advanced in terms of DSA. Commit yourself to that project 100% and then make a vow to never use AI again, at least until you’re a couple of years into your job and your management is making you use it.Good luck",pyordie,2025-07-30 16:53:42,7,learnprogramming,t3_1mdacq9,False,
n60h7fu,"> But maybe I should just do it anyway? Yes.But frankly, the root cause of the ""hell,"" AI or otherwise, is a lack of curiosity. People who are stuck are stuck because they aren't actually curious about how this stuff works. I don't know how you fix that. Either you're curious about this stuff or you aren't. And if you aren't, I don't want to work with you.",POGtastic,2025-07-30 17:21:18,13,learnprogramming,t3_1mdacq9,False,
n5zzu3j,"Tutorial hell is a million times better than AI hell because even if you're stuck in tutorial hell, you're still learning and internalizing, and once you get out most of that will stick.So, yes. Go through that. Forget AI exists. Assume it's 2020 and the best AI can do is one sentence that makes sense about half the time.",NamerNotLiteral,2025-07-30 16:00:56,32,learnprogramming,t3_1mdacq9,False,
n601vku,"They way I learned was taking like 5-6 courses on udemy mostly from Tim Buchalka. He has courses for Java, Python, C++ (this is done by someone else part of his coding academy, but also very good). These are really top rated and you have 60+ hours in the course.They helped me understand the basics and then advanced features. Those courses explained concepts way better than any university professor I had.",Sea-Offer88,2025-07-30 16:10:45,3,learnprogramming,t3_1mdacq9,False,
n5atuzp,"YAML was designed for human editing, JSON was not. YAML is for configuration, JSON is for serialization.",falsedrums,2025-07-26 17:53:45,671,learnprogramming,t3_1m9yyba,False,
n5apnwi,"I can’t really say why we collectively did it, but here’s why I prefer it.1. Less punctuation noise - you don’t have to surround each key with quotes or delimit with commas2. References! You can create anchors and reference them later. This is something we lost on the move from XML to JSON3. You can add comments4. It’s a superset of JSON, so if you have a YAML parser, you have a JSON parser.",jonwolski,2025-07-26 17:32:25,115,learnprogramming,t3_1m9yyba,False,
n5aovec,JSON is also a picky format I personally think. Especially the no comments part and the annoying comma. YAML is also way easier to read for me than JSON but I suppose that is personal preference.,slashd0t1,2025-07-26 17:28:23,167,learnprogramming,t3_1m9yyba,False,
n5axnaq,"You don't have to keep writing """" for each string value, or { } for each nested blockyaml: root: object1: value: x subsection: value2: y object2: value: x subsection: value2: y neat and tidy. in json: { ""root"" : { ""object1"" : { ""value"" : ""x"", ""subsection"" : { ""value2"" : ""y"" } }, ""object2"" : { ""value"" : ""x"", ""subsection"" : { ""value2"" : ""y"" } } } }a lot more overhead and a bit of a pain when you forget , after subsequent values. it is more clearly demarcated where on section ends (in yaml it's indentation that governs what belongs together) but for what it is used for, configuration files and the like it is quick enough to see what belongs together without it being a hindrance.",josephblade,2025-07-26 18:13:26,19,learnprogramming,t3_1m9yyba,False,
n5b1nfi,"JSON is a terrible configuration format. It doesn't allow comments, it has needless 'punctuation' (all the opening and closing braces and quotes), and certain things are awkward (like defining strings with escape characters).YAML is better .. but also kind of terrible with a bunch of weird gotchas (e.g. https://www.bram.us/2022/01/11/yaml-the-norway-problem/)",_jetrun,2025-07-26 18:34:47,11,learnprogramming,t3_1m9yyba,False,
n5avbp3,"Human readability and commentsIf you don’t like YAML, you’ll probably like this article: https://www.arp242.net/yaml-config.html",cc_apt107,2025-07-26 18:01:18,9,learnprogramming,t3_1m9yyba,False,
n5b6wtz,"One more benefit for yaml: if you dislike it, you still can write json and parse it as yaml.",None,2025-07-26 19:03:04,8,learnprogramming,t3_1m9yyba,False,
n5baawj,"YAML looks friendly with its clean syntax, but one rogue space can wreck everything. JSON’s stricter, but reliably boring, like that friend who’s always on time. YAML feels nicer until it doesn’t.",alpinebuzz,2025-07-26 19:21:32,8,learnprogramming,t3_1m9yyba,False,
n5aovny,TOML is better than both IMO,ChickenSpaceProgram,2025-07-26 17:28:26,18,learnprogramming,t3_1m9yyba,False,
n5avd83,Overall yaml is a bit less verbose and human readable than json and is also a superset of json. Any valid json is also a valid yaml but the reverse is not true obviously.,nicolas_06,2025-07-26 18:01:31,3,learnprogramming,t3_1m9yyba,False,
n5k8e98,"This is not an attribute unique to programmers. No matter where you go in life from here, you will encounter those people.",Own_Attention_3392,2025-07-28 05:45:21,470,learnprogramming,t3_1mb7ysd,False,
n5k7huf,Yeah I’ve had similar experience during my school time. However I’ve had way better experience in work life. Lead programmers where down to earth and really helpful and nice.,wirrexx,2025-07-28 05:37:17,106,learnprogramming,t3_1mb7ysd,False,
n5k8eo8,"I have answered this in similar threads. I'm in my 50's. When I was starting my career, I was full of myself. I could do no wrong. Everything I wrote was fantastic. Then, after four years in, I taught a C programming class a few semesters at a community college. I got so humbled so quick. Only an asshat keeps the ego. A good developer will know when to pause and ask questions. The best quality I've seen in a developer is ability to ask questions. We never stop learning.",GotchUrarse,2025-07-28 05:45:28,57,learnprogramming,t3_1mb7ysd,False,
n5kacin,"Only bad developers have big egos.This is how I classify developers Junior: doesn't know anything so asks questions Mid: thinks they know everything, never asks questions Senior: knows what they don't know; isn't afraid to ask questions Staff: ask everyone questions so they all see the error of their ways",NiteShdw,2025-07-28 06:02:41,68,learnprogramming,t3_1mb7ysd,False,
n5k80d4,"I would tell your professor that it's making it difficult for you, and ask if you can change groups or work independently. If you feel like it, that is.",Key_Storm_2273,2025-07-28 05:41:53,17,learnprogramming,t3_1mb7ysd,False,
n5katwt,"Yes, this is a tale as old as time. These arrogant pricks are all over. To top it off, they usually aren't that much better or even better than average at all. They're just  more cocky and outspoken. It's why I always hated group work in college. I really wish they didn't bother with it in college. It doesn't really emulate the real world the way the professors think it does.",Piisthree,2025-07-28 06:07:06,11,learnprogramming,t3_1mb7ysd,False,
n5k7xmv,"It's not uncommon, but then it's not uncommon in other professions either.I used to work at an advertising company, and yeah, no shortage of egos.Most developers I know are basically not egotistical, they're pretty confident in their abilities, but don't shout about it, and certainly don't try to pretend they're above anybody else.Big egos aren't rare, but they're not the norm either. I'm not sure if it's much different from any other profession. Are surgeons known for their tiny egos? Lawyers? Police officers?I'm not sure big egos are more common in software development than anywhere else.",ToThePillory,2025-07-28 05:41:12,16,learnprogramming,t3_1mb7ysd,False,
n5k9j6q,I’ve been a professional software engineer for about 25 years. I’ve been lucky enough to only really encounter one person like that at work. I don’t think it’s something you’re guaranteed to have.,gopiballava,2025-07-28 05:55:25,6,learnprogramming,t3_1mb7ysd,False,
n5lbgn1,"Sometimes people who seem like they have massive egos and come off as condescending just have poor social skills, or simply different values that mean they don't care about offending others (for better or worse.)It's not necessarily due to them being malicious, narcissistic or even having an egregiously large ego, although it might seem to you that there is something ""wrong"" with them. It can just as easily be due to them having a genuinely held negative perception of collaboration or just not enjoying working with others for their own personal reasons, and whether or not that is a ""problem"" depends on perspective and opinion.Not being pleasant doesn't mean someone is a ""bad"" person.I know that it can be very frustrating to work with someone who isn't naturally co-operative, but assuming it's all about ego doesn't do you any favours. The more you judge others harshly the harder you will make it to collaborate with them. Being diplomatic and negotiating to find a genuine compromise will get you far, but it will take some initiative and persistence.There are other kinds of people who are difficult to work with, such as people who are highly social or charming but don't actually do any work and will make you feel like an asshole if you try confronting it. Being pleasant doesn't mean someone is a ""good"" person.",Isogash,2025-07-28 11:40:28,6,learnprogramming,t3_1mb7ysd,False,
n5k98qc,"Yes. It is not only in uni.There are smart guys in IT. However, sometimes being smart is not always matched with “being nice”.You would need to learn to deal with this.",progmakerlt,2025-07-28 05:52:50,5,learnprogramming,t3_1mb7ysd,False,
n5bb3wm,Easy syntax. Libs for every-damn-thing. Good (enough) performance.,an0maly33,2025-07-26 19:25:56,539,learnprogramming,t3_1ma1voq,False,
n5bdzah,"As a teacher, it’s a great fit for academics and beginners, due to its simple syntax, library availability and real-world relevance. In other words, it’s the easiest general-purpose language that’s also used professionally. The rest of the teaching world agrees.As a result, most people start off learning Python nowadays. That’s pretty much why.",Joewoof,2025-07-26 19:41:45,185,learnprogramming,t3_1ma1voq,False,
n5bbtif,"As a non-professional but an AP CS teacher, Python makes most things ridiculously simple compared to other languages, plus it can kind of do everything (even if some other languages do it faster). It can be used in multiple paradigms, is very readable, and can be used on a ton of different things.",Schweppes7T4,2025-07-26 19:29:49,18,learnprogramming,t3_1ma1voq,False,
n5baxx8,Python can do everything and someone has already made a package for it. Python works really low level and with hardware. Python works well on low power devices.  Python powers a lot of AI. Are some reasons.,hubertron,2025-07-26 19:25:01,67,learnprogramming,t3_1ma1voq,False,
n5bcrt0,"Python is approachable in ways other languages aren't. I'm a lawyer and by far the most progress I made with programming has been with Python. The only big snag with Python is working with virtual environments, which some beginner books don't mention--or they do, but it's at the end where most people stop reading. I did a little C++ and I enjoyed the static typing a lot, but found that it's really a programming language that you need to be an adult to use. As in, you need to be aware of, and properly manage, a lot of different things. For someone like me, it's just not possible at this stage in my life to effectively use C++. But Python does a lot of things in the background for me, and allows me to get to my end goal much faster.",Fluid_Visit2770,2025-07-26 19:35:04,13,learnprogramming,t3_1ma1voq,False,
n5bcppd,"Python has been trending for years, it's a powerful language that is also beginner friendly. In my own fields of work python was also commonly the language of choice for API access to proprietary engineer software (biomedical field). More recently, AI and Data science have become two key trending areas in tech. A lot of startups and spin outs are coming from university research groups. Much of the tools developed by these academic groups just so happens to be written in python. As people filter through the university and inevitably go on to work (either as employees or startup founders) it makes sense that they would stick with the languages and tools they know well.That's my 2 cents anyway.",GaelicPanda,2025-07-26 19:34:45,7,learnprogramming,t3_1ma1voq,False,
n5bfu3m,"It’s plain fun and can do just about anything.It’s concise, readable, and has tons of libraries. I know about ~10 languages (C, C++, Java, Kotlin, Rust, JS, TS, Go, Python, etc) and Python is probably my favorite.",Rain-And-Coffee,2025-07-26 19:51:47,14,learnprogramming,t3_1ma1voq,False,
n5bepwp,"Easy to learn so often entry language for beginners along with Javascript and is all-purpose, it is the go-to language for anything data/AI",Wingedchestnut,2025-07-26 19:45:44,5,learnprogramming,t3_1ma1voq,False,
n5dt6ip,"Genuinely trying to understand this.Every beginner guide says, “Start with Python.”Every AI tutorial? Python.Data science? Python.Scripting? Python.It’s like the default answer to everything.But here’s my hot take:Python is mid.Yeah, it’s readable.Yeah, it’s got a ton of libraries.But it’s slow, it’s loose with types, and once you move beyond toy projects, it kind of falls apart.You don’t really “learn programming” with Python.You learn how to duct tape libraries together and hope it works.Then one day you touch C++ or Go and realize, oh damn, this is how real structure and performance feel.I’m not hating for the sake of it.Python has its place.But the cult around it?Feels like hype more than substance.",Real_Ad1528,2025-07-27 04:51:10,6,learnprogramming,t3_1ma1voq,False,
n54ou37,"Software engineering involves actually designing and architecting a software solution. Some devs don't actually do this (often, when they're in a larger team where someone else comes up with the solution and others just implement it)But realistically people just like the ""engineer"" title.",mxldevs,2025-07-25 18:15:25,174,learnprogramming,t3_1m96c6q,False,
n54wnn3,"Software engineers ace algorithm interviews they’ll never use, just to write CRUD apps for the rest of their lives.",alpinebuzz,2025-07-25 18:53:13,62,learnprogramming,t3_1m96c6q,False,
n54rbz8,"In my salad days, we were called 'programmers'. I did not use the term 'engineer' because I was also an electrical engineer and I did not consider software 'engineering'. But I relented to force majeure. Later I would similarly not identify as an 'architect', but again relented because that's what folks expected.In the end, these are just words, and within the bounds of their context can mean anything you want them to.",ziggurat29,2025-07-25 18:27:25,24,learnprogramming,t3_1m96c6q,False,
n54x9pd,"Software isn't just written for web or mobile apps. So that's one reason right there it wouldn't make sense to call a software engineer a web or mobile developer.The ""engineer"" part is just a title. My job title is frontend software engineer, but I go by software developer in casual conversation. I don't do anything with web or apps...I haven't built a website in years. I do use front end technology though and create tools for the front end teams that are building out web applications, just not anything I'm involved with directly. So calling me a web developer or app developer would be flat out wrong cause it's not what I do.The majority of my friends in tech are back end software engineers, and the mere mention of any front end/web tech makes them gag. :face_with_tears_of_joy:",ponchoacademy,2025-07-25 18:56:10,17,learnprogramming,t3_1m96c6q,False,
n55659o,"In general, Software Engineers will typically have some sort of 4 year degree or higher in a software related discipline. Web Developers and such do not.",DonkeyTron42,2025-07-25 19:40:05,11,learnprogramming,t3_1m96c6q,False,
n54ysou,"How Canada defines it.[https://engineerscanada.ca/become-an-engineer/use-of-professional-title-and-designations](https://engineerscanada.ca/become-an-engineer/use-of-professional-title-and-designations)TLDR: Engineer is a title where people know absolutely how their tech works, with a high regards to safety. And has been watered down by programmers misusing the title.Edit: A lot of the replies prove the watering down of the engineering profession.",OneLeft_,2025-07-25 19:03:32,6,learnprogramming,t3_1m96c6q,False,
n54p7u9,"While I’d say a lot of people use it as a catch all term like some have already pointed out, it may more specifically refer to a programmer, developer, etc. who works and talks directly to a client and then engineers their user requirements into functional/non-functional requirements and stories that are more granular and tech oriented for other programmers and/or themselves. So if you’re working solo, you’re always a software engineer, but if you’re a dev on a team you may not be. That’s only if you want to use a rather strict definition though.",Professional-Head963,2025-07-25 18:17:16,6,learnprogramming,t3_1m96c6q,False,
n54n0e0,"Yes, it's a general term for someone who does software development.",RolandMT32,2025-07-25 18:06:44,15,learnprogramming,t3_1m96c6q,False,
n54wntg,"People have their own definitions. There's gonna be some disagreement.Everybody who's writing code is a programmer, including web developers and software engineer.If you're professionally writing code, especially in a team, especially on a larger piece of software, especially if there's a lot of planning involved, with metrics and tests and support, you're probably doing more ""software engineering"" than ""programming.""If you're making software and it's specifically a website, you're a web developer. If your web developer work involves a lot of HTML and JavaScript, you're a ""frontend developer,"" and if the user can't see your code, you're a ""backend developer.""",captainAwesomePants,2025-07-25 18:53:15,6,learnprogramming,t3_1m96c6q,False,
n54p2n7,"In many countries the term ""engineer"" is protected and requires licensing to call yourself one. In the US, civil, electrical, mechanical engineers are licensed, but ""software engineer"" is not.It depends on where you live, but it could be a crime to say you're a software engineer if you aren't.",wkw3,2025-07-25 18:16:33,12,learnprogramming,t3_1m96c6q,False,
n652itc,Lego makes some robotics kits. You can do some programming for them too,Virtual-Ducks,2025-07-31 10:30:57,155,learnprogramming,t3_1mdxoed,False,
n651ar3,"Scratch Jr. should be available for free on Android and iOS. There are plenty of free lessons and resources for it, as it is basically *the* standard way to teach coding for kids of that age. If you're willing to buy a subscription, CodeSpark Academy is also good.There's a neat picture book that teaches the abstract thinking and logic behind coding with lots of activities called *Hello Ruby: Adventures in Coding*.",plastikmissile,2025-07-31 10:20:43,71,learnprogramming,t3_1mdxoed,False,
n651l7w,"I'd go for a Raspberry Pi car, or for an Arduino car, something similar.If your nephew has access to a mobile phone/tablet, these devices can be controlled either with a remote-control like interface on the phone, or with a Scratch like programming language. A computer is not required.Look into what *Sunfounder* has to offer. They have great kits.",desrtfx,2025-07-31 10:23:08,31,learnprogramming,t3_1mdxoed,False,
n651j9a,"When I was 8, I was already playing games and tinkering on my Gran's old Windows 95 box. I didn't learn any programming until I was about 19 and moved into it for work, but I do remember back then trying to make mods for Morrowind, or custom maps for Warcraft 3, and that satisfied a lot of my curiosity.As for physical things outside of a computer, you'll probably get suggestions, but I'd wonder whether they'll actually be of interest to the kid? A fun project you could do together would be Ben Eater's breadboard projects, you could build an 8-bit CPU part by part together, which I know I would have loved to do back then, and wish I had the time to finish one today; [https://eater.net/](https://eater.net/)The projects aren't really for children, but they break down how a CPU functions to small, understandable chunks, and as you build it, you can see bit by bit how it all comes together, and then at the end, you can program it.",Kezyma,2025-07-31 10:22:41,28,learnprogramming,t3_1mdxoed,False,
n656x30,The [Turing Tumble](https://upperstory.com/en/turingtumble/) tabletop game.It conceptualizes how computers and programming work through building marble-powered computers.,weretuna,2025-07-31 11:05:32,15,learnprogramming,t3_1mdxoed,False,
n6554qc,"Is a Raspberry Pi within your budget? There are tons of learning materials, kits and projects you can do with one. Endless future gift ideas if you can get him one.It's not a toy either, it's a full computer so he can learn programming all the way up to the most advanced levels.",Isogash,2025-07-31 10:52:01,14,learnprogramming,t3_1mdxoed,False,
n653m0t,Is there a reason not to give an old computer to them?,zhivago,2025-07-31 10:39:57,9,learnprogramming,t3_1mdxoed,False,
n6555d8,Raspberry Pi would be a perfect present for him.,1AlanM,2025-07-31 10:52:09,7,learnprogramming,t3_1mdxoed,False,
n654ctd,"I would recommend Mark Rober's Build Box, which teaches kids basic STEM, and then if he's into it Hack Pack since these come with Arduinos that you can program.",HaykoKoryun,2025-07-31 10:46:00,4,learnprogramming,t3_1mdxoed,False,
n650vmn,Id say problem solving related stuff would probably help. Chess maybe?,3dilson,2025-07-31 10:17:10,8,learnprogramming,t3_1mdxoed,False,
n5xrd2h,"How does a pianist know what key sounds good after the last one when composing?A dash of knowledge about the basics and then it's mostly experience.Make real things. Either new things you think should exist or existing things you want to understand better how they work.My personal recommendation would be that when you're done making something, make it again. You'll have learned so much through the process you'll make it completely differently. If you don't make it completely differently, you're either a genius or you've done something wrong (my money is always on the latter).",EliSka93,2025-07-30 07:00:42,93,learnprogramming,t3_1mczkgc,False,
n5xurvm,"You have to learn how to learn.If you dont know how to do something, go find out. It really do be that simple.",Pale_Height_1251,2025-07-30 07:33:20,31,learnprogramming,t3_1mczkgc,False,
n5xrexg,"Programming is an everlasting journey if you want it to be. If you like high level I would suggest to learn some low level stuff so you understand the basics, but after that it's pretty much that you need to 'specialize'. Software will always be software, but these days, each area has their own list of rabbit holes to dive into.",Totally_Not_A_Badger,2025-07-30 07:01:12,15,learnprogramming,t3_1mczkgc,False,
n5xshjc,"They worked their way up, gained experience, practiced, researched, experimented, *learnt*.Programmers know what to do because they have done it or similar things countless times. It's all down to practice and experience.Learning programming especially is a lifelong marathon.Even the most experienced programmer will struggle when they face problems that they haven't seen before. They might know, from their experience, how to address the problems, how to analyze and dissect the problems, but even they won't immediately be able to solve them.Sometimes programmers spend weeks, months, even years on problems before they write the first line of code.> How do people just excel certain areas throughout one semester ??This could attribute to pre-existing knowledge, to exposure to similar domains, and to plenty other factors. Through playing around and practicing outside school work, and much more.",aqua_regis,2025-07-30 07:11:18,10,learnprogramming,t3_1mczkgc,False,
n5xx9ar,CS can feel like drinking from a firehose...,ParagNandyRoy,2025-07-30 07:57:24,9,learnprogramming,t3_1mczkgc,False,
n5yl6ip,"The best programmers I have experienced are the ones who have an entrepreneurial mindset. The skill of programming is just the tools. Knowing what to build is a creativity thing that either someone is always directing you in what to do (low pay) or someone sets a vision and you build up the capabilities for that vision to work. Knowing what to do in all the interviews I have done is easiest to discover if I have the candidate tell me about a business they tried to do, a side gig they did, or frankly something they created on their own. If I have a candidate who was just good at doing the task directed of them, they are usually a “do not hire”…Keep taking the classes and they will give you the tools. But really invest in being an entrepreneur with a focus on what the end user will experience and how you can make the experience better for that end user. That is the key.",No_Top2115,2025-07-30 11:30:31,6,learnprogramming,t3_1mczkgc,False,
n5xtwmu,Generally you fucks around and find out,NotMNDM,2025-07-30 07:24:56,5,learnprogramming,t3_1mczkgc,False,
n5xsmon,"\>  I'm really confused as to if I should work on my OOP projects If you are not using what you have learned, then that knowledge will quickly go away. And the best way to learn is to write lots of code using the knowledge you have. If you do this that knowledge will then start to stick.",ScholarNo5983,2025-07-30 07:12:38,4,learnprogramming,t3_1mczkgc,False,
n5yborq,"Well, there is coming up with project ideas. Business objectives.I find myself writing lists. Sometimes in a text editor and sometimes on paper. A list of objectives or an outline.If I'm stuck, or even not, I employ beginner's mind. Look at the screen device or concentrate on audio. Can I describe what I see?Sometimes you get too close to the problem and need the higher level view.",for1114,2025-07-30 10:15:33,5,learnprogramming,t3_1mczkgc,False,
n5yvwox,You've not learnt programming until at least after DSA. Then you'll still be learning for decades. I've been programming games for 35 years.,tcpukl,2025-07-30 12:39:06,3,learnprogramming,t3_1mczkgc,False,
n57caoa,"I'm 32 and starting my coding journey. I feel too stupid all of the time. Like ""i'm way too old to be learning and I should have started when I was 16."" Which is nonsense of course. But I catch my self getting better every week. Even if it's small progress.Stick with it you'll get it. It's not easy at all. There's a reason their called languages because it feels like learning Italian or something. take it week by week. I'm sure you'll start to realize you're catching on more than you think",Principledoug,2025-07-26 02:59:49,67,learnprogramming,t3_1m9ih9t,False,
n57ixz1,"I tried learning programming several times in my life.At 16 I tried gamemaker and learning by myself, learnt nothing and gave up.At 20 I tried grasshopper a google app designed to teach, when it came time to type I realised I had learnt nothing and gave up.At 25 I tried some python tutorials, wasn't learning and quit.At 28 I did a short course through TAFE. This time I committed as it was inperson and I took time off work. Found I learnt fundamentals but the class was too slow, the assignments were where I learnt the most to complete projects.At 29 I took CS50X found it very tough gave up midway.At 30 I repeated CS50X and finished it and was finally confident that I could program.If i asked my 16 year old self I would never have thought I could learn it but after 5 times giving up it finally clicked for me.If you have any questions feel free to ask me.",k-type,2025-07-26 03:46:40,35,learnprogramming,t3_1m9ih9t,False,
n57gq2b,"Please take a class.Not making fun of you, but there are some people who just immediately understand some programming concepts after reading an article or watching a video, and then… there are people like you and me. We need stuff explained for us, at least until we hit a basic level of competency. I promise you that stuff eventually starts to make sense.You may be tempted to try to use an LLM to teach you, and while that might work for basic concepts, I’d be extremely nervous about trying that. My experience using LLMs right now is that they will absolutely steer you into a ditch if you let them, and you don’t know enough yet to know when one is hallucinating at you",BigLoveForNoodles,2025-07-26 03:30:41,17,learnprogramming,t3_1m9ih9t,False,
n57uoyo,"[Python Crash Course, 3rd Edition: A Hands-On, Project-Based Introduction to Programming 3rd Edition](https://www.amazon.com/Python-Crash-Course-Eric-Matthes/dp/1718502702/ref=pd_lpo_d_sccl_2/144-0370345-6176020?pd_rd_w=yKBfp&content-id=amzn1.sym.4c8c52db-06f8-4e42-8e56-912796f2ea6c&pf_rd_p=4c8c52db-06f8-4e42-8e56-912796f2ea6c&pf_rd_r=XBBS4EBVCBBQRV86M6KX&pd_rd_wg=isYTz&pd_rd_r=9da94c7e-583a-4044-a6dd-833cd812e847&pd_rd_i=1718502702&psc=1)This isn't a /r/learnpython problem, this how to study problem. 1. Buy the physical book.1. Create a distraction free work area1. Disable your internet on your computer1. Place your phone where you can't see, just seeing the phone will distract you. 1. Figure out how much time per day, you want to study the book. Create a schedule. 1. Read the book, take notes, and take a 5 minute break every 25 minutes. (https://en.wikipedia.org/wiki/Pomodoro_Technique)1. Rinse and repeat.Two years and you still don't understand python? You really need to ask yourself, why do you want to learn python, the reason why it's taking you so long, its because you have reservations of learning python because you have no clear idea, why you want to learn, in the first place. **PS:** Don't post your age on social media, now that is plain stupid, if not dangerous.",rustyseapants,2025-07-26 05:17:51,13,learnprogramming,t3_1m9ih9t,False,
n57esjq,"I do think that wanting to contribute to open source projects at that stage is a bad idea - any problem that your skill level would allow you to solve is already done.I do not believe you're too stupid. You just need to find your approach. Nobody is Linus Torvalds (not even Linus Torvalds - he's a genius, but he's not the mysticized version that most people see him as).I believe anyone can learn to code. Not at the same speed or depth maybe, but coding anyone can do.I can't write you a roadmap, but if you have specific programming related questions, feel free to dm me. I've helped a few people on here comprehend what they're looking at.My specialty is C# / .Net, but skill in programming is broadly transferable.",EliSka93,2025-07-26 03:17:04,9,learnprogramming,t3_1m9ih9t,False,
n57boai,Join a class or a program in community college. They have to actually sit with you and explain it. Watching YouTube tutorials is fine if you’re just trying to scrape by; but actually answering a student’s questions is done in a classroom.,Mojibacha,2025-07-26 02:55:38,6,learnprogramming,t3_1m9ih9t,False,
n580dmb,"Let me start with slight criticism, people read better when you have paragraphs in you're text.You are too stupid only if you think you are too stupid. Programming is a learnable skill to think in smaller mini steps with particular attention to details and how to organise them.How do you learn it? You wouldn't believe, but practice.Now, that's not very useful advice and since I don't know you advice can only be generalised.You know some programming this means if I give you a task to build auto guiding software, you will not know how to even start, but if I give you task to build little function that sums list of numbers, you'll probably will be able to do it.Practice: \- build smaller projects YOU want to build (your interests fuels your skill) \- find platforms that have graded challenges (codewars was helpfull for me long time ago) \- read other people code (try to build something first though \- watch talks about programming instead tutorials how to do somethingHere is one of my favorite talks [https://www.youtube.com/watch?v=IcgmSRJHu\_8&t=1s](https://www.youtube.com/watch?v=IcgmSRJHu_8&t=1s), it's about how to make impossible state impossible.",runtimenoise,2025-07-26 06:07:53,5,learnprogramming,t3_1m9ih9t,False,
n57d7nn,Take CS50X it will be hard but it’s ends the imposter syndrome,stakidi,2025-07-26 03:06:09,8,learnprogramming,t3_1m9ih9t,False,
n57cee4,"I found the further I got in Python the more confusing it became. I have learned a lot more using C# and currently Java. I wouldn’t worry about contributing at this point. I would be focusing on making things. Anything really when you are still getting used to OOP concepts, program structure , language syntax etc. Pick anything that is well laid out so you can figure out how YOU would implement it and then go back to someone else’s and compare. When you get stuck research the specifics you are having problems with not “where did I mess up on this tutorial”.",googleaccount123456,2025-07-26 03:00:32,6,learnprogramming,t3_1m9ih9t,False,
n57lsrx,"It’s about levels bro. What you’re experiencing is normal. You’re struggling because you have no idea what you’re doing. This happens when you don’t have enough prior knowledge to build on. Trying to tackle projects beyond your current level will give you brain rot. Fill that gap: buy a book, commit to reading it, work through each chapter, and build the examples. Some people can’t follow YouTube or blog tutorials easily, and that’s completely fine. It’s just how you learn.",AncientDamage7674,2025-07-26 04:07:32,3,learnprogramming,t3_1m9ih9t,False,
n5szbqd,"Vibe coding is a meme, not something to try and emulate. Ais are useful for speeding up boiler plate, discussing possible edge cases, writing some utility functions/methods etc. Its not to a point where it'll just completely write a full app thats actually good yet. Its just a time saver you use where you know it will work for the task at hand like any other tool.",Saereth,2025-07-29 15:05:06,76,learnprogramming,t3_1mcdj71,False,
n5t21s9,"I've tried vibe coding too. On the one hand, I had to fight with the LLM. I wanted to do a graphics application. I don't have much background in computer graphics. I don't know the libraries I should use. So, I let the LLM give me ideas and eventually settled on Python as the language.I've got a 2D array that is supposed to color a cube I'm having the LLM draw. However, it doesn't understand how to associate that 2D array with parts of the cube. It gets it upside down or backwards. I feed it screenshots, and it still can't figure out what's going on. It keeps proclaiming ""this will fix it"" and makes some random changes.Having said that, I did get it to work, eventually. If I had to do it on my own, I would probably have never started. It seemed too daunting, that I had to learn too many new things. So, it got me started, and while I was frustrated at times, it got me a lot closer to finishing than I would have done just by myself.It's the first coding project I've completed on my own since, well, almost ever.I think someone who knows NOTHING only builds really small stuff or has it solve homework problems. I can't imagine they get a real app working.Those who think AI will take over and don't want to learn programming should try it out. It's still far from easy to use, and you'd think it would be easier.",CodeTinkerer,2025-07-29 15:17:54,15,learnprogramming,t3_1mcdj71,False,
n5tcnv8,"If you are not a programmer and don't know how LLM AIs work, it should be a pain.I love it, it helps me to do trivial-boring things. Say, I have this code: while True: perform_stuff() time.sleep(0.1)I just say the prompr *""precise timing""* to Claude, and it gives me 4 answers, including one with a technique which I did not know: `threading.Timer(0.1, scheduled_task)`.I could figure them out myself, or look after in StkOv, but it took 10 secs incl. copy-pasting code and writing prompt. Awesome.Again, if you're not an experienced programmer, probably you don't know why the original solution is bad, okay, you know it, but it was trivial, sometimes you just don't know that your solution is lame.I am learning Rust, and my favorite prompt is: ""*change this code to more idiomatic*"". If you know Rust a little bit, you know what I'm talking about.",ern0plus4,2025-07-29 16:07:24,7,learnprogramming,t3_1mcdj71,False,
n5tm10c,"AI Is good for boilerplate only. Try to ask it to fix a bug, it created three more...",Mk-Daniel,2025-07-29 16:51:04,6,learnprogramming,t3_1mcdj71,False,
n5t8p85,"It's not just you.There's a really fundamental problem here that's hard to get across to a lot of people.The people claiming AI is now writing most of their code for them are *lying*.And because most people don't know how to code, and keep hearing about AI primarily through the hype machine, they're confused when you tell them it's a lie, or they think you're being hyperbolic, or have some massive anti-AI bias, but it's just a really basic situation.The tech just isn't there for these purposes, but AI is the new Crypto or NFTs so there's a huge amount of energy out there spent by AI enthusiasts trying to convince other AI enthusiasts that it's working great.AI has uses. It's genuinely excellent as a second pair of eyes when you've made an obvious mistake that's a pain to see. It's terrible at actually writing code. Not terrible if you don't prompt it right, or terrible if you don't know what you're doing. It's inherently bad at it, and never going to get any better, because what most code requires is decent, sequential reasoning.",KingOfTheHoard,2025-07-29 15:49:02,6,learnprogramming,t3_1mcdj71,False,
n5tbymc,"I'm not good at coding at all - just don't practice a lot. Coding with AI has shown me that it's great for syntax and for whipping up a specific function, but once it gets past a hundred or so lines of code it gets confused about the larger context and becomes progressively more useless as the project advances. My best use case for it projectwise is for, like, short bash or Python scripts.",skoomaking4lyfe,2025-07-29 16:04:08,3,learnprogramming,t3_1mcdj71,False,
n5ucuqn,"1: it's terrible, stop ""giving it a chance"". Spend some time doing actual research and learning. 2: stop saying vibe coding, it a marketing term invented by an AI CEO.Instead of both, say ""cutting and pasting code that's full of bugs"".",mohirl,2025-07-29 18:53:16,5,learnprogramming,t3_1mcdj71,False,
n5sxy45,"I’m pretty new myself but I fuck with CSS mostly. It helps identify concepts and small parts to it but once you interweave large CSS files with lots of cross talks, classes and ID’s it doesn’t know wtf to do.",kotokun,2025-07-29 14:58:32,1,learnprogramming,t3_1mcdj71,False,
n5t0q86,"It depends on how ""vibe"" it is. If you have too generic ideas only, then it's inefficient.",ItchyPlant,2025-07-29 15:11:43,1,learnprogramming,t3_1mcdj71,False,
n5t6z55,"The AI companies are boasting about their LLMs solving huge percentage of some challenging math problems better than majority of people. And then when we use them they reply very stupidly like they were never improved at all. Their responses like ""You're right, this is the way to do X"" pisses me off, once i said ""no this is how to do it"" (wrong answer) and it agreed, this is not how AI should work, it doesn't need to believe what the user told it like it's 100% truth. It should only work like that if the user tells it to act like that, not in casual conversation without user being aware of it.",RealMadHouse,2025-07-29 15:41:08,1,learnprogramming,t3_1mcdj71,False,
n5qnjc3,Also godbolt,HyperWinX,2025-07-29 04:46:29,15,learnprogramming,t3_1mc2a22,False,
n5qwznb,"This is an excellent trick if you want to learn assembly by studying your code.Also note that you can ""disassemble"" object files or executables to browse machine code inside as assembly, which is trickier and less readable than using gcc -S, but it's useful in case you don't have the source available.",captainAwesomePants,2025-07-29 06:05:52,10,learnprogramming,t3_1mc2a22,False,
n5r0ou6,"You don't know what you don't know. There's no way to ""figure"" this out except for stumbling into it.As you grow more experienced you start asking the right questions and more naturally stumble upon useful features.I would recommend looking into the gcc utilities such as objdump, objcopy, etc.",DustRainbow,2025-07-29 06:39:51,7,learnprogramming,t3_1mc2a22,False,
n5rym34,"You aren't an idiot. Quite the contrary, you poked at the boundaries of what you knew and discovered something more. Real programmers do that on a daily basis. You are well on your way.",lewisb42,2025-07-29 11:44:21,5,learnprogramming,t3_1mc2a22,False,
n5rizuy,"I get how easy it is to feel that way, especially with programming, but you don't know something until you know it. Plenty of people go until 55 before they learn something you knew at 15 and vice versa, just happens like that sometimes.",Fallout_NewCheese,2025-07-29 09:35:25,3,learnprogramming,t3_1mc2a22,False,
n5rgfah,"Why would it make you feel stupid, to not know about some very specific flag of gcc? Is it rather, that you didn't search for such a flag, or didn't have the idea to search for it, or that it could exist?I don't see a reason why this should make you feel stupid.",ZelphirKalt,2025-07-29 09:10:37,2,learnprogramming,t3_1mc2a22,False,
n5rul13,"One thing that was really cool when I was leaning assembly(for the same reason you did), was rewriting my program in C, and then comparing the generated assembly code to what I had originally written.",KwyjiboTheGringo,2025-07-29 11:14:52,2,learnprogramming,t3_1mc2a22,False,
n5xj2jl,I also just learned this same thing. An AI told me.,IronAttom,2025-07-30 05:45:15,2,learnprogramming,t3_1mc2a22,False,
n5swnhh,Everyday is an opportunity for learning!,drsoftware,2025-07-29 14:52:26,1,learnprogramming,t3_1mc2a22,False,
n6531rg,-S decrements stupidity,Puzzled-Landscape-44,2025-07-31 10:35:22,1,learnprogramming,t3_1mc2a22,False,
n5dis2j,Why not just… try to build something?Finding a small goal and working towards it little by little has to be more interesting than just learning basics with no direction,deblob123456789,2025-07-27 03:31:29,72,learnprogramming,t3_1mac3w7,False,
n5dip4p,"If you want to build a game in unity or create a website, do those things. See if you like doing them. Google what you don't understand. Look at examples. Look at documentation. Even professionals spend a tremendous amount of time saying ""I don't know how to do this... yet"" and Googling for information. Yes, programming is all ""numbers and strings"". The act of programming doesn't suddenly morph into a different activity based on what you're creating. You might enjoy building something if you're excited about using the end result, but the tools involved are going to be largely the same.",Own_Attention_3392,2025-07-27 03:30:52,21,learnprogramming,t3_1mac3w7,False,
n5dmvc8,"It’s the same when you want to properly learn a new sport. It doesn’t matter if you know how to play if you don’t have enough agility to reach the ball, or enough stamina to last a match.So, half the time, you’re doing endurance and agility training. You need that foundation before doing anything. And it can be repetitive and boring.Strings and numbers are similar.",Joewoof,2025-07-27 04:01:44,8,learnprogramming,t3_1mac3w7,False,
n5dibcc,"It’s all just numbers and strings.  Though sometimes they’re bundled up into objects.Oh yeah, and even strings are just numbers.",mapadofu,2025-07-27 03:28:02,7,learnprogramming,t3_1mac3w7,False,
n5drilv,"It’s most likely boring because you’re not building something. Try making a simple game (not with unity! I’m talking a text-based RPG), a winforms app, etc (Not with Unity because it in of itself is daunting, and it’s easy for a beginner to feel overwhelmed and quit)",Feldspar_of_sun,2025-07-27 04:37:54,5,learnprogramming,t3_1mac3w7,False,
n5dwqdy,"For me it was boring at the very very beginning. I actually tried to learn twice before I picked it up for real. First time I quit after 1 day. 2nd time after 1 week. 3rd time I got completely hooked. The thing that flipped the switch was when I finally built something real. When I started learning at first it was learning for learnings sake. As soon as that building potential clicked for me, learning wasn't for learning sake, it was learning new skills that meant I could build bigger and better things. After that learning felt like leveling up in a way. I think you have to build something you think is interesting, and if you don't get the itch after that you can decide. You have to do that simple stuff first though. Those are the building blocks of every project. Just tough it out for a bit and then you'll have a clearer picture.",Datron010,2025-07-27 05:20:36,5,learnprogramming,t3_1mac3w7,False,
n5djphp,"Skip it if you want, have a try at making a website.When my generation learned to code at home in the 1980s, we didn't really bother with any of the principles, we just started trying to make games.You learn as you go, plenty of people learn to code just by trying to make stuff.",ToThePillory,2025-07-27 03:38:17,3,learnprogramming,t3_1mac3w7,False,
n5djud5,"If you’re overwhelmed with the uncertainty of learning the basics you need to step back and look at your vision. If your goal is making a website or coding a game then do those things. However, you’ll quickly realize when starting either of those projects how important the basics are. Data types are boring but they are essential to control flow. Can’t create a variable to store your character state if you’ve ignored the basic principles of encapsulation. My suggestion is start a project (small) and finish it to the end. You’ll learn a lot. An example would be a text based adventure or something of the sort.",johnmatthewwilder,2025-07-27 03:39:18,2,learnprogramming,t3_1mac3w7,False,
n5dkav5,"Yes, most things I learn are boring and take at least 100 hours to really understand what it's about and if I enjoy it. Other than that don't just learn concepts and do nothing you have to build things. Yes you can skip it if you want. Instead of taking a general goal of ""learn programming"" say ""i want to make a game"". Just be prepared to research and learn the relevant information to the task as it comes up or your foundation will be weak.",Fine_Yogurtcloset738,2025-07-27 03:42:41,2,learnprogramming,t3_1mac3w7,False,
n5dylso,"Like others suggested, try building something. I got into the headspace young, and it made everything make sense. You can even do this without fully building something. Whatever game you're playing, start wondering how they make things happen. You pick up 15 gold. Well first you have to have a gold object. Then maybe the gold drop was a random amount. So I need to be able to randomize the gold drop between x and y values. Then I have to have somewhere for it to go. So now I'm reassigning player gold to player gold + gold drop. But where even is my player gold? is it in some array or something? And for adding the gold, maybe I have an add object function. And it needs to check for what kind of object and where it goes. The more you think about the way you interact with technology in this way, the more while you're learning you'll go ""ahhh that would make doing xyz a lot easier/possible"".",Edraitheru14,2025-07-27 05:36:47,2,learnprogramming,t3_1mac3w7,False,
n6605tz,Sit on reddit,MicahM_,2025-07-31 13:59:19,29,learnprogramming,t3_1me23kg,False,
n663ewr,"My first job was a long time ago, but I can remember some of what was involved.I was brought in as a Junior Web developer straight out of high school, at 17. I was only employed there for just over a year as the company went into administration after that.For the first 6 months, most of my work was making changes to the company website, updating pages, adding new functionality, fixing bugs etc.After the first 6 months, the company decided to redesign the website and to try to implement a proper content management system for the website and I was given the task of finding the right CMS, putting together a proposal for that CMS and then implementing it. I also did the website redesign (although I was building pages based off wireframes and a spec written by someone else, I'm not a graphical person). About a week after the launch the whole company went into administration, so no one really ever got to use my new website.It was a small multinational and I was working out of their HQ. The web team was basically only 2 of us, and my boss spent most of his time working on the ecommerce site, so I got a huge amount of freedom to learn and try new things. Edit: If anyone's wondering how long ago this was, I was working with classic ASP, asp.net 1.1 and webforms (which were all cutting edge at the time). Also Tables were an acceptable way of doing a 3 column page layout",zeocrash,2025-07-31 14:15:20,17,learnprogramming,t3_1me23kg,False,
n660mro,"Basically impossible to tell.My first job I was tossed into creating a .Net website roughly the complexity of booking.com from scratch, although I didn't understand most concepts behind making that work well at that point...I built a decent database, but everything else I'd do differently now. I left that job after a year and am in a better place now.",EliSka93,2025-07-31 14:01:37,4,learnprogramming,t3_1me23kg,False,
n663b8v,"There's no consistent answer. Some jobs, like working in a restaurant or working in a hospital, have similar setups and similar goals. Software companies can ask you to do whatever. Fix bugs. Attend meetings. Work on a small project. Could be as bad as, the senior devs all quit, and you're now in charge of the project. Or maybe the senior devs are swamped, and you have no idea what to do. Some jobs are not well-thought out. Like they forgot to get you a laptop so you sit for a while. The typical first few days (if there's no bootcamp) is to get your laptop set up and maybe install the main app if there is one. You begin to attend meetings, and maybe start looking at the code base. You'll probably be introduced to some task management system like Jira, maybe the company Wiki, some way to deploy your code, some way to test, etc.I mean, that's just an approximate guess. Could be something else depending on how well run the company is. You might get lots of help or you might be left to fend for yourself. Probably somewhere in between.",CodeTinkerer,2025-07-31 14:14:50,7,learnprogramming,t3_1me23kg,False,
n66ib8v,"Still in my first job, self taught. I got lucky to get a contract 1099 job with a guy that created a web application for our local clerk of court office in a small rural town. He also has various startups and makes custom web apps for businesses in our area. At the beginning I mainly just reviewed the code for the court app. It was on a much older version of Angular so he had me begin rewriting the entire app in the latest version of angular which accelerated my learning exponentially. Then soon after a new client came in requesting a custom web application for his business and my employer handed it all to me. So I have spent most of my time meeting with that client, understanding his data and building a web app from scratch. It is now in production so now I implement feature request or fix bugs. I also will work on various projects he has with other clients, updating old code or adding new features. We also do IT for the court house and 911 center so I go on site every once in a while and fix network or equipment issues. It is just me and my employer there are no other employees except some Ukrainian guy that doesn’t live here that does some free lance work for him. I am extremely fortunate to find myself in the position I am in and to my knowledge this is not common in the programming world. I am terrified of the day I have to apply for a job at a company with steep competition and strict practices.",JuicyJBear94,2025-07-31 15:25:44,2,learnprogramming,t3_1me23kg,False,
n66il3q,"My first ""programming job"" was really just a sysadmin job where I took it upon myself to port an underutilized PHP internal app to Ruby on Rails and made it better. But I mark that as my first professional programming experience because it introduced four things:* Source code management (subversion at the time)* Writing tests* Deploying vs editting files directly on the server* Collaborating with a frontend guy (team work)From there I went freelance for a little while and then got a full time job working on an eCommerce site where I further developed the above ""soft"" skills further. Writing the actual code is only part of the job.",huuaaang,2025-07-31 15:27:00,2,learnprogramming,t3_1me23kg,False,
n66jxzx,"Just my personal experience.I started as a junior iOS developer, and my day to day job was basically use existing functions and modules to create new features or screens, I just placed them in the view controllers, did some storyboard stuff and very light algorithm and business logic but always very simple. I did not implement any type of module or complex function, I just used them accordingly somewhere.",No-Addendum6379,2025-07-31 15:33:21,2,learnprogramming,t3_1me23kg,False,
n66vr9y,My first programming job was writing C code that interfaced with an existing FORTRAN program that interpreted satellite data for the air traffic control system.,FutureProofRelic,2025-07-31 16:28:39,2,learnprogramming,t3_1me23kg,False,
n675zca,"My first job was writing a system for reading images from disk on Playstation 1, used in a new game engine. I was pretty much given the file format. It was like Amiga formats I was familiar with. So no jpg libraries to use or anything. Then I wrote the API for the render to get the resources from disk.",tcpukl,2025-07-31 17:15:56,2,learnprogramming,t3_1me23kg,False,
n66e5o0,"Became lead in the first year, because programming was hobby and I was pretty good before my first job. First tickets were very small, end of 1st month a large feature, then more features and eventually I took over and people listened to me. I always take ownership, because I don't like being on projects that fail due to poor code.I was hired as a ""mid"" right away, so I've never been a junior developer by title.However, looking back, I was not really thaaat good in the beginning. In fact, the first two years I now think I was pretty weak compared to me today.Crazy improvements in code quality in the first year of coding! Working with others and finally being critiqued through PRs was a blessing.",fuckoholic,2025-07-31 15:06:23,2,learnprogramming,t3_1me23kg,False,
n5zakvx,"One advice I can give you is pick one resource to learn what you want and stick to it otherwise you will land in tutorial hell because each topic can be its own rabbit hole and you need to know what to learn and at what point and when it's time to move on to the next topic. One resource I used to learn Web Development is the Odin Project. It teaches you full stack web development, is free and open source. Created by developers for beginners. If you know HTML and CSS you could skip that part of course and directly start with Javascript. They also have projects you have to do which start with stuff like Rock Paper Scissors and you end with a project at the end of the course where you have to build a full stack Social Network. It's a difficult course but so worth it if you are serious about learning Web development.",sandspiegel,2025-07-30 13:59:13,27,learnprogramming,t3_1md6uii,False,
n60vygb,"I know this is a bit off-topic, but I think 18 is when you should be trying a lot of things out and so what that means is that you're going to make a lot of mistakes. This is a good thing because you'll learn from them. Try a thing - works/doesn't work? Surprising outcome? You don't like it? Good. Get out there and make some mistakes. This goes for programming too. Learn a language, try a new framework, experiment with a design patterns. You'll never have as much free time and energy as you do now while you're young - use it",SeriousDabbler,2025-07-30 18:28:02,4,learnprogramming,t3_1md6uii,False,
n5zeepn,"1. Find something to learn. Set a deadline. If it ends forget about it, move to the next. You'll come back anyway2. Yt short brainrot to get an ""in"" for a tech framework or library just to warm up3. Read the docs homepage and follow the tutorial.4. Give up halfway bc its hard.5. Restart but this time you get the pattern so you stray off course for some time. 6. Realize you wrote sloppy code but hey how did you create that small project using that new tech7. Implement that library or framework somewhere8. Realize some stuff gets repetitive, search a feature on how to solve that. Repeat",sean_carr1,2025-07-30 14:18:19,4,learnprogramming,t3_1md6uii,False,
n5za1ny,i need to start living too...,Superok211,2025-07-30 13:56:34,2,learnprogramming,t3_1md6uii,False,
n60toyd,"Hello, hopping in this post. Do I need to study Data structures and algorithm to be a good programmer?",Juggernaut_Spammer,2025-07-30 18:17:30,-1,learnprogramming,t3_1md6uii,False,
n5zdmdy,Thanks! Are you still specializing in web development? How long did it take you to learn?,Qusko,2025-07-30 14:14:27,2,learnprogramming,t1_n5zakvx,True,
n60ydw2,"Such words motivate me not to give up, thanks!",Qusko,2025-07-30 18:39:19,2,learnprogramming,t1_n60vygb,True,
n5zznke,Indeed just keep going on.,Proud_Possible_5704,2025-07-30 16:00:04,2,learnprogramming,t1_n5zeepn,False,
n5z7q0h,Why?:loudly_crying_face:,Qusko,2025-07-30 13:44:28,0,learnprogramming,t1_n5z7bbg,True,
n5nrdo6,"CS50x is truly one of the best resources out there.I recommend that you do not watch the class straight. That you watch for shorter periods of time in which you can maintain your concentration at 100% (30-40m in my case).While you watch the class: take notes, keep the code editor open to practice the things you are learning. If you have any doubts, did not understand something 100% or simply want to know more about it, ask chatgpt. That's the only use you should have for now.Just accept that it will take you hours to complete an exercise until you can solve it. In your daily life as a programmer you are going to face situations like this all the time.",Neat-Computer546,2025-07-28 19:05:03,68,learnprogramming,t3_1mbovx7,False,
n5odzmt,How can someone be passionate about something they’ve never done before or have any experience with?,Gawd_Awful,2025-07-28 20:52:18,16,learnprogramming,t3_1mbovx7,False,
n5p8x1s,"my #1 tip to you is to completely stop using genAI tools until you can orient yourself without it. you are using it as a crutch and it's hindering yourself from learning anything, even outside of cs",NefariousnessMean959,2025-07-28 23:33:54,6,learnprogramming,t3_1mbovx7,False,
n5o3cz8,"anything is a ""good"" way to learn coding if you are passionate about it. You don't necessarily have to do CS50 to learn. There are tons of self-learning websites out there that can teach you coding at your own pace.",Islandboi4life,2025-07-28 20:02:27,3,learnprogramming,t3_1mbovx7,False,
n5nt5ls,"CS50 is a fantastic course, but it focuses more on teaching fundamental programming skills rather than teaching you how to build something right now. That's not a bad thing, but it might not be what you want.You won't get any value out of it if you just ask ChatGPT for the answers. The whole point is you're supposed to figure them out.You're not supposed to just ""know"" the answer. Experiment with it. Try things. Get stuck, try other things. You'll never learn if you don't actually struggle.If you really are stuck, ask for a hint - ideally from a real human like here on r/learnprogramming \- we'll be happy to point you in the right direction without giving it away. ChatGPT can do that to if you ask it to only give you a hint and not the answer.If you want something more practical try The Odin Project or FreeCodeCamp. You'll eventually need to learn all the same stuff, the difference is they teach by having you learn to actually build working websites as you go.",dmazzoni,2025-07-28 19:13:40,2,learnprogramming,t3_1mbovx7,False,
n5poth7,"My advice is to try to get comfortable with not understanding things, as it will happen a lot! I think it's more productive to simply seek answers to any difficulties you encounter (via chatgpt, stackoverflow, or a variety of blogs) rather than stress yourself out trying to resolve the problem yourself.No one is born knowing these things, it isnt an innate talent. Just keep steadily learning from the discoveries and innovations of others, and you'll gradually acquire a toolset capable of solving incrementally more difficult challenges. Just take it easy on yourself and remember to have fun!",TaoJChi,2025-07-29 01:03:45,2,learnprogramming,t3_1mbovx7,False,
n5nqg47,"I'm in week 4. Yes, I think so. It will give you a good start.",frivolityflourish,2025-07-28 19:00:27,1,learnprogramming,t3_1mbovx7,False,
n5nsk47,"Yes. I suspect you're getting frustrated and that usually doesn't make coding easier. The best thing you can do is just let yourself feel frustrated. You could be getting annoyed at how unfamiliar everything feels, or even annoyed with yourself if you expected to get & do everything in under an hour, and now you're disappointing yourself. Or a thousand other different feelings.Try again once the feeling subsides a bit. You'll get used to the feeling of being lost or annoyed, then you'll realize its not such a big deal. The first hundred times though, it will 100% feel like the biggest deal ever.",AccidentalNap,2025-07-28 19:10:47,1,learnprogramming,t3_1mbovx7,False,
n5q4asi,"Cs50 is great and teaches a great base line. I started with it and couldnt finish at first. You can check out 'the odin project'. Start with the foundations coarse. Its free and teaches full stack web development from the beginning. If you do it, id still sudgest doing cs50 after.And stop using AI! You need to learn to research and think for yourself! AI is a great tool but put it to the side until you can do projects on your own",CapnCoin,2025-07-29 02:34:19,1,learnprogramming,t3_1mbovx7,False,
n5r7dzb,"Don't use chatgpt, use CS50's own chatbot that is implemented in vs code. It actually talks you through the problem without straight up giving you the answer and is much better for learning. You also aren't allowed to use any other AI (I have no idea if they can actually test for this, considering the amount of people that take this course).",GildedGeese,2025-07-29 07:42:52,1,learnprogramming,t3_1mbovx7,False,
n5ityc9,"You definitely don’t need a paid course, there’s a lot of resources for free. freeCodeCamp, Codecademy, YouTube, etc. The JavaScript docs are also really good sources of information. If you need structure, a paid course would help but it’s definitely not needed",xAmity_,2025-07-27 23:56:26,24,learnprogramming,t3_1mb1ack,False,
n5iz39d,"CS50 - to learn programming fundamentals, followed by Odin Project - to learn javascript.Learning some programming fundamentals and some insight into what is going on under the hood will take a little longer in the short term, but will make picking up javascript easier in the long run.",plasterdog,2025-07-28 00:28:09,9,learnprogramming,t3_1mb1ack,False,
n5iyyn3,"All freely available. Start on YouTube and Google and look things up on MDN (the docs). Press F12 (as you're reading this if you like) in your browser and find your dev ""console"" to run code. Type along, don't just watch. Pause and play with the code. Make it break. Read the errors, Google them, fix them. Pick a small project as a vehicle for learning.Be clear on which environment you want to learn JS for/in, or you may get confused by sources on the web. Modern JS breaks down roughly as:1. The core language and intrinsic/included features/libraries available in every environment. Start here no matter what. Then...2. Browser based ""vanilla"" JS which is No.1 when executing JS using a web browser (E.g. Chrome). It's primary use here is to manipulate the DOM (page). The browser environment allows access to lots of APIs (not web services) for getting/setting data on the browser/page and reacting to events. You want to learn this if you want to do front end web dev.3. Node.js JS, which is No.1 when executing JS using... Node.js. It's a standalone JS engine (actually Chrome's V8), no browser (so no browser APIs). Instead it provides an environment with APIs for accessing the local system (OS, files, network...) which allows for building arbitrary applications, most commonly web servers. You want to learn this if you want to do back end web dev.",HashDefTrueFalse,2025-07-28 00:27:20,7,learnprogramming,t3_1mb1ack,False,
n5jelmw,"Watch @theavocoder animations explaining JavaScript event loop etc. The system behind callback invocations. Here's thing that i learned: JavaScript engine itself is single threaded, but the browser engine uses threads to do tasks parallel to your JavaScript code, such as XMLHttpRequest/fetch and everything that returns Promise objects. The function that you pass to Promise constructor (executor) is running on the same UI thread so you don't do anything computationally heavy there, instead you can use Web Workers to emulate browser apis off ui thread code execution. While scripts are loading they're parsed but they only execute when the script is fully loaded and parsed, so heavy scripts would delay the web site users from being able to interact with the web page elements. If you want to reference elements in a web page via JavaScript you need to make sure that the is fully loaded, otherwise you will get an error that you can't get elements by that id or class etc. You can also put the at the end of the so that when JavaScript will be executed it will know for sure that the body content is loaded. relative url references that you pass to (""fetch"" for example) aren't relative to the JavaScript file itself but by the html page that loaded that script. There's primitive types (numbers, bools, strings etc) and object types { } (Dictionary with special abilities)Learn the old way to make classes first, with function as a class constructor, function.prototype as a prototype object. Then learn the new syntactic sugar class definer, what i found out is the code inside it runs in strict mode.",RealMadHouse,2025-07-28 02:04:55,2,learnprogramming,t3_1mb1ack,False,
n5ivhms,Codeacademy seems more project based,Any-Use6981,2025-07-28 00:05:43,2,learnprogramming,t3_1mb1ack,False,
n5ivb8z,"""Best"" and ""Most Solid"" are pretty vague and subjective descriptors, so understand you're gonna get answers that are all over the place.That being said, in this day and age I honestly believe paid courses are not necessary. There's a plethora of free tools out there for you to get started; someone else has already mentioned a couple, but do your research and see what fits your ambitions and needs.",solvin-dev,2025-07-28 00:04:39,1,learnprogramming,t3_1mb1ack,False,
n5jb478,"Edx (uni courses, cs50 is there), roadmap.sh, freecodecamp, devdocs.io, developer.mozilla.com for js doc, books like “JavaScript: The Definitive Guide” by David Flanagan (7th Edition), but most important code a lot thats the best solid way to learn. Discipline fuel progress",notherex26,2025-07-28 01:43:20,1,learnprogramming,t3_1mb1ack,False,
n5jhnmr,either use anki or zemomemo to memorize the programming terms and code snippets in anki it's for making flashcards and zemomemo is more for generating quizzes based on what you typed in quiz yourself and familirize things and watch youtube tutorials for free,_sdfjk,2025-07-28 02:24:20,1,learnprogramming,t3_1mb1ack,False,
n5k4e4c,Im one of the guys learns the best by doing. I usually recommend picking some sort of project you would like to create. Then start from that Idea. Use Google and MDN if you get stuck.Learning is much easier If you know why you need an answer to a question.,LetscatYt,2025-07-28 05:10:17,1,learnprogramming,t3_1mb1ack,False,
n5k6roq,The most reliable way by far is to stop worrying about whether you're going to turn out badly if you don't get the best education possible and start learning anyway.,Putnam3145,2025-07-28 05:30:51,1,learnprogramming,t3_1mb1ack,False,
n5v8jga,"As strange as it sounds, but *stop watching tutorials* - really, that's the entire point.Start *doing*.Watching tutorials to become a programmer is like reading novels to become an author. You can *read and understand* a book, but you wouldn't be able to *write* a comprehensive, fully developed novel, if you didn't *actively practice*. > watching videos, following along with examples, and I understand everything in the moment....and there we have the problem. You, like most people, focus on the *code*, on the *final result*, on the *completed car*. You don't focus on what actually leads to the code, on the *design process*, which is far, far more important than the code itself.You need to learn to *analyze and dissect problems*, to *break them down*, to *create individual solutions* to the sub problems that *then* can be *implemented* in any programming language.Learn to plan. Sit down with pencil and paper and start from there. Not from the code. Start from the problem, break it down, solve it *your* way, don't even think about programming. Once, you have a working solution, test it. Track the steps you took. The more detailed, the better. Then, convert the solution into code.Start smaller. Hackerrank and Leetcode are for experienced programmers preparing for interviews. Start with [Exercism](https://exercism.org).And if you need to brush up on Python fundamentals, do a *proper* course from A to Z: MOOC [Python Programming 2025](https://programming-25.mooc.fi) from the University of Helsinki.I'll just leave some of my former comments from /r/learnprogramming here:+ https://www.reddit.com/r/learnprogramming/comments/1j9ezmx/getting_better_at_coding/mhdna2e/+ https://www.reddit.com/r/learnprogramming/comments/1iz7wv3/how_to_become_a_better_engineer/mf10qbg/+ https://www.reddit.com/r/learnprogramming/comments/1j3w7x9/how_to_actually_learn_problem_solving_skills/mg3q9ya/+ https://www.reddit.com/r/learnprogramming/comments/1ioehwa/struggling_to_put_together_my_own_code/mcirhxq/+ https://redd.it/1jyd36k",aqua_regis,2025-07-29 21:22:49,38,learnprogramming,t3_1mcnubb,False,
n5vbtrz,It's because you mostly HAVEN'T started learning yet.,lukkasz323,2025-07-29 21:39:12,10,learnprogramming,t3_1mcnubb,False,
n5v873t,"This is completely normal. Not just in programming, but in maths and so on too. Watching someone else do it is an important first step, but it's **only** a first step. Doing it yourself is actually where most of the difficulty is. You can't skip it, and you can't make it go faster or easier (assuming you're working from good resources) - you just have to push through the difficulty.",numeralbug,2025-07-29 21:21:07,9,learnprogramming,t3_1mcnubb,False,
n5va7eo,"It's normal. You only *really* learn by doing. You can memorise as much as you like, it will rarely make you good at anything except quizzes. It's a skill you have to cultivate by deliberate practice. Research can be a large part of the job, but it's only part.If you've truly no idea where to start, you picked a problem beyond your current abilities. Do something simpler. Print your name. Make it ask your name first. Make it calculate something etc. You want to pick a problem where you're not sure how to solve the whole thing but you can identify some key parts and what they'd look like when broken down.",HashDefTrueFalse,2025-07-29 21:31:03,3,learnprogramming,t3_1mcnubb,False,
n5v86l7,Most people don’t understand that 99% of coding is searching on stack overflow.,emergent-emergency,2025-07-29 21:21:03,3,learnprogramming,t3_1mcnubb,False,
n5v94pb,"Seems like a ton of people struggling with the same thing here. It's normal. The knowledge of instructions and other theoretical language parts does not translate into intuitive understanding on how to use them to build functional code. Knowing all Chinese words is still far from the ability to write a poem in Chinese. The proper intuition takes time and practice to train.In the meantime, try to reverse your thinking. Think what your starting with and what you want to end up with. Then, go from the end to the beginning. For example, if I want to write a function that calculates the cumulative age of all the users of the system, the input is the user list, and the output is a number. Then, I know that number needs to be a sum of each age of each user. So, I need to get user age from user entry. So, I need to compare their birth date with current date. You can probably write a function for each of these steps, and stitch them together. Not sure if that helps at this stage, but the idea might come in handy.",voyti,2025-07-29 21:25:42,2,learnprogramming,t3_1mcnubb,False,
n5v9efb,"It's good to know how to start a new software project. That's something usually taught in software classes. For instance, Visual Studio has a process for creating a new project, and there's a similar ""new project"" process for just about everything.Beyond the basics though, it's common to look things up online. You won't be able to memorize all the syntax and everything of a programming language.",RolandMT32,2025-07-29 21:27:02,1,learnprogramming,t3_1mcnubb,False,
n5vakvw,"My motto with learning has become ""maximize friction to maximize learning"". Learning loops? Watch one example, then put it away and code from scratch, then compare to see what you missed / messed up.There are really two main sides of understanding something I think: One is ""I can say/grasp the words"" and the other is ""I can feel what to do here"". People often try to use the first to reinforce the second, but that's the wrong order imo. I got stuck in that pit for a long time.Take stabs at stuff on your own (ie, watch a tutorial, then put it away and try to recall by coding yourself - bonus points for meaningful variation from their example) and I promise you that muscle will grow pretty quickly.Something more actionable that helps me a ton is writing out the comments for what needs to happen at each step, THEN flesh it out with code. Over time, I find myself doing that less and less as you tend to hit similar solution patterns.",AtlasLeCleetus,2025-07-29 21:32:54,1,learnprogramming,t3_1mcnubb,False,
n5ve1lt,Don't worry it happens to everyone :winking_face: i've been programming for 25 years and i still hit that wall once in a while.Find a simple example of the idea you have in your head and start with modifying that. If you're not exprienced it's hard to get the skeleton working for any idea. :smiling_face_with_smiling_eyes:,TomatoEqual,2025-07-29 21:50:20,1,learnprogramming,t3_1mcnubb,False,
n5vekr8,"Everybody experience this. Don't worry, you're on a good track :)",Glass_Albatross1,2025-07-29 21:53:02,1,learnprogramming,t3_1mcnubb,False,
n60vznx,"Beyond the stuff you mentioned, it also just makes you more capable at other stuffEvery hobby of mine, I have written programs for, either to calculate values or create data/visualizations/templates/whatever, or to create programs to do stuff for my hobby in some way. I know that's vague sowoodworking: \- I've made lots of calculators, template creators, etcphotography: \- various calculators \- wrote some timelapse software \- wrote many scripts to manage my library of digital photospoker \- wrote simulators, solvers, all kinds of stuff3d printing, cnc \- wrote all kinds of gcode generators, CAM \- wrote code to make PCBs on small CNC machines \- wrote CNC visualizers - gcode in, shows what the machine will do",Buttleston,2025-07-30 18:28:11,36,learnprogramming,t3_1mde707,False,
n60wrfg,"Regardless of whether you choose to go pro or not - learning to code at the very least unlocks a lot of things you can do with a computer.I mean, you have programs and websites for all sorts of things - but when you need to do XYZ and no program/website can handle that with ease, you can whip up some code for solving XYZ yourself.Also, there's of course automating things through code - even everyday things. It empowers you to work smarter, not harder.Learning even just basic coding gives you some independence and can help you save money in the long run.",Potential_Copy27,2025-07-30 18:31:46,6,learnprogramming,t3_1mde707,False,
n612xyi,I just learn coding because i enjoy it. No other reason. It's like I'm doing puzzles. I like assembling things and making things work.,Jourleal,2025-07-30 19:00:52,6,learnprogramming,t3_1mde707,False,
n60vd4i,"I do hope it helps with problem solving! Sometimes as a cs major I’ll be in day to day life and think schizophrenically “I may have came up with that solution in my day to day because I trained my problem solving skills via coding”, but I have no basis or control to truly make that claim.",Cautious-Bet-9707,2025-07-30 18:25:17,7,learnprogramming,t3_1mde707,False,
n6142i5,"I genuinely have fun with it even when I'm not working, so if you get ""bit by the coding bug"" so to speak then it's a fun hobby.Learning how to problem solve is a big part of it - it forces logical thinking, encourages organization, and grants you some more power over computers in a computer dominated world.That and it's also quite accessible now compared to even 10-15 years ago.",anotherMichaelDev,2025-07-30 19:06:26,6,learnprogramming,t3_1mde707,False,
n60wvy4,"Is learning to code an important skill to learn? No. Are all of those other skills good skills to learn? Sure. Is learning to code the best way to learn those skills? Maybe notIf you’re going to teach kids to code, teach them with that being the goal. If they pick up other skills, cool. But we don’t teach art with the idea that kids are going to learn anything more than “art”.",Gawd_Awful,2025-07-30 18:32:21,4,learnprogramming,t3_1mde707,False,
n62gobh,"Looks like a good list.I've always contended that the most valuable trait for a programmer is a high tolerance for frustration, so that's your first one.Problem solving is more nuanced. There are all kinds of ways to solve a problem, but programming includes a required strategy. You must break large problems into smaller, more approachable, chunks.You also have to be able to define the problem explicitly. No relying on another human to intuit your intent. Instructions much be clear and unambiguous. There's a TikTok going around showing a teacher following written instructions to construct a peanut butter and jelly sandwich. With predictably comical results. Most humans fail this, at least the first go. Programmers don't.Finally, and this is a rare skill indeed, you must be able to diagnose problems. If a program runs first go, great. However, it's debugging where learning really happens. Diagnostics, probably even more than solving the initial problem presented, is a valuable life skill.",WystanH,2025-07-30 23:05:08,3,learnprogramming,t3_1mde707,False,
n60wpbs,"I think it's similar to mathematics, you can encourage people to learn it for x reason but that doesn't mean they will use or need it depending on their future career path.I guess exposing people to programming to see if they enjoy something logic-based is worth the time (which from what I've heard is pretty standard in highschool nowadays)But outside of that not really. Programming is not for everyone and not everyone enjoys or likes programming.",Wingedchestnut,2025-07-30 18:31:30,2,learnprogramming,t3_1mde707,False,
n619b0o,"I think it is a valuable skill. It is the art of logic.It can teach business logic. I've found that after 20 or so years of coding as my primary activity, both for pay and not for pay, that I'm now transcending that engineering knowledge into other engineering disciplines.It's also a puzzle solving activity. You could just be doing crossword puzzles or playing solitaire, but it takes it to a whole new level to make games and other things.The fact that a solution exists is not a deterrent to code it myself. We all start somewhere.",for1114,2025-07-30 19:31:36,2,learnprogramming,t3_1mde707,False,
n61h6mf,"When I was learning, it was 1986. I did it because it was fun. I turned out to be rather good at it, so that became what I've mostly done to pay bills in my adult life. Now I manage other people who do this.Knowing how to code has application elsewhere in life. Most skills do, because skills are a set of repeated behaviors, and there is overlap.However, it isn't for everyone. Not everybody is into drawing. Not everybody is into reading. Not everybody is into coding. Like the vegetables on yer plate, try it, see if you like it. Maybe you try it a couple of times. Eventually, you don't have to try it anymore if you don't want.Other skills that people get wide benefit from: cooking with something other than a microwave, baking (which is different than cooking, though not everybody realizes this), baking is about precision.at least a small amount of sewing enough to repair a hole or reattach a button, sewing is a very technical skill.how to safely load/unload/clean a gun (assuming that having a gun is a thing in yer world), how to change the oil on a car or other gas powered apparatus (though as we go to battery powered everything, this becomes less of a thing), headlights, taillights, etc.how to replace a light fixture or light switch, and how to replace the innards of a toilet tank (which I had to do today). faucet replacement not a bad thing to know either.knowing how to change air filters, on whichever things in yer life have airfilters.",ShoddyDivide4049,2025-07-30 20:09:09,2,learnprogramming,t3_1mde707,False,
n5x6acb,"when i learned that computers are really, really dumb. meaning you have to tell it exactly, precisely what to do. Read Amelia Bedelia.",ffrkAnonymous,2025-07-30 04:03:10,28,learnprogramming,t3_1mcvfkz,False,
n5wzulq,"To be honest I don't know if I have a programmers mindset. I do know I keep finding software, and software supporting fields like logic and math, really interesting and that interest keeps driving me forward.At least for me there wasn't one, big epiphany. It's been lots of little ones all along the way. When I understood what an object was. When pointers made sense. When doing the math and understanding how memory works made floating point comparison issues make perfect sense.On books: Two that provided a great foundation for a lot of my other knowledge were: \- ""Discrete Mathematics with Applications"" by Susanna S. Epp \- ""Structured Computer Organization"" by Andrew S. Tanenbaum & Todd AustinI only mention these because I found no end of information on how to learn certain languages or tools but these were great for supporting the logic behind a lot of concepts. I don't think they're mandatory reading depending on what you're going for but the courses I used those in were some of the most fascinating.",Robotkio,2025-07-30 03:18:46,14,learnprogramming,t3_1mcvfkz,False,
n5xkbfr,"Honestly, there is no such thing as a ""programmer's mindset"". That's a myth and a general excuse for people too lazy to invest the necessary effort, discipline, persistence, diligence, and work to learn.There are things that can make learning easier, such as being a logically inclined person, but even that can be improved and learned.I am a firm believer that most (not all) people can actually learn programming to a certain degree. They won't all be able to reach a professional level, but they can definitely learn it.After all, programming is just creating and translating steps to solve a problem in such a way that the computer can execute these steps.We humans solve problems all day long, just we mostly don't even notice it as it is intrinsic. We work in steps every single second of the day, but we don't realize it.Learning programming is learning to consciously devise steps, to utilize our intrinsic ability to think in steps consciously.Most new learners focus way too much on the *code*, on the *implementation* in a *programming language*, which is only the last part of the process. Sure, it is absolutely necessary to learn a *programming language*, but after all this is just very limited vocabulary and very simple grammar.The real part of programming happens way before the code. It is the process of analyzing, breaking apart problems/tasks and solving them in sequences of discrete steps (again, a skill that we generally are intrinsically good with) that *then* can be *implemented* in any programming language.Here is also the problem with most tutorials and with many, even high quality courses: they focus too much on the code and too little on the design, on guiding the learner to devise the solutions.When I started out with programming, there were no tutorials. There was no internet. There were barely any knowledgeable people in my (rural) area. It was way back in the first half of the 1980s in the advent of the ""home computers"" (Commodore ViC20, C64, BBC micro, Acorn, Amstrad CPC-464, etc.). All I had was the BASIC (programming language) manual that came with my computer and a lot of curiosity. A bit later, we had some ""programming"" lessons (in double quotes because it was more a joke than anything serious) at school - one lesson per week where 8 people were crammed around 4 Apple II Europlus computers where we initially learnt AppleSoft Basic and later UCSD Pascal. Our teacher made us draw flow charts before we were even allowed anywhere near the computer. This seriously helped. Using a visual representation of the steps to solve our tasks made us think more about the actual steps than about their *implementation* in a programming language.Flow charts, Nassi-Shneiderman charts, bulleted lists, pseudo-code, all of these help and are somewhat underrepresented in modern computer learning. If people started out learning these for short time, they would learn much easier and much faster as most learners don't fail at the *languages*, but fail on *programming*.The above is also the reason Harvard chose to start with *Scratch* for their famous CS50 course. It is a visual programming language (in the style of Nassi-Shneiderman diagrams) that lets the learners focus on the *algorithm* on the *steps* instead of on an actual *programming language* with its keywords and grammar. Yes, Scratch comes across as childish because after all it was designed by the MIT to teach young kids programming, but that is actually the biggest advantage of it. Way too many people dismiss Scratch as childish and useless, yet, had they invested a couple hours with it, they would have seen its value.Way too many posts here are in the tone of ""I've learnt programming language X, Y, and Z, but still cannot program"". Why? Because they all focused on the wrong thing. They focused on the *implementation*, on the *end product*, on the completed car, instead of focusing on the *design process, the considerations, the decisions* that ultimately *lead* to the *implementations*.Similarly, way too many people claim ""they can *read and understand* code, but not *write* it"". Similarly, just because one can *read and understand* novels it doesn't automatically enable them to *write* meaningful, comprehensive, fully developed ones.Then, we have the ""I've watched X tutorials, read Y books, but cannot program"" people. Yes, sure, you know the theory, but you have never applied your skills in practice. This is like sitting in the desert and watching countless Olympic Splash Diving videos and reading all about it. Unless you get wet and actually do it, everything will just be plain theory and you will fail miserably in practice.Practice is the key. Even a step further: independent practice. It's not *copying* tutorial code after tutorial code. It's sitting down, thinking about something to program and starting working on it, without tutorials, without AI (don't get me started on that for learners), only with one's own work.There is nothing wrong with tutorials for a *certain use case*, e.g. for small, detailed, specific parts where one is unsure, but not for entire projects, e.g. the typical ""how to build X in language Y"" ones. If you need something special, e.g. ""how to work with SQLite tables in Python sqlite3"" or something alike, tutorials, blogs, etc. are perfectly fine.Too many people fall into *tutorial hell* because they don't dare to just simply start working on their own. They are afraid of not achieving their goals, they are afraid of failure, which is the completely wrong mindset for programming. Failure is an important part of learning. It is *gained experience*. It is equally important to know how not to do something as how to do something.Then, we have the ""do projects"" people who think that projects need to be huge, complex beasts and that instantly get discouraged by that thought. Again, wrong mentality. Every single program, no matter how small, is a project. One can only grow with their projects. People need to start small and simple and then work their way up to gradually larger and more complex projects.Then, we have the people who despair because they see the huge amount that is there to learn and only look at the summit, at the vast mountain of learning ahead of them instead of looking at the *path* ahead. One does not climb a mountain by just focusing on the summit. One climbs a mountain by looking at the path ahead and taking one step after the other.Then, we have the ones who declare ""programming isn't for me"" after investing mere *hours* (couple days/weeks) without much effort. Learning programming takes effort and doesn't come natural.*Fast tracking* in programming doesn't work (it actually doesn't work in any trained skill). There is no 0 to 100 in no time. Learning anything is a marathon, not a sprint. Slow and steady wins the race.> Recommend any books, courses, etc. that helped you most.Here is a knack. The most helpful books have actually fairly little to do with *programming*. They are about the *design*, the steps before the actual programs.The typical recommendations for this are:+ ""Think Like A Programmer"" by V. Anton Spraul+ ""The Pragmatic Programmer"" by Andrew Hunt and David Thomas+ ""Structure and Interpretation of Computer Programs"" (SICP) by Ableton, Sussman, Sussman+ ""Code: The Hidden Language of Computer Hardware and Software"" by Charles PetzoldAnd if you're hardcore: ""The Art of Computer Programming"" by Donald Knuth et.al.",aqua_regis,2025-07-30 05:56:10,13,learnprogramming,t3_1mcvfkz,False,
n5x4ljs,"If you are starting out, try to create small programs that interest you and borrow ideas heavily from other people’s code. Use a variety of books and courses to see other viewpoints. Once you get a little knowledge under your belt, get a job and ditch the books. By far the best way to accelerate your learning is working under some mentorship and other people better than you.",Successful_Leg_707,2025-07-30 03:51:20,8,learnprogramming,t3_1mcvfkz,False,
n5xwh8g,"I think you'll find a suprisingy array of ideas on what people consider a 'programmers mindset'.For me personally and as others have said it's the culmulation of lots of little moments rather than any stand out catalysts, but there were a couple of moments that definitely impacted my course.The first was actually on here. Someone posted a question asking something along the lines of 'What is the most important trait in a programmer?' and the most upvoted answer by a country mile was simply 'Perserverance'. It's euphoric when all the parts of a solution click into place and we get to sit back and watch it fire on all cylinders, but man it's a rough road to get there at times. The ability to stick with it when everythings broken and nothing makes sense is crucial.That leads me nicely onto the second one really - embracing and even celebrating failure. Andrew Huberman is a neuroscientist that has a few podcasts on how learning works, and listening to him explain that it's repeated failure that triggers the learning process really changed my attitude and I wish I'd embraced it sooner. There's a quote along the lines of 'The master has failed more times than the apprentice has even tried', and whilst I probably spread my interests too thinly to master anything in particular, I'm doing my best to fail my way there.",RushDarling,2025-07-30 07:50:00,3,learnprogramming,t3_1mcvfkz,False,
n602q7n,"I think it's when you encounter any problem in life, you can think of a software program that can solve the problem. Once you start seeing problems or people tell you about problems at work and you start thinking, ""I could make an app for that..."" then you have a programmer mindset. Especially if it makes you excited to try it and write the program. Then you sit down for hours on hours with laser focus on finishing the program and you don't even get tired until you're done. That's a programmer's mindset.",bigbry2k3,2025-07-30 16:14:50,2,learnprogramming,t3_1mcvfkz,False,
n5xn8u5,When I thought computers are pretty simple at the lowest level really,IronAttom,2025-07-30 06:22:33,1,learnprogramming,t3_1mcvfkz,False,
n5xneo1,"For me it was probably in my sophomore year of college when we had to learn how compilers work. Creating formal grammars, tokenizers, etc... really make C++ start to click. Add to that I also had to take x86 Assembly and the whole concept of memory management and pointers became second nature.",DonkeyTron42,2025-07-30 06:24:03,1,learnprogramming,t3_1mcvfkz,False,
n5xtgim,When I felt comfortable teaching it to others,deblob123456789,2025-07-30 07:20:38,1,learnprogramming,t3_1mcvfkz,False,
n5xud2h,The moment I stepped outside of what the tutorial was telling me and thought “ok what if I put this here instead?”Also the moment I started breaking stuff down. Googles for instance:“Read file in python”“Insert text to python file”,peppersrus,2025-07-30 07:29:20,1,learnprogramming,t3_1mcvfkz,False,
n5nb6rl,"> So here’s my question: where the hell do you even get your definitions from?Alan Kay famously said ""I made up the term ""object-oriented"", and I can tell you I did not have C++ in mind"" (probably not an exact quote).The exact definition of object oriented and how many different types of polymorphism there are and whether encapsulation enables abstraction or abstraction enables encapsulation or they are both special cases of some greater concept is not particularly interesting to me. I have a general idea and that's fine. I'm not trying to write a research paper here.",lurgi,2025-07-28 17:48:48,22,learnprogramming,t3_1mbmoz8,False,
n5nakeo,"It seems reasonable to say there will be no single source of truth here. Something like encapsulation is a qualitative statement, not a specific technical mechanism. It's like how a mathematician would talk of 'generalizations'; you won't find a precise, clear, mathematical definition of what does or does not constitute a generalization, and probably every mathematician has their own definition.Two people arguing over whether something is or is not encapsulation right on that grey boundary sounds like a pointless argument, as they're both right. However, the fact an argument is pointless seems no obstacle to some online.",lfdfq,2025-07-28 17:45:59,29,learnprogramming,t3_1mbmoz8,False,
n5n9yht,"There are 2 dirty secrets about OOP:1) That the original ""sources of truth"" for pretty much EVERYTHING regarding OOP, were doing things for completely different reasons than what later proponents of OOP preached to the masses: https://m.youtube.com/watch?v=wo84LFzx5nI2) That what is commonly taught as the core value proposition of OOP doesn't work: https://m.youtube.com/watch?v=QM1iUe6IofM",usrlibshare,2025-07-28 17:43:14,26,learnprogramming,t3_1mbmoz8,False,
n5o837y,"I think you're just hitting the limits of imagining that clear, precise definitions exist for basically anything. OOP and encapsulation are just arbitrary ways of parsing reality that were chosen because the people who first thought of them thought it made programming easier if you thought of it that way. Different people come along with their own ideas and reformulations, but there is no One True Encapsulation that god invented and wrote on stone tablets. There's just people trying to think of programming in a productive way. And sometimes those ways aren't actually very productive, or sometimes those ways are productive for them but only because they think of things in an unusual way, and sometimes someone thinks of a new way that works for a lot people and everyone gets excited about this new way for a while until other people figure out the new way's short comings and go back to looking for better ones.Even in math, it's arbitrary. You only have clarity because you declare it by fiat--you make up some premises and rules because you think they are interesting or they will be informative in some way, then you try to figure out all the consequences of the rules you made up. A lot of math is about just using existing rules to figure out new things within that ruleset, and a lot of different math is thinking of entirely new rulesets that seem interesting and generative.Programming, and trying to define encapsulation is more like the second kind of math.",PeteMichaud,2025-07-28 20:24:42,7,learnprogramming,t3_1mbmoz8,False,
n5njnrs,"You have to remember that these terms and design patterns were formed during programming's adolescence. At the time these words were coined, Fortran and COBOL were the dominant programming languages, and they were extremely barebones compared to the modern versions of those languages. It's hard to fathom just how much we take for granted with modern programming languages today.In terms of encapsulation, folks were mostly just proposing what we now think of as modules or classes. Basically, the idea boils down to creating public facing APIs that do not expose their inner variables. I like [this source](https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/02-encapsulation/) which quotes from some of the originators of OOP-- Dave Parnas and Alan Kay. > Parnas and his peers pushed for not just hiding the data, but also how the data was manipulated. By hiding these implementation details, they could prevent programmers who were used to the globally accessible variables of early programming languages from looking into our code and using a variable that we might change in the future.Barbara Liskov is another big name in the OOP world, and [she covers encapsulation in this fantastic paper](https://www.cs.tufts.edu/~nr/cs257/archive/barbara-liskov/data-abstraction-and-hierarchy.pdf)> For abstraction to work, implementations must be encapsulated. If an implementation is encapsulated, then no other module can depend on its implementation details. Encapsulation guarantees that modules can be implemented and reimplemented independently; it is related to the principle of “information hiding” advocated by Parnas [15].Those three formed the basis of all modern OOP concepts. They are the definitive sources. I think much of the confusion comes from the second wave of folks who implemented the popular languages and who each definitely went their own way. Because their languages are so popular, their opinions are almost equally valid despite the fact that they all disagree with each other on minor things.- Bjarne Stroustrup- James Gosling- Brad Cox- Bertrand MeyerAs a side note, when discussing design patterns, there are a few definitive sources:- [Design Patterns](https://www.javier8a.com/itc/bd1/articulo.pdf) by the Gang of Four- Pattern Oriented Software Architecture, most notably volumes [one](https://daneshjavaji.wordpress.com/wp-content/uploads/2018/02/sznikak_jegyzet_pattern-oriented-sa_vol1.pdf) and [two](https://archive.org/details/patternorienteds0000unse_u5t3)- [Patterns of Enterprise Application Architecture](https://raw.githubusercontent.com/ZoranLi/Books1/master/Patterns%20of%20Enterprise%20Application%20Architecture.pdf)However, most of those were written over twenty years ago, so [refactoring.guru](https://refactoring.guru/) is a good resource for putting these concepts into a modern context.",jessepence,2025-07-28 18:28:05,6,learnprogramming,t3_1mbmoz8,False,
n5n9niv,"And what’s even more interesting — everyone argues as if they’ve all read some *fundamental text* behind the scenes… but no one ever actually mentions it.For example, one blogger I follow says encapsulation is about making sure a method takes in as little external data as possible. Others write that encapsulation is about *hiding things* — like, you add `private` where needed and boom, that’s encapsulation. Then there’s the group that says it’s about combining data and methods together. And so on.And N-O-B-O-D-Y ever cites anything to back up their claims. It’s like: *“Well, I said it, so you should believe me.”*So in the end, I can go to an interview, and the interviewers can tell me absolute nonsense about OOP — and I can’t even call them out on it, because there’s no monumental work, no axiom, no precise definition from an authority that I can point to and say, **“No, this is the correct one.”**Everyone just interprets it however they like, which leads to the absurd situation where: if I’m the lead on a project, then *my* definitions are the truth. If you’re the lead, then *your* definitions are the truth.It’s hilarious to see this in a field that’s supposedly the pinnacle of precision, rigor, and concrete definitions.",Accomplished-Bat-247,2025-07-28 17:41:52,7,learnprogramming,t3_1mbmoz8,True,
n5nb3y1,"Sorry to be blunt, but these concepts don't need, and aren't worth, a shining crystalline ""source of truth."" They're techniques, no more and no less. These OO models are meant to be tools to allow us to build more complex systems by adopting packaged components (objects, libraries, class libraries, modules, whatever they're called) that don't need our total understanding to use effectively. It's helpful to know what the designers of *your chosen language / framework* were thinking when they designed the object model you will use. Other than that, don't overthink this.",Aggressive_Ad_5454,2025-07-28 17:48:27,5,learnprogramming,t3_1mbmoz8,False,
n5nanw6,"I'm by no means an expert in programming but one thing I do know from studying liberal arts and the humanities in Academia is you kind of see this effect across the board in every scientific discipline. Everyone has their own etymology and their own way of ""correctly"" understanding things that somehow conflicts with the ""usual"" way of understanding. Nominally you'll get this from professorial types who are heavily steeped in the nomenclature of their studies, and a lot of thought and debate goes into subjects such as these.",CarRepresentative782,2025-07-28 17:46:25,2,learnprogramming,t3_1mbmoz8,False,
n5ndol3,"Object-oriented programming is about representing a system as a collection of objects that interact with each other. That’s it. That’s all it is. It’s not a language feature; you can do OOP in C, Fortran, and even assembly. Anything else is just extra.",kevinossia,2025-07-28 18:00:02,2,learnprogramming,t3_1mbmoz8,False,
n5o3zvb,Peoples source of truth is usually just the first source they hear,MoonQube,2025-07-28 20:05:28,2,learnprogramming,t3_1mbmoz8,False,
n65x3s2,"Backend. You want to start on the fundamentals. Data structures, OOP, multi threading, etc. Everything else is just syntax.",Great_Guidance_8448,2025-07-31 13:43:52,50,learnprogramming,t3_1me1vlf,False,
n65z9nb,"I started with backend, but the order doesn’t really matter. Frontend shows fast results while backend builds logic and data skills. Pick one and learn both over time.",ervistrupja,2025-07-31 13:54:54,13,learnprogramming,t3_1me1vlf,False,
n65xe33,"I learned languages that would be used on the backend first, but learned frontend before backend.",carcigenicate,2025-07-31 13:45:20,7,learnprogramming,t3_1me1vlf,False,
n65xkux,"Back-end. To me was pointless make something good to the eyes but that doesn't work, and i like back end more than front end, so i doesn't Go that deep in the visual side of the thing, Just The Basic tô do something good.",Illustrious_Prompt20,2025-07-31 13:46:19,5,learnprogramming,t3_1me1vlf,False,
n66005e,I started with back-end because it was easier to get something working without having to worry about how it looked.It didn't matter that a div wasn't centered; that was the front-end guy's job.I don't think the order really matters cause you can just mock some endpoints and fill in the details later.,mxldevs,2025-07-31 13:58:33,2,learnprogramming,t3_1me1vlf,False,
n6645vg,"Just start.I learned backend first, then added JS.",Rain-And-Coffee,2025-07-31 14:19:00,2,learnprogramming,t3_1me1vlf,False,
n65xxw3,"Well, C# and XAML at the same time, but also some little C++ and VBA stuff before that",ZubriQ,2025-07-31 13:48:11,1,learnprogramming,t3_1me1vlf,False,
n65yhax,"Hmm, I taught myself HTML, CSS, and a bit of JavaScript back in the days when geocities, angel fire, and Myspace were a thing. In college I took a web dev course, but when I got a full time job I focused on backend first and did a bit of frontend.",Zesher_,2025-07-31 13:50:56,1,learnprogramming,t3_1me1vlf,False,
n664vpl,"I started front-end if I recall. I’ve thought my son a few things over the years and he really appreciates the visual reward of it. After a while though, if you want more, it’s inevitable you’ll have to start writing some backend code. Hopefully by then you’ve already made your mind up on whether or not you have enough interest to give it a go.",Apprehensive_Bet3134,2025-07-31 14:22:29,1,learnprogramming,t3_1me1vlf,False,
n669ve5,"Both at the same time. Would not recommend.My advice is focus on backend fundamentals first, then learn the basics of HTML/CSS. Later you can go for frontend frameworks(ex. Vue, React etc).",ouarez,2025-07-31 14:46:19,1,learnprogramming,t3_1me1vlf,False,
n5sejot,"I really don't know where you people find AIs that spit out ""entire apps"" and are such an increase in productivity. With all respect, is your code craftsmanship meant to be limited to cookie cutter CRUD apps? Cause last I checked (and I check regularly, and with the latest available models), AI falls apart completely with any more complex, custom logic or any bespoke code, which is also where the craftsmanship would shine anyway.I have no problem to use AI for boilerplate, derivative code that's nothing more but busywork, and for parts that require any finesse whatsoever, AI is just a waste of time anyway. AI is simple - the more predictable the next line is, the better it will guess it. Any actually interesting code is not easy to guess, that's why AI based on the current technology fails and will fail by definition.",voyti,2025-07-29 13:21:09,63,learnprogramming,t3_1mcatjd,False,
n5tcbtu,"Grain of salt and all that, but I've been a mediocre programmer since 2015, and having to debug and optimize AI slop the last few months is becoming so increasingly tedious, I'm actually dedicating a part of my day, everyday to improving my programming skills so that I just stop depending on AI altogether.",The_Barkness,2025-07-29 16:05:51,13,learnprogramming,t3_1mcatjd,False,
n5ugqg4,"""Back in the day writing code felt like art."" When was this?""The craftsmanship of coding feels like it is dying"" You can still def do this since AI isn't doing quality craftsmanship.What apps are you generating with ease? What job does even require you to do this. Most of the time you're dealing with much older and established code that AI is defnitely isn't able to handle without some guidance. Half of the time it just decides to do style changes (unprompted) on files I didn't even know we had. Use it to help you find things, suggest things etc but you do the actual coding. You have articles like [https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/](https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/) so you definitely aren't faster just blindly using AI",MrKnives,2025-07-29 19:11:22,6,learnprogramming,t3_1mcatjd,False,
n5tzpon,"It's not about copying and pasting mindlessly. I use it as a tool to generate boilerplate code, which I always review, understand, and tweak as needed. We should be problem solvers, not just code-writing machines.",framorvaz,2025-07-29 17:52:35,5,learnprogramming,t3_1mcatjd,False,
n5scqna,"> The craftsmanship of coding feels like it is dying. I used to spend hours reading documentation, slowly building something through rigorous testing and tweaking, enjoying every part of the process. Now I just prompt and paste.Thw only thing that has changed is you. If you hate it stop.",Digital-Chupacabra,2025-07-29 13:11:10,9,learnprogramming,t3_1mcatjd,False,
n5utooc,"AI is great for 'boilerplate' code but after that the programmer uses his/hers skills to code the more complex logic and functionality of the program. The programmer will choose what data structures to use, what type of arguments to pass to functions (value or reference). The programmer will debug as well as optimize the code and more. How should the program flow, programmer. Creative ideas, programmer.",mpw-linux,2025-07-29 20:13:00,4,learnprogramming,t3_1mcatjd,False,
n5vw7qy,"the only programmers losing their job to AI are the ones who have offloaded their skills to it.Even if you need to use AI as a company policy, you should be using your expertise to optimize it.youre losing skill and passion by offloading your work. Genuinely stop using AI, especially *how* you are using it because you haven't been programming by the sounds of it.If I just showed up for 8 hours a day but didn't work, I'd probably look for some other way to actually contribute what I have to offer - which sounds like where you're at.**Im bias as all hell against LLMs",IdiotInIT,2025-07-29 23:26:29,2,learnprogramming,t3_1mcatjd,False,
n5zplyh,"> With AI spitting out entire appsIt's not. That's a myth. > It doesn’t feel the same anymore. The craftsmanship of coding feels like it is dying.Now you're just being melodramatic. > I used to spend hours reading documentation, slowly building something through rigorous testing and tweaking,That's because you were a beginner. It sounds like you're just getting burnt out and your hobby has become a real job. > Now I just prompt and paste. So you've gotten lazy.In my day we just complained about endless meetings. You kids and your fancy AI doing your work for you...",huuaaang,2025-07-30 15:12:33,2,learnprogramming,t3_1mcatjd,False,
n5ueg6x,You can instead of coding by your hands learn how to prompt ai then the answer is totally dependent on your brain and Creativity which gives you the emotions like before.But at the End I'm agree with you. Just copy and paste Without criticism is very boring and unpleasant.,AparsaSh-Dev,2025-07-29 19:00:39,1,learnprogramming,t3_1mcatjd,False,
n5wczxe,"Can you tell me what AI develops entire apps? So I can speed up my productivity too, you know.I tried using AIs to handle basic tasks for me when everyone started saying that AI would ruin programmers' lives and produce outdated, broken, and bug-ridden code. Yeah, it might be faster because some parts are already done and just need tweaking, but that works for small scripts since they are simple and easy to track and fix. However, it's impossible for an AI to create a full app exactly as you want because you can't specify all the details. There will always be things you do through pure automation simply because you're used to coding.Last time I asked an AI to write a server.js to run express, and it just didn’t work. I had to write everything again lol (by writing everything again, I mean going to my GitHub and copying and pasting my last server.js, which was also copy-pasted from my previous project).So no, AI does not destroy programming. There are no AI writing apps on demand, you could use something like Copilot, but it won't make a big difference unless you're doing repetitive coding. And if you are doing that, you're probably coding in the wrong way.People also talk about AI replacing artists, but artists are still working because AI can do some things to represent your ideas. However, it will never capture everything the way you want because your ideas need a brain with empathy to understand what you truly mean and what you want to do it as you wish. An AI can only replicate what you do, and all the details you don't provide, the AI will just do whatever it wants.You can tell an artist, ""I want my character to be like Jhon Wick,"" and they will take your ideas and adapt them to fit Jhon Wick vibes, while an AI will probably do Jhon Wick and just add some wonky details on top of it.",Inmortia,2025-07-30 01:01:10,1,learnprogramming,t3_1mcatjd,False,
n5op24y,"If it works for you, it's a great method. Try to start with simple games",no_regerts_bob,2025-07-28 21:47:17,26,learnprogramming,t3_1mbtds4,False,
n5ot0pl,"In fact, I'd say doing LeetCode problems is a *bad* way to learn programming. That won't teach you how to make a real project; that will only teach you how to pass interview questions.Actually building a project is the best way to learn to program, and if you 're interested in making a game, then go for it. The only caveat I'd add is that games can be incredibly complex; game programming is often considered one of the most difficult fields of programming, because you need to understand user interfaces, state manipulation, AI, audio, physics, and more... but if you can handle breaking it up into a smaller pieces and figuring them out one at a time, it's a great way to learn.",minneyar,2025-07-28 22:07:51,22,learnprogramming,t3_1mbtds4,False,
n5opuy2,Sounds better than crying over LeetCode at 2am. Build the game.,Alex_NinjaDev,2025-07-28 21:51:22,10,learnprogramming,t3_1mbtds4,False,
n5oppw2,"Yes, learn fundamentals then build a simple program. Then a slightly more complex one.For example put a box on the screen. Now make it move using your arrow keys. Now put a second box and detect when they touch. Play a sound.You keep building up until you have Snake or Tetris.",Rain-And-Coffee,2025-07-28 21:50:39,6,learnprogramming,t3_1mbtds4,False,
n5p4dfw,There is a Mario Tutorial in JS that really helped me get an understanding on how to code and how to organize. The channel is meth meth method on YouTube,ms_nitrogen,2025-07-28 23:09:16,5,learnprogramming,t3_1mbtds4,False,
n5p76r7,"That’s a great method. Download Processing 4 and play around with it. Watch some Coding Train videos on YouTube and replicate, extend, and improve on them. Learning in an easy 2d framework is a great way to visualize code and learn how to debug",Swing_Right,2025-07-28 23:24:29,4,learnprogramming,t3_1mbtds4,False,
n5oygts,Stick with what's fun. Learn the boring and hair pulling out stuff later. I used fantasy football.,MyPaddedRoom,2025-07-28 22:37:05,2,learnprogramming,t3_1mbtds4,False,
n5pdwis,… if you are trying to learn how to make games why are we talking about Leetcode?,connorjpg,2025-07-29 00:01:19,2,learnprogramming,t3_1mbtds4,False,
n5pdxeh,pseudo code is for briefly explaining a thought/solution/example to someone else that you know is able to translate that into working code. using it any other way serves no purpose except maybe the illusion of understandingwhat is lacking in your list is applying all these things in real code. you need a lot of hours of actual programming for it to stick,NefariousnessMean959,2025-07-29 00:01:28,2,learnprogramming,t3_1mbtds4,False,
n5q5qki,Is it working for you? Then that's great!,Feeling_Photograph_5,2025-07-29 02:43:08,2,learnprogramming,t3_1mbtds4,False,
n5g3ez8,"I really don't really understand what you're asking. If you just want to program as a hobby and not professionally, go for it.",grantrules,2025-07-27 15:27:49,70,learnprogramming,t3_1map06r,False,
n5g6qnd,I think it's more apt to say it is a craft rather than an art.There are people who build fine furniture for a living and there are people who do it for fun. But the tools and techniques are still important.,gms_fan,2025-07-27 15:44:23,16,learnprogramming,t3_1map06r,False,
n5g7was,Not quite clear what your question is. Education is about *learning* not about getting a job. If you want to *learn* something because you like to learn about the fundamental of CS then go for it?I took a pottery class once because I wanted to learn about making pottery.If you don't like lectures then maybe that's not the best way for you to learn. I don't like lectures either... but I still got my degree but didn't go to class (learned from the book or by doing projects).,NotSoMagicalTrevor,2025-07-27 15:50:02,6,learnprogramming,t3_1map06r,False,
n5g38no,"Computer science doesn't prime you for the job market at all, it's very theoretical which sounds exactly like what you'd want to make your toys more complex and shiny.",disposepriority,2025-07-27 15:26:56,15,learnprogramming,t3_1map06r,False,
n5g5708,Dude no one makes a large Scale project alone in his spare time. Because you fucking die before the thing is done.,movemovemove2,2025-07-27 15:36:43,21,learnprogramming,t3_1map06r,False,
n5g5ys1,"Why are you doing a major if you don't want a career in the thing? That's so much energy, effort, and money going into something you want to do as a hobby.",SisyphusAndMyBoulder,2025-07-27 15:40:35,6,learnprogramming,t3_1map06r,False,
n5g5tp0,"Programming is the same as any other hobby. What you like to do for fun with that hobby is usually much different than how you make money with that hobby. It's a normal human behavior to want to only focus on what you enjoy with creative hobby.The reality is at some point in your life you're going to need to make money. You probably can't sustain your hobby forever, just doing whatever you want. Think of it like playing video games, sure you can say ""I only want to do what I find fun"" and sit in your room and play games all day. You can also sit in your room and program side projects all day. At some point you have to face reality, and find a way to make money and have some kind of success in your life. This is usually painful - a job you get programming will rarely be the same kind programming you enjoy doing as a hobby. When you get a programming job, your job isn't to make aimless side projects, it's to solve problems for the business using your skillset.Programming is a specialized skill and having a degree helps get your foot in the door, and many companies require one. I know it's painful / annoying / stressful / frustrating right now, but that's irrelevant. Dropping your major now would be short sighted and impulsive.Last thought is your priorities might change laster in life. You might what to buy a house, car, something expensive, start a family, or support someone, or have some life event that forces a larger amount of responsibility on you. Finishing your degree helps future proof your ability to make income and might make that time easier when it comes.",oil_fish23,2025-07-27 15:39:53,3,learnprogramming,t3_1map06r,False,
n5gxtnk,"I read your TLDR, and I don't understand what you are asking? ""If you want to do CS< you better want a job""... what? Yes, almost every person that wants to do CS wants a job in CS, because... we need to earn a living. If you want to do it as a hobby, no one minds or cares that you aren't after a job. I am not sure where you think you are seeing that programming as a hobby isn't acceptable? I will say that getting a full on degree in CS and not going into the field would be... an odd choice, as that is a lot of money to throw at something you don't want to get paid for, but you do you.",garciawork,2025-07-27 17:55:34,3,learnprogramming,t3_1map06r,False,
n5geop3,"I also don’t get what you’re asking.It’s YOUR career, do whatever you want. If it was me I would stick it out, but if you truly don’t enjoy it then no point.",Rain-And-Coffee,2025-07-27 16:23:25,2,learnprogramming,t3_1map06r,False,
n5gojq6,Even artists need to learn the craft before becoming great.It's not exclusively one or the other.,serverhorror,2025-07-27 17:11:08,2,learnprogramming,t3_1map06r,False,
n5e9lha,"The unfortunate situation is that it is hard to get into programming right now at the entry level. We are still getting over over-hiring from COVID and entry level positions are competing with LLMs, as dumb as that is.I teach CS at a university and students are having a hard time getting jobs and employers don't want to come to career fairs because they are not hiring.It is going to be easier to get in if you have a degree, but it isn't as sure of a thing as it used to be. And if you do go to a university to get a degree, that will take 4 years and by then, hopefully things have improved. The long term outlook is still supposed to be good according to the government job prediction folks.",ResilientBiscuit,2025-07-27 07:18:08,18,learnprogramming,t3_1mafx6n,False,
n5e9ugi,"Play limbus company bro, frfr. kinda helped me when I was in a similiar situation, story is inspiring and peak, and the game is made in unity idk if that helps. gl in life tho.",Shackscraft,2025-07-27 07:20:28,3,learnprogramming,t3_1mafx6n,False,
n5eact4,What's keeping you in your home City? You can study all over the country or even abroad.Self tought i'd only reccomend if you have a high amount of self discipline and drive. Freelancing i wouldn't reccomend. Learning programming from scratch on the job is usually a bad idea. Becouse you learn by making mistakes. And making mistakes while freelancing can have consequences for the end user.,spellenspelen,2025-07-27 07:25:24,3,learnprogramming,t3_1mafx6n,False,
n5eav2f,"SE grad here - In smaller cities, you might have a harder time finding developer jobs around. But a lot of companies in bigger cities also started to let their employees work from home. And yes, you can become a developer with no degree. You just have to be very good at it. More than half of my coworkers in tech actually didn’t have any CS or SE degrees.Degree is always a plus. I also got a degree in SE. But honestly it’s all about how hard you study/code, and how much you know in depth about programming and related topics. I know a guy that has high school diploma, but he started coding since he was 13. He has worked with PayPal, Google, etc. He started from a smaller company. With connection from that small company, he just keeps growing. You can get a degree related to it, and it does help imo. I got a degree, but I wasn’t doing the best when I was in college. I switched from business to SE and it was gonna take extra year in college. I ended up trying to do as many credits as I could in each semester, absolutely regret it. I almost failed in every class. Didn’t have time to actually study what’s going on. And yeah, it sucked when I graduated and needed to land a job. I ended up doing online tutorial to refresh my memories before I was able to land an SE job. My degree helps a lot on resume, but I think your projects you will be doing matter more. Companies want to see what kind of things you’re capable of doing. I could be wrong. I’ll wait for sr dev or someone to give some more opinions about it.",Ok_Stable7245,2025-07-27 07:30:17,2,learnprogramming,t3_1mafx6n,False,
n5eawoh,"It *is* true that at a certain point work experience trumps a certificate, but ask yourself this: how do you get that experience without a certificate?It's a bit of a catch 22.A good certificate makes starting out much easier.",EliSka93,2025-07-27 07:30:42,2,learnprogramming,t3_1mafx6n,False,
n5ebbsn,It's more true to say that experience *plus* a degree beats a degree alone for most positions. Experience without a degree.. really depends but I wouldn't bet on it working out at all,no_regerts_bob,2025-07-27 07:34:41,2,learnprogramming,t3_1mafx6n,False,
n5f8a81,"I will say going to a small college in your city could be a totally different experience than high-school. I go to a CC in my city and it's way different, they are actually supportive",mattp1123,2025-07-27 12:32:22,2,learnprogramming,t3_1mafx6n,False,
n5g1756,"First, you have to set your goals using SMART method then plan it on your calendar by the time (start low then increase time) and don't forget to talk breaks don't push too hard, sleep early, wake early and exercise at least 20m walking or more if you can. Books that can help you understand computer: the self-taught programmer, the self-taught computer science, algorithms and data structures. Also, there is a skill you must learn that's typing without looking at the keyboard to think clearer. In the end, use a note to write ideas that comes to your mind, use a task ls manager and don't socialize too much so you can focus on your goals.",raedamof911,2025-07-27 15:16:34,2,learnprogramming,t3_1mafx6n,False,
n5g65ay,"Also, a diploma degree at least is important for some or most companies if you can",raedamof911,2025-07-27 15:41:28,2,learnprogramming,t3_1mafx6n,False,
n5gnlto,"Hey, the fact that you're asking for advice and help is already a great sign. It shows you're not giving up, and that's a mindset you must keep if you really want to become a programmer - especially a good one.In general, experience > degree. I'm not a CS graduate myself - I actually studied chemistry - but I've still found my dream job writing code. It's absolutely possible.Becoming a good programmer is so much more than just hitting keys and shipping code. You'll need to accept the endless grind. In the beginning, everything feels exciting and kind of easy. Then reality hits. And honestly? There's barely any course out there that truly teaches you how to think like a developer - the pattern recognition, the problem-solving mindset, the ""sixth sense"" for asking the right questions.That said, not studying at all is a bad idea. You don't want to end up without direction or skills that can support you. But studying doesn't have to mean going to university. I'm from Germany, and here many young people start paid trainee/apprenticeship programs for around 3 years to learn a profession. Maybe something like that exists where you are too?If university isn't an option for you - especially if it's expensive or forces you into debt for something you're not passionate about - then yeah, don't rush into it. It could become a trap.Given your situation, there's no guaranteed path. But if I were you, I'd try to find a mentor - even if it costs money. Good guidance can save you a lot of wasted time and effort.Also: besides programming and avoiding university in your city, what else interests you? Maybe you can find some creative crossover - tech isn't just web apps and games. There's a lot of space to combine different passions.Whatever you decide, don't just think about the next year. Think in decades. It's your life - build something that lasts.",ENVAIO,2025-07-27 17:06:33,2,learnprogramming,t3_1mafx6n,False,
n51kqnw,"Since you know Python, start with data structures, algorithms, and Git. Build 2–3 small projects (like a to-do app or scraper) and share them on GitHub. Apply early and often!",Difficult-Plate-8767,2025-07-25 06:45:37,19,learnprogramming,t3_1m8s3l4,False,
n51l2jd,Choose what you want to build,OM3X4,2025-07-25 06:48:33,4,learnprogramming,t3_1m8s3l4,False,
n51xlcw,"Learn Git, basic data structures & algorithms, and build 2–3 simple but complete projects (CRUD apps work). Keep your GitHub clean and start applying early,interns aren’t expected to know everything.",prazeros,2025-07-25 08:46:29,2,learnprogramming,t3_1m8s3l4,False,
n52d95r,"Hey! Since you already know Python, that's a great start. I'd recommend looking into data structures & algorithms, Git/GitHub, and maybe a web framework like Flask or Django. For internships, build a few small but complete projects - something like a blog, a task manager, or an API service.Also, if you're interested, feel free to check out [r/WebsiteDevHub](https://www.reddit.com/r/WebsiteDevHub/) \- it's a growing community focused on web and app development. Just make sure to share or post things that match the topic of the community. Happy learning and good luck with your journey!",Difficult-Plate-8767,2025-07-25 11:05:09,2,learnprogramming,t3_1m8s3l4,False,
n52juup,Master data structures and algorithms.And pick a good AI niche. NLP engineers (Natural language processing) are in demand so that's a good insight. But either way AI is the best thing u can do.,Maleficent_Return485,2025-07-25 11:52:10,2,learnprogramming,t3_1m8s3l4,False,
n52piv2,"These are some non-technical suggestions. Quite often, many new people think the test is purely technical like taking a test, and that's probably mostly right, but personality can be a deciding factor.* Practice interview situations. Have someone ask you technical questions (code this up) as well as more people-related stuff (""What is your greatest weaknesss?"").* Apply to a lot of places and expect a lot of rejections. Take notes afterwards about what went well and what didn't.* Keep in mind your perception of interviews and their perception could be quite different. You could have done really well in your mind, but maybe they had no plans to hire and so you didn't get picked, or they nitpicked on a resume. You could have done badly in your mind, but they think it went well. * Work on your interview skills. Learn how to project positivity and be upbeat even if you aren't (mostly a first impression kind of thing)",CodeTinkerer,2025-07-25 12:28:02,2,learnprogramming,t3_1m8s3l4,False,
n51vkll,Had the same question,Andzj_2300,2025-07-25 08:26:57,1,learnprogramming,t3_1m8s3l4,False,
n52d1zp,Also check roadmap.shYou'll find everything there.,dhyannbellaryy,2025-07-25 11:03:38,1,learnprogramming,t3_1m8s3l4,False,
n53xo42,"If you like to add few certifications too while learning you can register here.[https://register.edx.org/verizon?utm\_source=vsf\_v\_citizen-verizon](https://register.edx.org/verizon?utm_source=vsf_v_citizen-verizon)Anyone can register from anywhere, just fill the details.",thisisdevang,2025-07-25 16:09:12,1,learnprogramming,t3_1m8s3l4,False,
n5fxtp3,"You're off to a great start with Python. Next, focus on data structures, Git, and building small projects - then showcase them on GitHub and start applying early.",alpinebuzz,2025-07-27 14:59:05,1,learnprogramming,t3_1m8s3l4,False,
n5mn4d9,"The next steps to get closer to that:\- Keep learning JS but don't worry about the deep stuff yet. I mean things like the event loop or execution context. It's a common mistake that confuses people more than anything else \- Learn the basics of the DOM. You don't need to memorize every single thing. Understand getElementById, addEventListener, and createElement \- Build a few projects. I know it's cliche and it's difficult to find projects to make, try and build things that are just html css and JS \- Learn what a library is. Learn NPM. Install a few libraries and play around with themOnce you get to that point you can start looking at objects - requests - async stuff. Contact me then and I can help you with that.Best of luck. You can do this.",The_Octagon_Dev,2025-07-28 15:57:40,18,learnprogramming,t3_1mbjs32,False,
n5mwj4i,"I'm from Iran. I took cs50x 2022 and I was struggling with it so much. I landed my first remote job at 2024 as a JR. Pytohn dev and I'm still working there. there shouldn't be any controversy around the fact that you have to learn the basics to get any dev. job and cs50x provides exactly that. You can't go wrong with cs50x, I can't imagine a scenario where you would regret taking that course later. The path you are on is a little challenging and rewarding, just stick to it and don't give up!",mahdi_habibi,2025-07-28 16:42:22,5,learnprogramming,t3_1mbjs32,False,
n5mvw7f,"you know, I’d recommend this open source Computer Science curriculum. https://github.com/ossu/computer-scienceThere is no perfect or right way to learn programming. When I started (I was 14F) and I utilized a bunch of resources online and built projects. This is one of those crafts where you absolutely have to learn by doing. Get your hands dirty, and start building stuff. When I went to college, that’s where I got a lot of exposure to concepts that are just not talked about thoroughly in Web Dev bootcamps (plus a curriculum to follow), so maybe OSSU will help. I think a lot of people in this sub need to learn Computer Science concepts alongside the language they’re learning how to write.",No-Strawberry623,2025-07-28 16:39:21,4,learnprogramming,t3_1mbjs32,False,
n5nu406,Respect you! Just thought I’d say this. You’re a smart kid,annaopolis,2025-07-28 19:18:15,5,learnprogramming,t3_1mbjs32,False,
n5omrgu,"Tbh, just find a project and complete it, something you find interesting. Use google and gpt (dont just copy and paste the entire gpt response) to help you. I never found going through tutorials very useful. After a bit, suddenly everything just clicked.",Hedge101,2025-07-28 21:35:43,2,learnprogramming,t3_1mbjs32,False,
n5pwurb,Thank you so much! I'll note down and work hard :folded_hands_light_skin_tone:,Iwastaken48N,2025-07-29 01:50:16,3,learnprogramming,t1_n5mn4d9,True,
n5rn6f8,"I'm in a pretty similar situation to OP, except I'm working with Java. Would it be possible to get a bit of help from you as well?",ShiftIndependent413,2025-07-29 10:14:09,2,learnprogramming,t1_n5mn4d9,False,
n5mx2wa,"Don't worry too much about HTML and CSS for now, Those are not programming languages. The main point is to learn programming (eg: C, Python or JS)",mahdi_habibi,2025-07-28 16:44:57,4,learnprogramming,t1_n5mwj4i,False,
n5px76j,CS50 is hard but it's very satisfying to see when you get the project right. It taught me to analyse the things I wanna do too so that's it.Thank you for the support man T-T I really appreciate it,Iwastaken48N,2025-07-29 01:52:16,2,learnprogramming,t1_n5mwj4i,True,
n5skvlg,I am currently taking CS50x and am on the verge of completing it. What did you do after you completed the course?Did you continuously polish one particular language or start looking for jobs immediately? Would love to know your approach.,Late_Scratch5404,2025-07-29 13:54:49,1,learnprogramming,t1_n5mwj4i,False,
n5axfob,"""JS wasn't THAT bad until I started learning about arrays""Why do so many newcomers expect programming to be easy? There used to be a general acceptance that programming is a complex, highly skilled domain. A few convenience methods for making working with arrays easier is not complex, trust me if this is what you're struggling with you will not have a good time.You don't need to commit all these array methods to memory, just know they exist and consult the MDN docs if you need to do something to an array but don't remember how. Alternatively, don't use any of them at all and perform all your array operations manually, you'll soon appreciate why these methods exist.",FurtiveSeal,2025-07-26 18:12:20,72,learnprogramming,t3_1m9yr44,False,
n5andey,As you actually use arrays more you'll find out,stiicky,2025-07-26 17:20:44,71,learnprogramming,t3_1m9yr44,False,
n5amw1m,"No one's forcing you to use them all! Use whichever ones are useful for you, become familiar with the most common, and when someone uses a weird one, look it up - maybe they have a good reason for it.",numeralbug,2025-07-26 17:18:16,44,learnprogramming,t3_1m9yr44,False,
n5aqs6r,This has to be a joke.,0meg4_,2025-07-26 17:38:05,11,learnprogramming,t3_1m9yr44,False,
n5an1lb,"Because they all have their purpose?When a language is created the language developers have to make a choice: Do they want a rich core library, or a streamlined and small one?The tradeoff complexity. A rich language (like JavaScript) offers plenty of ways to accomplish various tasks. We also see the same thing with Python. While this sounds great on paper, it also increases overall complexity as there's more to consider when picking what you need.Then we have languages with a smaller library with fewer abilities. Here, developers often find themselves writing a little more code, but the core library tries to be ""just enough"" for developers to express their intent and get stuff done.You also can't look at the number of methods and assume it is overkill. You need to look at what they're doing.",_Atomfinger_,2025-07-26 17:19:02,18,learnprogramming,t3_1m9yr44,False,
n5aosye,"> Why are there, literally, like 50 different methods for arrays in JS?Because there are lots of different things that people often want to do with or to arrays. 50 seems like a low number, actually.> Are all these really necessary?Necessary? No. They could just give you array construction and indexing and leave writing methods like map(), reduce(), join(), forEach(), find(), and so on up to each programmer. And then somebody would write a library that has 50+ methods that do all those things, and everybody would include that library in their code, except that some people would use a different library or no library at all, and you’d be here asking why the language doesn’t just expose all that functionality so that it’s standardized.> Seems like massive overkill. JS wasn't THAT bad until I started learning about arrays.Which methods would you eliminate?",iOSCaleb,2025-07-26 17:28:03,13,learnprogramming,t3_1m9yr44,False,
n5aomv7,It’s not 50 methods that you’re forced to use in every project.. they all serve a purpose and could be used if needed.,Ryguzlol,2025-07-26 17:27:11,7,learnprogramming,t3_1m9yr44,False,
n5avq53,"What a weird question. ""Why are there literally 50 different tools for working on an engine?!""",SuperGameTheory,2025-07-26 18:03:25,7,learnprogramming,t3_1m9yr44,False,
n5b2uq9,This has absolutely nothing to do with why people hate js,Ok_Finger_3525,2025-07-26 18:41:15,6,learnprogramming,t3_1m9yr44,False,
n5apgpi,Wait till you see DOM manipulation methods. And all of them serve their purpose. Just like array methods.,Single-Caramel8819,2025-07-26 17:31:23,15,learnprogramming,t3_1m9yr44,False,
n689jtp,15 years and counting.,CMFETCU,2025-07-31 20:22:02,31,learnprogramming,t3_1mec4w4,False,
n688icg,"8 years and counting. If I'm not checking docs, I'm asking ChatGPTEdit: You want to learn to solve problems",the_mvp_engineer,2025-07-31 20:17:13,17,learnprogramming,t3_1mec4w4,False,
n68bhi8,20 years and counting! (currently a senior engineer),HashDefTrueFalse,2025-07-31 20:31:05,8,learnprogramming,t3_1mec4w4,False,
n689xxi,Currently at 10yoe as a professional. Still check docs frequently.,0dev0100,2025-07-31 20:23:51,4,learnprogramming,t3_1mec4w4,False,
n68a7bz,It's just checking docs all the way up!,Sophiiebabes,2025-07-31 20:25:04,3,learnprogramming,t3_1mec4w4,False,
n68dqxx,"I hesitate to say that writing the actual code is the easy part, but.... it kind of is. Debugging is a huge part of it.As with so many creative skills, you learn to think multiple steps ahead. You learn the common pitfalls whether it be file organization or data modeling. You have to be able to plan for your application getting bigger because feature creep is real. I honestly didn't feel like I was doing it professionally until I started writing tests and collaborating with others.",huuaaang,2025-07-31 20:41:35,3,learnprogramming,t3_1mec4w4,False,
n68hu6z,"Honestly, you are asking the wrong question. The correct question is how long until I will know enough to make my project professional? You will always have to check docs. The answer is years.",Capaman-x,2025-07-31 21:00:52,3,learnprogramming,t3_1mec4w4,False,
n68bimk,"I’ve been programming for about 10 years, so I’d say about 10 years",sierra_whiskey1,2025-07-31 20:31:13,2,learnprogramming,t3_1mec4w4,False,
n68cl5b,About 4 years entering university soon still learning,Solar_Flare_00,2025-07-31 20:36:10,2,learnprogramming,t3_1mec4w4,False,
n68d9yv,"It took me about a year before I could something that I thought was worth using and not just a toy follow along tutorial project.Fifteen years later I'm still learning though, but the scope is obviously much bigger - I pop through stuff that used to take all my effort as weekend goofs now.",sessamekesh,2025-07-31 20:39:22,2,learnprogramming,t3_1mec4w4,False,
n63rvyb,"I’m guessing your question is basically “okay I wrote some code. What are the steps to have it be like the other programs I run?” Couple of different ways. You can either run it from the command line or create an executable. The command line is the traditional way, but if you google “make python executable” you can find instructions on making something standalone. This is also a big thing that separates compiled and interpreted languages. Compiled languages (eg. C) are only standalone (kind of, i’m hand waving a lot). Interpreted generally need an intermediate program to run. In this case, the python interpreter.",alienith,2025-07-31 03:45:26,13,learnprogramming,t3_1mdqhqz,False,
n63o7r7,"Your steps and understanding of the software development process aren't quite accurate. The way I'd classify the steps, in general terms, is: 1. You download an *SDK* (software development kit)2. You write your code3. You compile/package it (or not, depending on the language)First off, what you're downloading is not the language, as that is more of an abstract concept, it's software that uses the language to build software. That can include an interpreter (e.g. with Python), a compiler (c), a runtime (java), and other tools such as a debugger.Writing your code is what you do with e.g. pycharm, but you can do that with anything. At the end of the day, what only matters is the content of the files, so whether you write it with pycharm, notepad, visual studio, or Morse code doesn't matter (it matters to you of course, not to the machine).And then there's what you're actually inquiring about. This steps is what depends most on the technology you're using. With Python, there isn't really anything more to do: you write your scripts, ...and that's it. You just run them and that's your software. That makes it easy and convenient, but not very user friendly which is one reason why you generally don't use python (directly) for user facing applications. For java, the final step is compiling into jar files, or an exe that will use the jar. That's already what you're doing when testing it while writing the code. The only difference is you might be including or removing some stuff from the final binary that you ship to users. Similarly for other compiled languages such as c and c++, it's the same story. The only difference is, you have to compile for each configuration (architecture, os, etc.), but don't need the user to download a runtime. Then for web stuff like JavaScript, it's a bit more complex since you have to host the website on the internet if you want people to access it. But here it's actually the most similar to what you were describing: you do use a software that brings your software to life, the browser! It's a bit similar to Java's runtime but way more involved I hope this kind of makes sense? It's hard to explain without knowing what you know and understand but hopefully I gave a somewhat clear picture of how it works. And don't worry about not understanding all of it, the world of software is vast and complex and developing software is as much about writing the code than it is about the final steps of deployment!",SpacewaIker,2025-07-31 03:20:22,15,learnprogramming,t3_1mdqhqz,False,
n63pzwx,"Well, step 1 is you think you have to run it within a developer environment. Learn to build it from the terminal.Youre writing python, you just python ./yourscript.py there is no compiler you just run itin compiled languages you build it and then run ./yourbinaryIf you want a graphical interface, well, download some kind of gui library which lets you make a window and draw stuff in it (don't write one yet, its hard) and then make a graphical interface in your python code with it.If you want a web page, well, youre going to need to find a way to send html over the internet.Its probably hard to figure out where to start because thats literally all up to you",no_brains101,2025-07-31 03:32:17,5,learnprogramming,t3_1mdqhqz,False,
n63qxcq,"You're getting a lot of answers because ""it depends"". There isn't a single answer for every type of thing you want to build.In general if you want to build an app that you want others to be able to use, here are the most popular options:1. Make a website. It will cost you $10/year for your own domain name like Grumpy\_Gremlin49.com, and $5 - 10/month to host the website. You'll need to learn some HTML and CSS to design the content, but most of the logic can be implemented in Python. The best part about the web is that it's the easiest for end users - they just type in your url and they're immediately using your app.2. Make a mobile app. For iOS it costs $99 to become a developer. You either make an iOS or Android only app using the special languages and frameworks designed for that, or you use a cross-platform framework designed to let you build an app once. There's a framework for making mobile apps with Python (Kivy) but it's not very professional. You upload your app to the play store / app store and then users can download it and use it.3. Make a desktop app. You can do that with Python. The main problem is getting it to users. You'd need a website to distribute it (see #1), and browsers and virus scanners will try to stop users from installing and running it. This is a fine solution for sending to a friend or making an internal app for a business, but these days making a good cross-platform desktop app for end users is a real pain. If you want to make an app for the Mac or Microsoft app stores, that does solve the virus scanner problem but it limits what your app is allowed to do.So your next step is to pick one. The more specific the better. Pick something like web or iOS. Don't say ""all of the above"". Start somewhere.",dmazzoni,2025-07-31 03:38:44,3,learnprogramming,t3_1mdqhqz,False,
n63xdvk,"You can use Pyinstaller, which takes the interpreter (which runs your Python Code), your code and all needed libraries and puts them into an executable.https://pyinstaller.org/en/stable/",American_Streamer,2025-07-31 04:24:38,3,learnprogramming,t3_1mdqhqz,False,
n63nfux,"Once you run your code in the IDE (Pycharm in your case), you will need to re-run it from the command-line. This is to ensure that, when running in production mode/env, things continue to work. These steps will include a task that's referred to as packaging. One of the mechanisms to do this is to containerize your application so that all system dependencies are bundled into the container (Docker is one of the easiest containerization tools; if you want, you should research Docker and Dockerfile).After the above packaging step (the usual artifact at the end of this stage is a deployable unit, in this case called a ""container image""), you will need to then research how/where to host your application. If you are targetting running this code in the cloud (say AWS for eg), you will then need to research and decide whether you want to use Elastic Container Service (ECS) or a kubernetes-based solution. If going with ECS, most of the infrastructure-provisioning will already be taken care of - you will simply sign up for an AWS account, and then configure what tier you want to choose (depending on how heavy your application is and also depending on volume of users). Then comes the actual deployment. I have skipped some steps like unit testing, CI builds, connection to a database, security (both runtime/dynamic scans and static scans). Depending on your comfort level and (I assume) your aim to get to a full-fledged application, you will need to research these as well. Ofc, if your application needs a UI, and assuming your python code is simply exposing API endpoints, you will then need to research react / angular / nextjs / vuejs / etc (javascript frameworks) that will be used to build the UI for your application. That codebase will also follow a similar pattern of running the app, packaging, hosting, testing, etc.",Soggy_Writing_3912,2025-07-31 03:15:15,5,learnprogramming,t3_1mdqhqz,False,
n63qd81,"start by going from running that code in pycharm to running the same code directly in a terminal. that’s really all that pycharm is doing anyway. at the end of the day, the “programming language you download” is itself another program which can take the code you wrote and translate it into instructions that your computer, with the help of your operating system, can execute. so the next thing to do is figure out exactly how to make that happen without the IDE. we can’t tell you the exact way to do that without knowing what exactly you’ve written and what OS you are using, but basically you would open a “shell” in a “terminal” and run an instruction on the “command line”. your program is a file or collection of files somewhere in the directory structure of your “host machine”. to run it, you would run the program “python” with your code’s “entrypoint” file as the first “argument”. so it might be as simple as opening up Terminal and typing something like ```bashcd ~/PyCharmProjects/my_codepython my_progrum.py```figuring out exactly which things you have in PyCharm and where they actually exist on your host, which python needs to be invoked, and so on is the next exercise.but this isn’t going to magically make your program do something new, it’s just going to teach you how (python) programs are run in the most basic sense. there is plenty beyond this that you will have to learn, but only when you have a clearer idea of what your program is and how users will interact with it.",geeeffwhy,2025-07-31 03:34:50,2,learnprogramming,t3_1mdqhqz,False,
n63xp2f,"I think what you're struggling with here is that you have code that can do something, but how do you run it in the various places that code runs? Websites, games, mobile apps, desktop apps, all run code, but you don't know how to get from a simple dev environment executing python scripts to fully functioning apps.Short answer: Building these kinds of apps requires you to learn different frameworks and tools. And there is a lot to learn here so you probably want to pick an area and stick with it. What kind of applications are you interested in building?",maujood,2025-07-31 04:26:58,2,learnprogramming,t3_1mdqhqz,False,
n63owv2,Check out https://www.theodinproject.com/,grantrules,2025-07-31 03:24:58,3,learnprogramming,t3_1mdqhqz,False,
n649kcn,Just read this [https://realpython.com/run-python-scripts/](https://realpython.com/run-python-scripts/)All magic in first line on script>`#!/usr/bin/env python3`,Alaska-Kid,2025-07-31 06:04:01,1,learnprogramming,t3_1mdqhqz,False,
n519rq6,Use a debugger?,dpacker780,2025-07-25 05:11:57,58,learnprogramming,t3_1m8qgbr,False,
n51abvb,"Fundamentally, learn how to view the state of your program at a given time. Yes, you can do that using a debugger, but often times all one needs is to print out a line ""What is this variable at this one point?"". Debuggers are conversely extremely handy, because you can walk a program up to the point (see ""breakpoint"") where you have the bug, and output all of the variables/etc that are likely wonky. Aside from that, a mindset that has helped me in my work is to think about side effects. ""If I change a thing in part A, what does that do to part B?"" and working to better encapsulate logic/steps so that generally doesn't happen, as it's generally a bad thing that makes debugging much harder.",Time_Method9526,2025-07-25 05:16:27,21,learnprogramming,t3_1m8qgbr,False,
n51bsjo,"- Read the error message. - Add print / log statements - Remove things, use process of elimination. Isolate the issue. - Google it- Use ChatGPT- Use debugger.- Learn how computers read code.",ReiOokami,2025-07-25 05:28:24,14,learnprogramming,t3_1m8qgbr,False,
n51vizk,"Here's my take on how to effectively debug:* If there's an error message, read the error message carefully - it's usually telling you exactly what's wrong and where.* Most languages have a debugger that let you pause execution, inspect variables, and step through code line by line. Spending an afternoon learning how to use your IDE's debugger will save you hundreds of hours later.* Trace the execution path systematically - step through your code in the order it actually runs, not just how you think it should run. Use the debugger's ""step over/into"" functions or add print statements to follow the flow and catch where logic diverges from your expectations.* Use 'Rubber duck debugging': explain your code line by line to someone (or a rubber duck). You'll often catch the issue while explaining.Debugging - like programming - is systematic. Don't approach it like guesswork, but like a detective or scientist: observe the symptoms, form hypotheses, test them one by one, and let the evidence guide you to the root cause.",Big_Tadpole7174,2025-07-25 08:26:31,11,learnprogramming,t3_1m8qgbr,False,
n51czxn,"Random guessing usually means you have incomplete information about the problem (or error) you are trying to solve. Go back to first principles: what is the error you are getting? What does the error mean? What conditions need to be met for the error to occur? How can you prevent those conditions from occurring? Debugging is all about critical thinking.Learn how to use a debugger, and add logging to your program. A debugger, especially, is a powerful tool for gathering information about an error, because it allows you to set breakpoints, change variables and step through your code to see exactly what it is doing, line by line.",taedrin,2025-07-25 05:38:24,8,learnprogramming,t3_1m8qgbr,False,
n51hpbz,"Use a debugger. Use print statements en masse if no debugger available (printk if kernel modules). Often finding out what input parameters to a function gives issue will allow you to walk thru it by hand or just say doh, and handle the case you missed.",povlhp,2025-07-25 06:18:26,3,learnprogramming,t3_1m8qgbr,False,
n531350,"That's the wrong approach. Randomly changing things will likely break stuff.Here's the analogy. Imagine you have a car (and I'm no mechanic), and it's having some issues. You open the hood of the car, and start randomly doing stuff, hoping the problem will go away.Do you think that's a solid approach to fixing the car? Would a real mechanic do that? No, they would try to figure out what the problem is. Of course, being experienced, they have a series of tests they can do to isolate the problem and the confirm it is the problem, and they have an idea how to solve the problem.In a way, you need to do the same. Randomly changing your code is not going to fix it just like randomly doing stuff to a car engine won't fix it. You need to understand your code.Because I've taught beginners, I've seen this ""I do random stuff and hope to fix it"" before. Why do beginners try this approach even as they would admit, it won't likely work.It's because the code looks daunting. If I say, tell me what each line of code does, one step at a time. Be the computer. Do each step. To a beginner, that seems like crazy slow. It would take forever to do that (even though they wrote the code). Random fixes is a lot quicker. Do something rather than do the right thing which is slow and tedious.OK, so some steps.**Determine why you think your program is broken**I've had students who tell me their program doesn't work. When I press them, and ask ""what's wrong"", they just say it doesn't work.What they really need to say is, ""I think this is wrong because when I put in value X, I get answer Y, when I expect Z"". Those three parts are key. What input (X) did you use? What answer (Y) did you get? And what answer did you expect (Z)? This is the first step to debugging. Why do you think it's wrong?**Try a smaller input**The next step is to put in the smallest input that causes the problem. Sometimes, we'd give students some sample inputs that were pretty lengthy. Their code would break, but it was hard for them to figure what was going on because the input was so lengthy, they didn't know what part was causing the problem (imagine the input is an array of numbers).The first step is to see if it can handle the smallest input possible (say, an array with one element).**Test your functions**A smaller version is to test functions. Determine* what are the input parameters* given certain input values, what are the output values**Write more small functions**Instead of writing one big `main()`, break things up into small functions. Then, you can test each function.Write a comment for each function and give some sample inputs and expected outputs for that function.**Test as you go along**Don't write all the code with no testing, then test after you wrote all that code. This won't help if the code is already written, but can help in future coding.",CodeTinkerer,2025-07-25 13:33:10,3,learnprogramming,t3_1m8qgbr,False,
n53y7ry,"1. Have a clear and specific expectation about what the program should do.2. Identify one or more a specific checks you can carry out to prove/disprove that idea. 3. Carry out the check (with a debugger, print statements, logging, etc.)4. Assess the evidence, decide if your hypothesis is correct or not. Make any changes needed to your code. 5. Repeat if necessaryThis is, more or less, an application of the scientific method, loosely speaking.If you are not sure what specific expectation you need to check to begin with, start with whatever your program is supposed to do first.",nderflow,2025-07-25 16:11:46,2,learnprogramming,t3_1m8qgbr,False,
n596ehp,Debugging feels like guessing because it’s the only game where being wrong is just another way of narrowing down what right might look like.,alpinebuzz,2025-07-26 12:26:42,2,learnprogramming,t3_1m8qgbr,False,
n5wdocf,"Error msg, stack trace, how the code works, variable values, call my mom.There's plenty of things I can read or do before I resort to random guessing.",donttakecrack,2025-07-30 01:05:04,2,learnprogramming,t3_1m8qgbr,False,
n5nbolt,Surely you've looked at https://freecodecamp.org/ and the tutorials for the Unity and Unreal Engine gaming frameworks. Those are decent ways to learn without dropping a lot of cash.,Aggressive_Ad_5454,2025-07-28 17:51:00,13,learnprogramming,t3_1mbmycq,False,
n5niw45,"The boot camp era is dead, it lasted about 2 years during & after covid, and some of them got laid off. You can self learn but if you want to be competitive you need a CS degree + internship experience realistically.Some people report landing jobs after self learning, but those are usually outliers.",Rain-And-Coffee,2025-07-28 18:24:27,12,learnprogramming,t3_1mbmycq,False,
n5nnkbm,"Hey man, it’s never too late to start something new. Just keep your expectations realistic. You probably won’t land your dream job in the next couple of months, but you can definitely start moving toward it.Forget bootcamps they’re a waste of money and won’t guarantee you a job.Here’s what I’d suggest:Take Harvard’s CS50 course online. It’s free and gives a solid introduction to computers and programming.After that, it’s kind of a “choose your own adventure,” so to speak. Think about what you want to do, web dev, software engineering, IT, etc. Then go to nostarch.com and find a book that matches your interest. Start working through it, build your own projects, and network to land an entry-level job.It’s tough right now since the tech industry’s going through a downturn, but it’s definitely not impossible.If you have the money and the opportunity get a CS degree it will legitimize you.",Round-Homework5998,2025-07-28 18:46:41,9,learnprogramming,t3_1mbmycq,False,
n5naqfs,"If you want a career in CS, start with a CS degree.Bootcamps are a waste of time.Keep in mind this is the single worst time in history to try to break in to the career field.",polymorphicshade,2025-07-28 17:46:45,11,learnprogramming,t3_1mbmycq,False,
n5ncr0c,"At this point unless you're a top 1% self-taught developer with a lot going for you then I wouldn't recommend anything less than a 4 year degree. However, even they're struggling to land jobs in the last couple years (both previously mentioned groups). A bootcamp is not just a waste of time, but with some companies it's actually a red flag and that number is growing.",Serenity867,2025-07-28 17:55:49,7,learnprogramming,t3_1mbmycq,False,
n5q0epv,"I was at help desk and started with this book [https://automatetheboringstuff.com/](https://automatetheboringstuff.com/) Good luck, it's gonna be a rough ride for CS in the next 10 years, even if you're in AI",Complex-Web9670,2025-07-29 02:10:58,3,learnprogramming,t3_1mbmycq,False,
n5nae5m,What do you mean working with CS most of your life?,rtalpade,2025-07-28 17:45:11,2,learnprogramming,t3_1mbmycq,False,
n5o2mke,"Really bad timing and in your 40s, nothing is impossible, but since you really need money to live, switching fields right now for you will be extremely hard.If you arent passionate about this, dont waste your time.",Mol2h,2025-07-28 19:58:59,2,learnprogramming,t3_1mbmycq,False,
n5op17h,I'm not sure it's recommended. I used to work at faang now I'm working at REI for healthcare benefits and hustling on the side. It's rough out there.,mountainlifa,2025-07-28 21:47:09,2,learnprogramming,t3_1mbmycq,False,
n5qomyg,I am 36 years old. I just transiyioned to cs. The barrier to become a programmer is not high. The barrier to get a job as a programmer is higher than ever. Bootcamps and self taught says are over. Im getting masters in cs for people with no cs background. I highly recommend going this route. Trust me since im in the exact same boat as you are. Ive applied to 800 jobs with no luck after bootcamp :grimacing_face:,Ok_Helicopter7697,2025-07-29 04:55:03,2,learnprogramming,t3_1mbmycq,False,
n5m1rmp,You're still a baby in the grand scheme of things.,Pearl_Jam_,2025-07-28 14:15:13,55,learnprogramming,t3_1mbh2uv,False,
n5m11jl,"Practice your art, practice your 'C'.Unless you use Godot or some other engine , you will benefit greatly from knowing C, so stop judging yourself so harshly! As they say, compare yourself only to the person you were yesterday.I too am a procrastinator, but I have learned to ignore those horrid inner voices that say ""Do it later"" and just do it anyway.parents! haha we've all been there, they are, ultimately, on your side even if they sometimes don't come across that way; they will not want you to fail so they may be cautious of you trying anything adventurous, but you do what you need to do, and when it works, parents can bask in your glory.",bravopapa99,2025-07-28 14:11:33,28,learnprogramming,t3_1mbh2uv,False,
n5m5276,"For making games, your best bet is C or C++, maybe Java, Python is used a lot more for stuff like statistics, analytics, accounting, and data management.I enjoyed the free Harvard tutorial on YouTube for Game Development. It showed you how to make a games, but they are a little too advanced for beginners since they assume that you already know the basics of coding. At an absolute beginner though, I would study coding basics, there are a lot of free sources and videos on YouTube for basics.Being self-taught at the beginning is usually the hardest part about being self-taught. You have no basis on what you have to learn and how well you need to know it, or even why you have to learn it. It sounds like you're going to basically be behind a single semester, which to be honest, isnt TOO bad, even though at the moment it sounds like the end of the world, trust me, its not that much time. My honest advice for you is to try and calm your anxieties for now and build a good relationship with programming. Go and pick a youtube tutorial Playlist you like, familiarize yourself with compilers/code editors, and just practice the basics like variables and loops. Don't try and make it into homework or work, just have fun with it, make it low stakes. If you like podcasts or lofi play some in the background while messing with some loops to familiarize yourself with them. Write a loop, change the variables. Add stuff, if it breaks, oh well, start over, delete the whole loop and write it again and start testing new stuff out. Go into leetcode and try out some of the easier prompts, if its too hard, its fine, just make a point to try it out and get used to the way the syntax works.",Error-7-0-7-,2025-07-28 14:31:38,10,learnprogramming,t3_1mbh2uv,False,
n5m583p,You could start playing around with unreal engine or unity. Unreal uses c++ and unity uses c#. I know unreal has a lot of learning material. Unity probably does as well. Check out blender also for modeling.,nondickhead,2025-07-28 14:32:27,5,learnprogramming,t3_1mbh2uv,False,
n5mkari,"If you want to get a bit of a head start for university, try out the free online Harvard CS50!https://pll.harvard.edu/course/cs50-introduction-computer-scienceIt's a really nice introduction which dabbles in several fields so you get some insights on what is possible, and you can set your own pace learning. The videos are also really fun!",ObsidianHumour,2025-07-28 15:44:38,3,learnprogramming,t3_1mbh2uv,False,
n5m28j2,"You can work in the games industry without learning how to code. There are plenty of concept artists, character designers, level designers, modelers, etc who never need to learn code. Don""t just ""learn python"". Jump directly into a game engine and experiment there. And video games don't all have to be AAA 3D open world etc. Make a short hypertext game in Twine and you'll learn the basics of JavaScript. Cat.js was also a fairly intuitive engine for me. For Pythonic engines there's Godot or Ren.py. And if you know C you can try Unity (I kind of hated working in Unity though).Join a game jam to force yourself to make something quickly and without the need for perfection: https://itch.io/jams",mousachu,2025-07-28 14:17:36,2,learnprogramming,t3_1mbh2uv,False,
n5m4688,"Ok, so you want to be a game dev right? I’ll challenge you then. Start learning C++ by whatever means you learn best. Learn enough to make pong. I’d say start with pygame but since you already know a bit of C and this is your dream, jump right in the deep end. Good luck.",Dazzling-Tonight-665,2025-07-28 14:27:13,2,learnprogramming,t3_1mbh2uv,False,
n5m4m07,Usually when I feel stuck. I like to sit down and ask myself why. Feeling stuck is always a sign to me that I am not being true to myself. There is usually deeper trauma or Self-Misunderstanding that I have to force myself to work through. You say that it is your dream to become this so there shouldn't be no doubts. Unless you're going in into it with the wrong mindset. For the wrong reasons. Sit down and ask yourself why.,kaizenkaos,2025-07-28 14:29:23,2,learnprogramming,t3_1mbh2uv,False,
n5m7fab,"Hey OP!First, I know how much of a blow it may feel like to wait to get into university. This doesn't make you any less and is really an opportunity in disguise. You now have a few months to practice coding and get a feel for if you like it over design/story telling. Also don't be afraid to not get into programming and just stick with what you know (design and story telling). I know it sounds cliche, but you'll never be happy doing things to prove your worth to other people. I wasted a lot of time and opportunities in my 20s because I couldn't learn that lesson. Maybe consider pivoting your degree to design (some uni's have game design specific courses) or to something that would better suit storytelling for game development. My degree was in IT with a focus in programming and software engineering. To me the hardest thing in my program was understanding the ""thought"" process behind solving problems with code. A great way to practice this for me was actually playing the game Human Resource Machine on Steam. It forces you to ""think"" and ""problem solve"" in a way that is really beneficial to coding. The reason I harpe on this is because to me, my C# and Python classes were pretty similar. The foundation of WHAT you were doing was the same, but the syntax you use to execute it is different.",xTrashQueenx,2025-07-28 14:43:10,2,learnprogramming,t3_1mbh2uv,False,
n5mdab2,"As a fellow procrastinator, I would say you should work on something you're passionate about. Learning for the sake of learning can be difficult for some people, including me. You mentioned game development, so why not try to learn Godot, Unreal, or Unity? You will need to code various things in them, so you can get a jump start with coding while doing something you enjoy.",Zesher_,2025-07-28 15:11:27,2,learnprogramming,t3_1mbh2uv,False,
n53zzyo,"This is pure politics, not skills related. A degree is less useful in your first 15 to 20 years, but as you progress and change roles/leadership positions, it becomes helpful as a points accelerator in the evaluation process.",I_am_transparent,2025-07-25 16:20:08,24,learnprogramming,t3_1m92r9a,False,
n53uy5d,I just went back to college and got a Data Science degree after already working in the industry for years. I honestly regret it. It's been 5 years since I had a full-time job and nobody seems to want to hire right now. The student loans are insane and I don't know how I'm gonna pay them off. The degree program was very stressful and it was terrible for my mental health. I don't feel like I learned much. If you're happy with your job and partner you probably shouldn't go back to school right now.,40_degree_rain,2025-07-25 15:56:28,10,learnprogramming,t3_1m92r9a,False,
n54v6jg,"I've been in the field 15 years. Got my degree after being in for around 10 years.Never added it to my resume.Nobody has ever asked about it. If you have credentials (past experience) to get you into an interview, a degree does nothing else for you. It is MASSIVELY helpful in getting your first job, but is dubious in utility outside of that.",sarevok9,2025-07-25 18:46:04,7,learnprogramming,t3_1m92r9a,False,
n54v7vj,If you are already in the market it depends of your goals. I would say it is not useful for the first 15~20 years but after that it open positions in companies that don't hire without. You have that option or go bet in a startup. If I were you I would just look for a 100% online degree and go at your own pace.,LXLN1CHOLAS,2025-07-25 18:46:15,2,learnprogramming,t3_1m92r9a,False,
n58s3id,"I was in pretty much the same situation (in Australia for context), I went to uni for CS with credit from a previous degree and I'd say it was a waste of time for the most part.I had more job offers before I got the CS degree (could be from the job market collapse during that time) but overall I could have learnt more by just challenging the weak points I already knew I had or taking on a project outside my comfort zone.I thought it would be fun to learn with similar minded people but the majority of people aren't that into it.I won't say I didn't learn anything, but I don't think it's a game changer by any means.I'm still working for the same non IT based company, while doing a couple of days a week at another local company now is the only difference.I put in around 40 applications for junior Dev positions at bigger companies and heard back from 2 companies saying I was overqualified and ghosted by the rest. TLDR: same position as OP, went to uni, didn't help with job prospects, don't feel like I learnt anything I couldn't have learnt from YouTube",yellowpandaaa,2025-07-26 10:35:01,2,learnprogramming,t3_1m92r9a,False,
n5976fg,Getting a CS degree to cure imposter syndrome is like buying a tuxedo to prove you belong at the party you’ve been hosting.,alpinebuzz,2025-07-26 12:32:01,2,learnprogramming,t3_1m92r9a,False,
n54bdbz,"Look at WGU CS degrees. Fully accredited, online, mostly go at your own pace, per term.It’s a flat $4000ish for a 6 month term, you on average have to take at least 4 classes in that time. If you’re done early, you can take additional courses at no additional cost, until the term ends. If you have prior knowledge and experience, you can knock out a ton of courses easily, plus you can transfer some in. For example, there was a web basics html/css course. Started the course one day, skimmed over the material and was pretty sure I knew it all. Took a practice exam, did well, scheduled my final exam the next day. The entire course was done with me spending maybe 5 hours on it, because I already knew it.There isn’t any homework in each class, just lesson material and optional practice work and labs. The final is the only thing graded, some courses are exams, others are projects",Gawd_Awful,2025-07-25 17:13:17,3,learnprogramming,t3_1m92r9a,False,
n53wyhk,"If you already have an associate's degree, wouldn't some of that transfer so you don't need a full 4-year degree? Especially if you went to the same college/uni as you did for your associate's. This might reduce your overall time.",CodeTinkerer,2025-07-25 16:05:51,1,learnprogramming,t3_1m92r9a,False,
n5651sc,"Can't speak for where you are, as I'm in England, but I was a few years into my role before I got a degree, it's meant nothing and had absolutely no impact on my career other than giving me something else to pay off, even when I poke around the market occasionally, there's no more interest or better offers before or since. I figure that at this point, people will look at the work I've done and what I can do, because I've had a decade to produce things, but perhaps if I hadn't made anything yet, it'd be much more helpful to indicate I had a vague idea of what I was doing at least.Some members of my family like that I have it for some reason, but personally, if I could go back, I wouldn't bother. I didn't learn anything I wasn't familiar with already from work and personal research, and some aspects of what was taught would actively hinder my job if I tried implementing them as it would slow productivity to a crawl.I did mine part-time, I can't imagine doing it full-time. If you have already got the ability, and you have some way to show it, I really don't think a degree is going to change things any more than spitting in the ocean. The times I've had bigger offers have all been because they've seen something I've done and liked it, but I've never had anyone stop to mention the lack of degree, or ask about it since I got it.Of course, I imagine different goals and different locations might change that, from my understanding, large multinationals tend to like degrees, but I'd rather switch to a different career than work for any of them.",Kezyma,2025-07-25 22:37:48,1,learnprogramming,t3_1m92r9a,False,
n577b8w,Can I ask about your coding journey? What skills/experience did you have to get your first developer role?,Rmj310,2025-07-26 02:26:31,1,learnprogramming,t3_1m92r9a,False,
n63qq7l,practice is the secret to every single craft on the planet. programming is no exception.,geeeffwhy,2025-07-31 03:37:20,19,learnprogramming,t3_1mdqmd9,False,
n63mojd,"Nothings wrong. Just keep doing problems and it’ll start aligning better. The more problems you see, the more solutions you solve, and the more mistakes you make - the more solidified your programming skills become. You’ll def see improvement within weeks if you consistently code. The more shortcuts the see, the more you can extrapolate those solutions with tweaks onto other problems.",arechiggasreal,2025-07-31 03:10:17,7,learnprogramming,t3_1mdqmd9,False,
n63n42w,"Leetcode is not how the real world works, so don’t feel bad. They are something Google had to come up with to weed out thousands of applicants, similar to SAT scores. Remember those convoluted math problems?Most of those algorithms and data structures were developed by computer scientists over large periods of time, not in a 30 minute coding interview.What you have to know for the real world is the general characteristics of data structures and when you might pick one.In the real world good communication and being able to talk through a problem while collaborating and looking up stuff is what is actually useful.",Rain-And-Coffee,2025-07-31 03:13:08,6,learnprogramming,t3_1mdqmd9,False,
n63v49k,"Thinking like a programmer comes with time and programming. It's just about looking at a problem and seeing where the ""seams"" are where you can easily break off a chunk of the larger problem and solve that. It's like making a cake. You know that the end result is supposed to be a moist and delicious cake, but along the way there are a bunch of steps to follow. If you've baked a million cakes, you'll have a pretty good idea of what the steps involved will be, even if it's a new type of cake. If you're a beginner, you might need to closely follow a recipe. But each step along the way is something you can work out how to do, and combine the steps into the final result. I started baking during the pandemic and discovered it was super easy for me. ""This is just like programming, except I get to eat the result!"" Dough isn't rising? Time to break out my debugging skills! New recipe? Just an algorithm to implement.",Own_Attention_3392,2025-07-31 04:08:08,2,learnprogramming,t3_1mdqmd9,False,
n64mnhb,"Keep practicing. Experience is built over time and from successes and failures alike. Also go read some books like Clean Code, The Clean Coder.",Comprehensive_Mud803,2025-07-31 08:04:19,2,learnprogramming,t3_1mdqmd9,False,
n64x8gu,Have you broken the problem into smaller problems to figure out individually and then put them back together? Try using a pen and paper(or tablet) and work it out piece by piece,elfonski,2025-07-31 09:44:57,2,learnprogramming,t3_1mdqmd9,False,
n63o9pq,You don't need super IQ for programming you need to be able to produce readable clean code with passable efficiency.,neuralengineer,2025-07-31 03:20:43,1,learnprogramming,t3_1mdqmd9,False,
n63oehk,"You’re not going to be a master programmer from the get go, and it’s not uncommon go feel some imposter syndrome in our industry, don’t sweat it so much when you have so much you can do and it’s still fresh knowledge. You just have to enjoy it.",slaynmoto,2025-07-31 03:21:35,1,learnprogramming,t3_1mdqmd9,False,
n6444dh,"> I am not thinking like a programmer that quick to action thinking and logic.Really, that only attributes to experience. The more experience you have, the more similar problems you will have solved, the faster you will be.> My current thinking is I don't have the iq to think like a programmer.I call BS here. This is just the typical excuse of people who are not prepared to invest actual effort to learn.-----There are more than countless posts about ""Thinking like a programmer"", just type ""think like a programmer"" in reddit's search box and you will find ample threads.I'll leave some of my previous comments in similar threads here:+ https://www.reddit.com/r/learnprogramming/comments/1j9ezmx/getting_better_at_coding/mhdna2e/+ https://www.reddit.com/r/learnprogramming/comments/1iz7wv3/how_to_become_a_better_engineer/mf10qbg/+ https://www.reddit.com/r/learnprogramming/comments/1j3w7x9/how_to_actually_learn_problem_solving_skills/mg3q9ya/+ https://www.reddit.com/r/learnprogramming/comments/1ioehwa/struggling_to_put_together_my_own_code/mcirhxq/+ https://redd.it/1jyd36k",aqua_regis,2025-07-31 05:17:46,1,learnprogramming,t3_1mdqmd9,False,
n64cpec,"Well, I think unit tests made me understand programming better, even though I hate unit tests, but it can help you. As a programmer, you want a piece of code to do something specific to by testing it. You can write your code based on the result you want. Give it a try! It's called test driven development and is a whole different philosophy instead of first writing the functionality and then testing if it works.",Lamborghinigamer,2025-07-31 06:31:54,1,learnprogramming,t3_1mdqmd9,False,
n5v5icz,">Is there anything wrong with spending 5+ hours a day working on my project if I enjoy doing it?Why would there be? Is there anything more urgent you're not doing instead? You won't regret doing things you enjoyed, unless you used that as a way of **avoiding** doing things you needed to do. If it will help you in your career (I think only you can judge that), so much the better.",numeralbug,2025-07-29 21:08:08,25,learnprogramming,t3_1mcnhx8,False,
n5v6blk,"There's nothing wrong with spending time doing the things you enjoy.  The only exception is if you are spending time doing something at the cost of your health or well-being or that of others.But if you're enjoying yourself and not hurting anyone, the topic doesn't matter.  Go enjoy life.",Luigi-Was-Right,2025-07-29 21:12:03,11,learnprogramming,t3_1mcnhx8,False,
n5v7tlf,"No dude this is literally ideal. I have a very similar temperament and spent a good chunk of my final year building certain AI projects that I thought were cool. I don’t regret a second of it. I ended up getting a job working with the same technology and so now I get paid to play with the technology I was happily doing for fun in my free time. Employer loves my passion for the tech, and those projects let me speak about these things in interviews very well. In my second year summer, I built an Arduino project that would present you with a math problem and you had to put in the answer using binary (with twos complement for negative numbers) by clicking physical buttons. It tracked the time spent on the answers, and I timed myself doing it sober for about 20 minutes, ingested a shit ton of cannabis and did it again. Then I spent the next few days analyzing the difference in performance using Python. I can never bring that up in an interview but I genuinely enjoyed doing it. I don’t regret it. Overall my point is you’ll never regret having fun. I don’t regret the time I spend playing video games, and I definitely don’t regret any time spent that has practical benefits to me. You should be psyched that you’re enjoying this stuff. You have the “knack”.",ProfessionalShop9137,2025-07-29 21:19:17,4,learnprogramming,t3_1mcnhx8,False,
n5v8d3f,I totally relate to your goals! I also want to contribute to groundbreaking research but at the intersection of computer science and either biology or neuroscience. I love learning about these topics! Although it can be really overwhelming. I’m excited to see where the knowledge will take me and what doors it will open. I get a sense of fulfillment when I’m coding and when I think about the things that can be done in the field. Just wanted to let you know you’re not alone in feeling this way.,Ojaura_,2025-07-29 21:21:56,3,learnprogramming,t3_1mcnhx8,False,
n5v72r8,What the heck is this,cev4,2025-07-29 21:15:41,3,learnprogramming,t3_1mcnhx8,False,
n5vlqsc,For my AI i spent over 3 years and averaged like 2 hours a day not including weekends. Its totally normal to love something and work on it.,Solar_Flare_00,2025-07-29 22:30:18,1,learnprogramming,t3_1mcnhx8,False,
n5vszky,"It's fine to spend as much time doing whatever you want. I spend an absurd amount of time programming. However, finding a balance in your life is important too. If you are so focused that you are neglecting your health or having a fulfilling life with family, friends, and meaningful relationships... you might indeed regret it later in life. As someone quite a bit older... I would give anything for a few more memories earlier in my life with my father ... and I could care less about all the late nights I spent hacking.",cgoldberg,2025-07-29 23:09:07,1,learnprogramming,t3_1mcnhx8,False,
n5wty9d,"im almost in the same boat as you , i’m 23 and was dreading uni classes until i started working on my first Python project this summer and i literally cannot stop coding now. Got too addicted and been working on it 4-12 hours a day the past month. Despite all the negative talk about getting jobs in tech it’s probably too late for me to stop now. Just gonna cross my fingers and hope for the best once i get my degree. Good luck to you bro",Lauty_6,2025-07-30 02:40:56,1,learnprogramming,t3_1mcnhx8,False,
n653ngt,"Sounds fine to me. Honestly, I've spend 5+ hours a day on code I'll probably never find again. But, at the time, it was very engaging. You'll be like ""hey, I could take a break, play this video game, but I'm having fun with this project, so...""Time spent coding is never a waste. Even if it might feel like it in the moment if things are goings sideways. You're teaching yourself things, regardless. How could that possibly be bad?",WystanH,2025-07-31 10:40:16,1,learnprogramming,t3_1mcnhx8,False,
n676e1y,"You already have your bachelors, being 22? And working towards that PhD? If that's the case - then great, yeah go for it. If you're pulling some pipe dream stuff and are 22 without any college experience drop the whole PhD/lab thing, it's still fine to work 5+ hours a day on your project, but you will burn out at some point.",Hail2Hue,2025-07-31 17:17:46,1,learnprogramming,t3_1mcnhx8,False,
n56asgr,Primarily using a disassembler.https://en.m.wikipedia.org/wiki/Disassembler,no_regerts_bob,2025-07-25 23:10:03,21,learnprogramming,t3_1m9drkq,False,
n56ktci,"The clue is in the name: ROM. When you were plugging in a cartridge it’s essentially the same thing as plugging in an extra RAM stick, except you can’t change any of the values in the extra addresses.To copy them you just have to read the value in each byte and save it somewhere.As for understanding those bytes, most consoles use off the shelf CPUs, so you can therefore get the data sheets describing their architectures and operations pretty easily. Working with Assembly language is not actually that hard once you get comfortable with how the chip works",Miserable_Double2432,2025-07-26 00:07:14,8,learnprogramming,t3_1m9drkq,False,
n56aixc,This discussion might be of interest [https://www.reddit.com/r/emulation/comments/4exm0e/how\_are\_roms\_acquired\_you\_cant\_exactly\_reverse/](https://www.reddit.com/r/emulation/comments/4exm0e/how_are_roms_acquired_you_cant_exactly_reverse/),mxldevs,2025-07-25 23:08:33,5,learnprogramming,t3_1m9drkq,False,
n56anjy,Probably by studying the architecture of the gaming system.,obj7777,2025-07-25 23:09:16,3,learnprogramming,t3_1m9drkq,False,
n56c7qe,"Where did you hear about people doing all of that? I know people can get ROMs from game cartridges by using a special reader that plugs into their PC and lets them insert a cartridge in it and then dump the data from the cartridge (such as [this device](https://www.cartreader.net)). I haven't really heard about people extracting data and editing the code though, just playing the games with the ROMs..In some cases, it sounds like you can save (AKA ""dump"") game cartridge ROMs directly on a console and save them to an SD card. For instance, for a Nintendo 3DS, I found [this guide](https://3ds.hacks.guide/dumping-titles-and-game-cartridges.html). For older systems,To look at the code though, you could use a disassembler and load the ROM into it - but it would only show you the assembly language instructions; you can't extract the original higher level code (i.e., C) from that. Reading assembly code and understanding what it's trying to do takes significant effort, as it's about as low-level as you can get. And if you want to make changes, you'd modify the instructions and re-assemble it (it doesn't get re-compiled like a higher-level language does).",RolandMT32,2025-07-25 23:18:00,2,learnprogramming,t3_1m9drkq,False,
n56fss8,You can theoretically use a disassembled or even manually just step through code with a debugger. If you know assembly language it CAN be easy. Various copy protection schemes are often easily bypassed.What can seriously confound this though is code obfuscation. There are various methods that make those efforts MUCH harder. Theoretically if you create an automated code obfuscator the code can be in plain site.Either way they are rare but there are development machines on the market. Typically it’s the same game machine but modified so that you can save or load code to an external PC and run a debugger to control the program on the game machine. The development systems come with extensive libraries and tools.,PaulEngineer-89,2025-07-25 23:38:15,1,learnprogramming,t3_1m9drkq,False,
n56pwth,"I would suggest looking at VintageGamer on YouTube. He is a SWE and goes through a lot of the old school ways of how they cracked consoles, games etc.",googleaccount123456,2025-07-26 00:37:42,1,learnprogramming,t3_1m9drkq,False,
n56th8g,"Back in the days, not everything was protected by trade secret this and copyright that backed up by a pack of lawyers. Apple // famously included circuit diagram of the motherboard when you bought it retail ""back in the days"". And hardware and software were simple in the 8 and 16-bit era. Let's just say I remember watching a guy using the Apple // integer BASIC card to force any program into debug mode (using ""monitor"") and thus, get into the memory and turn off the copy protection bits. But this was way before your time. And yes, that pretty much dates me. Keep in mind that CDs and DVDs have standards and you can just read those off as data file. Same with cartridges (but those may require a special reader, or a ""dev console"" rather than the normal consumer console).",kschang,2025-07-26 00:59:20,1,learnprogramming,t3_1m9drkq,False,
n575yl0,"If you know the instruction set of the CPU uses on the game system then you can just read what’s on it. You will get a bunch stored machine code data that you can easily translate into the assembly version or decompile into C/C++ or whatever. Keep in mind this doesn’t give you the original source code; things like comments, variable and function names are lost. The decompiler might also decide to generate logically equivalent but different code.Cartridges and discs just store data and it isn’t that hard to read off that data with the appropriate tools and dirt ware that you can search around online for.",TheCozyRuneFox,2025-07-26 02:17:38,1,learnprogramming,t3_1m9drkq,False,
n5bl8um,"Trivial. Grew up removing copy protection from Mac games. Soldering to read out data was a basic CS skill. Fun was the group I was close to, that hacked BSkyB smartcards for Sat TV. Some guy etched the plastic away, used the university electron microscope to photograph the circuit - and we could extract code with image analysis.",povlhp,2025-07-26 20:21:28,1,learnprogramming,t3_1m9drkq,False,
n63vgwl,"Pick a specialty that you have a passion for, and start researching the common ways to solve problems or create projects in that field. I'm interested in systems programming, so things like interpreters, compilers, kernels, etc. I've been learning to make interpreters/compilers for several months now and am making progress. It's a bit difficult to give you more precise and accurate advice because you haven't indicated what field(s) you have an interest in. C and C++ are very good languages, I'm very partial to C++, but they can be used in many things.EDIT: If you're looking for a C++ course, I recommend [learncpp.com](http://learncpp.com)EDIT 2: My mistake I see you specified you wanted to learn AI/ML. I would suggest researching job postings, assuming you want to find a job in it, look at what technologies they're looking for, and start doing projects with those tools/technologies.",Dappster98,2025-07-31 04:10:40,8,learnprogramming,t3_1mdrpp7,False,
n63x3cl,"> How should I begin?Go to class, pay attention, do the assignments, repeat…When you find yourself having trouble, go to your instructor’s office hours.Don’t spend so much time trying to relearn what you missed that you get behind in what you’re supposed to be doing now,",iOSCaleb,2025-07-31 04:22:26,7,learnprogramming,t3_1mdrpp7,False,
n644jjh,Are you AInoob2pro today or thats the plan?,rtalpade,2025-07-31 05:21:16,2,learnprogramming,t3_1mdrpp7,False,
n641lny,"You should start with “why”?Why’d you want to study them?Once you can figure out a few answers, try narrowing them down.With those refinements, start first by collecting the resources you might need (books, notes, YouTube videos). Prepare a plan, a fixed time per day or whatever suits you. But it has to be consistent.Begin by studying and implementing them in your answers you found above. (More concise the answer, more you’ll find clarity)Build. Build. Build.And. Don’t look back.",nipunshakya,2025-07-31 04:57:10,2,learnprogramming,t3_1mdrpp7,False,
n652cu0,You will have a lifetime to hone your skills. Dont worry,Regular-Log2773,2025-07-31 10:29:33,1,learnprogramming,t3_1mdrpp7,False,
n659e8a,"Generally you only learn the basics and starting points during your first year. I work with interns and new grads a bunch, and even after graduating I assume they only know the basics. So focus on your future courses, but don't sweat feeling like you don't know too much after just one year.",Zesher_,2025-07-31 11:23:45,1,learnprogramming,t3_1mdrpp7,False,
n6473r0,"No, you did not waste your time. Your brain was forming the connections that you need that will accelerate your future learning, and then AI will take over and then we will all realize that we've all wasted 10 years of our time",ApprehensiveDrive517,2025-07-31 05:42:46,0,learnprogramming,t3_1mdrpp7,False,
n63xswl,Thank you for the reply got a fair idea of how to proceed will surely go and check those out,AInoob2pro,2025-07-31 04:27:45,2,learnprogramming,t1_n63vgwl,True,
n63yfgs,"Solid advice, but I partially disagree with not spending time relearning. DSA would be a nightmare if you skipped fundamentals of programming for example.Best to work with your instructor to see where you are and how you can catch up.And of course, the most important advice that trumps all other advice: ""Go to class, pay attention, do the assignments, repeat…""",maujood,2025-07-31 04:32:31,1,learnprogramming,t1_n63x3cl,False,
n645ze3,I would say that is the goal,AInoob2pro,2025-07-31 05:33:13,2,learnprogramming,t1_n644jjh,True,
n526s6v,"I mean this sincerely, maybe try change your mindset? Learn Java in college - do the homework and class work as a discipline - if you feel lost at times that’s good because that’s how you truly learn, so long as you don’t give up on it.Take your breaks when you feel you’ve done enough, not as a reward but as fuel. If you want to do Python on the side it would be good, as learning more than one language can only be beneficial to you - but let it be fun, Python is fun naturally (to me atleast) do fun projects and experiment in your free time.Lastly, I know it’s easier said than done but don’t compare yourself to others - they are on their own journey just like you are, work to benefit yourself - not to show people how much you know.",CutPerfect7616,2025-07-25 10:12:21,13,learnprogramming,t3_1m8v3op,False,
n52h95b,">With all the news about tech layoffs, AI booming, and the job market being super competitive or in a so-called ""recession,"" I honestly don’t know where to begin.This is natural, but it's a doom spiral. I don't want to say things aren't bad - they are - but things are **always** bad in one way or another. Tech-related jobs have been in constant flux for at least decades, Your aim should be to make yourself as employable as possible **even as** the world changes around you, which it will continue to do. The best way to do that is to avoid jumping on bandwagons and to learn the solid skills necessary to adapt. You are already doing that with your engineering degree.>Should I start learning Python just to keep up with everyone?You should start learning Python if you're interested in it, and not if you're not. Python is a great tool. But also, not everyone will be a Python dev in the future, and **not** learning Python frees up valuable time for you to do something else. (You can also learn Python later if you want to. What's stopping you picking it up at age 50 if you need to?)>Any advice or roadmap would mean a lot right now.My advice is: everyone's roadmap looks different. Yes, you should work hard - but whether that means ""get a paid job"" or ""aim to get a high grade"" or ""learn Python"" or ""learn French"" or ""brush up on your maths"" or ""do some volunteering"" or ""learn interview skills"" or one of a million other things depends on you. All of those things are good, and different employers will value different skills, and no one person can do them all.You also shouldn't forget about the rest of your life - family, friends, relationships, hobbies, rest, eating well, sleeping well, etc. No point in being the most skilled engineer in your company if you burn out at age 30, or have a heart attack at 40, or regret not starting a family at 50, or whatever.It's a lot to juggle. You'll drop a few plates here and there. Don't worry about it. It's a marathon, not a sprint.",numeralbug,2025-07-25 11:34:33,11,learnprogramming,t3_1m8v3op,False,
n527wul,"In general, I would say that the side-project idea is a great one, but with the caveat that different programming languages have different applications and use cases. It's not a case of Java vs Python vs C++ or anything else - it depends what you want to build, so don't learn Python just for the sake of adding another set of syntax to your vocabulary and 'keeping up'. The best thing would be to find a project that motivates you to learn the core ideas that underpin all programming - 'programmatic thinking', if you want to call it that, and importantly something you are interested enough in to keep you going through all of the frustrating trial-and-error that comes with the learning. Would it interest you to make a website? You could try JS. Are you interested in games? C++. Backend stuff? Java is super popular.",hypergolictypescript,2025-07-25 10:22:18,5,learnprogramming,t3_1m8v3op,False,
n5317nd,"The news is often distorted by people with agendas. They've been killing off SWEs for about twenty years. Each time they kill off SWEs, my pay doubles. They're bad at this.",askreet,2025-07-25 13:33:51,6,learnprogramming,t3_1m8v3op,False,
n529lpc,"""I genuinely want to learn and build a good foundation.""That is already a good start! If you are interested in something, go and try to do something with it or for it. It shouldn't be connected to school or anything or shouldn't be ""useful"". Just try out things! It is much easier to work on something if that is interesting for you and you'll learn from it.It doesn't matter what others do, don't try to compare yourself. There'll always be somebody who knows more/more successful/earn more etc. Just focus on yourself.Don't force yourself to learn python just beacuase other so it. It won't be good, I mean you will probably find that boring and it will just discourage you.And to answer your question: I remember long-long time ago as one of my first project I created a calculator in html+js. It was interesting to see something in a browser which was actually running. Then I wanted to know more. One project which I still don't know after like 20 years how I was able to pull of was a keylogger on Windows. I learned a LOT about C/C++ and Windows internal calls, how to ""hide"" it in the background etc. I still have that code. (I might have used it on a school computer and might have got myself a social media invitation for a long-gone site.)Just try to do something for yourself, it will give you motivation and when you finish you'll feel accomplishment.",gergo254,2025-07-25 10:36:37,5,learnprogramming,t3_1m8v3op,False,
n5265wi,"Language matters less as you gain experience. Learn to break problems down into actionable goals and build a project that you're interested,  you'll run into issues along the way and gain a ton from working through them.",manablight,2025-07-25 10:06:49,6,learnprogramming,t3_1m8v3op,False,
n52q0rl,"You could create a tetris clone in python if you want to learn it, or create an llm app usable in browser with some helper library (hf transformers, streamlit, langchain). Or get arduino and some parts to build a robot or weather station.",Important-Product210,2025-07-25 12:31:04,2,learnprogramming,t3_1m8v3op,False,
n52qzlh,"If you end up doing this in the long term it will become easy to learn a new programming language. Python is also considered an easier language to pick up.Because you've specifically asked for suggestions, my suggestion is to go all-in on Java. I assume this well help you get good grades and eventually employers may look better on you because of that.",neversignedupforthis,2025-07-25 12:36:56,2,learnprogramming,t3_1m8v3op,False,
n5323on,"Pick one language, one goal, and one deadline. That’s it. The chaos comes from trying to keep up with people chasing different outcomes. Your friends aren’t ahead they’re just busy. You win by choosing one thing that gets you paid or published and ignoring everything that doesn’t serve it.",NoPause238,2025-07-25 13:38:38,2,learnprogramming,t3_1m8v3op,False,
n532axq,"First, you shouldn't prematurely optimize -- ""The root of all evil is premature optimization."" So no need to learn Python. Instead you should focus on making sure you have the foundation to learn the ***engineering*** ahead of you. You are an engineer, not a programmer. Most practicing engineers I know know practically nothing about programming and the older one can barely use a computer properly. In fact, the older ones have already forgotten calculus --- they still remember the jargon like ODE but they could care less. Here is the thing about the universities these days. They have to have a schedule so they can keep charging you or your government for money. I am not against a liberal education, I think it is great, but I do not believe in taking people's education hostage to make a dollar. In fact, you as an engineer have no reason to learn programming at all, unless you find it fun and want to learn it. And, if you do need it, you can learn it on the job or right before interviews, or just fake it. Trust me engineering firms do not care, they only care that you understand engineering principles, that you have developed your gut feeling through apprenticeship at various firms. Even if you don't become an engineer, there is still no reason to do programming because engineering is where the work will be at in the future, not programming. Programming is technically dead at this point. It will be back just not in its current form. As long as you have a good understanding of the engineering principles and practices, you can carry that knowledge into any field and use that unique perspective to solve things that only you can solve with your own perspective.",kcl97,2025-07-25 13:39:42,2,learnprogramming,t3_1m8v3op,False,
n640die,"> CS is a glorified Math degreeThis is misleading. CS has foundations in mathematics, but it is very different from mathematics that you're studying right now. I don't think learning a lot of math will give you too much of an edge in a CS degree. Linear Algebra and Calculus are subjects you will study as part of a CS degree, but CS does not build upon them like Algebra builds on Arithmetic. CS is related to mathematics, but it is a different discipline.You could set yourself up better for a CS degree by studying programming, or taking a course like CS50 that introduces computer science.",maujood,2025-07-31 04:47:41,10,learnprogramming,t3_1mdrp85,False,
n63vnfv,"Calc 1,2 and linear algebra",bfhd72,2025-07-31 04:11:59,6,learnprogramming,t3_1mdrp85,False,
n63w02e,"you’ll likely take calc 1 & 2, for programming though, discrete mathematics is where you really want to lock in too",No-Strawberry623,2025-07-31 04:14:32,4,learnprogramming,t3_1mdrp85,False,
n64c57o,"Consider learning CS-related mathematics from books from notable publishers such as Pearson or, McGraw Hill, and the likes. These books are really good.For example, Discrete Mathematics by Kenneth H. Rosen, 8 edition is a gem to have. There are many other books I can recommend to you but only if you take the interest in reading them because book reading, let's be honest, is not everyone's cup of tea.",Competitive_Aside461,2025-07-31 06:26:48,2,learnprogramming,t3_1mdrp85,False,
n63w217,"Brush up on Arithmetic and Algebra (and if you're going into college or university for CS, also brush up on Calculus and Linear Algebra). Maybe also Geometry and Kinematics for game dev, simulation software, or other applications that require moving objects across a 2D plane or 3D space. Everything else can be learned or referenced from online resources as you go along, you'll learn more about the maths and systems relevant to CS in your degree (Discrete Maths/Logic, Digital Logic Systems, Data Structures and Algorithms, etc), so getting a solid grasp of the basics first will help you out a lot. Good luck OPEdit: also, to learn programming, you gotta build projects, rote memorization usually isn't enough. Start simple, and add as you go along. You don't need to produce anything production-ready from the beginning of your programming journey, just cement the concepts into your intuition",IndigoTeddy13,2025-07-31 04:14:56,1,learnprogramming,t3_1mdrp85,False,
n6477bf,"Get some exposure ahead of time to the basics of logic (propositional logic, then predicate logic with its variables, quantifiers, and predicates) and set theory.The first two (short) chapters of [How to Prove It](https://users.metu.edu.tr/serge/courses/111-2011/textbook-math111.pdf) are great. Try to get to the part on DeMorgan's Laws.With a better grip on logic, a lot of things will become smoother.Aside from just CS, for college as a whole, I'd at least skim the small book ""How to Become a Straight A Student"". (You might be able to find a PDF somewhere - cough). That book helped me a lot.",two-bit-hack,2025-07-31 05:43:39,1,learnprogramming,t3_1mdrp85,False,
n64vw0s,"What math you need depends on what you are coding. For most coding, only basic math is needed.If you have a problem with math being theoretical, it can help to first encounter the problem where you need it.",SymbolicDom,2025-07-31 09:32:27,1,learnprogramming,t3_1mdrp85,False,
n669u42,Just pass calc bro,Major_Fang,2025-07-31 14:46:08,1,learnprogramming,t3_1mdrp85,False,
n67zp6n,"You can do programming without knowing any complicated math. However, a general CS degree is kind of like a sampler of lots of different types of programming and some of those types will require some math background. Most notably, you’ll want to touch up on logarithms if you’re a bit rusty since you’ll be using them to analyze the complexity of algorithms in your DSA class(es). Depending on the electives you take, there might be more relevant math topics, such as probability and statistics for data science, or linear algebra for graphics and 3D game development.",Quantum-Bot,2025-07-31 19:34:53,1,learnprogramming,t3_1mdrp85,False,
n647k4d,Yes im currently taking cs50 introduction to computer science but I do sti plan on studying the math part in advance so I can get myself ahead,FirmAssociation367,2025-07-31 05:46:44,4,learnprogramming,t1_n640die,True,
n5rljjq,"Stop following tutorials and build something from scratch, doesn't really matter that much what, as long as it's not trivial and not overwhelmingly large, then you'll just give up. You'll make a lot of mistakes and wrong choices, but that's part of the process, you just need to solve things and figure out problems yourself. You transition from basic tutorial projects to something else by just starting, you'll figure things out on the way. Real world project, including open source ones, are often quite daunting to approach if you don't have quite a bit of experience, so i wouldn't worry about it too much.",gramdel,2025-07-29 09:59:15,9,learnprogramming,t3_1mc786s,False,
n5rm2i0,"As usual with such posts: Stop using tutorials. Start creating your own small projects (as you call them ""beginner projects"") from scratch, without tutorials. Build your own things.Grow with your projects. Research what you don't know, but not in the form of tutorials for ""how to build X in language Y"", rather in ""how to connect a SQLite database in Python"" - short tutorials and narrow in scope, specific.Extend your projects, or gradually build larger ones. That's the way to learn.Open Source is an entirely different matter. First, you should only consider contributing to projects that you use and are attached to, not just pick random OS projects and think you can contribute. Sorry to tell you, but it seems that your current skillset is by far not developed enough to be able to follow and to contribute to open source projects with several thousand lines of code and with several modules.You need to gain experience in building your own fairly large applications first (again not through copying tutorials).----When you face a large code base it is usually beneficial to find the main entry. From there, go through each module in the order it is called. You could, if you want (I do it), draw a treemap, use Obsidian with Mermaid Diagrams, etc. to map out the project structure. Get a general overview first and then go into details. Look for *specific* things, e.g. how a certain value is calculated, how a certain part of the code works. Don't try to understand everything at once. This will be overwhelming.This is also the reason not to contribute to random projects. You are not familiar with the product. If you are familiar with an application through use and find an issue, you check the bug/issue tracker, and then go into the code. You try to find where your specific problem happens.",aqua_regis,2025-07-29 10:04:05,3,learnprogramming,t3_1mc786s,False,
n5rldhl,"Step 1) Give an example of a meaningful, complex project. Step 2) Build that project. Ignore that it exists already, just build it.Step 3) Use that product, identify weaknesses, find better solutions, implement them.",sububi71,2025-07-29 09:57:43,1,learnprogramming,t3_1mc786s,False,
n5roe28,"Build what you have you mind that has some complexity to it. You can also come up with your own complexity - for example: 1 billion users. When the complexity comes, you'll be faced with how to solve it. With that, you can think or find solutions. and then you'll learn how to do it. For me, I was building a [3D Settlers of Catan alternative](https://settling-in-rambutan.pages.dev/). That would have some complexity to it: 3D, tile generation, path traversal, a hexagonal grid, multiplayer.",ApprehensiveDrive517,2025-07-29 10:24:58,1,learnprogramming,t3_1mc786s,False,
n5rmsjq,"Thanks for the advice — I’ve actually tried doing what you suggested. I built a few small projects from scratch like a to-do list, a notes app that saves data to localStorage, a digital clock, and a timer — all using plain HTML, CSS, and JavaScript.While I did learn some things, I still feel lost when it comes to structuring code properly, using best practices, or scaling beyond these basic ideas. Sometimes I’m not even sure if I’m solving problems the “right” way, and it gets overwhelming without any guidance.Is there another method you'd recommend to go beyond this stage?Maybe something between tutorials and full independence — like guided projects that explain the why, or studying design patterns or architecture?Would love to hear your thoughts!",Odd-Version-5602,2025-07-29 10:10:39,1,learnprogramming,t1_n5rljjq,True,
n5rp2vv,"I think it's best to just jump in, pick something not trivial, i'd count all those small project you have done trivial. You don't need to know everything beforehand, you'll learn on they way. You'll make a lot of mistakes structuring your code and what not, but that's pretty much a good thing, you'll learn what works and what doesn't and probably learn to correct at least some of your mistakes. I think a good guideline for scope would be that it takes you months to build it rather than days or weeks.",gramdel,2025-07-29 10:31:02,2,learnprogramming,t1_n5rmsjq,False,
n5rq4n6,"these types of projects teach you very little once you've done one or two. the scope is extremely small and they practically only do 1 thing. when you work on something real, it does many different things and you have to then piece together the interwoven logic and structure. this is the part that is especially hard and also what stuff like genAI kind of sucks at. I think a good frame of reference is if something can easily be done by genAI (very small and focused scope), it's probably not challenging enoughthere are many smaller details about how you can approach this, but ultimately what you really have to do is commit to a larger project. in my uni program we already had 2 big (for 1 dev to do in a couple of weeks) projects also requiring UML diagrams and MVC code structure in our first courseI'm also always going to recommend beginners to start out with static-typed languages and NOT something like javascript. languages like these both make it harder to understand what the code you're reading (that someone else has done) is doing, and it potentially lets you skip certain fundamental knowledge that is important and helps you orient yourself with programming. if you really do not want to drop css+html+js I think you should just go on with basic fullstack and use something like java or c# for the backend",NefariousnessMean959,2025-07-29 10:40:00,2,learnprogramming,t1_n5rmsjq,False,
n5suovr,"There's two types of doing things: really not right way to do things (newbie garbage code) good enough way to do things (code looks nice and works properly, other ways to do it might be overengineering for the sake of it)",RealMadHouse,2025-07-29 14:43:09,1,learnprogramming,t1_n5rmsjq,False,
n5s6hg3,"Based on this, I think you need to dig into other peoples’ code.  You’ll probably see a mix of good and bad, and thus improve you discernment.  So instead of starting from scratch, do a project where you modify ir extend existing code.",mapadofu,2025-07-29 12:34:56,0,learnprogramming,t1_n5rmsjq,False,
n64cp6j,"> Has this happened to anyone else?No, never, you are the only person in the world under several billion people who this happened to^/sReally, such questions are completely moot as you will never ever be the only one, unless you do something completely brand new (like jumping out of a balloon in the stratosphere).Losing the ""spark"" is completely normal, not only in programming, in everything. At first when you start something new, you're excited, but that excitement naturally wears off the more routine it becomes, the longer you are into it. This happens with everything.Yet, read: [I lost my motivation for programming/It is difficult to maintain my motivation](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_i_lost_my_motivation_for_programming.2Fit_is_difficult_to_maintain_my_motivation) from the **FAQ** here with the included articles.Relying on motivation as sole driver is a sure guarantee for failure. Discipline and persistence are what get people through.Treat your project as if you had a contract with a client. This sometimes helps.",aqua_regis,2025-07-31 06:31:50,8,learnprogramming,t3_1mdt02z,False,
n64iqzz,"Take out a piece of paper and write a short paragraph describing what the project does and who it will help. Keep it simple and to the point.Tape that paper to a nearby wall and let it be your North Star. When you’re not feeling motivated, take a minute to think about the goal and the people that could benefit (even if it’s just you). If you run into a difficult decision, go back to the paper and remember what your objective is. Don’t let the project’s scope expand before you reach the goal. Keep it simple and do only as much as you need to achieve the goal.",iOSCaleb,2025-07-31 07:27:26,3,learnprogramming,t3_1mdt02z,False,
n65gj9j,"What logically comes after the basics frontend tech, CSS, JS, HTML, would be API integration. Simply take any open web API and start building a small app with multiple views/routes and possibly a login feature. The idea is to expose any concepts you've yet to learn and how to integrate them into one project, even if you don't end up finishing it the project itself. Things like GraphQL, 0Auth, the fetch API, and other tech are pretty deep and knowing your way around them is quite valuable to potential freelance clients. Here's a link to some good APIs you can practice with: [https://github.com/public-apis/public-apis](https://github.com/public-apis/public-apis)",Several_Swordfish236,2025-07-31 12:11:14,3,learnprogramming,t3_1mdt02z,False,
n65q82m,"Motivation exists to create habits and systems of work. You're going to lose it at some point, so make good habits and build healthy systems to carry you through the days of low energy..",LoL_is_pepega_BIA,2025-07-31 13:07:30,1,learnprogramming,t3_1mdt02z,False,
n6456zc,Target whatever local agency or company you think is shit... research their infrastructure and boom.. you got a project/passive income if they accept your changes...,No_Understanding6388,2025-07-31 05:26:36,1,learnprogramming,t3_1mdt02z,False,
n64qe2d,"Yeah, fair enough. I know i'm not literally the only one, i guess i was just feeling stuck and just wanted to hear how others got through this stage. Thanks for pointing me to the FAQ, i'll definitely check it out. Also, treating project like a client work is I think a brilliant idea. I'll try it.",Klutzy_Point_7831,2025-07-31 08:40:08,3,learnprogramming,t1_n64cp6j,True,
n5xt8qk,"No more than basic math honestly, like you don’t really need to know more than high school algebra for most cases in web development.",Fun_Afternoon_1730,2025-07-30 07:18:34,26,learnprogramming,t3_1mczxde,False,
n5xtif8,It *rarely* goes any more complex than basic arithmetic.,plastikmissile,2025-07-30 07:21:08,18,learnprogramming,t3_1mczxde,False,
n5xv0tn,"Unless you get into animation which may lead into trig and basic calc which often is already done for you in libraries, basic arithmetic like others said",grantrules,2025-07-30 07:35:46,10,learnprogramming,t3_1mczxde,False,
n5xyg68,Like everyone said very little. I think creative writing skills for naming functions and modules prove to be more useful. Lol.,Miserable_Ad9577,2025-07-30 08:08:55,8,learnprogramming,t3_1mczxde,False,
n5xvepq,"Barely any maths at all. Maybe like once a year I'll reach for a calculator. Definitely nothing more advanced than high school maths, usually just basic PEMDAS stuff with ""big"" numbers that I can't do in my head - in the order of 10^2 to 10^6.I studied DSP at uni, lots of calculus and trigonometry. I do have maths chops. But it just never comes up.A few things that do come up that might be tough for a non-maths oriented person:- The 16 times table is useful. We don't use hex much in the front end, but we do for CSS colours. Also, converting from pixel values (`px`) to relative units (`em`, `rem`) usually means dividing by 16. A 32px icon is 2em wide.- Positioning stuff on the screen is just Cartesian coordinates, with (0, 0) at the top left, not bottom left like you were taught at school. But also, your computer is just a fancy calculator, so there's no need to do any of this stuff in your head. Just drop into `node` or the browser console and do the sum you need.",EarhackerWasBanned,2025-07-30 07:39:38,7,learnprogramming,t3_1mczxde,False,
n5y0c8l,"I did backend for a while, and both maths and theoretical computer science were useful only a few times a year. And all of those cases were only because I was doing senior dev / architecture things. In the normal development day to day it basically never comes up in webdev.",Beregolas,2025-07-30 08:27:28,4,learnprogramming,t3_1mczxde,False,
n5xuaq9,"None.Except, understanding scaling - like multiplying values between 0 and 1 to be between two arbitrary values, or the other way around. That is extremely useful when doing animation.And of course counting, adding values and subtracting them, understanding when it goes below zero.",peterlinddk,2025-07-30 07:28:42,4,learnprogramming,t3_1mczxde,False,
n5xvjqr,"nope. maybe if you're building stock market, finance, or over the top animations sites.",Elegant_Mongoose3723,2025-07-30 07:41:01,3,learnprogramming,t3_1mczxde,False,
n5y1st8,thanks to all of you guys. now I can prioritize stuff which matters. thanks a lot.,MAwais099,2025-07-30 08:41:49,3,learnprogramming,t3_1mczxde,True,
n5y3d1k,"I'm not a web developer as such, but I do make websites when my boss insists.For the things you've listed, absolutely none of it.And honestly you don't ""need"" maths, you need to be able to *look stuff up*.",ToThePillory,2025-07-30 08:56:54,3,learnprogramming,t3_1mczxde,False,
n510dqc,Fluency in Hindi.,DonkeyTron42,2025-07-25 04:01:42,12,learnprogramming,t3_1m8olms,False,
n518ur1,that you'll be shit and slow everyone down but eventually learn,Hawxe,2025-07-25 05:04:41,6,learnprogramming,t3_1m8olms,False,
n51ec0u,Main thing is how fast you adapt there way of working . \[it's my pov\],FriendshipDry6898,2025-07-25 05:49:31,3,learnprogramming,t3_1m8olms,False,
n53p1lh,You'll be expected to fetch the coffee.,obj7777,2025-07-25 15:29:21,3,learnprogramming,t3_1m8olms,False,
n51mtey,"It probably depends on the company, but usually everybody knows that hardly any junior developer will be productive immediately. In my experience, when I started working as a developer, they gave me time to study the project I was being put on and to read the docs about the frameworks, libraries, and technologies they were using. Nobody expects you to start a revolution in the company, I think that, most of the time, as a junior dev you just need to show that you're there to learn and become productive. Also, if a company is looking for a fullstack developer, it would be strange to go there and say something like: ""*Yeah, I wanna be fullstack, but right now I'm too scared. Can I start with frontend? :folded_hands:"".* Just go in and say that you have no experience, they'll understand that they can’t assign you the hardest tasks in the company.",Federico_FlashStart,2025-07-25 07:04:09,2,learnprogramming,t3_1m8olms,False,
n5167nx,You discuss this with your manager when you begin your first job.,kevinossia,2025-07-25 04:44:12,4,learnprogramming,t3_1m8olms,False,
n5bigjb,"As a junior front end dev, your job is to make pixels behave and users happy. You’ll be translating designs into code, fixing layout quirks, and slowly learning that “responsive” means “why does this look weird on my phone?” It’s a learning curve, but a fun one.",alpinebuzz,2025-07-26 20:06:07,1,learnprogramming,t3_1m8olms,False,
n5s564p,"Scrimba teaches you with projects which is great, and The Odin Project takes a more ""learn by doing research and projects"" approach which I really enjoyed and taught me a lot. I recommend Scrimba and The Odin Project.",W_lFF,2025-07-29 12:26:50,7,learnprogramming,t3_1mc9w1x,False,
n5s6964,Freecodecamp is good for basic first steps. From YouTube Maximilian Schwarzmüller has great videos,littlecodingthings,2025-07-29 12:33:32,5,learnprogramming,t3_1mc9w1x,False,
n5s4hhu,"It's not a YouTube channel, but I recommend [the very detailed JS tutorial on MDN](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Scripting)!",abrahamguo,2025-07-29 12:22:37,3,learnprogramming,t3_1mc9w1x,False,
n5s5xwa,Traver Media explains greatly,1tzRustyBoy,2025-07-29 12:31:37,4,learnprogramming,t3_1mc9w1x,False,
n5s4szr,Bro Code is good.,idontneed_one,2025-07-29 12:24:35,3,learnprogramming,t3_1mc9w1x,False,
n5s7hyo,"Check out Traversy Media’s JS Crash Course, then The Net Ninja’s Modern JS series. Mosh has a super clear 1‑hour intro, and freeCodeCamp’s got a solid 3‑hour beginner course.",Extension_Anybody150,2025-07-29 12:41:02,2,learnprogramming,t3_1mc9w1x,False,
n5sgirt,"Not free, but i learned a lot from Jonas Schmedman (idk if spelled right) on Udemy. $10 on sale, worth it",Boring_Dish_7306,2025-07-29 13:31:55,2,learnprogramming,t3_1mc9w1x,False,
n5sy23c,"I have stopped using tutorials and courses and just use books now. You can try ""Eloquent JavaScript"" by Marijn Haverbeke.",Ash_ketchup18,2025-07-29 14:59:02,2,learnprogramming,t3_1mc9w1x,False,
n5x0phm,supersimpledev,ayushkas3ra,2025-07-30 03:24:28,2,learnprogramming,t3_1mc9w1x,False,
n5sfu1t,"*sigh* the daily ""where can I find good resources"" postAs if there weren't any **Frequently Asked Questions** linked in the **sidebar** with plenty recommended learning resources.As if this question hadn't been asked near daily already. A bit of searching before posting would be in order.As usual:+ [Free Code Camp](https://freecodecamp.org)+ [The Odin Project](https://theodinproject.com)+ [Mozilla Developer Network (MDN)](https://developer.mozilla.com)",aqua_regis,2025-07-29 13:28:10,1,learnprogramming,t3_1mc9w1x,False,
n5nml4r,"I'm 100% on board with Exercism, I think it's a great platform. I used it and I loved it. Please consider donating if you can.What follows is purely me ""thinking out loud"" and not criticism.Something in the video in your link made me raise an eyebrow. They mention ""chunky AWS bills"". I'm a DevOps/Backend dev by trade so I'm privy to how expensive apps can get to run, but from what I did on Exercism it seems like a relatively simple platform, with an open-source CLI and a web app at its core. That shouldnt require a chunky AWS bill.In the end they need to pay their team of 3, that's totally understandable but I would have liked more transparency about how much is actually spent on the infrastructure itself.",klorophane,2025-07-28 18:42:02,3,learnprogramming,t3_1mbntl7,False,
n5ocb01,"looks good, definitly gonna use it",michiel11069,2025-07-28 20:44:23,1,learnprogramming,t3_1mbntl7,False,
n5qi2qz,"I like it but I feel like the mentors can be really hit or miss. I had a dude who would spend an unnecessary amount of energy on small formatting errors, and would hardly explain things or answer my questions in any useful way. He was like, the only guy doing reviews in my language too.",mierecat,2025-07-29 04:05:33,1,learnprogramming,t3_1mbntl7,False,
n5o7nby,"Sure, the website isn't all that complex, just a nice ruby monolithBut please don't forget the test runners, I'd say that's probably the biggest cost factor",-Danealus-,2025-07-28 20:22:39,2,learnprogramming,t1_n5nml4r,False,
n67og4m,"C is a ""small"" language. Get started and comfortable with it from the resources you have. If you need to use or want to learn the modern versions in the future, then you'll be able to pick them up fairly easily. There's only been like 2 updates since 2000.Trying to find the perfect learning plan will be slower then just starting and adapting as you learn more about what you understand easily or don't and the kinds of problems you want to work on in the future.",DrShocker,2025-07-31 18:40:40,8,learnprogramming,t3_1me9hn1,False,
n67oo3h,"I have a strong opinion, held lightly. It’s not the books that are dated, it’s the language. The books are old because the language is old. The books are still good. If you’re working on embedded or real-time systems on limited hardware, C is a good choice.If you want to make web apps, desktop apps, or mobile apps, you’ll need some other language. And if you want to handle other people’s money or personal information, please use a memory-safe language.",Aggressive_Ad_5454,2025-07-31 18:41:45,5,learnprogramming,t3_1me9hn1,False,
n697z51,"It’s a great book for learning how computers really tick. Just remember, efficient learning isn’t about reading more, it’s about building, breaking, and fixing stuff. Bonus points if you Google less and debug more.",alpinebuzz,2025-07-31 23:16:38,2,learnprogramming,t3_1me9hn1,False,
n67svum,"All the really core skills you need to develop don't become irrelevant - problem solving, attention to detail, learning how to walk through a problem step by step and analyze it. Those are honestly the things you'll spend most of your time working on - the technology is just the medium you're working in while refining those skills. Which is why people who focus only on the tech they're learning tend to end up not really developing the skills they need.So don't worry about the technical knowledge being out of date, especially for C which is a very stable language. The only thing that might be out of date is the *pedagogy* \- education is an evolving field and educators are always trying to find better ways to teach - but if the books are working for you, then how they teach is probably fine.The journey from complete beginner to ""proficient enough to get a job as a junior"" is probably 5000 hours long. Don't worry too much about relevancy until like the last 1000 hours honestly, and not at *all* for the first 1000 hours. (obviously times may vary depending on aptitude, drive, etc)",PoMoAnachro,2025-07-31 19:01:40,1,learnprogramming,t3_1me9hn1,False,
n67uyvr,"Efficiency? In terms of time spent, memory management, CPU, storage, documentation?",Dean-KS,2025-07-31 19:11:47,1,learnprogramming,t3_1me9hn1,False,
n69vaxs,"Books are references, but it’s by practicing a lot that you improve. Happy coding.",Comprehensive_Mud803,2025-08-01 01:32:13,1,learnprogramming,t3_1me9hn1,False,
n67rk18,"If you want to learn effectively, don’t read a book, look up the basic syntax and come up with a project to work on first. Then start working on the project. Ensure it’s something that has been done before, so there will be plenty of material online about each part of the process.Look in the book, or online, for precisely the parts you need for your project. Don’t use an LLM to write anything either.You’ll be a competent junior developer in a shorter amount of time than it would take you to read the whole book.",Kezyma,2025-07-31 18:55:20,0,learnprogramming,t3_1me9hn1,False,
n67r70v,Thank you for your reply. My main worry was that I’d do all the reading and end up with useless knowledge that wouldn’t be able to be applied today so I’m glad that’s not the case.,Anon695,2025-07-31 18:53:39,1,learnprogramming,t1_n67og4m,True,
n67qunp,Thank you for your reply. Your knowledge has given me a new perspective and a clearer understanding of what I’m getting into.,Anon695,2025-07-31 18:52:03,2,learnprogramming,t1_n67oo3h,True,
n67xr3o,"Changing a language is kind of dangerous. Imagine a language changed every 3 years. You write a bunch of code this year. Three years from now, they change it, and now your code is broken. Does that seem reasonable? Many beginners feel code changes and they want to learn the latest, not realizing, using the same argument, that in a few years, they'd have to learn something new because the current stuff ""became obsolete"".Of course, 20 years is a long time, but languages that last time often change without breaking.For example, Java has come out with new versions over the past 30+ years. Still, in principle, code written back then would still run now. The biggest changes occurred roughly 20 years ago when generics were introduced. Yes, there are a some other features that came out, but if you stuck mostly to that technology, you'd still be decently fine in Java. You'd only add to that knowledge instead of throwing it away.Keep in mind that code tends to stay around for long periods of time. Code can last 20 years or even longer. If you had to rewrite that code just to keep it up-to-date, that would be crazy amounts of unnecessary work. Beginners think new code is written all the time. They hear Rust is big, so they think millions of lines of Java code are tossed out, and they rewrite it all, not realizing how hard it is to rewrite code. If it took years to write, it takes years to rewrite.Now, there are things that have gotten old, but mostly in web technology. Even so, some still hangs around. I thought PHP went away 20 years ago. It's still around. People still use it because web sites were written 20 years ago. Sure, everyone tells you to learn React or something newer.There was a posted months ago that wanted to learn Carbon, Google's answer to C++. It's not even been released, had no compiler that was available, and is still (for all I know) in limbo today. If they just learned C or Java, they'd be in better shape.Also, many programmers learn more than one language, so even if you never use C again, learning to program translates (somewhat) to learning new languages, so it's not wasted time even if you think it is wasted time. The fact is, to learn programming, you will ultimately ""waste time"". Avoiding mistakes often means avoiding learning.",CodeTinkerer,2025-07-31 19:25:20,2,learnprogramming,t1_n67r70v,False,
n64e2b7,"it really doesn't matter.Pick which ever one you like, focus on it, and get a bunch of experience doing it.",justUseAnSvm,2025-07-31 06:44:21,4,learnprogramming,t3_1mdudrs,False,
n64elrq,"If you're in a university, maybe you could ask your career counselor or someone in a similar role what kind of skills employers are hiring for? Or maybe talk to seniors who recently graduated? Ultimately, you want to focus on a specialization that will get you a good job.It's okay if you're not very good at any of the specializations yet. Most students are not. I was not either.",maujood,2025-07-31 06:49:19,2,learnprogramming,t3_1mdudrs,False,
n64gxn5,"The good news is that University is the perfect place to figure this out. Take some electives in different areas and see what you like. It’s fine if you aren’t an expert at any of those, majority of material you would have to learn at your first job/grad school anyway. Think of your undergraduate studies as breadth first search, you want to explore a broad range of topics to see which ones you like, even if you don’t dive deeply into them. And then once you find what you like, study it, hardDon’t overlook your data structures and algorithms courses though because you will be doing leetcode regardless of which area you pick",WallstreetChump,2025-07-31 07:10:28,1,learnprogramming,t3_1mdudrs,False,
n65jxkj,"Since it is your third year, it is time to master one skill. Let’s call it your primary skill. Pick one track for 3-4 months (the one that you enjoy learning the most), go deep, and build 1-2 projects in it that you can add to your resume. If it doesn’t suit you, switch. You won’t know what is the best for you unless you try. And you don’t have to be good at it initially, you’ll eventually improve as you practice. Also, I suggest that you also keep revising topics that are important for the interview perspective so that next year you’ll catch up quick and be ready to sit for placements and apply for jobs.",codingzap,2025-07-31 12:31:34,1,learnprogramming,t3_1mdudrs,False,
n66vqec,"i will suggest to start development if you are in tier 3 college because big companies doesn't come and you will get overwhelmed with dsa since it's never going to be completed , first learn 1 language any language just learn one then see that what you can learn further in that language choose any single domain based on it and just keep going deep dive into it and enjoy the process and project.",ElevatorJust6586,2025-07-31 16:28:32,1,learnprogramming,t3_1mdudrs,False,
n690rih,Check job post offers and think what is the best for you.,pepiks,2025-07-31 22:37:02,1,learnprogramming,t3_1mdudrs,False,
n64jo6b,"I genuinely enjoy working on them. Even though they’re simple—like creating a custom String class instead of using the built-in library—I find them really fun.Also, when I built a small website at university that only included the basics, I felt like I was capable of doing it too.The real issue is that AI is spreading rapidly, and no one can deny that the coming years will be some of the most significant in human history because of it. That’s why I wanted to dive deeper into it.So right now, I’m confused between: – studying C++- – studying Web development – Diving into artificial intelligence (though this one likely won’t happen)",FirmDoubt2581,2025-07-31 07:36:10,1,learnprogramming,t1_n64gxn5,True,
n64kxuh,"Do whatever you like. That way you won't regret it. Also, don't think that you have to learn one language or other. You'll learn several of them, since most of the basics can be applied to different programming languages.",VivaPitagoras,2025-07-31 07:48:19,1,learnprogramming,t1_n64jo6b,False,
n64lz7m,"You will need to know at least 1 language well, so if C++ is the language you’ve chosen you will need to study it regardless of which area you end up choosing. You are going to be changing languages/tech stacks as you progress in your career, so it doesn’t really matter which language you’ve chosen now. Be aware though that in interviews they are going to ask you to solve leetcode problems using a language of your choice, and for timed interviews you probably want a language that has simpler syntax than C++",WallstreetChump,2025-07-31 07:58:02,1,learnprogramming,t1_n64jo6b,False,
n65zawp,"For those interested, the book is free to read here: [https://github.com/SanQri/safe-by-design](https://github.com/SanQri/safe-by-design)",EgregorAmeriki,2025-07-31 13:55:05,5,learnprogramming,t3_1me284k,True,
n5pgeyd,"That's kind of how it is in a working environment, maybe you swap trello for Jira or Google docs with Confluence, but same idea. I think it's important to link everything together. Say you commit something in git, link that to your trello/Jira task. In that task, like all relevant information, such as documentation or a link to a slack thread. Then when you look at code, you can do a git blame and see which commit introduced that code, then that commit message links to the ticket for the change, that ticket will link to the design specs, requirements, and slack discussions around it.There's a ton of strategies you can use, some may be overkill for your situation though. Product managers and scrum masters have roles dedicated to organizing work and projects. My company requires all features to have technical designs approved by a principal engineer and committed to a GitHub repository before we work on it, and that GitHub repository is the source of truth for documentation around how things should work.",Zesher_,2025-07-29 00:15:40,2,learnprogramming,t3_1mbwjs3,False,
n5pgmp9,"Good project management is the answer, but that also ties into following best practices when coding.Different teams have different workflows, but it’s common to have information scattered across platforms. That’s fine—you just have to be consistent. If bug reports go in Jira or Trello, then make sure they’re not just being left in a Slack channel to wither away.You’ll figure out what works for you and your team overtime. Personally, my team (game design) uses Discord for general communication; Jira for tracking tasks, issues, and documentation; and GitHub for version control.",dylantrain2014,2025-07-29 00:16:54,1,learnprogramming,t3_1mbwjs3,False,
n5php4v,"Yup unfortunately this is pretty much just the way it is. Most tools are great at one thing and meh at the others, so you end up with a mishmash of tools that all do their one thing well but a bit of overlap between them.I think you end up just getting used to it.",RobBrit86,2025-07-29 00:23:00,1,learnprogramming,t3_1mbwjs3,False,
n5pzyfh,"*Scattered* suggests that pieces are spread around randomly. There’re not. If you kept all your work on sticky notes jumbled together in a large box, that would be difficult. But using systems to keep track of the various parts is the opposite of scattered — it’s *organized*. There’s some structure there to help you know where to find what you need.Now, just having systems doesn’t mean that they’re *good* systems. If your systems aren’t working well for you and your team, you should of course improve them. Perhaps you have too many different systems, or your systems aren’t easy to use. But an imperfect system is better than no system, so use what you have until you’re ready to switch to something better.Look for ways to make your systems work together better. If you fix a bug, for example, add a link to the bug’s Trello card to the commit message or pull request in GitHub, and add a link to the pull request or commit to the bug’s card. That lets you move easily from one system to the relevant into in another.",iOSCaleb,2025-07-29 02:08:17,1,learnprogramming,t3_1mbwjs3,False,
n5ko6na,"Just keep going and focus on learning the fundamentals of programming instead of just ""learning Java"". I can relate to your feelings about feeling a bit lost and frustrated from my own time leaning but I can assure you that if you keep studying to build an understanding you will keep improving. Right now you're stuck with all these separate pieces of a puzzle and you're finding it hard to see how they all fit. At times you will manage to fit some together and as you connect more pieces it will get easier and easier to find new connections. Focus on the fundamentals and try to have some sort of own project at the side that you can tinker with on your own when you feel like it.My own experience - I found it hard when I had gotten my degree to structure and design code. Like you I felt frustrated and a bit lost. We had very briefly talked about the concept of Clean Code during one of the courses without going in-depth at all so I ordered and read the book. I found it to be extremely helpful and taught me structure and a bunch of common patterns and idioms when writing code in a very straightforward and helpful manner.Lastly - if there was something that I wish the school had focused more on to prepare me and my fellow students for the real world, I'd wish we'd gotten more time to work with how online services talk with each other, what protocols do they use, how is information exchanged, request/response etc, as well as how you work with web/appservers etc. It was all very hand waved and the only server we had to setup was a light-weight Firebird local server to host our SQL-dbs.So, personal opinion - focus on learning the programming fundamentals, read Clean Code, and check out how apps communicate with each other and get som practice doing that. Good luck!",Klossar2000,2025-07-28 08:13:07,4,learnprogramming,t3_1mb8cvh,False,
n5lh1fe,"I get how tough it feels, especially with backlogs and everything piling up. Since you like backend and Java, try this simple path: Java basics → DSA/Leetcode → Spring Boot → build small backend projects. If you ever feel stuck, I found having a mentor or even short 1 on 1 sessions,platforms like Lrnkey are helpful, they can guide you without wasting time. You’ve already done a lot, just focus on one step at a time.",prazeros,2025-07-28 12:18:13,2,learnprogramming,t3_1mb8cvh,False,
n5ltkxr,"Really appreciate the help, klossar, you are right, i should focus on nailing the language fundamentals, Leetcode, and DSA before worrying about anything else. If I can’t write code, writing clean code is a bit of a stretch anyway. Thanks for the suggestions, I’m definitely bookmarking your advice.",mosahel,2025-07-28 13:32:34,2,learnprogramming,t1_n5ko6na,True,
n5lt1fc,"Java basics → DSA/Leetcode → Spring Boot → building small backend projects.I had a lot of scattered topics to connect, and this path binds everything together. I was about to follow a similar roadmap but i was confused, what first, what order etc. DSA first or Projects etc.",mosahel,2025-07-28 13:29:32,1,learnprogramming,t1_n5lh1fe,True,
n5mmtuv,"Just keep it steady, Java and DSA first, then Spring Boot and projects will feel way easier. You're on the right track.",prazeros,2025-07-28 15:56:19,2,learnprogramming,t1_n5lt1fc,False,
n5n479f,"Leetcode when ? >!coming from the world of react, it neither existed for me nor i ever tried !<",mosahel,2025-07-28 17:17:11,1,learnprogramming,t1_n5mmtuv,True,
n5k62ei,"variables cost close to nothing, if it makes your life easier just go for it. oftentimes programmers assign variables simply for readability, e.g. catList = GetCats(location, token); catFood = GetCatFood(banlist); catToys = GetCatToys(); MaintainCats(catList, catFood, catToys); instead of: MaintainCats(GetCats(location, token), GetCatFood(banlist), GetCatToys());oftentimes your compiler (if you're using a compiled language) changes your code if it detects it can do so without detrimental effects, like as an example removing the variable declarations and using alternative 2. this way you get the best of two worlds: code that's easier to read that also becomes better automatically as it is deployed.also there's a saying in programming:premature optimisation is the root of all evildon't worry so much about performance, solve the problem first and if there's performance issues with your solution, go on to solve that.",scandii,2025-07-28 05:24:41,32,learnprogramming,t3_1mb7lsi,False,
n5k9nac,"IMO, always *readability and maintainability* over *brevity*.If it makes the code clearer, easier to understand, easier to maintain, use multiple variables. If it doesn't harm anything, a single variable can do the job.Looking at your example, I would change more in the `convert` function than in main. Your chained replace is more difficult to read (and later to maintain) than what happens in main.Also, sidenote, a word about your comments: your comments are basically meaningless, especially the ones in `main` as they tell *what* the code is supposed to do - this is clear from the code alone and doesn't need a comment. Comments should mainly be used to tell *why* something was done in a certain (unexpected or uncommon) way. Your comments are just visual clutter without any additional value.",desrtfx,2025-07-28 05:56:25,9,learnprogramming,t3_1mb7lsi,False,
n5kd4d6,"Your Solution 1 actually has two variables, effectively. Do you see what they are?I personally find that:- Variables are often a matter of taste.- Good names can save you a lot of grief.- Variables that you assign an expression to, only to immediately return, provide little benefit over just retuning the expression directly.- Modifying a function argument by assignment is a bit subversive. Unless I'm cleaning up what I've been given or something, I rarely opt for it.- One-liners can be easier to read (up to a point!), but can be harder to debug.- Comments are best when they don't just repeat what the code is already telling you. Great comments are for tricky bits, and to explain the ""why"" behind the code.",SharkSymphony,2025-07-28 06:28:13,2,learnprogramming,t3_1mb7lsi,False,
n5kb8er,"It is relatively easy to write code that the computer understands. The computer doesn't really care about how many variables you use.It is much more tricky to write code other humans can understand. This doesn't really matter in this toy problem, but becomes quite important in larger or longer-term projects.For humans, giving names to things matters. It can be worth pulling outoart of a computation and assigning it to a variable *just to give it a name*. In this sense, variable names and function names serve a similar purpose to comments, but names are easier to keep up to date as the code evolves.Here is how I as a very experienced programmer would refactor that code if this were a production problem (untested): import re import sys EMOTICONS_TO_EMOJIS = { "":)"": "":slightly_smiling_face:"", "":("": "":slightly_frowning_face:"", } EMOTICONS_PATTERN = re.compile(""|"".join(re.escape(e) for e in EMOTICONS_TO_EMOJIS) def _emojify(text: str) -> str: # see https://stackoverflow.com/a/2400577 return EMOTICONS_PATTERN.sub( lambda m: EMOTICONS_TO_EMOJIS[m[0]], text, ) def main(): for line in sys.stdin: print(_emojify(line)) if __name__ == ""__main__"": main()There are a couple of fundamental differences that you might find distracting – using a replacement table instead of `str.replace()`, or transforming all input instead of prompting for a single line. The regex related stuff is a fixed pattern for applying multiple replacements to the same string.But for the purpose of this discussion important observations are:* I think `_emojify()` is a better name than `convert()`. Converting *what*?* I decided against introducing additional local variables. They don't seem to add anything. In particular, naming a value just to immediately return it doesn't tend to provide much useful information to readers.* No comments like ""get input"". Comments are useful for providing information that's not visible in the code. If an `input()` function is called, I can already see that we're obtaining input. The thing that would benefit from a more detailed comment in my version would be the regex stuff, as this is highly non-obvious for people who don't already know this pattern. Unfortunately, this pattern has no name, but it has a canonical Stack Overflow answer.",latkde,2025-07-28 06:10:46,2,learnprogramming,t3_1mb7lsi,False,
n5kg0tr,"Do not combine variable unless you explicitly named the variable as combined. For example, when you compute changes in input latency, you need to make sure the time and latency are separate values, not combining them and calling that relativeTime. It is a mess, because relative time is not time, it is time with singal latency, amd singal latency is not time. Thus, calling it relative time is misleading.",BoBoBearDev,2025-07-28 06:54:43,1,learnprogramming,t3_1mb7lsi,False,
n5kjnjt,"I know Python is a bad example just because of how bloated its variable size is, but take for instance one float. You know how much memory it uses? At maximum, 24 bytes of RAM. Your computer probably has around 60-70% out of 1,6x10^10 bytes of disposable RAM. Don't worry, single variables do not matter.If there's three billions of them though...",memesdotpng,2025-07-28 07:28:58,1,learnprogramming,t3_1mb7lsi,False,
n5kp3xr,"There is no need to limit the number of variables - I know that many editors try and ""help"" you, by suggesting that you are creating redundant variables, but it can often be helpful to the reader if you create a variable, even if it is only for a single line.Changing the value of function parameters as solution 1 does, can be a bad idea - especially if the function grows larger, and you have to keep track of whether it was the original input, or the modified - so it is an improvement to create the temporary `converted_input` in solution 2.Variables document what the values are supposed to represent - when you have a `converted_input` variable as in your solution 2, it tells the reader that the input is converted, and that is what the function returns. The function could just be: def convert(user_input): return user_input.replace("":)"", "":slightly_smiling_face:"").replace("":("", "":slightly_frowning_face:"")but then the reader would have to read all the code to understand what is being returned.Also, I personally prefer to always store the result in a variable before returning or printing it - it helps with debugging, because I can print or inspect the variable, use it in if-statements and so on. The only thing I don't like about your solution 2 is the naming of the variable `final_answer` \- it isn't an answer to anything, and it also doesn't seem very final. That name suggests that there are more processes. Maybe just `converted_user_input` \- that would also get rid of the comment just above, that says exactly the same!",peterlinddk,2025-07-28 08:22:13,1,learnprogramming,t3_1mb7lsi,False,
n5krflo,"I don't know what's up with some of these answers. If they don't make sense to you, don't worry, it isn't you.Reusing a variable name is OK here. What you have to watch out for is* ""scope"" - the contexts that a name lives in, within a module/function etc., and* functions that change values, vs. return values.In Python, when you assign a new value to the name ""user\_input"", that is scoped in this case to the whole function. In a larger function body, you might have loops etc., and you can negligently change a name that elsewhere you've been assuming represents its original value. It's OK here, it could be a really bad move in another context. You know, like old school guys like me will use 'i' for an index counter, and then use it again in another loop inside that, and that of course is not going to work right.For the change/return thing ... Somewhat miscategorized as such, because what we have here is a function return. But from an object method. The .replace.replace thing Harvard handed you here, you have to decide what you think about that. It's vaguely familiar as if imported from a ""functional programming"" model, and I think Python programmers commonly get some jollies from doing things like that. But it's a little less transparent what's going on in an OOP object.method model and I personally don't get the attraction. I might split that up into separate assignments to user\_input\*. Consider how that would relate to your question - would you want to reuse user\_input, or have a trail of new identifiers - user\_input, user\_input\_with\_happy, user\_input\_with\_happy\_and\_sad ...? Again here I'd reuse user\_input, but in another context the more specific names might be more informative.",DonnPT,2025-07-28 08:45:12,1,learnprogramming,t3_1mb7lsi,False,
n5ku5lm,I’d always keep the user input intact for something like this. It can be handy for debugging later. Like if you have multiple functions executing you can set test parameters or print to the terminal. You might think the issue is in the 5th or 6th function but see in the debugger that user_input was “z” going in when it should have been “x”Yes you might know that anyway but it’s nice to have 2 variables blatantly different to what you expected when your looking for bugs imo,Immereally,2025-07-28 09:11:59,1,learnprogramming,t3_1mb7lsi,False,
n5kwa8t,"The answer to the question in the title is “it depends”. Using more variables can improve readability. Sometimes, it hardly matters. In the given example, I would not use additional variables. The code is too simple, and once you have converted your input, you aren’t supposed to use the original variable anymore. But it still there, and the compiler won’t tell you if you’d write `print(user_input)` in the second example.",Abigail-ii,2025-07-28 09:32:43,1,learnprogramming,t3_1mb7lsi,False,
n5fnbai,I'm confused here... instead of a bachelor's in computer science you're thinking about... specializing in a computer science field? Isn't this still getting a computer science with a concentration?,Lotton,2025-07-27 14:03:07,10,learnprogramming,t3_1mamnvp,False,
n5g3dac,"Senior dev from the UK very familiar with UK academic system here.Your 'interesting academic route' isn't at all novel, in fact it's very common. I know plenty of people in the field who did CS and SWE, and similar. It's barely a specialisation really. You will most probably discover that Software Engineering and Cloud Computing undergrad degrees share some kind of ""common first year"" with straight Computer Science degrees and about 10 other ""degree pathways"" at your university, to ensure everyone has the basic knowledge required to move on. After that period, at the beginning of each year, you'll get asked to choose some modules in addition to the core modules totalling the credits for the year. This is the ""specialisation"" aspect. Different degree pathways are just different module choices each subsequent year, which is why many universities allow you to switch between degrees before you get to modules that are only available on certain pathways (essentially change your degree title and pick other modules).Whether or not you will be ahead or behind your peers depends not solely on your degree pathway, but also on how well the *contents* (what you study) aligns with what you would like to do for work. You don't mention this (even though it should be the biggest factor in your decision) but assuming you want to be a Software Engineer, neither CS nor SWE will give you a large advantage over the other, and the module choices available are likely to be very similar. I've never personally met a Software Engineer with a Cloud Computing degree, but this doesn't mean much, as much of the content is likely to be very relevant.You won't save any time, they're the same length. Feel free to skip any work experience years if you're confident in your ability to land a job. Use your best judgement.Note also that employers rarely care deeply about the exact degree title. ""Computer Science or similar relevant degree"" is common to see on job ads. They do often (not always) care that you get a 2:1/2:2 or above. Nobody regards 3rd well. I'll add from personal experience that I've had certain professional opportunities that were only open to people with 1st at undergrad, a full decade *after* getting the degree. You don't know what the future holds so make the most of it. I'm glad I did and richer for it. If you look at how your university calculates your final classification there's often an alternative formula that counts your first year marks (they award you the best mark using all formulas typically), so don't believe any nonsense like ""first year doesn't count"" etc. It might, depending on specifics.Edit to add: **A-levels are not 'instead of' a degree.** **No employer is going to pay much attention to your A-levels alone, and having an undergrad degree is preferred but not a hard requirement, to directly answer the title question.** You just need to take the A-levels that meet the requirements for university courses you're looking at. The requirements are listed on their sites. They usually either don't care about specific subjects, or list one subject they require you to have studied at A-level, possibly with grade requirements.",HashDefTrueFalse,2025-07-27 15:27:35,3,learnprogramming,t3_1mamnvp,False,
n5fnmw7,"Seems okay, not bad but not particularly either.AI and Cryptography are huge topic each, so I doubt you will see more than an introduction to them.Even if you choose a pure software development formation, you will have unrelated course (or more correctly ""not directly related"") like networking, system administration, project management, ...In my university, we all had a course a the legal aspects like who is at fault in X situation and what are the consequences.Whatever you choose, you will most likely have the basic CS knowledge of the main fields and just tiny bit more in your own field.",divad1196,2025-07-27 14:04:53,2,learnprogramming,t3_1mamnvp,False,
n5px0la,"Whether it’s “enough” really depends on what you want next. If you’re confident in self-study, and you enjoy getting hands-on with projects, then jumping into a more focused undergraduate degree in Software Engineering or Cloud Computing can absolutely make sense, especially now, when many universities are offering very industry-aligned programs. You're not necessarily missing out on much if you take initiative on your own to round out the foundational theory you'd typically get in a general CS degree. Just make sure the specialization you’re picking doesn’t lock you in too tightly. Cloud and software engineering are great fields, but you’ll want some flexibility to explore and pivot if you find something else that clicks for you in your first or second year. Whichever route you go, don’t underestimate the power of real-world projects and online learning. A certification or two (like AWS Cloud Practitioner or Azure Fundamentals) and a couple of GitHub repos where you’ve built something real can go a long way in making you job-ready.",Content-Ad3653,2025-07-29 01:51:11,2,learnprogramming,t3_1mamnvp,False,
n5fotl1,"I did A levels but didn’t do A level computer science, and it may not go completely in depth about software engineering or even touch cloud computing much, although it might have a bit of theory. It’ll be a good start though to get into programming. I personally did maths, physics, and information technology (IT), and so far A level IT has been a text book subject I still refer to in my third year of uni, as it goes into depth about a lot of theoretical stuff beyond just programming. Math is a great help as well, although I don’t know how much of it is really in software engineering or cloud computing, but it’s a definite boost.",Advanced-Theme144,2025-07-27 14:11:27,1,learnprogramming,t3_1mamnvp,False,
n5fu7ij,Where do you live? In my country A level is not well-known as Bachelor's degree so the HR may disregard it.,No_Record_60,2025-07-27 14:40:11,1,learnprogramming,t3_1mamnvp,False,
n5fv5mr,"I essentially did this. In the US, not sure where you are, you can get an Associates Degree in two years from a community college that are usually pretty specialized. Mine is in computer programming.Now I think this works best if you have the aptitude in the field and people skills to pull off being the prodigy new employee. I won’t lie, I was exactly this and I have hired others where I recognized the same.COBOL programmer, systems analyst, DBA, project manager, development manager and CIO. It can work for you with skill and attitude!Good luck in your future in IT!",TimeComplaint7087,2025-07-27 14:45:09,1,learnprogramming,t3_1mamnvp,False,
n5fz9rj,"No, a levels are what you do before undergrad and don’t really mean anything except for undergrad entry reqs especially if you are going to do a later stage version during undergrad The a level won’t change anything, a comp sci vs a software engineering undergrad are all identical to employersWhat matters is internships and applicable projects and whether you have a referral/ target school etc",VokN,2025-07-27 15:06:39,1,learnprogramming,t3_1mamnvp,False,
n5g0pyl,"Assuming you’re in the UK, I would look at degree apprenticeships. Paid experience + learning which leads to an equivalent uni degree.",Fuarkistani,2025-07-27 15:14:09,1,learnprogramming,t3_1mamnvp,False,
n5g2atj,"i would strongly discourage this as someone who's done A level CS and is now studying at uni. You will be behind the curve. Go to uni (preferably a high ranking one with some prestige), work hard in doing your own projects and searching for internships and you'll most likely do better than if you were to do what you've described",sigmagoonsixtynine,2025-07-27 15:22:11,1,learnprogramming,t3_1mamnvp,False,
n53gezc,"Your brain forgets things it doesn’t use. That is normal. Intelligence is not the same as mental speed. You just may need to work longer hours to compensate for slower speed.No one can remember it all, what you should be able to do instead is to know what to look up to refresh your memory as needed.",bwildered_mind,2025-07-25 14:49:16,10,learnprogramming,t3_1m90xmt,False,
n53fwh0,Have a degree in CS and been doing this for 15 years now and I probably couldn't describe half of the things on there anymore.,InfectedShadow,2025-07-25 14:46:52,6,learnprogramming,t3_1m90xmt,False,
n53i9wi,"I like that chart, going through it gives me an idea of what gaps I have and things to brush up on, while also being a bit of a confidence boost in how much if it I feel pretty decent in understanding",SinlessMirror,2025-07-25 14:57:57,2,learnprogramming,t3_1m90xmt,False,
n53ihtm,"the world is filled with successful idiots OP so even if you aren't the sharpest, I have good news, it doesn't appear to really matter in the long run",LALLANAAAAAA,2025-07-25 14:58:58,2,learnprogramming,t3_1m90xmt,False,
n53ifpj,"You're being very critical for yourself for something that is really normal. First of all you're not ""too stupid"" or slow for this, cut that shit out. Second of all becoming a good programmer is all about pattern recognition (at least in my opinion). You're gonna have to keep at it for a while longer for things to actually solidify. Moreover, If you don't use something, you'll forget it because your brain trims it out. When the time comes for you to use a concept you can simply read up on it to refresh your memory and use what you need. You say you hit a plateau doing LeetCode questions which is definitely to be expected, learning is a bell curve and as difficulty increases the rate at which you progress decreases. This is a good sign that you're at the end of that bell curve, and that you should keep at it even if progress feels minimal. Build pattern recognition.Do you really think senior engineers or even Comp Sci professors actually remember everything they read? Absolutely not. You are doing perfectly fine.",obnoxious-rat717,2025-07-25 14:58:42,1,learnprogramming,t3_1m90xmt,False,
n53kzdi,"My man don't feel bad. I felt the same way. For me learning python seemed to be a momentous task likely because there are so many options. I just seemed to open. First, memorization plays a part in this, which is truly cemented by repetition. Think of Michael Jordan or Kobe Bryant. Their greatness was born in the gym with repetition. Find a process that works for you and hammer it in with repetition. This way, when time comes for you to perform it's automatic and requires little thought. Second, create a cheat sheet for you to easily reference hard to remember concepts. I would suggest you physically create this sheet to help solidify terms and concepts and/or but it in a spreadsheet for quick referencing. Once you feel you have a concept, command, and/or process down, remove or archive. Third, pace yourself. This is your race. Your race is different from mine and everyone else's. Comparison is a thief of joy. You should be disciplined and motivated in your race to reach your goals, but don't compare my race to yours. I may have jet boots compared to your flip flops , but I may have a lead backpack on while you're wearing a linen shirt. Finally, be honest with yourself. Our profession isn't for everyone. This portion of our profession may not be for you. And that's alright. Find what works for you. Also just because it's difficult doesn't mean it's not for you. It just means you have to be determined.",UltimateBravo999,2025-07-25 15:10:37,1,learnprogramming,t3_1m90xmt,False,
n54z11f,"If forgetting stuff disqualifies you from being a programmer, then Stack Overflow would’ve gone bankrupt years ago.",alpinebuzz,2025-07-25 19:04:41,1,learnprogramming,t3_1m90xmt,False,
n5be1b1,"You can improve your speed and memory with a good diet, better sleep, and most important, exercise. If you want to feel mentally sharp with the added benefit of increased BDNF ([Brain-derived neurotrophic factor](https://en.wikipedia.org/wiki/Brain-derived_neurotrophic_factor)), start regularly lifting heavy weights. If you're already doing this, go real heavy on squats and maybe look into your diet and sleep. Creatine is the number one supplement that's helped improve my memory, and magnesium glycinate follows right behind it. Drink tons of water, keep programming, and remember if you don't use it, you lose it.You got this.",UntoldUnfolding,2025-07-26 19:42:03,1,learnprogramming,t3_1m90xmt,False,
n5d8hm0,\> I  can barely stand to study for an hour a day and even then I hardly retain anything.Sounds like you need to work on the motivation... As for retaining - it's super hard to retain knowledge unless you apply it. Think of some fun project to do and use whatever you are learning there...,Great_Guidance_8448,2025-07-27 02:19:34,1,learnprogramming,t3_1m90xmt,False,
n5bdbig,This.,UntoldUnfolding,2025-07-26 19:38:04,1,learnprogramming,t1_n53gezc,False,
n63lzpp,"I got hired on as a full stack programmer right out of college. I got lucky and that pretty much never happens but I bring it up because I was looooost. Useless for 3 months, and not great for 6. After a year I was cruising though. In that first month at my job I learned more than an entire 4 year degree. You don’t know if you’re bad yet, keep interviewing, land something that gets you coding and run with it.",toddd24,2025-07-31 03:05:49,3,learnprogramming,t3_1mdpfkf,False,
n63eodh,"Go review CS material you forgot. Additionally start practicing interview questions. Soft skills, live coding & systems design stuff. It’s ok if you bomb a few interviews at companies you don’t too much about. Learn from those.Good luck",Rain-And-Coffee,2025-07-31 02:21:12,1,learnprogramming,t3_1mdpfkf,False,
n5zides,You should decide the language you use for each project based on the project requirements and what language is the best fit. You should not be switching languages for the sake of switching languages.,RajjSinghh,2025-07-30 14:37:35,4,learnprogramming,t3_1md7x1a,False,
n5zixd5,"Quality over quantity. Even if you have one or two projects that are actually solving a real problem and are scalable, accessible, secure, that’s enough. The objective is to learn while building. So, if you’ve learned about the concepts and can build a new project from scratch by applying those concepts, you’re good to switch to another language.",codingzap,2025-07-30 14:40:15,2,learnprogramming,t3_1md7x1a,False,
n5zn910,"It might help to tell us what you have done so far.* How long have you been learning a language?* Which languages?* What do you know about the language? Can you write classes? Do you know about inheritance? Recursion?* What resources are you using to learn a language?* What programming exercises have you done so far?When you've made ""decent"" projects, how did you do it? Did you copy a tutorial? Ask an AI? Could you have made the project only using Google and looking up resources?",CodeTinkerer,2025-07-30 15:00:42,1,learnprogramming,t3_1md7x1a,False,
n5zraps,Go and jump to another language right now and build projects there - its not like you are burning bridges and must never ever do anything at all in previous languages. Just explore away!,peterlinddk,2025-07-30 15:20:59,1,learnprogramming,t3_1md7x1a,False,
n5pwn98,"You are definitely doing it the way how it is presented. It's alright if it's taking you longer than usual because it is supposed to be that way. I would highly suggest though that after you had finished a lecture on CS50, and written them down like you've said. try to make a simple project based on the stuffs that the instructor had thaught to you. You could use A.I to copy the link and generate some simple projects according to the material and just attempt to make that on your own.",Lopez_Muelbs,2025-07-29 01:49:05,5,learnprogramming,t3_1mbyp00,False,
n5r4hsv,"Hey, you’re actually on the right track — seriously. CS50 is no joke, especially for beginners, and the fact that you’re not just watching but actively coding along *and* asking questions shows you're way ahead of just “passive learning.”Yes, it *will* feel slow at first. You’re not nitpicking — you’re trying to build actual understanding, and that takes time. It’s 100% normal to not remember everything or to need to look things up multiple times. Everyone starts that way.If you want to level up a bit without getting overwhelmed, here are a few simple tips:* **Keep a small notes doc** (which you’re already doing — big W)* **After each week**, try to build a *tiny* project using what you learned. Doesn’t need to be fancy — even a simple calculator or guessing game helps things stick.* **Don’t worry about memorizing syntax.** Focus on *what* each thing does and *why* it’s being used.* After a section, try explaining the concept to someone else (or even just to yourself out loud). It’s wild how much it helps.You're doing the hardest part right now: showing up consistently. Trust me, this isn’t wasted time — it’s the foundation that makes future stuff way easier to grasp. You're doing great. Just keep going.",Codeyoung_global,2025-07-29 07:15:04,5,learnprogramming,t3_1mbyp00,False,
n5pwq7n,"That's totally fine and is how the learning process is. Over time, and with repetition, the concepts will start becoming second nature. I also use ai to help me understand code, and will have it create problems that incorporate concepts I am learning, to help solidify them.",FCBitb,2025-07-29 01:49:33,1,learnprogramming,t3_1mbyp00,False,
n5pyknw,"You’re doing fine, learning to code takes time in the beginning. You have a solid foundation, anything thats unclear you ask an llm to explain it to you, you follow along with a course and try to understand what happens.Needing to look things up or use a reference is completely normal, especially in week 1. What matters most is that you’re making am effort to understand what’s happening.My advice is, use those concepts you’re learning and try to apply them in small projects. If CS50 provides assignments, try to do those with the concepts you’re learning.",ScaredStorm,2025-07-29 02:00:14,1,learnprogramming,t3_1mbyp00,False,
n5pzcd2,Your process looks fine—no issues here! Knowing how to use it is more important than remembering it.,Forward_Walk682,2025-07-29 02:04:43,1,learnprogramming,t3_1mbyp00,False,
n5qwabn,"I'm self taught/visual learner - i figured out that if I try to follow along coding while watching a course/tutorial - I tend to not fully grasp what I'm trying to learn - it becomes more that i'm just trying to recall syntax - it's almost like a typing test for WPM. my eyes/brain are looking ahead, but my fingers are following behind - i'm never focused on the actual _thing_And so basically when i want to learn something new i just kinda watch & listen, and I end up connecting the dots a lot better. I watch it however many times i need to, I watch other related videos, I look up things i need a little more detail on. Its good cuz, I know the thing that I want to code, isn't exactly the same as whats being taught to me in the video. At the end i've gathered bits and pieces of what I like from each piece of content.and then, with AI, i describe my understanding of that thing, and i have it just confirm my understanding. this leads to a lot of back and forth with AI because now i'm able to discuss the topic with it, adjust my understanding, correct the AI where it sounds wrong, and by the end of it, even if its not fully fledged out - i have a planonce i start coding, i have a stronger sense of the separate pieces of the puzzle that i need to build, and it becomes way easier to connect them all together",besseddrest,2025-07-29 05:59:36,1,learnprogramming,t3_1mbyp00,False,
n5py85f,>You could use A.I to copy the link and generate some simple projects according to the material and just attempt to make that on your own.Sorry i didnt quite get this. Do you mean i should copy the link of the lecture and paste it in to an ai and generate project ideas that are related to the lecture?,FirmAssociation367,2025-07-29 01:58:12,2,learnprogramming,t1_n5pwn98,True,
n5rt0ne,"Thank u so much, this just gave me more motivation!",FirmAssociation367,2025-07-29 11:02:51,2,learnprogramming,t1_n5r4hsv,True,
n5pxxzw,"Thanks for this. I'd like to ask how should I use AI as a tool to help ne learn. I don't want to rely on AI so much that it solves the problem by itself and id gaslight myself that I technically did that lol. People say dont rely on ai too much, other people say to embrace ai. So where do i draw the line?",FirmAssociation367,2025-07-29 01:56:33,1,learnprogramming,t1_n5pwq7n,True,
n5uj7e6,So true cause ive been studying for 4 hours today and im still at the 30 minutes mark lol,FirmAssociation367,2025-07-29 19:23:05,1,learnprogramming,t1_n5pyknw,True,
n591p58,"Learning things that are related to something that I already know is what motivates me to learn the most.Like if you already know HTML/CSS, it feels pretty cool to learn how to make it more interactive with JS. Then you might be interested in making the site more scalable with something like React and having the data persist, by learning how to set up a backend to store the data, etc.Check out [roadmap.sh](https://roadmap.sh/roadmaps), there you find various premade learning paths that can help you in the right direction.",Finer_Details,2025-07-26 11:53:42,2,learnprogramming,t3_1m9prwa,False,
n59luqj,"for me, i really needed projects to keep me engaged with my learning. two things i found really helpful related to that were:1) think small. smaller than whatever you just thought of! even smaller. there you go. completing things and being able to say, ""hey i did that!!!"" is a huge confidence buff.2) make them *fun*! youre not getting paid yet. and i know, society, but try to enjoy that! if could be tiny games - a word guesser, tic tac toe, the snake game, etc. it could be a little webpage that, idk, pulls a random quote from a movie you like. whatever it is, make it and show it to your friends and ask, ""what should i do next?"" then take whatever they say and return to point 1, and repeat!i found that doing really tiny fun things, and building up in complexity to solve problems as they came up, helped me stick to it. youll be constantly expanding your toolbox to get there, and will have concrete examples of problems you solved to reference later.",thereislightstill,2025-07-26 14:02:53,2,learnprogramming,t3_1m9prwa,False,
n59xnkh,"It’s normal. A lot of it will come back faster than you think once you start tinkering again. You’re not starting from zero, you’re just reloading.If I had to recommend one combo to get back in quickly:JavaScript + React + some simple backend like Firebase or Django.You can build cool stuff fast, and it’s great for resumes too.You got this man the fact that you’re even asking shows you’re serious.",itz_charlie01,2025-07-26 15:07:03,2,learnprogramming,t3_1m9prwa,False,
n58pzlk,"""programming"" is a very general term.what language ?what is your reason for learning programming ?",ninhaomah,2025-07-26 10:15:22,1,learnprogramming,t3_1m9prwa,False,
n58qel1,"I'm facing this very same problem, I started with python html and css, I'm currently watching bro code from YouTube and code chefs for practice, these resources have been recommended to me by several tech influencers so I thought I'd try them out",Left_Possession9489,2025-07-26 10:19:18,1,learnprogramming,t3_1m9prwa,False,
n594tw3,"start a project. A game, a website or some other stuff that comes in mind.",Chickfas,2025-07-26 12:15:50,1,learnprogramming,t3_1m9prwa,False,
n5ftch2,"Start with one small project that excites you - something fun, not perfect. The rust shakes off fast once you’re building again, and momentum beats memory every time.",alpinebuzz,2025-07-27 14:35:35,1,learnprogramming,t3_1m9prwa,False,
n58qa3l,"I don’t have a fixed reason yet. I just enjoy tech and want to explore different areas. I'm unsure which path to take web dev, app dev, cybersecurity, etc. Everything seems interesting.",Pretend_Importance62,2025-07-26 10:18:07,1,learnprogramming,t1_n58pzlk,True,
n58qdrz,then just pick 1 and start from scratch.,ninhaomah,2025-07-26 10:19:06,1,learnprogramming,t1_n58qa3l,False,
n58qgon,"Ok, Thanks!",Pretend_Importance62,2025-07-26 10:19:52,1,learnprogramming,t1_n58qdrz,True,
n5643et,Pick what you enjoy the most.It’s ok to switch occasionally too :),Rain-And-Coffee,2025-07-25 22:32:23,3,learnprogramming,t3_1m9cz5m,False,
n568z55,"What’s your goal with learning all this? If it’s just for fun, then switching whenever you want is totally fine!",Product_Teacher_5228,2025-07-25 22:59:51,2,learnprogramming,t3_1m9cz5m,False,
n56gyy7,"This is normal, happened to me. All I did was just switch between front-end development and data analysis until one day I said, ""you know what, building APIs and talking to databases is more fun"" and I made the switch to backend. Its fine if you dont know what to stick to at first, keep doing your thing and as you get exposure on each of them you'll begin to see what you like the most.Just the fact that you at least know that you like doing something is a good sign. Some people don't even know what to build, you at least have an idea of what you want to and like to build. I think the best way to not feel overwhelmed is for you to try and lay out and visualize the pros and cons of each field. So, why are you interested in web development? What do you not like? And so on, and that should help you narrow down what you like the most or at least focus on one thing for a while so you can really see what each path is about.",W_lFF,2025-07-25 23:44:53,1,learnprogramming,t3_1m9cz5m,False,
n58cc85,"Do it in a way that benefits your chances to find a jobGrab a roadmap and once you learn a technology, and want to move on, move to the next oneFrom what I see with your current stack I would learn SQL and therefore connect all those technologies and make a CRUD, a full stack applicationEither that or Node.js for the backend.So:SQL - Python (With Django or Flask) - HTML/CSS/JS (Possibly React too)OrSQL - Node.js (With Express) - HTML/CSS/JS (Possibly React too)Once you build something all the way from the database to the frontend your mind begins to understand how many websites and technologies work",The_Octagon_Dev,2025-07-26 08:00:22,1,learnprogramming,t3_1m9cz5m,False,
n5be3o1,"You’re not indecisive - you’re just multi-talented with commitment issues. :) Pick one thing, build something small, and finish it. Momentum is the best cure for overwhelm.",alpinebuzz,2025-07-26 19:42:24,1,learnprogramming,t3_1m9cz5m,False,
n5kxpq7,"Honestly, it's super common to feel pulled in a bunch of directions, especially with so many cool tech options out there. Maybe try picking one area and set a small project goal—see how you like it before switching.",FunnyInitial354,2025-07-28 09:46:19,1,learnprogramming,t3_1m9cz5m,False,
n5229i2,"Nobody cares about these certifications, the certificates that do matter are the ones from the cloud providers (AWS, Azur, GCP) or specific network/security/data.. ones.For development roles certifications are the least important.I only know that people like the quality of the IBM courses on coursera as a more structured course, if you're self-taught that may be a good middlepoint certification to get but do know only the ones named above are seen as valuable in the professional world.",Wingedchestnut,2025-07-25 09:31:15,7,learnprogramming,t3_1m8ujww,False,
n52n335,"freeCodeCamp’s updated curriculum is pretty good, but you probably shouldn’t be doing it for the certificates. The real reason to do it is to learn the material.",Snugglupagus,2025-07-25 12:12:56,4,learnprogramming,t3_1m8ujww,False,
n521q36,"Its Free, no?",rtalpade,2025-07-25 09:26:09,2,learnprogramming,t3_1m8ujww,False,
n52bqzq,"In my opinion, that curriculum is ok, but I feel like the learning curve is a bit steep, and there is too much going off on your own, as the course doesn't cover every single topic in detail. If you want a course that does that, I've made a book course with extra links to things like sample projects and debugging tips. I'm selling it for low prices, and if you are interested (I am a teen web dev and could use any support I can get to improve my courses), I would really appreciate it. Don't feel pressured, I can't tell you what to do, but I just recommend my course if you want to learn JavaScript anywhere, from basic console.log() to classes and data structures. Otherwise, good luck on freecodecamp and continue coding, it is a good skill to have :)",Historical-Solid-807,2025-07-25 10:53:41,0,learnprogramming,t3_1m8ujww,False,
n5293ot,"So in my Case, would you rather recommend to keep building Projects and deepen my understanding with that -> Then later on I would try to build something bigger (That has an actual Usage) and learn Frameworks (React, CSS Bootstrap etc.)OrComplete some of the courses you mentioned (Which ones would you recommend, that are possibly free?) I'm still a beginner (1 1/2 - 2 Months Experience)and the whole world of front-end/ Fullstack is a little bit overwhelming and hard to understand, what should be done to make it in this field? (I'm from Germany and things might also be a little different then elsewhere) Still I would be very thankful for every bit piece of Advice :thumbs_up:",Dawood087,2025-07-25 10:32:27,1,learnprogramming,t1_n5229i2,True,
n5htmii,"I don't know about about web development, but I took the IBM course on coursera on Data Engineering, and found it to be terrible.",ottovonbizmarkie,2025-07-27 20:35:59,1,learnprogramming,t1_n5229i2,False,
n525z30,Yes.,Dawood087,2025-07-25 10:05:09,1,learnprogramming,t1_n521q36,True,
n52fvu6,"You can either look up specific 'roadmaps' like from roadmap.sh or youtube videos and learn while you discover more but I understand that's not easy.I personally recommend to spent a bit of money once on the most popular courses for foundation like from Angela Yu or Colt Steele on Udemy (which I guess is less than 20 euro, not sure)Foundation will always be the same, once you have the foundation of fullstack and databases, you should look up your local technologie demand from your location and then make projects and a portfolio.Only development won't be enough, after that you can keep learning extra things like Docker, cloud technologies, applied AI..Good luck",Wingedchestnut,2025-07-25 11:24:37,2,learnprogramming,t1_n5293ot,False,
n5hwwcb,"I have no experience with the courses myself but I see there are multiple different ones ,introduction to DE , DE foundations, DE..To me as someone from DE/AI glancing over the structure it seems pretty good.Anyways thanks for sharing, if someone else reads this and is self-taught they can also glance over the subjects and learn each topic from other free or paid resources if they want.",Wingedchestnut,2025-07-27 20:52:36,1,learnprogramming,t1_n5htmii,False,
n52h9eu,"The Course you mean is: ""The Complete Full-Stack Web Development Bootcamp"" right? Its Still available for 19,99 Euros, I guess, that I will try out that one then, If Im doing this completely honest that should be a Great Foundation right?",Dawood087,2025-07-25 11:34:37,1,learnprogramming,t1_n52fvu6,True,
n50cinc,"I'm not super familiar with GitHub repositories, so I couldn’t view the full simulation with the graphics, but the code looked great!If you’re interested in learning more JavaScript, I recently put together a course. I'm a teen web developer working to improve my tutorials and learning materials, so any support would mean a lot. That said, no pressure at all — I just wanted to say good luck on your coding journey, now and in the future!",Historical-Solid-807,2025-07-25 01:28:34,-2,learnprogramming,t3_1m8lwlf,False,
n50dhkz,"I'd love to enroll! Have you got it up yet, is it like a Youtube thing?",Scary_Competition_11,2025-07-25 01:34:33,2,learnprogramming,t1_n50cinc,True,
n50hy4q,you cant directly run non web apps inside of GitHub but you can make a copy of the project with git clone REPO\_NAME then compile and run it yourself using the provided Makefile that most refined GitHub projects have or go into releases and download the exe or zip file and run it that way. \* I looked at the repo look at his readme it gives the proper steps on how to run it.,AffectionatePlane598,2025-07-25 02:01:07,1,learnprogramming,t1_n50cinc,False,
n50irvo,Thanks! I'll try that now.,Historical-Solid-807,2025-07-25 02:06:07,1,learnprogramming,t1_n50hy4q,False,
n65vek1,In the FAQ (in the sidebar) you find some info and resources that can be useful (i.e. mooc.fi has free Python and Java courses).,joranstark018,2025-07-31 13:35:07,7,learnprogramming,t3_1me13l2,False,
n661e1x,I think cs50 is very good! It gives a solid base for you to start in the area and you can combine with other courses while taking it.,Caiiiiiiio,2025-07-31 14:05:24,3,learnprogramming,t3_1me13l2,False,
n65qw86,"Im 36 have a 12 yr old, starting CS classes at my local community college, and they were free to boot, idk your location but it's worth a shot to check out.",mattp1123,2025-07-31 13:11:13,2,learnprogramming,t3_1me13l2,False,
n68mgmf,Buy a book.,rustyseapants,2025-07-31 21:23:38,2,learnprogramming,t3_1me13l2,False,
n66hh5o,"You can self learn the basics of coding using multiple resources. Most are listed in the FAQs (ex: CS50, Odin, Free code camp, Full stack open, Udemy, clusters, you tube, a book, etc)However breaking in without formal education or experience is very unlikely.",Rain-And-Coffee,2025-07-31 15:21:49,1,learnprogramming,t3_1me13l2,False,
n66jhbk,"Check out the full web development course by Angela Yu on Udemy. It kickstarted my career :). Udemy courses are 90% of the time for sale at like 15 usd or so. After her course I also did a 10-week bootcamp and it literally covered the same thing, maybe even less. I’ve also tried or different courses on Udemy but this one stuck the best. She’s very good at explaining.",NonDeveloper,2025-07-31 15:31:10,1,learnprogramming,t3_1me13l2,False,
n674c09,"Harvard's CS50 will make you waste time initially, depending on what you choose.I'm Brazilian and I started programming in some Brazilian courses because I didn't know English, but you can do the same with some English courses.First: go to [roadmap.sh](http://roadmap.sh), search for Role-Based Roadmaps, and find an area that interests you.Then, you'll need to find a course focused on that area and always consult the documentation for what you're learning.Once you've learned the basics of the tool you're studying, try creating something yourself. If you make a mistake, no problem. You MUST learn from your mistakes, and learning how to solve them is the foundation of programming.Then, create a LinkedIn account, send connections to ""Tech Recruiters,"" post your projects, your completed courses, and so on.Finally, you study in CS50.I followed this path, and it worked for me",klinkonsky,2025-07-31 17:08:30,1,learnprogramming,t3_1me13l2,False,
n66iqiu,Yeah the mod told Me but i’m looking for a uk based part time course was just wondering if anyone knew of any,BigDiggidyD,2025-07-31 15:27:42,2,learnprogramming,t1_n65vek1,True,
n66isxy,Cheers i’ll have a look,BigDiggidyD,2025-07-31 15:28:01,1,learnprogramming,t1_n65qw86,True,
n66ijc6,Yeah that’s why i’m tryna find an actual qualification that works with my lifestyle it’s difficult,BigDiggidyD,2025-07-31 15:26:47,1,learnprogramming,t1_n66hh5o,True,
n62ve86,"If you’re want to get a job go into databases, cloud computing, and automation.",darkmdosmicra,2025-07-31 00:26:50,2,learnprogramming,t3_1mdn6ts,False,
n62w5o3,Gaining knowledge in more areas of programming (or any career for that matter) is not a waste....,rambo_of_pa,2025-07-31 00:31:15,2,learnprogramming,t3_1mdn6ts,False,
n657bm7,"If you’re enjoying Django/Python, it’s smart to go deep before branching out. Mastery opens doors, and you can always diversify later.",irinabrassi4,2025-07-31 11:08:33,2,learnprogramming,t3_1mdn6ts,False,
n6394r9,The details don't matter. Learn the concepts,no_regerts_bob,2025-07-31 01:48:33,1,learnprogramming,t3_1mdn6ts,False,
n630tdn,Could u please elaborate more ?,Kloudy17,2025-07-31 00:58:56,2,learnprogramming,t1_n62w5o3,False,
n6339s2,I corrected my reply....my brain is too fast for my fingers....thanks!!,rambo_of_pa,2025-07-31 01:13:35,1,learnprogramming,t1_n630tdn,False,
n64h5xr,"It sounds like you’ve grown a ton already—being a solo dev on a full stack project right out of school is no small feat! For deepening backend skills, I’d recommend reading “Designing Data-Intensive Applications” and building side projects.",Dependent_Gur1387,2025-07-31 07:12:36,1,learnprogramming,t3_1md67si,False,
n5yi3oq,"You're mixing up two different methods, `substr()` and `substring()`.With `substring()`, when you use a negative number as the first argument, it uses `0` instead.With `substr()`, when you use a negative number as the first argument, it start(s) counting from the end of the string instead. So the `-4`th character of `""this string can be sliced""` is the last `""i""` in `""sliced""`, and then you count `8` characters, but there are only `4` left, so you get `""iced""`.",AmSoMad,2025-07-30 11:08:06,9,learnprogramming,t3_1md3hvt,False,
n5yh8xb,Checkout the documentation for the substr methodhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr,ConfidentCollege5653,2025-07-30 11:01:39,3,learnprogramming,t3_1md3hvt,False,
n5yhvco,the usual semantics of negative slice indices is counting from the end of the string. so here you are saying “from the fourth from last position take the next eight characters”,geeeffwhy,2025-07-30 11:06:21,1,learnprogramming,t3_1md3hvt,False,
n5zq10z,"Thank you so much, I should've realised there were two different functions, lol. That makes sense.",rabeeaman,2025-07-30 15:14:42,2,learnprogramming,t1_n5yi3oq,True,
n5yi0x2,"Ohhh, thanks!",rabeeaman,2025-07-30 11:07:31,0,learnprogramming,t1_n5yhvco,True,
n5zsmq5,"It's understandable.`substr()` is deprecated. It's an old method. But JS aims for backwards compatibility, so you can still use it.`substring()` is a newer implementation and still up to spec.But `slice()`, is the most modern implementation, and that's usually what I end up using. It simply says *""slice the array or string from here to here""* (which makes more sense if you've learned something lower-level, like C, because strings are technically arrays of characters). It considered a better abstraction (and I'd agree).",AmSoMad,2025-07-30 15:27:22,2,learnprogramming,t1_n5zq10z,False,
n603h47,I appreciate your help :smiling_face_with_tear:,rabeeaman,2025-07-30 16:18:22,2,learnprogramming,t1_n5zsmq5,True,
n5rzt0p,Do you have the math and statistical background?,ArgoPanoptes,2025-07-29 11:52:29,3,learnprogramming,t3_1mc9ajp,False,
n5s2rw3,"Starting with Excel, SQL, and Tableau is good. These are core tools for most data analyst roles and as you get more comfortable, you should start adding things like basic statistics (which you're already touching on with the Coursera math course), and eventually some Python or R if you want to expand your scope. But focus on mastering the basics first. Your goal of building projects is key. Whether it's analyzing publicly available datasets, visualizing something you're personally interested in, or even cleaning and presenting data from a small business (if you can find one willing to let you play with their data), those projects will help you learn more deeply and give you something tangible to show potential clients or employers. It's possible to land jobs or freelance gigs within a year, especially when you can show consistent learning, project work, and a clear understanding of the fundamentals. Your lack of a tech or math background isn’t a dealbreaker. What matters most is how you build your practical skills and communicate them.",Content-Ad3653,2025-07-29 12:11:51,2,learnprogramming,t3_1mc9ajp,False,
n5xwd5q,"Definitely not a pipe dream! With focused daily study and project work, you can build enough competency in Excel, SQL, and Tableau for entry-level roles in under a year",Dependent_Gur1387,2025-07-30 07:48:56,2,learnprogramming,t3_1mc9ajp,False,
n5y95k3,"Totally get where you're coming from. I feel that starting with Excel, SQL, and Tableau is a solid move. These are the go-to tools for most data analyst roles. Once you're comfortable, adding basic stats and a bit of Python can help, but focus on building a strong foundation first. Try projects like analyzing survey results, tracking local business trends, or visualizing your own spending data. These are simple but effective ways to learn and build a portfolio. One of my friends had no math or tech background and started with similar tools. She took an online course from a learning platform, studied for about 3 to 4 hours a day, and worked on small projects. Within 10 months, she landed a data analyst job at a mid-sized company. It’s definitely possible if you stay consistent and show your work.",TrueStable7343,2025-07-30 09:52:44,2,learnprogramming,t3_1mc9ajp,False,
n5s07lr,"I do not. I'm currently doing a Data Science Math Skills course on Coursera while I'm waiting for my schedule to clear in Sep. So far, so good.",cheesemelikenow88,2025-07-29 11:55:09,1,learnprogramming,t1_n5rzt0p,True,
n5s33ja,This is very encouraging. Thank you!,cheesemelikenow88,2025-07-29 12:13:55,1,learnprogramming,t1_n5s2rw3,True,
n5y01ko,Thank you!,cheesemelikenow88,2025-07-30 08:24:33,2,learnprogramming,t1_n5xwd5q,True,
n5yna7j,Thank you so much. This is great info. I really appreciate it!,cheesemelikenow88,2025-07-30 11:45:16,1,learnprogramming,t1_n5y95k3,True,
n5s7751,"Without a degree in CS or Math, it will be hard to land a job and have a good career in this field.",ArgoPanoptes,2025-07-29 12:39:15,7,learnprogramming,t1_n5s07lr,False,
n5rbibq,"This game is pretty cool, very basic. https://sqlpd.com/",President0fEarth,2025-07-29 08:22:36,4,learnprogramming,t3_1mc5tb5,False,
n5rl4ul,You could try some of the pentesting platform like hackthebox or tryhackme pretty sure they have SQL injection problems,IHeartLife,2025-07-29 09:55:31,3,learnprogramming,t3_1mc5tb5,False,
n5rfi2c,"Figuring things on your own can be a bit tough especially when just starting and so maybe you could find a tutor on platforms like Lrnkey to take you through a few examples with someone step by step,that could make a huge difference in understanding what you're doing",prazeros,2025-07-29 09:01:37,1,learnprogramming,t3_1mc5tb5,False,
n5rbkdp,"Oh, I didn’t read that right. Sorry. That’s more for learning SQL itself, my bad",President0fEarth,2025-07-29 08:23:10,3,learnprogramming,t1_n5rbibq,False,
n5rmwd7,That's just what I wanted to suggest as well.,desrtfx,2025-07-29 10:11:38,1,learnprogramming,t1_n5rl4ul,False,
n5rbqpi,"Nah thats ok, It looks pretty cool wish i had that when i was first starting out. Thank you nevertheless",mindvenderrearender,2025-07-29 08:24:53,2,learnprogramming,t1_n5rbkdp,True,
n5qqmir,"React Native will work very well for cross platform development. I prefer Flutter, but ultimately it will probably come down to preference in your case.",Serenity867,2025-07-29 05:11:08,3,learnprogramming,t3_1mc2pvv,False,
n5qr94k,"Yes, React Native is fine for complex apps.React Native supports both iOS and Android, you might have some parts of the code that will required a bit of 'if iOS do this, if Android do that', but for the basics, it'll be fine.Map support on React Native is OK, but only OK, it'll work though.",Slow-Bodybuilder-972,2025-07-29 05:16:17,2,learnprogramming,t3_1mc2pvv,False,
n5tk31e,I honestly love Tauri. The whole ecosystem is awesome. Most of the native functions are available to you in javascript. If you don't have something you can just use rust and invoke that in the frontend. You can just use react for the frontend.,Rudresh27,2025-07-29 16:42:04,1,learnprogramming,t3_1mc2pvv,False,
n5xkb0t,"there is few framework you can use flutter, reactNative is most popular as for C# developer they prefer xamarin it is up to developer preference.",No-Project-3002,2025-07-30 05:56:04,1,learnprogramming,t3_1mc2pvv,False,
n5qryw9,"And if you wanted it to be better than just ok, what is your choice of action?",3esuss,2025-07-29 05:22:15,1,learnprogramming,t1_n5qr94k,True,
n5qs71d,"MAUI has better support for Maps, but it's worse at just about everything else.There is no cross platform toolkit that's good, they all have trade-offs. If I was making an iOS only app, I'd pick SwiftUI, no question, but since you want Android too, React Native is a good choice.Flutter has it's fans, but I've never used it professionally, so won't comment on that.",Slow-Bodybuilder-972,2025-07-29 05:24:08,2,learnprogramming,t1_n5qryw9,False,
n5qt5ks,Alright appreciate all the advice as it’s very needed!,3esuss,2025-07-29 05:32:19,1,learnprogramming,t1_n5qs71d,True,
n5ozrvp,"I would look for a challenge or project that's at the right level for you, rather than settling for something too easy or too hard. As a starting point, I always recommend [Simple Programming Problems](https://adriann.github.io/programming_problems.html)!Beyond that, AI should be able to work with you to brainstorm some ideas that are at the right level for you.",abrahamguo,2025-07-28 22:44:11,4,learnprogramming,t3_1mbuook,False,
n5p19eu,"Yes, this is normal. Your degree ultimately builds only the bare foundation you need to make actual, real-world projects. Around 80% of what I learned was on the job, although I ended up using everything I learned in uni, except for “old AI” which I never found a use for.",Joewoof,2025-07-28 22:52:20,3,learnprogramming,t3_1mbuook,False,
n5p5h0b,"Feeling underwater is quite common, specially since it sounds like you have no paid experience. On the job you usually get thrown into a giant codebase and just have to figure things out.What types of programs would you be interested in building?",Rain-And-Coffee,2025-07-28 23:15:14,1,learnprogramming,t3_1mbuook,False,
n5p62n0,"It takes a long time to know what you don't know. And from there to gauge what is worth learning for the potential task at hand. It's normal to get into something bigger than you guessed in the early days. Keep doing what you understand but push the boundaries. Sometimes you can learn a lot from stopping after you've ""made it work"" and look at how else it could work. How many ways are there to do X seemingly simple thing? Is my solution the best, and why?",no_regerts_bob,2025-07-28 23:18:29,1,learnprogramming,t3_1mbuook,False,
n5p7pyh,What exactly makes you feel in way over your head? I'm having trouble imagining that.,Ksetrajna108,2025-07-28 23:27:22,1,learnprogramming,t3_1mbuook,False,
n5pestv,"That clears it up a bit. Thanks. Have you heard of the composite pattern. It's a way to think of a complex whole as an assemblage of less complex parts. This can be used concretely, such as the parts of a car, or more abstractly, like the scenes in a play. When your mind is focussed on one part, it thinks of the other parts more or less abstractly. Trying to focus on too many parts at once strains the mind and makes it feel overwhelmed. Can you find an example of this in your project?",Ksetrajna108,2025-07-29 00:06:25,1,learnprogramming,t3_1mbuook,False,
n5phxha,"how much is ""plenty of programming""? in 2 years the bigger projects we've done have been: a minesweeper variant, an online multithreaded messaging desktop app, a 2-month project of choice (chose to do a barebones 2d roguelite with physics and no third party code/assets), a programming language using antlr, a basic mashup web service, a plant and watering info web service, and lastly a mostly complete eco initiative web service (register and log in, send and receive private messages, create and join initiatives, comment on initiatives, log eco actions, and receive various relevant notifications). I've used java, python, js, ts, and gdscript during my time studying. in my next 2 semesters I will also have 1 c++ course eachfrom what you're describing it sounds like you haven't programmed enough to be properly self-sufficient. I will emphasize that at this level you will definitely feel underwater. you still get that sometimes especially when using brand new things, but for example if I make something with plain java and standard libraries I will NOT be feeling like that even in an ambitious projectunlike what some comments are suggesting, there's no avoiding this and you simply have to push through",NefariousnessMean959,2025-07-29 00:24:19,1,learnprogramming,t3_1mbuook,False,
n5qsekx,Have you worked with SQL databases?,Jim-Jones,2025-07-29 05:25:52,1,learnprogramming,t3_1mbuook,False,
n5rayi0,"feeling a bit underwater with bigger projects is super common—it's part of bridging that gap from beginner to intermediate. Try breaking bigger ideas into smaller, manageable chunks, and don't be afraid to dig into real-world coding challenges",irinabrassi4,2025-07-29 08:17:10,1,learnprogramming,t3_1mbuook,False,
n5rfjup,"Yes it's normal to hit blocks, particularly when you're learning something new. Try to break it down into small pieces and make small incremental steps forwards. If you still need projects ideas, there are 30+ beginner level projects here: [https://codingchallenges.fyi/challenges/tags/beginner](https://codingchallenges.fyi/challenges/tags/beginner)",JohnCrickett,2025-07-29 09:02:06,1,learnprogramming,t3_1mbuook,False,
n5gdux5,Start googling.Take every one of those concepts you mentioned and go read about them.That will take you from zero knowledge to some.Repeat until it makes sense.Good luck!,Rain-And-Coffee,2025-07-27 16:19:24,5,learnprogramming,t3_1maqdqx,False,
n5gge8h,">\> Where should I start as a complete beginner? (Languages, tools, learning order). Go review your year 1 coursework",ffrkAnonymous,2025-07-27 16:31:39,5,learnprogramming,t3_1maqdqx,False,
n5giwcb,"fwiw this is a very difficult first assignment you've given yourself, requiring expert level knowledge in three or four fields.something more reasonable in your timeframe but still aligned with your overall goal would be something like a stock alerter - you track a few stocks and if (for example) Walmart tops $110 it'll auto-send you an email notification.",Chaseshaw,2025-07-27 16:43:43,3,learnprogramming,t3_1maqdqx,False,
n5gho35,Pluralsight used to be a good online resource. You’ll have to subscribe though,Tingler1970,2025-07-27 16:37:45,1,learnprogramming,t3_1maqdqx,False,
n5friet,Java will give you a better foundation. Start with that.,Great_Guidance_8448,2025-07-27 14:26:03,5,learnprogramming,t3_1maglet,False,
n5edb60,"They're both fine, don't stress about it, pick one and get good at it",Buttleston,2025-07-27 07:53:45,6,learnprogramming,t3_1maglet,False,
n5gxy8h,"If you want to learn programming properly then Java.If you want to actually do stuff then Python.The only problem with Python is that you'll develop some learning debt, which will be tedious to overcome later, but it's not that big a deal.",da_Aresinger,2025-07-27 17:56:10,4,learnprogramming,t3_1maglet,False,
n5etz5y,Got you covered brosky [https://www.jython.org/](https://www.jython.org/),disposepriority,2025-07-27 10:38:46,2,learnprogramming,t3_1maglet,False,
n5i47xq,"Java if you're learning to code, that gives you the basis for most languages. It's has types and ""old school"" c style syntax.If you start with python, you'll have problems going into other languages, since the syntax is quite different and weak typed, it can be difficult switching from.",TomatoEqual,2025-07-27 21:30:44,2,learnprogramming,t3_1maglet,False,
n5jedo0,"C - java - python. C learn you low level code how it works, pointers, memory management etc. Java oop, libraries and apis it provide the fundamentals for high level languages, after that python would feel easier and youll understand it faster",notherex26,2025-07-28 02:03:33,2,learnprogramming,t3_1maglet,False,
n5ejtn1,"Keep in mind that since Python has a lower barrier of entry, there are far more entry level people flooding the market. Compound that with the fact that AI coding tools that are becoming sophisticated enough to handle a lot of low level work and we’re seeing a situation where even CS grads are having an extremely tough time.",DonkeyTron42,2025-07-27 08:58:24,1,learnprogramming,t3_1maglet,False,
n5fb28n,"Literally learn both. Both are a great 1-2 punch of first languages. Finish your Java course and then do the Python one next.Do NOT hop around to other courses before you have finished your current one. It’s a waste of time, and you’ll regret it. Do everything to completion.",ImpeccableWaffle,2025-07-27 12:50:47,1,learnprogramming,t3_1maglet,False,
n5fv3js,"Stick with Java just long enough to finish what you started, it builds discipline. Then jump into Python for speed, simplicity, and a smoother ride through uni and backend dev.",alpinebuzz,2025-07-27 14:44:51,1,learnprogramming,t3_1maglet,False,
n5jm0ql,"If your university is mainly teaching in Python, I would recommend going with that. That way, you can ace your classes. When I went to university, I had to do both java and Python. I started learning with Javascript, so it took some time for me to get used to java. Now I'm full-time java dev",cielNoirr,2025-07-28 02:52:56,1,learnprogramming,t3_1maglet,False,
n5eyqqm,"Being a mater in some Field is a Life Long dedication, Not a goal post.",movemovemove2,2025-07-27 11:20:28,9,learnprogramming,t3_1madvfm,False,
n5dv5ch,"""How long does it take"" questions are pretty hard to answer because there is the matter of how good you want to be, if you're a fast learner, slow learner, your age, and a few other things.All you can do is keep working on ever more advanced projects. Don't just do the same thing over and over, actually push yourself to the point where you think ""I can't do this"" and then push past that.A lot of employers are going to want to see TypeScript experience not just JS. For me JS is sort of a red flag at this point.",ToThePillory,2025-07-27 05:07:21,6,learnprogramming,t3_1madvfm,False,
n5ezn4v,"I think it depends how you define mastered. I think you can get far already if someone asks you if feature x and y can be implemented and you immediately get a feeling of yes or no and quickly can say why it can be implemented or can't. I work on my own company with a buddy of mine who isn't a programmer and he often asks about features and if it can be done and most of them can be done and a few cannot (at least not before launch) and I have to explain why. I still wouldn't say I mastered web development as there is still so much to learn and it won't ever stop. I think what's more important is to have a growth mindset and the believe what I don't know, I can learn.",sandspiegel,2025-07-27 11:27:56,2,learnprogramming,t3_1madvfm,False,
n5f3eyw,3 months is nothing considering people following traditional education path will be doing a lot of general IT things for 3-4 years or more.Depending on your location and discipline it can take 1 to multiple years to be job-ready. There is no exact answer for this but in majority of cases not a couple months.,Wingedchestnut,2025-07-27 11:57:51,2,learnprogramming,t3_1madvfm,False,
n5feg0d,"3 months? Oh gosh, who said that? I would say like 1.5 or 2 years to you really start to know what you are doing",RandomPitay,2025-07-27 13:11:41,2,learnprogramming,t3_1madvfm,False,
n5fqxn7,"just learn the theory of javascript and do simple projects. Dont go into advanced projects because you will be using react and node js anyway and those will abstract away most of the complex parts of js. You will realise that the actual level of js used in web dev is on the easier side. So i would recommend you to move on to react now, then next js, then node express and a database.",One-Satisfaction3318,2025-07-27 14:22:56,2,learnprogramming,t3_1madvfm,False,
n5f2kp9,"It's been one day since I started to learn JavaScript, what I wanted to ask you is how long did you learn JavaScript every day??",rabeeaman,2025-07-27 11:51:26,1,learnprogramming,t3_1madvfm,False,
n5fw5il,"Forget the “3-month full-stack” hype, real learning sticks when you build, break, and fix things yourself. Keep pushing your projects a little further each time, and you’ll grow faster than you think.",alpinebuzz,2025-07-27 14:50:23,1,learnprogramming,t3_1madvfm,False,
n5gsz7t,Yesrs,serverhorror,2025-07-27 17:32:27,1,learnprogramming,t3_1madvfm,False,
n5h7rtk,About 10 years.[https://norvig.com/21-days.html](https://norvig.com/21-days.html),esaule,2025-07-27 18:44:57,1,learnprogramming,t3_1madvfm,False,
n5c4rhk,"Python sets under the hood are [hash sets](https://www.w3schools.com/dsa/dsa_data_hashsets.php)It doesn’t have to check the entire set (which would be slow), it just has to check anything with the same hash as the new element, which assuming a reasonable hashing function should be either nothing or very few elements.",ThunderChaser,2025-07-26 22:10:10,26,learnprogramming,t3_1ma5kqi,False,
n5c6k68,"A `set`/`{item1, item2}` in Python is what is called a hash map. It's a bit of a complex topic, so I'd suggest watching a YouTube video about it, but here's a short explanation:Imagine you have a library of books. You could store those books in a `list`. If you store those books in a list, though, you have to check every single book to see if you have `Harry Potter` in your collection. Instead, you can put those books in a `set`. Books in a set are stored in piles. Each pile contains all the books starting with the same first two letters. So, to check if you have `Harry Potter`, you go directly to the `Ha` section. You don't have to go through the entire library.Now, let's say you only want one copy of each book, and you are given another copy of `Harry Potter`. You go to the `Ha` section and check for `Harry Potter`, if it is there, you just toss your new copy. If not, you add that copy to the `Ha` section.",BinaryBillyGoat,2025-07-26 22:20:50,5,learnprogramming,t3_1ma5kqi,False,
n5cdxe2,"The key idea behind sets/maps are that they use the value itself to determine its position in the list. As an example, take a string ""Hello world"", which you want to add to the set. We call hash(""Hello World"") and it returns the hash for that string (lets just say it is number like 66457). Then, we use that hash to determine the index the string belongs in, in the list. An easy way to do this for this example is to use the modulo operator. So say, our set implementation has 10 ""buckets"" (each bucket is an element in the underlying list), we can do 66457 % 10 = 7 so we place the string ""Hello world"" in index 7 of the underlying list(i.e. we place it in bucket 7).The core idea here is that we never had to iterate through the list of buckets, we derived the index from the value ""Hello world"" itself. We dont have to look at any index other than index 7 for duplicates because (assuming our hash function is deterministic), ""Hello world"" *always* maps to index 7.However, there is a problem. Say there are 10 buckets, but we input 20 elements. Since there are more elements than there are buckets, its inevitable that some buckets will have multiple elements in them. Because of this, it is actually true that we have to do some iteration to find duplicates. If there are multiple elements in bucket 7, then we have to search the bucket to check if ""Hello world"" already exists. I'm not completely sure datastructure python uses to represent buckets though, if its lists then yeah there would be iteration but technically it could be any data structure.",greenspotj,2025-07-26 23:05:14,1,learnprogramming,t3_1ma5kqi,False,
n5cnih9,"Others have answered the question of *approximately* how Python's sets are implemented using hash tables, as a high-level overview.If you want to see how they are *exactly* implemented, the source code is all there for you to read, but it's in C rather than Python.When you call `set.add()` in Python, the corresponding chain of C functions is [`set_add`](https://github.com/python/cpython/blob/v3.13.5/Objects/clinic/setobject.c.h#L435-L445) → [`set_add_impl`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L2144-L2151) → [`set_add_key`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L365-L373) → [`set_add_entry`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L122-L208). And `set_add_entry` is where the actual work happens to find the object's slot in the hash table and insert it. Python's hash tables use [open addressing](https://en.wikipedia.org/wiki/Open_addressing), so the function needs to try multiple slots until it finds either an empty one or an existing object that's equal to the one being inserted. Sets are fast because on average, this loop will terminate after a small number of iterations, *if* the hash function gives random-looking output *and* the fraction of occupied slots in the table is not too large. In order to make sure that second condition holds, the code calls [`set_table_resize`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L253-L330) to rebuild the table with a larger number of slots whenever the table gets too full.",teraflop,2025-07-27 00:03:18,1,learnprogramming,t3_1ma5kqi,False,
n5ct2xy,"A hash set is like a dictionary, the book that you use to look up words.In a dictionary, words are placed in sections by the first letter of the word.In a hash set, the data you want to hash is passed through a function, which tells you which section to place or find the data.The number of sections are fixed, and the hash function spreads out the data as evenly as possible throughout the sections.each section is a list that grows as more items with the same hash are added.When items have the same hash (but are not the same data) the lkstvis traversed to find the exact match.Since the section list is much smaller, its faster to find a duplicate item in the smaller list.",rupertavery,2025-07-27 00:39:34,1,learnprogramming,t3_1ma5kqi,False,
n5ecm65,"You seem to think that a set is a list with black magic. It's time for you to start learning DSA (Data Structure and Algorithm), especially the Data Structure part.Comparing `set` and `list` is a big abstraction. You can iterate on both, but you cannot sort a set or insert at a position.A `set` in python is closer to a `dift`. FYI, in Go programming language, they don't have `set` they use a map which is roughly a dict, they just don't care about the values and only care about the keys",divad1196,2025-07-27 07:47:04,1,learnprogramming,t3_1ma5kqi,False,
n5frgju,"Python sets use hash tables to store elements, which makes checking for duplicates super fast.No loops needed - just a quick hash check and it's in or out.",alpinebuzz,2025-07-27 14:25:46,1,learnprogramming,t3_1ma5kqi,False,
n5fwgaj,Sets are definitely not lists. A list guarantees an order of the elements it stores. It's a completely different data structure.,Great_Guidance_8448,2025-07-27 14:51:57,1,learnprogramming,t3_1ma5kqi,False,
n5rt9z2,It's kinda like a dictionary where both the keys and the values are the same.,paperic,2025-07-29 11:04:51,1,learnprogramming,t3_1ma5kqi,False,
n5d0u8t,"With modern hashing functions I’d be shocked it there are any collisions unless you’re doing an enormous set, but something that large is assume they aren’t using python for.",JackandFred,2025-07-27 01:29:25,4,learnprogramming,t1_n5c4rhk,False,
n58c85m,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-07-26 07:59:16,1,learnprogramming,t3_1m9nrek,False,moderator
n58crkb,"There are countless posts like this in this subreddit, and I am sure that most people's recommendation is to create something with the language rather than learning a new one. Or expand and learn a framework based on the language you just learned too. The crucial thing is to understand the logic + problem-solving stuff rather than knowing multiple programming languages' syntaxes.",NationsAnarchy,2025-07-26 08:04:28,15,learnprogramming,t3_1m9nrek,False,
n58e4xj,"Why jump languages? It's not that programming languages are Pokemon. You don't have to collect them all.Do you have a specific use case in mind, like games, desktop or mobile apps, websites? *Use* what you know. Build programs. Deepen your knowledge. You so far have learnt the *tools*, but you need to learn how to *use* them to *build something*.",aqua_regis,2025-07-26 08:17:55,9,learnprogramming,t3_1m9nrek,False,
n58k8n8,"Well, the answer depends on a single question: WHY do you want to learn another language? For fun? -> it doesn't matterFor work? -> What kind of work do you want to do? -> Choose a language appropriate for that line of workFor studying? -> What field? -> Choose a language appropriate...For a project? -> What kind of project? Any special requirements? -> Most probably for a beginner project, any language will do, but you might choose a language appropriate to...and so on.",Beregolas,2025-07-26 09:19:01,7,learnprogramming,t3_1m9nrek,False,
n59ks98,Something like C - it’s great for understanding the lower-level coding concepts like memory management,bioistry0,2025-07-26 13:56:44,3,learnprogramming,t3_1m9nrek,False,
n58cyvm,"Every language has some rationale for it. Depends on why you would move on to another language. Maybe Bourne shell and awk. Maybe Haskell. I wouldn't do assembly language, but back in the day it was kind of interesting.",DonnPT,2025-07-26 08:06:28,2,learnprogramming,t3_1m9nrek,False,
n58w6w4,"Are you going to do something that another language is significantly better suited to than python?For example, are you trying to build a website? Because then you'd want to try JS/TS.Are you trying to build a 3D game? Because then you might want to try C# or C++.But if you don't know what you'd use the new language for I don't see why you'd learn it and I'd focus on learning more universally applicable concepts in programming.Learning syntax is easy, writing good code isn't.",Constant-Tea3148,2025-07-26 11:10:16,2,learnprogramming,t3_1m9nrek,False,
n58cv61,"Rust, zig,",Y0uN00b,2025-07-26 08:05:28,1,learnprogramming,t3_1m9nrek,False,
n58ec84,"Any language you like, it doesn’t depend on the previous language. You can try C++ or Java",Huy--11,2025-07-26 08:19:58,1,learnprogramming,t3_1m9nrek,False,
n58nddk,Binary,ninhaomah,2025-07-26 09:50:16,1,learnprogramming,t3_1m9nrek,False,
n55zj0l,"Your brother could start with CS50x, especially if he has your help when he gets stuck on something. He won't be able to do it as fast as an adult, but it'll be a great learning experience for him to pick up those CS fundamentals at a young age.I was about his age or maybe a year or two younger when I started learning programming on my own. This was back in the early 80's so no tutorials or online help available. I had the little guide on Atari BASIC that came with the cartridge and a book I kept checking out of the public library. Did a programming class in (I think) 8th grade, Computer Science in 12th, and then a degree.",David_Owens,2025-07-25 22:07:14,3,learnprogramming,t3_1m94naj,False,
n54amjs,"I'd probably avoid any typical CS course, but it depends on what level your brother is at. Maybe something like Arduino or something physical? Otherwise, I'd suggest something like Scratch.It sounds like you went through a more rigorous way to learn and want him to do the same, but at 13, it's hard to say if that's good or not. If he's particularly advanced, maybe yes. Has he said what we wants to learn? I've heard of people who made a CPU using Minecraft.I think the key is to figure out what he's interested in. If he likes a more formal course, then great. If not, you'll have to improvised.",CodeTinkerer,2025-07-25 17:09:53,2,learnprogramming,t3_1m94naj,False,
n54dbsg,"I started programming in C at 11 years old, I don't recommend that though, I think learning HTML CSS and JS is a good start for any beginners. boot camps and uni intro courses are both fine, but be prepared to help him if he gets stuck",AffectionatePlane598,2025-07-25 17:22:09,1,learnprogramming,t3_1m94naj,False,
n54kfcr,"I started studying CS in high school at the age of 14, so for someone particularly interested in it I would think that such a course would be reasonable. That being said, it's important that he's interested in the topic you choose. Scheme is a great way to learn about language design and functional programming, but as a beginner I found a course in python to be a great first language. It's fairly simple and straight forward to learn the basics and it has a depth of features to explore depending on where your interests move as you learn more",punpun1000,2025-07-25 17:54:33,1,learnprogramming,t3_1m94naj,False,
n54loeo,maybe some turtlescript :/,NoAlbatross7355,2025-07-25 18:00:22,1,learnprogramming,t3_1m94naj,False,
n55yzi2,"I started learning in 7th grade, and by 8th grade, I was a better programmer than all the seniors in my school. As a freshman, I did work for a D1 College very much thanks to one incredible course.The best course I ever took was CMU CS ACADEMY CS1. I never found a course even close to it.",BinaryBillyGoat,2025-07-25 22:04:17,1,learnprogramming,t3_1m94naj,False,
n56p29i,"""Good intro CS class for a 13 year old? Hi everyone, I've been programming for around 2-3 years and I'm currently doing Linux Kernel programming at my internship.""I initially read that you were the 13 year old, that you were doing Linux Kernel programming but still wanted recs for a CS class!Anyway, cs50 is great. You say you want to avoid scratch, but note that the first week of cs50 is a gentle intro via scratch. Scratch is great for beginners though if he hasn't had any experience. I've introduced a 10 year old to scratch and it's pretty phenomenal to see them get their head around basic programming concepts and talk about them without necessarily having to take on a text based syntax. It's excellent preparation for taking on that text based language because you already understand how things work conceptually, learning your first text language is just adapting the concepts you know to new syntax.",plasterdog,2025-07-26 00:32:35,1,learnprogramming,t3_1m94naj,False,
n5712sx,I mostly just learned by programming in x86 assembly. Kinda hard to not learn about computer science when you're programming in assembly.,Fine_Yogurtcloset738,2025-07-26 01:46:40,1,learnprogramming,t3_1m94naj,False,
n590sqd,I believe codecombat has CS. It’s a great tool for beginners,Euphoric_Schedule_53,2025-07-26 11:47:05,1,learnprogramming,t3_1m94naj,False,
n56dy5s,"Geez wow, you must have so much knowledge! Hope to get there someday. Out of curiosity, where did you end up after all these years of CS? Has it been a fulfilling career?",MasterSkillz,2025-07-25 23:27:46,1,learnprogramming,t1_n55zj0l,True,
n64uwfr,"Things generally aren't set up that way. The public facing server would be on the same private network as the database, but could either be exposed to the public or it could be on an additional, separate public network. Or if they're both on a public network, you'd just use a firewall to deny everything except for your public server",grantrules,2025-07-31 09:23:06,6,learnprogramming,t3_1mdwo7w,False,
n64z47z,"Probably something like a reverse proxy? Basically the private server initiates a connection to open a tunnel into the public server. Basically you can link the database server port to a port on the public server.That would solve the problem of private server being in a different network, and not having a public ip.If it's on the same private network, but only the API server has a public ip, you would interact with the API externally, but the API service would then talk to the database server over the private network. That's probably a more standard way.In modern cloud setups you might do something like that with virtual networks, or you might just have a database with a public IP but basically limit the network traffic so it can only originate from the API server, and obviously have access controls in place as well.",MuscleZestyclose4893,2025-07-31 10:01:45,3,learnprogramming,t3_1mdwo7w,False,
n65rnqe,Changes to the public server are written to a message queue. Then a service on the private machine subscribes to the queue. Consumed messages are written to the db.,bikeram,2025-07-31 13:15:24,3,learnprogramming,t3_1mdwo7w,False,
n64vp83,"If you want instant updates you need to be able to notify the client, unless updates occur at scheduled intervals.The only alternative is constant polling for new information by the client, which is an absolute nightmare solution on public networks.In order to implement notifications from your server just register your client as a subscriber whenever your local IP changes.",da_Aresinger,2025-07-31 09:30:38,1,learnprogramming,t3_1mdwo7w,False,
n64z9ds,"If the updates need to happen immediately you just maintain an open connection. The private server needs to initiate a connection but after that traffic can flow two way all you want over a plain old TCP socket.But also depending on what exactly you are doing there's probably better ways. Plain old reverse proxy, cloudflare tunnel, VPN, etc.",Skusci,2025-07-31 10:03:03,1,learnprogramming,t3_1mdwo7w,False,
n650kax,"You would just have your webserver on two networks: the external one, and an internal one, where the database server also resides. In the most simplest setup, your public facing server has two network cards: one connected to the big bad world, the other connected to the database server with a single cable. In practice, you’d be working with routers and firewalls.",Abigail-ii,2025-07-31 10:14:28,1,learnprogramming,t3_1mdwo7w,False,
n655itj,You can set up a VPN to the server.,cormack_gv,2025-07-31 10:55:01,1,learnprogramming,t3_1mdwo7w,False,
n65gr8r,"This happens all the time, but it’s usually a different scenario. It’s usually a web browser or app client needing to receive updates from a central server without an addressable ip. There are two approaches. The first is polling, which is fine if updates can be delayed by a bit. iPhone email polls. The second is the CometD protocol which keeps a long lived socket open between client and server that closes after either a three minute timeout or when a “push” update is returned. This is inefficient in terms of open tcp sockets for the server and cannot massively scale but can support client counts in the thousands or tens of thousands.If you control the servers, you would allow inbound connections to the database and secure that point using a firewall and likely a vpn for an internal server. You would also strictly authenticate connections including restricting senders to known ip ranges. A common strategy is to route traffic through the vpn and only permit connections from it unless a device is physically in an office and authenticated on a trusted network.",Far_Swordfish5729,2025-07-31 12:12:35,1,learnprogramming,t3_1mdwo7w,False,
n67zcnc,"Often the solution is to layer internal networks. You have a public-facing load balancer. It takes incoming requests and passes them to your ""public-facing"" API server (which has no public IP address and can only get traffic from the load balancer). That API server is then allowed to open connections to the private IP of the database server (possibly via some complicated networking or handshaking thing verifying that only the right process/user/machine can reach it). But that's if ""public IP"" means ""internet"" and not ""any other PC."" If you need it so that the database server can't be reached by anybody, then you're in trouble. ""Immediately"" means you want a direct connection between the API server and the database, but ""only outbound connections"" means you need the database to initiate the connection to the API server, and that's a configuration mess. If you have lots of API servers, your database would need to connect to all of them and manage reconnecting to any that die. You could certainly build a solution for that, but why?",captainAwesomePants,2025-07-31 19:33:08,1,learnprogramming,t3_1mdwo7w,False,
n64zl6e,"The most elegant solution for the constraint where the database doesn't have a fixed IP and isn't in the same network is a reverse proxy. Don't need anything fancy, just a one liner ssh command to forward say port 5432 from the DB server to the API server. Would runssh -R [remote-port]:[local-host]:[local-port] [user]@[remote-host] from the DB server.",MuscleZestyclose4893,2025-07-31 10:06:00,1,learnprogramming,t1_n64vp83,False,
n5xg7j7,"Well, after all, it boils down to two things: ""pay more attention"" and ""practice more"".Really, that's basically all there is to it.Don't start even thinking about programming before you **fully understand** the task. You cannot solve what you don't understand.Sit down with pencil and paper and solve the task manually, your way. Then, once you have a working solution, start implementing it.> for example when doing a problem i didnt know i was supposed to return indexes instead of valuesSorry, but that is something that only attributes to lack of attention.",aqua_regis,2025-07-30 05:20:22,8,learnprogramming,t3_1mcxqv3,False,
n5xemf2,"Just keep doing more and more problems, and continuing to struggle. Over time, you'll get better.Programming requires a deep attention to detail, as well as being able to communicate precisely what you mean. Both are valuable skills that you should build up through continuing to practice problems like these.Also, follow the ""reps"" mindset. Just like how you don't perform an exercise just once at the gym before moving on to another exercise, apply the same mindset here. Once you complete a Leetcode problem, start over from a completely blank slate, and do the same problem again, and again. Then do it a day later, then a week later.",abrahamguo,2025-07-30 05:06:59,2,learnprogramming,t3_1mcxqv3,False,
n5r7vl5,cfbr (Similar position),MeIsYguy,2025-07-29 07:47:36,3,learnprogramming,t3_1mc58jh,False,
n5r8nca,"If the idea keeps you up at night and makes you code like a caffeinated squirrel, go all in. But grab also some freelance/remote gigs. Gotta fund the madness while building your masterpiece.",Alex_NinjaDev,2025-07-29 07:54:57,2,learnprogramming,t3_1mc58jh,False,
n5rj513,I’m in this same situation but I’m using AI to help code and I’m combing through it when issues arise. Keep at both! Something has to give.,YaOldPalWilbur,2025-07-29 09:36:48,1,learnprogramming,t3_1mc58jh,False,
n5tl2nx,"I was in a very similar situation after college, I had tried another small startup where I was the founder, and right after graduation I had an idea for an app for my school. I spent countless hours on it thinking I would make money off of it.The reality is, being a student, you likely do not have the skillset you need to succeed in starting a company and it becoming something that pays you.My advice is use the project you're working on as a learning opportunity, but keep your expectations realistic on what it will become. Having a solution to a problem is very different than taking that solution and selling it to enough people to make a living. If you spend an extended period of time grinding on the project, my advice is that you should be doing it because you're motivated to learn, not because you want to make it your job.I've always learned while passionately building a project that would eventually get thrown away, and I've spent a lot of time convincing myself that these things would pan out, but that's not really how the world works unfortunately.TLDR: Look for a job, build as much as you can, maybe get hired, see what professional development is like.",jamestakesflight,2025-07-29 16:46:40,1,learnprogramming,t3_1mc58jh,False,
n5r9jbb,It does indeed! Honestly I've learned a lot while working on it. Working a freelance gig is I think a great idea. I've never done one. Can you tell me how I can get started?,Klutzy_Point_7831,2025-07-29 08:03:24,1,learnprogramming,t1_n5r8nca,True,
n5k7cd7,"The best way to learn is to start building. It doesn’t have to be fast, as long as you understand everything that happens in the code, at least what you have written. Trying to understand every concept can be overwhelming, and shouldn’t necessarily be needed.So don’t worry, you’re on a good path.",ScaredStorm,2025-07-28 05:35:56,1,learnprogramming,t3_1mb7nrx,False,
n5lqbf1,"I think that no matter how the code is produced, we still need to be able to read the code and understand it (to accept it, or to reject it). You cannot blindly trust that LLMs generated code is correct, especially if you are planning to deploy your app. Code may contain vulnerabilities (e.g. vulnerable for SQL injection, cross-site scripting, cross-site request forgery, etc), all kinds of bugs and missing features. Who know, maybe even real API keys that found their way into the codebase somehow.That means, that we should still know fundamentals. Not sure what you meant by low-level stuff, but learning definitely will not hurt. Just make sure to apply your knowledge in practice and build something. That will improve your understanding of the material and help it stick in your memory for longer. Don't be afraid to reinvent the wheel for the sake of deeper understanding. At the same time, try to build something new, useful and challenging to really stress test your skills and ""level up"".The difficult thing is to focus on cultivating the right kind of skills and fundamentals. There is just so much to learn and to know. I don't know the answer either, besides the obvious: learn 1-2 programming languages well enough, learn data structures, pick a framework, know network protocols (at least HTTP), maybe OAuth, maybe cybersecurity fundamentals could be useful. Yeah, take this with a grain of salt. I actually started reading ""Structured computer organization"" by Tanenbaum. That maybe useful for low-level and system programming, i guess?That said, I would suggest to give these AI tools a try every once in awhile if you haven't done so yet. Just to see what they are capable of.I shared your hesitation at first. Then, I tried it recently and found it quite useful for generating boilerplate code and writing tests. No agentic stuff, just multi-line autocomplete mode. That way, you still are in control and can immediately review the suggested code snippet, but it saves you a lot a hand-typing.As for the AI, I am not gonna be a judge of whether the hype is justified or not. But, people do use these LLM-powered assistants in professional setting, at least to a degree. It's worth to at least keep tabs on from time to time.",two_times_three,2025-07-28 13:14:23,1,learnprogramming,t3_1mb7nrx,False,
n5jeccv,How about a simple blog?,abrahamguo,2025-07-28 02:03:20,8,learnprogramming,t3_1mb3zug,False,
n5jf5vw,It's best to make something that resonates with you and what you want. I will suggest something like a dictionary or some kind of language learning website that looks up a database. You will need to create your own api and have the frontend display the relevant information.,1000baby,2025-07-28 02:08:31,3,learnprogramming,t3_1mb3zug,False,
n5l1567,"build something you'd actually use, maybe a habit tracker, a budget app, or a small blog platform. you'll learn more when the project feels useful.",prazeros,2025-07-28 10:17:38,2,learnprogramming,t3_1mb3zug,False,
n5je7qs,anime goodies website :victory_hand_medium-dark_skin_tone:,Shino_s_Tokyo,2025-07-28 02:02:30,1,learnprogramming,t3_1mb3zug,False,
n5ji7pz,Health website,samjones2025,2025-07-28 02:27:57,1,learnprogramming,t3_1mb3zug,False,
n5jhw3c,Porn,pluhplus,2025-07-28 02:25:50,1,learnprogramming,t3_1mb3zug,False,
n5jxsb2,"I recommend making something silly. The sillier it is, the less pressure you will feel to make it perfect, and the more you can allow yourself to experiment. Go wild.For example, have a look at [the Condiment Packet Gallery.](https://www.condimentpacket.com/)",teraflop,2025-07-28 04:17:08,1,learnprogramming,t3_1mb3zug,False,
n5jeu30,Ok I will consider it,TheEyebal,2025-07-28 02:06:25,2,learnprogramming,t1_n5je7qs,True,
n5jzfxf,Oh thats smart,TheEyebal,2025-07-28 04:30:03,1,learnprogramming,t1_n5jxsb2,True,
n5i61yp,"Go sounds like a great fit for what you’re doing. It has a familiar C-style syntax, builds fast, and makes it super easy to create cross-platform CLI tools with zero fuss. I’ve used it for a bunch of automation scripts and small tools, and the standard library alone gets you surprisingly far.Rust is powerful but a bit heavy for casual CLI projects since the borrow checker teaches you a lot, but it can slow you down if you’re just trying to get something done for fun. Also, depending on what kind of tools you’re building, you might want to check out Gadget. It’s not a systems language, but it’s great if you ever want to take your automation and turn it into a backend or API without building the infra yourself. Nice complement if your CLI tools start needing a server side.TL;DR: Go first, Rust later if you want a challenge, and maybe Gadget if your tooling ever drifts toward backend workflows.",No_Week_5798,2025-07-27 21:40:30,4,learnprogramming,t3_1may0hf,False,
n5idbp3,You'll be able to get going with Go far faster than with Rust. So much easier to work with and a less complex language. The concurrency model for Go is also easy to use.,David_Owens,2025-07-27 22:20:00,2,learnprogramming,t3_1may0hf,False,
n5iy9z7,"Go is great if you're coming from C# because they're relatively similar as far as languages go. Rust is awesome but is definitely not newbie-friendly, you can go for it but prepare to spend a lot of time learning what the compile errors mean.If you want to stretch your skills you'd want to do something farther from your comfort zone. A dynamic language like Python, JS, or Ruby will help teach you discipline, while still building skills that are highly marketable.If you want to go more esoteric but deep into the world of languages, try going through SICP (a book). It's not immediately practical, but it deep dives into the fundamentals of what programming is.",RobBrit86,2025-07-28 00:23:00,2,learnprogramming,t3_1may0hf,False,
n5vx27l,"Ruby is an interesting and different scripting language. I prefer it to python for little CLI tools.It's Smalltalk with some Perl thrown in, so it's VERY object oriented, for example `2 + 2` is evaluated as ""create a numeric constant object initialised with the string `2`, then send it the `+` message, passing a second numeric constant object as an argument"". But it also has a lot of Perl-like CLI convenience stuff, like built in regexp.It has flexible metaprogramming, so you can define little DSLs (domain specific languages) within Ruby. This is how Rails works. Someone famously made a complete x86 assembler as a Ruby DSL:```rubyfisk = Fisk.newbinary = fisk.asm do push rbp mov rbp, rsp int lit(3) pop rbp retend```That's a regular Ruby program that's also x86 assembly! It works by overriding the name resolution system within the block that's passed to `asm`.It's a lot of fun to write, but perhaps too complex -- it's maybe as complicated as C++. But that just adds to the fun, for me anyway.",catbrane,2025-07-29 23:31:03,2,learnprogramming,t3_1may0hf,False,
n54q7oa,Make a video game like pong or asteroids.,32gbsd,2025-07-25 18:22:00,1,learnprogramming,t3_1m96b38,False,
n56vspt,"Building something will always make you really learn the concepts that you put in practice. I understand that you want to know all the features of C++ by heart, but that is not useful and practically nobody knows it. I think that it's better to learn the concepts when you need them.Documentation normally is a reference guide (you don't learn a human language reading a dictionary).LeetCode is full of exercises where you will need to apply DSA if that's what you want to do. If you want to learn to build, think about some program you cojld need or you would want to do and start doing it. Google and ChatGPT are always there for consulting all you need.",No_Dentist3681,2025-07-26 01:13:31,1,learnprogramming,t3_1m96b38,False,
n57y8le,"For a start, what percentage of the c++ pages at cppreference.com do you know by heart?But seriously, what do you really need to know to get the job done?",Ksetrajna108,2025-07-26 05:48:35,1,learnprogramming,t3_1m96b38,False,
n690m3n,"Low-level programming has solid opportunities beyond firmware: OS and driver development, real-time systems, IoT, networking, and security/reverse engineering.Remote work is possible for software-focused roles, but hardware-heavy jobs usually need lab access or hybrid setups.Build projects like:Microcontroller apps with sensors (ESP32, STM32)Simple RTOS tasks (FreeRTOS/Zephyr)Linux kernel modules or device driversCommunication protocol demos (SPI, I2C, UART)Document projects on GitHub. That will make you stand out for entry roles.",itz_charlie01,2025-07-31 22:36:12,2,learnprogramming,t3_1mecltx,False,
n69e1de,"Pedant here... C and C++ are not low level languages.But yeah, genuine low level work is a good choice, plenty of work, and largely ignored by bootcamps and all that.I'm a remote dev, I work with bluetooth and stuff like that, good fun, low competition for jobs, there simply aren't that many people that do this sort of work.You might be tied to the office (I'm not, the devices I work with a relatively small), but others I know work with machines as big as your house, so yeah, you're not taking that home at the weekend.I think it's a good option, web dev etc... is highly saturated, embedded most certainly isn't.",Slow-Bodybuilder-972,2025-07-31 23:50:49,2,learnprogramming,t3_1mecltx,False,
n68vp33,"GPU programming requires a fair bit of hardware knowledge to create reasonably efficient implementations. This includes: making sure the GPU is utilising all available threads, transferring data between CPU and GPU as well as synchronisation and parallel processing between the CPU and GPU. All requirements when working with Graphics APIs. 3D processing or just real-time image manipulation.",TheLogicUnit,2025-07-31 22:10:24,1,learnprogramming,t3_1mecltx,False,
n69a8do,"Jobs in embedded, automotive, defense, and even medical tech love low-level skills. Remote roles exist, but labs still rule in hardware-heavy teams. Build stuff that talks to sensors or runs on bare metal - those projects speak louder than job applications.",alpinebuzz,2025-07-31 23:29:12,1,learnprogramming,t3_1mecltx,False,
n66uu0a,"firstly, you probably mean JavaScript and not Java, they're not the same thing.secondly, if you want to do swift, go for it. My only hesitation would be that it's only for one ecosystem of devices, but as long as that meets your goals then go for it.getting started with a mediocre plan is better than researching the perfect plan.",DrShocker,2025-07-31 16:24:19,3,learnprogramming,t3_1me5rjy,False,
n6734li,Thank you!,Superwiw,2025-07-31 17:03:05,1,learnprogramming,t3_1me5rjy,True,
n676ngr,"for clarity by the way, I think it's a much better plan than mediocre, just saying that even if it were, just try and see how far you get before needing to readjust.",DrShocker,2025-07-31 17:18:58,1,learnprogramming,t1_n6734li,False,
n67ti39,"Availability or practicality of DI can depend on the language (e.g. Java vs. JS). If the language has good options available and it's for work, like maybe an Android app or Java/Kotlin server application, I generally prefer DI tools, partly for the convenience in sweeping aside all the nagging wiring details, but more importantly to keep a notion of ""explicit inputs"", keeping injection tied to either the parameters of the constructor or at least the fields of the class. That lends itself to some nice static analysis / compile-time safety opportunities, like validating the DAG (for example w/ Guice or Dagger in Java). Tests can also stay easy to write since direct constructor injection is doable (some broader tests may need a test-specific DAG, esp. if you're using field injection instead of constructor injection in certain places, but narrower tests can often get away with a simpler setup using direct injection).On smaller projects, especially client applications in JS, I tend to stick to simpler approaches, favoring doing my own wiring mostly with basic constructor injection, or sometimes using a service locator, and calling it a day. Trying to force DI there is a bit weird. (I'm not up to speed on the whole ""decorator metadata"" proposal and what effect that might have on DI libraries there.)When you use service locator, even though it may seem like it's splitting hairs, you're subtly shifting away from that principle of ""explicit inputs"". Even if dependencies are resolved in the constructor, the act of retrieving them from a global locator makes the injection implicit, burying it within the implementation details, rather than expressing it more clearly at the interface/class level. DI tools in Java, for example, will exploit that using annotation processors at compile-time to build and validate the dependency graph. So the more you push things down to be more implicit, I guess hypothetically a crazy amount of reflection work would be needed to build the dependency graph, e.g. parsing the entire codebase, track all call sites, understand any funky dynamic behaviors. Annotations make that info more structured, easily discoverable, and better suited for the task.And as far as the compile-time safety goes, and validating the graph, the benefits there are similar to the benefits of using types at all. It's all about catching certain kinds of errors at compile-time instead of pushing that into runtime (i.e. forcing your testers or users to catch bugs that are avoidable by just letting the machine validate your code based on what types you expect things to be, sort of like a spell-checker catching your typos before you publish an article to the world). Service Locator can run the risk of planting hard-to-spot landmines, whereas certain DI tools will do some hard clever work to let you know about those landmines before you step on them (a missing dependency, a circular dependency, incorrect type) basically asserting ""this code only builds if all the wiring is correct"".",two-bit-hack,2025-07-31 19:04:39,2,learnprogramming,t3_1me3q0l,False,
n68498q,"I professionally work on large codebase (~50+ million lines of code) containing a mix of backend and frontend code. We pretty much exclusively use plain-old dependency injection and do not quite use the service locator pattern.This is partly due to the architecture of our codebase, which is a monorepo containing a bunch of microservices. That is, we have one giant repo where all code lives, and the code contains several thousand smaller programs that are managed by different teams and deployed independently at cadences picked by the owning team. (The monorepo + microservice approach makes it easier for each team to move independently while still making it easy to share + reuse + mass-refactor code, etc.)Given this setup, having a central registry is not hugely useful because:1. If we create just one 'registry library' that everybody adds their thing to, it ends up introducing a major bottleneck to builds and tests. When we make a code change, our build system + CI pipeline tries building and testing only code that ends up depending on that code change in some way; having a single common module that nearly every microservice takes a dep on would add an unnecessary bottleneck.2. You don't really get much benefit out of having every single microservice create their own registry and register deps. If you're going through the hassle of this, you may as well just pass in those dependencies directly into your code and skip setting up the intermediary registry.Beyond this though, I personally think service locators are inferior to plain-old-code and dependency injection because:1. Having the dependencies be statically encoded in the source code instead of created dynamically via some magic framework makes it easier for IDEs and static analysis tools to determine where exactly different snippets of code are being used, programmatically update the code, more intelligently pick which tests must be run given certain code changes, perform type checking, etc. So, the less dynamic/runtime wiring we can have, the better.2. It also makes unit testing easier -- there's nothing simpler then just calling a plain-old-function or instantiating a plain-old-class. The less ceremony you can have, the better.3. Arguably service locators make it a little too easy to add new deps. Code that takes a large number of deps is usually a sign of poorly-designed code -- it should be broken up into smaller, better compartmentalized components. So, having a little bit of friction here seems like a pro, not a con.All that said, it's true that these microservices need a way to communicate with each other -- need some sort of [service discovery](https://en.wikipedia.org/wiki/Service_discovery). This has less to do with code architecture and more to do with the reality that these microservices need to run on a fleet of many thousands of hosts, and so need a way of discovering which IP address any particular microservice replica is serving from at any given time.To do this, we have microservices register their IP address in a system that's pretty similar to DNS; downstream microservices need to hard-code the specific service address and perform a lookup to talk to other microservices they take a dep on.In fairness, the actual code to do all of the above can end up feeling pretty similar to the service locator pattern in practice -- it's just that instead of registering a pointer, we register IP addresses. So, I suppose we do use a variant of this pattern in practice.> are multithreadedI think multi-threadness is irrelevant here. If your code is multi-threaded, your deps need to be thread-safe, no matter how they're passed around.",michael0x2a,2025-07-31 19:56:57,1,learnprogramming,t3_1me3q0l,False,
n685i7o,"I think this question is posed from an odd place because we’re basically asking which pattern is better as it relates to these massive contextually-sensitive topics. One question I’d ask is if we’re using unit tests to confirm smaller, isolated behaviors as parts of a bigger system, does the method these systems use to communicate matter?Another question might be, do I want/need multiple threads to have (essentially) global access to these systems? Because a service locator provides that. Just as an example with my context, I use service locators in game development to provide convenient access to main systems (audio, saving, scene loading). I don’t care about testing or have concerns with multi threading so it doesn’t factor into my decision. I use DI extensively in many other scenarios where I need to be explicit on my inputs. Definitely would recommend just building with velocity and if you run into a problem over and over again then consider refactoring or reaching for a design pattern.",Cidercode,2025-07-31 20:02:54,1,learnprogramming,t3_1me3q0l,False,
n68aump,"n general, you should use dependency injection instead of a service locator. However, there are situations where a service locator makes sense..like when you’re dealing with a mix of scoped services, singletons, and transient dependencies. In those cases, you often need to manage the dependencies manually with a service locator, in the sense you control their lifetimes but still use the container to initialize them.",yubario,2025-07-31 20:28:07,1,learnprogramming,t3_1me3q0l,False,
n67ybiq,"This is extremely helpful information, and I deeply appreciate that you took the time to write all of that! In my case it’s C++, but the core principles you outlined apply here as well as they do to JS. However, I’m also curious how you’d handle DI hell, where a class requires a ton of dependencies? Is that a common issue or is it just a sign that there’s a problem with the class itself (e.g., it’s doing too much and violating SoC)?",Nick_Zacker,2025-07-31 19:28:05,1,learnprogramming,t1_n67ti39,True,
n688s6g,"yep no prob! Yep exactly, it might be a sign that the abstractions (and SoC) could be improved. And you might feel some pain stemming from this this when you go to write tests, for example, where a test for a really complex class needs a huge amount of awkward setup just to test even basic things, which can feel out of whack.",two-bit-hack,2025-07-31 20:18:29,1,learnprogramming,t1_n67ybiq,False,
n62bll4,"You have to focus on a very specific and measurable goal, not just an ill defined „I always wanted to make games“. Start small, with one simple game which has some specific feature you like. Focus on learning how to program exactly that, step by step. You need smaller learning blocks, repetition and real practice. Passion often grows after success, not before. The focus should be on consistency, not intensity. You just need to keep going.",American_Streamer,2025-07-30 22:37:48,5,learnprogramming,t3_1mdkjdp,False,
n658y2x,">i am too slow and keep getting distractedDuring class? Because, honestly, that's just the nature of lectures. If you can figure out a way to be interested in what's being presented, you're fine. However, if there's little context or you have no idea how anything relates to anything, you're cooked.>passionate goals in the fieldFrankly, I don't trust this. I'd prefer passion for the subject.Programming can be fun. It's also hard. What will get your through the hard is finding the fun. A goal oriented approach isn't going to help here, regardless.Now, right now, start writing programs. If you're not there yet, take whatever code you've been given and make it do something else. See what happens if you change something here, or something there, or just write the same thing a different way.You can always make code better. Code you wrote, code someone else wrote, doesn't matter. Whenever you feel yourself zoning out in a programming class think ""how could I make that better?""Note, of course, that better is subjective. As your experience grows, what you think is better will change. That's fine. Always making code ""better"" should help keep you engaged.",WystanH,2025-07-31 11:20:31,2,learnprogramming,t3_1mdkjdp,False,
n62b634,"Everyone is different. Don't worry too much about the other people. Keep trying and you might find that things ""click"" for you at some point.",no_regerts_bob,2025-07-30 22:35:32,1,learnprogramming,t3_1mdkjdp,False,
n62bdaa,"What's that program called? I'm in need of one of those lol. Either way, why does being slower bothers you? Just keep at it if you like it.",BunnyWants2Code,2025-07-30 22:36:35,1,learnprogramming,t3_1mdkjdp,False,
n62jtw1,"dont compare to others, only compare to yourself. setout smaller goals and go step by step.let euphoria take over when you achieve something, dont kill it with ""but I was so slow"", think more like ""It works!! The way I imagined and I built it!!""i think the trick is to manage expectations and swing yourself from problem to problem!there have been weeks were I worked on ui-library updates/migrations and I felt like the most retrded coder because i already am overdue by like 2 weeks (HORRIBLE!), but everyone is shining in different types of tasks. html, css/scss is not my thing haha, I shine in logical problems and architecture. \-> told my boss I will become depressed if i continue working weeks on weeks with scss and he made sure I could learn some spring on the job and join backend a bit more. Now im loving my backend tickets and work as the only full-stack engineer at my job.It happens to everyone I believe, now that you know this happens you can work on it so thats great! A chance to gain more introspection and the outcome of this hurdle will definitely shape the way you handle future issues/doubts",Error404UserUnknown,2025-07-30 23:22:04,1,learnprogramming,t3_1mdkjdp,False,
n62nzik,"If I had followed a course, I’d have given up and done something else, it’s got to be the slowest and least effective way to learn this stuff. Get basic syntax down, and start tinkering on a project, you’ll learn far more. I assure you anyone who actually does well that’s on that course is learning from their independent practice, not from a course.",Kezyma,2025-07-30 23:44:41,1,learnprogramming,t3_1mdkjdp,False,
n62w5j4,First learn how to learn :),GetForked7,2025-07-31 00:31:14,1,learnprogramming,t3_1mdkjdp,False,
n63apxb,"Learning sucks. It’s straining. When it starts to suck you know you’re learning. I hate when people say they love learning. When all they do is memorize bullshit facts. Also you are an idiot, the sooner you accept that, the easier the process will be. Internally you’re battling your ego, which is standing in the way of your growth.",randomWanderer520,2025-07-31 01:57:52,1,learnprogramming,t3_1mdkjdp,False,
n67sszy,thank you!!,Apart-Dependent4370,2025-07-31 19:01:17,1,learnprogramming,t1_n658y2x,True,
n616534,"Yes you can build GUI with python but it's really not that common, I would even say it's rare. Python is mainly used as backend for webtechnologies, scripting and anything related to data & AI (analysis/engineering/science)Now if you're wondering why it is common even though AI development requires a lot of computing it's because there are many libraries that are underlying C++/C but you can interact with it with using python.If you're a data person who is not comfortable with frontend webdevelopment the standard for data roles is to use libraries like streamlit, gradio to quickly style/wrap your python code to a simple frontend",Wingedchestnut,2025-07-30 19:16:20,2,learnprogramming,t3_1mdeoeg,False,
n6191kz,"You can. I'm not sure I buy the argument that you use different languages for different projects. The things you do in Python, you could do in Ruby or Java or C#. All of these languages (and more) have broad capabilities.When Guido van Rossum invented Python, I doubt he said ""I must create a language that fits this narrow set of parameters"". He didn't know that it would be the language used in numerical simulations, or data science, or data visualization, or AI apps. Communities gravitated to Python. They could have picked Ruby, but they didn't.Even Google is focused mostly on four languages (C++, Java, Python, and Go).Pick a language like Ruby. What is Ruby good for that no other language is good for? Or Haskell? Is there something you absolutely have to code in Haskell? Or Clojure? Or OCaml?Yes, some languages are better suited than others, but some of that is due to the communities that adopted it, e.g. why Python is used in so many different fields.",CodeTinkerer,2025-07-30 19:30:19,2,learnprogramming,t3_1mdeoeg,False,
n61ec20,"Well, when I need to use python, I use python. I don't reach for python for everything because python lacks something that is, for me a non-negotiable language feature. Constants. Actual, real, not just a naming convention, constants. Otherwise, a fine language.",ShoddyDivide4049,2025-07-30 19:55:33,2,learnprogramming,t3_1mdeoeg,False,
n610f2q,"Simply because some languages are better at some things and worse at others. Also, history.I would never use Python for any really large scale, complex project.Every language has its advantages and disadvantages and use scenarios.You simply couldn't write a triple-A game in Python as it is by far not performant enough.",aqua_regis,2025-07-30 18:48:49,3,learnprogramming,t3_1mdeoeg,False,
n610j6h,"What exactly do you think pythons ""natural boundaries"" are? Believe it or not, the point of programming languages is... to write programs. Is it really that surprising that people do, in fact, write usable programs in python? People aren't just doing this for shits and giggles ya know. At the end of the day, we build things because they're useful. Not to be rhetorical, but it really seems you've missed the whole point of writing code.",tiltboi1,2025-07-30 18:49:21,3,learnprogramming,t3_1mdeoeg,False,
n6114cn,"> why don’t we just use simple languages like Python for every useA few reasons. For one, web development is stuck to JS a long as browsers demand. You cannot give a browser Python code and have it executed. >!Web Assembly is separate, requires compilation, and is not supported that well. It’s still not raw Python anyways.!<Python is slow. Really, really slow. Sometimes this is not a problem. Basic UI, testing, etc. is usually ok being slow. However, when I am a financial firm executing trades on the stock market, I cannot afford for my trade to take 10 seconds to execute. I’m looking for microseconds. Not milliseconds, microseconds. This is physically impossible in Python. Sometimes I need good concurrency and good speed. For example, if I am Wikipedia and am regularly serving over 100,000 requests per second (https://grafana.wikimedia.org/), I need a combination of speed, multithreading, and multiprocessing if I want to avoid spending enormous quantities of money on extra servers. Python is incapable of doing this as efficiently as a compiled language like Java. >!Wikipedia actually uses PHP and JavaScript (https://meta.m.wikimedia.org/wiki/Wikimedia_servers), Java is just an example. PHP was designed to be fast for web servers, unlike Python.!<",backfire10z,2025-07-30 18:52:08,1,learnprogramming,t3_1mdeoeg,False,
n612oxy,"There are a lot of questions in one here, but here's a brief attempt to cover most bases:* Why not just use Python for everything? Because, even for relatively simple uses, it's inherently pretty slow. It's simple **because** it hides a lot of the detail from you, but that detail is often where optimisation lies. Video games or scientific data analysis tools, for example, are often doing billions of calculations per second; they **need** to be heavily optimised. Python simply doesn't let you.* Why could the engineer get away with using Python (apart from the above)? Among other reasons: because he programs a single, small piece of software for one specific device that doesn't need to run anything else. A lot of the difficulty of low-level programming is getting incompatible systems to talk to each other - and you'd be surprised by how many similar-looking systems are incompatible. Does your computer have an x86 processor or an ARM processor? Most people have no clue, but they fundamentally speak two completely different languages. Python's solution to this is to force everything to run inside its interpreter, which solves the problem, but also isn't always what you want, because e.g. you can only run one piece of software inside the interpreter at once. (The home computer I'm writing this on currently has hundreds of processes active all at once.)* Are certain programming languages better than others for certain tasks? Yes and no - it depends what ""better"" means. You can achieve more or less anything you want on a computer by programming in C, for example. But if you really need to eke out every last drop of performance, you'll probably have to switch at least part of your code to Assembly. If you prefer to think in an object-oriented way, then programming in C might be very slow for you personally, and you might prefer C++. If you're paranoid about memory safety or whatever, then you might inherently distrust C and become a Rust bro. If your project is simple, and you're not actually worried about performance or portability at all, but it's large, then you might want to pick something simple to code in like Python to minimise developer time. If you want to make use of community-maintained libraries for working with large datasets or whatever, you might find that C doesn't quite do what you want, and writing it yourself from scratch would take months, so you just pick the thing that already exists in R. If you're working on decades-old financial software, then you might find your entire million-line codebase is in COBOL, and while it's technically **possible** to rewrite it in C, a subtle mistake might cost billions of dollars and crash the economy and send the whole country after you with pitchforks, so it's probably wiser just to learn COBOL.",numeralbug,2025-07-30 18:59:40,1,learnprogramming,t3_1mdeoeg,False,
n613xam,"You are right - some programs were designed to solve some problems. This makes them 'better' at some tasks, not as good at others.Then - some people try to use 1 language for EVERYTHING.Example: C language is low level, close to the hardware. Very little hand holding but because you have to do so much work, including your own memory & stack memory management, you can write very small and very fast pieces of code.SQL was designed to work with databases.PERL was designed to work with text. Very powerful text-based searching and manipulation.JAVA was designed to work on a bunch of different hardware/cpu's. This abstraction and a rich set of libraries make it quick to develop complex programs. The down side is you spend a lot of time struggling when the 50+ plug in libraries change and become incompatible.Ruby/Rust/Go - these seem to be great if you manage systems. More about keeping an eye on clusters of multiple machines or are a sysadmin.My advice - learn a bit of these so you have a variety of tools in your toolkit.",FatDog69,2025-07-30 19:05:43,1,learnprogramming,t3_1mdeoeg,False,
n61w5dr,"My example of this is an experience a while ago. We were migrating from one data platform to another. Users wanted to know their data would be the same in the new system. So we got them to do the work they needed and export to csv. We then did the same thing on the new system and also exported. Then we compared results. For the first few compares we used Excel. We built some template workbooks and a simple importer. This was the perfect solution, as users could see the date and easily track down bad results. We moved to larger datasets, and obviously Excel started to struggle, but we also knew the data pretty well, and knew from users what to look for. We switched to a compare written in python with pandas. This was the perfect solution, we could run multigig csv compares faster than Excel could import one of the CSVs, users knew our process, so we could just send them the reduced outputs, and we could customise the scripts per compare, and still churn through them quickly. Then we moved on to aggregate data. TB to PB of data. We had c++ code written to do in place compares. This was the perfect solution. We didn’t need to do export/import shenanigans any more, the code was pretty static, and we didn’t need to see intermediate data. Each of these was literally the perfect solution for what appears to be the same task across three iterations. But in each iteration the tool chosen was so much better than the other two approaches it was obvious what to use. Different tools really shine for different tasks. We could have used one tool for all three iterations, any of the three tools we chose. But for the wrong phase each tool would have increased our time and pain levels exponentially.",SnooMacarons9618,2025-07-30 21:18:48,1,learnprogramming,t3_1mdeoeg,False,
n61xed7,"Saying Python is ""simple"" and therefore easier to build with feels like an oversimplification. If I were building a large-scale web server, I would probably lean toward Java. For an interactive interface, something like an Electron-based site would likely be the best fit. A lightweight web app? Probably Node.js on the backend and whatever frontend stack suits the project.I can’t imagine using Python for embedded systems or graphics rendering either.I do enjoy Python, but depending on the task, I often find it easier or more appropriate to use other languages or platforms, even if that means I have to learn a bunch of new stuff.",NewOakClimbing,2025-07-30 21:24:54,1,learnprogramming,t3_1mdeoeg,False,
n60jxgl,I start with the output and figure out how to get there.,Jim-Jones,2025-07-30 17:33:25,3,learnprogramming,t3_1mdcmp0,False,
n60mdd3,"If you're going into your second year then you've probably only had 2 cs / programming courses, right? That seems a little early to start with your own projects, but if that's what you want to do, then I'd pick something you're interested in.Usually games scale really well, because you can start on the command line, then build in a UI, and then even add networking and a simple auto-player. There's a lot to learn there.Good luck!",rjcarr,2025-07-30 17:44:17,3,learnprogramming,t3_1mdcmp0,False,
n60l13n,Mm I see. But what if the output ends up being too hard to create? Do you abandon and try something else or do you go down a rabbit hole until you finally manage to create it?,kshao132,2025-07-30 17:38:20,1,learnprogramming,t1_n60jxgl,True,
n60qvjj,Thank you so much!,kshao132,2025-07-30 18:04:27,2,learnprogramming,t1_n60mdd3,True,
n60n338,"Sure. One program I wrote for my employer, to automate a horrible task, I abandoned two attempts. My third try, it went so well I enjoyed writing it and when finished, it was so easy to use it was a real pleasure.",Jim-Jones,2025-07-30 17:47:29,2,learnprogramming,t1_n60l13n,False,
n60qb3q,"> The device ID does not stay consistent and changes with Uninstall/Reinstall/Software Updates/etc.This is on purpose. The kind of tracking you're trying to do is considered an invasion of privacy: you're not *supposed* to be able to persistently track a user's hardware.Reading the actual hardware identifiers requires permissions that are only available for apps that are preinstalled by the phone manufacturer or carrier: https://developer.android.com/reference/android/telephony/TelephonyManager#getImei(int)AFAIK, the closest you can get is using [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure#ANDROID_ID). But this has some limitations: it will change if the user does a factory reset on their phone, and it's still considered personally identifiable data so you must disclose its use in your app's privacy policy.",teraflop,2025-07-30 18:01:51,2,learnprogramming,t3_1mdai3n,False,
n60nt07,Every single mobile phone has an IMEI that is globally unique and bound to the phone. How about using that for your Device ID?,desrtfx,2025-07-30 17:50:41,1,learnprogramming,t3_1mdai3n,False,
n61ex89,"1.⁠App cannot be used at once on more than one deviceThis could be done by making your server revoke any previous existing authentication tokens when a user signs in. That means if you sign in then it will sign out from all other sessions2.⁠If user logs in from an unknown device (not the one it was registered on), then the app's main functionality will be disabled and only view mode will existThis one’s a little more tricky because it’s considered privacy violation so android and iOS have gotten more strict about letting developers get this kind of information. However iOS has this available: https://developer.apple.com/documentation/devicecheck?changes=latest_minor which can be used to verify if the device is registered or not, and then from that you can grant different permissions to the user so they can only view your app",WallstreetChump,2025-07-30 19:58:18,1,learnprogramming,t3_1mdai3n,False,
n63ui0k,I'm leaning towards this as a solution as well. I'm okay with letting go of the combination on factory reset and letting the user re-verify it. Thanks! Anything else you think we should keep in mind?,_ihsunaj,2025-07-31 04:03:44,1,learnprogramming,t1_n60qb3q,True,
n5ywsop,"Disclaimer - I’m not a cybersecurity guy or never have I studied it. But from what I know: Cybersecurity is mostly bash, VMs, powershell and all kinds of different tools. C# is a typical backend language and is used very differently.My advice is that you take a closer look at what cybersecurity is, because it doesn’t seem like you know what you’re getting yourself into.",CyberWeirdo420,2025-07-30 12:44:17,4,learnprogramming,t3_1md5d90,False,
n5yzet8,"Depends. Big field.If you want to find vulnerabilities in web pages you'll need an understanding of JS, some back end technologies (PHP should probably be one), HTTP, and general web dev, then you can start looking into the types of vulnerabilities that exist and how to look for them.If you want to find exploits in compiled native software you'll need to understand C and x86(\_64) asm, and ARM wouldn't hurt either.C# itself won't help you much with cybersec, but using it as a vehicle to learn how to program, and how to make secure server applications, will.You'll want to be very familiar with the command line environment, shell (usually bash on linux) for scripting and tools etc.Scripting for proof of concept is often done in Python, and there are frameworks and gadget libs etc, so very beneficial.Invest in a good ethical hacking book.",HashDefTrueFalse,2025-07-30 12:59:05,3,learnprogramming,t3_1md5d90,False,
n61cpt2,You can't go wrong with learning C.,UntoldUnfolding,2025-07-30 19:47:58,1,learnprogramming,t3_1md5d90,False,
n666tab,"security is huge, what are you interested in?network security?web application security? check OWASPbinary exploitation? check this and learn some C and assembly [https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/](https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/)some python helps too for example there is pwntools that is used on ctf competitions and helps to write exploits",randomjapaneselearn,2025-07-31 14:31:48,1,learnprogramming,t3_1md5d90,False,
n5z3t74,"i really know nothing about cyber, I came from an Android development background, so not much experience haha",saram-,2025-07-30 13:23:21,2,learnprogramming,t1_n5ywsop,True,
n5z3mhk,thx a lotit realy give a picture to start with,saram-,2025-07-30 13:22:21,1,learnprogramming,t1_n5yzet8,True,
n5y0o9y,"Always go for a formal education if you can afford it and currently taking a break from your job.Don't take a break to just study some online courses. Or keep working your day job and study in your free time and make projects as a hobby (learn how to make a game as you said).Finally, pick one field and become good at it. Either web dev (and even inside web dev, pick one subfield and get good at it), or game dev (which I strongly do not recommend, but you can keep doing it as a hobby).",MihaelK,2025-07-30 08:30:43,2,learnprogramming,t3_1md101r,False,
n5y97ue,"If you have the option, of cause the educatuon helps open job options.Don't focus on game development, learn to do programming, so you can do ""real world"" applications, because then you can also program game. It's just programming at that point and you don't lock yourself in godot or some engine :smiling_face_with_smiling_eyes:",TomatoEqual,2025-07-30 09:53:18,2,learnprogramming,t3_1md101r,False,
n5y9hxy,"Mate, I hate to be this guy but learning how to code is going to be irrelevant in 3 - 5 years in my opinion. I would focus way more on AI skills or how to use tools to build applications, software architecture (e.g., how something should be built), and application workflows than actually coding. Get Claude Pro Opus and plug it into Cursor and see what you can do. Setting rules in Cursor is crucial but once you get it going, you can do what used to be a week - 2 weeks worth of work in an hour. You can spec out on Claude, proof it on Grok and then run it on Cursor and build.",beached_whale_nuts,2025-07-30 09:55:53,2,learnprogramming,t3_1md101r,False,
n64f4za,"Given your background, I'd focus on building a strong portfolio with real projects (web apps, maybe a small game). A degree can help but isn't always needed, especially for web dev. Apply for junior roles, keep learning, and check platforms like [prepare.sh](https://prepare.sh) for real interview questions—super helpful for company-specific prep. Full disclosure: I contribute to that platform now, but I was using it long before for my own interview prep and skills building, so can personally vouch for how useful it is.",Dependent_Gur1387,2025-07-31 06:54:09,1,learnprogramming,t3_1md101r,False,
n5y1gr9,"Thanks for the great advice man..I really love to do formal education as you say, But it's quite hard to afford in my currently budget have to support myself as i go But it's possible, You point out not recommend game-dev solid answer I also think it's very risky way to all in as well",Frosty_Pin9045,2025-07-30 08:38:32,1,learnprogramming,t1_n5y0o9y,True,
n5yay3d,"Thanks for advice, I also have fun working on web app stuff as well",Frosty_Pin9045,2025-07-30 10:08:56,2,learnprogramming,t1_n5y97ue,True,
n5yailw,"Always great to point out other options man, I not really fix to learn just how to code, actually aim for programming related jobs in future, So I guess I have to learn some fundamental even in future we're going rely on AI more than ever.. I also on agree that AI just gonna get better and better",Frosty_Pin9045,2025-07-30 10:05:05,1,learnprogramming,t1_n5y9hxy,True,
n64keca,"Thanks for genuine advice man.. that so true that real world project are better than just degree, maybe I should get both if possible",Frosty_Pin9045,2025-07-31 07:43:09,1,learnprogramming,t1_n64f4za,True,
n5triip,"I'm just as new as you, and I've found that you only need basic HTML and CSS knowledge to start learning JavaScript. A brush up on ""How the web works"" is also helpful.",rabeeaman,2025-07-29 17:15:52,3,learnprogramming,t3_1mch7vk,False,
n5uyboo,"No don't start something else unless you want to remove yourself from Web dev :smiling_face_with_smiling_eyes: Htlm+css->javascript->nodejs is a good route to get more advanced and then it's alot more easy to transition into something more advanced.You can't get around Js if you do Web dev and that's where you start getting you page to do something else than just be a static page.Js also gives you the basic syntax understanding, if you later want to dive into other langs.",TomatoEqual,2025-07-29 20:34:40,2,learnprogramming,t3_1mch7vk,False,
n5v1z3y,"My thinking was that a programming language (say Python or C#) might be easier to learn the fundamentals/concepts, before JS ?Was just wanting to see what people thought so cheers for the input",GreenLion777,2025-07-29 20:51:36,0,learnprogramming,t1_n5uyboo,True,
n5v6l77,"Python is actually really bad for the fundementals :smiling_face_with_smiling_eyes: Yes it's really easy to get started on and you get the basics, but syntax wise it does not really look like other C based langs, which makes it difficult to transition into something else. C# or Java is really good for getting started if you don't care about web. Js have the advantage that you need notepad and a browser and still offer the basics you need to code and the syntax looks like 90% of erything else. So it more comes down to what would you like to do. C# (i don't have much exprience with it) have it all, but it's big and heavy and it escalates quickly if you want gui. Java is the same, but forget gui, it's mainly shit.Js have the coding stuff you need and you can slab some HTML on top of it with relative ease, but no real command line options, which is nice for just playing with data. :smiling_face_with_smiling_eyes:",TomatoEqual,2025-07-29 21:13:20,2,learnprogramming,t1_n5v1z3y,False,
n5vtx82,"Well that's not wot I expected. Knew Python was one of the easier languages to learn or start with, kind of assumed it was good for learning the core fundamentals of programming too. Interesting.So as well just going with JS, thanks for the insight :thumbs_up:",GreenLion777,2025-07-29 23:14:07,0,learnprogramming,t1_n5v6l77,True,
n5qnaik,Youre a Jr…asking for help is pretty normal. You just need to make sure youve at the very least googled the issue or understand the issue. You take that information and ask for help because sometimes the online solution might not be the best in the project youre doing.,d9vil,2025-07-29 04:44:37,7,learnprogramming,t3_1mc1a0f,False,
n5skfxv,"Ur gonna feel this way for a while, just accept it and keep learning",Neomalytrix,2025-07-29 13:52:35,3,learnprogramming,t3_1mc1a0f,False,
n5r1gtx,"I can understand your experience. Just know at the end of the day, no matter how it’s achieved, you’re getting work done and making progress. My main tips-don’t let chat gpt drive the bus. You drive the bus. What I mean is make sure you’re actively thinking abt the code you want, and not just blindly copy and pasting. This is what juniors have always done even with stack overflow- know when to ask questions. Are you completely lost in what the requirements are or do you have some idea and are somewhat oriented. Balance those two and you won’t bother anyone",WannaBeDev01,2025-07-29 06:47:07,2,learnprogramming,t3_1mc1a0f,False,
n5rdpwt,"Totally get where you’re coming from—most of us feel lost at some point, especially when jumping in without a CS degree. Focusing on core debugging, common design patterns, and real-world problem walkthroughs can really help.",irinabrassi4,2025-07-29 08:44:16,2,learnprogramming,t3_1mc1a0f,False,
n5rls2u,What exactly is your role? I know you said you got into your position by vibe coding something but is that what you are still working on? Are you focused on the entire project scope or do you have more specialized assignments? I would think that trying to build the entire project alone as a jr dev would be a pretty tall task for most people so maybe it’s best to focus on one area/language and get proficient in those before moving on to the next. You can use ai to help develop a lesson plan or learning path based on your project.,Dingbats45,2025-07-29 10:01:26,2,learnprogramming,t3_1mc1a0f,False,
n5qjzlr,"The simple answer is that you need to learn to program, and when doing so never use AI to produce code that has the answer written. You can still ask AI questions about code, similar to how you may ask Reddit or Stack overflow, but don't let it do the code for you if possible.I know that is an extremely broad answer and not the specific one you want, but it's the answer you will end up following no matter what you do if you want to keep being a programmer.Seeing that you have 2 months experience and seemed to have relied on ""Vibe Coding"", I would just assume you know little to nothing about programming. This isn't to insult you, but it's probably a fairly accurate description of where you are.You've taken the first steps to learning, which is great! However, like anything else in life, it will take you time to learn how to actually program. I don't know what you are working on specifically so I'm not sure how good of advice I can give, but the two sources I could recommend are:Y. Daniel Liang's Introduction to Java Programming and Data Structures: This is basically the book my school taught from for a lot of it's courses, and I think it does a pretty good job. Others would have to give their thoughts on it however. Also, you would need to buy it.The Odin Project; TOP teaches front end development first, think website pages, and transitions to more back end stuff later on. I have only completed their first course so I don't know what comes after, but it does a good job of teaching the concepts. This one is free and at your own pace, so it can be flexible around your schedule.(Also there is a course called CS50 from some school that is said to be good for learning introductory programming which is free. I haven't taken it, but lots of people recommend it.)The last piece of advice I can give is that you speak honestly with whoever your boss is and try to get a programming mentor at the company. They will be able to teach you hands on, and will probably be the closest thing to an actual teacher you can get.Remember, avoid using any AI to code for you or directly show the solution to problems you are having, but you can still use it to ask about concepts and ideas. If you get exceptionally stuck, you can ask it for a solution (people ask for solutions on the internet in other places like Stack overflow, so it isn't absolutely wrong to do so) but try to make sure you've done just about everything you can to solve it by yourself first.",Blade21Shade,2025-07-29 04:19:33,3,learnprogramming,t3_1mc1a0f,False,
n5tfte1,"Sorry but 2 months of experience and calling yourself Junior is not right, you are not a Junior",Nok1a_,2025-07-29 16:22:08,-1,learnprogramming,t3_1mc1a0f,False,
n5ru9fm,"It’s a full stack role at a decently sized company. I’m working on the actual product. I feel it’s mostly backend/SQL with some frontend, but the bugs that are tough and unsolvable are mainly the backend/SQL. Kinda answer my question a bit just typing this. Maybe that’s where I gain the most.",No_Complex_2603,2025-07-29 11:12:27,2,learnprogramming,t1_n5rls2u,True,
n5ujpxs,"I’m not calling myself a junior dev, the role is a jr dev role. Sorry for the confusion. I would assume the expectation of my skills is to be that of a junior dev, which I’m trying to get too.",No_Complex_2603,2025-07-29 19:25:31,2,learnprogramming,t1_n5tfte1,True,
n5osh31,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-07-28 22:04:58,1,learnprogramming,t3_1mbtvx1,False,moderator
n5otjck,"You need to be really solid on the fundamentals so you can build on them without hesitation or questioning yourself. Otherwise the next level is going to be very difficult. It's the same as math, we learn basic operations to the point where they are second nature and almost mindless and then we expand on the concepts one level at a time. You don't want to be shaky on the basics when trying to move forward. Control structures, basic data structures, syntax should be memorizing multiplication tables. You don't have to think about them anymore and can move on",no_regerts_bob,2025-07-28 22:10:35,3,learnprogramming,t3_1mbtvx1,False,
n5ovgjz,"I've always found a mix of top-down and bottom-up understanding very helpful.When you write a recursive function, for example, it's a very high-level description of what you want to happen. Mathematically, it's proof by induction: you're really writing a set of rules which in combination will force a result into existence.But it's also executed in a very low-level, very mechanical way by whatever language you are using. Add some prints and watch EXACTLY what happens as your function executes.The trick is to see both these views at the same time. Programming is all about writing a specification which when executed will compute the result you want.Theoretically, these two views are denotational and operational semantics, if you want read more.",catbrane,2025-07-28 22:20:46,1,learnprogramming,t3_1mbtvx1,False,
n5owk8z,"Recursion isn't a complex theory, and it's literally convertible to (and from) iteration. If you can understand doing something repeatedly, you can understand recursion.I don't mean to discourage you if it hasn't clicked yet, but to encourage you that once it does click, you'll have trouble understanding what the issue was.Breadth-first search (and depth-first search) fall out naturally when you look at graphs ([these ones](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics))) and consider how to start from one node and visit all the others. Just ignore all the maths on that page unless you really want to get into discrete maths - the pictures are enough to get an idea.Both of these turn out to relate to the difference between stacks and queues (LIFO and FIFO lists): breadth-first search works like iteration with a queue, and depth-first search works like recursion, with a stack.That's all fairly woolly, but the point is that these things are all related, understanding one will make the others easier, and learning the relationships will help to cement that understanding.",Kriemhilt,2025-07-28 22:26:40,1,learnprogramming,t3_1mbtvx1,False,
n5qtgho,N-back exersions and the Satori game.,Alaska-Kid,2025-07-29 05:34:57,0,learnprogramming,t3_1mbtvx1,False,
n5wg6m5,"I graduated back in 2013 with degree in math (Algerbraic geometry) and had to start Software Engineering career because of financial issues.And what’s surprised me was that the interview at my first Junior (not an internship) PHP Dev position with literally 0 (zero) experience was just like “Hmmm, you look like you’re a good guy, you’re hired”.IDK how we ended up with all that ridiculous bs with multiple LC hard round and design twitter from scratch in 1 hour just to get a shitty internship.",Glum_Worldliness4904,2025-07-30 01:19:31,645,cscareerquestions,t3_1mcop22,False,
n5vfpox,Posts like these let me breathe a little easier. I feel like we all get tunnel vision sometimes. It’s good to know that there are other paths available.,Al_Pallll,2025-07-29 21:58:49,1376,cscareerquestions,t3_1mcop22,False,
n5wqbto,"I’m in my early 50s, and I’ve been in the software industry since 1995. I assure you it has never been as bad as it is right now. If I had literally any other marketable skills I would ditch it in a heartbeat, but it’s kind of late to switch careers now. I’m still clinging to the most senior individual contributor role because that’s what I love but I don’t know how much longer it can last.I got into this field because I was a nerd and I liked computers at a time when liking computers was a real loser trait. Honest to god, I miss that.",nodesearch,2025-07-30 02:18:46,157,cscareerquestions,t3_1mcop22,False,
n5vg15t,I quit selling Jet Skis and Boats for 100% commission for CS and I’m 500% happier,Bonzie_57,2025-07-29 22:00:28,813,cscareerquestions,t3_1mcop22,False,
n5wjgpi,"Thanks for sharing this post. Tech as a whole has become toxic. Knowledge workers have become indentured servants and the competitive nature of the space has pushed people to form dysfunctional relationships with those they’d otherwise be good friends with. People with advanced degrees and certs performing for interviews, taking interview tests like they’re back in high school. It’s unfortunate, but the market has figured out it can get away with it. I wish you the best. There is life after tech. Besides, coding for yourself is far more rewarding.",Tekhed18,2025-07-30 01:38:53,46,cscareerquestions,t3_1mcop22,False,
n5viskj,There is no way in hell I would leave the salary and benefits of this career to be on commission selling boats and jet-ski's lol.,olduvai_man,2025-07-29 22:14:46,432,cscareerquestions,t3_1mcop22,False,
n5w9s1n,"This is the plot twist most bootcamp blogs don’t talk about - sometimes the grind isn’t worth it, and peace of mind pays better than any tech salary. Respect for choosing joy over prestige.",alpinebuzz,2025-07-30 00:42:52,22,cscareerquestions,t3_1mcop22,False,
n5xfzlr,"The whole industry has been feeding on its own grift for a while now.Ever tried explaining SCRUM to someone who doesn't work in tech? They'll look at you like you take the short bus to the office.The average software engineer now applies to over 400 job postings for every interview. And many of those interviews are what, 6 rounds? No other industry comes close to that. And it's not an imbalance of supply and demand. It's a hiring practices problem.Don't even get me start on leetcode. Yes, I know it's supposed to weed out the fakers so the company doesn't end up with a bunch of devs who can't code their way out of a paper bag. And yet those same companies still end up developing massive piles of overcomplicated crapware. Almost like the devs aren't the bottleneck. Also, senior devs can spot the fakers a mile away.And now with the vibe coding. I'm seriously considering starting a new service that just fixes the messes people make with their vibe coded apps. I bet I'd make bank by advertising it with a bunch of LinkedIn posts saying how the service will ""take their vibe code to the next level"". Cannot wait for that bubble to burst.Thing is, it wasn't like this even 10 years ago. These are all problems the tech industry has created for itself.Now for the fun part. To people outside the industry, your skills are like magic. And it's not even the complicated CS stuff.Do you have any idea how many small businesses out there are paying marketing agencies to do SEO for them, yet they don't even have access to their own traffic data? And the agencies make up excuses because really they're just Wordpress shops that can't get their tracking pixels hooked up to Salesforce correctly so the data is useless and they can't say that part out loud.The reason so many people are talking about AI (aside from the grifters and enterprise salespeople) is because they want to be able to do the things you can do. They want their tech to work the way they think it should, yet every time they talk to a dev shop about it they end up talking about nonsense like user stories and sprint timelines.It took me way too many years to figure this out. The kicker was when I was working as consultant and somehow ended up on a small side project that was basically setting up a SquareSpace site for a local business. Our sales guy managed to bill it out at $150/hour. For a SquareSpace site. My techie brain thought this was a drastic overcharge because I thought the whole point of SquareSpace was that you didn't have to hire someone to do it for you. But for that local business that sold old muscle car parts, SquareSpace was over their head and it was worth $150/hour to have me do it for them.Eventually I got fed up building the umpteenth enterprise iOS app so I quit working with companies that do anything enterprise-y at all. It's too soul sucking.And you know what? Turns out it's not so hard to sell my skills to non-tech companies. What I think is easy is what they think is magic. That's a win-win.They don't buy unit tests (not that I want to write them), but they're game for anything that helps their sales funnel.My advice for anyone burning out in the tech industry is this. You probably see your skills and dedication to quality as an investment for a company. They probably see you as a cost center. So next time you get stressed by the nonsense, start thinking about how to apply what you know in ways that would help non-tech companies. Think outside the box. Then do the hard part and reach out to a few of them. You might be surprised at what you learn and end up with a whole new perspective on how all this really works.If nothing else, the experience will certainly help you write better Upwork proposals.",Comfortable-Tart7734,2025-07-30 05:18:29,27,cscareerquestions,t3_1mcop22,False,
n5vmhi3,Man I remember my early 20s. Lol,scungilibastid,2025-07-29 22:34:15,81,cscareerquestions,t3_1mcop22,False,
n5vgslo,I feel like I might be that path too. I just finished my Masters in CS. Idk if being a developer forever is for me. I like interacting with people and being a leader,GeekTrollMemeCentral,2025-07-29 22:04:25,32,cscareerquestions,t3_1mcop22,False,
n5bwpgh,"Its just lip service to placate certain folks. If he wants to do something, he could make it a lot more difficult to get an H1B visa, for instance. This is just shifting the burden to act from himself to companies so he can blame them when nothing gets done.",SkullLeader,2025-07-26 21:24:20,1460,cscareerquestions,t3_1ma4i05,False,
n5bw46e,What did he do besides rhetoric in terms of US jobs? The EAs he signed have nothing to do with offshoring,Doombuggie41,2025-07-26 21:21:02,320,cscareerquestions,t3_1ma4i05,False,
n5dt411,"IMHO. If a company has layoffs in tech, that should disqualify them from any H1B sponsorships for no less than 3 years.",LineageBJJ_Athlete,2025-07-27 04:50:37,118,cscareerquestions,t3_1ma4i05,False,
n5bxkpl,I think Trump is just pandering to voters.,metalreflectslime,2025-07-26 21:29:12,148,cscareerquestions,t3_1ma4i05,False,
n5bwwj1,"I’m sure Satya Nadella  and Sundar Pichai will get right on that. In all seriousness, don’t they just move the jobs to India rather than hire  Indians in America",Independent-Mango813,2025-07-26 21:25:26,238,cscareerquestions,t3_1ma4i05,False,
n5cl7dn,Classic case of multiple things being true at once. Did Trump's original tax bill cause a huge amount of layoffs? Yes Is the H-1B system being abused and mostly a scam? Yes Is offshoring a real problem that's actually affecting American it and cs majors? Yes Can we trust Trump and this admin to actually not be in the pocket of big business? No Is he directionally correct on this? Yes Will changes like this offset the reduction of labor that comes from all of the disastrous effects of his other isolationist economic politicies? Too early to say.,LustyLamprey,2025-07-26 23:48:59,27,cscareerquestions,t3_1ma4i05,False,
n5bwphp,Reduce the H-1B allotments for tech by at least 50% along with a hefty tax penalty for it. Cap H4-EADs at a feasible number or charge a similar tax penalty. Charge companies for offshoring services.Tech shortages can be fixed by Congress in one piece of legislation without even affecting budget. The shift would hit practically overnight. Imagine browsing LinkedIn and not seeing senior dev jobs offering 90k/year that you know you aren’t supposed to apply to. It’s not too late.Trump’s statement however won’t do anything.,ReasonSure5251,2025-07-26 21:24:21,103,cscareerquestions,t3_1ma4i05,False,
n5cxl0i,Distraction from the Epstein files.,lift-and-yeet,2025-07-27 01:08:20,36,cscareerquestions,t3_1ma4i05,False,
n5bwy3l,yeah won't work without being enforced with an EO or 100000% taxes for hiring indians.,amdcoc,2025-07-26 21:25:41,35,cscareerquestions,t3_1ma4i05,False,
n5ccfh3,"Trump can ""urge"" whatever he wants. The distribution of H1bs and similar work visas is defined by statute. If he wants the H-1b program to be changed in some way, he has to sponsor legislation to change it.Trump also can't impede the ability for an arm of the executive branch to perform their statutory duties. So, he couldn't, for example, fire everyone working in USCIS. This is why Trump was forced to rollback a bunch of DOGE firings.He has had ~7 months in power now, and so have the republicans in Congress. They have not passed legislation attempting to reform H1bs despite having all the votes for it.I think this should tell you what their intentions are regarding H1bs.",Unlikely-Whereas4478,2025-07-26 22:56:16,8,cscareerquestions,t3_1ma4i05,False,
n60j11m,"“ it’s hard to believe this is the same company from 2016”It’s not.  People leave, new people come in, and the drive to keep stockholders happy means companies will do whatever it takes to maximize profit.",Horror_Response_1991,2025-07-30 17:29:25,1057,cscareerquestions,t3_1mdcl9n,False,
n60lrwa,"The era of “let’s nerd out and build cool stuff together and have fun doing it” is over. It’s been over for 10 years now. Everything today is built solely to appease Wall Street. Seriously, read that again if you need to. There are no ethics. There are no morals. There is only money. Companies don’t care about long term consequences and their employee’s mental health is in such decline that they can’t muster up enough fucks to give either knowing that there are swarms of people who are begging for work ready to replace them.",MilkChugg,2025-07-30 17:41:38,692,cscareerquestions,t3_1mdcl9n,False,
n60jbly,"For years, tech has been all about moving fast without the consequences. Zuckerberg even wrote, “move fast and break things.” Companies like Uber and Airbnb were built on moving fast before regulation could catch up. Ideally, the government would regulate things quickly, but our leaders are a bunch of ancient politicians who don’t even understand what is happening.Ultimately, this is all about chasing profit and power. If you get in the way, they will find someone else to do the same work. Worse, if they can’t find that person here, they will outsource the work or bring in a foreign worker to replace you.",bjdj94,2025-07-30 17:30:43,237,cscareerquestions,t3_1mdcl9n,False,
n60isv9,"There are a lot of cs majors and engineers who think ethics and liberal arts classes are a waste of time. So what we get is an industry full of severely one-dimensional people who think they are smarter the rest. But in reality, they dont have the social skills or understanding to understand why what they're doing is bad.Edit: spelling/grammar",Extra-Place-8386,2025-07-30 17:28:25,636,cscareerquestions,t3_1mdcl9n,False,
n60i7vt,"It's because of the money. Let's be real. Most of this sub would take an AI engineer position at Google in a heartbeat, if offered.",Illustrious-Pound266,2025-07-30 17:25:49,237,cscareerquestions,t3_1mdcl9n,False,
n60mqp7,"Normally, history follows.New tech -> brings record change to society -> record profits/power grab -> something terrible occurs over decent time span -> regulation/guardrails slowly implemented.",MangoDouble3259,2025-07-30 17:45:56,18,cscareerquestions,t3_1mdcl9n,False,
n60ni04,"Honestly I'm just coasting at this point. Idk what to do. I wonder if it's even worth my time to upskill. I'm a recent graduate and lucky enough to have landed internships and full-time positions but I have no idea what the future holds, not even a best guess. I'm just burying myself in my job but already know one day layoffs could and probably will happen. I just don't know what is worth doing in my spare time in order to ensure I'm able to make money in the future if jobs do actually get cut by a huge % (already have a good amount).",baja_freez,2025-07-30 17:49:20,24,cscareerquestions,t3_1mdcl9n,False,
n60ppzj,Now imagine how the engineers from The Manhattan project felt after they saw the Hiroshima aftermath.,JRLDH,2025-07-30 17:59:12,33,cscareerquestions,t3_1mdcl9n,False,
n60jq7j,There's no time to discuss ethics when deadlines are approaching,SoggyGrayDuck,2025-07-30 17:32:32,60,cscareerquestions,t3_1mdcl9n,False,
n5sglx4,The question is going to be like one of those open book finals from college,res0jyyt1,2025-07-29 13:32:24,729,cscareerquestions,t3_1mcb3hg,False,
n5se2w6,"If true, I don't necessarily see this as a bad thing. You can identify if a candidate can finish the task as they would on the job. You can identify if they're ignorant to security practices and feed the LLM sensitive information. And you can identify if they are overly dependent on even the simpler parts of the coding exercises.",-Dargs,2025-07-29 13:18:33,852,cscareerquestions,t3_1mcb3hg,False,
n5t6a2m,From 2 Leetcode mediums in under 45 mins to “just use AI and we will observe.”Tech interviewing is horribly broken.,src_main_java_wtf,2025-07-29 15:37:52,74,cscareerquestions,t3_1mcb3hg,False,
n5sewdb,From grinding leetcode to using AI? Is the interview finally going to change from rote memorization? Doubtful but this is the most interesting change up in interview style from a FAANG that I’ve seen.,SlyCooper007,2025-07-29 13:23:05,382,cscareerquestions,t3_1mcb3hg,False,
n5shipe,"I guess this is an unpopular opinion here but I think coding interviews are supposed to be like aptitude tests. Obviously they’re nothing like actual work, and can be memorized, but it’s a way of testing whether candidates have problem-solving abilities, intuition, and simple, clean code practices. Yes, it’s imperfect, but letting AI autocomplete it will only make it even more imperfect.",ALostMarauder,2025-07-29 13:37:23,123,cscareerquestions,t3_1mcb3hg,False,
n5ser96,"Good. I know anti-AI sentiment is high here but these are tools that we should be using to help us. It's insane that we still interview people as if they're in an isolated bubble 24/7 with no tooling available. This encourages people to memorize problems just to pass interviews, and not show us how they actually work day to day.",maria_la_guerta,2025-07-29 13:22:19,210,cscareerquestions,t3_1mcb3hg,False,
n5sp3gg,Why do I have a feeling technical interviews will become harder?,MoneySounds,2025-07-29 14:15:56,14,cscareerquestions,t3_1mcb3hg,False,
n5syhrm,Using interviewees for training and refining their own model... Well played.,codeblockzz,2025-07-29 15:01:08,15,cscareerquestions,t3_1mcb3hg,False,
n5sn986,Some of you guys are in for a rude awakening. You’re gonna stop complaining about memorizing leetcode solutions and start complaining about memorizing AI prompt patterns.,L_sigh_kangeroo,2025-07-29 14:06:51,50,cscareerquestions,t3_1mcb3hg,False,
n5sgjok,"That articles behind a paywall so I'm just going off your title...How *much* are they going to let candidates use AI during coding tests?Are they going to let them utilize it as a tool, no different than Stack Overflow? To quickly lookup syntax, or simple things that nobody memorizes?Or are they going to let them prompt engineer the entire answer to the problem?Because if it's the former, that already happens today.... except it's not AI. It's asking your interviewer. In my experience, interviewers don't care if you have some dumb syntax memorized, they don't care if you stumble on how to do X in Y language. Those things don't matter on the job, and they don't matter in the interview. It's the problem solving they care about. Usually interviewers make it clear you can ask them syntax questions like that, or other nudges AI-as-a-tool would normally help you with. I've also been in interviews where they're totally fine with you googling, you just have to let them know you're doing that before you do it.If it's the latter though, good fucking luck. I don't know about you, but I always dreaded open-book tests/exams in college. Because they were always made difficult enough to *warrant* them being open book. They were *harder* then closed book exams. If you're vibe coding and prompt engineering your way through an interview, you can expect that interview to be written with the expectation that you're vibing through it at lightning speed, and it'd be unachievable if you didn't.",SouredRamen,2025-07-29 13:32:03,29,cscareerquestions,t3_1mcb3hg,False,
n53cxl1,"All they need is an attractive influencer, then they will be flooded.",InlineSkateAdventure,2025-07-25 14:32:53,726,cscareerquestions,t3_1m90ne3,False,
n53f6lj,"I’d discourage you from a number of these more specific engineering majors. They’re tied to one industry and those industries often prefer people with a more general engineering degree like MechE, EE, and ChemE anyways. If you think tech layoffs are bad you don’t want to go see the bloodbath Petroleum goes through every 5 years.At some schools they’re also the backup major when you fail out of a more esteemed major. Which gives the major a worse reputation.",PoorCorrelation,2025-07-25 14:43:33,665,cscareerquestions,t3_1m90ne3,False,
n53ikjj,"\>Nuclear, naval, mining, petroleum, agricultural, metallurgical all have less than 500\~ graduates per year, each.Super niche fields with not a lot of job openings",PeterThielWorshipper,2025-07-25 14:59:19,125,cscareerquestions,t3_1m90ne3,False,
n53ddt3,Idk about others but people don't like going into healthcare because it's not easy at all. Especially for doctors. Becoming a doctor and then practicing as a doctor both are brutal.,WisestAirBender,2025-07-25 14:35:04,243,cscareerquestions,t3_1m90ne3,False,
n53fu5q,You’re out of the loop. The mechanical engineers are having a hard time finding a job. The medical field is dealing with government funding reductions. The economy as a whole is in the toilet.,SwaeTech,2025-07-25 14:46:34,212,cscareerquestions,t3_1m90ne3,False,
n53g0wa,It's worth pointing out that you can practice the skills from a CS degree to their fullest extent with a 300 dollar laptop but all of the ones you mentioned require large facilities.,Moloch_17,2025-07-25 14:47:26,82,cscareerquestions,t3_1m90ne3,False,
n53tlg5,"> petroleum, agricultural, metallurgical all have less than 500~ graduates per year, each.> but you'll have a great job and consistent demand.Petroleum Engineering is **THE quintessential example** of a boom or bust engineering discipline that has had WILD swings in enrollment.https://jpt.spe.org/us-petroleum-engineering-graduation-rates-keep-falling-but-oil-execs-are-not-complaining-yetI throw up petroleum engineering for the /r/cscareerquestions machine all the time as the cautionary tale for their discipline, and it falls on deaf ears every single time. Including here. **This sub has learned nothing from history.**When oil prices are high relative to extraction costs for extended periods of time, petroleum engineering ranks SWELL. When prices sit at commodity levels above extraction costs, petroleum engineering ranks dwindle fast within 2 years. The median petroleum engineering graduate becomes UNEMPLOYED.In the boom times in the 21st century, petroleum engineering grads were walking out of school to 20 offers in the 195k-225k range with a large bonus potential. They'd go bust their ass many many hours a week out in some rustic environment somewhere. There was all kinds of ""what should I specialize in"" conversations like should I do wireline, or logging, or MWD, or be reservoir side, or whatever.And then POOF. Prices fall... extraction costs rise, and that project you were paying the PE 225k to babysit no longer makes money and STOPS. STOPS.Petroleum engineering had 2600 +/- BS grads (and don't forget several hundred MS students too) in 2017. Less than 600 now, and what looks to be about 600 in 2024. 7 years to fall. Using the broad numbers you posted, this is like the 100,000 CS grads in 2025 becoming 23,000 by 2032.**Does this REALLY make petroleum engineering look attractive to you?** A major that's seen 80% drop in enrollment in 7 years because the industry cannot support its graduates?> With the massive datacenter boom, this is pretty hot right now.Datacenters employ so few people once built; you can build 100 more of them, and they're still a minor player. Design of datacenters is mostly electrical, mechanical, and structural engineering, there might be ONE or TWO IE on a major datacenter design project. Hell there's going to be more architects than IE's. If you want to WORK in a datacenter, good luck. If you want to DESIGN datacenters, electrical, mechanical, or structural. I literally work for a company that does MANY data centers for companies we've all heard of, and I am a chemical engineer. I LITERALLY WORK HERE, and for $1,000,000 I couldn't get on a data center project. Mechanical, electrical, structural, and architects, or GTFO.> These engineering fields: Nuclear, naval...GAH... horrible. Do not study nuclear engineering. You do NOT do what you think you do. The nuclear side of the nuclear world is a solved issue and even a large new nuke plant requires very few nuclear engineers. I do firmly feel that there will be a nuclear renaissance in this country as people figure out that nuclear power is safe and can help with a lot of power issues in this countries, I am very excited for this, and actually personally would love to get in on the action given I live close to one of the major SMR players main office.HOWEVER, in a new nuke plant... the majority of engineering design hours will be spent by mechanical engineers, structural engineers (which come out of civil), electrical engineers. If you want to work in that industry, THOSE are target paths.",GlorifiedPlumber,2025-07-25 15:50:12,16,cscareerquestions,t3_1m90ne3,False,
n53hwv0,You might want to check how many jobs there are and their quality of life on a nuclear submarine before pursuing this.,Ok_Distance5305,2025-07-25 14:56:16,15,cscareerquestions,t3_1m90ne3,False,
n53dx4p,are you unemployed/new grad? this shithole is full of people trying to sway others from the field,Wall_Hammer,2025-07-25 14:37:36,106,cscareerquestions,t3_1m90ne3,False,
n53ih10,And half the people who studied in those engineering disciplines end up becoming web developers because that’s where the money is. So might as well just study CS to begin with.,kaleNhearty,2025-07-25 14:58:52,33,cscareerquestions,t3_1m90ne3,False,
n66k0zn,"Companies filter out applicants with ATS. My CV got filtered out from roles I was qualified for based on some unknown criteria within seconds after applying.You can’t blame candidates for using similar AI tools for mass applications. I mean getting a rejection email within seconds after spending 30 min on a customised CV and cover letter, without any human ever looking at it is kind of boring too and very inefficient usage of the candidate’s time.Companies started the game, they should not complain about the AI escalation.",LogicRaven_,2025-07-31 15:33:45,308,cscareerquestions,t3_1me3qnu,False,
n66cxw0,"Were you ever involved in the hiring process pre-2021?Cause I was, and what you're describing happened back then too. We'd have to sift through hundreds, or thousands, of resumes the overwhelming majority of which were grossly unqualified.This isn't new.The one thing that is new that's making things extra bad is the introduction of AI-applying. Now a lot of the desperate people that're blast-applying don't even have to spend their own precious time doing so. They click a button, and an AI applies to thousands of jobs for them.",SouredRamen,2025-07-31 15:00:37,498,cscareerquestions,t3_1me3qnu,False,
n66pi9k,"The ""Apply to everything, even if you're not qualified"" thing only began because job requirements had an average of 3-7 bullets of different technologies that you needed 5-10 years of experience for. Entry level jobs required 3+ years of experience in various technologies in multiple layers of a stack.Of course, those requirements were impossible to meet at scale so companies regularly hired people who did not actually meet them. This led to job-seekers understanding that ""requirements"" were a wish list and only generally pointed out what you should be familiar with.",NullReference000,2025-07-31 15:59:05,46,cscareerquestions,t3_1me3qnu,False,
n66fykw,Lying on your resume to pass the screening is what hurt the market.Can't even blame them since companies are also lying about what they need,Due_Essay447,2025-07-31 15:14:48,163,cscareerquestions,t3_1me3qnu,False,
n66kzra,"Look I completely get it, that if you're NOT qualified then don't apply. As another poster said if you have from 0-50% don't apply, I get that. I get that there are a lot of unqualified people applying, and even non-U.S. Citizens applying for jobs they shouldn't, but that is only PART of a much LARGER problem.I'm a very senior, experienced SWE with 35+ YoE. I am looking for new work, and I clearly have a realistic resume with the development tools I've used and where I've used them. I very carefully watch for Java, Spring Boot, Docker, Kubernetes, I have ONLY AWS (not Azure or GCP), I have HTML, CSS, and Javascript, and I am learning React now.When I look at a posting, and they want full-stack, I still apply. I know for a fact I have applied for jobs where I can hit 10 out of 10, or 90 out of of 100. Am I STILL unqualified? Of course, I'll never find out why I was rejected, but I know most of the jobs I've applied to I can hit the ground running, and knock it out of the park. So, I call BULLSHIT on this over-simplification of 'applying for everything is ruining the job market.' If you've ever seen ANY of these job boards including /recruitinghell, then you know there is a lot of shit going on from hiring managers and recruiters. They get NAMED and SHAMED all the time. I'm really getting tired of the rejections. With my many years of experience, it has never taken me longer than a few weeks to find new work, and I've been looking now for 10 months. The last time it was this bad was 2008, but this takes the cake.",Huge_Road_9223,2025-07-31 15:38:16,31,cscareerquestions,t3_1me3qnu,False,
n66d6su,"Hiring managers with no technical understanding did a number on the job market, they really said **SDE I**Requirements: * Masters degree (doctorate preferred) * 7-10 years experience with technology that was released 2 years ago* 5-10 years of work experience* Proficient in Java/JavaScript* Ability to program a non-relational database in SQL* A rockstar who never goes homeSalary range* lol no * $80k-$85k",joshuahtree,2025-07-31 15:01:47,223,cscareerquestions,t3_1me3qnu,False,
n66zg9w,"Yeah at the same time companies categorizing their jobs as “Entry Level” and asking for multiple years of experience is doing as much damage, if not more, than what you’re describing",BunnyTiger23,2025-07-31 16:46:13,19,cscareerquestions,t3_1me3qnu,False,
n66he75,"For at least a decade now, possibly longer, the only way to find a job has been to just fucking carpet bomb the entire job marked with your resume. It isn't great but that's how it is.",GargantuanCake,2025-07-31 15:21:26,33,cscareerquestions,t3_1me3qnu,False,
n66n9po,"I’d respect this complaint if any of the job postings made a lick of goddamn sense with their requirements (COBOL for entry level 60k, really?), or if this wasn’t exactly what companies did to themselves with the “We won’t bother training, just keep poaching) rush when I was in school",D1xieDie,2025-07-31 15:48:49,15,cscareerquestions,t3_1me3qnu,False,
n66gzar,"I think another issue is some people don't read the job description and go based on the title. I've seen jobs where the title says associate or entry-level, but you look at the description and it says 3-5 years. I think the issue is on both sides.",DatEngGirl,2025-07-31 15:19:32,24,cscareerquestions,t3_1me3qnu,False,
n5k4kfh,"2% of their workforce is 12,000 people? Damn they’re almost half as big as DocuSign",ReasonSure5251,2025-07-28 05:11:45,502,cscareerquestions,t3_1mb7cxe,False,
n5km12n,"One reason might be because many of their clients in US and Europe are setting up their own offshore units under own payroll in India, rather than outsourcing to the WITCH contractors. They call them Global capability centres.If they outsource the work to TCS, the company will take a 20-30% cut before paying the worker. Much easier to cut the middleman out and pay the worker directly..",Thick_tongue6867,2025-07-28 07:52:08,143,cscareerquestions,t3_1mb7cxe,False,
n5k8kcu,It doesn't necessarily mean offshoring is decling. This only represents that the offshoring to contractors are declining. It doesn't represent companies opening Indian branches themselves and hiring in India,Existing_Depth_1903,2025-07-28 05:46:52,179,cscareerquestions,t3_1mb7cxe,False,
n5k45e1,My F500 company used to have quite a few TCS contractors in India. They've switched over the past 3 years and actually hired onshore FTE SWE to replace them. Just my subjective experience.,Rokae,2025-07-28 05:08:14,185,cscareerquestions,t3_1mb7cxe,False,
n5k6n6r,"My job is actually ending all contracts. I don't think its because of AI, i think its because they are starting to learn they have just been burning money. We are currently up to version 6 on the same feature, that's how many times it has been pivoted on. several million dollars to show what is basically v1.",loudrogue,2025-07-28 05:29:45,143,cscareerquestions,t3_1mb7cxe,False,
n5kc0sm,2% is not even worth mentioning.Most companies will part ways with more than 2% every year as you want to get rid of your bottom performers.,HelicopterNo9453,2025-07-28 06:18:02,48,cscareerquestions,t3_1mb7cxe,False,
n5k7qtc,"Eh not entirely cause of AI, but my company has been cutting far offshore roles in India/Asia to instead hire locally (for mostly remote) in tech hubs and nearshore in LATAM. The middleman charges, having to hire entire teams as a package, time zone issues, mostly poor quality results, and the non-cap/cap r&d tax expenses are all just one big headache.",one-won-juan,2025-07-28 05:39:30,61,cscareerquestions,t3_1mb7cxe,False,
n5kdgza,that’s IT services,Brave_Speaker_8336,2025-07-28 06:31:22,14,cscareerquestions,t3_1mb7cxe,False,
n5l79ou,"A lot of potential for misinformation and speculation here, so will chime in as someone that has worked in contracting for 8 years.During economic uncertainty, contracting firms really start to struggle. A really successful small firm could die in a month if they were to lose two contracts back-to-back. For the huge companies, any sign of work slowing will often result in teams being let go. They're usually done silently, but in this case it's likely to be more noteworthy because layoffs and offshoring are popular right now. From a business perspective it's good, because it makes you look efficient. After all, if everyone else is doing it, it's fine, right...It's also worth noting that in contracting firms, a LOT of people might be classed as technical/service staff when their job is essentially a PM or AM role, basically tracking work, making sure the client is happy, etc.Finally, this is my own personal perspective on contracting, but the idea that a contracting firm will have any advancements in AI is utterly laughable. It's not even a skill issue, but one where work will need to be billed to a client, and there's no fucking way that TCS is billing someone for the time taken to mess around with AI issues. Contracting firms often believe that they're at the forefront of technology, but my experience of subcontracting for TCS was arguing with a PM because I had written unit tests and they viewed it as ""unnecessary work we will not pay for"". When I pushed back, their response was ""well, it should work first time"". It's an environment of shortcuts, and while they probably love the idea of AI doing dev work, it'll end in tears without any shadow of a doubt.",EnderMB,2025-07-28 11:08:54,14,cscareerquestions,t3_1mb7cxe,False,
n5lxk7v,"I've done work with TCS, and all the other other giant Indian consulting companies. It's all trash. You get what you pay for.",Early-Surround7413,2025-07-28 13:53:43,6,cscareerquestions,t3_1mb7cxe,False,
n60vv73,"you wouldn't work for porn hub, it might have changed by now, but it was mindgeek. But those sites also would be hard to beat with just sheer volume stats that you would get to put on your resume.",loudrogue,2025-07-30 18:27:36,1277,cscareerquestions,t3_1mdebmk,False,
n60w2b7,Usually those companies have a parent company and it wouldn't affect you because you would be working on the technical side of things.You don't have to be exposed to user data.,Fidoz,2025-07-30 18:28:31,864,cscareerquestions,t3_1mdebmk,False,
n60wy1k,"So, you're wondering if I would put on my resume that I worked as a software engineer for one of the most highly trafficked websites in the world? Without hesitation. And prominently.",Moloch_17,2025-07-30 18:32:38,788,cscareerquestions,t3_1mdebmk,False,
n60xdv1,"Back in 2018 or so, when streaming services were really starting to proliferate I remember reading something about how a lot of places were trying to poach talent from Mindgeek. Apparently it was one of the few places doing streaming at a scale to rival the big players (Netflix, YouTube/Google) but didn't have FAANG salaries to match. That might not be the case so much anymore, but it seemed totally plausible.",HaplessOverestimate,2025-07-30 18:34:41,270,cscareerquestions,t3_1mdebmk,False,
n615gbx,"They have some highest adopted features too. You know how YouTube allows you watch the video from the preview? Yeah, that's from PH. They also discovered that you could bypass adblock by serving ads over websockets instead of https, and instead of exploiting it, they submitted the fix to adblock. So yeah, there's a lot of technical accolades you could have working for them. The parent company would be on your resume, not the brand.",davy_jones_locket,2025-07-30 19:13:01,207,cscareerquestions,t3_1mdebmk,False,
n6107w2,"I did, and I would say that it had a positive impact if anything - definitely getting a lot of smiles and funny questions in interviews, but at the end of the day, I was securing a platform with millions of daily users and literal terabytes of data uploads per second, running a world-class bug bounty program and designing systems at a massive scales, which are all valuable skills. Definitely plenty of NSFW moments at the office though.",biblecrumble,2025-07-30 18:47:52,260,cscareerquestions,t3_1mdebmk,False,
n613qfm,"I worked at a NSFW company. Not as well known as those mentioned by you, but one site we ran was mentioned on an American TV show once. Next job was at a consultant agency and my boss was the one who tipped them I was looking for a job and they knew full well where I came from. Next job after that also connected the dots and asked me and was fine with it. All in all if it has affected it then it's been in a positive direction I guess. If it comes up we just have a laugh about it. Might be worth mentioning I'm not American though.",hallothrow,2025-07-30 19:04:46,37,cscareerquestions,t3_1mdebmk,False,
n60xcjc,"I've been on two interview loops over the years for people who previously worked in the adult video industry. I ended up recommending both for hire. Focus on the technical elements of the job on your resume. It might reduce your odds for small companies run by prudes or religious types, but I strongly doubt it would hurt your chances at mid- or large-size companies or tech-focused startups.",TheTarquin,2025-07-30 18:34:30,123,cscareerquestions,t3_1mdebmk,False,
n612w8h,"Nope. In fact when it was on my resume (it’s dropped off because it was a while ago) it seems *that* was the only job they wanted to discuss. “Uh, did you have naked women walking around the office all day?” Seriously, it was a business. That was our content. I worked in IT, not in the studio.Later, I got a job working at a company that dealt with religious content. My friends and I had a good laugh that I worked for the devil and later Jesus. Personally I don’t believe in either, so no conflicts there.PS. An extra note. It was asked repeatedly during the interview process if there would be any issues with me working at the NSFW company with spouse, family, friends, etc. They had employees in the past who either accepted positions and never showed up, or quit shortly after starting because of conflicts with family, their religion, etc. So if you ever think of working for such a company make sure you really want to and are able to take the job and that an angry spouse, family, etc. isn't going to make you quit after the first day.",scottjl,2025-07-30 19:00:38,54,cscareerquestions,t3_1mdebmk,False,
n6140xd,"I would also be curious if sites like Leafly or Dutchie have any negative impact on your career as well, given the legally ambiguous place the cannabis industry is in.",_DCtheTall_,2025-07-30 19:06:14,21,cscareerquestions,t3_1mdebmk,False,
n5q2bv7,"I speak for everyone when I say, we were waiting on you to take on the challenge.Most of us have thought about solving it, but figured it wasnt worth our time/effort. You got this champ",travishummel,2025-07-29 02:22:23,989,cscareerquestions,t3_1mbzk6b,False,
n5q3ccs,"Hey, this is u from the future. I was able to solve it, but I don't have enough time ot tell you the answer now.",Runsey,2025-07-29 02:28:31,257,cscareerquestions,t3_1mbzk6b,False,
n5q5nge,i saw it asked as a Leetcode medium while interviewing for a used car lot help desk job /s,debugprint,2025-07-29 02:42:36,183,cscareerquestions,t3_1mbzk6b,False,
n5q35zk,There is [a million dollar prize](https://en.wikipedia.org/wiki/Millennium_Prize_Problems#P_versus_NP) waiting for you.,frankchn,2025-07-29 02:27:26,102,cscareerquestions,t3_1mbzk6b,False,
n5q4ftk,"Meh, I came up with a proof once while reading this book. Was about to write it down but the margins were kinda small.",pddpro,2025-07-29 02:35:10,98,cscareerquestions,t3_1mbzk6b,False,
n5q49a8,"I think I saw a YouTube video with terence tao, and if I recall correctly, he said it was the type of problem he would avoid because it was likely either unsolvable, or unsolvable with our current tools in math. Meaning that new tools would have to be invented/discovered before we could advance on it. I think even knowing if it's solvable would be a huge advancement. The truth is we don't know.If you are worried about wasting 30+ years of you life, I would strongly advise you avoid it. If you are not worried, then go for it.",std_phantom_data,2025-07-29 02:34:04,47,cscareerquestions,t3_1mbzk6b,False,
n5q92ls,OP has serious r/linkedinlunatics energy,aarrivaliidx,2025-07-29 03:04:12,43,cscareerquestions,t3_1mbzk6b,False,
n5q47eb,Just throw it into ChatGPT bro.,paranoidzone,2025-07-29 02:33:44,76,cscareerquestions,t3_1mbzk6b,False,
n5q66vb,"I solved this on the toilet in elementary school, but I flushed the notes on accident and forgot about it when the bell to end recess rang.",jsdodgers,2025-07-29 02:45:57,28,cscareerquestions,t3_1mbzk6b,False,
n5qbkyl,"Finally, this sub has evolved to its true form: the circlejerk sub for programminghumor",A_Guy_in_Orange,2025-07-29 03:20:42,29,cscareerquestions,t3_1mbzk6b,False,
n58bfjx,100K-1M is a wild range for a senior sde. It can be entry level as well as principal :skull:. Kudos tho!!,cabinet_minister,2025-07-26 07:51:36,376,cscareerquestions,t3_1m9n8ew,False,
n58cx86,"The only part I find hard to believe is not just that you were able to close the application, interview, and offer loop within 12 days, but that three companies extended offers in probably less than 10 days (7 business days). That moved really fast — almost like they had to schedule interviews the very next day and give feedback within a day as wellBut congrats!",heinjarway,2025-07-26 08:06:01,248,cscareerquestions,t3_1m9n8ew,False,
n58cezd,"Nice job. One of the fastest turnarounds I have ever seen.I was laid off at the end of June. Still searching. 6yrs of experience also in the healthcare field.The fact that you got interviews from 10% of just cold applications is astounding. What is your tech stack, and can you share your resume template? How much Leetcode/system design did you do to pass your technicals?Granted, I'm not in SF nor go to a good school like Berkeley. But stories like yours is very uplifting as I continue searching.",exleader75,2025-07-26 08:01:07,47,cscareerquestions,t3_1m9n8ew,False,
n59da64,"Sounds kind of odd to me to not share pay when you've anonymized everything else so much. I'd conclude that although you did get a job, you're getting paid peanuts for the Bay Area.But the thing that you probably don't realize helps you a lot is that BS in CS. As someone who has a BS in ME who transitioned into software in the Bay Area (without a MS), can tell you that most software-only companies won't touch me with a 10-ft-pole.",Suitable_Speaker2165,2025-07-26 13:11:25,27,cscareerquestions,t3_1m9n8ew,False,
n595soc,"Definitely isn't as bad for seniors as entry level. I also think having the Berkeley name probably helped for you. I am also a senior lebel developer with a university degree from a very recognized/highly regarded university and hasn't been too bad of a job search, which I recently concluded. In this saturated market, having a prestigious school name is so helpful.",Illustrious-Pound266,2025-07-26 12:22:30,23,cscareerquestions,t3_1m9n8ew,False,
n58ey5y,What were the interviews like? Still leetcode or a mix? Were you confident of your prep and felt good after the interviews?,kafkaesqe,2025-07-26 08:26:06,7,cscareerquestions,t3_1m9n8ew,False,
n596yq6,Congrats! I think your cal degree plus living in the bay is a big plus. I am similar to you in a lot of ways career-wise and this is helpful information.,oldwhiteoak,2025-07-26 12:30:34,8,cscareerquestions,t3_1m9n8ew,False,
n58vkww,"The key thing you did was apply for 120 jobs right off the bat in a few days. That is the right approach in today's market. You need to generate ""buzz"" and make it seem like you're an in demand commodity with multiple options.And let's not ignore the elephant in the room. Your degree from Berkeley probably gives you a 5x boost.",csanon212,2025-07-26 11:05:09,18,cscareerquestions,t3_1m9n8ew,False,
n59oa5s,"> Job market not that bad for Senior SWEsDesperately snatching the very first offer that comes your way, for $100k in San Francisco, would imply the exact opposite.",xXxdethl0rdxXx,2025-07-26 14:16:37,27,cscareerquestions,t3_1m9n8ew,False,
n58kdw0,Do you think doing CS + BIO was worth it? Currently doing CS and either adding on Applied Math or Applied Physics.,ChemBroDude,2025-07-26 09:20:29,2,cscareerquestions,t3_1m9n8ew,False,
n5400iv,"Agile.Edit: my answer sounds flippant so I’ll add a little context.I predate Agile by quite a number of years. Whatever process we used to use, you can call it Waterfall or something else, GANTT chart based projects… they had a very different progression.You’d have long periods in the beginning of a project where you’d read and write documentation, do planning, research, exploratory code. Then things would ramp up, and you’d start getting the real work done. Towards the end of the project, the deadline would loom, and the real problems would start to appear.You’d enter “crunch mode”, which truly sucked, deeply sucked horribly. This could go on for a month or two. Eventually you’d launch and settle back into the beginning phase of a new project. This was a HUGE relief. Then you’d do it all over again.Sounds bad? Well enter Agile which aimed to solve these problems, supposedly. How? By turning everything into a constant drip of 2 week sprints. Every sprint is a deadline. It’s all a micro version of the old way, you never get into the massive crunch time (maybe), instead you trade it for a constant, unrelenting stress. It never lets up, not for a second - and you spend your entire career this way.It’s far worse.",nsxwolf,2025-07-25 16:20:12,676,cscareerquestions,t3_1m93jgi,False,
n541bdi,"Software Engineering generally requires a lot of mental power. You are required to have and store so much knowledge while also constantly learning new things i can see it easily getting overwhelming if you dont manage it right. Even for myself at least once a week i think: ""If i really wanna hit the next level i need to make this my passion/main hobby"". Its not a fun thought to have but i feel its whats required sometimes to reach the next level.Now you add that with all the BS cooperate can give you like PIP, Layoffs, fast pace delivery, code reviews etc it piles on a lot.Then you have the everyday life stress to manage and it starts getting really easy to see why people break down.Software engineering can be very lax but the moment you are important enough to actually need to get stuff done and working in a somewhat fast manner it starts becoming extremely stressful fast if you dont manage yourself well.",Sensational-X,2025-07-25 16:26:23,208,cscareerquestions,t3_1m93jgi,False,
n540l52,"Tech debt, no training, high turnover, no documentation, immature IT, no attention to security practices until it's too late .",Mactoma,2025-07-25 16:22:55,131,cscareerquestions,t3_1m93jgi,False,
n541rib,mental breakdown because the job is mental. just like blue collar has physical breakdown. the job squeezes as much juice as they can from you.,paperlevel,2025-07-25 16:28:31,71,cscareerquestions,t3_1m93jgi,False,
n542c6p,"I'm convinced that tech is the new finance. It's gone so downhill.I still remember the days when people got into tech to ""help make the world better place"" and Google's motto was do no evil. These days, quality of work life has gone downhill as companies expect developers to do more with less, layoffs left and right (no security) and oversaturated field of new grads aiming for vanishing number of entry level jobs.This is almost exactly what high finance was like, I remember.",Illustrious-Pound266,2025-07-25 16:31:14,79,cscareerquestions,t3_1m93jgi,False,
n57g387,"It's one of the only jobs where you are constantly creating / fixing, there are no objectively correct answers, and the process itself is technically challenging.An artist knows how to use their tools. They don't run into some major technical issue with the brush in Photoshop.An architect knows how to use their tools. They don't have some dependency break while designing a foyer.Engineers know the math and know how to use CAD etc. They challenges are related to the problem itself, not the engineering of it.Journalists and writers know how to write. They aren't struggling with Word.With software, the actual development is complex and difficult in a way that barely exists elsewhere. That's why there is constant learning, A/B testing, technical debt, security etc. to deal with. It's easy to burn out when the process of making something is riddled with issues.Like look at this shit: https://old.reddit.com/r/Supabase/comments/1ls31m9/after_three_days_and_15_hours_i_can_finally_log/Three damned days hunting down an oauth issue that was caused by cookies being too long for the default nginx set up. That sort of absolute fuckery is hard to find outside of software. That was mental torture to go through. In how many professions can you spend 15 hours trying to solve something and making absolutely zero progress because you are looking in the wrong place, and then solve it in 5 minutes when you have a lightbulb moment.I have previously worked as a hedge fund accountant and it was a breeze. Just effortless work towards a correct solution every time. The processes worked and there was a known correct solution you had to uncover. Easiest job ever. There is no A/B testing in producing a daily NAV, no trade offs, no technical debt, no performance issues.",lipstickandchicken,2025-07-26 03:26:11,19,cscareerquestions,t3_1m93jgi,False,
n5418e3,"For me personally it was a lack of an outlet. All this pressure built up during the day, combined with the sitting and thinking made me hate life. It helps to have a group of friends to bullshit with, some physical activity and maybe even a night of drinking (socially). Also some hobbies and things to look forward to on your off time. It’s the same thing everyone says, honestly, but it’s just so true. Not having a life and neglecting yourself will kill you. Especially in such a sedentary and lonely role.",Mad-chuska,2025-07-25 16:25:59,51,cscareerquestions,t3_1m93jgi,False,
n540ess,I can't identify. I guess I've always been lucky to join teams who have a capable manager who doesn't throw you under the bus. Sure it's stressful but it's nothing compared to other fields. At least you're stressed while sitting in a nice office with at least 30 mins for your lunch break.,Suitable_Speaker2165,2025-07-25 16:22:04,49,cscareerquestions,t3_1m93jgi,False,
n540j0o,"It only gets more and more toxic as you go up and expectations are higher.Welcome to the clownfest called software engineering. Ya, the field is over saturated.That's what happens when your competition is the world (quite literally). And ruthless capitalism means companies have every incentive to replace you with a cheaper worker abroad.>I’m honestly worried about my future in this field if this is the standard lifestyle where work completely consumes your life and everyone around you is always in “survival mode.”Basically all the peers I know who are very successful in this field wants to ""get the f\* off"" once they have families and the kid grows up.On calls absolutely suck.The constant layoffs on the news is draining. Let alone seeing your star coworkers randomly be laid off while the incompetent ones get promoted.Companies constantly screaming (metaphor) at the workers how they want to reduce employees through AI. All the while offshoring jobs more and more.You look at the career page and you see more and more tech companies move all the new jobs to outside US like India.Constant rubric check to see how 'impactful' you are when the company is on a budget cut and cannot afford any serious projects. How do you justify your level then? Especially when much of tech firms today are well matured from the past decade and half growth?And so many bull crap projects which you know is liability to the company but is done because of the latest fad like 'crypto' or 'AI' or what not. Especially when your company's main product line has nothing to do with any of that. Literally burning money chasing fads.The constant ""re-org"". ""Re-org"" this. ""Re-org"" that. Just how many re-orgs are we doing. Every few months? What was that bull crap motivational speech #149 about how the project will bring some long term change? I guess scrap that a few months down the line?It's like the California Gold Rush. The early ones won. The ones joining now. Have fun.",Fwellimort,2025-07-25 16:22:38,51,cscareerquestions,t3_1m93jgi,False,
n542zxl,"8 years in, was Sr SDE now Sr SDM, always stressed and burnt out ready to quit. It’s intense because you never have the luxury to complete something 100%. The reality is deadlines, short term trade offs made by C Suite and never the opportunity to address tech debt. They care launching something to take credit, get paid or paid to leave. There’s always constant churn, throwing blame, escalations, and pip culture. That’s why the more senior you get the more you care less, you’re numb to it all and look forward to getting pipped.",ChadFullStack,2025-07-25 16:34:24,12,cscareerquestions,t3_1m93jgi,False,
n5zth2n,Not when the paycheck hits tho,GlowingJewel,2025-07-30 15:31:22,371,cscareerquestions,t3_1md9h43,False,
n5zv5rr,"Yeah part of BE/MW/SRE is that nobody notices when you are crushing it but 1 mistake has all eyes on you. Good news is that you are also much more in demand for the same reasonAs for demos, people want 3 main takeaways:1. does it work?2. how do i use it?3. how does it provide value to me?If you can provide all 3 you'll have them locked in. Get good at powerpoint so they can see the flow chart, see the graphs, and see some bruno/postman requests. Make the non-tangible, tangible.",pewpewpewmoon,2025-07-30 15:39:13,66,cscareerquestions,t3_1md9h43,False,
n5zthlj,"I feel you. However, as long as your direct supervisor or manager is fully aware of your efforts and the value you are delivering, that's generally all that matters. I am in a similar situation because while I am a full stack dev, my experience and familiarity with the system means I like to work on, and am assigned a majority of the heavy lift back end tasks. My demos with the product owners are usually nothing flashy, but I don't care.",Austin4RMTexas,2025-07-30 15:31:25,73,cscareerquestions,t3_1md9h43,False,
n5zw4ht,"they can't see why this is cool- so you need to point it. Literally, ""This doesn't seem like a big deal, but here's why it is...""",dethswatch,2025-07-30 15:43:41,9,cscareerquestions,t3_1md9h43,False,
n5zyjd6,"Take like…half a business day and learn to get good at building presentations. If you want to be really stereotypically developer about it, learn to build charts in your language of choice. Next step is to go full stack. Kind of a joke but not really.",Slggyqo,2025-07-30 15:54:53,35,cscareerquestions,t3_1md9h43,False,
n5zx9km,"You're in good company and it sucks even if you have the experience to do the UI / UX stuff. Projects come and go, but the positive is if people keep coming back to you for backend development, you're doing something right.",__tothex__,2025-07-30 15:49:01,6,cscareerquestions,t3_1md9h43,False,
n608fjm,"UI people have this problem in a different way.* Improve speed of UI, fix all the menus, consistent tone of speech --> yawn* Invert colors --> ""HOLY COW THIS IS AMAZING""",DigmonsDrill,2025-07-30 16:41:41,6,cscareerquestions,t3_1md9h43,False,
n5zuw61,Talk about what the complexity is during a demo and why it is critical.,caiteha,2025-07-30 15:38:00,9,cscareerquestions,t3_1md9h43,False,
n5zylq8,"Demos should be done by product, they are the owners of it and they’re a more customer facing role. Having engineers stop and demo an api is stupid, even show casing the front end is dumb.Only time we should be demoing anything is during a hackathon.",godofavarice_,2025-07-30 15:55:11,9,cscareerquestions,t3_1md9h43,False,
n6033ol,"This is not meant to ostracize you or to finger-wag, but perhaps this is a good opportunity for you to learn how to communicate better to non-technical business partners and stakeholders.This is an important skill. It's an opportunity to show others why you are valuable and why the technical challenge you accomplished is innovative/good for them.If your demo is boring screen with just letters, then consider making a more engaging demo/presentation rather than lamenting about it. The ability to catch the audience's attention is a crucial skill.",Illustrious-Pound266,2025-07-30 16:16:37,7,cscareerquestions,t3_1md9h43,False,
n5sp5ek,"Put one less candle than his age, and write ++ in frosting next to it",a_library_socialist,2025-07-29 14:16:12,365,cscareerquestions,t3_1mc8oez,False,
n5s7ma7,"I feel like we’re missing a hello, world joke here",ssrobbi,2025-07-29 12:41:46,269,cscareerquestions,t3_1mc8oez,False,
n5rvz1o,"Aww this is really sweet (pun intended). In C++, the full minimal code to do this would be: #include int main() { std::cout << ""Happy Birthday!"" << std::endl; return 0; }But really all you need for him to get it is either `std::cout << ""Happy Birthday!"" << std::endl;`Or maybe even: `cout << ""Happy Birthday!"" << endl;`This is as small as it can get, hopefully it fits on the cake!",lukajda33,2025-07-29 11:25:18,346,cscareerquestions,t3_1mc8oez,False,
n5skwgh,"Cut off a little bit of the cake at the end (so its obvious a part of cake is missing), then stick some paper (or a sticky note) to the larger remaining cake with the message: Segmentation fault (core dumped)I find that pretty amusing.",PersianMG,2025-07-29 13:54:56,115,cscareerquestions,t3_1mc8oez,False,
n5sqaoh,cake.age++; // :birthday_cake:,No3Mc,2025-07-29 14:21:48,54,cscareerquestions,t3_1mc8oez,False,
n5ry7z7,"Get black and white candles, and use them to show his age in binary. Or cut some candles in half so they're shorter.E.g. 27 would be white - white - black - white - white, or pad it with black candles to a whole byte: black black black white white black white white",metaconcept,2025-07-29 11:41:35,187,cscareerquestions,t3_1mc8oez,False,
n5rww0w,I vote for ‘std::cout << “Happy Bday” << std::endl’And don’t put the ‘;’ at the end then see if he can spot the bug :saluting_face:,11markus04,2025-07-29 11:32:01,38,cscareerquestions,t3_1mc8oez,False,
n5rw0aq,Just do std::print(“Happy Birthday”);On the cakeEdit: that’s how you put happy birthday on screen in c++,misterespresso,2025-07-29 11:25:33,38,cscareerquestions,t3_1mc8oez,False,
n5s8aww,"Not directly programming language but for developers , I always liked the joke : “There are 10 kinds of people ; those who understand binary and those who don’t “ ( 10 being 2 in binary )",flarthestripper,2025-07-29 12:45:48,23,cscareerquestions,t3_1mc8oez,False,
n5tf49s,"In C++, it's a bit long. So I might use Python or Javascript, because it'd probably fit on a cake a bit betterI also think it'd be fun to increment his age (age = age + 1)In Python: age = age + 1; print(""Happy Birthday!"");In Javascript: age++; console.log(""Happy Birthday!"");",Substantial-Elk4531,2025-07-29 16:18:53,5,cscareerquestions,t3_1mc8oez,False,
n59wm3z,"It is still becoming a meat grinder job with high pressure environments, poor work life balance, and instability. It's a different type of exhaustion",Conscious_Jeweler196,2025-07-26 15:01:33,367,cscareerquestions,t3_1m9vfjt,False,
n5a13o1,"Seems the ""6 figure job, no degree"" days are over",Repulsive_Zombie5129,2025-07-26 15:25:08,123,cscareerquestions,t3_1m9vfjt,False,
n5a6lnp,"I'm not aiming for a 6-figure salary. In fact, I'm literally doing an unpaid internship just to get a job.",AbdelBoudria,2025-07-26 15:53:41,44,cscareerquestions,t3_1m9vfjt,False,
n5ak6n6,"Love the optimism from someone based in Eastern Europe…you know, where the jobs are being outsourced to.",Bubbly-Concept1143,2025-07-26 17:04:39,40,cscareerquestions,t3_1m9vfjt,False,
n5a3e7p,"???? Who is getting hired right now with no degree and no experience? That myth needs to end. If you didn’t get in prior to the layoffs without a degree, your cooked.",Thin_Vermicelli_1875,2025-07-26 15:37:03,49,cscareerquestions,t3_1m9vfjt,False,
n5a196d,"Everything you listed is rare to find from one single company. There always is, or usually is a “catch”. It’s a good career if you find ALL of those positives in one company on top of job stability.",hotboinick,2025-07-26 15:25:57,21,cscareerquestions,t3_1m9vfjt,False,
n5a5mp5,"Looking at your Github, it's obvious that you enjoy the work and solving hard problems. I'll guess that you'll easily endure hard times.Other people who chased the bag, without any intrinsic CS interest, are getting weeded out by both humans and bots (which don't need housing, insurance, perks, or bathroom breaks). That's where you see a lot of the doom & gloom.The rest of the competent new grads will need to settle for $60-80k jobs... which is a far cry from the guaranteed $100k jobs of 2021.",kingp1ng,2025-07-26 15:48:38,35,cscareerquestions,t3_1m9vfjt,False,
n5a2yiw,You wanna be a truck driver or a Walmart greeter instead?,Nosa2k,2025-07-26 15:34:48,8,cscareerquestions,t3_1m9vfjt,False,
n5ac2xl,Highly depends on companies and teams.,EffectiveLong,2025-07-26 16:22:22,7,cscareerquestions,t3_1m9vfjt,False,
n59xdcw,Wait….. we don’t have to work 12 hour days? There are shifts? There are work and sleep shifts. Are there others?/s,LongDistRid3r,2025-07-26 15:05:33,10,cscareerquestions,t3_1m9vfjt,False,
n5hrjpt,"Honestly, hiring is like throwing darts blindfolded. Some of my worst hires were well educated.",Few-Artichoke-7593,2025-07-27 20:25:29,1620,cscareerquestions,t3_1mawjbx,False,
n5hsviv,"I've seen plenty of great bootcamp grads in my days. Not to mention, just because someone is a bootcamp grad, it doesn't necessarily mean that they lack a ""self taught driven personality"".I've worked with bootcamp grads who had to fully dedicate their time to their education + finding a job in the tech industry. Meaning, there were people who used to work at completely different industries — whether they were a cook, musician, or teacher — and they sacrified their known world in search of new opportunities, and I think that that's something worth recognizing and respecting.In my experience, you shouldn't be picking your hires based on ""bootcamp grads"" vs. ""university grads"", ""self-taught genius"", or whatever title/ego-based metric you're using.The criteria for hiring someone is simple: ""Are they fit for the job they're applying for?"" If you're turning people down solely on the basis that they graduated a bootcamp or what have you, that's pretty close-minded and will cause you to lose out out on some amazing talent.If a company does a bad job at hiring an employee, that's mostly, if not completely, on the company's hiring process, not on the applicant, bootcamp grad or not.",YonghaeCho,2025-07-27 20:32:12,444,cscareerquestions,t3_1mawjbx,False,
n5hrll5,"I mean yeah for entry level I'll take a CS degree over a bootcamp given the option. But the moment they have, say, 2 years of work experience behind their belt, I don't care if they got a bootcamp in growing corn. Education background is irrelevant to me at that point",RemoteAssociation674,2025-07-27 20:25:45,337,cscareerquestions,t3_1mawjbx,False,
n5hwv36,OP is upset a boot camp grad slept with their spouse.,cityintheskyy,2025-07-27 20:52:25,224,cscareerquestions,t3_1mawjbx,False,
n5htyej,"I felt the same way until I worked at a place that had hired a few bootcamp grads who were quite good once they got some experience under their belt. I was impressed with their work and was pleasantly surprised when I heard they'd all attended a bootcamp. However, they all had non-tech STEM degrees (things like biology, chemistry, environmental science), so perhaps that taught them to approach things rigorously, which carried over into their dev work.",rebel_cdn,2025-07-27 20:37:38,299,cscareerquestions,t3_1mawjbx,False,
n5hviw3,"Thi is a ragebait, this same logic applies to graduates .-,",BlueeWaater,2025-07-27 20:45:34,48,cscareerquestions,t3_1mawjbx,False,
n5hwoi7,"""Why is no one hiring junior roles"". -this sub",m0viestar,2025-07-27 20:51:29,18,cscareerquestions,t3_1mawjbx,False,
n5hszfz,This is obviously rage bait generated by chat gpt,Straight-Repeat-7439,2025-07-27 20:32:45,201,cscareerquestions,t3_1mawjbx,False,
n5husv0,"Bootcamp grad here 3YOE, doing just fine and recently scored a new role. I come from a design background and is something employers want so I can fit into their hybrid developer role. If you're not doing anything unique in SWE you'll not stand out. Doesn't matter where you come from. Good luck leet coding your way to new roles. Half of it is selling your personality outside of coding, people pleasing and communication skills, ability to solve problems and be a valuable asset to the team. If you don't have that it doesn't matter how much of a code monkey you are.",Solve-Et-Abrahadabra,2025-07-27 20:41:54,44,cscareerquestions,t3_1mawjbx,False,
n5hv8mb,"Sounds like 99% of college grads I know. Congrats, you uncovered the mentality of people who want to get paid but want to also live life. You’re a fucking luminary.",ViveIn,2025-07-27 20:44:07,27,cscareerquestions,t3_1mawjbx,False,
n5aevd7,"Lol, I am sure I am still a shitty SWE 10+ years in. But a lot of coworkers trust me and we get stuff done despite me still sucking and being imperfect.Stay humble. If you don't hate the job, you will likely get better just from doing more projects.",FeralWookie,2025-07-26 16:37:15,193,cscareerquestions,t3_1m9w8ug,False,
n5ajmsf,"Job hopping, especially to the really desirable places, is more about knowing the big tech hiring game than it is about being actually good at programming. The real secret weapon is networking.AI is nothing to worry about IMO. It's just another tool like autocomplete or stack overflow. You get better by practicing a lot and by constantly pushing the boundaries of your expertise until you are good at lots of things.",sudden_aggression,2025-07-26 17:01:50,30,cscareerquestions,t3_1m9w8ug,False,
n5a5fyg,If you want to improve yourself then set aside regularly scheduled time to learn and improve. Talk to your boss about potential learning activities in your area like local or virtual conferences you could attend in areas you want to improve in.If you want the ability to jump around to new companies then your performance is secondary. You need to network. Make friends at work that will want to work with you again because you're kind and reliable. They'll invite you to work with them at other companies or you can ask them about opportunities when you're looking for jobs.,waraholic,2025-07-26 15:47:40,50,cscareerquestions,t3_1m9w8ug,False,
n5aijpx,"Dunno if you're remote or what, but for me with ADHD, working remotely exacerbated all of this. I'd spend time poorly at home and feel behind/disconnected at work. Our RTO policies changed and I started coming in every day and it made a huge difference. Beyond that, nothing helped more than becoming a subject matter expert. Try to find a niche that you can learn more about than anyone else. Is there a part of your job processes that feels like toil, or takes a long time, or nobody seems to fully understand? Spend some time trying to improve that thing. Research alternative tools, try to write documentation (the kind you wish were there for you right now), see if you can reverse engineer it.You will probably get stuck early on, or feel like you're missing some fundamentals, but that's okay. Ask questions when you can, and keep chipping away at it. Eventually, when you have something that you think is an improvement over what's there (probably won't be all that hard to get to that point to be honest) you can let it be known that you've created a new resource or process, and get some people to review it. Chances are good you'll end up being a go-to person for that thing in the future. You'll have very experienced devs coming to you for help/advice/best practices in that domain.From there you'll probably incidentally pick up a lot through the process. You'll recognize things in the codebase as being in some ways similar to the thing you took ownership of. You'll get a request to integrate your thing with some other unfamiliar thing, and then you repeat the process until you understand that thing really well too.Bit by bit, you'll start feeling pretty confident. Source: my own experience, feeling like a bad developer for many years and then having my confidence grow as a contributor once I figured out this mindset",9ftPegasusBodybuildr,2025-07-26 16:56:19,14,cscareerquestions,t3_1m9w8ug,False,
n5a3rhi,Bro you guys have food work life balance?? I love food,kdot38,2025-07-26 15:38:58,39,cscareerquestions,t3_1m9w8ug,False,
n5a5370,"I'm so much in the same boat as you except I'm 35.Things I do:- Constantly tell my manager I'm willing to cross train (I do frontend but I've had stints in devops and infra doing this)- look for backlog bugs I can handle in other ""pods"", ask the other-pod PO if I can take it on- do you have tech support engineers? be their go-to person. always talk to them and QA.- get your tools in order. know how to quickly grep your codebase in seconds when the above comes at you with an issue.There are so many ways to stand out. The above is just what I do. I don't have a degree, I learned off youtube 3 years ago. But once you're in, you're in. Focus on the business, I think, and that'll get you the jobs.",trcrtps,2025-07-26 15:45:49,20,cscareerquestions,t3_1m9w8ug,False,
n5c7sg1,"Was in the exact same position, incredible wlb and pay but no growth. I left for a company with a much better engineering culture (with a worse wlb). Man do I have 0 regrets, I went from barely being a good new grad to being promoted twice. It turned out I needed a fire under my ass and to be surrounded by strong engineers to become better",AyyLahmao,2025-07-26 22:28:11,5,cscareerquestions,t3_1m9w8ug,False,
n5a5maw,"Me personally I ended up going for a more traditional masters route since my adhd makes it impossible to sit down and learn unless I’m under academic pressure of a deadline.On top of this, YouTube and personal projects really. You can learn absolutely anything on YouTube. Tutorials, Ted talks, tech conferences, actual lectures, phd research presentations, etc etc.The one thing I’ll say is, even with all this you need to be meaningful in your approach. It is not possible to learn everything from everywhere all at once. So just choose a skill that you like or can tolerate if the skill serves your career better.Slow it down, think, pivot",styada,2025-07-26 15:48:35,10,cscareerquestions,t3_1m9w8ug,False,
n5atlf3,"In terms of being a software engineer, you want to learn the system you're working on, both the big picture architecture and the code. That kind of thing takes time, you slowly build up knowledge as you work. At your level, you aren't going to be making design and architecture decisions, but when you are informed of ones that are made, ask the engineers above you why they made the choices they did. With code reviews, for a few of them, ask the senior developers to get on a call with you when they're reviewing your changes and have them walk through their process in reviewing your code. Also, post attention to their review comments so you don't make similar mistakes in the future",anand_rishabh,2025-07-26 17:52:23,5,cscareerquestions,t3_1m9w8ug,False,
n674qi1,These pay packages are extreme outliers and cannot be extrapolated to the rest of the industry.,minimaxir,2025-07-31 17:10:19,356,cscareerquestions,t3_1me6pk0,False,
n67c5db,can we have a draft? I'd like to watch who's gonna be the first round picks and who's signing them,HoneyBarbequeLays,2025-07-31 17:43:46,55,cscareerquestions,t3_1me6pk0,False,
n67ez4h,"If true, then it makes sense they cut the regular tech jobs like software engineers, IT etc. Pay the top big and fire the lower ones ahah",letsridetheworld,2025-07-31 17:56:27,7,cscareerquestions,t3_1me6pk0,False,
n67m4f0,A good CS PhD in AI involves a lot of maths. Not many people can work through that if they were just following the money,Historical_Flow4296,2025-07-31 18:29:34,13,cscareerquestions,t3_1me6pk0,False,
n67c1vb,"Everyone keeps asking what subfield of CS to go in for the best job prospects, its obviously AI, yet I see everything but AI upvoted on those posts... you can't make this stuff up man",throwaway133731,2025-07-31 17:43:20,13,cscareerquestions,t3_1me6pk0,False,
n675r0z,"No they're not.This is a rumor started by Sam Altman on his brother's podcast so that nobody would call him out live for his obvious bullshit.You're medically stupid if you really believe an AI researcher will get paid $250M. Even said researchers said it was wrong.This is higher than what Zuck and any other FAANG CEO gets paid in their best years.They get $10 over 4 years, that's it.",Bobby-McBobster,2025-07-31 17:14:53,54,cscareerquestions,t3_1me6pk0,False,
n68brw1,Would love some jerseys for my favorite AI researchers.,bitcoinsftw,2025-07-31 20:32:25,2,cscareerquestions,t3_1me6pk0,False,
n68de78,How many nba players get $250M contract? And there are a lot of athletes that play basketball and are the top 1% in their high school but never see that kind of money. They could kick ass of almost any other basketball player but would be no match for a nba all star,ragu455,2025-07-31 20:39:55,2,cscareerquestions,t3_1me6pk0,False,
n68oju1,"I think your concern is happening in the business side. Everyone is throwing money at AI, hoping something sticks/explodes (in a good way). That money has to come from somewhere. And it draws away from other areas. I’m sure it will draw people. Human nature is to go where the demand is. Sometimes it works out, sometimes it doesn’t. Other areas will suffer, but not everyone chases the money.It’s probably an overall good thing to see highly educated people in demand and being compensated well. Better them than some of the people our society currently worships.",Chili-Lime-Chihuahua,2025-07-31 21:34:01,2,cscareerquestions,t3_1me6pk0,False,
n676tek,">but I wonder if this will now just flood PhD programs with applicantsAt end of day, limited (barely any) slots for AI on LLM related stuff at schools like Stanford, CMU, Berkeley, MIT for PhD. Like what? A handful from all those schools combined? Let alone they need to be studying for 7 years. Then create groundbreaking research papers and have the relevant experience which will be another 3 years and barely be like 1 or 2 people from that year of cohorts in the country?So don't worry. It just means all those PhD rejects will flood the job market even more at bachelor's.All the while you keep hearing these outlier news. So more people around the world flock to the field.This field is going to be supppppeeeeeerrrr extremely saturated. We are done.",Fwellimort,2025-07-31 17:19:43,4,cscareerquestions,t3_1me6pk0,False,
n5yhiuz,"Frankly, outside of C and C++ developers, most people don't realize that it's not the same language. Heck, I used to be a C++ developers and, for years, I wrote C/C++, just because it was easier to go with the flow than to explain.Probably not helped by the fact that the toolchains are essentially the same.",ImYoric,2025-07-30 11:03:45,313,cscareerquestions,t3_1md3f1r,False,
n5yhquf,"Because schools still treat them the same, and even software engineers who haven’t used C++11 or later think of them as the same thing.A modern C++ codebase would be completely unrecognizable to a C developer.",Sesshomaru202020,2025-07-30 11:05:25,131,cscareerquestions,t3_1md3f1r,False,
n5ym1ag,"I suspect people are mistaking C++ being backwards compatible with C as C++ just being a direct extension of C.Even if the basic syntax of C is contained in C++, much of being comfortable with a programming language is knowing how to use the core libraries which are completely different. Even something as basic as how you manipulate strings is wildly different.",thequirkynerdy1,2025-07-30 11:36:36,31,cscareerquestions,t3_1md3f1r,False,
n5ywv86,Fuck I’d be happy if people learned that JavaScript and Java are different languages.,lifefeed,2025-07-30 12:44:43,74,cscareerquestions,t3_1md3f1r,False,
n5yir9l,My company always has Linux listed in the programming languages you need to know. Only for jobs that absolutely don’t require programming knowledge or Linux familiarity though.,APXH93,2025-07-30 11:12:56,11,cscareerquestions,t3_1md3f1r,False,
n5ygha9,If you know C you can probably get by pretty quickly in C++. Maybe a little less quickly the other way around but they are similar enough languages,igetlotsofupvotes,2025-07-30 10:55:48,83,cscareerquestions,t3_1md3f1r,False,
n5yiieb,"Very porous ecosystems, and a lot in common when it comes to software knowledge (close to the metal, memory, etc.), and ""how"" you develop C and/or C++ software. While both languages are definitely not the same, they're also very close through the fact that 98% of C will be compiled without fuss by a C++ compiler, and it's not uncommon to have both, in various ways, including through extern C wrapped code.I've worked a significant amount of time on cross-platform C++ projects, and it's not rare to end up with C++ code, using C and C++ dependencies, sometimes or partly vendored through a C interface (which helps a ton when you need bindings to other languages).",Ragnarork,2025-07-30 11:11:06,11,cscareerquestions,t3_1md3f1r,False,
n5z5gix,"In my experience, listing “C/C++” is just shorthand for “systems language”. When paired with Python, it probably just means you know enough to work with C and C wrapped C++ extensions for Python.",look,2025-07-30 13:32:16,5,cscareerquestions,t3_1md3f1r,False,
n5zg1eb,On my resume I list C/C++/Objective-C/Objective-C++ as if they were all the same language.,imaginarylocalhost,2025-07-30 14:26:19,3,cscareerquestions,t3_1md3f1r,False,
n5z6045,Because the industry is overrun with frauds who went to a bootcamp for 6 weeks and are now building critical infrastructure,imagebiot,2025-07-30 13:35:14,7,cscareerquestions,t3_1md3f1r,False,
n586gzt,"Most of the revenue comes from existing investment and as more people go online more often you get an increase in usage that translates to increased returns on the existing infrastructureYou could stop developing googl search, YouTube, Facebook, Reddit, etc and just have staff to maintain them in the current state and they’d all be cash cowsA lot of the investment has always been about the next billion dollar product, or an arms race between the various companies",slpgh,2025-07-26 07:03:54,229,cscareerquestions,t3_1m9mua9,False,
n58c07n,"Revenue comes from sales, if you can make those sales with 10,000 people or 5,000 people, revenue remains the same.Revenue and headcount is absolutely correlated generally speaking, but a lot of companies just employ far more people than they really need.That can be due to a range of reasons, often people just want to make their own department bigger, so if they have the budget to hire, they'll hire. In a lot of organisations, if you don't spend your budget, the budget will be reduced next year, so there is no incentive to save money.I would never defend anything Elon Musk does, but the fact is he reduced headcount at Twitter by over half, and it's still functioning, it turns out over half the people there didn't really need to be.I'm not saying this is good or bad, but the fact is most large companies employ far people people that they realistically need.I think if all companies ran efficiently, or at least tried to, there would probably be 50% unemployment, so it's not like it's necessarily terrible that companies employ more people than they need.",ToThePillory,2025-07-26 07:57:08,20,cscareerquestions,t3_1m9mua9,False,
n58699u,"They don't need that many people to begin with, there are a lot of ""fat"" in these big companies.",timo4ever,2025-07-26 07:01:55,102,cscareerquestions,t3_1m9mua9,False,
n58ecy5,"In my experience, outsourcing and relying on existing or legacy product lines. And a combination of.Most companies from what I can see aren't producing new greenfield applications or researching anything major. They are either keeping old legacy products maintained with break fix or net framework updates, or at the most, farming off integrations or synergies to outsource firms. Who cares if it works, they can begin to start building revenue generation forecasts on it which is great for looking impressive to shareholders.That's the most part at least. The only companies I see doing anything really new, interesting or truly greenfield are startups. They either last a year or two before closing up shop, or getting bought out by bigger organisations who immediately shed any staff who weren't absolutely intrinsic to the synergy of product lines. And even then, that guy is walking a tight line. That is if the tech is even used. A lot of startups are bought and broken up simply to keep them from growing into a serious competitor.",IEnumerable661,2025-07-26 08:20:11,7,cscareerquestions,t3_1m9mua9,False,
n587vqr,"Inertia. It lasts a while, not forever.",__scan__,2025-07-26 07:17:09,9,cscareerquestions,t3_1m9mua9,False,
n587bbb,Maybe one of the parts in your question is not true. Might want to evaluate your question,YourOwnMiracle,2025-07-26 07:11:46,8,cscareerquestions,t3_1m9mua9,False,
n58yoek,"Employees are a cost center and don't generate revenue.Subscriptions, products, and license agreements generate revenue.",These-Bedroom-5694,2025-07-26 11:30:31,6,cscareerquestions,t3_1m9mua9,False,
n59u8dp,They're selling AI to each other of course.,savetinymita,2025-07-26 14:48:51,3,cscareerquestions,t3_1m9mua9,False,
n5anahj,"The AI we have in big tech is a game changer honestly compared to what i use for side projects. It’s absolutely been a boon, i use agents literally all day at my job.",Less-Opportunity-715,2025-07-26 17:20:19,3,cscareerquestions,t3_1m9mua9,False,
n5c2g5x,"The tech giants often have a core business or two that is outrageously profitable, and what do they do with the money? What tech companies are supposed to do, is take investment money, invest into new products and businesses that should turn profitable.. But often those new products and businesses don't turn profitable.The other option is to just sit on the money or invest it into other assets or return the money to investors. And that is admitting they don't have new tech ideas that are worthy of investing into.When tech giants cut staff and keep their profits, they are generally cutting staff in things they don't need or new projects that they feel won't pan out.",Joram2,2025-07-26 21:56:55,3,cscareerquestions,t3_1m9mua9,False,
n5oav06,can you take the offer and move closer to the job location?,wicccked,2025-07-28 20:37:38,280,cscareerquestions,t3_1mbrjn4,False,
n5obf2f,"legit just move lmao\- unless you got like actual reasons you can't move, then stay obviously. But perfect world, take the offer and move would be my move",deeht0xdagod,2025-07-28 20:40:15,202,cscareerquestions,t3_1mbrjn4,False,
n5opxw2,Use your extra $50k/year to move.,Coldmode,2025-07-28 21:51:48,96,cscareerquestions,t3_1mbrjn4,False,
n5ob66n,Only if you move within 30 minutes of the new job. 15 hours a week commuting would be a killer.,drew_eckhardt2,2025-07-28 20:39:06,101,cscareerquestions,t3_1mbrjn4,False,
n5oe238,"Its not gonna be only 1.5h, think about occasional strikes, accidents, rain & storm delays. Count the preparation before the take offs. Let it be 2h. That is a lot. Your time sometimes cant be paid with money.",AbbreviationsTrue183,2025-07-28 20:52:37,66,cscareerquestions,t3_1mbrjn4,False,
n5oexvk,i tried to commute 3 hours round trip and i quit. you have to move closer to the new job imo,SUsudo,2025-07-28 20:56:47,22,cscareerquestions,t3_1mbrjn4,False,
n5osgyt,"Yes you should take the new offer because:1. The pay is way higher, you'll get 2k/month more, a lot of money to move closer2. Your company were ok underpaying you3. They didn't follow through with your initial work agreement, why would they be different this time?",victillian,2025-07-28 22:04:57,28,cscareerquestions,t3_1mbrjn4,False,
n5obvxi,"Unless I was unemployed and extremely desperate, I would never willingly take a job that had a 1.5 hour commute.I once had an internship whose commute was 1-1.5 hours depending on traffic/accidents, and it was legitimately soul sucking. After that experience, I promised myself I would never do a commute like that ever again.If I wanted to take that job, I would relocate closer to the office. If that's not an option, I'd decline that job and continue job searching until I land something that's both more money, and a sane commute.",SouredRamen,2025-07-28 20:42:26,22,cscareerquestions,t3_1mbrjn4,False,
n5oi9hl,"Yea no, it might sound doable in your head to commute 3-4 hours a day but it will kill you very very fast. You either move closer to the new job site or stay with your old one.",curie2353,2025-07-28 21:13:04,11,cscareerquestions,t3_1mbrjn4,False,
n5ogibx,"Just move, you’re still gonna have to do that commute 3 times a week",bunnycabbit,2025-07-28 21:04:30,6,cscareerquestions,t3_1mbrjn4,False,
n5p3tkc,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-28 23:06:14,1,cscareerquestions,t3_1mbvces,False,moderator
n5p88g5,Non-technical industry. It’ll be boring and you’ll probably be bitching about that in a couple years.,nullstacks,2025-07-28 23:30:10,83,cscareerquestions,t3_1mbvces,False,
n5p7zgd,"I clock off at 5, I don’t do OT. Maybe it’s a job issue?",FlamingoEarringo,2025-07-28 23:28:49,25,cscareerquestions,t3_1mbvces,False,
n5p4rp2,"Sounds like a job problem, not a career problem.The truth that a lot of people here don't want to admit is that, for all the faults of this field, it's still one of the best careers to have by a mile.",olduvai_man,2025-07-28 23:11:25,117,cscareerquestions,t3_1mbvces,False,
n5p569q,"I feel you, I never realized how good I had it at my first job. It sucks if you end up at a place with horrible culture because then you have to think about how leaving early looks on your resume",futureproblemz,2025-07-28 23:13:37,10,cscareerquestions,t3_1mbvces,False,
n5p6704,"Typical answers I've seen: defense, government, non-technical companies with conservative strategies.",BurlHopsBridge,2025-07-28 23:19:08,7,cscareerquestions,t3_1mbvces,False,
n5prgbk,"Long term programmer here. You get used to the always learning. At the start, it's a heavy lift, but if you get one OS, one language, one database system, the rest tend to fall in place. Think about how hard your first language was, compare that to your 2nd and 3rd... The 3rd should be 10X easier.It's not going to change. There's always some OS that sticks around, a language that has more holding power than others, but they will mostly come and go.Sometimes you'll find an easy ride job, but that's really company dependant.",KarlJay001,2025-07-29 01:18:58,5,cscareerquestions,t3_1mbvces,False,
n5p54rj,"> Or is this industry really over at this point and I should start making plans to go elsewhere.There is nowhere else. There is no industry that pays this well and expects so little. You just want a ""normal job"", like the one you were laid off from... You were laid off because they could no longer afford to pay you to do a ""normal job""Don't get me wrong, there are other places. Electrician and Plumber are also great careers, but you will find the same shit (and sometime literal shit) there.Dealing with BS is literally why there is a paycheck. A no BS job is just volunteering.",slimscsi,2025-07-28 23:13:23,15,cscareerquestions,t3_1mbvces,False,
n5pg22f,"[You said it yourself, chief](https://archive.ph/TtCpj)[A couple times, actually](https://archive.ph/chDeT)EDIT: Look, bud. You're [discouraging others from pursuing this field](https://archive.ph/meVQK) while having an extensive posting history hinting at your own discontent with the field on this subreddit and elsewhere. I think readers should know that you might be projecting; there's probably a reason you've hidden your account's activity from public view.EDIT 2: Nice block, OP. After acting *so* tough in comment sections around here, you fold to the slightest bit of scrutiny.",DragonsAreNotFriends,2025-07-29 00:13:36,10,cscareerquestions,t3_1mbvces,False,
n5p7awj,“I just want a normal 8-5 job and log off”brother that’s most of them,CountyExotic,2025-07-28 23:25:06,7,cscareerquestions,t3_1mbvces,False,
n5v38ep,"So, I run an agentic AI firm and we have AI in everything. I'll tell you, we hit walls all the time. Our engineers each have 30 years of experience. They're very passionate about AI and use it in everything they do, yet they're always hitting walls. I think firms on Wall Street are just really excited to lay people off because that prospect is so wildly profitable for them. But I just don't see things getting done correctly up to production and scaled without people that know what they are doing. It's just not happening.Frankly, I'd like to pick up some talent, so if organizations start laying off their super senior staff that is going to be a boon for me.",Personal-Reality9045,2025-07-29 20:57:23,483,cscareerquestions,t3_1mcn29h,False,
n5v1x2m,"It’s just as likely we are currently hitting a high water mark for usage of AI in the workplace. As it gets more widely used, employers will come to better understand the substantial risks and problems that come with it, and regulations and legal standards will be developed for its use.This is a very aggressively hyped technology right now, but like most such technologies the reality rarely matches the promise, and that gap inevitably causes people to lose interest over time.It has some genuine productive use cases, but it isn’t nearly as widely applicable as AI companies are desperately trying to make us believe.",Due_Satisfaction2167,2025-07-29 20:51:21,146,cscareerquestions,t3_1mcn29h,False,
n5v52t5,"I’m not going to claim to have any solid insight on the topic or a crystal ball, but IMO it’s more likely that we’re re-running the dotcom bust and AI for devs becomes more like MS Excel became for accountants/finance. I’m not convinced that AI is going to get significantly more “intelligent” any time soon, just slightly smarter in ways that it’s unreliable right now.I also wouldn’t be surprised if costs for using it blow up in the recession and companies start rate-limiting its usage a little bit in the future when pricing is more aggressive.",ReasonSure5251,2025-07-29 21:06:05,51,cscareerquestions,t3_1mcn29h,False,
n5v1x7v,Who do you think will be pressing tab all the time when it DOES take over? Certainly not project managers. They'll still need us.,CarthurA,2025-07-29 20:51:22,37,cscareerquestions,t3_1mcn29h,False,
n5vbr50,I think we can all agree Chick Fil A should be open on Sundays,Dev22TX,2025-07-29 21:38:50,25,cscareerquestions,t3_1mcn29h,False,
n5v527p,Nobody can predict the future. People should stop caring about stuff they can't control. AI might hit a bottleneck and not really progress from here on out or it will accelerate further with the massive r&d spending and compute being increased. Neither the AI bros that think AI will replace everybody or the people that think AI is a joke and completely useless are right. Nobody in history has been able to predict the future of innovation with any kind of accuracy. There are periods of history where there is massive continuous innovation in a given field in a short amount of time and then there are certain problems that nobody can solve for decades even hundreds of years. The next paradigm shifting innovation in AI could take another 100 years or it could happen in a dorm room at Stanford next month. None of this is predictable.I think with the AI we have now its clear there is some use cases that are very valuable and the tooling around it will get better. Which should increase productivity. But there is no clarity whether that will result in less jobs. In fact it could result in more jobs if you listen to some economists. There is no clarity in any of this.,nepalitechrecruiter,2025-07-29 21:06:00,17,cscareerquestions,t3_1mcn29h,False,
n5v4m2t,What makes you think this coworker can predict the future? AI isn't capable of replacing even a junior dev right now. It may be at some point in the future. Nothing in AIs progress so far makes me think that future is anytime soon.,vervaincc,2025-07-29 21:03:52,10,cscareerquestions,t3_1mcn29h,False,
n5v5g4e,"When that happens just about no one will have a job except maybe healthcare workers, construction, etc. Let's all make a pact to become freedom fighters to fight for jobs or maybe UBI when we are all unemployable.",protomatterman,2025-07-29 21:07:51,5,cscareerquestions,t3_1mcn29h,False,
n5wcs3a,"The future is the Tea app. Lots of AI slop code dropping the ball constantly. They'll try firing engineers and replacing them with AI and when that inevitably shits the bed, they'll outsource to programmers in the developing world and then just like before the jobs will slowly trickle back to the US because it's still easier to work with people in your same time zone.",kokumou,2025-07-30 00:59:57,5,cscareerquestions,t3_1mcn29h,False,
n5weyly,"It is hype created and sustained by people who profit off of laying people off that carry a huge amount of that convo. Yes, it's cool and can do cool things. No, it's not full on human-replacement ready or even anywhere near that level. Unless the human in question was already at a level of skill that is easily replacible.",VG_Crimson,2025-07-30 01:12:31,5,cscareerquestions,t3_1mcn29h,False,
n665zeh,"You have to manage him, unfortunately managing the manager is also a skill.",JaseLZS,2025-07-31 14:27:49,155,cscareerquestions,t3_1me2rny,False,
n6664jg,"He’s not being nice to you but from your description you are also being an asshole to him. This only makes the situation worse.Try instead being nice to him, helping him. None of this slowly giving hints to him which is why he’s doing the same bs to you.Most people tend to mirror what’s done to them.",Zimgar,2025-07-31 14:28:31,71,cscareerquestions,t3_1me2rny,False,
n66ssaa,"From your own admission this is someone who's a recent graduate who was promoted into a senior title but may not have the knowledge/experience to match the person who had previously been in that role. It's entirely possible that your read of him being insecure is accurate -- filling someone else's shoes in a lead position can be very difficult, especially if the previous senior was handling certain aspects of development (deployments being a common one) to allow more junior members of the team to focus on tasks that fit their existing skillsets. It's good to keep in mind that different people have different backgrounds, learn things at different speeds, and may have different responsibilities and priorities that limit their capacity to pick up skills that you think should be a pre-requisite. It's not possible for Reddit to tell, since we don't know your shop or the team dynamic or anything else, but you may in fact be 100% on point that his skills aren't where they should be. You may also be accurate that his attitude towards you is causing some of the problems. Based on the examples you've provided I wouldn't say I'm convinced, personally, but it's possible (maybe even likely?) that there are some gaps in both technical and management skills that come from being promoted up to a position where he's in a bit over his head. I'd highly recommend doing some self-assessment on your attitude towards the job. It's not unreasonable to be frustrated if you feel your teammate is not reliable when it comes to handing off responsibilities, but it doesn't sound at all like you're interested in actually helping elevate him, your team, or your team's output. If you think there are things he should know then maybe you will have to do some of the teaching yourself, and it will make things a lot better for the both of you if you do so with an attitude of ""I want to help our team improve"" instead of ""I always say ""we"" in front of him and the team"" when addressing things you see as issues. You're not really beating the charges of ""know-it-all junior"" when you make snide replies and add passive-aggressive edits to the OP after not getting the response you wanted here. There's some good advice in those responses, and if you legitimately came here seeking advice you'd do well to humble yourself a bit and re-read some of those messages that are amassing upvotes.",willwc,2025-07-31 16:14:36,27,cscareerquestions,t3_1me2rny,False,
n66bztl,"From the context from this story, this can be flipped around easily. “A new grad new hire comes in thinks he knows everything and knows more than his 3+ year team member/lead”. From what it sounds like you are probably mad he gets paid more and has a higher role because you think you know more. As engineers we do tend to forget that a team is a coop game and we need to work together and there’s enough recognition to be passed around. I have worked with a lot of young engineers that are thirsty for recognition and belittle their counterparts for just a small bit of recognition. Everyone needs to help each other, even if it is a “dumb” question. You have to work with that person for months/years. Being vague and passive aggressive ain’t going to help the situation get better.From the context you are also being a bit of an asshole as well. Try being supportive, he might lack knowledge in some areas. You guys in the end are a team.",Zaynn93,2025-07-31 14:56:13,46,cscareerquestions,t3_1me2rny,False,
n674nl6,"Has he not even encountered the concept of a template literal or does he just not know the name? I'm a mid with several years of JS/TS experience and I was like ""I *think* I've heard that term...?"" Then I looked it up and it was like ""oh yeah I wrote some of those a week ago"".",Winter_Essay3971,2025-07-31 17:09:57,17,cscareerquestions,t3_1me2rny,False,
n666kxt,"Many juniors have OPs attitude, and nearly all of them are one day humbled by it.",lunchdump,2025-07-31 14:30:41,85,cscareerquestions,t3_1me2rny,False,
n665r62,Stop being a passive aggressive pussy and tell him directly how you perceive your interactions with him.,publicclassobject,2025-07-31 14:26:43,84,cscareerquestions,t3_1me2rny,False,
n664nov,"After many years of working you'll find the human population is a wide distribution of personalities and talent. At that point when someone in your sphere makes a mistake or isn't particularly nice to you, you'll feel less compulsion to come crying to reddit about it.",TryToBeNiceForOnce,2025-07-31 14:21:24,65,cscareerquestions,t3_1me2rny,False,
n6761wu,"OP, what is this guy good at? I’m not inferring anything about you or him based on what you’re writing. I want to give you a different perspective instead of being accusatory towards you, but also not echo chambering with sentiment you will clearly agree with. When you work on a team, there’s a division of labor. Very rarely will you get someone that knows every single aspect of what the team does. I was just like you when I started my career. Came in years ago, thought everyone above me was an idiot because they couldn’t do the things that I thought were very simple and easy to me. However, they were also VERY good at things I never even knew existed and were important. I think recognizing that we are all good at different things and can divide and conquer was a large step in me being able to respect my teammates and in me being able to step up after a few years to eventually lead them. All this to say, don’t be so quick to write off your coworkers. I think the amount of people that get promoted unfairly is understated/overstated at the same time. Do many people not deserve the title of “senior” or beyond? Yes. But it is also equally true that these people get put in these positions because they fill a need. Not everyone who doesn’t match your standards of technical skills and viewpoints is incompetent. They may even be great at things you suck at or don’t even know exist. I highly doubt that you know EVERYTHING about software engineering in a professional organization, at least not yet. I am genuinely giving you advice because this resonated with a younger version of me who thought similar things about my own coworkers. You need to be open-minded, self-reflect, and give props where you can, because these people are probably from different backgrounds and good at different things. Also you have stakes in maintaining a good relationship with coworkers, you will see your coworkers constantly and your relationship with them may determine your career trajectory. Good luck OP",ToastandSpaceJam,2025-07-31 17:16:14,7,cscareerquestions,t3_1me2rny,False,
n67brv6,Man I would hate to work with you honestly. Already so much toxicity in software engineering.,Sneekurs89,2025-07-31 17:42:05,7,cscareerquestions,t3_1me2rny,False,
n5ih40b,given the current market you got pretty good response rate tbh,PixelPhoenixForce,2025-07-27 22:41:36,248,cscareerquestions,t3_1mazrrd,False,
n5ihj7n,"That sounds realistic to me. I have a daily quota of applications to fill in, but I only keep track of positive replies. That gives me only a rough estimate of the percentages, but your experience is shared by many. You may have better response rates with ""prestige"" employers on your resume, but it's still not great.",HansDampfHaudegen,2025-07-27 22:44:03,50,cscareerquestions,t3_1mazrrd,False,
n5ipy5k,> Referrals: 3x odds of a first interview but didn’t change application or mid-process ghosting oddsreferrals only help you in scheduling that first call. it holds no weight once that call starts,besseddrest,2025-07-27 23:32:53,30,cscareerquestions,t3_1mazrrd,False,
n5ii2ji,"I’m confused you say you’re a 4 yoe mid level swe but when I look at your linkedin its all PM experience(with 3 yoe FT experience) which puts SWE to shame in terms of over saturation?If you want my anecdote, 1 yoe at unicorn, no opentowork on and ive gotten 50+ reachouts in a year + 44% interview rate for cold applications.",coinbase-discrd-rddt,2025-07-27 22:47:13,39,cscareerquestions,t3_1mazrrd,False,
n5ikiv1,Yes this is pretty normal,Illustrious-Pound266,2025-07-27 23:01:31,6,cscareerquestions,t3_1mazrrd,False,
n5ipvb4,"If you're mostly aiming for advertised fully remote roles, this is common if your resume is anything but perfect. Those get absolutely hammered by bots, automation, unqualified candidates, and fraud. It's a shrinking segment as well.Half or more of these roles are never advertised (like indeed and linkedin) and are filled through referrals and professional networks. If they're listed anywhere, it's only on the company's own site.",ben-gives-advice,2025-07-27 23:32:25,5,cscareerquestions,t3_1mazrrd,False,
n5ini3o,I got 10 interviews after about 470 applications. 2.5 yoe,cs_pewpew,2025-07-27 23:18:41,3,cscareerquestions,t3_1mazrrd,False,
n5iv2t6,"From your description of your career it seems like you’ve had like 4 jobs? Maybe more? With 4 YOE people want to see a little more commitment today, especially from a mid career hire. Stay at your next job for longer if possible",Nemnel,2025-07-28 00:03:13,3,cscareerquestions,t3_1mazrrd,False,
n5iz586,"Yeah that’s pretty much in line with my experience. 54 applications thus far, only one interview; the other two interviews are based on professional connections.HUUUUUUGE percentage of ghosting. Honestly, though, they’ll tell you right up front “we will be in touch IF WE THINK” etc. Like, automatic emails are expensive.This is the worst job market I have seen in 25 years as a SWE. Then again, I’m officially ancient now, so there’s almost certainly some ageism sneaking in there.And a lot of these jobs aren’t real, or they aren’t really hiring for the position. Like, you cannot tell me that you got hundreds and hundreds of applications and there was absolutely NOBODY who can do your bog-standard senior MEAN stack job with DevOps frosting, so you repost the same job a month later. They are building an applicant pool or harvesting data or building their LinkedIn follower list or something fucky like that.",RichCorinthian,2025-07-28 00:28:29,3,cscareerquestions,t3_1mazrrd,False,
n5il4jh,"My a senior at a big tech company, when I got this job a year ago coming from a start up, my interview rate was about 20%.For every 24 jobs I applied to, I got something like 1 offer.My strategy was mainly referrals, local companies, and then research to find companies doing what I want. Every application included a cover letter, and that helped a lot, but it slower.",justUseAnSvm,2025-07-27 23:04:58,5,cscareerquestions,t3_1mazrrd,False,
n62fmib,Most things we do is to automate stuff that someone used be or could be manually doing as a job. You are in the wrong line of work.,raven_785,2025-07-30 22:59:41,184,cscareerquestions,t3_1mdik4r,False,
n61v4ey,"Any place I've worked your ratings would almost certainly be the least of your worries. Does ""fired for direct insubordination"" mean anything to you?",Loosh_03062,2025-07-30 21:13:50,123,cscareerquestions,t3_1mdik4r,False,
n624gk4,"If you can handle being let go, refuse the assignment. I’ve done it in the past and being fired by a bunch of assholes I didn’t respect was a wonderful feeling.",Stock_Blackberry6081,2025-07-30 22:00:10,41,cscareerquestions,t3_1mdik4r,False,
n61vcm7,"It's hard to understand without knowing what the project is.Are you just streamlining efficiency? That is what software developers are hired to do. it's a good thing to be creating software solutions to automate things. That's literally, what we do. Otherwise, we'd all be using pen and paper still. and we'd have a lot more secretaries",bluegrassclimber,2025-07-30 21:14:55,35,cscareerquestions,t3_1mdik4r,False,
n624i95,"if it's that important as a dealbreaker to you, you can quit doesn't mean the company won't bring in 5000 people who doesn't consider it as dealbreaker who would happily work on it though aka if the company wants it done, then it will be done, with or without you onboard",NewChameleon,2025-07-30 22:00:25,12,cscareerquestions,t3_1mdik4r,False,
n63ozbg,"I think it's totally valid to have your code of ethics that you stand by, and honorable to walk away when asked to violate that code of ethics. IMHO, this is one reason it's important to save money and have a nest egg to fall back on. Does ""they'll do it anyway"" and ""5000 other people would love to take your job"" make it any less of an ethical dilemma? I don't think so. I think you should consider your financial situation and look for a new job. If the project is as big and significant as your writing suggests, then I believe that even if you spent the next month or two working on it, you'll probably have enough time to land a new job while not doing enough for the new project to compromise your morals. Of course, if you can afford to give them the middle finger, go for it! I actually did that at a job in the past lol.",Kyanche,2025-07-31 03:25:25,8,cscareerquestions,t3_1mdik4r,False,
n62hxe6,">Have you encountered this before?That is quite literally the whole point of our jobs: We get computers to do work fast, cheap, and reliably that would have to be done by a bunch of people otherwise.Those people are not going to be hired for that work, because we did our jobs.>What would you do?I write software.Do you have any idea how many coachman are no longer being employed because we have busdrivers?",okayifimust,2025-07-30 23:11:51,18,cscareerquestions,t3_1mdik4r,False,
n62b3ck,The company is going to lay those ppl off regardless if you do the project or not. You refusing is buying your peers an extra week of work :grinning_face_with_sweat:Continue business as usual,former_newb,2025-07-30 22:35:08,11,cscareerquestions,t3_1mdik4r,False,
n62ltml,Going to be honest with you if that is your view then you are in the wrong industry. Reality is 90% of our work is to improve efficiency and allow people to increase productivity with fewer people. Just you are seeing some that happen much more clearly.,timelessblur,2025-07-30 23:32:51,6,cscareerquestions,t3_1mdik4r,False,
n62592l,"I don't know what you've been tasked with, but if the project itself was immoral I'd find a new gig. You work in CS/tech though. Your career is going to be full of engineering and optimizing efficiencies. That inherently will disrupt roles at some point. Sometimes that opens opportunities for these people/yourself to do more rewarding things.",elc0,2025-07-30 22:04:16,3,cscareerquestions,t3_1mdik4r,False,
n5o4df2,I got out of salesforce development and am never going back. Too niche and you are hitching your wagon to the success of a single company for employment,SeaworthySamus,2025-07-28 20:07:16,79,cscareerquestions,t3_1mbqe68,False,
n5o4lwe,"So, the main issue with Salesforce is that you're probably not going to be doing proper ""application development"". In my experience, Salesforce is an ecosystem, a platform you'd be developing on. Salesforce has a proprietary java analogue called Apex, but it's mostly used to create integrations with your organization in the way of update triggers, web hooks, and basic API endpoints.So while you might end up hitting a lot of the core concepts of app development, it's all going to be Salesforce flavored. It's also going to be a lot of messing around with UIs, Salesforce is not exactly a developer first platform, it's very much a management / business people first platform.So yeah it's probably a pigeon hole, but it's a very high paying pigeon hole",FriscoeHotsauce,2025-07-28 20:08:22,29,cscareerquestions,t3_1mbqe68,False,
n5o1j51,"Salesforce is a niche subsection of programming. You can get bigger salaries as you specialize. You can also pigeonhole yourself out of a job. I can't tell you the best choice, but I can tell you I wouldn't go back to Salesforce after jumping to proper development.",drunkondata,2025-07-28 19:53:45,62,cscareerquestions,t3_1mbqe68,False,
n5o9hhe,Salaries can be high because it’s a smaller candidate pool. I personally wouldn’t build my skills around a single product/company even though salesforce is probably here to stay.,StandardBusiness9536,2025-07-28 20:31:11,12,cscareerquestions,t3_1mbqe68,False,
n5o7xsl,"Former Salesforce dev here. I also was reorganized into the role after spending years doing DevOps stuff. (Mostly server automation development with Ansible/Puppet/Chef. After we moved to the public cloud space most of that server automation work disappeared.)Pay was fine, but frankly I just didn't like working with the product that much. It's all largely Java-based, and admittedly I've never been a fan of Java. But even if you ignore the ""Java-ness"" of it... I frankly just don't give a hoot about Salesforce itself. Straight up just do not care, and I found myself incredibly bored with the work.It's a specialized role, but the good news is Salesforce is widely used across multiple industries. In many ways I would say it is similar to mainframe. Those industries that still run mainframes really need developers who know what they're doing on mainframe. It's just not something they teach in school, and companies are willing to pay for devs who know what they're doing. But it doesn't change the fact that it's very specialized.",RagnarKon,2025-07-28 20:24:00,8,cscareerquestions,t3_1mbqe68,False,
n5ob3w2,We had a restructure about a little over a year ago. I was a java back end developer and our team moved to Salesforce. We still worked on java back end stuff but the focus was Salesforce. Personally I absolutely hate it. It is niche and the whole platform is dumb for lack of a better word. I don't wanna rant but I've been searching for a new job ever since. Unfortunately in a bad market I have to put up with SF.,shadow2mario,2025-07-28 20:38:47,10,cscareerquestions,t3_1mbqe68,False,
n5odnf3,"As someone who was in swe then salesforce and now back to swe, it’s a career killer. Retire here or start fluffing your resume with what you actually want to do. I had to bust my ass and beg to get back into swe, getting interviews was so difficult and salesforce roles are hard to come by",wendiguzac,2025-07-28 20:50:43,8,cscareerquestions,t3_1mbqe68,False,
n5oflgu,"Those who live by the Salesforce, die by the Salesforce.",mkx_ironman,2025-07-28 20:59:59,7,cscareerquestions,t3_1mbqe68,False,
n5oby12,Salesforce can be great but you need to learn SAP integration with it to get high paying gigs.,burneremailaccount,2025-07-28 20:42:42,5,cscareerquestions,t3_1mbqe68,False,
n68zgbb,No honor among thieves,mscsguy,2025-07-31 22:29:59,191,cscareerquestions,t3_1mefing,False,
n69038r,"CS has been and is going to be a feast or famine field. Very much like law. The top echelon is going to make a lot of money and the rest are going to be making anywhere from ""eh"" money to struggling to pay loans.",TaxGuy_021,2025-07-31 22:33:22,180,cscareerquestions,t3_1mefing,False,
n69009x,Takes a while for stuff to take effect.,Servebotfrank,2025-07-31 22:32:55,92,cscareerquestions,t3_1mefing,False,
n692tpc,"The fewer employees they have the slower their products get shittier. Microsoft, especially, just seems to spend all their time extorting their existing customers by moving buttons around every few years. Apple and Meta just keep the ship going, the more they do the more money they waste! Nvidia probably has some productive work to do...",Navadvisor,2025-07-31 22:48:14,19,cscareerquestions,t3_1mefing,False,
n6958n6,"First time? \*Insert gallows meme gif\*It's been this way for decades. The same phenomenon was occurring in the 90s. The key point was that the dot com boom/bust helped obscure it from people's immediate view. Same thing happens in the late 00's; MBS crisis up front helps people ignore the same movement in the back. Covid in the early 20s; same offshoring/outsourcing in the back.Productivity will continue to soar to meet management demands as long as rents/bills need to be paid. There's always somebody younger/hungrier than you; time only moves forward, never back...",Harbinger311,2025-07-31 23:01:27,45,cscareerquestions,t3_1mefing,False,
n6905g7,">Literally all that tells shareholders is that we aren’t needed as much as we think we are, and outsourcing is working.You are just finding this out? This ""do more with less staff"" is the new normal. And I highly doubt that companies raking in record profits is gonna lead to them thinking they need to hire more.",Illustrious-Pound266,2025-07-31 22:33:42,48,cscareerquestions,t3_1mefing,False,
n69ax5b,They're not making record profits in spite of the layoffs but because of them,Anxious-Possibility,2025-07-31 23:33:04,13,cscareerquestions,t3_1mefing,False,
n6944vv,"Congrats, you now realize the power of monopolies/duopolies. The big tech cos now have little to no competition so they can jack up the prices and crank down the quality with little to no repercussions. That’s why anti monopoly enforcement that Lina Khan was starting on. But yeah….. Consumers lose, employees lose, capital wins.",ByeByeBrianThompson,2025-07-31 22:55:23,41,cscareerquestions,t3_1mefing,False,
n693bfx,"Record profits? I’m seeing record revenue from Microsoft, which is to be expected as everyone is using cloud compute like crazy right now. They returned a lot of that money to shareholders, $3.65 per share which will keep investors happy and hopefully ignoring that planned ~$80billion capex for the year. The layoffs are to offset the capex as Microsoft pivots to be more of a cloud compute company.",squeeemeister,2025-07-31 22:50:56,14,cscareerquestions,t3_1mefing,False,
n697gp2,"Rich gets richer, middle class and lower class gets poorer. Typical late stage capitalism.",pcsx92,2025-07-31 23:13:50,7,cscareerquestions,t3_1mefing,False,
n5z743j,I would recommend speaking to a therapist. These are challenging emotions to deal with.,Substantial_Health_5,2025-07-30 13:41:14,118,cscareerquestions,t3_1md6v3l,False,
n5zl7m6,Step 1 start working out. Seriously. No excuses just start today and work out hard. After a few weeks reassess your career situation.,PresentationOld9784,2025-07-30 14:51:07,37,cscareerquestions,t3_1md6v3l,False,
n60v496,"Make it a practice to invest 10% of your time or invest 10% of your income to sending your resume to new companies or clients. Build a system of marketing yourself for example sending 10 job applications a week. Whether you do it yourself or pay someone else to send the job applications, having other job options would keep you secure. If you have more time, learn another skill that you can make a craft or ""retirement job."" Personally, I trained weightlifting and martial arts and while it's my hobby now, I see myself maybe teaching this when I get older. I also explore digital marketing in the form of blogs, email, social media and video, so I could technically start a business or digital marketing agency or consultant if push comes to shove. Once you're comfortable, try your hand selling something based on your expetise so you have a test business. Your therapist, according to your comment responses is saying ""your feelings are valid"" and I'm reading it as since it's valid, your brain is probably detecing signs that you're going to actually become destitute. There are signs and writing on the wall that's why you're screaming internally and theres something you need to do about it. And I think you need to take it seriosuly. Be around people solving the problem. Be around people in higher positions within your career track. Be around people who are more successful and ask for their advice. Then do something. My suggestions are just examples. As I've had that thought since I entered the marketplace.",kevinolega,2025-07-30 18:24:08,4,cscareerquestions,t3_1md6v3l,False,
n5znvka,"No don’t do that. You might not know me, but I’m a fellow human being that wants the best for you and everyone going through similar situations.First thing is first, professional help will do wonders. Go to the nearest therapist and show them this post, see what they have to say.Those feelings, most people around you have encountered them. For some is easier to move on for others like you and I they linger. “Late 30s” this idea of being late is dumb, we can start and end at any point so you are never late. Do you like sports? Try practicing one, it will help you relax, excersice, and socialize, all in one. If not, pick one, and if you are still undecided listen this random comment and try tennis or pickleball, they are individual so you won’t be overwhelmed.Good luck stranger, sending you empathy and a hug.",CSguyMX,2025-07-30 15:03:45,8,cscareerquestions,t3_1md6v3l,False,
n5zgzm2,"Therapy, seriously. Your employer likely has an EAP that can set you up with a therapist for a few sessions for free and you can figure out where to go from there. And/or talk to your GP about meds. This isn't about CS, it's depression and/or anxiety talking.",anemisto,2025-07-30 14:30:54,3,cscareerquestions,t3_1md6v3l,False,
n60xmee,Keep procrastinating and see how well that works out for you.,Ok-Attention2882,2025-07-30 18:35:47,2,cscareerquestions,t3_1md6v3l,False,
n5ztkrr,Manifest destiny my friend. If you focus on this hard enough if will almost definitely happen. Try asking yourself what if that doesn't happen and you're absolutely fine?,crossy1686,2025-07-30 15:31:51,1,cscareerquestions,t3_1md6v3l,False,
n625g2z,Real,russiakun,2025-07-30 22:05:17,1,cscareerquestions,t3_1md6v3l,False,
n661tmn,"It's pretty easy to fall into a mental hole.In my case, I THINK it is how I feel, but if I properly stretch/exercise, and correct my posture, my outlook on life embarrassingly changes from ""misery"" to ""excitement"".I'd claim that this fact is awful, but I'm in ""happy"" mode, so it's just embarrassing to admit! This pattern started for me ever since I first started trying to start my career (no progress since then, painfully enough).Physical pain and fear/uncertainty can and will warp or suppress your willpower. We are very susceptible to oppression, be it external or unintentionally self-inflicted. Still relevant to the sub since it has ""career"" in the name, though I could be wrong about anything.",abandoned_idol,2025-07-31 14:07:32,1,cscareerquestions,t3_1md6v3l,False,
n69pb5p,"This post has two problems in one so I'll address each one separately.> Every single day I worry about losing my job and it makes me procrastinate endlessly. I always meet my (vague) deadlines but everyone around me can see me spend days, often weeks not typing a single letter or staring at my phone.> And it’s because my work is dull, vague and I am terrified of getting something else. I can get no references, everyone probably hates me and I have no other skills than being mediocre at coding.I can relate as I have the same fear. I think this is a healthy fear that one should directly address. My advice is to reduce costs and save so that you can live off of a decade from your savings if you lose your job. Work on your technical skills, interview constantly and get job offers so that you always have other options if you get laid off.> Everyone keeps harping about trades or jobs involving interacting with people and I am bad at both.I would stick to CS.> I am in terrible shape, am on the spectrum but not enough for psychologists to care about it, so I am basically someone who has no friends and no relationships in his late 30s. Should I through myself off a bridge?This is a separate mental health issue. Get in shape. Work on getting a relationship. Talk to a therapist or read a self-help book. I recommend [this book](https://www.amazon.ca/How-Be-Miserable-Strategies-Already/dp/1626254060)",BarracudaPersonal449,2025-08-01 00:56:14,1,cscareerquestions,t3_1md6v3l,False,
n5ff16h,You need therapy. Most imposters don’t last 15 years.,CodeCody23,2025-07-27 13:15:11,192,cscareerquestions,t3_1malw4j,False,
n5ffctt,Probably work on solving the imposter syndrome instead of upending your whole career.,Firm_Bit,2025-07-27 13:17:08,61,cscareerquestions,t3_1malw4j,False,
n5ffsw7,Have you thought about moving away from contract work?,KhonMan,2025-07-27 13:19:49,19,cscareerquestions,t3_1malw4j,False,
n5g4st5,"once you hit a certain level of technical skill, what moves you forward isn’t just being “good at code” anymore. I’ve had to learn this the hard way myself and I say this as someone who used to be extremely shy and mostly kept my head down hoping the work would speak for itself.from my observation and also from my own experience over time, I realized the engineers who stood out and unlocked those higher-leverage, better-paying, more fulfilling roles were the ones who had also built non-technical leverage: they knew how to tell the story of their impact, they built trust quickly with new teams, managers, and stakeholders, they could navigate ambiguity and influence decisions, not just write codeThat kind of soft skill isn’t just for managers. It’s essential for senior+ ICs too, and something which helped me catapult my career as well",SomeRandomCSGuy,2025-07-27 15:34:45,10,cscareerquestions,t3_1malw4j,False,
n5g1zxe,"What makes you think your imposter syndrome is career related? As someone who also has it, I hate to tell you it’s just inherent to you. You need to work on your anxiety and ability to let go.",Zimgar,2025-07-27 15:20:38,3,cscareerquestions,t3_1malw4j,False,
n5gb2j5,If you managed to work for 15 years you must be doing something right.,Alex-S-S,2025-07-27 16:05:41,2,cscareerquestions,t3_1malw4j,False,
n5lrfx0,"first up congratulations for making it to the 15 year mark, It shows a lot of persistence to be in this position. You need to find a project that sparks joy. It could be within or outside of your workplace. Win there and bring that energy to your actual workplace. Don't worry about getting into middle management, AI will be a wrecking ball for them. It's the best time ever to be an IC. Good luck!",finfun123,2025-07-28 13:20:40,2,cscareerquestions,t3_1malw4j,False,
n5qsia2,Sounds like you feel trapped in your current job. You aren't. None of us are ever as trapped as we sometimes feel. Make the changes you need. You aren't a tree- Go somewhere else!,SergeantPoopyWeiner,2025-07-29 05:26:45,2,cscareerquestions,t3_1malw4j,False,
n5g7hfz,"since SIX whole different people in this thread have spelled it incorrectly, I feel compelled to say it’s “impostor”, not “imposter”.Anyway, I too have impostor syndrome",Impressive-Bass7928,2025-07-27 15:48:01,4,cscareerquestions,t3_1malw4j,False,
n5femc9,You could teach. You could try sales. You could move into IT roles.,robocop_py,2025-07-27 13:12:44,3,cscareerquestions,t3_1malw4j,False,
n5bfro4,I get a lot but usually for bad jobs. Contract roles or random no name companies,NoNeutralNed,2025-07-26 19:51:25,137,cscareerquestions,t3_1ma2cms,False,
n5bl8in,A TON for early stage startups that the recruiter thinks I would be awesome at because of my startup experience at places like JP Morgan,pewpewpewmoon,2025-07-26 20:21:25,81,cscareerquestions,t3_1ma2cms,False,
n5cnlnw,Section 174 write off for R and D just went back to immediate (15 year amortization for offshore though which is great),Haunting-Traffic-203,2025-07-27 00:03:50,12,cscareerquestions,t3_1ma2cms,False,
n5byrj6,"It’s steadily been increasing for me since the start of this year, 2025. I think we’ll have a September surge, maybe not as big as it’s been in year past, but hopefully more opportunities coming down the pipeline. My company has been hiring across a number of roles all year long.EDIT: I should add I have been employed this entire time. I don’t think people unemployed get as much recruiter activity on LinkedIn",thatgirlzhao,2025-07-26 21:35:53,13,cscareerquestions,t3_1ma2cms,False,
n5bhh33,Somehow just zon recruiters in my inbox.,hustle_HR26,2025-07-26 20:00:46,7,cscareerquestions,t3_1ma2cms,False,
n5bjhcr,i’ve been getting a lot since the beginning of this year,ASM1ForLife,2025-07-26 20:11:44,5,cscareerquestions,t3_1ma2cms,False,
n5cysj7,"Meta, Amazon, nvidia, and doordash DMd me this week for L5 roles. We are so back, baby.",CountyExotic,2025-07-27 01:16:07,21,cscareerquestions,t3_1ma2cms,False,
n5c5ypg,What kind of tier place do you work?,Fun_Highway_8733,2025-07-26 22:17:15,6,cscareerquestions,t3_1ma2cms,False,
n5cfa77,Not at all.,popeyechiken,2025-07-26 23:13:26,2,cscareerquestions,t3_1ma2cms,False,
n5d801v,"For every legit and even remotely appropriate message, I get 10 that are unauthorized 3rd party recruiters or just scammy as fuck in some other way.",RichCorinthian,2025-07-27 02:16:18,2,cscareerquestions,t3_1ma2cms,False,
n61i75q,"It's exactly what you said, high competition or high selection barriers, there is no easy market anymore, I see this in embedded systems.",Which-Butterfly-880,2025-07-30 20:14:02,30,cscareerquestions,t3_1mdfnru,False,
n61d590,"AI/ML is simultaneously in demand and  inundated with hundreds, if not thousands, of resumes. Not only that, a master's or a PhD is majority of applicants, even if you don't need them for many roles.",Illustrious-Pound266,2025-07-30 19:49:58,87,cscareerquestions,t3_1mdfnru,False,
n61syu2,"You want to look at industries that handle sensitive data and are mired in compliance. Health, defense, ~~insurance~~, etc...",bearicorn,2025-07-30 21:03:31,20,cscareerquestions,t3_1mdfnru,False,
n624gtn,Plenty of desktop development positions in defense if you got a clearance.,RapidRoastingHam,2025-07-30 22:00:13,12,cscareerquestions,t3_1mdfnru,False,
n61wlvv,"When people say webdev do they mean frontend? Because if you're talking about all the stuff that goes into making a true full stack app then it makes absolutely no sense, you have DBAs, Sysops, NOC, Devops, Cybersec, Backend, Data/BI, and like probably 10 more teams in big projects and they're all kinda web dev aren't they?",disposepriority,2025-07-30 21:21:00,8,cscareerquestions,t3_1mdfnru,False,
n6176kf,"Web dev is such a massive area with so many jobs out there, and honestly, I still feel like it's the *least* saturated out of all the areas. Especially frontend or fullstack with a bit more focus on the UI, a lot of companies are still willing to take a chance on you even if you’re pretty new or just know the basics...That said, I could totally be talking out of my ass here, so feel free to correct me if I’m wrong.",Sad-Sympathy-2804,2025-07-30 19:21:22,40,cscareerquestions,t3_1mdfnru,False,
n625f7b,"graphics programmer here with 2 years of experience (1 in graphics) and a masters. In Canada. Thankfully I have no problem getting interviews (started applying on the side last month, have an average of 1.5 interviews a week). So I don't really relate to all the doom on this subreddit. I don't grind leetcode but I revise graphics techniques and linear algebra.",Wandering_avali,2025-07-30 22:05:10,5,cscareerquestions,t3_1mdfnru,False,
n62am83,Embedded is in demand for experienced engineers. But you’re not landing a role with a CS degree and microcontroller projects.,ViveIn,2025-07-30 22:32:34,2,cscareerquestions,t3_1mdfnru,False,
n62qopc,There’s almost zero demand for cybersecurity role. Super niche and only hires experienced dev + PhD,2dum2dieUwU,2025-07-30 23:59:41,2,cscareerquestions,t3_1mdfnru,False,
n632inv,"I see bunch of rendering software engineer (opencl, vulkan) convert into GPGPU engineer (CUDA). And they are doing pretty well at the new job. And the skill is demanded and people need some time to build it",dayeye2006,2025-07-31 01:09:07,2,cscareerquestions,t3_1mdfnru,False,
n5sll1k,"70 applications per day? There probably aren't that many Dev jobs coming out lol. I am a recent graduate and I managed to land a job in 4 months. On average I did 2-3 job applications per day. Cover letters, sometimes change the CV, answer their application questions and explain what I have worked with and how it can be relevant even if I don't exactly know their tech stack. The job I got was for a tech stack I never worked with.In total I had 3 interviews but I was preparing hard for them, spending days learning about the company and preparing questions that they may ask me (I cheated during the interview I had bullet points on the side so I can remember stories etc.). They don't want you to be professional especially for grad roles. They want to know that you are interested in their company (show your research) and tell them what you have been working on and learning. Keep your github profile public and show your repositories they want to see you are doing something.Another thing that helped was looking at some leetcode easy questions, Iearned some very simple yet important patterns that they didn't teach me at uni and I am usually able to solve the pair programming coding interview parts. During such interviews show your thinking, break down the problems, find a solution iteratively.Was I lucky? Probably, but luck is where opportunity meets preparation.",BulkyTrainer9215,2025-07-29 13:58:24,42,cscareerquestions,t3_1mc96xi,False,
n5smcpq,"If you are sending out 50-70 applications today, I know that you are using the same basic-ass resume and applying to jobs you aren't a fit for. That's a ludicrous amount",purrmutations,2025-07-29 14:02:17,30,cscareerquestions,t3_1mc96xi,False,
n5u9y2w,"50-70 applications per day seems like not a lot of bang for your buck. I'd focus in more on specific roles using specific skillsets, then have templated, tailored resumes for those roles. Right now, your resume seems a little scattershot. As an example of what I mean, in your language skills section you have Java listed first, which tells me you'd be most comfortable in Java, but none of your projects or experience mention Java anywhere, so I don't have much to go off of regarding how skilled you actually are in Java other than current coursework from mthree, which doesn't tell me much.I was in a similar boat as a new grad, and it took me 10 months to get a job (2 months after graduating). I would have 2-3 resume's with the same or similar information, just re-ordered to fit the job description. Is the job a front-end position using React and TypeScript? You better believe I'm putting that first on the resume. If the job is enterprise Java, then Java, Spring, JUnit are all going to bubble up to the top. Normally I'd suggest having a cover letter too, but it just so happened that all my callbacks came from applications with no cover letter, so your mileage may vary. Last thing I will absolutely recommend is to **bold** the **relevant skills** in your **experience** and **personal projects**. So things like **TypeScript, Tailwind, etc.** should be bolded. HR people don't have a lot of time to sift through applications, so the easier you make it for them to find the technologies they need to see the better. Don't go too crazy with it though. If around 15% of the text in your bullet points are bolded, I'd say that's good. That's just the path I took though, there's other ways to go about this. My job hunt was from November 2024 to this month and took about 300 applications sent total , but I got the best results most recently when I was only sending 2-3 applications out per day to places I was 100% sure wanted new grads with little to no experience. I'd also like to know what your application-to-interview ratio is. For me and the people around me, it was normal to get 1 interview for every 50 applications or so. If you're not hitting that (or anywhere close to that I'm guessing) then you might be applying to places too liberally. That's all I've got! Good luck, going that long without a job is rough. P.S. if your personal projects fall on the gaps in your employment, it might be worth putting the timeframes you worked on the projects. That way it would at least show you're doing something between your internship and mthree, but idk how effective that would be.",Mason_Luna,2025-07-29 18:39:52,8,cscareerquestions,t3_1mc96xi,False,
n5un6hv,"> remote or hybrid Brother you’re effectively a fresh out of school junior fighting for the most competitive roles. It’s very unlikely you land one of these - full time in office for a bit of experience, then transition.Also your skills list is too long for your experience.",claythearc,2025-07-29 19:42:10,7,cscareerquestions,t3_1mc96xi,False,
n5u8s72,"Where are you located? Generally companies aren't hiring outside of local talent, because they have no reason to pay for relocation when there's a surplus everywhere. If you're trying to find jobs outside of your current location you're not gonna have an easy time.",CarinXO,2025-07-29 18:34:27,4,cscareerquestions,t3_1mc96xi,False,
n5tdf39,Well Ill say this. Either get a phd or do a startup.,Relative_Baseball180,2025-07-29 16:10:56,7,cscareerquestions,t3_1mc96xi,False,
n5wsjih,"Like everyone else said, focus on the quality of you applying vs mass shotgun applies. Don’t discount applying to gov jobs (state/local) as they sometimes go under the radar. On LinkedIn search using keywords for “Hiring”posts as they often link to the direct company site hiring form. Get your resume checked out at the r/EngineeringResumesIt’s a rough market so don’t give up, all you need is a little luck and preparation!",Pikarat_Nova,2025-07-30 02:32:13,3,cscareerquestions,t3_1mc96xi,False,
n5xjpd1,You did an unpaid internship for 10 months? That is absolutely insane.,litLikeBic177,2025-07-30 05:50:49,3,cscareerquestions,t3_1mc96xi,False,
n5s98yu,Join the uscg,Ok_Economy6167,2025-07-29 12:51:20,2,cscareerquestions,t3_1mc96xi,False,
n632bg3,"My side projects are getting better at golf and bowling, going to concerts, and spending time with my family. I have no desire to tech work after hours",nimama3233,2025-07-31 01:07:55,127,cscareerquestions,t3_1mdmbzg,False,
n62prke,I don’t. And I’ve met only one colleague who has  time and energy for side projects.,Glum_Worldliness4904,2025-07-30 23:54:31,90,cscareerquestions,t3_1mdmbzg,False,
n62p1i9,"Just a hunch so idk, but maybe you should try to find yet another hobby that seems less mentally taxing, thus affording you that R&R that it seems you need. Then you won't feel burnt out for the graphics hobby. Granted, it's trying to make time for two hobbies rather than one.Also, exercise.",paxmlank,2025-07-30 23:50:29,15,cscareerquestions,t3_1mdmbzg,False,
n62sxh9,"Most working people work plenty at work without working at home on work things that aren't work. Work.*honest advice is to spend that ""side-project"" time looking for another job.. at least now you have some professional experience and references, it might help you have an easier time finding something different. Maybe not.. but maybe.",runhillsnotyourmouth,2025-07-31 00:12:31,30,cscareerquestions,t3_1mdmbzg,False,
n62v307,"The secret isn’t energy - it’s momentum. Start with 10 minutes, even if it’s just tweaking a pixel shader or doodling ideas, and suddenly you’re in the zone. Passion projects thrive on tiny wins.",alpinebuzz,2025-07-31 00:24:59,23,cscareerquestions,t3_1mdmbzg,False,
n62tadm,The only answer is adequate usage of stimulants(caffeine),KhorseWaz,2025-07-31 00:14:34,11,cscareerquestions,t3_1mdmbzg,False,
n62zjsi,"I don’t have the time or energy for that I don’t even like spending too much time troubleshooting mod issues with my games outside of work. Spending 8 hours a day on stuff related to software engineering is enough If you want to do side projects, great. But you don’t have to. There’s a vocal minority of devs who love coding so much that they spend a good chunk of their free time on side projects, and are very loud about it on Reddit. but that doesn’t mean it’s something you have to do. I love coding and love my job, but if it was what I did all day even after work I’d go nuts, other people want to program stuff that they’re interested in as a hobby.Do what makes you happy, but it’s fairly common for people to do less of their hobby in their spare time if they’re also paid to do it.",epicfail1994,2025-07-31 00:51:28,6,cscareerquestions,t3_1mdmbzg,False,
n634k66,"Just got to do it. Arrive home, set a timer, even if it's just minutes, then over the year that makes a *big* difference",MathmoKiwi,2025-07-31 01:21:10,9,cscareerquestions,t3_1mdmbzg,False,
n62zzny,"Whenever I am bored. Otherwise, I don't really consciously make time for it. I just do it when I feel like it. I don't force myself to do it.",Illustrious-Pound266,2025-07-31 00:54:04,3,cscareerquestions,t3_1mdmbzg,False,
n63ki89,"For me personally, I get energy via exercise after finishing work",BarracudaPersonal449,2025-07-31 02:56:17,3,cscareerquestions,t3_1mdmbzg,False,
n5w041w,"Few things after looking at your linked resume:\- I'd take ""Junior"" out of your first title. I think here's where you can be a bit ambiguous and say you worked in a software developer capacity but not specify or limit yourself to their perception.\- Maybe I'm just dumb but I basically don't understand what any of the projects under Key System Implementations do at first glance. Recruiters with even less technical experience and patience, might glaze over it or hit the reject button when looking for buzzwords. I'd either try to simplify the language or concepts of what you actually delivered or just tailor this section to specific types of jobs (like how in these projects you used Python etc. to deliver).\- Probably remove the EE degree in progress as it's not really relevant or use it in your EE-only resume.\- The undergrad teaching assistant role sounds like fluff, and no employer really cares about how many assignments you graded etc. you should probably write something along the lines of what you taught and areas of focus you excelled at teaching like red-black trees or something etc. Or try and take a look at other undergraduate TAs on Linkedin or something and see what they wrote. To me, at least it seems very ""I want a TA job.""Last point is you probably want to tailor your resume to each of those roles you listed that you're applying for. At best this looks close to an ""EE major that used to be CS looking for an internship/jr role"" to me, but has some mixed signals so you'd want to orient the resume better towards those kinds of jobs if so.",terrany,2025-07-29 23:47:38,35,cscareerquestions,t3_1mcqr3o,False,
n5vx10r,"Might be worth searching for jobs with your niche skills you'll have better luck when you're one of the 10 people that knows how to do that. Generalist Python, C++... are extremely oversaturated",Plus-Anywhere217,2025-07-29 23:30:52,50,cscareerquestions,t3_1mcqr3o,False,
n5wf39a,"Hey man, just wanted to say hang in there. Thought I’d share my wife’s story to give you some hope.She got laid off back in 2023 after three years at a local company. It was really tough finding a new job, especially since she’s on a visa. A lot of conversations ended early because of that. She didn’t get many interviews, and the ones she did get early on didn’t go too well. But she kept grinding LeetCode and prepping. She finally landed an interview with Amazon in February 2025 and cleared it.It took her a year and a half after being laid off to land this job. Just wanted to share her journey in case it helps you keep going. You’ve got this.",RepresentativeMoose,2025-07-30 01:13:15,13,cscareerquestions,t3_1mcqr3o,False,
n5vw69g,Could NYC be the issue as there are not as many hardware related industry there as in Silicon Valley? Maybe check out some opportunities there.Hang in there.,fiji007,2025-07-29 23:26:16,27,cscareerquestions,t3_1mcqr3o,False,
n5vwkhn,"I feel you, man.",Buri_north,2025-07-29 23:28:25,12,cscareerquestions,t3_1mcqr3o,False,
n5vwnf8,"I’m in the exact same scenario. 2.5YOE, not a single response. I can’t know what I need to change if I can’t get a single response.Send your resume here, maybe there’s something wrong.",starburst-dev,2025-07-29 23:28:52,8,cscareerquestions,t3_1mcqr3o,False,
n5w2abl,"Improve resume (imo also use a better format) - someone else wrote up a pretty detailed reply. You’re in NYC which is a huge plus already - Python/C++ is really amazing to have for investment banks and trading firms which there are plenty of in New York.> I'm 27 and feeling like my career is over before it really began. I'm open to any and all brutal feedback.Absolutely not, and this is coming from someone who has less experience than you and had to go through something similar with unexpected layoff and go a stretch without landing something. It sucks but block the noise, focus on yourself, and keep trying. Wish you nothing but the best!",squeakyjamesbond,2025-07-29 23:59:47,3,cscareerquestions,t3_1mcqr3o,False,
n5vy6va,Post on LinkedIn consistently idk but you have good experience,DeadStarCaster,2025-07-29 23:37:08,2,cscareerquestions,t3_1mcqr3o,False,
n5x1crm,"I'm sorry to hear ur struggles. I just finished being laid off for 7 months and I struggled so much.I wish I had better advice, but step1 is clearly something is off with your resume. At this stage in your search I would pay someone to help you craft a resume and see if it helps. I don't have any recommendations on that but you need to find a way to get any form of interviews.I saw in your other post you only want NYC or remote. I was close to moving out of state too but I did hang tight and ultimately find something local. You may need to accept it's time to temporarily leave and come back the second you can.You can apply to jobs right when they open at 7-8am and again at 12-1pm that helped me I think.Messaging every single LinkedIn and making a post helped me get some extra interviews.I get spammed by this WITCH company that claims to pay 60-65k/yr and makes you move anywhere in the USA 2 year contract. if you want a referral for that DM me I can try to get u a phone call.I really do wish you the best, it's not a reflection on you why you're here.. but you have to find a way to dig yourself out. I'm rooting for you.",Super-Blackberry19,2025-07-30 03:28:51,2,cscareerquestions,t3_1mcqr3o,False,
n5yk5i8,Learn Java and get good enough to interview in it in a month. Tons of NYC banks are always hiring Java developers but they need Java experience out of the box. They won't interview a Python developer.,csanon212,2025-07-30 11:23:10,2,cscareerquestions,t3_1mcqr3o,False,
n5rc33i,">But he cannot do anything about it.Go above his head, or leave, and let the people above him know why.Life is too short.",okayifimust,2025-07-29 08:28:15,84,cscareerquestions,t3_1mc5iav,False,
n5rj5cw,Sounds like Bob is doing whatever he can to push out the new guy in an effort to keep his job.,Unintended_incentive,2025-07-29 09:36:53,50,cscareerquestions,t3_1mc5iav,False,
n5tqflf,"Let me guess, Bob has been with the company / project since the early days, possibly even the inception? It's not uncommon for people like that to feel a massive sense of ownership and entitlement over a project and not be able to let go of control. I have seen it many times in the industry. Unfortunately in my experience it's unlikely the situation is going to change unless something drastic happens like him leaving or the scope expanding beyond the point where he can keep track of everything.",kisielk,2025-07-29 17:11:01,8,cscareerquestions,t3_1mc5iav,False,
n5rk29p,"Don't bring up Bob in your first meeting with the VP unless he specifically asks. You should be working through your manager. If he says it's out of his hands, that's completely BS. Push him to ask what you can do to get this ironed out because it's ""creating a hostile work environment"" - not just for you but others as well.",RelationshipIll9576,2025-07-29 09:45:34,24,cscareerquestions,t3_1mc5iav,False,
n5se73h,"I am exactly in the same situation with a principal engineer who behaves exactly the same way, my manager cannot do anything.",NoWrongdoer2115,2025-07-29 13:19:13,4,cscareerquestions,t3_1mc5iav,False,
n5td4rz,"Don't complain about Bob. Just assume that they already know and ask ""What's the deal with Bob?"". Maybe you will get some insight.Some developers are insufferable. He might be the last person who knows a subject matter and management doesn't want to lose the knowledge.",TurtleSandwich0,2025-07-29 16:09:36,4,cscareerquestions,t3_1mc5iav,False,
n5rb7o8,"Bro you should document everything, collect feedback from others (anonymously is fine too) and go to HR. If even a VP tells him that he literally is being an asshole, it will be a slam dunk and they will get rid of him.I'd suggest mentioning that otherwise you'll come back with a lawyer to deal with what is characterized harassment.",Bobby-McBobster,2025-07-29 08:19:42,16,cscareerquestions,t3_1mc5iav,False,
n60clpx,Fight him in the parking lot and assert your dominance.,Apprehensive_Bee1849,2025-07-30 17:00:43,3,cscareerquestions,t3_1mc5iav,False,
n5suzgd,"Have you tried talking to him straight up? Schedule a 1:1 with him and tell him everything you’re saying here. Keep it on the facts and how’s it’s impacting your ability to get work done. Start the conversation acknowledging how smart and talented the engineer is and how you want to learn from them but their communication style is making it difficult for you. If it continues, it’s probably time to get HR involved. That will scare everyone straight, just be prepared to have a ton of documentation and examples of this principal engineer’s behavior. Too many assholes in this world and very few people with spines to do something about it.",sneak156,2025-07-29 14:44:33,2,cscareerquestions,t3_1mc5iav,False,
n5t8fuj,There is strength in numbers. Talk to the other people being bullied and see if they are willing to stand up with you.The usual reason why this is tolerated is that management feels they need to keep the bully on staff. If you and the others start going through the commit histories then you can build a case to management that the company can function without Bob. I'm sure he is doing this to protect his position so if you can strip that away then he'll have no defense.,rmullig2,2025-07-29 15:47:52,2,cscareerquestions,t3_1mc5iav,False,
n5ewtfg,"> it seems like 95% of people are here for the US name it providesThey're literally all there for the OPT visa.On dropping out, what would that achieve? You should apply to jobs and drop out if you find one, not just drop out for no reason.",Bobby-McBobster,2025-07-27 11:04:03,108,cscareerquestions,t3_1mai8xh,False,
n5fq499,"I dropped my masters for a job, and I don’t regret it because I needed the money. May go back sometime, but generally time in the field tends to outweigh the extra degree unless you’d like to do a research position or something highly specialized. I still hit senior in less than 4 years, though your mileage may vary.",no-sleep-only-code,2025-07-27 14:18:31,19,cscareerquestions,t3_1mai8xh,False,
n5g1nct,"I have 2 masters degrees, I typically recommend no one gets their masters if they have to pay for it but you’re already enrolled so I will give you some additional advice instead. You can apply for Graduate level internships which can help you get that resume experience and will have a smaller competitive pool compared to undergrad internships. You can and should get involved in research because that’s such a low bar to get involved in and will immediately add experience to resume and will be a good bonus if you get published and graduate level internships will like this. There is a lot of good paying science based computer science jobs (especially in defense since you are domestic) that will see that as a big plus. Also I think finance also likes people with a more academic background since they do a lot of advanced mathematical analysis for trading strategies. So if you just want to be building apps then maybe drop it? If you want to do something that requires at least a masters like ML/AI, data science or something more math focused then it could be worth it. If you decide to stick with it you should apply to national labs for internships and you can probably get those internships pretty easily as a domestic graduate level student. But to “seal the deal” you should really get into research",WeastBeast69,2025-07-27 15:18:52,13,cscareerquestions,t3_1mai8xh,False,
n5iszba,MS resets the clock. You are no longer 6 months unemployed. You are a student with a second chance. Apply to internships and beef up resume.,BagholderForLyfe,2025-07-27 23:50:36,13,cscareerquestions,t3_1mai8xh,False,
n5f35c3,"If you’re not enjoying the program and don’t have an end goal in mind (eg, applying to PhD programs), then go ahead and drop it. Like you said, cs master programs are just cash cows for universities selling a dream to international students.",No_Try6944,2025-07-27 11:55:51,28,cscareerquestions,t3_1mai8xh,False,
n5glk9n,"The benefit of an MS in your situation is that you're counted as a student for FAANG hiring. This means you're more likely to at least get an interview callback. If you get an internship that is successful, you can probably convert that easily into a full time role and drop out of the MS program. If you want something specialized (AI, PhD) there's value in sticking to grad school. Otherwise, yeah an MS is just a ticket to the US for Indian / Chinese / foreign students",jigarthanda-paal,2025-07-27 16:56:36,13,cscareerquestions,t3_1mai8xh,False,
n5jh8xo,"Unless you're actually hellbent on getting internships this time, the masters will be a waste.",GratedBonito,2025-07-28 02:21:44,4,cscareerquestions,t3_1mai8xh,False,
n5kjxow,"Currently finishing up a MSCS at USC and have been extremely unimpressed with their curriculum and as far as the ""Trojan network"" is concerned, it's nearly non-existent outside of California.I could list quite a few issues (international student cheating rings are atrocious in ai track courses) but all in all every person domestic who I have talked to has said that they regretted going to USC for their MS instead of another school.A MS there is now over $100k, it is NOT worth it if you are paying out of pocket when most other options range from $15k-$35k.",Unlikely_Shopping617,2025-07-28 07:31:42,5,cscareerquestions,t3_1mai8xh,False,
n5hjsph,I would. In this profession the bachelors and experience is enough. I know it’s hard breaking in but you need a job not masters debt.,Gold-Antelope-4078,2025-07-27 19:45:56,2,cscareerquestions,t3_1mai8xh,False,
n5fsyvs,"The network is what you make of it. I will say, many Trojan alumni take the network VERY seriously. They instill the ""pay it forward"" ideal so much that it becomes instinctual. I just finished my masters last December and had a job lined up. When I started, I found out 3 of the 10 new grads are USC alumni. I've worn USC merch around the office some days and have heard ""Fight On!"" from several other people as well (including our COO). That sort of recognition is invaluable IMO.",IM_Pengu,2025-07-27 14:33:37,2,cscareerquestions,t3_1mai8xh,False,
n5h3gkp,"I only did a quick scan, is this even in US? none of what you said makes sense, half of me even thinks this is some ChatGPT generated story why is HR in command of technical things? and why does HR decide who gets to stay and who to fire? that's engineering manager's job",NewChameleon,2025-07-27 18:23:22,109,cscareerquestions,t3_1matat4,False,
n5h9ohr,I hope you have been applying at new jobs for the last 3 months? As you won't survive this company long with a manager who doesn't have a clue what you do and is likely to fire you soon because of it.,UnluckyAssist9416,2025-07-27 18:54:28,9,cscareerquestions,t3_1matat4,False,
n5ho9qh,"You're in a complete clown show masquerading as a professional environment. HR's claim about building HIPAA-compliant enterprise software in a year with two non-developers is either complete fabrication or they bought something off-the-shelf and called it custom development. Either way, they have zero understanding of what they're asking you to do.The red flags are everywhere: contract misrepresentation, title bait-and-switch, absent management, conflicting directives, and now performance criticism based on fantasy benchmarks. You've already delivered a 75% efficiency improvement in three months, which proves your competence despite their dysfunction.A service like Applyre might be helpful for finding actual development roles where technical decisions are made by people who understand technology. This law firm treating you like a code monkey while expecting miracles is not normal.3 months at a toxic workplace won't hurt your resume, especially in tech where short stints are common. Frame it as ""seeking a role focused on software development rather than mixed responsibilities"" and emphasize the automation project you delivered. Most hiring managers understand that some companies are disasters and respect candidates who recognize bad situations quickly rather than suffering through years of dysfunction.",Significant_Soup2558,2025-07-27 20:08:52,13,cscareerquestions,t3_1matat4,False,
n5i0n9n,"Lawyers are notoriously technically inept, I'm not surprised that they have gone full retard.You either need to convince them that you know what you're doing (and then they allow you to set expectations for deliverables etc) or you need to leave. And since they hired a junior developer (as a BA) instead of a late career developer, you can bet they are not going to listen to you at all.They expect caviar for mcdonalds prices and you're the fry cook.BTW, I don't think you're damaging your career, but this is a very unfortunate role to be stuck in as your first job out of college. They need a senior developer to set boundaries and expectations but I get the impression they are just going to hire a series of juniors and dictate to them for god knows how long and eventually end up buying something off the shelf to replace this shitshow they have created.",sudden_aggression,2025-07-27 21:11:56,4,cscareerquestions,t3_1matat4,False,
n5i6xjn,"Lawyer up. You’re not getting paid. I’ve consulted for these small businesses when I owned my own company. They needed a IT generalist to connect the printer to the computer. They read software development on your resume and saw the desperation in your eyes. They are playing you. If you can’t afford an attorney, go to work and spend every spare second looking for another job. Don’t bother completing the assigned tasks. You aren’t going to get paid.",Prize_Bass_5061,2025-07-27 21:45:09,6,cscareerquestions,t3_1matat4,False,
n5jbedf,Leave bro,droid786,2025-07-28 01:45:04,2,cscareerquestions,t3_1matat4,False,
n5kj813,"This sounds like the kind of law office that has attorneys submitting things to the court with AI-hallucinated case law citations.As for how bad it will look to leave, if you get to the interview stage and are asked why you left ""it seemed like the only real option once IT was reporting to HR."" The reaction in a lot of shops will probably be reminiscent of men's reactions to seeing a nut punch.",fencepost_ajm,2025-07-28 07:24:47,2,cscareerquestions,t3_1matat4,False,
n5ltqr8,"Assuming your story is accurate, the good thing about software development is that there's almost always an audit trail.So response ""okay, show me"". Let them show you the code, the commit history, and verify everything they've told you.The worst case scenario in this situation is that they can't show you, and that's when you rip them for being an environment with no source control, no indication that their code is secure or hasn't been shared elsewhere, etc. The best case is that this was done very fast...and very poorly. In both cases, call for a pentest as a parting gift.The likely scenario is they'll deflect. From there, if you care about the job, you could always escalate higher up the chain, and ask explicitly why your employer doesn't want to give their technical hire technical details.To answer your last question, it doesn't look as bad as you might think. Be honest with your next employer without throwing them under the bus, and most employers will be forgiving.Besides, if you're not getting paid, you're free to walk. It's a contract role, so you could always take a tiny freelance task from someone in return for a reference, log this as your ""contract"" job for all these months, and ultimately a shitty contract won't matter.",EnderMB,2025-07-28 13:33:27,2,cscareerquestions,t3_1matat4,False,
n5h5pzx,Just use claude code and some existing framework like rails,Low_Examination_5114,2025-07-27 18:34:37,4,cscareerquestions,t3_1matat4,False,
n5j9y9a,"You don't have to put everything on your resume, ya know.",hotlavatube,2025-07-28 01:36:12,1,cscareerquestions,t3_1matat4,False,
n5m245n,Who cares if it’s out of the norm or not? Ask for the raise. If they decline you accept the other job offer,TheConSpooky,2025-07-28 14:17:00,149,cscareerquestions,t3_1mbh9up,False,
n5m2t0p,"If you're willing to leave for that other role, but would prefer not to. Ask for the raise, if they say no - you switch. If they say yes - you stay.It sounds like you don't bug them for a raise often, so I think it's more of than fair to ask for an occasional correction. I wouldn't phrase it as an ultimatum - just let them know you recognize you're being underpaid and have been solicited by other places.",Ok_Report9437,2025-07-28 14:20:27,32,cscareerquestions,t3_1mbh9up,False,
n5m4o1w,Is this a position you were only contacted about or you’ve actually gone through the interview process and received a job offer? Those are two different things.,Chili-Lime-Chihuahua,2025-07-28 14:29:40,26,cscareerquestions,t3_1mbh9up,False,
n5m2v4g,"It all depends on how you ask, Anything that implies ""I got a better offer or I say someone on the internet paying more"" will be met with ""see ya"".A bird in the hand",Daily-Trader-247,2025-07-28 14:20:44,13,cscareerquestions,t3_1mbh9up,False,
n5m2wf0,"This is a tough one if you don’t want to leave and your job is remote. If you are willing to walk, you can go to your boss and be candid. But if you really don’t want to leave, it’s hard to use the offer for leverage.Is there opportunity for promotion? A safer way to approach this might be to have a career conversation with your manager.If your responsibilities and personal impact have increased over the last 5 years yeah you definitely can ask for more. It also might be worth asking for more PTO if you have a long tenure.",pissposssweaty,2025-07-28 14:20:55,6,cscareerquestions,t3_1mbh9up,False,
n5mzp0h,"OP you do not have a offer , you have a linked in message from a recruiter",Less-Opportunity-715,2025-07-28 16:56:51,6,cscareerquestions,t3_1mbh9up,False,
n5mm8eb,"This is a bit tough because 10 years there, means you are likely a valued member (to a certain degree) and you basically know what to expect at your job and likely excel. The expectations are tasks you can meet. The other job even if it's a salary increase, you just dont know what the expectations will be. I once jumped ship from a chill defense job to a big tech cloud developer. The pay was at least 50% more, but the expectation was 200% more. It drained me. Im not saying that the other job isnt worth it, im just saying just because it's eremote doesnt necessarily mean it will be similar expectations. Tbh, if you like this job, Id say ask for a raise. Say you have been offered a place with a 20% raise, give your job the benefit of the doubt too (assumingyou like being there) and say that you prefer to stay but you have to do what's best for you and see if you can come to an agreement. Maybe they give you 25% more or maybe they give you 15% more. Would you stay if they didnt match the 15% but gave you around the same ballpark (10-15%?)?",Broad-Cranberry-9050,2025-07-28 15:53:35,2,cscareerquestions,t3_1mbh9up,False,
n5mcj3v,"No one is giving out 20% raises right now. I'd take the new job, but stay on good terms with everyone. Then try to go back if you need to.",mcAlt009,2025-07-28 15:07:50,2,cscareerquestions,t3_1mbh9up,False,
n5mwj73,"This is a common thing to do. Ask your company if they’ll counter the offer to keep you, if they do - great, you stay. If they don’t, you go. If you are unattached to the outcome and just trying to get the highest offer - a common approach is get current company to counter, take the counter to new employer. Then if they give you a higher offer, you go - if they don’t, you stay",FalconHorror384,2025-07-28 16:42:22,1,cscareerquestions,t3_1mbh9up,False,
n5hijtn,"No excuse for not having a no blame culture. You aren’t going to learn anything there, start looking.Ultimately even if everything you said was fake, if you’re not happy then find another place. Don’t quit until you’ve started at your new place!",certainlyforgetful,2025-07-27 19:39:33,50,cscareerquestions,t3_1mav9ti,False,
n5hjbyh,"No breaks between sprints is normal, but at good places you're encouraged to spend some time during the sprint doing learning.Your team sounds toxic AF. If it were me, I would be looking for something else and quit as soon as I got an offer.",TraditionalClick992,2025-07-27 19:43:32,22,cscareerquestions,t3_1mav9ti,False,
n5hind5,"Sadly, all this is pretty normal, or at least not atypical, but it doesn't mean you can't find something better. Just start looking and keep looking.Are you at least getting paid well to deal with this?",RaechelMaelstrom,2025-07-27 19:40:04,18,cscareerquestions,t3_1mav9ti,False,
n5hjogk,"Everywhere you work will have different degrees of all of these problems. Software engineers are not know for their ability to communicate. Many people are socially inept, constantly rude, and horrible at explaining anything. At every company you work for there will be people who answer your questions in one of the following ways1. They make up a different question in their head that is tangentially related to yours and give you that answer2. They answer with as few words as possible, giving no context, because they think it makes them look smart. 3. A mix of 1 and 2.Just learn everything you can. Apply to other places if you want. But do not quit under any circumstances until the day before you start a new job. Offers are rescinded all the time. No one you work with or for cares about you. If you care about them you allow them to exploit you.Good luck",prophetofbelial,2025-07-27 19:45:20,11,cscareerquestions,t3_1mav9ti,False,
n5hix6f,"with the exception of your 3rd point, all other ones sounds normal to me you take control of your own career, don't expect anyone else to do it for you, the rest are all focused on making business impacts your 3rd point is the only one that stood out to me, that indicates the management wish to weaponize sprint point to be used against you during perf (do enough points? penalized! not do enough points? also penalized!)",NewChameleon,2025-07-27 19:41:27,6,cscareerquestions,t3_1mav9ti,False,
n5ilghz,"All of that seems rather normal (unfortunately) except for #3. I’d look for a new job solely on the basis of #3.That being said, if you’re learning a lot and working with AWS, it may not hurt to stay for another year just to make the two year mark so it looks better on your resume. That’s totally up to you though, as it is up to how long you can take it.",Uncreativite,2025-07-27 23:06:53,4,cscareerquestions,t3_1mav9ti,False,
n5la5ou,Setting performance requirements t of work done by sprint points is extremely idiotic and a huge red flag.,Anxious-Possibility,2025-07-28 11:30:49,5,cscareerquestions,t3_1mav9ti,False,
n5hlx81,"Those are common problems. Everything besides 3 is normal, expected, even.",TheNewOP,2025-07-27 19:56:48,3,cscareerquestions,t3_1mav9ti,False,
n5hiwu2,"Sorry to hear. Before you jump ship, try switching teams. It's quite common in tech that culture changes from team to team, dept to dept, etc. It helps if your company is larger, but you can probably still move even at a smaller place -- start asking around quietly. If you feel yourself getting burned out where it will affect your mental health for weeks/months/years, then take action before it gets too difficult. Good luck OP!",obscurite,2025-07-27 19:41:24,2,cscareerquestions,t3_1mav9ti,False,
n5i1iic,Sounds like my experience in the defense industry lmao.,WearyCarrot,2025-07-27 21:16:28,2,cscareerquestions,t3_1mav9ti,False,
n63zsl4,"Live your dreams, pie guy",ryan_770,2025-07-31 04:43:10,112,cscareerquestions,t3_1mdsaxw,False,
n63zbdv,It’s fine,jeffbell,2025-07-31 04:39:26,76,cscareerquestions,t3_1mdsaxw,False,
n63zy9g,"Not weird, everyone will love it!",AnonymousPie_,2025-07-31 04:44:25,50,cscareerquestions,t3_1mdsaxw,False,
n6403lx,I wish my teammates would bring pie,TheDoodler2024,2025-07-31 04:45:34,25,cscareerquestions,t3_1mdsaxw,False,
n643ly6,Only if the pie filling is made from your recently-missing coworker.,farsightxr20,2025-07-31 05:13:32,6,cscareerquestions,t3_1mdsaxw,False,
n6472vo,I think this will make you very popular. Everyone loves when someone brings a treat in to share.I guess you could check with HR if it’s ok that you bring in something home made to share.,mr_brobot__,2025-07-31 05:42:33,4,cscareerquestions,t3_1mdsaxw,False,
n65jbuv,Bribing people with food is incredibly effective.I still know one Cybersecurity guy as the lasagna guy. This guy had some major personality conflicts with me but I forgave him because of his lasagna.I'm not recruiting him for any roles but his lasagna saved me from punching him in the face while I was there.,csanon212,2025-07-31 12:28:00,3,cscareerquestions,t3_1mdsaxw,False,
n640whg,"A coworker mentioned that she bakes too much and doesn’t know what to do with the extras, and our whole team requested that she bring it to work so we can eat it. I’m sure your team would enjoy it",FishWash,2025-07-31 04:51:45,2,cscareerquestions,t3_1mdsaxw,False,
n6430ee,Also should I tell them about it before or after the meeting and should I leave the pie on the table or should I keep it in a bag.,cooltunes186,2025-07-31 05:08:34,2,cscareerquestions,t3_1mdsaxw,True,
n64k7rm,I'm more interested in how amazing your pie is for you to consider it a bribery.,LegitimateCopy7,2025-07-31 07:41:25,2,cscareerquestions,t3_1mdsaxw,False,
n5l8egv,"I think there's multiple things here.1. If you work in an AI product company, it's probably a startup with managers that have sales backgrounds. That's a hype bomb, everyone thinks they are building the next google but it's just a chatgpt wrapper. As far as I know, hallucinations are baked into transformers, you can contain it, but you need a different approach if you want to be sure it's not happening anymore. So as long as hallucinations are a part of LLMs, a human will have to check the output all the time, ao SWEs are not going anywhere.2. The SWE market in eastern europe is shifting. For a long time this was an outsourcing hub, nowadays it""s shifting towards product companies. So there will be SWE jobs in bug tech and startups.",Jijelinios,2025-07-28 11:17:39,59,cscareerquestions,t3_1mbcovz,False,
n5lc99i,"Sounds like you’re more aligned with your long-term goals now than you were before. You’ve already got great credentials: a strong academic background, Big Tech experience, and a thoughtful understanding of what you don’t want (which is huge, especially early in your career). Plenty of people end up stuck in roles that don’t match their strengths just because they’re afraid to pivot.As for those comments from managers warning you about AI replacing software engineers. Honestly, take it with a grain of salt. Most of the loudest voices predicting the ""end of software engineering"" aren’t engineers themselves and are often coming from a business lens where disruption = fear. But if you’re in engineering, you can already see what’s really happening. AI is changing the way engineers work, not eliminating the need for them. Sure, some lower-level tasks are getting automated, but that just means the bar is shifting toward people who understand AI systems, prompt engineering, model integration, performance tuning, security, ethics, etc. You’re positioning yourself exactly in that space.Also, the fact that your new role is in AI software engineering? That’s one of the most resilient and high-impact areas to be in right now. There’s still a massive shortage of engineers who can build, scale, and fine-tune AI products responsibly.",Content-Ad3653,2025-07-28 11:46:08,9,cscareerquestions,t3_1mbcovz,False,
n5lk65g,"You lost me at ""Hi, I'm 25""Software Engineering isn't going anywhere, and you're young enough that you could start over again several times over.Some advice. Random people telling you that AI is taking your job is like me telling a chef that the air fryer will take away their job...",EnderMB,2025-07-28 12:38:07,25,cscareerquestions,t3_1mbcovz,False,
n5ln5zs,You're good. End up not liking engineering or jobs hard to find? You've set yourself up with great experience to pivot to a sales engineer. I wouldn't worry too much,MCFRESH01,2025-07-28 12:56:09,7,cscareerquestions,t3_1mbcovz,False,
n5nn6y9,"These people are ignorant at best and morons at worst. An ML/AI role is the perfect place to be positioned. Even if certain software engineering functions can be replaced by ML/AI, the people who understand the models and can implement them will be the last to go, and if that time ever does come, they'll probably be held on in some sort of process management role.",marsman57,2025-07-28 18:44:54,3,cscareerquestions,t3_1mbcovz,False,
n5ma2gy,Only people who are far from tech roles can say that AI will replace SWEs with such certainty. This is not true. You’ll be fine as long as you are flexible and always learn to meet changing market demands,Easy_Language_3186,2025-07-28 14:55:56,2,cscareerquestions,t3_1mbcovz,False,
n5r1naw,"Honestly, sounds like you made the right call for yourself—being in a role you enjoy matters way more than what some non-engineering managers say. The future for SWE (especially in AI) still looks solid if you keep learning",Dependent_Gur1387,2025-07-29 06:48:47,1,cscareerquestions,t3_1mbcovz,False,
n5nkoo4,"I would say that, yes, I think sales is a much better path. Also, Southern Europe is much safer in the context of WW3",alexifua,2025-07-28 18:32:59,0,cscareerquestions,t3_1mbcovz,False,
n5lwhdf,"Less likely for AI to replace sales jobs than dev jobs. Plus tech sales can be very lucrative. I have a couple of friends at Oracle and Microsoft. Every time we chat I kick myself for not having gone that route, lol. Don't get me wrong I do just fine for myself. But these dudes probably make twice what I make and work 1/3 as much.",Early-Surround7413,2025-07-28 13:48:06,0,cscareerquestions,t3_1mbcovz,False,
n52bn16,You will be fine. 35 is very young.,Techatronix,2025-07-25 10:52:49,67,cscareerquestions,t3_1m8vw0j,False,
n52ive8,Research positions at a FAANG are extremely competitive. You should not assume it's a given.,Illustrious-Pound266,2025-07-25 11:45:43,25,cscareerquestions,t3_1m8vw0j,False,
n52xgqn,I completed mine at 40 nothing to it. But as others said not necessarily a good financial move. I did get hit like crazy by recruiters between 40-45 then crickets. My whole team (half PhDs half MS) was outsourced.,debugprint,2025-07-25 13:13:34,14,cscareerquestions,t3_1m8vw0j,False,
n52fn8w,"Officially, I've never seen age discrimination. Definitely not in consulting. Unofficially, I saw everyone over the age of 50 forced to relocate or take early retirement because they got paid too much and were still accumulating more on the pension plan that stopped accepting new employees 20 years ago.Getting hired, you're totally fine. Just don't be visibly overweight. That is definitely discriminated against. Got to keep health costs down.I don't recommend drinking FAANG cult Kool-Aid. If you want money, a PhD is a bad financial decision in North America. Stop with the MS. You might see a few lucrative job openings but 50 PhDs apply and the posting might take an MS instead. Your odds are better if you're a US citizen.",NewSchoolBoxer,2025-07-25 11:22:54,17,cscareerquestions,t3_1m8vw0j,False,
n53a6fc,I finished mine at 42. You’ll be fine so long as you aren’t fixated on FAANG.,heresyforfunnprofit,2025-07-25 14:19:41,4,cscareerquestions,t3_1m8vw0j,False,
n52vdhm,"Research positions at FAANG are getting fewer, but there will always be demand for people with research + engineering chops. So make sure that you don't pick up crappy practices during your PhD (writing ugly code that is not maintainable, not writing proper documentation, not using good programming practices). It is sometimes hard to do as a researcher since your incentives are misaligned - publishing frequently is often incompatible with writing clean, maintainable code. But trust me it will help in your own research, especially if you standardize your setup to launch, track, and report experiments in the first 1-2 years of your PhD. Source: I was a researcher at a FAANG lab and in academia prior to that",sshkhr16,2025-07-25 13:01:56,4,cscareerquestions,t3_1m8vw0j,False,
n54iovw,"The age is not the issue, but you do need a backup plan.What if a commercial researcher job doesn't happen? What's plan B?",terjon,2025-07-25 17:46:40,2,cscareerquestions,t3_1m8vw0j,False,
n53depk,"Companies don’t really discriminate. But the mileage afterwards is going to vary from your personal perspective. You’ll be brought onboard just like any other new grad at similar levels. The quality of life and expectations of a 25 year old and 35 year old will be very different. You will both show up to work but one will be alright eating ramen and overtiming like crazy with little responsibilities, while the other is going to have a mortgage, kids, aging parents to take care of while learning the ropes. The soft skills needed to navigate the office politics will also take a lot of time to adjust to. If your goal is to go into industry ultimately, why not just try first before doing a PhD. I guarantee 7 years of actual industrial experience from 28-35 will be infinitely more useful than 7 years of academia in an industrial setting.",necroneedsbuff,2025-07-25 14:35:11,2,cscareerquestions,t3_1m8vw0j,False,
n56yx4u,> I am currently pursuing my MSc in Computer Science and plan to pursue a PhD at the same university afterward.Have you spoken to anyone about this? Usually schools don’t like to have you attend for multiple degrees because of the appearance of essentially academic inbreeding. Also what’s more common is people are accepted into a PhD program but can master out if they decide they don’t want to do the full 5-7 years.,lupercalpainting,2025-07-26 01:33:16,1,cscareerquestions,t3_1m8vw0j,False,
n59x3d6,Sorry dude too old (just go for it),xTp___,2025-07-26 15:04:05,1,cscareerquestions,t3_1m8vw0j,False,
n68bgqs,"Yes, but unfortunately HR is prepared to fire you and not whomever is harassing you because you are the subordinate.Spend your time applying to new places while you are fortunate enough to remain employed.",panthereal,2025-07-31 20:30:59,127,cscareerquestions,t3_1mecblh,False,
n68eu92,I'm 110% confident that the PIP feedback they're trying to give you is less about the difference of opinion and more about how you expressed it.,SpicyLemonZest,2025-07-31 20:46:43,101,cscareerquestions,t3_1mecblh,False,
n68dlmu,"Yes, like many PIP's there's a personal, not business, reason behind it. Some combine the two where HR or upper management says ""pick X number of people to layoff"" and your manager picks the people they don't like.",jfcarr,2025-07-31 20:40:54,26,cscareerquestions,t3_1mecblh,False,
n68q0w5,Without seeing what actually happened there’s no way for us to knkw,rco8786,2025-07-31 21:41:32,6,cscareerquestions,t3_1mecblh,False,
n693v7b,"1. you're never gonna get real closure from internet randos. and certainly not from this response.2. if I assume you are being accurate in your descriptions, you are merely being treated unfairly. That is GOING to happen.3. If I assume you are being disingenuous, and further assume you gave a bad technical argument or just pissed off the wrong people, you are merely being treated harshly. That is GOING to happen.4. I would say the lesson to learn here is not ""this wasn't fair"", of course not, whether you're right or wrong you are going to feel that. The lesson to learn is that this type of thing will happen. How do you want to address it in future? In DM? In PR? EM? HR? Extremely deferentially or confrontationally? You do you. But the lesson is this will happen, fair or not, and how will you chose to deal with it. How will you shape the culture immediately around you. What are you willing to take, and not willing.5. Time to start preping for interviews. Always be prepared. Addendum: 6. when it rains it pours. I just noticed ""one of the items"". What are the others? Are they piling on because they ""had it up to here with you""? Or are they nitpicking the whole time? That should inform you if you're being treated fairly or harshly or just how it should be.",redditmarks_markII,2025-07-31 22:53:55,4,cscareerquestions,t3_1mecblh,False,
n699ar3,"PIPs are unfortunately very hard to write in tech because so much of the work is tough to quantify. And a lot of managers are just engineers who got put on the spot and aren't exactly good at it.So the items in the list are probably whatever the manager could come up with to fulfill the process. Or could be miswritten.Difference of opinion is vague too. Could be an argument, could be pushing things too far when being asked to disagree and commit, could be not following conventions or existing decisions. Could be a poorly argued point.",phoenixmatrix,2025-07-31 23:23:57,3,cscareerquestions,t3_1mecblh,False,
n69ba32,I had a disagreement with someone once who wanted me to report something as illegal which I knew to be perfectly legal. I refused. I was subsequently let go after a couple more weeks of suddenly everything I did was wrong from that manager’s perspective. It’s fucked but it happens.,NorCalAthlete,2025-07-31 23:35:07,3,cscareerquestions,t3_1mecblh,False,
n69mimq,"Harassment has to be persistent, so no it doesn't sound like harassment. It is probably bad management since it sounds like a surprise that it ended up on your pip.That said... that seems like the kind of 'pile on' evidence that goes into supporting a pattern of behavior in a PIP. It's not claiming that the one specific action is a fire-able offense but it's painting a picture of someone that isn't working out. I've dealt with a manager that just wanted me gone to bring their friend over to the team. HR will sound like they're not on your side, but if you bring up all the ways your manager hasn't been consistent or providing feedback they will probably block them from firing you.",Known_Cryptographer7,2025-08-01 00:39:54,1,cscareerquestions,t3_1mecblh,False,
n69subv,"Was it because you disagreed, how you disagreed, or what you disagreed about?One of these things is a toxic work environment (and isn't your fault), one implies immaturity on your part, and the other implies incompetence on your part.If you don't know which it is then they've failed to communicate to you.",Esseratecades,2025-08-01 01:17:23,1,cscareerquestions,t3_1mecblh,False,
n69xh27,"That might be an excuse. Something easier to measure, but there might be other reasons.",CandyFromABaby91,2025-08-01 01:45:28,1,cscareerquestions,t3_1mecblh,False,
n51w9vh,"Treat it like a hobby. Find ways to use it for learning.Use them. They aren't paying you, so you owe them nothing.But take everything you can from them. Never know, you might accidentally wander into paid labor from it.When you're tired of it, bail out. Again, it's free labor. You owe them nothing. Not even notice. So just have some fun and learn anything you can.",Won-Ton-Wonton,2025-07-25 08:33:45,56,cscareerquestions,t3_1m8tib8,False,
n51wi04,"If you have the money to support yourself and the motivation to push through job applications while doing this, you can take it. But the biggest consideration is do you like the people in the team? If not, don’t waste your time and just work a different job and build projects on the side.It’s rough out here, but definitely consider building software “for fun” while getting a part time job. If you have professor connections from university, try to apply for volunteer research assistantship. Search for open source projects to contribute to.At least research labs provide authorship if you provide significant contribution and open source contributions are recorded. Unpaid internship is just going to be a bullet point in your resume that tells recruiter “I did this, trust me bro”.",Real_nutty,2025-07-25 08:35:57,9,cscareerquestions,t3_1m8tib8,False,
n523286,Better off just making a project and creating a “company” off it to list in your resume,hesher,2025-07-25 09:38:53,12,cscareerquestions,t3_1m8tib8,False,
n5250dv,"If you're US, I think this is a scam to get you to work for free and call it an internship. Non-US company no one has ever heard of and not paying you has little to no resume value. Background check will show offer letter saying you're working for free. The only real internships are through your university while a student. Employers verify you're in good standing. Post-graduation reeks of scam.What is your ""research""? I mean, can be real in the sense of a real shady company that's recruiting slave labor. They'd never pay you enough for a real job in USD, else they'd pay you now. You can ""intern"" for me and do projects I give you from Fiverr.",NewSchoolBoxer,2025-07-25 09:56:36,6,cscareerquestions,t3_1m8tib8,False,
n54d44t,"From a practical perspective, doing unpaid internships doesn’t look good. You might as well just work on your own thing.",killwill2017,2025-07-25 17:21:11,4,cscareerquestions,t3_1m8tib8,False,
n52ntj1,unpaid internships are experience & you have none right? if there is a chance they'd offer you a job after graduation i'd be OVERLY GOING.,springhilleyeball,2025-07-25 12:17:32,1,cscareerquestions,t3_1m8tib8,False,
n54y89d,Trades,Adventurous_Pin6281,2025-07-25 19:00:47,1,cscareerquestions,t3_1m8tib8,False,
n5jb5q9,"1. make experience up (jobs mainly, how I got my first swe experience), add research experience and change your title. 2. create a product/sass b2c or b2b), something usable and simple to show you know how to do stuff.3. do the unpaid internship and look for other jobs (apply to 500+ monthly), do bare minimum, if possible dont even do the 9-5 portion work 1-2 hours on it and apply to other jobs.",Inner_Fuel3558,2025-07-28 01:43:35,1,cscareerquestions,t3_1m8tib8,False,
n52khzx,"Leonidas, is that you?",chataolauj,2025-07-25 11:56:21,3,cscareerquestions,t1_n51w9vh,False,
n54wyrz,"> They aren't paying you, so you owe them nothing.This mindset is how you stay at the bottom.",Ok-Attention2882,2025-07-25 18:54:43,-15,cscareerquestions,t1_n51w9vh,False,
n5vte3u,"My read from keeping tabs with my network (about half SWE, half data whatevers): it's not quite as bad as Reddit makes it sound, especially if you're both experienced and have the right degree(s), but it's still bad.",cy_kelly,2025-07-29 23:11:17,23,cscareerquestions,t3_1mcpukl,False,
n5vo719,"It's not as bad as last year and it is getting a bit better, but i just went through it. It took me 3 months to get a job but even then I got lucky. It was a lot of applications (in the hundreds) and only like 4 interviews I got out of it. It's not great. Basically expect to be unemployed for 3-6 months. I think you should go in with a plan and just start right away with the applications because companies are taking forever to respond. Then after 2-3 months if you dont have much going on, be ok with starting a contract or something.",Broad-Cranberry-9050,2025-07-29 22:43:22,39,cscareerquestions,t3_1mcpukl,False,
n5xq4b1,"I’m a C# dev and it took me about 6 weeks to get an offer after my fed contract was DOGE’d. I got pretty dang lucky though that the perfect job was posted at the perfect time. It’s not nearly as bad as this sub makes it seem, especially those with a handful of YOE under their belt. Don’t wait till the last day to start though. Get your resume sorted, brush up on leetcode, and start applying.",AdMental1387,2025-07-30 06:49:05,9,cscareerquestions,t3_1mcpukl,False,
n5x0g5x,"It's bad enough. 6 months of unemployment is absolutely normal in this market, and you should expect that going into your job search. Hopefully not that long, but don't be surprised if it happens to you.",Illustrious-Pound266,2025-07-30 03:22:43,8,cscareerquestions,t3_1mcpukl,False,
n5vssx8,"C# and 6 years is probably gonna be okay, but still a few months. I have 8 years web development (mostly frontend) and took about 2.5 months to get a job. Time of the year also matters a lot—Id rather be unemployed now than Q4.",aeroplanessky,2025-07-29 23:08:08,6,cscareerquestions,t3_1mcpukl,False,
n5wqq4j,"was actively doing job search last year back when I got laid off, I was doing on average ~4 interviews a day (or 15-20 a week) and ended up with several competing offers, including several big techs so, not very bad in my view",NewChameleon,2025-07-30 02:21:08,6,cscareerquestions,t3_1mcpukl,False,
n5vu7ox,"Not sure, been employed for 8 years with a 1 week break and 5 years before that. I interviewed once 3 years ago to get leverage for a large pay adjustment... worked out well.My team hasnt been hiring for a while but other engineering teams are onboarding every few months. Seems OK from that perspective.",-Dargs,2025-07-29 23:15:40,2,cscareerquestions,t3_1mcpukl,False,
n5wxqj8,"Start applying, only way to find out",TheNewOP,2025-07-30 03:04:55,3,cscareerquestions,t3_1mcpukl,False,
n5wjjb2,If you’re an American citizen trying to work in US it’s close to impossible to find a job. Unless we can send all the visa workers home and not bring any more in it’s time to switch careers. Any place that is hiring will have thousands of applicants.,Nofanta,2025-07-30 01:39:20,5,cscareerquestions,t3_1mcpukl,False,
n5x0695,It sucks ass. But I think it might be getting better.,cs_pewpew,2025-07-30 03:20:54,2,cscareerquestions,t3_1mcpukl,False,
n5jmxy7,"Real talk, just lie and say you're full stack. Go to interviews and tell them you're fullstack, change your resume and tell them you're full stack.",Few-Artichoke-7593,2025-07-28 02:59:11,114,cscareerquestions,t3_1mb4vsr,False,
n5jqn7r,I was like you and aggressively asked my manager if I could pick up more backend tickets last year. Now I’m full stack but still learning more backend as I go,cwolker,2025-07-28 03:24:43,16,cscareerquestions,t3_1mb4vsr,False,
n5jqwbf,Do you have a CS degree or at least the knowledge that comes with one?Backend is just regular programming. Generalist software engineering skills open the door to it. Do you have that?,kevinossia,2025-07-28 03:26:33,4,cscareerquestions,t3_1mb4vsr,False,
n5npy4w,"Apply for full stack. If you get to an interview, you will find that a lot of full stack engineers don't like picking up front end tickets and will be glad to have someone who is an expert in those, but can still pick up backend tickets.",marsman57,2025-07-28 18:58:02,3,cscareerquestions,t3_1mb4vsr,False,
n5jwemv,In my experience I seen more openings for front end. So thought easier for you to find jobs. Have you applied to full stack positions? When it comes to interviews just say you want to code in TS,thatsreallynotme,2025-07-28 04:06:40,2,cscareerquestions,t3_1mb4vsr,False,
n5kz09c,"Your transition from frontend to backend is absolutely doable with 9+ years of experience, but you need to reframe how you're approaching it. The biggest mistake would be positioning yourself as a career changer when you're actually a seasoned developer expanding your skill set. Your deep understanding of how applications work from the client side gives you a massive advantage in backend development because you understand the full picture of how data flows and what the frontend actually needs. Companies should see you as someone who can build APIs that actually make sense for the consuming applications, not just someone learning Java from scratch.The interview struggle you're facing is real and frustrating, but there are ways around the traditional leetcode gauntlet. Target smaller companies and startups where you can often get in front of actual engineering managers who care more about your ability to solve real problems than your ability to reverse a binary tree under pressure. Focus on companies that do practical coding exercises or take-home projects instead of whiteboard sessions. Your strength in systems design and high-level thinking is incredibly valuable, especially for backend roles where understanding architecture matters more than memorizing algorithms. Some companies do hire based on these skills alone, particularly in more senior positions where they expect you to learn the specific technical details on the job.I actually work on [AI interview helper](http://interviews.chat) to navigate exactly these kinds of tricky interview situations where you need to showcase your transferable skills and handle technical questions that might be outside your current wheelhouse.",akornato,2025-07-28 09:58:07,2,cscareerquestions,t3_1mb4vsr,False,
n5nuc9c,"If you're serious about switching to back-end, build a solid portfolio with real-world back-end projects. For example, set up APIs, work on database management, or contribute to open-source back-end projects. When hiring managers see real-world applications of your back-end skills, it makes a strong case for your transition.",Moist_Leadership_838,2025-07-28 19:19:21,2,cscareerquestions,t3_1mb4vsr,False,
n5jre1q,"Currently a 1yoe backend engineer and hiring new grad - 3 yoe backend engineer for my team.We ask questions what’s OOP, what’s an API, SQL joins, any experience in backend programming? We dive deeper in each topic depending on candidate’s experience and high level concepts to see how they think.Surprisingly, we interviewed around 8 people and none passed. These were candidates from good schools or interned at like TikTok, Samsung, Microsoft.",BronnyJamesFan,2025-07-28 03:30:01,3,cscareerquestions,t3_1mb4vsr,False,
n5jo45e,"Let's say i wanted to hire a solid backend / full stack developer. Since you have a decade in front end I'd say more full stack than straight backend but it's all for context:- languages and frameworks (.net etc, Java spring etc, or node.js etc) at least one solid one halfway)- interoperability via restful API (if in Linux also some basics of interprocess comm), also Kafka, etc.- big one: super solid database skills. Not ""knows how to write a join"" but solid data base creds. Including dealing with databases from inside languages (APIs)- décent SQL proc skillsFor true backend like what I'm doing also add amateur DBA skills, knows how to troubleshoot queries, procs, multiple databases (SQL and noSQL), mainframe maybe... I work in healthcare administration and insurance and our databases are generally humongous so I'm a little too biased on the last set! I was also a UI UX designer and researcher but after a couple decades of UI work i migrated to backend.",debugprint,2025-07-28 03:07:07,2,cscareerquestions,t3_1mb4vsr,False,
n61cieu,"if you genuinely enjoy it go for it, just don't expect a chill 6 figure desk job off graduation anymore",pixelizedgaming,2025-07-30 19:47:01,85,cscareerquestions,t3_1mdgdxa,False,
n64uaso,"Most people in the CS field get related jobs after graduation, around 9 in 10. The tenth posts in cscareerquestions about how the field is cookedBut seriously though you’ll be fine",epicfail1994,2025-07-31 09:17:22,4,cscareerquestions,t3_1mdgdxa,False,
n61mjfu,You might as well major in art because either way you’ll be flipping burgers after college.,ice_and_rock,2025-07-30 20:33:48,36,cscareerquestions,t3_1mdgdxa,False,
n61k657,"If you want stable employment in a low stress job (even if it pays less), pick something else. If not.. welcome and good luck.",Plus-Anywhere217,2025-07-30 20:23:01,19,cscareerquestions,t3_1mdgdxa,False,
n63okgt,I work as a janitor in the cs department...I have a cs degree,dj_Magikarp,2025-07-31 03:22:41,17,cscareerquestions,t3_1mdgdxa,False,
n61iu0d,Reddit is full of salty people who lost their jobs. You'll do fine in CS.,marsman57,2025-07-30 20:16:57,37,cscareerquestions,t3_1mdgdxa,False,
n64a1jz,"Major in something you want to do for the rest of your life. Try it out in school. If you don’t find it rewarding, switch to something you do. Now is the time to experiment with what you like doing - something that calls to you. If you enroll in something just for the money, the people that have passion for the job are going to eat you alive.Took me two rejections from Dental school to figure that out. I always loved coding, and now I don’t do anything I don’t love doing at work.",oishii_33,2025-07-31 06:08:10,3,cscareerquestions,t3_1mdgdxa,False,
n64ph8r,"I originally wanted to go for Software Engineering but did Electrical Engineering, focusing electively on CS and Computer Engineering, instead due to credit transfer issues from my first year program. In hindsight it was a good option because if worse comes to worse I can pivot from SWE to EE or CE. Perhaps I would be more competitive in SWE jobs with an SWE degree, but an EE degree is still very prestigious as it was the default for programmers up until the late 90s or perhaps even early 2000s. For example the CEO of Microsoft has an EE bachelors. The CEO of Google did his Bachelors in Metallurgy and Masters and Materials Engineering.I would definitely do something engineering though. CS is less challenging (4 courses vs 6 in engineering), more saturated and offers less flexibility. And even if AI does automate most human labor, licensed Engineers still have state granted authority to sign off on safety critical projects (this matters more in an age with powerful AI, because powerful means dangerous). The reason engineers are sometimes grouped with doctors, lawyers etc. is because they all need to go through stringent licensing and all have serious legal considerations when they sign off on something. Getting a degree that enables you a path to such a license would be extremely valuable, and CS won't give you that option.",swegamer137,2025-07-31 08:31:21,3,cscareerquestions,t3_1mdgdxa,False,
n61i9ui,"I came from mechanical engineering to software development.No one can tell you what the job market will look like in 4 years or what impact AI will have on entry level jobs. But my advice as someone with a few career regrets would be this:1) Only go to college if you feel ready to give school your full attention. It is relatively easy to fuck around for 4 years and walk out with a degree. But if you limp your way through a STEM degree without fully internalizing the content and setting aside time for relevant clubs and student associations, you're not getting much more than debt out of school.There are plenty of things you can do in the mean-time if you want to focus on being young for a little while.2) Only go into a major you actually have some passion for. Engineering is a lifelong grind. You need to always be learning new things, taking classes, and skilling up. A lot of people in software burn out or decay because it's too draining to grind something you hate.3) The most important thing your college gives you access to is not the degree. It is professional work experience through internships and co-ops. Your entire college career should be centered around securing as much work experience as possible as early as possible. A college degree without at least 9 months of work experience is borderline worthless.",AHistoricalFigure,2025-07-30 20:14:22,5,cscareerquestions,t3_1mdgdxa,False,
n64kt1s,"People who enrolled into CS majors four years ago expected to graduate into the market they started their degree in. What they got is a terrible market. It may be the complete opposite for you, literally none of us can accurately predict this.",Ferovore,2025-07-31 07:47:01,2,cscareerquestions,t3_1mdgdxa,False,
n5dhar8,"Some people treat juniors (especially if they're women) like garbage. It's gross. Unfortunately, going to HR might help but other times they view victims of sexism as potential lawsuit liabilities / will gaslight you about it. I would start networking to find another job. Don't let shitty managers kill your motivation for your career.",WutTheCode,2025-07-27 03:20:40,12,cscareerquestions,t3_1mabvyv,False,
n5dgbe8,"That is crazy and unfair... Going to HR and making them communicate more in writing, as well as applying is the best path IMO",medovick,2025-07-27 03:13:38,9,cscareerquestions,t3_1mabvyv,False,
n5h5msz,The person fighting this is the person trying to hire you. You are kind of at the whims of the company unfortunately.Did this just happen? If so I would wait a couple weeks before burning the ships,supyonamesjosh,2025-07-27 18:34:10,2,cscareerquestions,t3_1mabvyv,False,
n5xxs3q,"This is textbook manipulation disguised as ""business decisions."" When four different stakeholders approve your internal transfer and a skip-level blocks it without justification that’s not a gray area, that’s a structural problem.Here’s what’s likely happening: either your skip sees you as low-cost labor they don’t want to lose, or they simply don’t want someone with initiative disrupting the status quo. Either way, it’s not about role fit it’s about control. And gaslighting you by denying your rotation despite it being in your job description? That’s not a misunderstanding. That’s strategic suppression.Start documenting everything. Build leverage. And if you get the chance to walk walk fast.",Superb-Education-992,2025-07-30 08:02:24,2,cscareerquestions,t3_1mabvyv,False,
n5h4vi9,“My work entailed receiving written tasks that lacked any context and with that got no training or onboarding.”If it’s anything different than this I am surprised,lucasvandongen,2025-07-27 18:30:22,0,cscareerquestions,t3_1mabvyv,False,
n5uf5j7,"I work with people. Not their results. If I don't want to work with you, I don't want to work with you. Soft skills are much harder to develop. So I'll take the candidate with the better soft skills every time. Is the code solution binary?  Do you believe all that matters is the result, and the implementation irrelevant?That tells me a lot about your coding ability, and it's not painting a pretty picture.",drunkondata,2025-07-29 19:03:56,30,cscareerquestions,t3_1mcjeqk,False,
n5u8vzi,"Depends on the job specifically, but as a manger I disagree. Multiple people are going to pass the coding challenge most likely -- I can't hire you if I don't feel like I can work with you.",kmed1717,2025-07-29 18:34:57,24,cscareerquestions,t3_1mcjeqk,False,
n5uafts,">In my opinion the coding section is the most important as it is a very binary result. If you didn’t get the solution you failed the interview.I dont think it's as binary as you think. For me when I've taken coding interviews, i've gotten jobs at major companies when I dont even get the question entierely right. If im in the ball park and my explanation as to why I got there is correct, i've impressed the interviewer. There's def been times I didnt get the answer but I also realized my mistake or didnt and said ""my next idea would be to do XYZ since this didnt work"". For me all 3 are just as important but the more Jr you are the more the coding interview should matter. The more Senior you are the more leadership and system design should matter. Because as a Jr it's important to know how to code and learn system design within the company, as a principal it's more important to know design/leadership over code. Seniors and mid-level need to know more about leadership/system design than Jrs but less than principals. So for percentages id say:Jrs - 80% coding, 15% System, 5% leaderMid-level - 65% coding 25% system, 10% leaderSenior - 40% coding 30% system, 30% leaderPrincipal - 20% coding, 40% system, 40% leaderThe higher you go in this career the less you code so for a principal coding shouldnt be important because at that point it's assumed you already know.",Broad-Cranberry-9050,2025-07-29 18:42:08,7,cscareerquestions,t3_1mcjeqk,False,
n5uoz7y,"I can tell you last year when I was job hunting one of the written offer I received I know for a fact that I did not fully pass the coding portion (it was a LC-hard in ~40min), explained logic and only managed to write partial code, the different interviewers were clearly satisfied with the overall performance (coding + system design + behavioral) during the debrief to extend offer anyway so, the answer isn't as clear as you think on which part is ""most important""",NewChameleon,2025-07-29 19:50:42,7,cscareerquestions,t3_1mcjeqk,False,
n5v38l8,Vibes are the most important,SamWest98,2025-07-29 20:57:25,6,cscareerquestions,t3_1mcjeqk,False,
n5urei5,"I've interviewed a lot of developers. It is NOT a binary result.I tend to ask 3-6 questions of increasing difficulty. I'd say most people we've hired didn't finish all of them.It's all about seeing how you think about the questions, what solutions come to mind, and your ability to collaborate and think clearly because I'll help the candidates. For example, they might think of a straightforward brute force approach and we start with that, then I indicate towards a way they might be able to make it more efficient and see if they catch on and can take the hint and follow it to a better solution.It's also to account for people have one or two 'bad questions', like basically having a mental blank on one. You can mess up on the easiest question and still pass the interview (not common depending on how badly you mess up on the simplest question, but the point is it's not pass/fail).",StrangelyBrown,2025-07-29 20:02:07,5,cscareerquestions,t3_1mcjeqk,False,
n5v68ut,Do not listen to this advice.There are too many engineers that have zero people skills. People skills are hugely valuable.,ProfessorMiserable76,2025-07-29 21:11:40,4,cscareerquestions,t3_1mcjeqk,False,
n5v6rbi,"In my 15 YOE coding skills are less important on the job. Most people want to work with SWEs that work well together. The average coder is probably going to be fine as long as they can take feedback well.In an interview meeting the company specific hiring bar for coding is very important. You can have the best social skills in the world, if you don't show you meet the bar for coding you are not going to get the job. This doesn't mean social skills are not important, but I've never met somebody fail the coding portion and still got the job because of social skills. I have met people who excelled in the coding portion and had meh social skills. This is just my experience at non-tech companies in non-tech cities. I cannot comment at working in a tech company as I have never received an offer from one of those companies.",diablo1128,2025-07-29 21:14:09,3,cscareerquestions,t3_1mcjeqk,False,
n5uh9vs,"And this is where so many people go wrong. They overemphasize the coding part of the job when in reality it’s a people/problem-solving game. Coding is important, don’t get me wrong but it’s not the hard part of the job at all",grizltech,2025-07-29 19:13:55,2,cscareerquestions,t3_1mcjeqk,False,
n5uqvtp,Not really. You can pass the coding interview and still not get the job. Happened to me quite often.,Illustrious-Pound266,2025-07-29 19:59:39,2,cscareerquestions,t3_1mcjeqk,False,
n5msh5c,Entry level CS/software jobs are not in high demand while supply of new grads has flooded the entry level market.,Illustrious-Pound266,2025-07-28 16:23:04,31,cscareerquestions,t3_1mbigaj,False,
n5msj2r,"Where did you go to college, IMHO, that matters.I think it is worth it, so long as you are aware just getting the degree is not enough to get a job. You will need to take advantage of whatever resources your college offers to get a job.Whether that is job fairs, company information sessions, hackathons, design/build teams, you need to utilize that as much as you can. That is the difference maker right now.",Drauren,2025-07-28 16:23:20,8,cscareerquestions,t3_1mbigaj,False,
n5mbok0,"Cdl making way more money than the average CS grad, or atleast thats what it seems like from this sub.Edit: Wow my first reddit award :face_holding_back_tears:. I was being sarcastic btw lamao. I myself am a Swe turned PM recently and couldn’t have done it without a cs degree.",DockerKafkaContainer,2025-07-28 15:03:45,16,cscareerquestions,t3_1mbigaj,False,
n5nk77h,Finish your degree. Leverage your domain experience with trucking to get a CS job in a related field. There are plenty of trucker adjacent tech companies.,marsman57,2025-07-28 18:30:40,3,cscareerquestions,t3_1mbigaj,False,
n5ocfap,"Don’t listen to all these doomers on Reddit CS is alive and well and AI is no where near taking over comp sci jobs. Half the people here think that if they can’t get a fang job making 200k right out of college that CS is dead but that is not the reality. You should get your degree and start applying everywhere, with a CS degree you should be able to get a job doing just about anything in technology so just apply everywhere and start getting experience and then focus on finding a specialty you like!",Mundane_Mulberry_545,2025-07-28 20:44:58,3,cscareerquestions,t3_1mbigaj,False,
n5ob8gq,Definitely finish it.,ALAS_POOR_YORICK_LOL,2025-07-28 20:39:23,2,cscareerquestions,t3_1mbigaj,False,
n5qttar,You need to pair your degree with [internships](https://www.levels.fyi/internships/). The ones screaming about not finding employment didn't do them.,GratedBonito,2025-07-29 05:38:00,2,cscareerquestions,t3_1mbigaj,False,
n5ow9u0,Its not in demand anymore dont even bother. Driving trucks is a good job,Comfortable-Insect-7,2025-07-28 22:25:06,2,cscareerquestions,t3_1mbigaj,False,
n5pjpg6,"Ready to join the herd of new grads all begging for work, eh?",MilkChugg,2025-07-29 00:34:35,1,cscareerquestions,t3_1mbigaj,False,
n5qbkm5,Is it too late to switch to an engineering degree?,Kevin_Smithy,2025-07-29 03:20:38,1,cscareerquestions,t3_1mbigaj,False,
n5ula0f,"120 means your team isn’t prioritizing system health at all.My previous job 1 a week, maybe. Current job, 1 - 2 a week",ChickensFloatOverAir,2025-07-29 19:33:02,50,cscareerquestions,t3_1mcijaq,False,
n5uld7o,120 pages is not normal for most jobs no.,chevybow,2025-07-29 19:33:27,42,cscareerquestions,t3_1mcijaq,False,
n5ucw0n,I’m so tired of poor alerts. Most of the alerts I get is not actionable. So why was the alert created?,qrcode23,2025-07-29 18:53:26,17,cscareerquestions,t3_1mcijaq,False,
n5u36yg,"There's really no such thing as normal as it differs wildly from company to company, team to team, product to product etc. With that said, your experience is definitely worse than the average i have personally done, but ive never been part of a tier 0 service. Mine is usually 2-3 high sev pages a day, and maybe 1 incident every other on call. How often is your oncall and is it 24/7 or do you get to switch off at night?",lewlkewl,2025-07-29 18:08:28,10,cscareerquestions,t3_1mcijaq,False,
n5u5fu4,"It differs on project. In my first job it was once a month for a day for major tasks and once every 3 months for 3-4 days for minor incidents. It depends on how well the automation is. I have only done it for 1 project. It wasnt great at first. Most of the automation wasnt built and most major issues came up from the same few things. Because it wasnt automated, we didnt notice until the customer complained and once customer complaned theyd wnat to get on a 3 hour call because they wanted an explanation. Then wehad to write a report to send to them. It sucked.We could get 20 tasks in a day of on-call. Once automation got better, there were less customer complaints and less tasks in general. Most days Id have at most 5, one time I had no incidents and it was like I hit the lotto. But this project was also a major big tech company with customers worldwide. My current company has on-call I have yet to be added to. From what I hear it's one week long. Unless it;'s major incident there is no requirement to fix it until the next business day.",Broad-Cranberry-9050,2025-07-29 18:18:56,3,cscareerquestions,t3_1mcijaq,False,
n5ujqme,"I've been called 3 times total on call at my current job, with 2 days a week being expected to be near a phone and able to get back to my machine in ~30 min.All but 1 time was upper management telling me I could go do whatever because we were going into the christmas break.",BellacosePlayer,2025-07-29 19:25:37,2,cscareerquestions,t3_1mcijaq,False,
n5uzbh8,"Depends on the teamUsually when your oncall is that bad you'll have either follow the sun (12 hours of oncall then another team picks it up) or you have 2-3 day rotations so that no one is completely wrecked.For all of the sev 2s that no one cares about, you should be working to get rid of those since no one cares.",termd,2025-07-29 20:39:19,2,cscareerquestions,t3_1mcijaq,False,
n5wzgmw,"My old job was one every couple months, current job is one every other day and it sucks. High double or triple digits is unhinged",zelmak,2025-07-30 03:16:13,2,cscareerquestions,t3_1mcijaq,False,
n5yxu7v,Were the 93 alerts actionable? That is what is most important - did you have to drop what you were doing to mitigate or investigate further…,KratomDemon,2025-07-30 12:50:13,2,cscareerquestions,t3_1mcijaq,False,
n5uxnk5,"That does not sound normal. On the other hand, looks like an opportunity to be a hero and do some operational improvement",zergling-,2025-07-29 20:31:30,2,cscareerquestions,t3_1mcijaq,False,
n5neezg,"With an MSCS, you know more about theoretical CS but don't necessarily become more employable or earn more.Knowing more CS can be useful, but working with people (in a production setting), fighting fires (not just bugs, but can also be people) and having an intuition of which problems to solve and which not to, are stuff you can't really learn in school. You have to experience it.Something my first manager said that has always stuck with me is, a piece of code you wrote 6 months ago was written by someone else. In school and in Leetcode, people prioritize performance and brevity. In professional development, I much prefer code that is readable and quick to fix (in the sense that I can react, debug, and fix things quickly when shit hits the fan).",big_clout,2025-07-28 18:03:28,15,cscareerquestions,t3_1mbmvot,False,
n5nfk4l,MSCS is not really useful unless your undergraduate degree was not in CS.,beyphy,2025-07-28 18:08:46,25,cscareerquestions,t3_1mbmvot,False,
n5nnmca,"I think the better question is, what's to prevent that you won't end up in the same position? let's say you go do a Master's degree, then after the completion of that, whats to prevent you asking ""should I grind leetcode or should I go for a PhD"" later?",NewChameleon,2025-07-28 18:46:57,6,cscareerquestions,t3_1mbmvot,False,
n5nhvrz,"With MSCS, i agree with others. It's not rreally that necessary for us. It does help to make your resume look a bit nicer and might get you a slightly higher role and pay off the bat, but to me it's not worth 2 years of missing out on experience to do for an extra 5k-10k in pay you would've just likely had if you started to work. The key really is if you can get a job to pay for your masters degree. So in summary, it's not worth the MSCS unless you get someone to pay it for you or if you can escape paying minimal and not having to get loans. I had my job pay it for me and I grinded for 2 years as a part-time student and only had to pay 5k out of pocket those 2 years. But I also did summer courses as well to finish on time. As for your leetcode grind. I am not someone who really thinks you need to ""grind"" leetcode to get a job. You can and might be good at it to land the job, the problem is that many people think they can just grind it and dont care to learn the ins and outs of what they are doing. So they basically are hoping to get a similar question where they can think ""omg that's leetcode question #100 or similar to it, i just need a map"". But they dont care to learn why they need the map, or if there's a slightly different approach they could take. I have been in the job market twice in my career, never had to grind leetcode and I got into two big tech companies (one of them a Mag7 company) by just following a google DSA guide I will link below. It has videos from cracking the coding interview author that explain DSA very well. Also links free leetcode study guides with example questions to practice on. Companies dont care if you get the questions right, they only care if you know what you are doing and explain your thought process well in the questions. I got both those jobs and didnt do 100% well on the questions. A few times I got stuck but because I explained my thought process well they liked my approach. They know you wont get it 100% off the bat, they just want to know where your heads at. So for me i like to say ""hey i think I can possibly use a map here because of XYZ possibly a set"" and then I try it. I also go step by step. So usually the first thing I tackle is the return cases. I.e. if I am doing a array traversal the first thing I write is the return case if array is empty. It sounds dumb, but they appreciate when you tackle the small things first that could easily be forgotten. Also it's one of those things of once you start coding your nerves go down even if it's a simple lin. Then at the end I write test cases and try to go through multiple different cases (empty array, edge cases, etc). If any of them come out wrong, then I quickly refactor.Google DSA link is: [https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/](https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/)",Broad-Cranberry-9050,2025-07-28 18:19:39,3,cscareerquestions,t3_1mbmvot,False,
n5nj75c,"I think you would get the best value out of applying for jobs. Real interviews will help you more than playing around until you think you are ""ready"". YMMV if it is FAANG or bust.",marsman57,2025-07-28 18:25:55,2,cscareerquestions,t3_1mbmvot,False,
n5nk7xn,"For what it's worth, I went down the M.A.Sc route. I did it with the Comp Eng department, but the research was pretty much all coding. I also had my degree in Electrical Engineering so this was a nice way to transition to programming. Anyway, my supervisor had tons of industry contacts, and it made my job search so easy. Literally the easiest interview I've ever done, they sent me an easy assignment then shot the shit during my interview and I got a quick offer.I don't think the degree itself made much difference, but I don't think I could have got those industry contacts any other way. I was also somewhat considering the academic route, but realized pretty soon into the degree that I didn't want to.I think course based programs are pretty much useless. Make sure you do a research based program.",TraditionalClick992,2025-07-28 18:30:46,2,cscareerquestions,t3_1mbmvot,False,
n5nawv3,"MSCS is in my opinion a door to academic career but not industry. Unless it is an R&D position, nobody in the industry will care and ask about your masters degree (i am told so, correct me if exceptions exist).YOE matters first.",AbbreviationsTrue183,2025-07-28 17:47:33,3,cscareerquestions,t3_1mbmvot,False,
n5pqfo3,Just do leetcode or pursue a PhD. MS is a half way house with not enough juice for the squeeze,finfun123,2025-07-29 01:13:03,1,cscareerquestions,t3_1mbmvot,False,
n5rcusy,"The brutal truth is that grinding LeetCode and building projects will get you hired faster and cheaper than spending 2-3 years on a master's degree. Most tech companies care way more about your ability to solve coding problems and demonstrate practical skills than they do about advanced degrees. A master's degree might open some doors at research-heavy companies or for certain specialized roles, but for the majority of software engineering positions, you're better off investing that time and money into sharpening your interview skills and building a portfolio that shows you can actually code.That said, the interview grind is real and can be soul-crushing if you're not strategic about it. Focus on understanding patterns rather than memorizing solutions, and make sure your projects actually solve problems or demonstrate technologies that companies use. The market is tough right now, but candidates who can confidently navigate technical interviews still get offers. I'm on the team that built [AI interview helper](http://interviews.chat), and we created it specifically to handle those tricky interview moments when you're stuck on a problem or need to think through your approach out loud.",akornato,2025-07-29 08:35:50,1,cscareerquestions,t3_1mbmvot,False,
n5eyvz3,">Before it was grinding DSA, web dev and some good projects.Recruiters [don't care](https://www.reddit.com/r/csMajors/comments/1jqjw5a/comment/mla5btc/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) [and won't](https://www.reddit.com/r/cscareerquestions/comments/1kkc998/comment/mrufd1i/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) [look at](https://www.reddit.com/r/cscareerquestions/comments/1kkc998/comment/mruik2v/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) [your projects](https://www.reddit.com/r/cscareerquestions/comments/1m5ek9x/comment/n4bfu4s/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button). [Unless you go viral](https://www.reddit.com/r/cscareerquestions/comments/1m3nbuy/ive_got_my_first_swe_job_this_side_project_helped/) in which case you didn't need a CS degree.Study instead to make better grades or do non-project activities you are passionate about. That looks good in any form. I like volunteering. Web dev pays the lowest in all CS. I never grinded coding problems in my life.I like other comment telling you to look at job descriptions. They tell you what they want, which is work experience. Get an internship or co-op.",NewSchoolBoxer,2025-07-27 11:21:40,17,cscareerquestions,t3_1mah0mc,False,
n5ej9m5,Search for general software engineer roles in your desired location and see what the job requirements say consistently. This question is too open ended for someone to give a direct answer,honey495,2025-07-27 08:52:50,8,cscareerquestions,t3_1mah0mc,False,
n5frntk,"Look up five or ten open job positions at companies that you want to work at, check out their requirements for something in your qualification range. Create some projects that incorporate those requirements post that to your GitHub and add those projects to your resume. Recheck after a year to see if any requirements have changed significantly, maybe a new technology or pattern that you aren't aware about. Find an internship, note: if the internship is unpaid, they MUST be conscious of your time, nothing more than 10 hours per week should be expected.",gemini88mill,2025-07-27 14:26:51,5,cscareerquestions,t3_1mah0mc,False,
n5g3re7,The only thing that is actually in demand is being a renowned AI/ML researcher with a PhD from MIT/equivalent. Anything else is dime a dozen.,rocksrgud,2025-07-27 15:29:32,2,cscareerquestions,t3_1mah0mc,False,
n5g5tk3,Connect with all the other CS students and be a great collaborator. Your future jobs will come from people you worked with.,Spiritual-Theory,2025-07-27 15:39:52,2,cscareerquestions,t3_1mah0mc,False,
n5gxrh5,"It still is grinding DSA, web dev, and good projects, because that's where the most CS jobs fall under. Maybe studying AI is the best leverage in the market today",throwaway133731,2025-07-27 17:55:17,2,cscareerquestions,t3_1mah0mc,False,
n5g19n9,"Programming languages are more similar than they are different. Learning about the fundamentals of how they turn into machine code will enable you to pick up a new language much quicker.Doing your own project has value in learning new skills, but how applicable they are in actual work environments depends on the scale of your personal project.Learning how to read others code and build an understanding of existing systems is often more valuable than being able to create something from scratch.Consider contributing to bigger open source projects, as knowing how to collaborate is often more important than how many languages you know. You will also learn how to deal with know it all asshats in open source and be able to navigate toxic management when you get a job.",frosty5689,2025-07-27 15:16:56,2,cscareerquestions,t3_1mah0mc,False,
n5j56yo,"Nothing is gonna stand out to recruiters but to interview well you should focus on fundamentals first (data structures and algorithms), then really study computer architecture and operating systems. If you really understand those topics you will do well in interviews.",publicclassobject,2025-07-28 01:06:08,1,cscareerquestions,t3_1mah0mc,False,
n5k83pe,"In the circles I run in: Python, SQL, various AWS products, kubernetes, and being very comfortable in a *nix environment.",Ok_Experience_5151,2025-07-28 05:42:42,1,cscareerquestions,t3_1mah0mc,False,
n5n5r02,realistically there's a big gap between what's valuable and what's in-demand in the current market.,Wandering_Oblivious,2025-07-28 17:24:10,1,cscareerquestions,t3_1mah0mc,False,
n65u7af,"You don’t, especially if you’re a L1 or something. Leave it to management. If you have a solid manager (and even better a solid exec in charge of the dept) they’ll be constantly pushing for improvements and you’ll win some and lose others. What’s more likely is these “politics” = finance doesn’t believe the benefit outweighs the cost or management literally cannot competently perform whatever the recommendation is and doesn’t want to report back to the VP why you spent a month on a project that didn’t really affect overhead or productivity by much in the long run.",DifferenceClassic201,2025-07-31 13:28:58,11,cscareerquestions,t3_1me1fu9,False,
n65v11i,"i wish i knew too. client adds feature at every meetings. The PM complained i was late 3 weeks but they add a week's worth of my time. Told him, he did not care at all.",Toys272,2025-07-31 13:33:11,4,cscareerquestions,t3_1me1fu9,False,
n65w8ji,Never mess with another man's breadbasket.https://en.wikipedia.org/wiki/Bullshit_Jobs,OnlyAdd8503,2025-07-31 13:39:25,3,cscareerquestions,t3_1me1fu9,False,
n67vyf0,"Listen, ask questions, fuck up.There's really no other way to learn then by doing.",Drauren,2025-07-31 19:16:35,2,cscareerquestions,t3_1me1fu9,False,
n683oyj,"I don't agree or follow all of them, but the 48 Laws of Power has been very useful for office politics.",FailedGradAdmissions,2025-07-31 19:54:16,1,cscareerquestions,t3_1me1fu9,False,
n68vcw6,"How do you deal with it? You give zero fucks about it, that's how.You have an obligation to provide your opinion on what is the best approach to solve a problem. If that opinion is then waved away because of politics, that's a company problem, not a you problem. Let it be and move on.",Early-Surround7413,2025-07-31 22:08:40,1,cscareerquestions,t3_1me1fu9,False,
n5zyvww,"For me, I dont think you need to grind LC tbh. Some do and get that job well but I personally have gotten into two major big tech companies and never had to grind leetcode either time. Im not someone who would consider myself amazing at coding either. Usually I follow the Google DSA guide: [https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/](https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/)It links videos from cracking coding interview author who goes through each DSA pretty well. Also links many LC study guides that have example problems. For me, it's more important to understand DSA than actuall just grind and hope to get a similar problem. Gridning can get you the job but good interviewers will really test your knowledge and if you fall down the wrong rabbit hole you wont understand how to get out of it. For me I try to do coding questions step by step and when I speak loudly I say ""Im thinking about whether a set or map makes sense here"" and say why. It's not about getting it right it's about showin gthem your mindset when you are presented with a problem. Since you are good at your job. and know your shit this guide is probably all you need tbh.",Broad-Cranberry-9050,2025-07-30 15:56:30,6,cscareerquestions,t3_1md911u,False,
n5zpl7z,"I would prob ask your current comp and baseline tbh.If your goals is tech/unicorns, your going need grind lc, system design, etc.If your underpaid in non-tech sector and just want a boost, I think its 100% reasonable. A lot of non-tech companies won't ask you lc questions. They will just talk through your resume, test your general technical knowledge based on their positions verbal format, and see if your current skillset/personality alligns with their role.",MangoDouble3259,2025-07-30 15:12:27,4,cscareerquestions,t3_1md911u,False,
n64rv0j,"don’t just shotgun apply—definitely brush up on interview skills, especially since the market’s tough. Try to get company-specific questions ([prepare.sh](https://prepare.sh) is great for that, plus LeetCode if you’re burning out on generic stuff).",Dependent_Gur1387,2025-07-31 08:53:56,1,cscareerquestions,t3_1md911u,False,
n618ex4,"I agree, if you have a good grasp of data structures and algorithms, you should be able to get to where you need to get to during an interview.The only reason I leetcode is so I can get good at writing code during an interview (I practice/interview with python because it's just so much quicker even though I've never used it in production). I also mostly look at leetcode questions as a mental exercise to see if I could think up of a solution - rather than actually code it out.",still_no_enh,2025-07-30 19:27:17,2,cscareerquestions,t1_n5zyvww,False,
n6196cy,"I get it. Im not against using leetcode to practice, just the idea that you need to spend hours on end because I feel like most people grind but dont really try to understand.",Broad-Cranberry-9050,2025-07-30 19:30:58,1,cscareerquestions,t1_n618ex4,False,
n61c1gk,"I agree with you. It's the problem I see with the whole Leetcode thing. People are literally just trying to pass the interview using rote memorization which might work in class/exams, but they'd fail as soon as the interviewer asks any clarifying questions - as an interviewer I've definitely seen this.The interviewee immediately ""figures out"" the optimal solution, I throw in a complication that invalidates the optimal solution and brings it back to exponential (n^2) time and they fumble.",still_no_enh,2025-07-30 19:44:50,1,cscareerquestions,t1_n6196cy,False,
n5pxf33,">Is getting a job with no internships having graduated from a mediocre/below average university a sheer numbers game? you could have asked this exact question back in ~2015 era and the answer would be yes now? the hiring bar and competition is like 10x more fierce >quite literally apply to every single open position in the country and just move wherever at a whim I mean, is there something that would prevent you from doing that? I remember when I was a new grad I had like 10 cities on my radar and I'd be willing to fly to any of them",NewChameleon,2025-07-29 01:53:31,14,cscareerquestions,t3_1mbygci,False,
n5rx1pw,"It has for many years been the case that it is a numbers game (especially in the digital applications era), and the degree is not sufficient. Internships, impressive academic projects, connections, etc. are ways to get more chances. Grinding applications is table stakes if you haven't landed anything prior to graduation.For the majority of jobs that are not basically localized services (e.g. education, healthcare), it is common as a new grad to have to apply broadly and relocate wherever the job is.Most or many new grads in a lot of fields don't end up working a job related to their field of study.A degree helps unlock a lot of paths but it is one step in a process, not the whole journey.",rajhm,2025-07-29 11:33:10,1,cscareerquestions,t3_1mbygci,False,
n5pvbuz,Everything is a numbers game. If you have a 1% to get an offer for each position then you only need to apply to one average 100 positions.,Haunting_Welder,2025-07-29 01:41:33,0,cscareerquestions,t3_1mbygci,False,
n5q5acx,"idk I've been thinking about trying really, really, really hard to get into Amazon but the fact that I went to a relatively unknown, bad university kinda makes me doubt I'm much higher categorywise than a bootcamp graduate",throwaway10015982,2025-07-29 02:40:22,2,cscareerquestions,t1_n5pthap,True,
n5pxrl8,>now? the hiring bar and competition is like 10x more fiercengl I'm increasingly wishing I had at least gotten a degree in something fun like music is if I knew CS was going to have literally zero employment opportunities for the average new gradas I get older I realize I honestly probably wouldn't have even been that bummed about doing music ed with some personal development and could have become a professor somewhere on a long enough timescale but now I'm kinda fucked permanently lol,throwaway10015982,2025-07-29 01:55:31,1,cscareerquestions,t1_n5pxf33,True,
n5qdl88,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 03:34:11,1,cscareerquestions,t1_n5qdl6s,False,moderator
n5pzeqk,">ngl I'm increasingly wishing I had at least gotten a degree in something fun like music is if I knew CS was going to have literally zero employment opportunities for the average new grad well, depends on year, imo most of the gloom and doom happened after 2023-onwards before-2019 I feel is the more ""normal"" era, but even back then it's normal to send out couple hundreds of applications then 2020 was covid, first half was doom with countless layoffs and offers rescinded, then second half was party again once Fed turned on infinite money printer then 2021-2022 was peak hiring frenzy with the money printer, people shouting things like ""name and shame on Google for only offering me $150k as new grad! I was expecting $200k!"" or ""Amazon offered me $190k as new grad is that good?"" and you'd have people reply ""nah that's a lowball I got $230k at Facebook""",NewChameleon,2025-07-29 02:05:05,6,cscareerquestions,t1_n5pxrl8,False,
n5q4wj0,"tbh I'm kinda just upset and being histrionic due to me feeling like this was a way out of my absolutely terrible life, so I'm going to keep trying until my new grad status expires (well I haven't been trying lately but I was on disability and just needed time to chill) and then try to change careers but it sucks how even STEM degrees are now essentially worthless in terms of social mobility I'm in the Bay Area so it's even worse",throwaway10015982,2025-07-29 02:38:02,0,cscareerquestions,t1_n5pzeqk,True,
n5u085b,"Id take the interview and expect nothing. See it more as interview practice. Think about it, if tomorrow you had a chance to work with your dream company, make twice as much as you do now, etc, you dont want that to be your first interview after a few years. You want to have already interviewed with other companies to get those nerves out the way and get an idea of what you can fix for the next interview. So again, a phone interivew is usually just the recuriter asking you what you do and to give brief descriuptions so he can send it to the hiring manager. It wont guarantee interviews at all, just that you are in the system. If you get interviews, I say take them and expect nothing from them. If you get it and you feel it's a better opportunity than you cross that bridge if you get there.",Broad-Cranberry-9050,2025-07-29 17:54:52,21,cscareerquestions,t3_1mchcvw,False,
n5tsew8,Unfortunately the modern interviewing process is a lot of wasted time and effort so I would recommend embracing the suck if you really want a new job,dsm4ck,2025-07-29 17:19:53,8,cscareerquestions,t3_1mchcvw,False,
n5uw32v,"If you don't want to study super hard, then just don't and take the interview anyway. 1% chance is still more than if you don't try at all. Probably still worth studying if you think you'll have a shot, though.The worst thing that happens in either of those cases is the same thing that happens if you decide not to take the interview, so...accept the interview.",skodinks,2025-07-29 20:24:14,3,cscareerquestions,t3_1mchcvw,False,
n5v18fw,"Honestly - it’ll be a very tough sell right now. As an example, I have over 12 YoE and I’m applying for senior level roles (despite my last two roles being staff and lead) and I have recruiters bringing up YoE on skills that wouldn’t have mattered to them 3 years ago.",ReasonSure5251,2025-07-29 20:48:12,2,cscareerquestions,t3_1mchcvw,False,
n5wc8mv,"You should take the interview but expect nothing. I used to believe studying super hard could help me land jobs, but in reality it's not like that. If you never take interview, once you take one, you will likely be super nervous and inconsistent.",Confident_Yogurt_389,2025-07-30 00:56:55,2,cscareerquestions,t3_1mchcvw,False,
n5ttih5,Imma be 100% with you. Study and hit some leetcode mediums. You're in consulting so you can probably sell yourself well. But using a technology for 8 months and only coding 2/3 years you've been working aren't exactly senior dev level despite what the HR rep says. I'd obviously try and get the job but I wouldn't be super optimistic,Reasonable_Bunch_458,2025-07-29 17:24:48,1,cscareerquestions,t3_1mchcvw,False,
n5xc9rb,"If you like the job, give it a try. You’ll learn either way, and it could lead to something better.",employHER,2025-07-30 04:48:09,1,cscareerquestions,t3_1mchcvw,False,
n5xjcea,"> What would you do if you wanted a new job? Me personally? In order:1. Hit up my past managers and coworkers that I still keep up with to see if they're hiring or can refer me directly to someone who's hiring, since I know they'll vouch for me.2. Polish up my resume & catalog what I've been doing for the past N years at my current employer.3. Go onto some jobs website, maybe Glassdoor, and do some keyword searches to find roles that match my skill set and seniority level. Either local to where I live, or fully remote and based elsewhere.4. Start applying for them using a customized cover letter for each employer that highlights some reason I want to work for them -specifically-.",Ok_Experience_5151,2025-07-30 05:47:40,1,cscareerquestions,t3_1mchcvw,False,
n5y1pba,"I’d say go for it if you’re interested! Even if you don’t have every requirement, sometimes companies are flexible. I’d do some digging on the company and check out real interview questions",Dependent_Gur1387,2025-07-30 08:40:52,1,cscareerquestions,t3_1mchcvw,False,
n5u0udo,:thumbs_up: They also have a jr role that basically does the same thing as the Sr role according to the job description,br_234,2025-07-29 17:57:39,3,cscareerquestions,t1_n5u085b,True,
n52adep,"Just curious, what does the company do that two part-time developers are all they need?",silvergreen123,2025-07-25 10:42:53,7,cscareerquestions,t3_1m8r2i0,False,
n54cyh1,"You're not too important, you're being taken advantage of. They'll milk you 'till you're burned out, and just get a new hire or consultant with double the pay. If they think you're that important, your pay wouldn't be 40 bucks per hour.Fuck them, and take care of yourself and family first.",amlug_,2025-07-25 17:20:27,6,cscareerquestions,t3_1m8r2i0,False,
n55etc9,"Do you have stake in this company? If they succeed, will you be a part of this success? Because it seems you’re sacrificing your mental health for someone else’s gains",iamgrzegorz,2025-07-25 20:22:32,3,cscareerquestions,t3_1m8r2i0,False,
n51h849,I rarely hear good things about situations that are similar to this. Most people who continue working while feeling this way end up completely quitting the field or they would be hospitalized. The best advice would be to know your limits in this company and try to understand whether the company's expectation of you is unreasonable.,Sufficient_Face_4973,2025-07-25 06:14:16,6,cscareerquestions,t3_1m8r2i0,False,
n51jei4,"Take 2 weeks off and everyone will realize you're not important at all and the show runs just fine.I've seen maybe people that were ""too important"" leave teams or go on extended time off, and not once was there a meaningful impact to the team.",Bobby-McBobster,2025-07-25 06:33:36,4,cscareerquestions,t3_1m8r2i0,False,
n56tj03,">The problem is, there are only two developers, with limited availability, and we are only getting more and more work, no new hires, and they are scared I’m about to quit.Cool, tell them you are not working more than 8 hours a day, 5 days a week. You will also being taking your lunch break and not working through that either. DO NOT settle for more money. Tell them you are working 8 hours and proceed to do that. If they fire you, great, you now have unemployment.Stop making up for their inability to hire new people or to extend their deadlines. Don't quit, just tell them you are working 8 hours a day and can no longer work more than that due to outside obligations. Don't ask for permission, you are not their slave. If it doesn't work for them, tough. Let them figure out what they want to do next.",Legitimate-mostlet,2025-07-26 00:59:37,1,cscareerquestions,t3_1m8r2i0,False,
n5iagzg,"Yes they may struggle if you take a break or leave, but it is not your responsibility to keep them afloat or save them. It is THEIR responsibility to create a work environment that is manageable such that employees can/want to stay.Your first responsibility is to yourself. Then your child and spouse. And then work. And you can't be there for anyone if you don't put your own oxygen mask on first!You're clearly a kind, generous, and thoughtful person. They're lucky to have you! And this will maybe be a very critical lesson they need to learn before they get any bigger and the stakes are higher",Urbanwoodartistry,2025-07-27 22:04:05,1,cscareerquestions,t3_1m8r2i0,False,
n5k98w6,"Been there. When you’re the duct tape holding a startup together, asking for time off feels like pulling the plug.But burnout isn’t weakness — it’s a system failure. I had to be brutally honest with leadership: “Here’s what I can give, here’s what happens if nothing changes.” Framed it as a team risk, not just personal burnout.Also: started documenting *everything* and pushed for LATAM support — fast, reliable, no drama hires. Total game-changer.You don’t have to quit to breathe. But you do have to stop carrying it all.",Acceptable-Energy425,2025-07-28 05:52:53,1,cscareerquestions,t3_1m8r2i0,False,
n54m2q4,"It’s not that we’re all they need, we’re all they have now and simply cannot keep up with the demands… they’re supposed to be hiring more devs soon, but that will be the opposite of making things easier for a long time if new hires even work out. I was full time but had to officially reduce my hours because I just cannot do it FT anymore due to my health/family",frootbeer,2025-07-25 18:02:16,2,cscareerquestions,t1_n52adep,True,
n5akw5t,100% this. If you are in the US you are completely being taken advantage of.,lechatsportif,2025-07-26 17:08:17,1,cscareerquestions,t1_n54cyh1,False,
n68rnnc,2 years off? you mean that time you were running a successful freelance business?,octocode,2025-07-31 21:50:03,100,cscareerquestions,t3_1meeikn,False,
n68xnef,"Not a dealbreaker with the 6 YoE. I personally don't even ask questions about gaps. Could be anything, sick parent, health issues. i.e. stuff that's none of my business",Primary-Walrus-5623,2025-07-31 22:20:32,22,cscareerquestions,t3_1meeikn,False,
n68yx3e,Anyone running an actual business can talk about it at length. There are tons of challenges and strategies that can be discussed in an interview.,oalbrecht,2025-07-31 22:27:09,7,cscareerquestions,t3_1meeikn,False,
n68znkk,"I have a coworker who took a year off after layoffs (from FAANG though) and came back with no issues 6-8 months ago, so I'm guessing 2 won't be much worse, plus as others said you can list your business as a job.",Landya,2025-07-31 22:31:02,4,cscareerquestions,t3_1meeikn,False,
n69kli0,"LOL, Exactly. Got it now!",Andydaltonblowhard,2025-08-01 00:28:49,1,cscareerquestions,t3_1meeikn,False,
n68spck,Exactly. Phrase it correctly and it's actually pretty impressive. This is not what I would call a gap at all.,ObeseBumblebee,2025-07-31 21:55:23,31,cscareerquestions,t1_n68rnnc,False,
n68tddg,"Hypothetically, how do you prove that sort of thing when recruiters or hiring managers ask for details? Also doesn’t it show in a background check?",goro-n,2025-07-31 21:58:43,3,cscareerquestions,t1_n68rnnc,False,
n6962vo,"I took 6 years *off* with 3 years experience, been back for 3 years baby!",Helpful-Muscle3488,2025-07-31 23:06:11,8,cscareerquestions,t1_n68xnef,False,
n68thi4,"sorry, my ~~clients~~ projects are all under NDA, but i can provide references from my past employers",octocode,2025-07-31 21:59:17,8,cscareerquestions,t1_n68tddg,False,
n691784,"The interviewer will ""prove it"" by having a conversation with you about it. See what details you can share about it.",ObeseBumblebee,2025-07-31 22:39:24,2,cscareerquestions,t1_n68tddg,False,
n56rixb,If you’ve never done a commute like that (either) it will slowly diminish you. Neither are sustainable imo. 45 mins is about the max long term,totaleffindickhead,2025-07-26 00:47:30,49,cscareerquestions,t3_1m9fm5a,False,
n56tugp,"Out of curiosity, are you currently unemployed or desperate? Both of these don't sound great for different reasons (commute for offer 1 and the job itself for offer 2). If i had to pick, id do offer 1 and if you can't live with the commute, id get back on the market in a few months. I've done 1.5 hour commutes before, it definitely sucks but if its for a job you enjoy it's really not that bad. If it were me though, i'd say no to both and keep looking (assuming not unemployed)",lewlkewl,2025-07-26 01:01:34,5,cscareerquestions,t3_1m9fm5a,False,
n575kff,"I'll be honest with you, I can't imagine any scenario where 49 miles in LA translates to just an hour and a half during rush hour. Basically only if it's more outside of the city and you also live outside the city (on that same side and don't need to commute around/through the center of it). Like *maybe* if the commute was something like Moorpark to Santa Monica and the commute is mostly through the mountains/on PCH. But even then, it'll probably be a little dicey on a lot of days. Depending on where the second job is (assuming it isn't downtown or anything), I'd definitely take that, personally.",Great_Northern_Beans,2025-07-26 02:15:04,5,cscareerquestions,t3_1m9fm5a,False,
n56vrbv,Are you in an area where commuting is going to be tough for any job you land? On site is here to stay now that we’re in post pandemic era. Take the 1st offer and keep looking or get REALLY comfortable with podcasts and audiobooks.,TheLastDoofus,2025-07-26 01:13:17,4,cscareerquestions,t3_1m9fm5a,False,
n56wqtr,I'd do 1 simply because the team dynamic is much more important to me than the commute. I feel like offer 1 would be better to leverage a hybrid role after some time.,Chattypath747,2025-07-26 01:19:27,3,cscareerquestions,t3_1m9fm5a,False,
n56znjy,"Both commutes are bad enough that they will inevitably wear you down. How much you like your work environment will slow down (but only slow down) the erosion, so, IMHO, you should base your decision on how attractive each offers’ work environments are to you. In that case, from the way you’re describing them, offer 1 sounds far better.No matter which one you choose, you eventually will have to solve the commute issue, whether it’s somehow negotiating for remote/hybrid work in the future, looking for another role closer to you or remote when the market recovers, etc.Congrats on your offers!",YUGETBPLUS,2025-07-26 01:37:53,3,cscareerquestions,t3_1m9fm5a,False,
n56pwk4,"49 miles to DTLA? This really depends which part of LA we are talking about. 32 miles being an hour during traffic? I can drive 37 miles at like 2 pm on a weekday and it is an hour 15. I like company 1 more, but not sure if you are able to eventually move closer as that would be and factor long term.",honey1337,2025-07-26 00:37:39,4,cscareerquestions,t3_1m9fm5a,False,
n56sc0w,People are getting offers? Can't even get a dang interview,Lanky-Ad4698,2025-07-26 00:52:24,2,cscareerquestions,t3_1m9fm5a,False,
n57bptk,"Shorter commute. It's LA. Both of your estimates are for good days. On a bad day, add 50% to the commute. On a shit day, double that commute time. Once I was unemployed, and in a rather complicated situation that meant I wasn't just responsible for myself. I got lucky and got a job offer for almost 20k more than what I was making previously. The only issue was the new job was in a completely different part of the city.I didn't have a car yet, my previous job lined up nicely with the bus routes ( although coming home I usually just Uber'd to save time). With the new job I usually just Uber'd to work, this was fine. But I literally had some days where the Uber home would take so long I'd just fall asleep. We're talking about 45 minutes( one way) turning into 80 minutes on a bad day. Eventually I just moved within 10 minutes or so of my new office. It was a great job and a major stepping stone for me, but there's no way I could have done it without moving. Since you own your house and probably don't want to move, just take the shorter commute. That 32 minutes is probably going to average 45 minutes in reality. Which isn't the worst thing.",mcAlt009,2025-07-26 02:55:56,2,cscareerquestions,t3_1m9fm5a,False,
n56mjvg,Data analysis is dead afaik. I think your best bet is Java dev at a large firm (bank),totaleffindickhead,2025-07-26 00:17:28,9,cscareerquestions,t3_1m9eww9,False,
n56nbrl,"I think it's worth learning how to build a basic website - so you can start there. Make a github and make a basic site with HTML/CSS and host it and see if you enjoy that.If you do, move on to adding some dynamic functionality (js). If you still enjoy that, add a backend to your site to add some functionality to it.If you are still enjoying that process then start delving deeper into the more advanced technologies.",sunshard_art,2025-07-26 00:22:09,3,cscareerquestions,t3_1m9eww9,False,
n584ota,"So to start, this can vary a lot from person to person, but this may take a fair amount of time to pan out. With today's market, you got to be pretty competitive (4-5 years ago, you had a better chance of ""getting lucky""). Working full-time is a pain, and even putting just 10 hours a week into transitioning into SWE can be hard. All-in-all, I wouldn't be surprised if it took you over a year to line up your first job.I will say though, as a self taught dev with no degree, you got some strengths here: You have a CS degree and you've been working a job that will generally look respectable on a resume. I do think you have a pretty healthy shot at transitioning into SWE, but the market is bad and it's pretty rough out there.I'll assume you have some rough experience with programming (how to reasonably use classes, functions, if statements, for loops), or at the very least, all that will come back to you pretty quickly.If you want to get into fullstack, I would start off by focusing on Java / Springboot for backend, JavaScript / React for frontend, and use Git. I would ***probably*** recommend taking a Udemy course (I never personally tried Udemy, but I often hear good things) for both React and Springboot. You can just watch a YouTube tutorial for Git. Try to get to a point where you can work on a project pretty consistently. Just have one project you're pretty committed to.After that, there's interview prep. Go through the roadmap on https://neetcode.io (mainly focus on the video explanations, don't waste a ton of time trying to solve questions yourself at this stage). After the roadmap, do some random questions LeetCode, and try to get to a spot where you have like an 80% chance of solving an unfamiliar medium-level problem in under 60 minutes (if you haven't solved it after 2 hours, just look up the answer and try to think where you went wrong).More than anything else though ***talk through the problems***. You wanna be good at ""solving"" problems because sometimes you get ""assessments"" (basically you have to solve a LeetCode problem before getting to interview anybody), but for ""interviews"" you need to be good at talking technical. You should look up ""mock coding interviews"" on YouTube interviews to see what mean here.You should start applying before you're 100% confident with anything though (you're never going to be 100% ready to start applying). In fact, I would honestly recommend you just start sending out like 3 applications a week ***right now***. Just half ass it, get it out of the way, and get used to it. Don't waste too much time ""waiting to feel ready"" (I wasted a lot of time on this back in 2021).For your resume, skim through the wiki on r/EngineeringResumes. You'll have to adjust a bit though because of your background, but do what you can to leverage your current work experience (be detailed), and mainly try to sell yourself as ""an important team member that holds some key responsibilities and/or accomplishments"". I know that can be really awkward, but again, I think you got quite a respectable role.And finally, as far as applying goes, apply to any role that looks reasonably relevant, doesn't look too ""specialized"", and asks for less than 5 years of experience. Don't be too picky, just focus on playing the numbers game more than anything else.",SpookyLoop,2025-07-26 06:47:32,3,cscareerquestions,t3_1m9eww9,False,
n5enzh9,"You’re in a better spot than you think you’ve got a CS degree, recent hands-on experience in a technical environment, and a clear willingness to learn. That combo’s more valuable than you realize.Since you're already in biopharma, **data analytics** might give you the fastest runway into tech. Python, SQL (start writing your own soon!), Power BI/Tableau are great tools, and healthcare companies are constantly hiring analysts who can work with lab or patient data. Bonus: you can build portfolio projects using synthetic healthcare datasets to show immediate relevance.That said, if you’re more drawn to building things end-to-end, **full-stack with Java + JS** is solid—but it’ll take longer to ramp up, especially if your coding muscles are rusty. One middle path: try backend-focused roles or automation scripting in Python to bridge between the two.You don’t need to “catch up” on everything just pick a direction, build 2–3 focused projects, and you’ll have a strong story. Feel free to ask if you’d like free beginner-friendly project ideas or a platform where you can find study buddies to stay consistent.",Superb-Education-992,2025-07-27 09:40:41,2,cscareerquestions,t3_1m9eww9,False,
n5ciwf0,"In 2025, there is no chance of you getting a dev job as a 2021 grad with no experience unless you make an application that gets actual users. Just being realistic. A basic side project isn't going to do anything, doesn't matter what language you use to make it.Forget taking courses and just start building something and learn as you go.As for being a data analyst, there's not really much you can on your own to prove to an employer to hire you over someone with internships l.",futureproblemz,2025-07-26 23:35:01,1,cscareerquestions,t3_1m9eww9,False,
n56toxx,"Oh okay, I wasn't aware. Is this due to AI being able to do a lot of the data analysis workload? What changed in the industry to make it this way (if you know)? Thank you.",CasualFailure,2025-07-26 01:00:37,1,cscareerquestions,t1_n56mjvg,True,
n56twfr,"I know it's rather hard to get a job just doing this though as almost any CS grad can do it. Not trying to knock your advice, but what can separate a developer from hundreds of other entry-level developers in this regard is what I'm asking I guess.",CasualFailure,2025-07-26 01:01:54,1,cscareerquestions,t1_n56nbrl,True,
n58cbb5,"Wow, thanks a bunch for taking the time to write this out! This was very helpful. I've actually done a few uDemy courses over the years but I think that approach doesn't work for me as well because I don't really feel like I'm retaining any of the stuff just from watching a video and regurgitating. Maybe I'm taking the wrong courses. But yeah, I just started learning Java with Spring Boot tonight. Decided to do a common project (Making a Letterboxd ""clone"") , but rather than watch a video tutorial, I'm using chatGPT to learn. At first, it's been giving me a bunch of code snippets to paste and I'm going through with that to learn the process in how to make a project from start to finish with a backend and frontend, but I think moving forward, I'll ask it to give me less code snippets and more just explain concepts and theories with examples without the code directly related to the project I'm working on. Perhaps I'll try to get the fundamentals down again, maybe make a solid project or two (Nothing too crazy) and then start applying within the next week or two. Thanks for being encouraging about my chances. I'll try to leverage my science/healthcare background and maybe look for more niche roles in the biopharmaceutical industry related to tech/SWE. Obviously, they won't pay as big as tech or finance companies, but I'm just trying to learn and get my foot in the door ASAP to gain more relevant experience. Thanks again for the advice :)",CasualFailure,2025-07-26 08:00:07,2,cscareerquestions,t1_n584ota,True,
n5dlbkq,"That's fair. I get you're being realistic. I know the job market is really tough right now. I have a good network I would say though, maybe with a good large-scale project and a referral from my friends/peers, I can break into a tech job. I guess there's no harm in trying while I continue to work my current job. Thanks.",CasualFailure,2025-07-27 03:50:10,1,cscareerquestions,t1_n5ciwf0,True,
n56vhq2,"No it does before that. It’s a long story but in short there was a big-data movement which postulated that collecting tons of data, even if it wasn’t immediately apparent that it would be fruitful, they could parse it and create value from it later. But that never panned put",totaleffindickhead,2025-07-26 01:11:39,3,cscareerquestions,t1_n56toxx,False,
n5lb7mn,"It's not unreasonable to feel dissatisfied, especially if your role isn't aligned with your skills and career goals. Acknowledge that you’ve given it time but still feel out of place. Clearly outline your frustration and express your desire to work in Java development, offering potential solutions or compromises. For example, ask if there’s a chance to transition into a more relevant project or team that aligns with your skills.",DojoLab_org,2025-07-28 11:38:39,3,cscareerquestions,t3_1mbc7c7,False,
n5mqyu9,"Data centric work involving Python, AI, BigQuery all sounds very exciting. You imagined doing something different. I would try to be flexible and open to any interesting work that comes your way. I'm sympathetic to the fact that you interviewed and signed on for one type of work, and they give you a different type of work. But I would try to be fleixble; and the work sounds actually interesting, at least to me. Java is great, but I wouldn't limit myself to one tool, I'd work with any interesting tool that comes my way. I do have limits; I'm sure if I got tasked with writing ancient COBOL or Visual Basic, I couldn't do that for very long.Every job is supposed to have a mix of tasks you enjoy and tasks you don't. The big red flag is if after six months or so, it's all tasks you don't like. In that situation, you should raise the issue to your manager, and ultimately, look for another job.Lastly, QA is often less interesting work than dev. But often they stick newer devs on QA, you learn how all the different internal systems and workflows and processes work, you make sure things don't break, and as you demonstrate competence you transition into actual development efforts. FWIW, I'm in a new dev job, I have 30 YOE, I'm officially a dev, but I'm limited to more QA type tasks at the moment. However, I'm learning how everything works, building rapport with colleagues, and building lists of improvements that would benefit the product, and I'm sure I will get the chance to implement some or most of my ideas, during the next year.",Joram2,2025-07-28 16:15:44,1,cscareerquestions,t3_1mbc7c7,False,
n5nnu4t,">I really want to continue working with Java.If this is the case, then you should keep bringing it up with your manager.That said, otherwise, learn Python and move on. You'll have better career opportunities with data science experience than as a Java developer in my opinion as someone who joined a company as a C# developer and now does Python almost exclusively in data science applications.",marsman57,2025-07-28 18:47:59,1,cscareerquestions,t3_1mbc7c7,False,
n605g9n,"No, it's a scam.",Bobby-McBobster,2025-07-30 16:27:39,20,cscareerquestions,t3_1mdaw5e,False,
n604ndz,Sounds sketchy,cs_pewpew,2025-07-30 16:23:55,7,cscareerquestions,t3_1mdaw5e,False,
n60xg3h,Run!,Dakhnas,2025-07-30 18:34:58,3,cscareerquestions,t3_1mdaw5e,False,
n612r45,"Not to scare you or to endorse this company, but I'm a contractor at a fairly large tech company and my agency had me show a photo ID during the document verification call towards the end of my onboarding process.",PLTR60,2025-07-30 18:59:57,3,cscareerquestions,t3_1mdaw5e,False,
n66smqw,Scam. They're going to use your identity/persona to put someone else (probably offshore but pretending/appearing to be on-shore) into a job.,alinroc,2025-07-31 16:13:53,3,cscareerquestions,t3_1mdaw5e,False,
n60ftue,https://www.youtube.com/watch?v=0JlDzlX0Uqw,supra_kl,2025-07-30 17:15:12,2,cscareerquestions,t3_1mdaw5e,False,
n613db4,Asking for an ID before any interviews feels very suspicious. The fact they were so eager to get in touch with you is another red flag.,Chili-Lime-Chihuahua,2025-07-30 19:02:57,2,cscareerquestions,t3_1mdaw5e,False,
n61eseu,Sounds like a scam. That looks like a scam given how low the money is for California. Heck I told someone last week he wasn’t offering enough money and it was still more than that.,Longjumping-Ad8775,2025-07-30 19:57:40,2,cscareerquestions,t3_1mdaw5e,False,
n605o6f,When I have had to take automated assessments that require video they sometimes ask me to hold up photo ID at the beginning. So they might be concerned that you aren't who you say you are or have someone else interviewing for you.,ConfluentSeneschal,2025-07-30 16:28:40,2,cscareerquestions,t3_1mdaw5e,False,
n611faz,WHOIS the domain those emails are coming from.,Dababolical,2025-07-30 18:53:35,1,cscareerquestions,t3_1mdaw5e,False,
n5xkhna,"It really depends on where you get in. MIT, Stanford, Berkeley might be worth it. Career wise Waterloo might be similar but the student experience at waterloo is not as good.",migoden,2025-07-30 05:57:41,31,cscareerquestions,t3_1mcyd3s,False,
n5z1wos,"First off, apply to everything. Worst case is he doesn't get in. As your fellow Canuck, The Great One said, you miss every shot you don't take.Second, the connections you make at an Ivy League (and Ivy adjacent like Duke, Rice, Stanford, etc) are invaluable. Despite what tech people like to tell themselves it **does** matter where you go to school. And it matters 10 years after your graduate too.",Early-Surround7413,2025-07-30 13:12:59,11,cscareerquestions,t3_1mcyd3s,False,
n5xp27e,Does your younger brother plan to work in USA or Canada?,metalreflectslime,2025-07-30 06:39:18,4,cscareerquestions,t3_1mcyd3s,False,
n5z7zku,"For a regular SWE role in tech at any big tech company you're probably better off going to Waterloo considering how astronomical the price difference is. An industry or role that's more prestige-focused for recruiting you'd definitely be better off going to an Ivy or equivalent. So yes, it would open more doors but if he just wants to work in big tech there's no sense in throwing away six figures worth of money for marginal benefit.",ComparisonCharacter,2025-07-30 13:45:52,4,cscareerquestions,t3_1mcyd3s,False,
n5ykprc,Why do you keep asking this question or very slight variations in so many subreddits (I think even the same subreddits multiple times)?You have your answers. Be happy with them.,dashingThroughSnow12,2025-07-30 11:27:12,6,cscareerquestions,t3_1mcyd3s,False,
n5ymhc7,"Regarding the Ivy League specifically, I’ve encountered vanishingly few Dartmouth, Brown, or Yale grads in my experience in tech over +12 years (big finance, scale up that ipo’d, VC/start up ecosystem). Lots of Harvard, Princeton, Cornell grads. I’m in New York so a lot of Columbia grads wherever you look. Penn has a lot of kids in finance but I can’t think of too many I’ve met outside of that.",DeliriousPrecarious,2025-07-30 11:39:44,2,cscareerquestions,t3_1mcyd3s,False,
n605rbz,"Waterloo is great. It has a great reputation in the Bay. At an Ivy, you'll probably have a better experience as a student and make friends/go to the area that hires those grads.But yeah idk I feel like its only good if you're going for Non Stem reasons. I dont really see an ivy being a cut above except maybe CMU.",just_a_lerker,2025-07-30 16:29:05,2,cscareerquestions,t3_1mcyd3s,False,
n5zbk8e,"It is worth it for any degree, I would think. It would had been nice for me to have had the option when I was young.",etancrazynpoor,2025-07-30 14:04:10,1,cscareerquestions,t3_1mcyd3s,False,
n5zep9o,Attending Waterloo's co op program yielding 2 years of professional experience is better than going someplace else with less internship experience.,drew_eckhardt2,2025-07-30 14:19:46,1,cscareerquestions,t3_1mcyd3s,False,
n60eh9m,Not really.,Eccentric755,2025-07-30 17:09:11,1,cscareerquestions,t3_1mcyd3s,False,
n5v6puk,if you enjoy coding then software dev for sure,jkh911208,2025-07-29 21:13:57,42,cscareerquestions,t3_1mcnlxh,False,
n5vaplr,I would say that it's a lot easier to go from a developer into devops than devops to go into development.I personally would go developer and then when you hit the burnout stage maybe think about trying devops out.,tech_b90,2025-07-29 21:33:35,33,cscareerquestions,t3_1mcnlxh,False,
n5v8y6n,How about you request to shadow both teams for like 2 weeks each?And then make an decision based on which one you liked more.,CyberChipmunkChuckle,2025-07-29 21:24:48,8,cscareerquestions,t3_1mcnlxh,False,
n5vl2f5,"Software dev > dev ops. Being devops, sometimes you get the short end of the stick and need to be putting down fires all the time.Being sw dev, you have more flexibility. Ideally, dev ops is a sub set of being a sw dev.",TVBlink,2025-07-29 22:26:45,4,cscareerquestions,t3_1mcnlxh,False,
n5vrbxq,DevOps if you like being paged at 3 in the morning.,AngelicBread,2025-07-29 23:00:13,3,cscareerquestions,t3_1mcnlxh,False,
n5v966u,"You better pick right, dude. This determines the entire rest of your life, forever.",abluecolor,2025-07-29 21:25:55,8,cscareerquestions,t3_1mcnlxh,False,
n5w809y,"Software dev, for sure.",epelle9,2025-07-30 00:32:34,2,cscareerquestions,t3_1mcnlxh,False,
n5wqz71,"Devops, if your company will invest in implementing proper high availability, site reliability, telemetry and recovery. Once all that’s in place, the need to fight fires is rare. If they won’t, and your job is just reactive fire fighting, you’ll burn out quickly.",fingerofchicken,2025-07-30 02:22:39,2,cscareerquestions,t3_1mcnlxh,False,
n5x7ezz,"What? You are a coder... Or you are not. If you are a coder, devops is boring as hell.",stevefuzz,2025-07-30 04:11:20,2,cscareerquestions,t3_1mcnlxh,False,
n5t2dtb,talk to your manager,bravelogitex,2025-07-29 15:19:30,24,cscareerquestions,t3_1mce6wv,False,
n5tb941,"Have a chat with your line manager, any chance it's the same person for both of you? Additionally have a call with HR, there should be some kind of ethical codex internally that can address this. If there is a public callout again, I would not start defending myself publicly. Take a note, even say thank you for raising something. You need stay on the moral high ground there.",CyberChipmunkChuckle,2025-07-29 16:00:45,3,cscareerquestions,t3_1mce6wv,False,
n5tcim7,Fire back in said public channel - “reviewed concerns above and turns out I was correct. No issues”,KratomDemon,2025-07-29 16:06:43,5,cscareerquestions,t3_1mce6wv,False,
n5t6l5n,"You’ve already answered your own question. Your boss wants you to transition to a leadership role. This most likely threatens this senior dev. If you do transition into a leadership role, you are going to have to approach this situation with that in mind. Go to your manager for mentoring.",stile213,2025-07-29 15:39:19,1,cscareerquestions,t3_1mce6wv,False,
n5ttkmg,"Like others said, bring concerns to manager. Say something like ""hey the senior dev I noticed has been a bit critical of my work recently and doing it in public spaces more often. I dont mind being called out but it seems like he's going out of his way just to do it to me is there anything you can suggest that I can do to best approach this. I dont mind talking to him but I felt it may be best to bring it up to you so to avoid the wrong approach."" Something like that.Unfortunately in this career there are always hostile devs. Some you can learn to co-exist with them, others it's impossible. I've worked with 2 guys like that. First guy, was a screamer. His way or the high-way. I was terrified of hij when I first go tthere. Then I had to work with him. Funny thing was, he ended up being the nicest guy. I learned how to work with him basically. I noticed that if I had a difference of opinion I had to back up my words. Most of the time I was still wrong lol, but sometimes I was right and he gave me credit. I think he liked that I did my own investiagation and even had my own points. I wasnt just taking his word as the god given truth. Now in my second job, I could never figure out the hostile dev. He had no people skills that I could crack. In a lot of ways I compare him to Michael Jordan. He was the guy that knew everything of the project. He produced in his sleep. He didnt mind working 12 hour days. He told managers how to do their job. I fhe didnt like your work ethic, he didnt want to work with you. And I think he realzied early on he didnt like my work ethic (Im more of a9-5 guy). I worked with him on a major project he had created and it went terribly. I kept finding erors and had to change my design like 20 times because each time I came up with a design, another problem would come up. Then he gave my manager a list of his complaints of me. My manager kind of walked on eggshells for him tbh. I will admit some was fair, but others just seemed unfair. The biggest one I remember that I felt was unfair was that my manager said that I have too many commits in my MRs. That happened once and it was because the design changed so much. I fought it but my manager even 6 months later was still using that against me. I ended up getting fired. I dont blame that dev but it defintelty felt like the beginning of the end when I wasnt on his good side.",Broad-Cranberry-9050,2025-07-29 17:25:04,1,cscareerquestions,t3_1mce6wv,False,
n5uohb0,They’re intimidated by you,imagebiot,2025-07-29 19:48:20,1,cscareerquestions,t3_1mce6wv,False,
n5uk086,"Talk to the dev directly, but not aggressively or accusatory. If that doesn't work, talk to managementif that doesn't work, start shopping resumes around",BellacosePlayer,2025-07-29 19:26:54,0,cscareerquestions,t3_1mce6wv,False,
n5v3kse,"So, I’m a senior and we’ve dealt with devs and senior devs like this on my last few teams. Sometimes they do this to cover their own mistakes using a highly visible chat. Sometimes they are completely clueless people that don’t understand that using a wide audience chat is not how you deal with things.So, we’ve fixed this a few ways. First step is to document every single time they call you out on a wide audience chat of any kind. If this person does this to others, probably should document that as well. The more records you have the better. Screenshots are also preferred.Second step is to let your manager know that you don’t appreciate being put on blast by this other dev in a company wide chat especially when they you’re not at fault for the issue. Include your record of every time they call you out specifically and what the actual issue was that had to be resolved. Ask your manager how this should be handled. The wrong answer is “nothing”. We had to do a meeting where all the devs agreed to not individually name people even in our team only chat for issues. Senior Devs can ping people directly and handle it not in a chat.Third step is if this behavior continues and your management doesn’t do anything, notify HR with your documentation. Make sure you have save this documentation somewhere you have access to in case they retaliate (manager, HR, senior dev).On most of my teams, we never had to get past step 2. Only once did we have someone get to step 3 and HR talked to the offending dev and manager. Behavior stopped for a few months and then started up again. In that case, the guy was gone in like 48 hours after he started again because he started blaming people who weren’t on our team or didn’t work on the project with issues.",Enabling_Turtle,2025-07-29 20:58:59,0,cscareerquestions,t3_1mce6wv,False,
n5t6dio,"100%. This is absolutely something your manager should be dealing with. Always remember “praise in public, criticize in private.” If someone isn’t doing that, it needs to be corrected.",ThomW,2025-07-29 15:38:19,5,cscareerquestions,t1_n5t2dtb,False,
n5zx0wo,"I started in a support engineer role. If you're looking for something to study, learn what tech stack your company uses. Learn that and bang out a few projects. Then a year from now, ask your boss for some projects from the dev/ops teams. My first job was a support engineer role. I learned Python and powershell to assist the worst team in the company :face_with_tears_of_joy: (because no one likes powershell). I was eventually promoted and learned cloud ops. We were moved to devops. Then I learned the dev side of devops and went to an integrations role in dev. Then I learned leetcode and went to a big tech company.",Reasonable_Bunch_458,2025-07-30 15:47:54,4,cscareerquestions,t3_1md9mb2,False,
n60qzjn,"Eh, honestly if you are doing larger support for a semi large company? You should def be able to talk to people internally. In my honest opinion, experience trumps all. Projects + connections in my op is the only way to really gain traction now a days.",Manney200,2025-07-30 18:04:58,4,cscareerquestions,t3_1md9mb2,False,
n63hnvi,"Use every chance you get to go a little deeper than your job description. If you hear about someone working on cloud migrations, network configurations, or server maintenance, ask if you can shadow, help, or at least learn what tools they’re using. You’d be surprised how much access and insight you can get just by showing curiosity and initiative. Outside of work, keep building your skills around cloud fundamentals. Since you're studying cloud computing, start applying what you're learning in small personal projects. Spin up a website using S3 and CloudFront, automate infrastructure with Terraform, or play around with IAM policies in a sandbox AWS or Azure environment. The AWS Certified Cloud Practitioner or Azure Fundamentals (AZ-900) are great early on. You don’t need them to get a job, but they can show recruiters you're serious. Then, stack on more practical, intermediate certs (like AWS Solutions Architect Associate or AZ-104) when you feel ready. Definitely apply to internships as much as possible, but also start building a presence online. Maybe a GitHub with your cloud projects, or even posts on LinkedIn showing what you’re learning. Follow your interests too but with intention. If you're curious about DevOps, play with CI/CD pipelines. If security piques your interest, try setting up least privilege access or configuring network firewalls in the cloud. Over time, your interests will naturally start guiding you toward the kind of engineering roles you’d enjoy most.",Content-Ad3653,2025-07-31 02:38:53,4,cscareerquestions,t3_1md9mb2,False,
n5zv4xn,"> I always see that the way in is help desk or tech support.Criminally inaccurate.""The"" way is is a degree, with good grades, multiple internships, and demonstrated competence.Then, there's a lot of nothing. If you can't hack that, the ""next best alternative"" might be one of those jobs.Much the same as if you're climbing mount Everest, you should have a pair of well insulated mountaineering boots.The next best alternative might well be a pair combat boots - in the sense that some people wearing those might still lose their feet to frostbite - but they survived. Pretty good if you compare it to a nice pair of flip flops or ballet shoes...To be honest, I don't quite understand your position and your plan - you're at university still, getting the right degree? Focus on the degree, and internships. Better grades, stronger projects, more internships should be worth more than a help desk job in a student's schedule.",okayifimust,2025-07-30 15:39:07,7,cscareerquestions,t3_1md9mb2,False,
n61jx94,"You don't have to be there for a year. Look now while you're working. While you're there, look for ways to utilize coding to make your job easier. Including that on a resume would be impressive and make sure you can quantify the value you added as it makes it much more impactful when discussing it. Good luck!",JBDynamito,2025-07-30 20:21:55,3,cscareerquestions,t3_1md9mb2,False,
n64r2ma,"Great job landing the tech support role! While you’re gaining experience, I’d focus on building projects related to cloud computing, automating parts of your daily work, and learning scripting (Python, PowerShell, etc",Dependent_Gur1387,2025-07-31 08:46:37,3,cscareerquestions,t3_1md9mb2,False,
n66sscd,1. What’s the culture like ? Is development onsite or in another office / country ? 2. Are there levels you can get at your job ? Master that and level up 3. How does your voice help improve the product and what you’re seeing in support ? Historically at a smaller shop with everyone onsite you can relay because of things going on. All I’ve previously needed was one good friend to help get into cool stuff on other teams. I’d look around for mentoring and other ways the company promotes from within,HackVT,2025-07-31 16:14:37,2,cscareerquestions,t3_1md9mb2,False,
n63j92b,"Thank you for your advice! I've already learned a ton more in my job in the last two months than I have in the last 1.5 years at school. They're Definitely giving me more projects I have to do on my own, but none of them are related to anything I'm wanting to grow into. My current work project is installing some cameras in our psych department.",tboneee97,2025-07-31 02:48:28,3,cscareerquestions,t1_n63hnvi,True,
n6096o4,I've seen people move from help desk into workstation support and then from there into other infrastructure side roles. This was not at a software company. I would assume it to be rarer at a software company.,marsman57,2025-07-30 16:45:14,3,cscareerquestions,t1_n5zv4xn,False,
n63t2dd,"I've seen it happen twice in big name tech, but it definitely seems like a great way to be underpaid and underestimated by your coworkers. School is obviously the best way by far.",CivBEWasPrettyBad,2025-07-31 03:53:36,3,cscareerquestions,t1_n5zv4xn,False,
n5y40w1,"Not so much a career win, but a 3 month 40% paid sabbatical is a blessing. And it still build up 7 weeks of fully paid vacation this year.",swiebertjee,2025-07-30 09:03:22,8,cscareerquestions,t3_1md0otb,False,
n5yfx3x,"I’ve been a dev at Amazon for ~4 years. Recently got an offer at a promising startup! Will be a pretty big change of pace, but excited for the accelerated learning and ownership opportunities.",rucksack_of_cheeses,2025-07-30 10:51:26,6,cscareerquestions,t3_1md0otb,False,
n5zpy5y,"Got laid off in June, found a job in this shit market and got a 10% raise on my previous salary.",That_anonymous_guy18,2025-07-30 15:14:17,5,cscareerquestions,t3_1md0otb,False,
n5y03ua,"Background: No CS/IT degree and not in USA/EU/AU/CAJust got my first ""developer"" job while being an occasional contractor for an engineering project. I get to practice my skills everyday and steadily improving by trying out ""hard things"" in my design and code.Tips\- Use ChatGPT as a teacher e.g. work on the bug first for 10-15 minutes, then have a working theory, confirm with ChatGPT, and work from there.\- No substitute to actual work. Side projects, online courses, and all those stuff help but nothing beats working on a task that's from an external party. Working with constraints is something personal projects cannot simulate.\- Be hopeful! No one can be always positive but constantly pitying yourself and thinking we're all doomed will lead you nowhere. I believe that opportunities came my way because of luck, preparation, and my general optimism to life.",dabolrayd,2025-07-30 08:25:11,2,cscareerquestions,t3_1md0otb,False,
n69r2qu,"Finally got switched to a new team after 2 years of languishing by myself on an old product, and am now helping with the highest visibility product in the company. Company got acquired and all employees got payouts for our private stock with fully accelerated vesting, meaning life changing money for a lot of amazing people. Got a new boss who is super engaged and really pushing my growth.",sm0ol,2025-08-01 01:06:48,1,cscareerquestions,t3_1md0otb,False,
n5yc4po,"This is something many people would be envious towards. How did you approach your employer to partially pay for the sabbatical? You aren't in the states, are you?",r-randy,2025-07-30 10:19:27,1,cscareerquestions,t1_n5y40w1,True,
n603noh,Good job - literately . How many months did it take and what was the x factor you had?,r-randy,2025-07-30 16:19:15,1,cscareerquestions,t1_n5zpy5y,True,
n5y1jud,Good stuff! What's your stack if you don't mind?,r-randy,2025-07-30 08:39:23,1,cscareerquestions,t1_n5y03ua,True,
n5yin2t,"From Europe indeed, it is part of our collective labour agreement that every employee can do this once every 5 years.It may be a lot harder in the states to find something similar, but I'd recommend anyone to talk about it with their current or future employer.",swiebertjee,2025-07-30 11:12:03,2,cscareerquestions,t1_n5yc4po,False,
n60nu4d,"Took about 150 applications, 8 interviews that led to two offers. The longest part was actually getting a written offer after agreeing verbally. Xfactor is probably having nvidia/AMD in my name.",That_anonymous_guy18,2025-07-30 17:50:49,2,cscareerquestions,t1_n603noh,False,
n5hg44u,No. This job market is not going to be kind to you. If you want another job search for one while you're working. Do not quit without another offer in hand.,Nick9502,2025-07-27 19:27:03,57,cscareerquestions,t3_1mav2t4,False,
n5hgf0t,"Unless it's affecting your mental health, I would always stay until you've got an offer. The market is not great right now, there's no guarantee that looking full time will be any faster. Also, there's nothing stopping you from checking out and doing the bare minimum at your current job while you focus on job hunting.",TraditionalClick992,2025-07-27 19:28:36,30,cscareerquestions,t3_1mav2t4,False,
n5hg3di,10 months in your first job is nothing. Stay longer and continue to look for new opportunities.,Cykon,2025-07-27 19:26:57,20,cscareerquestions,t3_1mav2t4,False,
n5hhz2l,Do it and learn a hard lesson.,cs_pewpew,2025-07-27 19:36:37,14,cscareerquestions,t3_1mav2t4,False,
n5hno4d,"I get where you're coming from. When you're employed and job searching unsuccessfully, your mind begins to think ""If I could just do this full time surely I'd line something up quickly and that'll solve all my problems!""The problem is that's not how it works. If you're getting 0 interviews now, job hunting ""full time"" will continue to get you 0 interviews. When you're not even getting *interviews*, that's not a problem you can solve by just buckling down and committing more time to the search.If you were struggling with leetcode, or performing well in interviews, that argument would hold more weight. More interview practice means better performance. But you're not even getting the interview. That's not something that'll get better if you ""practice"" 8 hours a day. There's nothing *to* practice.I'm not invalidating what you're feeling at all, I'm sure it absolutely feels like quickand, and that you're stuck in your career.But want to know a worse feeling? Being unemployed, draining your savings, while still having all of those exact same negative feelings. That'll be way worse. Getting into that hole is how a lot of people spiral into a deep career-ending depression.Quitting your job will not be a magic fix. If anything, it will make your search *harder*. It's always easier to find a job while you're employed with an income. An important consideration a lot of people don't think about is because you have an income you have the power to reject job offers that aren't good fits. Imagine you get another offer for a role *just like* the one you're currently in. Obviously you wouldn't want to accept that, right? That's the whole reason you're job searching, to get away from this kind of role.When you're employed, you just turn down the offer, and you continue the job search. There's no rush.When you're unemployed, you feel an intense pressure to accept *anything* because you need to put food on the table. So you accept a bad offer, and inadvertently end up back at square one.Hold onto this job, and job search on the side. This is how most people change jobs.",SouredRamen,2025-07-27 20:05:48,10,cscareerquestions,t3_1mav2t4,False,
n5hl8ar,"I did walk away from a job where the co-worker toxicity and the questionable company ethics led my exit. This was later proven to be a good idea when the Feds started arresting the owners a few months later. So, I'd say it depends on exactly how bad your situation is and if you feel you can wait it out until the job market improves.While you're waiting, live frugally and save up an emergency fund so that if you have to walk away at some point, you can. Since CS career path is often rocky, it's a good strategy to develop ""FU"" investment money so that you have options when things go wrong.",jfcarr,2025-07-27 19:53:15,7,cscareerquestions,t3_1mav2t4,False,
n5hm5qz,Of course not.,Gold-Antelope-4078,2025-07-27 19:58:00,3,cscareerquestions,t3_1mav2t4,False,
n5idyql,"1). Most of us have a rough adjustment to 9-5. Take it one day at a time, you can do it. 2). Find something (work related) that you can do that is valuable. It's rewarding. It rewires you to enjoy work, go hard, learn, and get better at your career. Don't just wait it out.",solid_soup_go_boop,2025-07-27 22:23:34,3,cscareerquestions,t3_1mav2t4,False,
n5i58a6,#NO,locke_5,2025-07-27 21:36:05,2,cscareerquestions,t3_1mav2t4,False,
n5eqx9f,"The Hexagon corporation in Europe has a good work culture. But yeah it sucks at most places. You can't keep leaving jobs for that reason. Hiring is expensive. Worst culture is in consulting. Everything is due yesterday. I never saw a repo written by IBM soulless creatures that had any unit testing code at all.>Management often hands out vague or incomplete specs, deadlines feel arbitrary, and developers are expected to be ""jack-of-all-trades""That happens everywhere. Part of your work experience is getting better at dealing with ambiguous design requires and anticipating changes to them cause we're ""Agile"" and ""embrace change"". No we don't, it's just an excuse to manage badly.>I’d be open to learning a new language if neededMost mainstream jobs are split between C# and Java. Learn one, not both. Then there's a stack of work using Angular or React. JavaScript sucks, see if you can get by with TypeScript. Then you got databases. Postgres is the easiest to install on your own and figure out that jobs actually use. Python is used everywhere but the jobs tend to want you to know one of the above as the main driver. Go aka Golang is up and coming but so far you can usually get a pass if you know C# or Java or Python and pick up on the job.Yeah learn something but don't think you can learn 3 languages to entry level at the same time. Pick and choose.",NewSchoolBoxer,2025-07-27 10:09:28,2,cscareerquestions,t3_1maijj7,False,
n5f4948,"I have bad experience with London. It included all you mentioned in greater amounts than elsewhere plus British fakeness, a lot of backstabbing with a lot of politics. People were either leaving like me, getting fired, suffering or running the show. One year of that was enough for me.",BeatTheMarket30,2025-07-27 12:04:07,1,cscareerquestions,t3_1maijj7,False,
n5f5z2q,How many years of experience do you have? Is it possible your expectations are unrealistic or you’re learning how to set boundaries?I find often times younger developers struggle to articulate the value of writing better code (or take it so far there isn’t business value). Have you considered focusing on that?,jamesg-net,2025-07-27 12:16:19,1,cscareerquestions,t3_1maijj7,False,
n5fz9s7,"It depends entirely on the company or sometimes a specific department. I wouldn't categorize an entire country as having bad coding practices... Have you considered looking for another job in Italy?If coding standards matter a lot to you, ask about it during the interview. What their code review process is like, are automated tests part of the unit of work, what CI/CD process is in-place, coding styles used, linters if any.Should give you a pretty good idea how much a place cares about code quality.",frosty5689,2025-07-27 15:06:40,1,cscareerquestions,t3_1maijj7,False,
n5ge2u7,"This may be rare, but here is my experience.I first worked for a private company in TX, USA.  They required new hires start as junior developers regardless of experience.  That worked for me because I was fresh out of college.  But looking back, I think that helped define a tier of authority and skill level with the project managers that were then able to instill patterns, practices, and responsibilities among each employee while allowing us to work as silo developers.Of course that all hinged on the managers being good at their job and leading by example.",Barkeep41,2025-07-27 16:20:29,1,cscareerquestions,t3_1maijj7,False,
n5ersdo,"Thanks!Fair, I know it's pretty shit generally, but I was wondering which ""base culture"" could make for the best odds at a good work culture.As for the specs; I'm not talking ""do X,Y,Z like this"" but ""Customer wants an e-commerce. Good luck."" kind of attitude.That's why I'm looking for collaboration and somewhere where management actually discusses stuff with engineers before making decisions; I do expect devs to be left with the integration details (with various degrees of independence depending on the team), I just don't want to transform random dreams into reality.I found that TDD makes this much better since: no clear specs => no code.As for the languages, I meant human languages; I'm comfortable with Go, TS, Bash, Py, Psql, MySQL, mongo and I'm picking up rust.I have experience in the field (software house, SaaS, B2B, B2C, cloud etc.), I'm not worried about the ""finding a job"" part, but worried about the ""putting effort into moving somewhere worth it"" part.",Loud_Ad_9603,2025-07-27 10:17:54,2,cscareerquestions,t1_n5eqx9f,True,
n5f5e3f,"Thanks for sharing your experience!The UK seems to be going through tough times, sadly...Some 15/10 years ago, a lot of people moved from around me to London, but now most of them are back or moved elsewhere.It's a shame that not many places in Europe seem to be doing well right now :')I hope you're better now!",Loud_Ad_9603,2025-07-27 12:12:09,2,cscareerquestions,t1_n5f4948,True,
n5f7fgv,"Four years.I valued it much more in the first couple of years and then got better with boundaries and understanding when it adds value and when it does not, but the general quality of software around here is pretty poor even with low to no expectations.It certainly does not help that I work with web technologies, so there's a lot of slop to be made in the dynamically typed languages (and frameworks with 5 different ways to do something) with bad patterns that ""just work"".In my daily work, I spend most of the time fixing legacy code written with no design or architecture in mind, and I know it's the ""norm"", but I'd like to figure out if there are better environments, with better specs, communication, documentation and testing, since it seems something that most people agree on the fact that those make for better code and DevX in general.",Loud_Ad_9603,2025-07-27 12:26:30,2,cscareerquestions,t1_n5f5z2q,True,
n5g15df,"Italy has a pretty interesting scene when it comes to tech and companies, having also work cultures shift strongly between regions; I've worked across three/four regions so far.I have always been in companies with decent ci/cd, linters, formatters etc., the main issue is the planning and management process; I've always been told ""do testing and all the fancy stuff, but we won't plan for that"". It's a mindset issue more than a skill issue (I've seen many talented devs bogged down by this).I'm generalizing for the sake of the discussion; I've heard of *some* healthy-er workplaces, but generally engineers aren't valued as much as other countries and the culture is pretty top-down when it comes to management.There's also a huge divide between north and south when it comes to compensation and quality of life.The main problem is; swe is a team sport, often with collaborating teams. I could get lucky, but what use is it to be doing well while everyone else is struggling? I'd be a layoff from being miserable again and could have to work with people that don't have the privilege of a good workspace and thus are stressed and struggle with good practices.I've had a discussion with some entrepreneurs telling me to go work in the X region, but what's the point when a couple regions are the exception? (I don't mirror said mentality, I'm just questioning its logic).",Loud_Ad_9603,2025-07-27 15:16:20,1,cscareerquestions,t1_n5fz9s7,True,
n5f8ojy,"I wonder if you would enjoy a highly regulated industry like aviation or healthcare.The pace will be much slower, and the quality will be generally higher as far as bugs. Probably not nearly as much interesting work around usability would be the trade-off.I work for a consumer facing financial technology company. For me it’s a good balance because obviously you can’t get money wrong, but we still have the startup Yolo mentality around experimentations and how to get people through the on boarding funnel or upsell.",jamesg-net,2025-07-27 12:35:04,1,cscareerquestions,t1_n5f7fgv,False,
n5dtp9w,"This is a very layered question. A few factors at play 1. Section 174 revision allows for alot of the cash flow issues involving dev salaries to be softened but it's sunset in 2029 pending another congressional budgetary hearing. 2. Foreign Visas - Joseph Edlow was recently confirmed to USCIS director. A major hawk when it comes to h1b and opt, F1 etc. Only good for domestic stem. 3. The fed rate - Naturally if debt becomes expensive, labor becomes expensive. This situation is still unravelling. Only time will tell So the answer is: Possibly. This situation is sticky. On one hand salaries in tech are great. But the market itself is volatile. Like anything it's a calculated risk. If you want to mitigate it and still remain in tech. Id consider a double major in math and target quant roles. Be warned, those devs comprise of some of the best engineers in the industry. Goodluck",LineageBJJ_Athlete,2025-07-27 04:55:23,9,cscareerquestions,t3_1madm0b,False,
n5dt8v2,"Don't tell op the following:CS Contractor, IT because it is CS related, Defense because it is easy, Government Job because it is east.The answer is easy because the whole cs related job market is FXXKed up.Give OP the real answer for everyone.",AlwaysNextGeneration,2025-07-27 04:51:41,6,cscareerquestions,t3_1madm0b,False,
n5evzlw,"You can work at your university's tech support. Won't help get a CS internship or co-op. If you work while a student, your grades will suffer. Intern and co-op pay is well above $18 an hour. You can apply for them as early as your third semester, if your grades don't suck.Competition is fierce. You know how overcrowded CS is. Don't stack the odds against yourself.",NewSchoolBoxer,2025-07-27 10:56:48,1,cscareerquestions,t3_1madm0b,False,
n5eg32q,"In UK £17.50 is graduate doctor salary. £8.50 is typical for zero hour driving jobs. My cohort worked bar jobs and the better off international students worked in banks (counting, nothing fancy).",primedsub,2025-07-27 08:20:52,1,cscareerquestions,t3_1madm0b,False,
n5du13k,Why aren't these real answers? Sound reasonable to me.,Illustrious-Pound266,2025-07-27 04:58:07,2,cscareerquestions,t1_n5dt8v2,False,
n5efkju,"why not? just because someone may not like the answer, does not mean the answer is incorrect one of my favorite quote in recent years: ""I didn't ask if you LIKED what I said, I asked if you UNDERSTOOD what I said, those are not the same""",NewChameleon,2025-07-27 08:15:42,1,cscareerquestions,t1_n5dt8v2,False,
n5q9paw,Competition is crazy for those hanging jobs,Excellent-Benefit124,2025-07-29 03:08:21,1,cscareerquestions,t1_n5evzlw,False,
n59ojgc,"In 2025, it will make a difference, especially at your YoE. I'd do it, especially if you can get your employer to pay for some or all of it.",I_Miss_Kate,2025-07-26 14:18:02,17,cscareerquestions,t3_1m9u3ce,False,
n59p6bt,"My experience with one AA, not even in tech, I got offered more jobs. With a BA (and 15 years of tech experience) I got offered better jobs, and that was in English and Asian studies. My masters in a technical field got me 6 figures and a 100% raise. Both the job before and the job after were with 20 plus years in tech. YMMV but hirers want proof you can “finish a thing”",doryllis,2025-07-26 14:21:31,5,cscareerquestions,t3_1m9u3ce,False,
n5ac435,"It won’t really hurtThese degrees are best for independent learners who can do a good job of putting in extra time and effort to really build stuffYou’re already doing that via your day job, it’ll be far easier for you than a walmart manager doing schoolwork + independent work after an unrelated jobIt’s good to have that degree box checked in a competitive market even with experience, a lot of your competition will have both.Just take care to avoid burn out, it’s gonna be easier to fall into if you go for this. We aren’t made to do the same shit for 16 hours a day",3slimesinatrenchcoat,2025-07-26 16:22:33,4,cscareerquestions,t3_1m9u3ce,False,
n5ec6nw,"At some point, a degree is going to be a hard bottleneck in your career progression. A LOT of positions have a degree as a hard requirement. All in all, you greatly increase your maneuverability in the job market with a degree.",Techatronix,2025-07-27 07:42:55,2,cscareerquestions,t3_1m9u3ce,False,
n59qs1f,"Yes, get the CS degree. You're more vulnerable to layoffs without it, unlikely to be promoted and no company in the US is going to hire you now if you go applying. If you had 5 YoE, some could give you a pass but send you back to entry level. I agree with u/I_Miss_Kate.And you know, the degree should help you with your job. The coursework isn't a waste. CS theory becomes more important the higher you move up and you should fill in your gaps that you undoubtedly have. A single Intro to whatever language course is 45 hours of instruction with 100 hours of homework and graded exams. That's about a bootcamp level of work that accepts anyone with a credit card and doesn't fail people out.>Or should I just double down on building projects, learning on my own, maybe picking up some certs?Recruiters will not look at or consider your projects and certs are scams they won't care about either, unless you see them as a plus in the job description. But sure, teach yourself some tech stacks before you're taking CS courses that will suck up your time and be more productive.",NewSchoolBoxer,2025-07-26 14:30:13,1,cscareerquestions,t3_1m9u3ce,False,
n59tyie,"If you looking to move into a more technical role it may be worth getting the CS degree but maybe not online. The most important thing you gain from a CS degree isn't knowledge, its technical credibility. If your job history only shows non-technical roles (HR, Business Systems Analyst), you would benefit more from a conventional college degree (maybe a masters to save some time).",Conscious-Secret-775,2025-07-26 14:47:23,1,cscareerquestions,t3_1m9u3ce,False,
n5aptvq,"in a similar boat and preparing for the WGU CS degree (see r/WGU_CompSci for info).for me, worth the time and money (\~CA$6k/semester) to one, check the HR box, and two, fill in all the gaps from teaching myself CS.",computer_porblem,2025-07-26 17:33:16,1,cscareerquestions,t3_1m9u3ce,False,
n5as2kn,What specific technical tasks do you do in your current job?,OkMathematician3516,2025-07-26 17:44:40,1,cscareerquestions,t3_1m9u3ce,False,
n5b3326,I did! Going to WGU for it. Company’s paying for it and I’m able to breeze through it since it’s self-paced.,h0408365,2025-07-26 18:42:30,1,cscareerquestions,t3_1m9u3ce,False,
n66v2v5,"I would not pursue CS if I was about to start college. AI won’t replace us, but it will very significantly reduce demand in about 5-10 years. If I was starting college now, I would pick something in healthcare where you need to physically work with people.",EquivalentAbies6095,2025-07-31 16:25:28,22,cscareerquestions,t3_1me5zri,False,
n68mnum,"The more people disuaded from pursuing CS, the more secure I am already in CS. It's a win/win for us both. Don't do CS. Lol",-Dargs,2025-07-31 21:24:37,6,cscareerquestions,t3_1me5zri,False,
n67xgd5,"The golden age of CS is dead, if you have a backup it is probably a good move",Alienbushman,2025-07-31 19:23:53,6,cscareerquestions,t3_1me5zri,False,
n67n2c3,In my experience most cs majors have zero coding experience when going into it. You will likely be successful if you do it as long as you can handle the workload.,Walreen,2025-07-31 18:34:04,4,cscareerquestions,t3_1me5zri,False,
n69ee4z,"Go to med school. The road is a lengthy one but you’ll have everything as an attending. Money, respect, and job security",Savassassin,2025-07-31 23:52:51,1,cscareerquestions,t3_1me5zri,False,
n69suyj,"if you really truly love it, go for CS I say. If you are driven by making a lot of money and job security, I would look at something else. As others have said, security and money Im not sure CS is going to be what it once was moving forward. Im not all doom and gloom though, if you truly love it I think you will be able to mkae a way.",tgage4321,2025-08-01 01:17:29,1,cscareerquestions,t3_1me5zri,False,
n68r4b2,"If you’re passionate about software engineering, do it. If you’re not, don’t. Your passion is the only thing that gets you through application hell.My team didn’t even put up an application form for the last time we were looking for an entry level, we just interviewed people already working in the company who had applicable degrees and applied internally.If AI becomes capable of replacing software engineers, it’s going to be capable of replacing every job that doesn’t require a human at that time.People saying to consider going into healthcare clearly don’t know how much nursing sucks, too. An ex of mine who is an RN was attacked by a dementia patient. Do you enjoy wiping asses? Because that’s [apparently not even the worst part](https://www.reddit.com/r/nursing/comments/hr4vrq/comment/fy2eboz/?utm_source=share&utm_medium=mweb3x&utm_name=mweb3xcss&utm_term=1&utm_content=share_button) of the job.",Uncreativite,2025-07-31 21:47:16,1,cscareerquestions,t3_1me5zri,False,
n675mr0,"If you want to work remote, CS is your best chance. It's also in top 3 majors that work in their field of study. There are stats that show other majors have higher employment, but that is employment in any job like mcdonalds. If I had to do it again now, I would probably be an anaesthesiologist assistant, they make 180-200k a year after only a 2 year post grad program. And that is not an exaggeration, it's also not hard to get the job right now. They desperately need people. Every person in my sisters graduating class this year got a position near instantly. It might not be in a town you want but it will still pay very high. The work is also laid back, you are sitting around waiting for an operation to start. Some days might have no cases, some days you might work the whole day straight and then some.",purrmutations,2025-07-31 17:14:21,-1,cscareerquestions,t3_1me5zri,False,
n66ylvz,"100% Healthcare, with all the boomers continuing to get older, healthcare demand is going to skyrocket.",svix_ftw,2025-07-31 16:42:14,16,cscareerquestions,t1_n66v2v5,False,
n68d93r,"Can't emphasize this enough. People really need to understand, CS is not a good degree to get anymore. It is in the top 10 majors list for recent college grads being unemployed. Also, stats show for recent college grads with CS degrees, almost 1 in 4 are either unemployed or underemployed.This is not the major to go into OP. Find one that will actually lead to a job.",Legitimate-mostlet,2025-07-31 20:39:16,7,cscareerquestions,t1_n66v2v5,False,
n5x5t9y,"You need to learn how to code on a team, and usually the best place to do that is product teams that are PM driven and essentially feature factories. I'm not sure what infra you are working on, but when I took an infra job, I ultimately left because I was frustrated with the shit code we wrote and the lack of any sort of real development work. I did all sorts of stuff with cloudflare tunnels, DNS migrations, and dealt with TLS certs, plus on call. The work I really wanted to do, on the database engine, was just not a priority for us, compared to cloud operations.I've seen juniors and new grads do well on infra teams, so it's definitely possible, but all things career progression depend on how much you excel in your roll, and the opportunities your org has to promote you. I'd say that's equally true as a junior engineer trying to make senior in 5 years, as it is for a senior trying to make staff and looking for projects with company wide impact, at least under the system of stack ranking that will average on the organization level.I basically left infra to go back to product, and am trying to make staff now as a team lead. There's no shortage of impactful projects, especially if you can step up and be a leader. I am hesitant to think one domain mints more staff engineers than another, and I'm staring down a company wide rollout of our project for next year, so that hasn't been the case with me.In my experience, the biggest factor is just what you want to do. I tried infra, didn't like it, so went back to product. If you like infra, do it, the amount of work is pretty much insane, and when you don't like it, you'll really struggle to outcompete the equally smart people who do. Most of the job is simply showing up everyday, moving the ball, and stepping up when you need to. If you're looking for opportunities, there's no shortage of that in either domain.",justUseAnSvm,2025-07-30 03:59:48,10,cscareerquestions,t3_1mcwau7,False,
n5x88mf,"This was basically my path and it worked out well for me.In my experience teams like that with a lot of seniors in core/non-product components can be something of a crucible. All projects are relatively large, important, and difficult. If you keep up you can get straightforward and relatively rapid advancement. If not my observation was that there's less knowledge of how to (and willingness to) support than some other teams.Also remember a project with a lot of long tenure seniors is a good sign that the project is interesting and impactful which is generally good for your career and working with experienced people is a good way to learn new things.",scialex,2025-07-30 04:17:20,5,cscareerquestions,t3_1mcwau7,False,
n5xmzei,">Hello! I'm currently a new grad working in FAANG on an infra team.This highly depends on how your company views Infra as a whole, and what specific infra you are working on. Anyone who gets familiarity with GPU infra will be in demand for the next decade",ArkGuardian,2025-07-30 06:20:08,1,cscareerquestions,t3_1mcwau7,False,
n5xoqnl,"I can share my experience as someone who started out in this kind of role. It is a mixed bag and you can end up being forced into SRE even if you don’t like it. It is ideal if you end up on a platform team that builds products for other engineers, but product engineering can work out poorly for infrastructure in terms of designing systems and making plans that account for reliability, scalability, and anticipating technical debt. Product engineering relies heavily on quick iteration, optics, and easily marketable impact which can be hard to do with infrastructure and legacy systems. You can have a harder time getting promoted and may need to spend more time on painful parts of the job instead of pure coding experience.",Weary-Technician5861,2025-07-30 06:36:22,1,cscareerquestions,t3_1mcwau7,False,
n5x77gh,Thanks for the detailed response. I work on cloud infrastructure. Don't think it will entail working on DNS migrations and stuff. Mainly ruby for scripts and kotlin for API development. I'll update it in my post.,Money-Ability-7548,2025-07-30 04:09:51,0,cscareerquestions,t1_n5x5t9y,True,
n5b7u3s,You should understand that there’s a > 50% chance that nobody knows what the fuck they’re doing at this startup.,divulgingwords,2025-07-26 19:08:06,19,cscareerquestions,t3_1ma18nm,False,
n5berlf,"When this happened to me, it was pretty much a formality. VP asked me a couple of light questions about my experience, then gave me an offer.",TraditionalClick992,2025-07-26 19:46:00,2,cscareerquestions,t3_1ma18nm,False,
n5ctj2n,"Side question, does this level/role require more than a CS bachelors degree?",WinonasChainsaw,2025-07-27 00:42:27,1,cscareerquestions,t3_1ma18nm,False,
n5dtqsz,"This VP wants to see if you can grow into someone who contributes meaningfully to their AI strategy, so expect questions about your research approach, how you stay current with the field, and your thoughts on where AI/ML is heading. They'll likely ask about challenges you've faced in your research, how you approach ambiguous problems, and what excites you most about applying your skills in a startup environment.The key is showing intellectual curiosity and demonstrating that you can think beyond just executing tasks. Be ready to discuss specific projects from your research background in detail, but frame them in terms of business impact or real-world applications. VPs care about ROI and strategic thinking, even from juniors, so connect your technical work to broader outcomes. They might also probe your adaptability since startups move fast and priorities shift quickly compared to academic research environments.I'm on the team that built [AI interview helper](http://interviews.chat), and it's designed exactly for situations like this where you need to navigate senior-level conversations and think through how to position your experience effectively during high-stakes interviews.",akornato,2025-07-27 04:55:45,0,cscareerquestions,t3_1ma18nm,False,
n58as25,I think distributed systems is worth learning,migoden,2025-07-26 07:45:17,13,cscareerquestions,t3_1m9n7ny,False,
n58d0ip,">That being said, I value job security more.The way to be secure isn't to specialize in anything. It's to be good enough to change specializations whenever the time comes.",justUseAnSvm,2025-07-26 08:06:55,16,cscareerquestions,t3_1m9n7ny,False,
n58d3ai,"I mean who knows with exponential growth, but current LLMs can't even handle concurrency well. I think deep systems work is going to be in the long tail of what AIs learn to achieve",ArkGuardian,2025-07-26 08:07:39,3,cscareerquestions,t3_1m9n7ny,False,
n58gbta,No one knows what the world will look like in 15years,Cool-Double-5392,2025-07-26 08:39:56,2,cscareerquestions,t3_1m9n7ny,False,
n598xu9,Wondering the exact same thing lmao. I think this would also allow you to work on ML infra which in theory should only become more relevant.,feedkage,2025-07-26 12:43:44,2,cscareerquestions,t3_1m9n7ny,False,
n58n67w,"Specialization is not secure, period.That being said, not really. AI sucks at complex, creative or semi-creative tasks like systems engineering.",229-T,2025-07-26 09:48:18,1,cscareerquestions,t3_1m9n7ny,False,
n591kfc,"AI might become the thing that replaces an IDE, but it is still a toaster.",These-Bedroom-5694,2025-07-26 11:52:45,1,cscareerquestions,t3_1m9n7ny,False,
n59ryrd,Also interested in doing the same kind of masters. Have you decided on which one??,Legitimate-School-59,2025-07-26 14:36:41,1,cscareerquestions,t3_1m9n7ny,False,
n5fgxyp,"AI excels at popular tasks because it employs a statistical learning algorithm. The more data yields better results (until a point).Being relatively good at non-popular topics will always be safer from what we call ""AI"" today.That being said, systems are better off than frontend and data science, for instance.",Special-Bath-9433,2025-07-27 13:26:38,1,cscareerquestions,t3_1m9n7ny,False,
n58gobn,">That being said, I value job security more. ""job security"" hasn't really been a thing after ~2022 you don't get ""job security"" by being at a stable company, no such thing anymore, you DO get ""job security"" by the ability to find new jobs even if you lose your current one, if I lose my job I could probably line up 20+ interviews within a week just by replying to all the HRs that has been messaging on linkedin and that's not including internal referrals",NewChameleon,2025-07-26 08:43:22,1,cscareerquestions,t3_1m9n7ny,False,
n53vi6v,It may give you an advantage in a long run when you’ll be approaching higher positions.,Easy_Language_3186,2025-07-25 15:59:03,9,cscareerquestions,t3_1m92s7t,False,
n53ydjn,"I’m similar to you,and iv contemplated getting a formal CS degree as well. All I can say is you don’t NEED it if you already have decent experience. However if this for personal reasons not career it makes sense, but if you’re looking to increase your comp I know plenty of people making good money without having a formal CS degree",13cyah,2025-07-25 16:12:31,6,cscareerquestions,t3_1m92s7t,False,
n53uro4,Be proud of your degree if you pursue it. Do it for yourself and your own development.,Xx360StalinScopedxX,2025-07-25 15:55:38,3,cscareerquestions,t3_1m92s7t,False,
n53u77w,Do it,MathmoKiwi,2025-07-25 15:53:01,1,cscareerquestions,t3_1m92s7t,False,
n53zkpk,"It's a great idea. Having 2 full time jobs essentially is going to be fucking hard, but it won't get easier as you get older. Perhaps save HARD for a year so you can drop to part-time or contract work while studying, and start after your move.",PatchyWhiskers,2025-07-25 16:18:09,1,cscareerquestions,t3_1m92s7t,False,
n5aiq7i,"Get a degree. Working full time and going to school sucks but tons of people do it in similar situations to yourself, it’s not impossible. You can almost certainly do it faster than 4-5 years too.This field is moving in the direction of degrees mattering, anyone saying otherwise is being dishonest. Sure experience matters a ton too, but when your experience is up against someone else’s and they have a degree as well, you’ll be shit out of luck.",OccasionalGoodTakes,2025-07-26 16:57:15,1,cscareerquestions,t3_1m92s7t,False,
n5f1dsw,"I had the same experience and tried to do a SE (software engineering B. Eng.) while working full time… it’s not impossible but I’m assure you it gonna hard and long :face_with_tears_of_joy:. With kids and everything I just dropped out, but it’s feasible",AhBeinCestCa,2025-07-27 11:42:04,1,cscareerquestions,t3_1m92s7t,False,
n5i55ea,Perusing lol,Impossible_Ad_3146,2025-07-27 21:35:40,1,cscareerquestions,t3_1m92s7t,False,
n53yuqb,So you will be sacrificing around 300-400k of salary to instead spend 40k for basically no reason. The experience as a dev matters more than a degree which you already have. While you spend four years learning cs how much will ai have learned by then?,Setsuiii,2025-07-25 16:14:46,1,cscareerquestions,t3_1m92s7t,False,
n5zk3mz,"> When I’m asked something technical, I usually need some quiet time to fully understand the question, then I look through the relevant files and documentation before I can come up with a good answer. 17 YOE here -- this is the best way to answer questions, and is what I strongly prefer to do when I have time.The skill is not in having memorized everything, but in knowing where the docs or code are, which parts are relevant to the person asking, and how to synthesize the information you find into an answer that the person who asked will understand. Sometimes the skill is also in realizing that they've asked the wrong question and proposing an alternate question with a more useful answer.Unless you've very recently answered the same question for someone else, or the question is related to the work you were doing moments before the conversation began, being able to give a deep, accurate, off the cuff answer is not expected. Give the best answer you can in the moment, be clear that it's a preliminary answer, tell the person you'll get back to them with a more complete answer soon, and then follow through on that promise as quickly as possible, e.g. via email or chat. (In my position, the real challenge is having time to follow up on question A before I get questions B, C, and D coming in...)The other senior engineers you see answering questions off the cuff are either answering about their current work, or giving a rehearsed answer to a common question, or (worst case) bluffing about how complete/correct their answer is. You might occasionally encounter someone with a near photographic memory for technical things, but it's not the norm. I don't expect it from my team, and I don't feel like others expect it from me.",tylermchenry,2025-07-30 14:45:51,5,cscareerquestions,t3_1md73xr,False,
n5ze0yw,"4.5 YOE is not senior. Imposter syndrome is completely normal.Some tips on communication:- Develop a shared domain language. No terms should have multiple meanings across different teams.- Understand the spheres of “need to know”. E.g, don’t communicate implementation details to non engineers or management… it’ll fall on deaf ears. The higher up or orthogonal to engineering someone is, the more “big picture” they are.- Writing things down is more effective than talking. - Fight your urge to be ultra specific. It’s good for coding, not good for communication. ELI5, always.",unlucky_bit_flip,2025-07-30 14:16:26,5,cscareerquestions,t3_1md73xr,False,
n5zqa4x,"Re: the not having an immediate answer: that never goes away. There is not a dev in the world who can answer every question immediately and accurately. Developers are terrified of saying “I don’t know,” but say it, as long as you follow it with “…but I will find out, just need to check a few things to make sure I’m giving you the best answer possible.”I’ve been a professional SWE for 25 years and I still say this.",RichCorinthian,2025-07-30 15:15:58,3,cscareerquestions,t3_1md73xr,False,
n5zx4yz,"4,5 years is nothing. I call it the ""knows just enough to do serious damage to a codebase"" stage.It's a bit weird you can be a senior after 4,5 year and then it just kind of ends, unless you end up in one of those rare as a hens teeth Staff or Principal roles. But nothing like a Master Builder kind of role for 12yo+ exp developers that just build.With 4,5 years know just enough to get something to work, but don't ask what it looks like. If I see what a lot of seniors in your experience bracket build I get kindergarten glue, cardboard and paper flashbacks. If we would build bridges like that we would be doomed.And they know how to talk about it like it's amazing, using buzzwords, jargon, patterns, everything. CLEAN architecture with Repositories. Yada yada yada. Then you open it up and see a bunch of pathetic tie-wrapped together ViewModels where the actual application's state is passed and duplicated around, interspersed with network logic and other random bits thrown in.So if you feel like you're not that great: it's probably realistic. Try to figure out where your weak spots are and do some deliberate studying in that are. Build throw-away projects to test things. Nothing helps more than studying by doing.",lucasvandongen,2025-07-30 15:48:26,2,cscareerquestions,t3_1md73xr,False,
n644z53,Normal for amount of experience. Focus on learning how the things you’re working on work at the lowest level possible. Expand from there. You’ll always find someone with more knowledge on a given topic.,dandecode,2025-07-31 05:24:49,2,cscareerquestions,t3_1md73xr,False,
n64u292,"Thank you all for the helpful comments. While 4.5 years of experience may not traditionally qualify as senior in most contexts, for the last 2.5 years I was responsible of leading FE initiatives, mostly responsible of onboarding junior developers, made decisions and ensured the team delivered on its goals. So, while I may not fit the classic “senior” definition in terms of experience, my level of responsibility has definitely been on par with that of a senior developer. This is the reason of the feeling and imposter syndrome I was having, because I wasn’t ready for all this. I know I have a long way to go, but I believe acknowledging this is the first step forward. I’ll definitely be putting your communication tips into practice as I keep improving.",caramel_macchiato27,2025-07-31 09:15:03,1,cscareerquestions,t3_1md73xr,True,
n5ubxhi,Stop comparing yourself to your brother first of all,LowWhiff,2025-07-29 18:49:02,10,cscareerquestions,t3_1mce4yb,False,
n5t2kzl,"It’s the middle of the summer, every company hired for new grads to start after they graduated in May. The prestige of the companies you’ve worked at are absolutely not the thing that’s holding you back. Just keep it up and you’ll find something eventually. In the meantime always try and talk to your bosses to get the kind of work you want.",duggedanddrowsy,2025-07-29 15:20:26,7,cscareerquestions,t3_1mce4yb,False,
n5t9lmw,"You graduated in May. Currently it's July. Do the math if it feels like a long time while you already have a job. Yeah it sucks if it's not what they actually advertised. But still, you have a job try to make the best of it.I'm sure there were plenty of decent people at those ""no name companies"" that made you a ""dogshit unserious candidate"", you sure about being this harsh?",CyberChipmunkChuckle,2025-07-29 15:53:10,3,cscareerquestions,t3_1mce4yb,False,
n5yillj,"Keep working, and applying. Lie on your resume to make this sound like a dev job",dmoore451,2025-07-30 11:11:45,2,cscareerquestions,t3_1mce4yb,False,
n5xfyn0,The old I.T bait and switch :loudly_crying_face:,throwaway133731,2025-07-30 05:18:15,1,cscareerquestions,t3_1mce4yb,False,
n5y0zk7,"Totally get how you’re feeling—lots of us have been in that “bait and switch” spot early on. Keep grinding on projects and Leetcode, and definitely start networking (it’s awkward but works), If you don't like leetcode questions, I discovered a new leetcode style site named prepare.sh, I saw it mentioned a few times in Reddit subs, its pretty solid",Dependent_Gur1387,2025-07-30 08:33:52,1,cscareerquestions,t3_1mce4yb,False,
n5yayvs,Bro is buying pre built PCs,Special_Fox_6282,2025-07-30 10:09:08,1,cscareerquestions,t3_1mce4yb,False,
n67qb40,You do realize you can automate your tasks in your job and gives you more time to apply to the SWE roles it sounds like you want. Unless by “IT” stuff you mean end user support?,LBishop28,2025-07-31 18:49:33,1,cscareerquestions,t3_1mce4yb,False,
n5tdcyf,very fair point I'm just insecure about where I am as I'm looking to get tech jobs from a pharma domain,myps5brokeitself,2025-07-29 16:10:39,0,cscareerquestions,t1_n5t9lmw,True,
n5snrxi,"The formatting on your resume is a little wonky (inconsistent spacing, indentation, capitalization) so I would clean that up first",Many_Reindeer6636,2025-07-29 14:09:25,14,cscareerquestions,t3_1mcca9v,False,
n5stxjs,"I am sorry but that is very hard to read resume. The indenting changes from section to section, in the last and second to last section the bullet points are different indented. Then in the section before that, you use hollow bullet points instead. In the section before that, you have spaces between your internships, spaces that were not between key projects. Even in the last section, you have 3 leaderships opportunities, with a spacing between the 2nd and 3rd, but none between the 1st and 2nd. Literally every section is formatted differently, and content in same sections is formatted differently.I also wonder what happened that neither of your internships nor your trainee role resulted in return offers?",Haunting-Speech2038,2025-07-29 14:39:30,11,cscareerquestions,t3_1mcca9v,False,
n5t6lug,"This is normal for new grads. Try to get your number up to 500-800 applications, and expect to not get an offer until at least 6 months into your job search. Hopefully you get one before then, but 6 months to a year of unemployment is very common.",Illustrious-Pound266,2025-07-29 15:39:25,11,cscareerquestions,t3_1mcca9v,False,
n5sx03m,"Your formatting (especially alignment) is a mess, especially alignment. You aren't consistent with capitalization. Your internships are in reverse order. You mention your degree in two places, why? The banner ad for your school should get your resume rejected immediately. Did you do any proofreading?If the format is this wonky one has to wonder if anyone's actually reading the text.",Loosh_03062,2025-07-29 14:54:05,6,cscareerquestions,t3_1mcca9v,False,
n5t5wzm,Bro remake your CV in Canva pliz...no offense but it is just horrible,Ok-Lifeguard-9612,2025-07-29 15:36:11,4,cscareerquestions,t3_1mcca9v,False,
n5tyc6x,"Your resume is ugly and I don’t know where to start. I hate reading it. Don’t bold individual tech in the middle of the sentence just to emphasize it. It make me think “why he bold it? It’s not so impressive to know some tech” Try a minimalist cv.Think : 100 CV, 100 people, all of them say they know NodeJS and API. Do I trust them not lying? No. “I helped, optimized and transformed some websites with amazing techniques” - why should I believe it? It’s too vague.Maybe try say some original bullet points like : know how to reverse a linked list or can implement quicksort algorithm from scratch. Or helped debug some strange programs and solved problems . These quality sounds like junior and believable snd genuine. Merge these statements with your academic performance",PomegranateBasic7388,2025-07-29 17:46:27,5,cscareerquestions,t3_1mcca9v,False,
n5tcdvh,"Something I've noticed about new grads is that they tend not to realize that all new grads tend to have roughly the same experience/skills as all the other new grads because you've all roughly taken the same coursework and the same projects which means none of you really tend to stand out and therefore getting picked becomes luck of the draw. So I think the answer that I would have here is to think about what you're doing to set yourself apart from others and how you're showcasing this to potential employers.Other than that, I'd say that software engineering jobs seem harder to come by than usual, even for those with experience, and the first job people find after college in their career field is typically the most difficult job search they have, so finding a job will probably take a while. TBH 100+ job applications really isn't that much and I kind of think you have unrealistic expectations on how long and how much work goes into finding a job as a new grad. Also, in addition to the resume advice others are giving you above that you should listen to, your resume also seems to be missing a skills section which generally should be included for a software engineering or other technical role.",Zealousideal_Meet482,2025-07-29 16:06:07,3,cscareerquestions,t3_1mcca9v,False,
n5stw48,It's maybe good idea to open your github so that your projects are visible.,Astral902,2025-07-29 14:39:18,1,cscareerquestions,t3_1mcca9v,False,
n5t0d4m,"Your resume formatting is weird. Clean that up like other comment says. Eye tracking surveys show HR spends 15 seconds max reading it. Your font size is small. I'd get rid of one project to make more space. You have internships, you don't need projects anyway. Leadership experience in extracurriculars looks just as good, maybe better.You have internships right, you should be getting callbacks. I looked up the university given the non-4.0 grading scale, TCS in India had [big layoffs](https://www.reddit.com/r/cscareerquestions/comments/1mb7cxe/offshore_services_giant_tcs_is_laying_off_12000/) and that's not a good sign for the industry as a whole. Still, you should at least make it past the initial screeningOne of those companies should have wanted to hire you or offer a second term to come back. It's not a big stretch to think you were just resume boosting and didn't really want to work for them. Better to have 3 internships than 0 by far but you really only needed one. I'm not saying take 1 or 2 off your resumes, just that 3 isn't all upside.",NewSchoolBoxer,2025-07-29 15:10:01,1,cscareerquestions,t3_1mcca9v,False,
n5q50lh,It’ll take extra time that’s a given but it’s not over no. You need math for computer science thats without a doubt,styada,2025-07-29 02:38:43,10,cscareerquestions,t3_1mbzrpk,False,
n5q6t82,i had take math from remedial algebra at my cc all the way to calc 3 & linear. it was a grind but if i could do it you can definitely do it! take a math class every summer if you can. also you don’t have to wait for class to start coding.,SUsudo,2025-07-29 02:49:49,2,cscareerquestions,t3_1mbzrpk,False,
n5q4myd,lol no,Sufficient_Face_4973,2025-07-29 02:36:24,2,cscareerquestions,t3_1mbzrpk,False,
n5q8htv,"Nah. Keep going, your path sounds normal. I did all the same shit you’re describing except my pre cal was one semester. If it takes an extra year then who cares. Just focus on your gpa if you want to transfer.",ATXblazer,2025-07-29 03:00:29,1,cscareerquestions,t3_1mbzrpk,False,
n5qe1un,"if it makes you feel any better, when i went to regular state university i couldn't pass discrete math the first two times and because of that i couldn't move on to the rest of my CS courses for a year because they all depended on the students having passed discrete math.",spike021,2025-07-29 03:37:24,1,cscareerquestions,t3_1mbzrpk,False,
n5qgi07,"I had to take precalc in college freshman year, and even failed calc 1. now have a full time SWE job. so yeah you'll be fine.",LurkingSlav,2025-07-29 03:54:23,1,cscareerquestions,t3_1mbzrpk,False,
n5qlpuf,"I mean you probably have to take extra classes but it's legitimately no big deal. School isn't a race trust me. People start college late in life. Just actually take in the material and learn. Math IS programming. You know how in algebra you're manipulating equations and assigning variables and shit? That's literally how you think as a programmer. Those geometric proofs? That's essentially stepping out code. Math brain and code brain are very similar to a certain extent. Buckle down and take the classes more serious now. Don't worry about speeding through, actually learn. You'll be thankful later on you did",Edraitheru14,2025-07-29 04:32:34,1,cscareerquestions,t3_1mbzrpk,False,
n5r943g,"If you decide to not take the earlier maths or learn on your own, it's over. If you decide to spend a year and a half catching up your math skills, you'll be fine.",Empty-Scale4971,2025-07-29 07:59:21,1,cscareerquestions,t3_1mbzrpk,False,
n5svwoq,Summer school to catch up (2026),ewhim,2025-07-29 14:48:55,1,cscareerquestions,t3_1mbzrpk,False,
n5q6b4v,CLEP exampatrickJMT,kmanifold,2025-07-29 02:46:41,1,cscareerquestions,t3_1mbzrpk,False,
n51bvtf,"Remove GPA. Experience first - then projects - then skills.Your experience doesn’t tell me much about what you did how you did it and what it accomplished. it reads more like a job description as of now. Make sure your experience explains 70-90% of your resume, if it’s not possible let projects fill in the gaps.",Real_nutty,2025-07-25 05:29:10,3,cscareerquestions,t3_1m8mzjr,False,
n51re5f,Thanks for the feedback! My experience just isn't CS relevant really so I tried to put projects first but I'll give the change a shot. I'll definitely change up my experience section. Thank you!,XCrease,2025-07-25 07:47:09,1,cscareerquestions,t1_n51bvtf,True,
n69byf1,"You could potentially chart your path to pick up skills that'd help with DS roles. I started as a data analyst, taught myself SQL and Python to do data engineering work. DS role varies a lot, can be more an analyst, running A/B tests and predictive analytics or more of an ML role. My sense is that experience is more important than a degree but you do have to be vigilant that you're teaching yourself the right skills, learning best standards, which can be hard without a mentor so consult some technical books/blogs/etc.",throeaway1990,2025-07-31 23:38:59,2,cscareerquestions,t3_1mefae7,False,
n69ecs4,"I know data engineer is more concrete in terms of job description and daily tasks. Along with self taught SQL and Python, what kinds of things did you learn and build on your own to get into that role?",Odd-Custard-5497,2025-07-31 23:52:39,2,cscareerquestions,t1_n69byf1,True,
n69gi3z,"Docker, Kubernetes, Airflow, Looker, cloud (AWS, GCP), read books from O'Reilly/Manning on data (db internals, streaming data, architecture) and ML (unfortunately was too busy at work to do ML projects because that would help me pivot to MLE roles)",throeaway1990,2025-08-01 00:05:01,1,cscareerquestions,t1_n69ecs4,False,
n648kmg,"TLDR -  Stripe pays twice but WLB sucks.What's the question? If you are young and single and want to save a nest egg ""at any cost"" .. sure!",Mo_h,2025-07-31 05:55:24,8,cscareerquestions,t3_1mdtm6z,False,
n64hc5z,"I just got hired at Stripe. I was in the same position as you reading all the complaints about stripe WLB etc. I left a job I got bored at even though it was very nice WLB. From talking to real people at Stripe it sounds like the WLB is not terrible, but I also don't think it is a place to coast and chill. Fine for me because I am looking for a bit of a new challenge.My guess is the WLB complaints are a bit negatively biased.",flash_crypto,2025-07-31 07:14:11,5,cscareerquestions,t3_1mdtm6z,False,
n64gi0s,I work at Stripe; been here for a few years.I think Stripe got a bad rap in 2022-2024 when a ton of Amazon middle managers joined and tried to import their work culture. There was a ton of empire-building and politics at the time. Many of those people left or were purged in waves of performance-based layoffs.I personally think that the work culture has improved but of course it depends on the team and manager. Don't just take my anecdotal experience as truth: you can tag the company on Blind and try to solicit some opinions from other employees.,boi_polloi,2025-07-31 07:06:25,10,cscareerquestions,t3_1mdtm6z,False,
n64ap5c,"I'm at a Stripe like company: performance reviews every 6 months, high expectations, and tight delivery schedules.From your description of how you work, ""bust my ass for 1.5 years"", you'll most likely do fine, in fact you might even have better teammates. When you work for a company like that, you're basically signing up for onboarding yourself in 6 months, and committed to staying out of the bottom 5-10% of the team.At larger companies, there's opportunity to really go beyond your role, the performance review process is standardized, and when you submit a a promo packet, you'll get a response. I don't think it's that bad, but I also stepped up as a Senior to be in a team lead role, so that's a sort built in ""exceeds expectations"" as long as we deliver impact every perf period. It's fine to be motivated by money, I check stock price all the time, but the challenging nature of the work means folks that are passionate really hold an advantage.As far as concern over getting PIP'd. I've found that the people on the PIP shortlist are the same ones that are more motivated by money than actually becoming better software engineers. In a workplace like a large company with stack ranking, you're not only competing against smart people, but smart people who are highly motivated and ambitious to move ahead.",justUseAnSvm,2025-07-31 06:13:59,1,cscareerquestions,t3_1mdtm6z,False,
n65p4wf,I guess they always are,HackVT,2025-07-31 13:01:27,1,cscareerquestions,t1_n64hc5z,False,
n65l37g,Sounds like bs. I bet it's still toxic AF.,Sea_Swordfish939,2025-07-31 12:38:24,-1,cscareerquestions,t1_n64gi0s,False,
n64ozmu,"I think a great way to approach this is really taking some time to understand your needs and where you want to grow as an engineer, then doing your best to communicate that to your mentors. A lot of the best mentor/mentee relationships don’t actually feel super formal, and are a two-way street where both parties proactively communicate with how they can support and help one another.For yourself, I think some questions to think about are - How do I want to be supported in this role?- What areas do I want to grow in as an engineer?- What communication style works for me and for my mentors? How can we facilitate this so it works for both of us?On the mentor side, I’ve been working for a little over 5 years now, and I’ve always liked asking a lot of questions to my mentees to figure out how they would like to be supported, and then go from there to see what I can do to help them. This can come as direct advice from my side, sponsoring them to pick up or lead projects that can help them reach their goals, or putting them in touch with other folks within the team or company that could help them better than I can! Good luck!!",ziichi,2025-07-31 08:26:37,4,cscareerquestions,t3_1mdp8jb,False,
n667b5g,"Great advice, thanks! I appreciate your support",X-Mark-X,2025-07-31 14:34:11,1,cscareerquestions,t1_n64ozmu,True,
n5z09ea,> There is one little thing though that I guess interests me … YAMLI just vomited in my mouth reading this. I hate YAMLs :loudly_crying_face:But yes a masters is a good way to swap into SWE from some other field.,EVOSexyBeast,2025-07-30 13:03:50,5,cscareerquestions,t3_1md5zlg,False,
n64h45o,"if you enjoy working with data, SQL, and investigating artifacts, shifting towards a data-focused role sounds like a great move. Cloud skills (AWS, etc.) definitely help, but you could also start by brushing up on database fundamentals and SQL",Dependent_Gur1387,2025-07-31 07:12:08,1,cscareerquestions,t3_1md5zlg,False,
n5z0hbx,Why don't you like YAMLs?,sav-tech,2025-07-30 13:05:04,1,cscareerquestions,t1_n5z09ea,True,
n5z4g51,"I’m not who you’re asking, but for me, it’s the fact that they don’t follow semVer and introduce breaking changes in point releases. Correctly predicting parsing is troublesome; so troublesome, in fact, that I once had to write unit tests PURELY around parsing YAML to assert that it got parsed the way we thought it did.Here’s a good example: https://ruudvanasseldonk.com/2023/01/11/the-yaml-document-from-hell",RichCorinthian,2025-07-30 13:26:48,2,cscareerquestions,t1_n5z0hbx,False,
n5z6316,"well, someone made this: [https://noyaml.com/](https://noyaml.com/)",D2GCal,2025-07-30 13:35:40,1,cscareerquestions,t1_n5z0hbx,False,
n5z798x,"Woah. This was enlightening to read. YAML, bad!",sav-tech,2025-07-30 13:42:00,1,cscareerquestions,t1_n5z4tj0,True,
n5uzfw6,"Personally, I would take the option to move because that sounds tedious to work with, not because it's .NET Framework. If they are this slow getting to .NET, that timeline could expand further out too. Idk though it could be an important application where the risks and business value outweigh the migration. My view is if you are competent in .NET Framework, you'll be able to work in .NET in the first week so I wouldn't reject anyone based on that.",FSNovask,2025-07-29 20:39:54,1,cscareerquestions,t3_1mcdiw1,False,
n5t5eog,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 15:33:45,1,cscareerquestions,t1_n5t5ehj,False,moderator
n5sonla,Won't even comment on the second point because the first is just so batshit insane from multiple angles.,BKrenz,2025-07-29 14:13:45,23,cscareerquestions,t3_1mccfpp,False,
n5sp6y1,1. Is sus2. Is normal. Many companies even have lifetime NDA,Slappatuski,2025-07-29 14:16:25,10,cscareerquestions,t3_1mccfpp,False,
n5sssba,tell them they accidentally included the C level stipulations into your intern contract,CyberChipmunkChuckle,2025-07-29 14:33:59,10,cscareerquestions,t3_1mccfpp,False,
n5sqs9r,The first clause is reason enough to run,joshuahtree,2025-07-29 14:24:11,5,cscareerquestions,t3_1mccfpp,False,
n5spazr,"That's... Interesting.Those clauses are more for like senior management, and it goes the other way where the company is promising to pay for you. Need more information, break that NDA and tell us what you'd be working on.",BillyBobJangles,2025-07-29 14:16:59,4,cscareerquestions,t3_1mccfpp,False,
n5sz8l2,"Not a lawyer but depending on where you live, they could be unenforceable, or at the very least, not enforceable unless you’re compensated in exchange for it",no_nao,2025-07-29 15:04:40,4,cscareerquestions,t3_1mccfpp,False,
n5sstay,"1 - This would probably scare me away. Buf AFAIK these clauses aren't really as far reaching as you're making it sound, it's usually very specific to if you do something *wrong* that brings about damages to the company. For example, say you infringe a copyright as a part of your work, and the company gets in trouble for it. Or if you leak sensitive company information and it causes damages to the company.It's still a scary clause, and one I don't recall ever seeing. Talk to a lawyer first. Most lawyers would be happy to have a quick consult with you for cheap, some might even do it for free. And I mean a *real* lawyer, not a reddit one.2 - NDA's aren't unusual. *Especially* for a paranoid startup that's still in the stage where they think everyone's out to get them. You leaking their big beautiful startup idea even a couple years after you quit could cripple the company. At least that's what they're imagining.Outside of the startup world, and the government-adjacent world, NDA's become less common.",SouredRamen,2025-07-29 14:34:07,3,cscareerquestions,t3_1mccfpp,False,
n5t0wou,"I would ask in a legal sub, or better yet find an actual employment lawyer, about these stipulations. As others have said some items may actually be pretty limited and/or outright unenforceable. I wouldn’t sign something like that without clarification though.",funkbass796,2025-07-29 15:12:34,2,cscareerquestions,t3_1mccfpp,False,
n5wmkh4,"Are you in the US? Is there a substantial educational component in this internship? If not, unpaid internships are now illegal. Back to your question. You should cross out all the indemnify language, it is inappropriate. The legal relationship between you and your employer is fully and sufficiently defined in various legislation including Worker’s Comp, EOE, ADA, etc. regarding an NDA, very normal. It should be lifetime. Blabbing about your ex employers work processes and IP is not cool.",Joe_Starbuck,2025-07-30 01:56:41,2,cscareerquestions,t3_1mccfpp,False,
n5spkcn,1. They tried to sneak it in second half of point in the Non Compete.2. Lifetime NDA for a pre seed non-military startup?,Lanky-Ad6843,2025-07-29 14:18:15,5,cscareerquestions,t1_n5sp6y1,True,
n5r08kl,the truth is working harder doesn’t make you any less replaceable,octocode,2025-07-29 06:35:38,21,cscareerquestions,t3_1mc3vq5,False,
n5r42we,"By working 15 hours by default, you unknowingly set the expectations of your future work at the same level.Work 5-6 hours per day and only work more when absolutely necessary and/or advantageous.Want an example? Nobody cared about my long hours in my first year. But fixing that critical outage one Sunday while I wasn't even on standby? Still getting pats on the back for that one.Job security is more about the relationship with your colleagues and manager, than actual performance.",swiebertjee,2025-07-29 07:11:16,10,cscareerquestions,t3_1mc3vq5,False,
n5r12rg,Work hard but do it for yourself and take advantage of the opportunity to grow your skills. You are just a number to them.,SpiritualName2684,2025-07-29 06:43:29,3,cscareerquestions,t3_1mc3vq5,False,
n5rdt0x,">I feel like I might be on my way to burnoutYou know damn well that's what's going on, that's for sure. But can't admit to it because it might be too much of a shocking / shattering worldview disruption. You're *supposed to* have a good life, you've worked hard, and you have a solid job. You did it all right. So what gives? It might upturn all the tables in your world which you've constructed for yourself to realize this vital aspect of life has serious problems in your approach where you endorse your own burnout as a way of life. This burnout is the shape of *doing everything right* you learned growing up - how can you abandon it when *everything went right?* In a very human way, you somehow both know you are burning out and are also defending against realizing it by distancing yourself from the knowledge of this fact - cognitive dissonance.You feel real bad about it and come here thinking we can provide the correct mindset for you to peacefully exist in a state of cognitive dissonance. The only way out is to resolve it, not to live with it. That's your choice to make. You may be lying to yourself in other ways that promote your coping with unhappiness. If you find yourself asking yourself ""do I feel this way?"" You should perhaps instead ask ""if I felt this way, what do I do? Does that seem right, why or why not?"" I think the actions you'd suggest for yourself will bypass your thinking self and give you a gut reaction feeling that will tell you tons about what you really want and eliminate some confusionJust my thoughts and I'd be proud if any of this gives you any value",clotifoth,2025-07-29 08:45:06,3,cscareerquestions,t3_1mc3vq5,False,
n5re0kz,"Never a good idea. 1. You are still perfectly replaceable and there are better people than you hire. (applies to almost all of us)2. If you work OVER and they don't pay for it extra, it means you lower your hourly salary yourself, make sure your hourly rate per 15 hours a day is still as good as you think it is...3. You will never finish more work than the incoming one. That's a lost fight, so don't bother.4. You will get burnt out, no doubt, just a matter of time. You can have a Porsche and love it, but would you still love it if you spent 15 hours a day in it, every day, while you technically had an 8-hour drive? Maybe for a short while, would quickly become a burden.5. There are plenty of good companies that people enjoy working for, don't overthink it, you are not the only one who is happy with the workplace. People are not after your job, relax.6. If you establish unrealistic perspective of yourself delivering the amount of work that requires 15 hours of work and pretend you work 8 hours then they'll quickly assume you work fast and you'll be expected to work that fast all the time. Once you finally get tired of it or how other things to do in your life (working 15 hours a day is a really bad idea, means you literally have no life off work), you will be seen as underperforming out of nowhere and you'll have to answer ""some"" questions.7. Overall if you work for a good company, as you said yourself, the amount of work and team velocity is more or less known and established. If you deliver on time the amount of work you are expected to deliver, you'll be fine and that should be your performance measurement. Working 15 hours a day only means working 7 hours too long and taking 7 hours a day from your life which you will never get back and cannot buy and you will regret it when you get older. You will realize how stupid that was not to use your life, but instead you either got extra money or/and better position. Neither of which are worth it.",Tango1777,2025-07-29 08:47:08,3,cscareerquestions,t3_1mc3vq5,False,
n5rgwbb,"There is no value in you working any longer than 8 hours a day as a regular. Doing anything more deteriorates your output significantly if it is sustained for long periods of time. You have been warned not to do this because the company actually wants to retain you.You not heeding this warning will lead to you burning yourself out and reducing your performance over time. Eventually you are either going to burn out and quit or get fired for poor performance which you created in both scenarios.Nobody is going to remember or care how many hours you put in at work when you are on your deathbed. So instead of wasting the extra hours at work, do something more productive with your life and stay off the clock and enjoy the actual work life balance.",Helpjuice,2025-07-29 09:15:16,2,cscareerquestions,t3_1mc3vq5,False,
n5r5855,How much experience do you have? I’m assuming junior by this comment; you will go through these stages. You will burn out and find a new ignition. You need to find the people that ignite you. The people around you will drive you—the whole way through your life.,beargambogambo,2025-07-29 07:21:54,1,cscareerquestions,t3_1mc3vq5,False,
n5tbg6m,"You are experiencing what many people (especially in big tech) experience. Especially in corporate america. The idea that we need to work more and produce more, and when we finish, then we pick up the next thing. Is there a reason why you feel like this? Do you feel when you did 8 hours your coworkers were producing twice the work? Do you see people responding to emails or messages late at night?Your manager has said to not be like the guy who has no work life balance and you say it seems everybody has great work life balance. I worked at a job similar to yours, great opay, benefits, company that would make your resume look amazing, etc. Difference was, I never got the ""dont overwork yourself"" chat. I got more of the ""we dont expect you towork more than 40 hours \*wink-wink\*"" chat. Everybody I knew was answering emails and calls at like 11pm. Manager was taking laptop to his kids events. People on vacation would get on calls and chat threads to resolve issues. I tried drinking that kool-aid but I also tried respecting my hours. I ended up getting fire dwhen my work obviously didnt compare well to my teammates who were doing 60+ hour weeks when I was strictly maintaining myself to 40-50 hours.'But that job had the culture of working more. Your job doesnt. It's great that you have that mindset to do more and it will get you to keep your job but that's where you need to have communication with your manager. Start doing 8 hours again and every manager meet ask him how you feel you are doing, if he feels you are ahead or on time with things.",Broad-Cranberry-9050,2025-07-29 16:01:41,1,cscareerquestions,t3_1mc3vq5,False,
n5x9ngb,an often forgotten truth. Ty,Seinhauser,2025-07-30 04:27:54,1,cscareerquestions,t1_n5r08kl,True,
n5r5ca2,Make this more known :raising_hands: we are not slaves,beargambogambo,2025-07-29 07:23:00,1,cscareerquestions,t1_n5r08kl,False,
n5m8buo,I mean I’d let them know once you have a signed offer letter and the background check and pre-employment paperwork is done. Just tell them after confirmation you’d like 2 weeks to give your current employer standard notice.,dareftw,2025-07-28 14:47:35,6,cscareerquestions,t3_1mbi1ij,False,
n5mdk6j,In the US? 2 weeks baby.Be a professional and work with your team for a clean handoff. If you're the devops lead then only a clown would cut your access the day of your resignation.,FlattestGuitar,2025-07-28 15:12:45,3,cscareerquestions,t3_1mbi1ij,False,
n66brz9,I did exactly this. Giving notice tomorrow; everything’s squared away :raising_hands:,personal-abies8725,2025-07-31 14:55:13,2,cscareerquestions,t1_n5m8buo,True,
n66c95g,This firm is.. not run well. I could see the C suite coming down hard on me for being “disloyal”,personal-abies8725,2025-07-31 14:57:26,1,cscareerquestions,t1_n5mdk6j,True,
n66d4oe,Congrats,dareftw,2025-07-31 15:01:30,2,cscareerquestions,t1_n66brz9,False,
n66ei5a,Thanks mate,personal-abies8725,2025-07-31 15:08:01,1,cscareerquestions,t1_n66d4oe,True,
n5mbfrf,I hear OF is hiring.,Early-Surround7413,2025-07-28 15:02:34,5,cscareerquestions,t3_1mbhncu,False,
n5mmvle,Harvesting rice.,AdministrativeHost15,2025-07-28 15:56:33,5,cscareerquestions,t3_1mbhncu,False,
n5oqe9d,"Maybe something more hands-on like dentistry or trades (in Aus, trades are decently paid and very much in demand)",SolidGrabberoni,2025-07-28 21:54:07,1,cscareerquestions,t3_1mbhncu,False,
n5pec94,I wonder how cooked people are who got a game dev degree,Hot-Syrup,2025-07-29 00:03:49,1,cscareerquestions,t3_1mbhncu,False,
n6668n2,The safest career I would argue is a RS in AI / ML. But to get into that you need a PhD which in of itself is extremely hard to get into. Take it from one who is in a PhD right now,Tomb_RIP,2025-07-31 14:29:04,1,cscareerquestions,t3_1mbhncu,False,
n5mnyfk,"I don’t think this field has much of a future, at least in the USA. How is the SWE field in the Phillipines? Are they at least hiring?The layoffs combined with not as many job postings means many are leaving the field in the USA. I would seriously question investing money into a masters to go into AI/ML if that is what you were considering. I think cybersecurity requires you to have probably more experience than you have. But that is up to you and this is just my opinion.",Legitimate-mostlet,2025-07-28 16:01:34,1,cscareerquestions,t3_1mbhncu,False,
n5m5k60,How is that?,TechRedditwastaken,2025-07-28 14:34:07,1,cscareerquestions,t1_n5m5hkk,True,
n66oa3y,Cant you go in the field of AI / ML without a PhD? Like just a SWE for AI?,TechRedditwastaken,2025-07-31 15:53:27,1,cscareerquestions,t1_n6668n2,True,
n5inqxy,You can work at most top labs with an MS. PhD preferred is accurate,ArkGuardian,2025-07-27 23:20:06,2,cscareerquestions,t3_1mawp8a,False,
n5jbyuf,Can you link to a sample job posting or two? It likely depends on the exact kind of job you're targeting.,anemisto,2025-07-28 01:48:35,1,cscareerquestions,t3_1mawp8a,False,
n5l9nl4,"[ML Engineer - Spotify](https://www.lifeatspotify.com/jobs/machine-learning-engineer-personalization): This is less research oriented but could be a nice starting point? Does not say neither MS nor PhD. [ML Engineer I - Pinterest](https://www.pinterestcareers.com/jobs/6864992/machine-learning-engineer-i/?gh_jid=6864992): Requires MS/PhD [ML Engineer Graduate - TikTok](https://lifeattiktok.com/position/7380126065912908082/detail): Requires PhD [Research Scientist - Spotify](https://www.lifeatspotify.com/jobs/research-scientist-personalization): Requires PhD and publications at top conferences.I know these roles differ a bit, but this is generally the kind of position I’m targeting.As I mentioned, I have experience developing a personalization system during my internship, and I’m planning to work on a Master’s thesis related to personalization/recommendation, with a focus on bias/fairness as well.However, the companies I’m aiming for don’t have engineering offices in my country, so I’ve been trying to understand my chances of getting an offer for a role like this. If my thesis gets accepted to a top conference, would that be enough to stand out, or would I still need a PhD (for the roles that don’t explicitly require one)?",Select-Coconut-1161,2025-07-28 11:27:05,1,cscareerquestions,t1_n5jbyuf,True,
n5lzjts,"Contrary to most of my comments on this subject, I'm inclined to say you probably want the PhD, given that you're looking at the Spotify job listing and thinking ""that's the sort of job I might like"" and you'll regret that door being closed, either on an ""objective"" level (i.e. you'd be happier with that job) or just a personal level (a lot of ~~doing~~ finishing a PhD is about ego).I'm not familiar with Pinterest Labs specifically, but I know more than one successful ML Engineer at Pinterest with no PhD and ""labs"" doesn't appear *that* research-oriented. TikTok looks like the standard ML Engineer new grad job posting -- I'd bet they have a similar one for master's students. I'd expect the first Spotify post to have a de facto MS expectation for a new grad.I have an unrelated math PhD and no CS degree. 10 years ago, I would have applied to all of these and would likely have struck out on TikTok (no one wanted me in their new grad pipeline) and Spotify research (both because I'm arguably unqualified and because people focused on first-author papers and conference ""quality"" *do not* know how to interpret math CVs). The others probably would depend on which way the wind was blowing that day and the company culture (for example, Google seems willing to talk to anyone plausible).",anemisto,2025-07-28 14:03:57,1,cscareerquestions,t1_n5l9nl4,False,
n5m2ior,"Thank you for the detailed reply. I am also thinking like you, it'll probably open many doors and it does not worth saying ""what if"". However, after I complete my Master's, I'll probably try my luck with similar job listings while I wait for the results of my PhD applications, and evaluate my situation again.",Select-Coconut-1161,2025-07-28 14:19:00,1,cscareerquestions,t1_n5lzjts,True,
n5dcxpl,"A CS masters has an iffy ROI and is not necessarily the way to learn more about coding. The way to learn more about coding is to do more coding. If your company will pay for the masters, that's a possibly different matter, but still not necessarily a slam dunk yes.",gms_fan,2025-07-27 02:49:52,6,cscareerquestions,t3_1mabfdv,False,
n5ddfa7,decent way to future proof yourself given non cs undergrad imocheck out /r/OMSCS,IlIllIIIlIIlIIlIIIll,2025-07-27 02:53:13,6,cscareerquestions,t3_1mabfdv,False,
n5dir65,"Does your current company have software engineering positions? If yes, you could do an internal transfer. Given the current job market, I’m not sure if it’s worth quitting a good job for a masters in CS. Have you considered doing an online masters while keeping your current job?",evnaczar,2025-07-27 03:31:18,2,cscareerquestions,t3_1mabfdv,False,
n5di5fn,"No, probably not.You have a minor in CS, pretty good, but you're also an automation engineer. Doing the CS masters would be a great way to jump to a software role, or try to get into big tech.",justUseAnSvm,2025-07-27 03:26:50,3,cscareerquestions,t3_1mabfdv,False,
n5f4fri,"I'm about to finish Georgia Tech's OMS Cybersecurity program but I took some electives that are in the CS program. The courses (for the most part) are excellent but you truly get out what you put in. I've thoroughly enjoyed my Master's program and I got so much out of it, beyond simply having a Master's. As for the actual value... for me it has yet to materialize as I'm transitioning out of the military next year. I should also mention that military paid for my degree. All that said, I am already in the interview process for a few defense tech positions in the $150k-$185k range so I definitely don't regret pursuing my Master's.",SlipshodRaven,2025-07-27 12:05:27,1,cscareerquestions,t3_1mabfdv,False,
n5g8mvx,A CS degree is worthwhile until you’re doing senior engineering work and you’re approaching 10 years of experience.,drew_eckhardt2,2025-07-27 15:53:39,1,cscareerquestions,t3_1mabfdv,False,
n5gelbg,"don’t know about the ROI on this. I would recommend masters if you are potentially interested in research route otherwise if you want to continue with regular SWE, then your position, salary etc will solely depend on your interview performance and if an undergrad does better than you, they will end up with a better salary. So imo masters won’t be a good bet. Would highly recommend reading technical books to work on your fundamentals and get them strong and in parallel work on your soft skills (this is a game changer that most engineers don’t focus on and allows one to stand out). Doing this catapulted my career to senior from new grad in under 2 years over other engineers with 3-4x the amount of experience.The books you read will depend on what you want to focus on. For eg, my area of work was distributed systems so the main books I read were around that but the general ones I recommend are the following 2: DDIA, philosophy of software design. Then also diving into design patterns, pragmatic programmer, etcBased on what you are curious to learn and specialize in (FE, BE, DE, DS etc) you pick up relevant books there and start diving in. Also you don't have to read books cover to cover (though the previous 2 I mentioned, do read cover to cover) unless they excite you or you think you are learning from them. I usually use books as a frame of reference so when I get stuck I know where to look (tbh AI like ChatGPT has made that much easier now).For soft-skills (the real game changer), I would recommend focusing on good documentation (and I don't mean writing docs that no one reads, but being strategic with it) like writing summary docs to summarize complex discussions, writing well-thought-out design discussion tradeoff analysis docs to promote healthy, structured discussions and building alignment, etc. Speech is equally important - the phrasings used, the tonality used etc can immediately set an authority apart from a noob - this also translates 1:1 into slack threads, and code reviews as well. Small tweaks like that can instantly make someone come off as authoritative and knowledgeable.",SomeRandomCSGuy,2025-07-27 16:22:58,1,cscareerquestions,t3_1mabfdv,False,
n5ih6at,"if your company pays for it then go ahead, otherwise I wouldnt",Inner_Fuel3558,2025-07-27 22:41:59,1,cscareerquestions,t3_1mabfdv,False,
n5di6h2,This. since graduating I think my salary has tripled.,justUseAnSvm,2025-07-27 03:27:02,2,cscareerquestions,t1_n5ddfa7,False,
n5dja3l,"Yes, an online masters while working is exactly what I'm considering right now! We're a pretty small company and don't really have any true ""software engineering"" positions",DietMoon0,2025-07-27 03:35:08,1,cscareerquestions,t1_n5dir65,True,
n57a19g,"That’s really dynamic question.I work in automation and I could be doing invoice automation, which can be API, Django, Regex, SQL, AI, etc",SpareIntroduction721,2025-07-26 02:44:39,4,cscareerquestions,t3_1m9hh42,False,
n57ys11,"They're looking for your ability to think through real-world scenarios like ""how would you automate testing for a web application that has both UI and API components"" or ""design a CI/CD pipeline for a microservices architecture."" You'll want to focus on understanding testing frameworks like pytest, selenium, or requests for API testing, along with concepts around test design, data-driven testing, and handling flaky tests.The Python questions will likely be more practical than algorithmic - expect to write actual test scripts, parse configuration files, interact with APIs, or manipulate data structures in ways that relate to automation tasks. They might ask you to debug a failing test, explain how you'd structure a test suite, or discuss strategies for maintaining test reliability as applications evolve. Since these interviews can involve some tricky scenario-based questions that require thinking on your feet, I actually built [interview AI](http://interviews.chat) to help people navigate exactly these kinds of technical discussions and practice articulating their problem-solving approach in real-time.",akornato,2025-07-26 05:53:24,1,cscareerquestions,t3_1m9hh42,False,
n59n92n,"Possibly, but there are automation engineering jobs out there that are not specifically test automation",Responsible-Fan-2875,2025-07-26 14:10:53,1,cscareerquestions,t1_n57ys11,False,
n57fafy,Nope. That could be anything. My job descriptions rarely match the job itself,SpareIntroduction721,2025-07-26 03:20:33,1,cscareerquestions,t1_n57enhv,False,
n57gwjt,What was your interview like if you dont mind me asking?,RSufyan,2025-07-26 03:31:59,1,cscareerquestions,t1_n57fafy,True,
n57h8x5,"Mine was all high level, about what I’ve done, what I’ve automated, using what tools",SpareIntroduction721,2025-07-26 03:34:28,2,cscareerquestions,t1_n57gwjt,False,
n57l91u,Gotcha.  Thank u for the replies,RSufyan,2025-07-26 04:03:29,1,cscareerquestions,t1_n57h8x5,True,
n53jx3w,I think that's pretty cool,theorius,2025-07-25 15:05:40,3,cscareerquestions,t3_1m9084m,False,
n56an96,">It's become clear that getting a solid industry job, is a lot harder these days without a CS degree. The bootcamp/self-taught path (even if it's associate degree) rarely works anymore unless you're exceptional.It's almost impossible without a CS or Computer Engineering degree. Every entry level job gets over 100 applications so HR filters by degree for a sanity check. I like your plan.>as eventually staff/principal SWEI don't think that's what most people really want. At Team Lead, I was working 50 hours per week with 15-20 hours of meetings. I had responsibility to my team and the whole business unit such as tracking work intake and discussing if defects could impact other departments. For 10% more pay. Then it's a pyramid, rank in Top 10% of employees at your grade for a chance of making Principal. You made it that far? Now get 5 DMs per day of people asking you for help who will blame you if you don't. Be married to the job.>That said, I enjoy the field (I genuinely like math, I like coding (just not obsessed)) Me too. Coding isn't my hobby. I like it but it's just a job. I'd rather do most anything else in my free time. I don't know an accountant who does accounting for fun when they go home. I stepped up my math and statistics knowledge. I get more out of that.",NewSchoolBoxer,2025-07-25 23:09:13,3,cscareerquestions,t3_1m9084m,False,
n5cnlpe,Did you vote trump,According-Emu-8721,2025-07-27 00:03:50,1,cscareerquestions,t3_1m9084m,False,
n51djjx,Never was. Unless you’re doing like help desk work or security IT.,Known_Turn_8737,2025-07-25 05:42:57,40,cscareerquestions,t3_1m8r1y8,False,
n51ev0k,"Never was for any job requiring a CS or engineering degree. Help desk support dude that unlocked my account said he needed the A+ cert. Different world where certs aren't scams. I'm with u/Known_Turn_8737 here.In about 1 in 20 job applications, I'll see entry level AWS/Azure/GCP cert listed as a plus. That is all. Practitioner is a scam within that 95% scam. Associate is what is listed. I've never heard of CKA in 10 years of DevOps.Get an internship or co-op. That trumps everything else on your resume.",NewSchoolBoxer,2025-07-25 05:53:59,14,cscareerquestions,t3_1m8r1y8,False,
n51dza4,"For DevOps, look into CKA. Also, Azure and AWS certs will do you good.",Techatronix,2025-07-25 05:46:34,7,cscareerquestions,t3_1m8r1y8,False,
n51h4dw,"Yesn't. You are a fresher and have no way to prove anything without experience, so certifications do highlight things. But after that initial highlight it will boil down to your knowledge. The most qualified and reputed certification means nothing if u don't have knowledge to justify it. Once you get even a little bit of experience, the certification itself becomes useless.",Electronic_Pie_5135,2025-07-25 06:13:22,7,cscareerquestions,t3_1m8r1y8,False,
n51k1df,"Have a few AWS ones, never helped whatsoever. No one ever cared",nbabrokeman,2025-07-25 06:39:19,7,cscareerquestions,t3_1m8r1y8,False,
n51gimp,Certifications alone won’t help you need project work and tech stack which is in demand and also you should have good coding skills etc.Certifications are a piece of the solution to the puzzle not the whole solution you need to add other pieces to get hired.Still they are better than not having them just don’t expect to get hired based on getting them.Good luck :four_leaf_clover:,Synergisticit10,2025-07-25 06:08:06,3,cscareerquestions,t3_1m8r1y8,False,
n52hanq,"Niche fields usually require some certificates like Salesforce/SAP etc. Or often times with cloud tech such as GCP/AWS/Azure, but not as often as CRMs I listed above",Turk_the_Young,2025-07-25 11:34:51,3,cscareerquestions,t3_1m8r1y8,False,
n55sg1k,I don’t remember a time when the general wisdom wasn’t certificates are worthless.,nsxwolf,2025-07-25 21:30:02,3,cscareerquestions,t3_1m8r1y8,False,
n51tk6q,So who is doing my heart surgery?Nurse: We have this new junior doctor that would do your surgery sir,KlingonButtMasseuse,2025-07-25 08:07:36,2,cscareerquestions,t3_1m8r1y8,False,
n52aia9,No my last hiring manager and director of IT literally laughed when our team (about 4 people plus him =5) started talking about certsI think I remember him saying something like it might even be a sign of a bad candidate,betterlogicthanu,2025-07-25 10:43:58,2,cscareerquestions,t3_1m8r1y8,False,
n61zp3f,"What do you like to do? Creo que CS tiene muchas áreas, yo trato de enfocarme en el área que más me gusta y tambien que haya trabajo en mi zona.Has tenido entrevistas? Si no has tenido, puede ser que sea un problema de CV",PatrickYu21,2025-07-30 21:36:22,2,cscareerquestions,t3_1mdf0uo,False,
n602feb,"You will not find living in the city on that salary cool. Insurance companies also aren’t the place for skill growth, even if they use more modern tech than you’re used to. I would only take this job if your contract almost certainly isn’t being renewed and it’s your only option.",geopede,2025-07-30 16:13:24,3,cscareerquestions,t3_1mdah28,False,
n603v91,"Yes it’s an extremely lowball offer. The offers I’ve gotten in Canada at ~2 yeo ranges from 120-250k. Assuming your contract gets extended, you have around a year to continue looking for a job. Enjoy the privilege of having a chill wlb while interview prepping.",JGGRNT9,2025-07-30 16:20:14,3,cscareerquestions,t3_1mdah28,False,
n604ld9,"72.5k for a contract roll is bad, even for Canada, and especially in Toronto, and laughable with 2Yoe + coops + Waterloo brand recognition.That being said in your early career experience really is king and I would personally be willing to take a big paycut for good opportunities.I did this myself and it actually worked out fantastic for me. I started in Vancouver as a new grad with 1 year of coops at 70k. After 6 years I was at 140k TC.I’ve since moved to Seattle and multiplied my TC a few times over, and that was only possible due to the massive experience I gained at a smaller company that was growing faster than it could hire experienced talent (which meant there was lots of opportunities for growth)",bonbon367,2025-07-30 16:23:39,2,cscareerquestions,t3_1mdah28,False,
n605t1q,"Skill growth is key early in your career. Find a job that forces you to learn, even if it isn't the highest paying right now.The internal conflict we all feel when we need to learn is healthy and positive in the long run. There is frankly nothing worse for an engineer's career than knowing everything they need to know for their job and that job not changing for several years in a row. They don't grow since there is no pressure to do so.",terjon,2025-07-30 16:29:19,2,cscareerquestions,t3_1mdah28,False,
n608m9r,Changing to a job with more modern development stack will be a good career move. This specific job is not worthwhile though. Always move up.,marsman57,2025-07-30 16:42:34,1,cscareerquestions,t3_1mdah28,False,
n61f68q,"It’s an extreme lowball, depending on your situation is whether you should take it or not.I took a similar pay cut, and it helped my career immensely, but it was mostly remote for me, so I lived with my parents on the meanwhile, and I was pretty unhappy with my employer most of the time.If you can afford it though, I’d go for it, losing 60k one year to make an extra 50k per year for the rest of your life is a great tradeoff. Either that or keep looking for other jobs that offer good growth.",epelle9,2025-07-30 19:59:30,1,cscareerquestions,t3_1mdah28,False,
n605ooz,What companies are offering 250k for 2 yoe in Canada?,asiancury,2025-07-30 16:28:45,3,cscareerquestions,t1_n603v91,False,
n60bpna,"Coinbase, instacart, Pinterest",JGGRNT9,2025-07-30 16:56:46,3,cscareerquestions,t1_n605ooz,False,
