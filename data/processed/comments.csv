id,body,author,created_utc,score,subreddit,parent_id,is_submitter,distinguished
myqvpdl,"Mileage may vary but I found that a lot of DEs don’t really understand the data structures, storage, and in general what’s happening under the hood. They can write the code don’t fully understand how or why things work. Understanding the inner workings makes you the best debugger",AppleAreUnderRated,2025-06-20 02:52:11,321,dataengineering,t3_1lft61l,False,
myquvwi,"Not sure if I’d say it’s super “hard” (although it can be), but there’s always jobs for someone experienced and successful in data migration. No one likes doing it. Particularly if there’s a massive schema change.I really can’t stress enough how much a data migration can stress if you don’t have the support, time, and business side resources you need.",Rough-Negotiation880,2025-06-20 02:47:09,166,dataengineering,t3_1lft61l,False,
myquxdk,Understanding an existing codebase instead of immediately opting to rewrite. YMMV,x246ab,2025-06-20 02:47:24,88,dataengineering,t3_1lft61l,False,
myqwyb2,Business knowledge,ambidextrousalpaca,2025-06-20 03:00:02,90,dataengineering,t3_1lft61l,False,
myqx0fa,Delivering real business value instead of just building a data temple.,Yamitz,2025-06-20 03:00:24,86,dataengineering,t3_1lft61l,False,
myqxyaj,The more I talk to enterprise leadership in data the more apparent the hard things are the process and guardrails teams need to put in place to allow data consumers to function and add value while still maintaining good governance,Sp00ky_6,2025-06-20 03:06:12,25,dataengineering,t3_1lft61l,False,
myqvlob,Explaining the limits of your stack to non-technical stakeholders,LurkLurkington,2025-06-20 02:51:33,28,dataengineering,t3_1lft61l,False,
myr7ldd,"Literally just people problem.If you can ELI5 to rocks constantly, you'll be the CTO within a week.",programaticallycat5e,2025-06-20 04:11:46,11,dataengineering,t3_1lft61l,False,
myqxczf,"Data modeling, metadata management, and “by design” approaches (e.g. privacy, security). Reliability/availability. Easy recovery methods when jobs inevitably fail.",FishCommercial4229,2025-06-20 03:02:33,21,dataengineering,t3_1lft61l,False,
mystcq2,"A lot of you may get mad at me for saying this but Data Engineering attracts many people because of the perception that DE is easier than SWE. While that’s certainly true at many large companies like Meta or Amazon where you’re basically slinging SQL and little else, it’s most certainly not true at companies like Capital One or Airbnb or Netflix; there, your job is practically 1:1 with software engineering. That being said, a great percentage of DE’s need to study DSA, time/memory complexity, and CS fundamentals, instead of memorizing frameworks and assuming everything’s Gucci. It’s the fundamentals that evidently are the “hard stuff”.To provide an actual metric that illustrates what I mean: at a company I will not name, I encountered a legacy process that took 55 hours but was reduced to 6.5 seconds, as well as ~5x less memory allocation, simply by using Aho-Corasick instead of regex, parallelization instead of serialization, and basic optimizations using concepts like “tidy data” and sets. That’s the difference between throwing SQL at everything and knowing when certain tools and techniques apply best or worst.",FeelingBreadfruit375,2025-06-20 12:23:08,7,dataengineering,t3_1lft61l,False,
mz3zm56,I test in production.,radioblaster,2025-06-22 06:00:52,535,dataengineering,t3_1lhgnlz,False,
mz4227g,"Writing actually useful tests in data engineering tends to be much more difficult.While there is some value in writing unit tests, the reality of most pipelines is that if you're using any sort of framework like Apache airflow or dagster you're just testing the framework itself which, while of some value, given the need to keep these frameworks up to date and the need to ensure breaking changes don't affect your code, don't really help you validate the day to day running of your pipeline.Instead, integration tests and stress tests are much more important. You often need to ensure your pipelines will work (or at least fail gracefully) with bad data and not hang with huge amounts of data.You also have to deal with external APIs or flat file transfers where your assumptions will be based on the documentation the external party provides. You quickly come to realise this documentation is often old or just plain incorrect so building a test suite on it is a lesson on futility.This is obviously much harder to do than writing unit tests of your own code and when the pressures mount of delivering integrations and new data products to the business mount, testing can often fall by the wayside with data engineers falling back on ""we'll test it in live!"".This, compounded by the fact that setting up a testing environment that truly represents your production database/data warehouse can be expensive and time consuming all combine to mean tests are a much less rigourously followed discipline in data engineering.Does that mean you should skip them altogether? Absolutely not, but ensuring you have 100% unit test code coverage is not nearly as valuable as ensuring a complex pipeline has a decent set of integration and stress tests for, say, 75% of its functionality.The reality is that most data engineers will be lucky to get anywhere near that, which is almost certainly why they were impressed you wrote tests at all. It should mean that you approach the challenges above with the right mindset, rather than just avoiding them because testing is hard on data engineering.",AltruisticWaltz7597,2025-06-22 06:23:12,188,dataengineering,t3_1lhgnlz,False,
mz4p0ra,"At my last company, we had a whole testing branch called prod.",Choice_Supermarket_4,2025-06-22 10:10:05,49,dataengineering,t3_1lhgnlz,False,
mz3yu7i,Depends on where you work. Some don’t test at all. Others run test on everything.,Big_Taro4390,2025-06-22 05:53:55,36,dataengineering,t3_1lhgnlz,False,
mz45a38,"Any test, even simple, is better than no tests. It was a take home exercise, if tests weren’t part of the scope, then they don’t expect complex end to end tests. Just showing that you included the concept as part of your thinking is noteworthy and positive.",VIDGuide,2025-06-22 06:53:32,25,dataengineering,t3_1lhgnlz,False,
mz468i6,The only tests of this nature I've ever seen in 20 years of software and data engineering are ones I've written. I do exactly what you describe when it comes to ingestion code I write.I will say the teams I work in definitely do data quality tests when it comes to SQL.,mailed,2025-06-22 07:02:28,5,dataengineering,t3_1lhgnlz,False,
mz40i61,I test very little.,reallyserious,2025-06-22 06:08:54,8,dataengineering,t3_1lhgnlz,False,
mz4a71j,"In my last data engineering role, this is what we do:1. Write out the SQL script onto our test server to determine if we called the correct statements.2. See the results and verify with the team internally (if any) if the results match our product requirements.3. Ask the product owner and business user if the outputs we generate is what they expected.No reply situation: 4. Create ETL application using the above SQL statements. 5. Deploy to staging.Has replied situation: 4. Improve upon the SQL statement and continue from 1. 5. Finalise the SQL output. 6. Deploy to staging.From there standard SLDC applies.___As [u/AltruisticWaltz7597](https://www.reddit.com/r/dataengineering/comments/1lhgnlz/interviewer_keeps_praising_me_because_i_wrote/mz4227g/) pointed out: we don't do unit tests because a more important problem for us is:1. Source database keep changing their entities and fields, so that we ```SELECT``` from the wrong columns,2. Data that we expect… are more mendacious than we anticipated.3. Sometimes, data is forbidden from us because these data are personally-identifiable information and we have to first deploy our ETL pipelines first, so that our business users/customers verify that our SQL statements are correct and generate the right output.Unit tests are largely useful if you want to enforce a culture of ""make sure you cover your asses first."" In a large corporate or public sector environment, however, we exploit gaps in either technical or structural (i.e. ""the data is not cleansed properly"") situations to push back effort.Is this bad? Absolutely. Companies and public sectors, however, care not about holistic software development (remember how **hard** it is to employ *zero trust model* as a way to develop our software, let alone ETL pipelines?).",hopeinson,2025-06-22 07:41:01,3,dataengineering,t3_1lhgnlz,False,
mz5hfnu,"You got praise because it’s very unusual. As you said, you come from software engineering, but usually data people have only worked in the data field, where the culture is very different: make it work now, give me the results now, then move onto the next task.In my team we write unit and integration tests, but other teams exclusively work in production and they adamantly refuse using the testing system.",Individual_Author956,2025-06-22 13:45:36,3,dataengineering,t3_1lhgnlz,False,
mz4iixr,"Data engineers quality is really low, they should be specialised software engineers but in a lot of companies they aren't or they aren't good ones. SQL is used everywhere, even for transformations, because of that. And testing SQL is way more difficult, or not even possible sometimes, than testing code since you can't apply SOLID.That's the reason why I left the field. Also, a lot of jobs are just doing basic and boring ETLs.",Sagarret,2025-06-22 09:04:19,7,dataengineering,t3_1lhgnlz,False,
mz59y4q,"Here's what will actually happen, and is already happening:- AI tools make exisiting engineers more productive by allowing them to get unblocked faster, and enabling faster growth into unfamiliar packages and tools.- Existing engineers will be able to fix niche bugs faster and innovate on features with more review- Managers and Leads can outsource the ""first pass"" of QC to AI like GotHub copilot during code review of PRs (we do it)- New grads will be subject to an AI-crafted onboarding plan, because tech teams are too busy and neuro divergent to think about what a new starter will need- The work will continue to grow like with literally every other form of automation, simply resulting in every efficiency gain counterbalanced by even more software tools and packages and IaC and DataOps slop to stay abreast of while some processes become abstracted into AI services.- I will continue to watch other people who are worse at the job in almost every way progress faster because they play football with senior management and my workplace runs like a highs school student council election popularity contest- Data scientists will continue to focus on the endless exciting statistically significant applications of the absolutely dog shit legacy data they have access to, because, noting my previous point, people will continue to create sloppy data products that create future work for DEs, adding to the pile of things not my fault that are somehow my fault",PossibilityRegular21,2025-06-22 12:59:13,324,dataengineering,t3_1lhn1x9,False,
mz59rag,"Good luck to ai (and execs adopting only ai) debugging pipeline failures, rerunning them, ensuring data quality and talking to various stakeholders to figure out even the smallest new features.",higeorge13,2025-06-22 12:57:59,208,dataengineering,t3_1lhn1x9,False,
mz596fs,"Lol if anything the data science role will go first. Look at what Databricks has been rolling out. AutoML completely automates a majority of an ml engineers workflow. And now with their “agent bricks” deploying agents is going to be similar. Don’t get me wrong, DE is not totally immune but ML and DS will go first in any org, the costs are higher for ML DS and the value prop is harder to justify.",TripleBogeyBandit,2025-06-22 12:54:10,92,dataengineering,t3_1lhn1x9,False,
mz6e9a2,"[DataLemur](https://datalemur.com/questions) founder here – glad you are actively using & enjoying the site for SQL interview prep. Now, to address your fears: it's completely understandable to be scared as a newbie to hear about all the AI advancements and it's impact on our field. Just like it's easy to be scared of any arduous, uncertain process like trying to break into ANY new career.My view: GenAI will make Data Scientists + DE more efficient. GenAI will allow these folks to tackle new, complex problems as simpler & more-rote work gets automated. But to get to that point, where you can leverage AI well – you need to know the fundamentals of the field. So keep working hard, don't get discouraged, and work through the basics so you can come out the other side in the next year or two as an AI-empowered DE, rather than the noob DE that gets replaced by AI.",NickSinghTechCareers,2025-06-22 16:39:03,52,dataengineering,t3_1lhn1x9,False,
mz66fqo,"You all really need to spend time off the internet. Microsoft excel was created in 1985. Do we still use calculators? Did we replace accountants? Get off the hype train. Go for a walk, everything is going to be fine. And if it isn’t, there isn’t anything you can do about it anyway.",dupontping,2025-06-22 15:58:28,34,dataengineering,t3_1lhn1x9,False,
mz5ek14,"Thinking or stating that AI is gonna replace what we do demonstrates an extremely flawed understanding of what DE is about (not attacking OP here).An example: I asked an intern to create a Python stored procedure to pull data from a Snowflake table using the “Bernoulli sample” function and output the result in Snowsight. Simple enough. He couldn’t get it to work. Found out he used Gemini to generate the code…which was riddled with errors. The intern showed a poor understanding of the assignment and an absolute reliance on AI.Another example: we get CSV dumps from financial organizations daily. One of the orgs had changed their CSV specs without informing us. It broke our pipeline, which led to garbage data being loaded, which led to dashboards being broken. Fixing this problem required long conversations with that org, their techs, our DBA, our DevOps. We had to manually reload the files before the breakage, update our ETL code, update our Snowflake table and our dashboards. How would AI have helped here?IMO AI shows potential in software development itself. But the tools themselves (GH’s copilot, Google Gemini, ChatGPT) are still in their infancy.",BatCommercial7523,2025-06-22 13:28:19,26,dataengineering,t3_1lhn1x9,False,
mz58mp9,Yaayyy data scientist telling gen ai will take data engineers job,ArmyEuphoric2909,2025-06-22 12:50:30,17,dataengineering,t3_1lhn1x9,False,
mz5im7t,If the business can't even tell a human data engineer what they want how will they tell AI? I guess as long as they don't care about the numbers being right and just continue to focus on what direction they change in it might work temporarily but quickly turn into an absolute mess. Right now companies are dealing with all the tech debt they've blown off and need some drastic plans to justify the cost that's coming.,SoggyGrayDuck,2025-06-22 13:52:36,5,dataengineering,t3_1lhn1x9,False,
mz5k77y,"People tend to say every other job except their own will get automated by AI. It's because they don't deeply understand what everyone else really does day-to-day. Some of the responses in this thread exemplify that. Not enough voices are showing how autonomous AI outputs are an absolute joke just by their nature of compounding error rates, so the truth is getting lost in hype and top-level pressure to just AI automate everywhere and lay off workers. The labor market is contracting due to very obvious economic forces, not AI innovation. This is all just a ruse to keep shareholders invested.""Gen AI use for everything"" is a bubble that will blow up in everyone's faces, and its strengths and weaknesses will finally become apparent as to where it's actually deployed effectively only after that time.",SgtKFC,2025-06-22 14:01:38,5,dataengineering,t3_1lhn1x9,False,
myt7dk5,This is awesome! Thank you for creating and sharing. This is exactly what I’ve been looking for,RandomAccount0799,2025-06-20 13:44:51,4,dataengineering,t3_1lg1psr,False,
mywyfe3,You’re out there banging man every day. Thanks man.,wannabe-DE,2025-06-21 01:25:16,2,dataengineering,t3_1lg1psr,False,
myxjxq7,Excellent,eastieLad,2025-06-21 03:46:18,2,dataengineering,t3_1lg1psr,False,
mysxbfk,"Thanks for sharing! A really helpful site, especially as source of aggregated info about data modelling",BsodErrored,2025-06-20 12:47:41,5,dataengineering,t3_1lg1psr,False,
myuu4je,That’s great. Single pane of glass for DE stuff.,ameynaniwadekar,2025-06-20 18:29:12,2,dataengineering,t3_1lg1psr,False,
mz16tyf,"A very useful link, thank you, but faced with so much complexity I have to admit that a few stress farts came out.",Aquilae2,2025-06-21 19:15:36,1,dataengineering,t3_1lg1psr,False,
mz0p2hc,"I understand what you want to do with this, but arean't you approaching all of this in the wrong way? You have lots of tools that appear to have the same purpose, without any context to why I would use one over the other.I really like the idea but to me this is as useful as searching ""data engineering roadmap"" on google.",Henrique_FB,2025-06-21 17:40:30,0,dataengineering,t3_1lg1psr,False,
mywqewh,hey! Would it be possible to add [ToolFront](https://github.com/kruskal-labs/toolfront)? It's basically an IDE extension that gives Cursor/Copilot access to your databases so their AI agents can understand your schemas and tables. Made a huge difference in my workflow. Disclaimer: I'm the author.,Durovilla,2025-06-21 00:35:18,0,dataengineering,t3_1lg1psr,False,
mz1lkdf,"Maybe the written version is more useful for you: https://www.ssp.sh/blog/data-engineering-toolkit/.I tried to constraint myself (not list all), but choosen a couple per group. but sure theres other ways, and everyons learns differently. The benefit i hope to give, if one topic interest you, you can follow that and learn more. Most of them are linked to my brain with backlins.",sspaeti,2025-06-21 20:37:02,1,dataengineering,t1_mz0p2hc,True,
mylypn3,First rule of IT: Assume everyone is a vendor trying to push their shit.,SquarePleasant9538,2025-06-19 10:47:47,269,dataengineering,t3_1lf5tpn,False,
myludxb,"Most of the podcasts I've listened to are just people selling their ""experience"" with a product or technology as the best thing ever, or talking about buzzwords without any real depth ""Datalakehouse is the new Gold because it will do this and that"". The only podcast I've found that actually seems interesting is Roaring Elephant which I don’t think it’s very well known but it’s two guys with experience in the field giving their take on new developments. What I like most about it is that they call out the bullshit when they see it. They’re very skeptical about a lot of things. Perks of having experience in the field, I would say. They also cover some more niche topics like open source and such. Pretty cool and episodes are not very long, which I also appreciate",Raddzad,2025-06-19 10:09:30,66,dataengineering,t3_1lf5tpn,False,
mylms5j,Joe Reis’ one is pretty excellent. Always interesting guests,thedatavist,2025-06-19 08:56:03,34,dataengineering,t3_1lf5tpn,False,
myml1l4,I like Seattle data guy's lives on YouTube. I don't think it's officially a podcast but they're podcast style episodes lol,0sergio-hash,2025-06-19 13:17:27,13,dataengineering,t3_1lf5tpn,False,
myn3ku6,https://www.rittmananalytics.com/drilltodetail/https://tunein.com/podcasts/Technology-Podcasts/The-Analytics-Engineering-Podcast-p1466362/https://www.dataengineeringpodcast.com/https://creators.spotify.com/pod/show/joereisSome data engineering episodes on this broader developer podcast from u/krisajenkins: https://pod.link/developer-voices/,rmoff,2025-06-19 14:53:59,6,dataengineering,t3_1lf5tpn,False,
myn6huw,"I listen to exactly zero tech podcasts, because I don't think it's the right format. I need to see diagrams and code and commands",saaggy_peneer,2025-06-19 15:08:08,11,dataengineering,t3_1lf5tpn,False,
myln8w9,My go-to is the Data Engineering Podcast btw Tobias Macey (https://open.spotify.com/show/2iLvljRGVVIGlJshT5vNDS?si=h3QFJGhwTgqL-lLjp7AFZg),r4h4_de,2025-06-19 09:00:36,13,dataengineering,t3_1lf5tpn,False,
mymgkog,Sanjeev Mohan in youtube.,justexisting2,2025-06-19 12:51:42,2,dataengineering,t3_1lf5tpn,False,
mynby8x,DataFramed by data campThe Data Chief,youcc,2025-06-19 15:34:37,2,dataengineering,t3_1lf5tpn,False,
myhsdbz,"Yes and I would do it again. We buy floating car data of cars in the Netherlands, most cars ping around every 10-20 seconds . Every ping contains the location, current speed, vehicle model, temperature and much more. We need to join all those car location to the neiregst road. I need Spark for that to join about 150 million points daily to about 50 milion road segments (to simplify the maths that joining to a point is easier than to a line string)",None,2025-06-18 18:26:19,135,dataengineering,t3_1lenuvj,False,
myhn51d,What’s the alternative? Spark is still in many ways the best general purpose framework for distributed big data processing.. all of the other tools you mentioned are more use case specific,InteractionHorror407,2025-06-18 18:01:44,139,dataengineering,t3_1lenuvj,False,
myhp5si,"You can do a lot of things without spark and the scope of things you can do got broader compared to 2015 for example.But it works really well for big data scale processing and for this type of use case if the team is trained let's go.I like SQL centric approach but I find python is more easily managed at scale than SQL.I would just not do scala spark anymore, because you will not find developpers anymore.",FireNunchuks,2025-06-18 18:11:10,41,dataengineering,t3_1lenuvj,False,
myhpte2,"I see these questions over and over, and no one seems to consider that spark can run with one pip install on a local machine, and it can get the job done for all the cases each of these other tools may or may not address. And then it will scale to petabyte sizes if needed, with relatively little change. What is the advantage of having to manage 10 different tools, getting them working with each other and addressing their specific shortcomings that justifies not just going with spark? I am as curious as the next person, but curiosity is not how I decide what my stack will be.",bobbruno,2025-06-18 18:14:14,66,dataengineering,t3_1lenuvj,False,
myj5ije,"Yeah, still going with Spark. There really isn’t anything else that can handle the processing we need as cost-effectively.edit: I will add that we tried duckdb on MASSIVE ec2s, but we were unable to move forward because of this:""As DuckDB cannot yet offload some complex intermediate aggregate states to disk, these functions can cause an out-of-memory exception when run on large data sets.""There isn't an ec2 that can hold everything in memory for us.",__dog_man__,2025-06-18 22:28:23,15,dataengineering,t3_1lenuvj,False,
myimtlh,"None of the tools you mentioned can deal with the data volumes I require at work in an effective fashion. After setting up the Glue catalog in Spark, whether via Glue ETL or EMR or whatever, spark just works. So no need to even look at other stuff. I think also it is a more common and easy tool to find candidates with experience.",ksco92,2025-06-18 20:53:01,11,dataengineering,t3_1lenuvj,False,
myhu0op,"Avoids vendor lock in, easy to scale up or down, handles large data and multiple formats well, lot of support and skilled people available. So spark is still our goto for big data processing.",RepulsiveCry8412,2025-06-18 18:34:09,16,dataengineering,t3_1lenuvj,False,
myhplum,"Depends on the scale of data. If you can get away with using a single server with a lot of RAM, Polars is a really interesting alternative. You can get servers with multiple TBs or RAM. Like you should always try to run your workload on a single node before going distributed, but for some workloads, there are no way around using Spark.",Comfortable-Author,2025-06-18 18:13:15,7,dataengineering,t3_1lenuvj,False,
myi84hu,"I use it primarily to ingest stuff into iceberg tables and I still would starting today. It's mature, well-documented, vendor neutral, easy to run locally, lets you have the power of Python (or Scala I guess but meh) or the ease of SQL. The only reason I could think of to replace it is so that I can say I have experience in ""modern"" stack, ie. don't like an unemployable old guy in this embarrassingly fashion driven industry.",sisyphus,2025-06-18 19:41:48,6,dataengineering,t3_1lenuvj,False,
myi9tuu,"Spark is amazing, and the community is continuously improving it. It is easier to find talent to work with Spark. I would choose Spark again undoubtedly.",Then_Crow6380,2025-06-18 19:50:02,7,dataengineering,t3_1lenuvj,False,
my7f3q4,"Are you comfortable with Python? With SQL and Python rest are just platforms. Snowflake - Data warehouse platform. If you know SQL, you can code in Snowflake. Yes, writing Stored procedures in JavaScript is a bit of a learning curve but it's not significant enough to cause a dent in your career prospects.Spark - Learn architectural concepts and if you want, practice with sample datasets. However, please note there are only a handful of big tech companies with datasets big enough that warrant the use of spark. For the rest it's like cutting a birthday cake with a sword. Airflow - It's an orchestrator. Just like every other orchestrator, it relies on whether the DE knows how to write an ETL job in the first place. Then we worry about scheduling the activities within the logic. I understand your concern but you're stressing yourself thinking you don't know the tools when you need to focus on learning the skills. If you run behind the tools, it's a race you'll never win as there's always a new software in the market every other month.",booyahtech,2025-06-17 03:51:38,145,dataengineering,t3_1ldclby,False,
my7a6gn,Similar spot here. 1) i dont plan on leaving my company any time soon. Do you?2) you can always learn.,PantsMicGee,2025-06-17 03:18:35,31,dataengineering,t3_1ldclby,False,
my7ikwv,"Not cooked, I was in a similar boat up until last year, had built strictly in SSIS + ADF and sprocs on sql server 2012 through 2022. Luckily my org transitioned to databricks so I’ve been getting my crash course in python, spark, and dbt. It’s actually way easier to work in, and if you have good fundamentals it’s no effort to get up to speed, like less than a week for me as someone who has a lot of background in different programming languages and a lot of experience. Just get your experience in and learn to solve the data problems in front of you. It will transfer.",Pandapoopums,2025-06-17 04:16:40,19,dataengineering,t3_1ldclby,False,
my8gm0t,"You're as cooked as you choose to be. Despite what people are saying, there are levels to ADF and a lot of the sub kind of sucks with it because they think low-code pipelines have to be shitty. Don't get me wrong, ADF is far from first choice or perfect, however, I'm a believer that we should do the best we can with the tools available.Learn what it's good at. Learn what it's bad at. Take it forward with you.",MikeDoesEverything,2025-06-17 09:31:20,9,dataengineering,t3_1ldclby,False,
my79wnz,Are you satisfied with your pay? And still employed? Plenty of companies use these technologies. That's not to say these are cutting edge things people rave about. You can always pick up new tech on the side.,ntdoyfanboy,2025-06-17 03:16:51,16,dataengineering,t3_1ldclby,False,
my8bd1i,"Log into Synapse,Go: Manage > Apache Spark Pools > New > 3.4 spark poolThen go to: Develop > Notebook > Language = SQLDo what you like in there in SQL, then you are using spark. Instead of doing a stored proc inside SQL Dedicated Pool, try and do the same in Notebook SQL using dataframes",mzivtins_acc,2025-06-17 08:38:20,4,dataengineering,t3_1ldclby,False,
my7kuq1,"With current market you are cooked... HR looking for exact experience/match in X tech... if you dont have it you are not ""usefull"" for them.Telling you based on my experience with interviews and hr...",ironwaffle452,2025-06-17 04:34:00,6,dataengineering,t3_1ldclby,False,
my90s1v,"Why would you be cooked?So for the shorter term forward your will be a data engineer with experience in SQL and Azure, and therefore of course will easier land a data engineering job at a place that uses Azure and SQL.What cooked is there about that? While for some Microsoft is not the most interesting stack to work with, but acting like no one uses Microsoft and everyone is using pyspark and that is the only way is ridiculous.But then what? If you want to work with spark and snowflake, then the easiest way is to learn it yourself before applying for a job.But in general I wouldn't care for what language you use. Know how to model data, know how to efficiently build your warehouse/lake and its contents. When you get experienced no one cares about the language you use, you're expected to just do the job, with whatever tools available.",Gnaskefar,2025-06-17 12:13:18,3,dataengineering,t3_1ldclby,False,
my7xzrg,Strong SQL skills are a great place to start. To be honest you can often lean on the database to do data transformations which may or may not be better somewhere else.,RBeck,2025-06-17 06:26:37,2,dataengineering,t3_1ldclby,False,
myd169x,"You have direct, business operations experience. There is no amount of learning tech from a vendor manual that will replace real-world data management skills.SQL is the constant. SQL and a programming language (Python, Java, C++, Fortran, vendor tools) have all been in my quiver throughout my career, and only SQL has (mostly) stayed the same.Stretch your SQL skills. Understand your data. Understand how the timely delivery of your results impacts the business.You will be fine.",NightmareGreen,2025-06-18 00:14:10,2,dataengineering,t3_1ldclby,False,
mz9s1td,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 03:47:31,1,dataengineering,t3_1li6szz,False,moderator
mz9vs7p,"No, it's pretty timeless. ""But we could refactor everything and be down for like 9 months then spend lots on consultants for this new software that JUST came out and has this new paradim and what the users just want the AP report fixed? NO. WE ARE EXPANDING ABILITIES HERE. FUCK PIVOT TO FABRIC AI AI AI...NO MONGO DB wait what year is it? Is accounting still bitching about an AP report??? We are doing the FUTURE here people! I know we're 2 years in but SHIT REFACTOR RETOOL NEW PARADIGM its a red queens race gotta keep moving to stand still SHUT UP ABOUT THE AP REPORT ALREADY WE WILL FIX IT when we are done migrating our 50mb *data nation* to the new tech stack!""",no_4,2025-06-23 04:14:29,119,dataengineering,t3_1li6szz,False,
mz9xq16,If anything we’ve regressed from kimball because greater compute power allows all manners of slop,ClittoryHinton,2025-06-23 04:29:10,331,dataengineering,t3_1li6szz,False,
mz9vucs,"Some of the specifics of Kimball are outdated, particularly the parts where he talks about performance. Bear in mind that it was written before columnstore was really a thing. He also talks a small bit about ETL and physical storage in ways that aren't too relevant.The core of his work has stood the test of time though, the actual structures he talks about are still the defacto standard for end-user data design.",fauxmosexual,2025-06-23 04:14:56,62,dataengineering,t3_1li6szz,False,
mz9vox4,"Implementation may be less rigid these days, but the ideas are still foundational. Absolutely a top recommendation for new folks",dezkanty,2025-06-23 04:13:48,50,dataengineering,t3_1li6szz,False,
mz9wnj1,Good database modeling is so fetch,x246ab,2025-06-23 04:21:01,21,dataengineering,t3_1li6szz,False,
mzb2hbj,"No matter how many ETL/ELT tools pop up in the future, kimball modeling techniques will never fade out. I work purely as a data modeler, all day long modeling data from the data lake into stage schema, then into raw vault and then finally information mart schema (dimensional). My team DE's use DBT heavily for the data pipeline work, without data models, they cannot build proper structured pipelines. Data Models are the foundations for any OLTP and OLAP systems, they are systems, tools and applications agnostics. Few tweaks here and there but for most part, a strong base model can be plugged into any application. Data Vault has got more popularity in Europe than in North America, but it'll take sometime for companies to adopt it. I sometimes feel that the art of data modeling is a long forgotten skill. My team tech lead comes from traditional ETL background and has done lot of modeling in his past. I still spend lot of time on the model naming conventions and establishing proper standards. Every field when read the first time should for most part convey a business meaning, inform users of what type of data it might be storing rather than guessing games.",69odysseus,2025-06-23 10:45:50,18,dataengineering,t3_1li6szz,False,
mz9sagb,Nope.,idiotlog,2025-06-23 03:49:13,55,dataengineering,t3_1li6szz,False,
mzagtqk,"Far from it, it's even the opposite, if you think Kimball is for performances only, you haven't done zny serious analytics in your life. It's abiuthow you store your data, how you ensure that your data are right over the time, how you easily query your data, etc...Working in the field of data engineering requires strong abstraction skills, obt will quickly help you deliver something but you will have to refactor everything from time to time, and generate technical debt.",Independent-Unit6705,2025-06-23 07:15:14,8,dataengineering,t3_1li6szz,False,
my8y4hy,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 11:55:35,1,dataengineering,t3_1ldl5t5,False,moderator
my9eck4,"My path has been different but I'd like to add few tips for you.1. Keep testing your knowledge by building things. Try to automate at every step of the way. The more problems you face and solve, the better you become. But this is an endless loop, know when to move on.2. You might experience some SDEs looking down on DEs, do not get demotivated. DEs work on pretty cool problems as you'll see, try not to argue and move on. 3. Stick to a roadmap because there are endless things to learn and one might feel they will never be ready. It is good to know what will work at this moment, learning will never stop. 4. Most of the content is available for free, courses will give you the same content but in a structured manner.5. For later when you are working in DE: You might not get cool problems to work on right away, find places where you think you can add value, take initiatives and you'll end up with something cool on your plate.",ProbablyResponsible,2025-06-17 13:33:45,45,dataengineering,t3_1ldl5t5,False,
myb5a5u,"YoI'm mentoring a SWE engineer in my company into the Data space. Not necessarily DE, but DE is a fundamental aspect to everything data. You've got a good start in SQL and python, but a good way to cement them is practice. I have him doing the following:Read two books: \- Fundamentals of Data Engineering \- The data warehouse toolkit.Then design a star schema from Microsoft's Northwind's database. Then build it in SSIS or SQL, then build it in python and an orchestrater.Good luck :)",cakerev,2025-06-17 18:31:43,19,dataengineering,t3_1ldl5t5,False,
mya7bjx,"11 years into my self taught DE journey. Started at 40k automating excel reports, worked my ass off learning for years, now 170k salary, excellent work life balance, enough that I also have a contracting gig for another ~6 hours per week. Be motivated, be coachable, find someone experienced and ask as many questions as you can. Surround yourself with people way smarter than you. Be ready and happy to be looked down on by them, regardless what their role is (data sci, ai eng, software eng, ml, etc). Learn from them. Be curious. Find the problems that need to be solved, and figure out how to solve them. Automate everything.",trashbuckey,2025-06-17 15:55:15,10,dataengineering,t3_1ldl5t5,False,
my91h7z,"As somebody with a very similar profile to you (I worked in Chemistry, self taught into DE also at around the same age as you albeit a few years ago), I wish you the best of luck.",MikeDoesEverything,2025-06-17 12:17:51,7,dataengineering,t3_1ldl5t5,False,
my9d5lq,"Yooo I'm taking DE Zoomcamp self-paced, on week 1 rn my motivation and drive isn't the same when I was a chemist in biomed research 6 years ago sighnow in software QA and I use Python at work, can understand SQL (have no practical use for it rn) and am comfortable with tech in generalGood luck OP! See you on the other side :beaming_face_with_smiling_eyes::beaming_face_with_smiling_eyes::beaming_face_with_smiling_eyes:",myPacketsAreEmpty,2025-06-17 13:27:09,11,dataengineering,t3_1ldl5t5,False,
my9lmec,"Hey, I actually created a discord yesterday for this. You could go through my profile to see the post I made and if it aligns with you, let me know.",Searching_wanderer,2025-06-17 14:12:02,4,dataengineering,t3_1ldl5t5,False,
myaldfm,"tl;dr: 50+ year old SWE embarking on the transition back to DE, so I know the struggle.On a similar journey - been programming for almost 30 years (C/C++ stuff in DoD land) and now hoping to go back into data. First gig was moving a company from solely paper to Microsoft Access. Things have changed in the intervening years and while “select * from ” still works, my SQL is rusty as hell - so feels like starting over from scratch.Anyhow, I am going through a lot of free resources, but I need to be more disciplined with the learning and actually finishing projects/courses. Bad ADHD keeps me starting or reading about new tech, but not actually fully understanding them before I move on to the next shiny. The tech environment is festooned with tons of shiny stuff that actually gets in the way of finishing a project.So, been doing the DE ZoomCamp free course. It’s a bit janky, the instructors vary in quality (although I really like Alexei) and not everything is straightforward, but I think it’s a pretty realistic way to learn DE. Real life is not going to be laid out well either and projects will develop their own idiosyncrasies that have to be navigated. Also taking Joe Reis’s Data Engineering course on Coursera. It’s very AWS focused, but I think I’ll be able to sit for the AWS Data Engineering Associate Cert with some extra study time. I’m not a certificate enthusiast but the job market seems to like them, so why not help our your resume. It’s very streamlined and I am only in course 2 but he does talk about the non-tech skills DEs need to have to do their job. That’s been helpful.Also looked at Joseph Machado’s StartDataEngineering newsletter. That’s been informative and has exposed me to some new ideas. Since it is a free news letter, it doesn’t hurt. I also joined a couple of groups that SeattleDataGuy has running over LinkedIn, but haven’t really done much with them at the moment. There is a LOT of noise in the DE space, with “influencers” pushing a ton of crap on hopeful DEs, so being skeptical of some of the recommendations is wise. My LinkedIn is flooded with them since I put a data engineering focus to my profile. I have a couple of ideas for some projects I’ve been mulling over. I have one in mind to grab all the publicly available BLS (Bureau of Labor Statistics) data/projections and then see how they’ve revised them in the following months. I am curious to see how (in)accurate they have been since they’ve started. Good luck and feel free to DM if you want to bounce ideas around.",_Nomadic__,2025-06-17 17:01:24,5,dataengineering,t3_1ldl5t5,False,
my9egq8,"Howdy ! I'm also based in TX in the Dallas/Fort Worth area. I'm not making a pivot into DE necessarily, I'm currently an analytics engineer I am trying to learn DE as part of my ongoing learning and may try to pivot down the roadI'd look for meetups! There's one locally called the Dallas Data engineers that's actually meeting this weekThe fundamentals of data engineering book is also great. I did a [review](https://medium.com/@sergioramos3.sr/self-taught-reviews-fundamentals-of-data-engineering-by-joe-reis-and-matt-housley-36b66ec9cb23) on it if you're curious about it",0sergio-hash,2025-06-17 13:34:23,4,dataengineering,t3_1ldl5t5,False,
myaua7c,I have been teaching myself through data camps course but I think we should make a discord group for everyone learning to help each other,UhhFish,2025-06-17 17:41:13,5,dataengineering,t3_1ldl5t5,False,
myvcbfs,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-20 19:59:44,1,dataengineering,t3_1lgdi0i,False,moderator
myvd8kn,Try to recreate what you do using tools and SQL in python,Rccctz,2025-06-20 20:04:19,139,dataengineering,t3_1lgdi0i,False,
myvg7ra,So start building your own Python experience…,Backoutside1,2025-06-20 20:19:20,43,dataengineering,t3_1lgdi0i,False,
myvm7ny,Python is required for many DE jobs these days. I interviewed at a FAANG and a fortune 100 and both required python. And my current job had a basic coding test that had a python component. I doubt we would hire any DE that did not at least know basic python or perhaps R.,beyphy,2025-06-20 20:48:55,37,dataengineering,t3_1lgdi0i,False,
myvfte9,"You're not really a data engineer if you aren't also a software engineer. I would expect strong git, ci, testing, python (or Java), as well as some infra, monitoring, alerting, and data quality. Plus knowing how to code as a member of a team. Data engineering is software engineering with data.",One-Salamander9685,2025-06-20 20:17:21,245,dataengineering,t3_1lgdi0i,False,
myvklgf,You need Python imo to really be a data engineer nowadaysGet studying,msdamg,2025-06-20 20:40:56,98,dataengineering,t3_1lgdi0i,False,
mywest6,I was (am) in a similar situation. We do everything with SQL and a low code no code tool called Talend for almost 15 years now.. Super easy to write etl and pipelines. So recently (to get experience) I started to write small python scripts within my Talend jobs even if it was less optimal and more difficult. Slowly my scripting is becoming more and more python based as I learn more and more. I use copilot (only AI allowed at work) to help me with syntax and some co workers from a different part of the company helped me get set up with a very rudimentary IDE. I now finally feel confident using python for alot of data manipulation tasks.,Mediocre-Peak-4101,2025-06-20 23:25:56,4,dataengineering,t3_1lgdi0i,False,
myvwn5m,"You effectively need Python for a current Data Engineering job. There may be a few jobs that float about on legacy systems like SQL Server, like banks maybe.You're in luck though, Python is 100% the easiest language to pick up.",New_Ad_4328,2025-06-20 21:43:10,10,dataengineering,t3_1lgdi0i,False,
myvo975,If you decide to learn python I would honestly skip the Udemy courses and take Reuven Lerner’s “Intro Python” series,AnonymousTAB,2025-06-20 20:59:01,3,dataengineering,t3_1lgdi0i,False,
myvdjdq,me too brotherI'm trying to study by solving some interview questions and learning a lil bit of theory too. The hard thing for me is OOP + all the basic stuff I missed bc I never used,AteuPoliteista,2025-06-20 20:05:50,4,dataengineering,t3_1lgdi0i,False,
myhfegc,$urely there are $ome good rea$on$ to do thi$ job,git0ffmylawnm8,2025-06-18 17:26:43,246,dataengineering,t3_1lemz44,False,
myhfell,"1. Salary is cool1. Moving data around & proper orchestration tickles my brain. It’s like real-world version of playing Factorio 1. It’s fun going from raw data :right_arrow: datasets :right_arrow: dashboard, being able to see the full funnel of something you build",Mr-Bovine_Joni,2025-06-18 17:26:45,161,dataengineering,t3_1lemz44,False,
myhfpv6,My guess is money. Data is the new oil? Companies have ton of data they want to utilize but quality is horrible and it's stored in random places. So data engineers are needed. DBAs too as databases have accumulated too much data and are about to blow up.,MaverickGuardian,2025-06-18 17:28:09,33,dataengineering,t3_1lemz44,False,
myhgbs1,"Money, you work less as compared to sdes but get just almost equal to them. Also you have to be trained in it or it becomes very difficult to enter DE",Zestyclose_Web_6331,2025-06-18 17:30:54,31,dataengineering,t3_1lemz44,False,
myhgevf,Have you ever worked with compilers and kernels? Thats a special breed of insane. Game design is a horrible sub field where theres no work life balance and everyone is treated like shit even in the best job markets. DE is a fun problem solving career where the money is good.,fake-bird-123,2025-06-18 17:31:17,30,dataengineering,t3_1lemz44,False,
myhvv1v,Not smart enough for swe but can manage doing DE.,tvdang7,2025-06-18 18:42:55,12,dataengineering,t3_1lemz44,False,
myhnqik,"I never liked niche things like gamedev and kernelstuff, they are all too isolated and far away of all the jobs related to software or data field.majority of people who studied gamedev in my school are either unemployed, doing niche C++ job in a small company if they are lucky to even find a job, and well the pay is probably the lowest of all technology jobs in my country without the chance to move companies and up the salary because there are very few of these positions.Data engineering is less competitive than data science, is a technical job with often the chance to work with modern data and cloud technology stack, there aren't many junior DE positions similar to cloud and devops so the demand is high and salary base is often a little bit higher than development jobs now in my country.I'm a data & AI consultant who also gets the chance to explore new technologies like currently working with AI Agents. If I really want I can also pick data projects more leaning towards DS, Data analytics and even data governance. A lot of development jobs are maintaining large enterprise applications which isn't the most interesting to me, if you're unlucky you get a project maintaining or rewriting legacy systems, I almost lost a team of 5 colleagues from the java department because the project simply was not fun.I like programming but I don't like it that much to only do that and consistently keep up the programming skills, the combination of cloud, data & AI with modern technology and arguably the safest job now is mainly what keeps me interested.",Wingedchestnut,2025-06-18 18:04:29,16,dataengineering,t3_1lemz44,False,
myhthyo,Data science bling. Wanted to deep my toes into the data science space without being an expert on all the statistics and maths stuff. Data engineering is the perfect blend of software and data.,KeyboardWalkerCat,2025-06-18 18:31:39,6,dataengineering,t3_1lemz44,False,
myhosh1,"Because everything is just a big puzzle, where you're actually gaining skills that make you more money, and actually get to create an impact.Honestly, sometimes when I'm gaming in the evening and I get bored, I just log into work if I'm in the middle of solving some problem. The key is to just never get too stressed and take everything to seriously and it becomes fun.If you try to grind hard nonstop, learn everything, try to climb the career ladder as quick as possible, then this job could be hell. Idk I feel with any job that pays comfortablely like DE you can live a pretty chill life if you decide to.",RareCreamer,2025-06-18 18:09:25,11,dataengineering,t3_1lemz44,False,
myhnk03,"Becasue ETL Developer was rechristened as Data engineer :DSeriously it was where I landed in first job. Then liked python, SQL and whole data management.",binilvj,2025-06-18 18:03:39,9,dataengineering,t3_1lemz44,False,
myoiuhv,lol it’s exactly like work - building pipelines and refactoring all the time,JaJ_Judy,2025-06-19 19:10:52,147,dataengineering,t3_1lfj3uh,False,
myoic0e,There is nothing specific about data engineering vs software engineering or even EE.But it’s really fun and a lot of engineer and non engineers enjoy playing.,Galuvian,2025-06-19 19:08:03,128,dataengineering,t3_1lfj3uh,False,
myojun5,"I would generalize it to engineers in general. It’s a great game and I would say very educational while still being very fun. I would say if you like gaming and you are an engineer, you are very likely to enjoy this game. Anedotally, I have yet to meet somebody who meets those criteria who doesn’t like factorio (or satisfactory for that matter). Note, if you don’t like gaming already then I am not sure.Why is this the case? At its core its about automating things!You basically have to create logistics pipelines that take raw materials, put them through various stages of processing to make things that can then be used to make other things. You have particular objectives that grow in complexity as the game goes on. In the beginning you can get away with a spaghetti pipeline, but as the game goes on and complexity ramps up, it essentially forces you how to think modularly and in terms of abstractions and interfaces. So instead of working at the level of single processing units, you will eventually need to think at the level of many different processing units. Then you have to think through input rate, output rate etc etc. Other challenges you have to account for is being able to take input resources from different places as they run out! And it also has a bit of pragmatism in that in the core game mode you also have to defend yourself against aliens (product / manager analogy) so you can’t just put everything into building the perfect factory, also needs to be able to defend itself quickly.Hope that gives you some idea!",pandasashu,2025-06-19 19:16:06,38,dataengineering,t3_1lfj3uh,False,
myp901p,It’s a terrible game. Why? Because you’ll not be able to focus on your day job due to thinking about your night job as the factory must grow.,seansafc89,2025-06-19 21:18:27,35,dataengineering,t3_1lfj3uh,False,
myon49y,Tbh I prefer satisfactory.,CrimsonTie94,2025-06-19 19:32:13,14,dataengineering,t3_1lfj3uh,False,
myol6mw,Eh. Its more about logistics. Not a lot of people would play a game where you manually flatten json lol,xeroskiller,2025-06-19 19:22:41,12,dataengineering,t3_1lfj3uh,False,
myov65w,I have 2000 hours (rookie numbers fyi) into Factorio and I’m a programmer and yes it feels similar. What makes it fun is that the programming challenge is to program with buildings instead of code.,-bacon_,2025-06-19 20:11:30,5,dataengineering,t3_1lfj3uh,False,
myok5d6,"Look at beltmatic.Similar idea, less...bugs....maybe stick with factorio for real life :face_with_tears_of_joy:",umognog,2025-06-19 19:17:35,6,dataengineering,t3_1lfj3uh,False,
myon6l5,its a lot more like [this game](https://store.steampowered.com/app/353540/Stephens_Sausage_Roll/),zazzersmel,2025-06-19 19:32:32,3,dataengineering,t3_1lfj3uh,False,
myp0ks2,No not really specifically for data engineering I would say those games are great for engineers in general.I visited a factory for work and it was a lovely experience it was just like satisfactory lol,PairStrong,2025-06-19 20:37:21,3,dataengineering,t3_1lfj3uh,False,
myi85y5,Spark is for very large batch job. Anything small should NOT use spark. Why are moving trucks slower than compact cars?,Trick-Interaction396,2025-06-18 19:42:00,128,dataengineering,t3_1leptee,False,
myjt13w,Boot time. It's indeed slow.The data processing is not.,robberviet,2025-06-19 00:40:39,8,dataengineering,t3_1leptee,False,
myildra,"Spark is super fast, and easily beats out pipelines written for Trino, but only if you use Spark itself and don’t treat it like a database. If you run dbt models, which execute one at a time, against Trino vs Spark SQL, you might get better performance with Spark but because of the overhead, if the models are small and you have a lot of them, Trino will beat Spark. But if you write the entire pipeline using DataFrames and submit the entire pipeline to Spark, it will easily beat any other approach. However, with Trino’s scalability, it’s going to perform very well with large models, but it still won’t match Spark processing an entire pipeline written for Spark.",cran,2025-06-18 20:45:52,31,dataengineering,t3_1leptee,False,
myjvor7,It’s slow like a dump truck is slow vs a motorcycle. If you are trying to move a lot of heavy stuff it’s way more efficient.,Kaelin,2025-06-19 00:56:29,7,dataengineering,t3_1leptee,False,
myjonrj,"For a recent performance comparison, see this blog (where Trino, Spark, and Hive are compared using 10TB TPC-DS benchmark): [https://mr3docs.datamonad.com/blog/2025-04-18-performance-evaluation-2.0](https://mr3docs.datamonad.com/blog/2025-04-18-performance-evaluation-2.0)",ForeignCapital8624,2025-06-19 00:14:42,6,dataengineering,t3_1leptee,False,
myj5vi5,"It's slow, but often the only choice if your dataset is beyond a certain size.",sqdcn,2025-06-18 22:30:22,11,dataengineering,t3_1leptee,False,
mykd3za,"People are going to disagree with me on this number, but my rule of thumb is 10 million rows and below (assuming a sane number of columns), use polars etc. For above that, you're starting to see gains using spark. And then there is some number where polars etc. Just won't work. On top of this, you now have the option of native acceleration in spark using Velox. This will help speed up significantly for *some* types of actions in spark, so it is worth experimenting with.Don't forget though, spark needs a driver - this is pure overhead if your dataset is small enough.",w32stuxnet,2025-06-19 02:41:11,3,dataengineering,t3_1leptee,False,
mym7fwa,"From my experience, it is not that Spark is slow, it is that people have absolutely no idea on how to use it. They loop through columns using with Column/with Column Renamed. They repartition 2000 when the dataset is 300mb only.I have optimized code taking stuff from 1 hour to 5 minutes. Some places use spark for small data, use it like a db manager of sorts.Spark is completely fine. People should just learn how and when to use it. I think other stuff may seem faster but that's because they have a single use case, so it's less prone to be used wrong.",bacondota,2025-06-19 11:53:22,3,dataengineering,t3_1leptee,False,
myknsqn,"Idk I feel like people say spark is slow in small data because it's the only thing they can use to say their tool/stack/platform is better.My experience is that in the real world spark performance is enough for 95% workloads and you can use the same tool for ML, ETL, GenAI an streaming. Makes it easier to do governance in big companies.No one cares if your small data runs in 3 minutes or 30 seconds. If you need this kinda of performance just go for streaming.BI querys is a different story and I think people are not using vanilla spark for that",msdsc2,2025-06-19 03:52:25,4,dataengineering,t3_1leptee,False,
myjtylz,"Spark by itself is not slow at all.The problem is that that from a user prospective spark has many degrees of freedom that you control.This is the curse of dimensiononality as the more degrees of freedom available to tune, the lower the probability your specific Job is close to optimum run time and performance.As you have many ways to write your query, you have spark configs, you have Java configs, cluster configs, storage configs, this is too much for one user to optimize.If you want to optimize and debug spark jobs I recommend the Dataflint open source tool, they also have a saas offering :https://www.dataflint.io/",Vegetable_Home,2025-06-19 00:46:13,3,dataengineering,t3_1leptee,False,
mzcqpmw,DDD Dagster DBT DuckDb,Jeannetton,2025-06-23 16:27:12,44,dataengineering,t3_1likh9u,False,
mzcqiya,This is absolutely an amazing decision! Hope Denmark will actually pull it off.,absurdherowaw,2025-06-23 16:26:20,19,dataengineering,t3_1likh9u,False,
mzcp4yk,dbt works just fine with Postgres,a_library_socialist,2025-06-23 16:19:52,29,dataengineering,t3_1likh9u,False,
mzctazt,"Managed kubernetes (in the cloud) as a backbone.Run whatever you want on top of that. Lakehouse using MinioDB + delta.All compute happens in dedicated containers that scale-to-zero after ETL. DBT + duckdb or you can even use Polars.All monitoring can happen at the level of your orchestration tool (Dagster, Airflow, ...). On top of that you pull additional metrics into grafana, loki, tempo, prometheus.Finally, for the visualisation layer I'd definitely go proprietary. I've tried OpenSource (e.g., superset, evidence.dev) viz tools but they weren't as good as just ... PowerBI. And this comes from someone that doesn't like PowerBI ;)ArgoCD for CI/CD.The part you'll burn yourself I think is managing RBAC. You'll need stuff like KeyCloack for user AuthZ and hashivault for container-to-container authorization. If you want this done well you'll need an entire team of people doing stuff you get for free, beyond running a Terraform script once.... that being said. I run some projects on my own server that has 2 cores and 4 GB RAM. I use docker instead of k8s and it also works, I never have outages or anything. If the business is small enough (and/or you're a small amount of devs). You really don't need anything high tech.",Odd-One8023,2025-06-23 16:39:28,10,dataengineering,t3_1likh9u,False,
mzdh9dl,"> So apparently the Danish government is seriously considering idea of breaking up with Microsoft...Well, it's complicated, and not entirely true.Several big municipalities, some departments of the government have raised the thought of having an alternative.And some try to cooperate with other people trying to do the same. Here the Germans are way ahead of us and are actively working on/contributing to open source projects to replace O365, fx. They do real shit. We just talk.It is how to political winds are currently blowing, and it is mainly a big nothingburger, because if you know anything about big projects in Danish public IT you know this; we will not even start to roll *anything* related to this out for the next 4 years.And then Trump is out of office, and then this whole exercise was a waste of time, and we like the US again.Also, Denmark has for decades been a big Microsoft country. Few countries use it as much as we do. Just finding the skill set to the alternatives will be a mighty battle in itself.",Gnaskefar,2025-06-23 18:28:55,2,dataengineering,t3_1likh9u,False,
mzd2sor,"I mean, good luck getting non technical users (99% of all employees everywhere and ESPECIALLY in government) to use Linux. Email, PowerPoint, Excel, Teams. That's all that a majority of the workforce does on a daily basis. Also open source != more secure. It often times is more secure but a big reason why large corporations use vendor tools is so that they can have someone to blame if a security vulnerability is discovered. You can sue Microsoft, Palantir, SAP, Amazon. You can force them to fix stuff. You can't sue the Airflow volunteers. Microsoft is going to take CrowdStrike to the woodshed over the outages last year. Microsoft has the means to do their own cybersecurity but they don't because they want someone else to blame when things go wrong",Brief-Knowledge-629,2025-06-23 17:22:52,5,dataengineering,t3_1likh9u,False,
mzde392,As a Dane - this will never happen in practice. Good virtue signalling though,Grovbolle,2025-06-23 18:13:51,3,dataengineering,t3_1likh9u,False,
mzd2q9v,"Sure, the switch comes with risks. But staying is definitely not risk free, either.",mea-parvitas,2025-06-23 17:22:33,1,dataengineering,t3_1likh9u,False,
mzd9wkx,Good. I’m sick of sales reps,TowerOutrageous5939,2025-06-23 17:54:31,1,dataengineering,t3_1likh9u,False,
mzdgjax,They could probably do it if they were willing to fund open source development so that they could get the features that they need developed. I'd bet money that they have no intention of doing that however.,beyphy,2025-06-23 18:25:28,1,dataengineering,t3_1likh9u,False,
myktex1,AI models crumble without clean data. Your 9 years of ETL/schema work? That’s the real gold. Flashy models < pipelines that don’t break.,Adrienne-Fadel,2025-06-19 04:33:17,144,dataengineering,t3_1lf1jky,False,
myktluh,"I am seriously considering leaving ML for DE lolTbh, current AI engineering feels much like back-end engineering except you are gluing together various pieces with prompts.",Illustrious-Pound266,2025-06-19 04:34:45,48,dataengineering,t3_1lf1jky,False,
mykryyg,"There are so many variables and unknowns. If we truly are on the cusp of a generalized intelligence revolution, we are all well and truly fucked. But not today!",Throwaway999222111,2025-06-19 04:22:21,10,dataengineering,t3_1lf1jky,False,
myktgr3,"I truly think so. Sorry :pensive_face: this isn't something you can bury your head in the sand about. It's like ignoring the invention of the chain saw and sharpening your skills with the axe. Figure out how to utilize it to enhance your own capabilities and the value you can bring to an org. Ignoring it completely doesn't mean ""ai will replace you"" in the mid term. It means someone who can weild it with skill will.Also, to be clear: you don't need to learn how to build an LLM from scratch. Literally a pointless exercise. Learn how you utilize a model in the world of data engineering. Two totally different things.",idiotlog,2025-06-19 04:33:40,38,dataengineering,t3_1lf1jky,False,
myl3etw,"Your thinking about this wrong, AI isn't another hoop to jump through, it's the opposite of that. It can make your simple repeatable task instant and effortless. Like I have saved prompts for things like DBT YML creation (with a standard suite of test to add), enabling decryption based on column name, and another that automatically applies our custom set of UDFs. Amor Fati, love AI or hate it, it's our fate to use it or be replaced by people who will.",matthra,2025-06-19 05:53:43,9,dataengineering,t3_1lf1jky,False,
myksvkj,Dude I am in exactly the same boat. I have 15 years of experience in IT in Database then last few years in DE. I am on a career break right now. I tried to learn the AI and ML but lost the steam within a month. I am back to sharpening my DE skillset instead. I think this could be due to generational gap. Current students graduating from CS and related fields are taught the AI things in their academics so they pick the solid foundations and so the interests from there unlike us who feels the need to be relevant.,SignificantDig1174,2025-06-19 04:29:11,3,dataengineering,t3_1lf1jky,False,
mylb0uu,"If you're a data engineer, you'll inevitably get dragged into the AI race, not as an AI engineer per se, but because a lot of your work will end up supporting and supplying data to AI deployments of various kinds.You'll probably end up learning a little bit about AI ambiently even if you don't get into the ""deeper concepts.""",cfwang1337,2025-06-19 07:01:28,3,dataengineering,t3_1lf1jky,False,
mylouaq,AI is just stock market manipulation. You’ll be fine.,codykonior,2025-06-19 09:16:27,4,dataengineering,t3_1lf1jky,False,
mykv7hb,"i just built a test suite in 2 hours with the help of ai, something another engineer on the team was tasked with building last year and failed after 5 months.i've been able to stress test the system since i built it and have identified memory leaks in our api / heap accumulation that affects almost 1 million people on an annual basis...nobody cares if or how you're using ai, just get out there and solve problems.it's just another tool.",GlasnostBusters,2025-06-19 04:46:57,6,dataengineering,t3_1lf1jky,False,
myl3155,"I think the most underrated value of AI in an enterprise setting is data cleaning. I can spin up a vLLM server and prototype a brand new, difficult data pipeline that would be impossible or financially infeasible otherwise, and have it done in two days with accuracy that passes whatever metric the end user needs. I can do it on local hardware behind the corporate firewall, foregoing cumbersome compliance and cyber approvals. I send them emails and they say alright fine whatever. Your perspective is needlessly narrow. Consider what you could do with extremely low cost analysts scurrying over your data like ants. What could you build? How could you add value? AI is not a single thing. It’s a constellation of technologies that take arbitrary text input and produce varying degrees of so-called intelligent output. It’s not a hammer. It’s a bag of hammers. Not everything’s a nail, but hammers are useful. And a master craftsperson uses all the tools available.",SryUsrNameIsTaken,2025-06-19 05:50:30,1,dataengineering,t3_1lf1jky,False,
myei10i,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-18 05:58:33,1,dataengineering,t3_1le9ltm,False,moderator
myg3i5c,"Have worked with all three.I usually prefer Airflow because of how widely used it is and easy to hire people who are already familiar with it. But I personally love Prefect the most, it just has a very small learning curve at the start but once you get over that it works better than anything else and keeps it very pythonic",sahilthapar,2025-06-18 13:38:31,38,dataengineering,t3_1le9ltm,False,
mygfymr,"Prefect is working well for my team doing mostly analytics workloads. Very easy to integrate with existing code. The caching and concurrency yielded benefits on locally hosted instances. Tried out Dagster and it was great for stable data pipelines, but it was harder for managing flows that required per-run configuration. I think we could make Airflow work but it would require writing more custom code to get the same benefits as Prefect for our use case.",thmage,2025-06-18 14:41:14,13,dataengineering,t3_1le9ltm,False,
myfo5ul,"They are all fairly similar, I prefer Prefect myself",m915,2025-06-18 12:09:25,10,dataengineering,t3_1le9ltm,False,
myemmrz,For personal projects dagster as it’s simpler to setup locally. Airflow if you’re looking for a job as it’s more widely used.,Hackerjurassicpark,2025-06-18 06:40:23,43,dataengineering,t3_1le9ltm,False,
myfx9yf,"I used airflow first, and it worked. But felt kind of clunky and bulky. Switched to dagster and loved it. But ultimately switched back to airflow after trying the latest version. It feels much lighter and smoother now. Also looks better on resumes.",jgupdogg,2025-06-18 13:03:58,12,dataengineering,t3_1le9ltm,False,
myhtj8t,"I have used two and here’s my take: Airflow- Great for teams, tons of community support, but can feel clunky for small/solo projects. Setup and debugging can be a pain. Prefect- Super user-friendly, especially for solo work. Python-native, clean syntax, great UI.For solo work, I’d go with Prefect. For long-term career growth, Airflow still has the edge due to adoption in large orgs, but Prefect and Dagster are rising fast.",eb0373284,2025-06-18 18:31:50,5,dataengineering,t3_1le9ltm,False,
myekord,"i've used all 3, dagster because its somewhat easierairflow a lot of setup prefect is unintuitive, ran into a lot of issues with env's. i'm using dagster cloud now and its easy to run locally and deploy to the cloud",CircleRedKey,2025-06-18 06:22:28,16,dataengineering,t3_1le9ltm,False,
myez63w,Self-hosted Prefect.We wanted something super simple esp. for cases where we were just migrating Lambdas.,selfmotivator,2025-06-18 08:43:23,8,dataengineering,t3_1le9ltm,False,
myenbu0,"AirflowEspecially if it's just for personal use as the dev setup is extremely simple.Just `pip install apache-airflow` and you have a working install, cli, webserver and scheduler.You still need to turn them on and initialize the DB.Also it is widely used, maintained and has a huge community.",DoNotFeedTheSnakes,2025-06-18 06:46:49,18,dataengineering,t3_1le9ltm,False,
mysrgsc,I heard SQL was gaining traction lately. Hope it survives.,Professional_Shoe392,2025-06-20 12:11:04,318,dataengineering,t3_1lfz2f4,False,
mysu9ar,"Less tools, more practicesSeeing increased adoption of CICD, specifically via GitHub. Some increased use of integrated and automated testing. Seeing engineered data products that engineering teams build are getting worse though. Kinda a complicated subject but partly due to the continuous adoption of high level GUI tools and the increase culture of accepting fast/loose coding.",DataIron,2025-06-20 12:28:53,45,dataengineering,t3_1lfz2f4,False,
mz7l2jl,I've noticed Airbyte in a bunch of meetups and company stack reveals lately. From Series A to late-stage SaaS. Their connector model seems to scale well without locking you in.,Popular_Definition_2,2025-06-22 20:15:41,156,dataengineering,t3_1lfz2f4,False,
myswble,"Dbt, Databricks, Snowflake",Fondant_Decent,2025-06-20 12:41:39,34,dataengineering,t3_1lfz2f4,False,
mysc1ei,Databricks. Full enterprise adoption in global organisations,WhoIsJohnSalt,2025-06-20 10:13:28,121,dataengineering,t3_1lfz2f4,False,
mys4jxx,"Good question, looking forward to the answers. Approx 2 years ago I was seeing Snowflake everywhere, but now my perception is that hype/adoption has slowed down a bit - I could be wrong, so am interested.",hyperInTheDiaper,2025-06-20 09:02:25,36,dataengineering,t3_1lfz2f4,False,
myx5lf4,Does vibe coding count because that shit needs to die,Big_Taro4390,2025-06-21 02:10:08,10,dataengineering,t3_1lfz2f4,False,
mywxo4q,Snowflake.,Tical13x,2025-06-21 01:20:31,6,dataengineering,t3_1lfz2f4,False,
myusq2s,Data engineering has so many things.I am seeing good products and startups are moving faster than legacy enterprise companies.Here are my picks:Data warehouse: MotherduckETL/ELT: AirbyteData quality: Monte CarloData catalog: AtlanData orchestration: PrefectData visualization: Hex,tansarkar8965,2025-06-20 18:22:23,4,dataengineering,t3_1lfz2f4,False,
mz0ymv4,"Architect answer: it depends. It looks like you're in the beginning of your career. Early 30s at most, late twenties if you got started right out of uni.I'd pick the most diverse role, unless you have a strong preference: lead Engineer.. As a lead engineer, you will probably be doing some solution architecture, perhaps some more logical/conceptual work as well. You will still be firmly in a technical track, working with code, but, with leadership and design aspects.As a data architect, you'll be further removed from results and focus more on design, stakeholder management and getting teams to share a vision. You will be working in PowerPoint, archimate and other design tools as well, not so much in code. It requires sales skills and the ability to stick it out for a while before your vision becomes reality.",ProfessorNoPuede,2025-06-21 18:30:48,59,dataengineering,t3_1lh2g76,False,
mz1cdoo,"Very much depends on the company. For FAANG companies, the pay structure is defined: architect > lead engineer. Source: ex-FAANG, Seattle native here.",james2441139,2025-06-21 19:46:40,12,dataengineering,t3_1lh2g76,False,
mz0ud3w,Lead data engineer.Data Engineer salary > data architect and analytics engineer salary,Then_Crow6380,2025-06-21 18:07:57,22,dataengineering,t3_1lh2g76,False,
mz18mwp,These titles don't mean shit. Look for specific job posts and look at the requirements. Requirements most of the times also don't mean shit since they are written by chat gpt by a random HR person. Just apply to all the openings remotely related to Data that pay what you want to earn.,luckyboyhmm,2025-06-21 19:25:38,9,dataengineering,t3_1lh2g76,False,
mz14cv5,"I must be in a different world than the rest of you because I honestly don't really understand how these things are different other than that ""lead"" seems to suggest more managerial and oversight duties. And even still, my title is ""data architect"" and I have managerial responsibilities.",riv3rtrip,2025-06-21 19:01:56,7,dataengineering,t3_1lh2g76,False,
mz1biiq,I always have felt titles do not mean anything rather the job responsibility,Fickle-Impression149,2025-06-21 19:41:51,2,dataengineering,t3_1lh2g76,False,
mz1cqcp,"If you are open to getting roles abroad, I am sure you will easily find 3x the salary you are looking for.",FuzzyCraft68,2025-06-21 19:48:38,2,dataengineering,t3_1lh2g76,False,
mz333rw,architect,phoot_in_the_door,2025-06-22 01:58:31,1,dataengineering,t3_1lh2g76,False,
mz3bc86,check your local listings I guess. data architects almost universally make more than engineers here in sydney.,mailed,2025-06-22 02:52:09,1,dataengineering,t3_1lh2g76,False,
mz3nf3p,"From my interview exp, the salary cutoff for lead is 35lpa in most service companies. Architects can earn more till 60lpa.",drgijoe,2025-06-22 04:18:59,1,dataengineering,t3_1lh2g76,False,
myz3xb5,thanks for sharing!,itsawesomedude,2025-06-21 12:15:08,4,dataengineering,t3_1lgr8xp,False,
myzjym4,That looks really good! Thanks,DramaticPumpkin9952,2025-06-21 14:01:11,2,dataengineering,t3_1lgr8xp,False,
mz0atv4,This looks great!,zchtsk,2025-06-21 16:26:26,2,dataengineering,t3_1lgr8xp,False,
mz2kj1y,Good cheatsheets. Pls add ARRAY/EXPLODE based functions too.,swapripper,2025-06-22 00:02:12,2,dataengineering,t3_1lgr8xp,False,
mz1xzo7,"This looks good, but why use chatGPT to generate the post? It ruins the chance that people will give a shit.",fake-bird-123,2025-06-21 21:46:46,1,dataengineering,t3_1lgr8xp,False,
mz3m1lv,Sure! I’ll add the common array based functions. Thanks for the feedback!,guardian_apex,2025-06-22 04:08:30,1,dataengineering,t1_mz2kj1y,True,
myavfgk,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 17:46:21,1,dataengineering,t3_1ldtqzt,False,moderator
myb0fzy,"Not a gimmick, and applies to way more than data engineering. It’s a question of where you want to discover and solve your problems, when the end user finds them, or before?As a DE my end users are BI engineers, their end users are dashboard/report users. When a report user reports an issue, do I tell the BI engineer to just write their dbt models or design their dashboards differently? No because the source of the problem (the data) might also be causing issues elsewhere, it’s just not been reported yet, so I find the root cause and fix it as far upstream as possible so the fix benefits as many downstream assets as possible.When you write code do you write it in a text editor without an LSP, and discover all your syntax errors at compile time? Or god forbid, in the case of business logic mistakes, let your end users find and report the issue? No, you write code using LSP so you see syntax errors before your compiler does, you write unit tests so your business logic is verifiably correct, you write integration tests to make sure your unit works in correspondence with a larger system - these are all ways that we shift the problem discovery / fix left in the development cycle as much as possible.",Maxisquillion,2025-06-17 18:09:04,53,dataengineering,t3_1ldtqzt,False,
myb1xc2,"I think about it as where you want the friction and how it affects the development flow. Shifting right means faster iteration of ideas and prototyping. You will find “idea” issues faster. But in production now you have a lot of tech debt. Shifting left will slow down development speed a bit, but you will find technical errors much faster. Static vs dynamic programming. Check on write vs check on read. They’re all just different terms for the same general philosophy that’s existed for a long time. But words help us categorize thoughts and processes so not useless.",Wh00ster,2025-06-17 18:16:01,13,dataengineering,t3_1ldtqzt,False,
mybln3v,"What is this phrase, even? First time I hear of it.",FlowOfAir,2025-06-17 19:49:22,7,dataengineering,t3_1ldtqzt,False,
mycjiub,"Just want to state my potential bias upfront that I represent a vendor working on ""shift left"". With that said, I feel qualified to speak on it as a data engineer given I've devoted the past ~3 years to this problem and I'm writing an O'Reilly book on the subject.First and foremost, ""shift left"" pulls from already established paradigms in security and DevOps; and applying that to data. The core problem in those two spaces was disparate and high volume changes that downstream teams could no longer manage, and thus responsibility needed to ""shift left"" to upstream software engineers to manage such requirements.Key to this is not just shifting responsibility, but making it as easy as possible for these upstream engineers to engage in the desired practices within their existing dev workflows. Thus ""shift left"" isn't respective to where you are in the data lifecycle (e.g. upstream vs downstream), it's clearly looking at application code if we are following the same patterns it was established in other domains mentioned earlier.Thus, ""shift left"" in data revolves around prevention at ""design time"" as compared to ""run time"" like observability (both are valuable). This is why data contracts are core to the shift left narrative in data, as it validates if changes meet expectations within the CI/CD process.Here are some great resources if you want to learn more:1. [Shift Left Data Manifesto written by my book's co-author](https://open.substack.com/pub/dataproducts/p/the-shift-left-data-manifesto?r=1phtak&utm_medium=ios)2. [I hosted an entire Shift Left Data Conference highlighting use cases at top companies - Playlist with recordings](https://youtube.com/playlist?list=PL-WavejGdv7J9xcCfJJ84olMYRwmSzcq_&si=dBkgHVwObeBN_Ps8)3. [My O'Reilly book on data contracts and shift left](https://www.oreilly.com/library/view/data-contracts/9781098157623/)",on_the_mark_data,2025-06-17 22:36:34,5,dataengineering,t3_1ldtqzt,False,
mydoval,Shift left is the next useless corporate buzzword that has come about. Top five useless phrases next to “thought leader”.,wiki702,2025-06-18 02:29:58,5,dataengineering,t3_1ldtqzt,False,
myc54wi,\> data observability tools that rely on algorithms to pick up anomalieswhich tools?,gman1023,2025-06-17 21:21:46,4,dataengineering,t3_1ldtqzt,False,
mycc6cd,Roche’s Maxim,Ok_Expert2790,2025-06-17 21:57:31,2,dataengineering,t3_1ldtqzt,False,
myaylru,"I always thought it was about shifting bits. Start right, small. Shift left to grow.",cran,2025-06-17 18:00:33,3,dataengineering,t3_1ldtqzt,False,
mycx7fz,"> When a report user reports an issueIn my opinion, this is the reason for ""start right"". It's not a choice, it's just a fact that usually only end users know the business domain enough to find non-trivial data quality issues.",sib_n,2025-06-17 23:51:12,11,dataengineering,t1_myb0fzy,False,
mz3js8i,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-22 03:51:41,1,dataengineering,t3_1lhepme,False,moderator
mz40l8v,Snowflake already doesn't recompute a repeated query (assuming the data didn't change and it has been less than 24 hours) so does this just help by reducing the network latency of retrieveing the query result cache?Using Persisted Query Results | Snowflake Documentation https://share.google/9lDGxHXfXjm8ps8FI,mrg0ne,2025-06-22 06:09:40,15,dataengineering,t3_1lhepme,False,
mz3opjg,Will this save my precious snowflake credit quota? Currently I'm doing a lot of queries but my boss is not happy with my credit usage.,Artium99,2025-06-22 04:28:57,6,dataengineering,t3_1lhepme,False,
mz4klm4,"If computed at Snowflake, why do you need duckdb? Why not just at driver level?",robberviet,2025-06-22 09:25:30,1,dataengineering,t3_1lhepme,False,
mz4m9hq,"yea that wasn't really the point of why I did it...I just wanted duckdb's instant sql UI for instant sql, so it does a small sample of the data to make the instant sql work. so egress - both from a cost and then to run the query locally isn't necessarily most logical. This is v1, which I got to work locally, but if I continue - I'd want it to use S3, which is possible because it uses ducklake and I'd just need to recompute queries as unload, hence egress",dsiegs1,2025-06-22 09:42:36,1,dataengineering,t1_mz40l8v,True,
mz45bj7,"Yes that's true, but this post is about saving the egress. I.e. not paying to send the data out of snowflake when working from local computer :thumbs_up:",lundez,2025-06-22 06:53:55,-2,dataengineering,t1_mz40l8v,False,
mz3pzyq,"I mean it could, not really meant for that...it's just pulling down a sample of the data so you can write complex queries against it faster....by writing more complex queries. I was kinda inspired by DBT fusion as well...this really isn't solving a problem in the market, it's just cool.That said if you have a dashboard or UI that does a dick load of simple queries that keep turning on your warehouse - putting the caching in front of that app could be helpful?",dsiegs1,2025-06-22 04:39:08,1,dataengineering,t1_mz3opjg,True,
mz3prjg,Cluster tables,crevicepounder3000,2025-06-22 04:37:19,0,dataengineering,t1_mz3opjg,False,
mz4mt8x,"there is no need for any of it? I just wanted instant sql from duckdb - which I could have done with just adbc no caching, but like reasons.... I was like it would be interesting to see if could rebuild snowflakes caching mechanism.https://motherduck.com/blog/introducing-instant-sql/",dsiegs1,2025-06-22 09:48:04,1,dataengineering,t1_mz4klm4,True,
mz91mn1,"You are onto something.We’ve built out a similar architecture using DuckDB, and it’s extremely cost effective for end user applications. For example, to store the results of a query and then avoid having to go to the CDW every time you need to re-render that dataset in the UI. I am starting to see more people use this approach outside of data teams and broader application development.",eddietejeda,2025-06-23 01:08:24,2,dataengineering,t1_mz4m9hq,False,
mytucb9,"The point of “schema on read” is to allow data to be ingested without having to analyse/understand it before ingestion.It’s then available in your landing zone for whenever you’re ready to use it, at which point you do the analysis to understand it and move it to a “schema on write” format.You should never/rarely have “schema on read” after your landing zone",NW1969,2025-06-20 15:38:10,48,dataengineering,t3_1lg6d3x,False,
mytrvh2,"Sometimes it’s needed/ useful, but shouldn’t be in the “gold” layer. For example, say you are hitting an external api to get some data and that external company adds another field to the API. Would you rather that breaks your process entirely or not recording these extra fields or would it be better to be initially storing the whole API response as json in a raw environment and later in a staging environment (e.g. view), you pull out the needed fields and use that downstream in a structured way?",crevicepounder3000,2025-06-20 15:26:21,59,dataengineering,t3_1lg6d3x,False,
myu5b3o,"I find it funny to see a thread like this. The reason is, I started my career before web services, before NoSQL, and when I first heard of schema on read, I had pretty much the same thoughts I'm seeing here.But then it was part of the""new"" mindset, and people told me I was falling behind, that I didn't understand the new paradigms, etc. I stopped being openly critical, just carefully avoided doing stuff I thought was plain wrong. I almost had to move out of the data field on the early 2000s.And now, this. And most NoSQL of the time disappeared. What a difference a day makes.",bobbruno,2025-06-20 16:31:09,16,dataengineering,t3_1lg6d3x,False,
mytwu60,It’s an excuse for data producers that are upstream of data consumers to be lazy,kenflingnor,2025-06-20 15:50:01,10,dataengineering,t3_1lg6d3x,False,
mytu8kf,Well isn’t this why people use data lakehouse? Basically to enforce schema on write and read?,CrowdGoesWildWoooo,2025-06-20 15:37:40,5,dataengineering,t3_1lg6d3x,False,
mytp1w4,Agree..,VarietyOk7120,2025-06-20 15:12:47,3,dataengineering,t3_1lg6d3x,False,
mytrsan,Yeah it is basically just putting the work on someone else. Maybe if you had a use case where you needed it to be super flexible?,Culpgrant21,2025-06-20 15:25:55,2,dataengineering,t3_1lg6d3x,False,
myv940y,"Doesn't matter what call it, when you store data separately, it's always schema on read.You might write a schema to some parquet files, but you can't guarantee all files have the same schema.You might use a hive catalog, that defines the schema, but again, files might not follow it.Lots of places I've worked have directly populated the files without using spark or something else validating the data fits with all the other data. It just writes out file to existing/latest partitions. They do this because it's light weight and fast.If you use spark, or anything that separates compute from storage, it's schema on read.",One-Employment3759,2025-06-20 19:43:48,2,dataengineering,t3_1lg6d3x,False,
mytrzng,We actually put this into our DE interviews.,peanutbuttereggturd,2025-06-20 15:26:54,2,dataengineering,t3_1lg6d3x,False,
myttto1,"I think a lot of that stuff was from a time when people thought webshit was going to take over literally every aspect of computing and everything would be stored in JSON. JSON has terrible types and was rarely validated by anything but client endpoints, but it was desirable by the necessity of the IT fashion of the time, therefore validation had to be given up (and given a silly name that made it sound more respectable), and this propagated into everywhere JSON metastasized itself.Nowdays, thankfully, we have passed the point when we think every app will be rewritten in Javascript and DE especially has far superior formats like parquet and such and we can put 'schema on read' into the historical dustbin where it belongs (I'm sure one person will chime in with how they do eleventy billion events per day from over 9000 devices with 4,223 different formats or ingests random pdfs or whatever and they can't possibly validate or define schemas on the way in and so on, so if you actually have those requirements fine, but schema-on-read always has to be argued for as something specifically needed, not some generally good practice)",sisyphus,2025-06-20 15:35:42,4,dataengineering,t3_1lg6d3x,False,
mzdhkrl,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 18:30:26,1,dataengineering,t3_1lioeql,False,moderator
mzditpe,Reddit is full of bad engineers is the obvious answer.The more nuanced answer is that data engineering has a trackrecord of being immature and not wanting to learn from SWE.Those of us who understand testing and implement it will keep getting paid.,RobDoesData,2025-06-23 18:36:21,95,dataengineering,t3_1lioeql,False,
mzdngne,"My experience with this is that many data engineers are heavily SQL focused and programming is a secondary tool so they’ve simply either never had the means to test things in the way software engineers do (SQL) or never had to write something larger than an ETL script.In my personal experience, it took experience writing actual application code (not scripts) to learn how to deliberately write testable code and not some untestable script kiddie slop.",MonochromeDinosaur,2025-06-23 18:58:32,21,dataengineering,t3_1lioeql,False,
mzdjqoa,Was this the thread that did a good discussion on unit testing versus integration testing in DE workflows? Would love to have a detailed discussion on that (and similar treatment to the ‘Reddit says’ / ‘DE says’ response framing!).,AdamByLucius,2025-06-23 18:40:49,6,dataengineering,t3_1lioeql,False,
mze30zo,"""Why data engineers don’t test?"" and "" Why don’t data engineers test like software engineers do?"" are two very different questions. I would assume that there is some sort of validation process even if it doesn't look the way you would expect it to.It's also odd (and very un-DE like) to lump all of the subreddit responses together as if these are not different users with different opinions. That being said, I largely agree with the overall idea of points 1 and 3 for a lack of unit testing- the upstream data is too unpredictable for it to be useful and the expected outputis (or should be) driven by the stakeholders ever evolving business rules. Data engineers often work within a data platorm or framework, so I am not sure what is being built where an integration test would be useful beyond valdiating results in a Dev and/or UAT environment. The link to your blog in your previous post is not working. Can you add a summary?",DenselyRanked,2025-06-23 20:13:39,5,dataengineering,t3_1lioeql,False,
mzdu9fc,"As I've said in another discussion on the same topic: Data Engineering is all about managing state. Software Engineers never manage state in their life. And all ""solutions"" to managing state in modern software revolve around ""let's not manage state at all, too complicated"". So DE do not write ""tests"" because typical SWE tests are useless for state management.",SnooHesitations9295,2025-06-23 19:31:19,18,dataengineering,t3_1lioeql,False,
mzdwrxk,"Writing good tests is difficult and DE is a somewhat new field so people don't do it as much as they should. In my experience (mostly feeding business/analytics reports) having good tests for business logic is more useful than technical testing (like is this column nullable or unique, etc) because I'm trying to minimize scenarios where the data pipelines succeed but the numbers make no sense to business people and then the business complains or stops trusting the numbers. And I find a decent amount of issues with technical data quality will be noticeable immediately, like if you try to upsert with a duplicate PK, the pipeline will fail and you'll get a notification. It seems like you have the perspective of a DE working in a tech minded company where tech/software is the product, so it makes sense to have the highest possible software quality. This is not the case for all non software companies, where having old and shitty software is the norm and asking for budget increases gets you laughed out of the room. This culture filters down into who gets hired and what tools get used, so the business ends up with worse quality engineering talent all else equal. Sometimes that blows up in the business's face, other times nothing bad happens for years. Those DEs probably aren't going to write tests because they don't see the benefits, are too lazy, are overworked, or don't have the budget (or some other excuse). idk if that answers your question but i think it describes reality a bit better than the strawman arguments the earlier commenters provided",Clever_Username69,2025-06-23 19:43:39,5,dataengineering,t3_1lioeql,False,
mzdryip,"Logging + Observability > TestsAt least in terms of debugging pipelines We use dagster and add traceback in MOST exception handling (or print-only-one in loops). Lots of logging for ingestion quantities and time ranges or what key set ranges. We store raw to s3 and like you do key based extraction with error logging bad keys etc, otherwise do downstream processing (tertiary tasks) in same pipe for staging and prod tables.But setting this up for tests is almost too complicated, its a tangle of wires on top of a somewhat maintained less tangled set of wires..Instead, we configure test RUNS, literally as easy as a new pipe config param called test, if true, devs set if test: df.slice or whatever makes sense ofc. Also writes to test namespaces, and runs on fraction of data, sampled or head usually. Deploy to staging, test run in that mock-prod env (versus local is further away right), works? release, else, iter.",Monowakari,2025-06-23 19:20:06,7,dataengineering,t3_1lioeql,False,
mzdsvow,"We've just inherited a project from another consultancy and it has zero tests. Also, most of the pipelines don't work, even though they are simple and the code looks sensible enough. I joined the team about a month after the handover happened and the juniors had already started copy/pasting the not working code over to the new system with little regard as to what it does or if it even works.After getting on boarded the first thing I've done is enforce rigorous code review and test coverage. If they want it to get past code review, it better have >80% coverage, and the tests must pass. It's amazing how much it's exposed the poor practices, but also how much it's shone a light on how much doesn't actually work properly! I've spent more time reviewing code than writing, but I'm confident moving forward in the state of our pipelines.I think of these guys as the people who responded ""testing is a waste of time"".",killerfridge,2025-06-23 19:24:34,4,dataengineering,t3_1lioeql,False,
mze42vq,"It's something that changes weekly, the overhead of testing on something that changes every few weeks is to much. If the system rarely changes then yeah, it'd be a lot easier and worth the effort.",Oh_Another_Thing,2025-06-23 20:18:38,2,dataengineering,t3_1lioeql,False,
myn5dv7,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-19 15:02:46,1,dataengineering,t3_1lfd1lv,False,moderator
myn66lp,We use it on AWS glue and EMR and currently moving data from on premise Hadoop clusters to AWS into Athena and Redshift. So we use Pyspark to process the data. I am very much interested in learning Databricks. I only have a basic understanding of Databricks.,ArmyEuphoric2909,2025-06-19 15:06:38,68,dataengineering,t3_1lfd1lv,False,
myn6mf2,"Short answer is: yesI’m not a specialist in Spark, but I have worked on data engineering teams that run Spark on a provisioned cluster (like AWS EMR) and just connect it Airflow.We didn’t really use notebooks.",kingfuriousd,2025-06-19 15:08:45,35,dataengineering,t3_1lfd1lv,False,
mynbdcs,Spark is a $Billion+ business for AWS EMR. Same for GCP Dataproc. Every Cloudera customer uses it too.,No_Equivalent5942,2025-06-19 15:31:48,33,dataengineering,t3_1lfd1lv,False,
myndhip,"Extensively on Cloud platform. In AWS(Glue, EMR), Azure Synapse and Microsoft Fabric. Not so much in GCP, as I prefer BigQuery. And obviously databricks itself",OwnPreparation1829,2025-06-19 15:41:58,7,dataengineering,t3_1lfd1lv,False,
mynctw2,"Spark tends to form most data movement/elt tools such as Azure Data Factory pipeline & dataflows, synapse pipeline, most of the aws stuff to.It is also present with notebook and the major core for Synapse analytics & Fabric.",mzivtins_acc,2025-06-19 15:38:49,10,dataengineering,t3_1lfd1lv,False,
mynby86,Yes.,nonamenomonet,2025-06-19 15:34:37,4,dataengineering,t3_1lfd1lv,False,
mynlnfc,Yup. Though I'd say it's overused and/or oversold. Where you don't need spark but people don't have the experience or knowledge to know that.,DataIron,2025-06-19 16:21:25,3,dataengineering,t3_1lfd1lv,False,
myqh1hd,I would say it is more used WITHOUT databricks tbh,Old_Tourist_3774,2025-06-20 01:25:45,3,dataengineering,t3_1lfd1lv,False,
myqvvns,"You guys are a lot nicer than I am. I see this as a joke/trolling question. Apache Spark is a thing and it was before databricks existed.This is almost the same as asking if Kafka is a thing outside of Confluent or Airflow a thing outside Astronomer.To take it one step further: it is akin to asking if touchscreen phones are a thing outside iPhones. Yes, they are the most popular (in the US) but plenty of others exist too.",davf135,2025-06-20 02:53:18,5,dataengineering,t3_1lfd1lv,False,
mys27e6,"We needed strict RBAC, full audit trails, and a setup that could live on-prem. Airbyte gave us all of that, plus hybrid deployment options to keep sensitive data local while managing pipelines from the cloud UI.",Simple_Bodybuilder98,2025-06-20 08:39:36,70,dataengineering,t3_1lf9sj2,False,
mynctcu,"US health care org here with some very unusual requirements. To be honest, we concluded at some point that building an in-house solution in Python was cheaper than buying something.The salaries of about a dozen engineers are a significant business expense, but we don't have to worry about unsatisfied requirements, missing features, changing contracts or vendor lock-in. If we need new functionality, we just create it.",Thadrea,2025-06-19 15:38:45,61,dataengineering,t3_1lf9sj2,False,
myqq15e,We picked Airbyte and stuck with the capacity-based pricing. No more budget spikes when syncs get bigger.,patatatatass,2025-06-20 02:18:12,39,dataengineering,t3_1lf9sj2,False,
mymh0go,"When you’re dealing with enterprise, you need to look at who’s got the best paid support. Microsoft doesn’t have the best software but they’ve got top tier support system to get you out of your problems. That’s how they win contracts. Open source software is down the list of priorities for enterprise use.",mycrappycomments,2025-06-19 12:54:15,28,dataengineering,t3_1lf9sj2,False,
myojesc,Duckdb with sql based etl is basically free. You can move a shitton of data with it on a single EC2 instance with 16 cores. Or a mac book if you are really squeezed in cost. Shoukd get you well into the hundreds of GB of data and billions of rows if you know what you are doing.,tkejser,2025-06-19 19:13:51,9,dataengineering,t3_1lf9sj2,False,
myndhgj,"A big thing to consider is data governance, without that compatibility is your tool even fit for regulated enterprise use?Obviously with microsoft you get it all, purview with databricks or fabric is great, so long as you build your platform with purview in mind (metadata driven platform from the atlas api)There is no point in creating wonderful etl's in great etl tools if you can see what data you are using is sensitive, or no what columns should be obfuscated of not.Also data life cycle management and data access period management is important too.",mzivtins_acc,2025-06-19 15:41:57,8,dataengineering,t3_1lf9sj2,False,
mymqo9w,"Data Platform Lead for a gigantic european enterprise here: consider Snowflake. It is no longer just a data warehouse (for a long time) and with native apps you get lots of functionality (think of these as plugins). They just launched Openflow which integrates with several sources (good luck to the fivetrans and snaplogics of the industry). The Snowflake product team has a close relationship with its biggest customers and they take a lot of feedback from the biggest enterprises in the world. They build their product to make these customers lives easier. If you go with Snowflake as much as you can, you will most likely be ensured the product will advance with the industry and be compliant with all your requirements.Their sales teams are awsome and their support has never failed.",Tough-Leader-6040,2025-06-19 13:48:56,14,dataengineering,t3_1lf9sj2,False,
mysdtn8,"One underrated feature in Airbyte is how easy it is to manage multiple teams with isolated workspaces and tags for governance. It's built for scale, but we got it running in a small team without overhead.",Low-Visit-9136,2025-06-20 10:29:15,2,dataengineering,t3_1lf9sj2,False,
mymfhqf,Dagster is my goto right now. It's OSS and is limited only in your ability to write good Python ETL.,FunkybunchesOO,2025-06-19 12:45:12,5,dataengineering,t3_1lf9sj2,False,
myozyej,"FiveTran is pretty good (I don’t work there). It has all the features you mentioned and more, but it’s a bit expensive. And iirc historical load is free unless things have changed this year. If you want open source, you can explore Singer or AirByte or Kafka Connect (via Confluent or AWS MSK or Redpanda).",dontucme,2025-06-19 20:34:23,2,dataengineering,t3_1lf9sj2,False,
myol6z2,"I see in one of cons, u mention it's a bit dated. Which books do u suggest that are up to date and also in on streaming topics ?",HumbleFigure1118,2025-06-19 19:22:44,14,dataengineering,t3_1lfhxcs,False,
mysnrbi,I read this book once every other year and I always find it useful.,mRWafflesFTW,2025-06-20 11:46:06,3,dataengineering,t3_1lfhxcs,False,
mysdzjt,That's the best book on data engineering landscape ever. Maybe one of the best book on Computer Science generaly,ut0mt8,2025-06-20 10:30:39,4,dataengineering,t3_1lfhxcs,False,
myop0o7,"It's honestly a moot point. Data is a hype market, every year will be loads of new AI products promising the world, most won't go anywhere or will be bought out. Even in his example, Kafka is more used as a component than an isolated too.If you want to focus on streaming, Confluent has loads of materials on it, some are more specific to their products, but as the original makers of Kafka it's good to get whitepapers and tech demos.",RoomyRoots,2025-06-19 19:41:40,28,dataengineering,t1_myol6z2,False,
mypnpy9,there's a new version coming out soon,MotorheadKusanagi,2025-06-19 22:36:09,16,dataengineering,t1_myol6z2,False,
myrupq5,January 2026 I think,speedisntfree,2025-06-20 07:26:10,3,dataengineering,t1_mypnpy9,False,
mydgi7m,"Have you used pandas before? It's the same.If you have db like redshift, bq, and no need for transformation outside sql, you don't need anything else.",robberviet,2025-06-18 01:42:19,48,dataengineering,t3_1le4rs5,False,
mydgkx2,"I met with a DBA on my team today about a pipeline we're working on. They were trying to run through all the ways we could mutate and transform and mangle the data to make it worthwhile, all of which would require their time. I did it all in polars, in memory. It required none of their time. I could not have done those same transformations in the database because I don't have the permission to create the kinds of intermediate tables and functions I wanted to apply to my data. Also it's way easier for me to unit test my code if I'm using polars.",ratczar,2025-06-18 01:42:44,31,dataengineering,t3_1le4rs5,False,
mydifnq,"I only have experiment with polars so far in a very limited context. I’ve used to write a few scripts and such that I would normally use pandas for. It seems like polars can do pretty much anything that pandas can do, but faster, as long as there isn’t a strict requirement for pandas. So if you need to write AWS lambda functions that ingest files from excel files, and convert them to some other format, you could use polars. Note that this data ISN’T in the database yet. As for the scripts mentioned above, I may want/need to explore the contents of a file before I load it into my database. Or just pull some summary metrics for one file to compare them to the loaded data.As for why you might load data onto your local machine…cost, maybe? Running things on your local machine is basically free. Or maybe you want to do some joining and analysis with a data set that isn’t in the database, and would be annoying to get in there—that annoyance could be engineering based or it could be due to workplace policies.I’ll leave you with the thought that there’s a million ways to skin the cat, and engineers are constantly inventing new ones.I could—and do—convert files using glue in Fargate, and sometimes I crawl data in S3 using Athena. Gotta do the math to see what’s the right tool for the job. And sometimes you just do something like polars or pandas because it’s dead simple, quick, and reliable.",Slggyqo,2025-06-18 01:53:15,8,dataengineering,t3_1le4rs5,False,
mydp0z8,Don't forget polars can write to the database as well. Useful for every situation where the database populating process isn't transactional (row by row),ThatSituation9908,2025-06-18 02:30:54,5,dataengineering,t3_1le4rs5,False,
myemabb,Some companies use datalakes. You need to work with these files somehow and tools like polars can be very cost effective.,No_Two_8549,2025-06-18 06:37:10,5,dataengineering,t3_1le4rs5,False,
mye34p7,"It's almost a drop-in replacement for pandas. And like it or not, pandas is a part of a lot of production workflows. Places I have seen pandas: inside Spark job, schedule on a VM, with Airflow job to transform and load data to central datawarehouse ... All of these (except the first one, please don't do that) can be more efficiently replaced with polars.",WeebAndNotSoProid,2025-06-18 04:00:18,3,dataengineering,t3_1le4rs5,False,
myelj2x,"We have some workflows that use it. Data comes in from some third party source in a python script, gets cleaned and transformed a bit in polars, then gets sent off to s3, redshift and hive. The way it’s being used is exactly like pandas but it is much faster on a big dataset.",a-ha_partridge,2025-06-18 06:30:08,3,dataengineering,t3_1le4rs5,False,
myg212u,"SQL doesn't do everything.  Sometimes you need a programming language to achieve the transform you want, like with ML models or something.  Also not everyone is on massive cloud infra or even if they are, they might want to optimize the compute instead of paying whatever Snowflake wants to charge them.",Gators1992,2025-06-18 13:30:31,3,dataengineering,t3_1le4rs5,False,
myfuhlf,It's Pandas but with a better API. We use it primarily in pre-finalized analytics we have to pull from our comically disparate environment.,Reasonable_Tie_5543,2025-06-18 12:48:00,2,dataengineering,t3_1le4rs5,False,
mykvetc,"It’s “bear with me. “, unless you want us to join you in the shower.anyways we aren’t here for grammar lessons. Pandas is not memory efficient while PyArrow is and that’s I believe what Polars uses for data frames. It’s also written in rust which means certain types of set operations have better performance.Wes McKinney, one of the co-creators of PyArrow and pandas has written about it on his blogs. Many good articles that go deep.",TheCamerlengo,2025-06-19 04:48:30,2,dataengineering,t3_1le4rs5,False,
myg52g1,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-18 13:46:55,1,dataengineering,t3_1lehjiz,False,moderator
myg5pp7,Can you share the resources you used for the topics you have learned so far?,Cyber-Dude1,2025-06-18 13:50:19,19,dataengineering,t3_1lehjiz,False,
myg62cx,to pass the interviews yes,ScroogeMcDuckFace2,2025-06-18 13:52:10,44,dataengineering,t3_1lehjiz,False,
mygf1do,"Depends on where you want to interview. I would say to focus much much more on data modeling and getting way more familiar with SQL doing projects on GitHub. You aren’t getting asked DSA questions in interviews unless you are applying to FAANG level companies, or companies that wish they were. If that’s where you eventually want to take your career, then yes. Do learn and practice DSA questions but I would still say that it’s a much lower priority than data modeling and SQL. Especially since for more entry level positions, you likely aren’t interviewing at FAANG",crevicepounder3000,2025-06-18 14:36:49,8,dataengineering,t3_1lehjiz,False,
myg5e6x,Yes,Available_Fig_1157,2025-06-18 13:48:39,5,dataengineering,t3_1lehjiz,False,
myg6343,"Please prioritise DSA, IMO DE is a sub path of SE",Aggressive-Practice3,2025-06-18 13:52:17,12,dataengineering,t3_1lehjiz,False,
myg9fss,Absolutely.,No_Indication_1238,2025-06-18 14:09:19,7,dataengineering,t3_1lehjiz,False,
mygcbn0,"If you already have a CS degree it should be easy to brush up on it.That said, I know many veteran productive DE that wouldn't be able to pass an interview where they ask anything beyond the absolute basics when it comes to DSA.Your checklist make you look better educated than many already in the industry.",reallyserious,2025-06-18 14:23:30,6,dataengineering,t3_1lehjiz,False,
mygfmr8,"Yes but it's not rocket science. For something like python, you should be familiar with lists, dictionaries and maybe sets. You probably don't need to be familiar with tuples.For both of the interviews I've had with Facebook and Capital One they both expected you to know basic DSA.",beyphy,2025-06-18 14:39:41,2,dataengineering,t3_1lehjiz,False,
myo84ph,"You have a CS degree and you don't know much about DSA? I hold a stats degree and this is my only weakness and that's the reason I took Data structures and algorithms courses from the CS department, as these two courses are so fundamental for data engineering (and swe in general, together with OS, programming, OOP and networks). You should really brush them up not only for the interviews(unfortunately), but also for your own growth as an engineer",FlyingSpurious,2025-06-19 18:12:42,2,dataengineering,t3_1lehjiz,False,
myymxx4,"ETL means Extract, Transform, Load. We also sometimes talk about ELT, the same words in a different order. You are doing ELT by the sound of things: your python script extracts and loads the data, then your MySQL views transform it. Your MySQL DB is your data warehouse, by the sound of things. A simple one in relative terms, but simple is good so long as it meets your needs. Some orgs need a much more complex data warehouse.Apache Spark is probably what you're thinking of for Apache: it's a software system for using multiple computers to do a computational task, instead of being restricted to the hardware of just one computer. Many lower-spec computers can outperform and outprice one big one, for some workloads.BigQuery is one of Google's data tools - I think roughly like spark but I'm not super familiar with it.Data Factory probably refers to Microsoft's data tools: Azure Data Factory and its spiritual successor, Fabric Data Factory. These are components of wider data architecture in the Microsoft/Azure/Fabric ecosystem, for creating 'pipelines', which are just conceptual sequences of different tasks depending on one another. Pipelines typically have a code representation but are often also able to be visualised and edited via a GUI.ETA: I don't think you are at all new to data engineering, you just didn't realise you were doing it :slightly_smiling_face:",sjcuthbertson,2025-06-21 09:46:29,43,dataengineering,t3_1lgsowc,False,
mz0jx4x,"You can also check out the book ""fundamentals of data engineering"" which provides a high level overview of the industry and its concepts. I feel like it's very good for getting a high level landscape of what's what and at least understanding how all the lingo relates to one another.You seem to be doing great based on what you wrote! Good luck.",adiyo011,2025-06-21 17:14:00,1,dataengineering,t3_1lgsowc,False,
mz19t4t,Google it?Use an LLM?Have a look at apache superset or knime might be more suitable than your diy solution.,pag07,2025-06-21 19:32:14,0,dataengineering,t3_1lgsowc,False,
mz36vee,"Grab Lead Data Engineer Interview:About Grab: Southeast Asia’s leading superapp (ride-hailing, food delivery, fintech).Salary (SG): SGD 120K–240K/year.Tech Stack: Spark, Kafka, AWS, Airflow, Python/Scala, data warehousing (Snowflake, Redshift).Interview Process:Screening: Background & role fit.Technical: SQL, Python/Scala coding.System Design: Scalable ETL/data pipelines.Like & Follow for more: Medium Article [https://medium.com/@premvishnoi](https://medium.com/@premvishnoi)Deep Dive: Big Data/cloud optimization.Behavioral: Leadership & conflict resolution.[https://medium.com/dataempire-ai/grab-lead-data-engineer-interview-experience-2709f89f88ef](https://medium.com/dataempire-ai/grab-lead-data-engineer-interview-experience-2709f89f88ef)",Ok-Bowl-3546,2025-06-22 02:22:49,0,dataengineering,t3_1lgsowc,False,
myz6quu,"Thank you so much for this response! This is exactly what I was after, as all the AI responses and googling were way too abstract :face_with_tears_of_joy:And yes hahaha I think you’re right, It’s almost quite daunting going into Data Engineering as there just seems to be so much going on at the moment, and so many frequent changes that it’s hard to stay up to date! I’m almost hesitant to invest in a couple of good textbooks in case it’s all obsolete in a 2 years time",GoalSouthern6455,2025-06-21 12:35:36,6,dataengineering,t1_myymxx4,True,
mz82r1k,I just googled “ETL” and “data warehouse” for shiggles and all I got was a very general overview that was totally unhelpful and a shitload of ads for data warehouses and ETL tools.,big_data_mike,2025-06-22 21:47:50,1,dataengineering,t1_mz19t4t,False,
myz6v0k,"Yeah okay that sounds really decent, I’ll check it out. Thanks!",GoalSouthern6455,2025-06-21 12:36:24,1,dataengineering,t1_myyyc35,True,
myzhj8z,"If you haven't already read it, one textbook that is DEFINITELY worth investing in (money and time reading it) is The Data Warehouse Toolkit by Kimball and Ross. Originally published in 1996 after the ideas were developed by Kimball starting from the 80s I believe. The 3rd edition is the most recent, possibly the last (Kimball is firmly retired now IIRC), definitely the version to buy (substantial additions over 2nd edition) and still as relevant as 1996. It's not all that technical, it's really more about concepts, approaches, and best practices. There's a bit of SQL but it's not all about code.",sjcuthbertson,2025-06-21 13:46:27,3,dataengineering,t1_myz6quu,False,
mz998i8,u/big_data_mike sounds like a DE final boss name.,Tutti-Frutti-Booty,2025-06-23 01:52:21,2,dataengineering,t1_mz82r1k,False,
mz6p2b5,"Even if you are a ""prodigy"" not having a mentor will slow you down. I argue to focus less on the label, and instead focus on the relationships in your career as mentorship can be a spectrum.The trusted author who writes books and blogs is providing ""mentorship"" at scale.The amazing manager who is helping you grow internally in the company is providing mentorship, but will likely stay scoped to the job.The person you met at a conference and talk to periodically to share advice is a form of peer mentorship.The consulting hour with an exec who has been through basically everything before, while expensive, is mentorship (btw, this can be worth every penny for the right circumstance and I would happily pay $1k+ for the right person/problem to solve in my career).Focus on finding awesome people (earlier than you, same stage as you, or further along in their career), building meaningful relationships, and providing support to these individuals in any way you can.The relationships I started building 5 years ago are finally starting to become my biggest asset. Some I've helped get jobs, others I've hired for contract work, others have made key connections for me in my career.A career is a long journey with twists and turns, and it's best to not go alone but also recognize everyone is on their own journey where you only overlap for a moment.",on_the_mark_data,2025-06-22 17:32:23,26,dataengineering,t3_1lhshao,False,
mz8ymzj,"It's not nearly as important as many make it out to be and it certainly isn't required. Can a mentorship be helpful? Of course? Are all of them helpful? Nope, not even close. Speaking from experience.Great mentors are not easy to find.",FrugalVet,2025-06-23 00:51:05,3,dataengineering,t3_1lhshao,False,
mz6y50t,Extremely. The difference maker of a person who will get over the hump and one who can’t figure out the last 10%,molodyets,2025-06-22 18:16:52,4,dataengineering,t3_1lhshao,False,
mz7go57,Priceless. A good one at least.,Wh00ster,2025-06-22 19:52:40,5,dataengineering,t3_1lhshao,False,
mz6qi4d,I'm new on a team of fairly new DE as well. I'm relying on learning from consultants that are helping us get going but soon they will not be here anymore. They have been invaluable.,tvdang7,2025-06-22 17:39:17,2,dataengineering,t3_1lhshao,False,
mz8m5q8,A good manager will see your talent and put you on the right projects/help you push through them. I had a good manager for like 4 months and I miss it dearly. revolutionized my work life.,storeboughtoaktree,2025-06-22 23:37:56,2,dataengineering,t3_1lhshao,False,
mz6r4yf,"Interactions will be important in your career, whether it's with a mentor or just other people in the company. Language barriers are hard to overcome (had to do it myself when working internationally), but you need to get past that or you will be limited in your growth and interactions.",Gators1992,2025-06-22 17:42:20,1,dataengineering,t3_1lhshao,False,
mz70u5x,"That is mentorship, at least in a technical level. What’s most important I would say is soft skills mentorship. Sadly most senior DEs dont have great soft skills, you would need to look at EMs or some other type of tech lead roles with good soft skills. What slows you down in your career is not selling yourself and not having good soft skills, tech skills you only need to be good enough.",rudboi12,2025-06-22 18:30:39,1,dataengineering,t3_1lhshao,False,
mz76b87,"I would like to get behind mentorship too, but socially awkward me doesn't know how!",FuzzyCraft68,2025-06-22 18:58:46,1,dataengineering,t3_1lhshao,False,
mz7kju3,"It is not mandatory for your senior to be yor mentor. Sometimes you just have to wrk and get the work done as directed. Then you can find a community of like minded individuals and get a mentor, or mentors from there.",Popular_Definition_2,2025-06-22 20:13:01,1,dataengineering,t3_1lhshao,False,
myukmaz,I don’t. I solve actual business problems. I don’t tell em anything more than they need to know. And they let me. Cuz I’m not focused on building a modern data stack. I’m focused on making money. Tools are just tools.,Firm_Bit,2025-06-20 17:43:31,83,dataengineering,t3_1lg74vv,False,
myty7t4,Your understanding of business/enterprise needs is shocking.Why refactor or reengineer a functioning system? Take sparse resources and use them to reinvent the wheel??Enterprises aren't interested in using the latest/greatest technology. They are interested in delivering Value for the customer/company.Today's shinny technology will probably be obsolete in a few years.,dataindrift,2025-06-20 15:56:38,94,dataengineering,t3_1lg74vv,False,
myuunrb,">> incredible how difficult simply getting a client to even consider the self-hosted or open-source version of a thing (e.g. Dagster over ADF, dbt over...bespoke SQL scripts and Databricks notebooks)ADF, SQL, and Databricks are not modern tooling? Why do you want your clients to use dagster or DBT? Are they really any better than the alternatives?What do you want - open source, modern tooling? These are not necessarily the same thing.",TheCamerlengo,2025-06-20 18:31:51,20,dataengineering,t3_1lg74vv,False,
myung5z,"Because those open source tools need to kept operational, upgraded & patched and it takes time - and money - to build experience with them. Because with open source you have no guarantee of support moving forward. What if OS devs flock away to another shiny thing?",External_Mushroom115,2025-06-20 17:56:51,10,dataengineering,t3_1lg74vv,False,
myui95u,"If it helps, you can mention dbt is natively supported in Databricks and Managed Airflow is integrated in Azure Data Factory.Mentioning that dbt and Airflow are ""embraced"" by Databricks and Microsoft might help convince people that never heard of them that these are 'serious' products.Of course you'll likely need more arguments, but this might be some helpful addition to your entire 'case'.",nl_dhh,2025-06-20 17:32:25,5,dataengineering,t3_1lg74vv,False,
mytwmzk,"I'm fighting this fight rn. Tightly regulated industry, ""small"" data, processes that have always depended on specific people and those specific people are nearing retirement. I think people that work with computers tend to forget how little computing or data work is required for 80%+ of businesses. Lots of my colleagues are from manufacturing or engineering backgrounds. They build houses and cooling systems and work on big, multi-million projects. The data needs are minimal and the business mostly works fine without it.",ratczar,2025-06-20 15:49:04,10,dataengineering,t3_1lg74vv,False,
myvavpi,"They don't care about tools, just outcomes. You tell them what will go better and quantify the benefit, not that you want fancy tools. Nobody will take you seriously if you just want the new tool because it is 'better'",JonPX,2025-06-20 19:52:32,3,dataengineering,t3_1lg74vv,False,
myu022v,"I've been down this road a few times before and have ultimately given up trying to fight it. If your industry has statutory requirements that rely on data availability then they will not go open source, unless it's a last resort. It's mainly an accountability thing, if something goes drastically wrong and people get hurt (e.g. a hospital's data pipelines break), they need a system expert available to fix it straight away, and someone to blame or sue if there are real world harms.",50_61S-----165_97E,2025-06-20 16:05:36,6,dataengineering,t3_1lg74vv,False,
myvaxks,"You’re going to get a lot of greybeard responses to this asking why change something that works. These folks are rightly skeptical of new shiny products because in their career, there hasn’t been much moving the needle beyond in-memory database and then cloud data warehousing but fundamentally, things haven’t changed all that much.Now, we have a pretty significant shift with SWE / dev ops best practices coming to data and the benefits aren’t immediately obvious while requiring relearning how to work. For one, and before AI generating code, they were mainly implemented to solve scalability problems that not every company will have. Why put everything in code? Why version control? Why CI/CD? Why SSoT for metrics / semantic layer? Etc etc. These are super hard to explain until you can demonstrate the consequences of not doing them. So naturally, people will lump them into the same boat as shiny new features designed to churn profit. Good thing is, with AI everyone is suddenly open to change if it helps them implement AI. Bad news is, there is a lot of smoke and mirrors (like reselling chatgpt or throwing AI at bad data) that will make it harder to convince people of change if/when it crashes.",soorr,2025-06-20 19:52:48,3,dataengineering,t3_1lg74vv,False,
myvs47g,"Don't put the answer before the question. You're saying ""We should use this"" , they are pushing back with ""Why? What need or benefit does it fill that we don't already have""Is it worth the overhead of a 3 year conversion to switch from, say, Informatica to something open-source? Unlikely.Focus on strategic goals, not switching tools just to switch tools.",fleetmack,2025-06-20 21:18:53,1,dataengineering,t3_1lg74vv,False,
myyjdhj,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-21 09:08:52,1,dataengineering,t3_1lgs9pz,False,moderator
myytkto,"Take any publicly available data set from online, store them in your local or on cloud. Treat it like a data lake area where you store raw data. Start using data modeling techniques like data vault (rdv, bdv), followed by dimensional model to create models in those layers. Watch a lot of YT videos to learn different ways to model the data. Can also opt for DE bootcamp like the one Zach Wilson from Bay Area offers but is expensive. Read the Ralph Kimball dimensional modeling book.",69odysseus,2025-06-21 10:51:20,9,dataengineering,t3_1lgs9pz,False,
myyzqne,"I just started reading The Data Warehouse Toolkit by Kimball and I noticed that there are many chapters showing different use cases in different fields (for example: Retail, Inventory, etc). Not sure if they are all theories but it might help.",nahihilo,2025-06-21 11:43:22,3,dataengineering,t3_1lgs9pz,False,
mz0uozs,Repos like this:https://gitlab.com/gitlab-data/analytics/-/tree/master/transform/snowflake-dbt,Resquid,2025-06-21 18:09:43,4,dataengineering,t3_1lgs9pz,False,
myypru4,would like to know as well. Unfortunately answer is probably collect your own data,roastmecerebrally,2025-06-21 10:14:56,1,dataengineering,t3_1lgs9pz,False,
mz0qfy9,"This is where you start to get RDMS specific. Features that are in one DB may or may not be in another. That will cause you to modify your design. Realize that any course is strictly going to be lowest common denominator. (The same is true of the SQL syntax. Lots of RDMS support ANSI SQL but sometimes the version is different, etc.)I would study Inmon and Kimball first. Get yourself grounded in both of them. As a general rule of thumb, I design my core using Inmon and the semantic layer using Kimball. When you know why I do that, you will have a good grasp of both of them.",marketlurker,2025-06-21 17:47:32,1,dataengineering,t3_1lgs9pz,False,
mz1vz4h,"It's hard to find sources that go over real world stuff because real world is often just an extension of the same concepts but you throw in many more columns from your source that might just confuse someone trying to learn. Like if I am trying to figure something out I will POC some small subset of my data or make up a schema to try the concept and once I get that I will apply it to the full model. Same can be said for data, use a small data set where you know what's going in there rather than using real data and spending hours going through it looking for some edge cases that fail.",Gators1992,2025-06-21 21:35:14,1,dataengineering,t3_1lgs9pz,False,
mz49l1p,Wow thank you so much guys!,YuvKry,2025-06-22 07:34:51,0,dataengineering,t3_1lgs9pz,True,
mz62ydi,This repo is intimidating haha.Makes me wish I was working on a big team like this to learn all the nuances of dbt without having to try brute forcing all the knowledge myself since I work alone at my company,biga410,2025-06-22 15:40:40,1,dataengineering,t1_mz0uozs,False,
mytptgo,"I work in trading. There's a lot of dashboards, yes, but a lot of data also goes into application log, ML, statistical research, compliance archives, etc.",sqdcn,2025-06-20 15:16:26,23,dataengineering,t3_1lg6b82,False,
mytodft,companies that sell data;adtech/marketing tech is a good example,thisfunnieguy,2025-06-20 15:09:35,10,dataengineering,t3_1lg6b82,False,
mytt6u7,"Data for ML pipelines, training data for models and inference in general need DEs to build stuff",gabbom_XCII,2025-06-20 15:32:38,5,dataengineering,t3_1lg6b82,False,
mytwy8w,Analysis - DE build pipelines to create data products that are used to fuel data scientists building models or analysts just getting the answers to stuff.,Gargunok,2025-06-20 15:50:33,4,dataengineering,t3_1lg6b82,False,
mytr95c,"Gaming for sure. They data science the crap out of their user data to see if they can drive more sales, less churn (users who stop playing), etc.",seleniumdream,2025-06-20 15:23:21,3,dataengineering,t3_1lg6b82,False,
myu6fkz,"I work with American healthcare data. The data is the data behind a lot of medical professionals equipment, or hospital admin computers. I wish there was actual analysis done on this data instead of me doing a lot of ad hoc queries.",dukeofgonzo,2025-06-20 16:36:43,3,dataengineering,t3_1lg6b82,False,
myu1cbl,"Government roles, you could be doing all sorts of things that aren't related to dashboards/reporting. The data you work with is generally very interesting, but the pay is usually shitty.",50_61S-----165_97E,2025-06-20 16:11:53,2,dataengineering,t3_1lg6b82,False,
myutwp3,Mines catch fraud & alert it to the fraud department.,umognog,2025-06-20 18:28:09,2,dataengineering,t3_1lg6b82,False,
mytteq4,"For me it has been, “cloud application vendor feeding client data to clients,” because they have legal requirements to retain their data, want to do their own analysis, or just don’t want to be locked in a platform if the relationship goes south.",codykonior,2025-06-20 15:33:42,1,dataengineering,t3_1lg6b82,False,
mytty50,My company sells financial data and tools to analyze it as well as loading our clients data directly to our cloud so they can use the tools we built. We have one Data Engineer and one analyst who build internal dashboards and 30+ engineers and analysts working on the pipelines that move data in from and out to our customers.,TyWebb11105,2025-06-20 15:36:17,1,dataengineering,t3_1lg6b82,False,
mzat89n,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 09:19:44,1,dataengineering,t3_1lic170,False,moderator
mzauq0d,"Have a look into terraform and Azure. Those are you fairly often in DE projects in Germany.If you’re new in the field, I would recommend a broad basis more than being a specialist in a certain technology.",johnklotter,2025-06-23 09:34:37,6,dataengineering,t3_1lic170,False,
mzaztbd,"Just in case if this information helps you, In my current project, we use Snowflake, Airflow, Spark, Pyspark, Cloudwatch, Streamsets, AWS Tech Stack ( SNS, EC2, Lambda, EMR, Athena etc )",OkMouse303,2025-06-23 10:22:31,4,dataengineering,t3_1lic170,False,
mzb5jdr,"Any orchestration tool. Airflow, dagster, prefect etc etc. Dabble into distributed systems(spark) and kafka",kk_858,2025-06-23 11:10:32,3,dataengineering,t3_1lic170,False,
mzat88n,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 09:19:44,1,dataengineering,t3_1lic170,False,moderator
mzavk9i,"I did own projects with terraform and GCP. Yes, Azure is high demand here but they looking mostly people with experience. Thank you for your advice.",After_Holiday_4809,2025-06-23 09:42:52,1,dataengineering,t1_mzauq0d,True,
myrlzvr,"First of all, what you're describing is a classical OLTP use case, but Snowflake is an OLAP database. First and foremost, the issue with using Snowflake is the response time. With 100k+ requests, you're probably looking for sub-second response times. However, even with lots of optimization, this isn't what Snowflake excels at.Regarding pricing: As you pay mainly for storage and warehouse uptime, there are no specific caveats. Regarding scaling, it would possibly make more sense to scale-out (more XS warehouses to serve requests in parallel). What we did is performing the transformations in Snowflake and export a denormalized table, and imported it into a Postgres. Which achieves <100 ms response times for 50+ attributes per record paginated with 100 records out of 1.5b records even on a very small configuration. However, within the last 12 months, a couple of things changed:1. Introduction of hybrid tables allowing Snowflake to perform better on OLTP tasks - we haven't tried this out yet as we are on Azure, and hybrid tables are on GA only on AWS2. Snowflake's recent aquisition of Crunchy Data and the announcement of Snowflake Postgres - we are waiting for news hereEDIT: Spelling & grammarEDIT 2: corrected Crunchy Data",Efxod,2025-06-20 06:06:02,61,dataengineering,t3_1lfw8wc,False,
mysn6vq,"You could check out Snowflake Hybrid Tables? My team is exploring them for very similar use case where and API/Application needs to preform reads up to 1000 per sec. Snowflake rep 3 weeks ago told us hybrid tables should be good up to 10,000 reads per sec. Just keep in mind you have to apply indexes/constraints as they are not Standard Tables in Snowflake. They also should only need to run on an X-Small and you can still have the warehouse auto suspend after a couple seconds if worried about cost and want it to sit idle.",brettg782,2025-06-20 11:42:11,4,dataengineering,t3_1lfw8wc,False,
mz46hps,"Yes i have done it and it’s really expensive and slow. Use something suitable for real time analytics like Clickhouse, etc.",higeorge13,2025-06-22 07:04:51,2,dataengineering,t3_1lfw8wc,False,
myszccg,bad idea. wildly inefficient given the way snowflake works. you need to project the snowflake data into an OLTP store.yes it will be very slow and very expensive.,geeeffwhy,2025-06-20 12:59:30,4,dataengineering,t3_1lfw8wc,False,
myt44hl,What are the reasons you are exploring Snowflake for use in API backend?,Nekobul,2025-06-20 13:26:46,1,dataengineering,t3_1lfw8wc,False,
myvnvbu,"How often does the data change?What is the nature of the API?What would happen if you took a streaming approach, and produce the query results on data change, rather than on query?",Competitive_Ring82,2025-06-20 20:57:07,1,dataengineering,t3_1lfw8wc,False,
myspmnc,You’re confusing olap and oltp. You could do this on Databricks with their new lakebase feature.,TripleBogeyBandit,2025-06-20 11:58:51,1,dataengineering,t3_1lfw8wc,False,
myskqfz,Im genuinely curious. Why did you think this was a question that you should ask? Did no one in your team pass a system design interview? This question is outrageous even from a beginner grad but you guys are working in an org and can't figure out when not to use Snowflake and need a regular relational database?,mamaBiskothu,2025-06-20 11:24:21,-14,dataengineering,t3_1lfw8wc,False,
mys2ule,"Actually yes. I would highly recommend clickhouse as a more hybrid DWH, and they actually are better bang for your buck.",CrowdGoesWildWoooo,2025-06-20 08:45:57,-4,dataengineering,t3_1lfw8wc,False,
myro0ub,"This. OP, if you need an OLTP database just opt for some cloud SQL service by any provider. Snowflake is better suited as a data warehouse for analysis, not for production operations.",FlowOfAir,2025-06-20 06:24:09,14,dataengineering,t1_myrlzvr,False,
mz9wc4s,Interestingly dlt is the one that is natively programmatic (pip installable library) and code-based which makes it the most friendly for LLMs as they are great for code generationPlus the fact that it highly flexible so you can easily cover everything,blef__,2025-06-23 04:18:37,20,dataengineering,t3_1li79bs,False,
mz9x7a3,"If you want a hands-off, fully managed service, Fivetran is your safest bet; Airbyte is great if you like open-source and want to build custom connectors yourself; and DLT (DltHub) is ideal when you need Pythonic, code-first pipelines with tight control.LLMs won’t kill these tools; instead, they’ll help you auto-generate connectors and improve schema mapping, with open platforms like Airbyte seeing the fastest AI-powered updates.",GreenMobile6323,2025-06-23 04:25:10,6,dataengineering,t3_1li79bs,False,
mzacklw,The tools would be getting mcps where i can connect an agent to which will make the connections for me based on my requirements,janus2527,2025-06-23 06:35:09,2,dataengineering,t3_1li79bs,False,
mzbamf7,Stay away from Stitch,Cpt_Jauche,2025-06-23 11:49:05,2,dataengineering,t3_1li79bs,False,
mzcjki1,"Which to recommend really depends on your budget and appetite to build/manage connectors. We use Fivetran (which is more costly from a licensing perspective) but we have a small team and rather use development cycles on other things than building connectors. RE: LLM's perhaps one day they will affect these types of vendors, but not anytime soon.",GreyHairedDWGuy,2025-06-23 15:53:32,2,dataengineering,t3_1li79bs,False,
mzabvsh,"It definitely depends on the use case: Fivetran: Best for plug-and-play, fully managed pipelines. Great for teams that want reliability and low maintenance. Airbyte: Good middle ground. Open-source, decent UI, and growing connector library. You can self-host or go cloud. DLT (DltHub): More dev-focused. Great if you want full control in code (Python-native), lightweight pipelines and open-source flexibility.As for LLMs, tools that integrate LLMs to auto-build or fix connectors will have a huge edge. Airbyte already started exploring this. I don’t think these tools will disappear.",eb0373284,2025-06-23 06:28:37,2,dataengineering,t3_1li79bs,False,
mzesluc,"[https://slingdata.io](https://slingdata.io) is YAML driven, so it works great with LLMs. There is also a python lib.",mrocral,2025-06-23 22:20:22,1,dataengineering,t3_1li79bs,False,
mzf49ai,"Don't buy ingestion because they tend to charge by data volume. So the bigger your lake gets the more you pay. We went the AWS route with datasyc, DMS and Glue. It's not hard to script around these and they scalable. Also used dlthub for a poc and it was pretty nice, but was only running it on a laptop so not sure how/if it scales. Nifi is in Snowflake now if you are using that, which may be an option, also available as byoc. LLMs would be a waste of money for ingestion and also you would be worried about hallucination and data quality. Ingestion is a deterministic process so should be scripted or use a tool.",Gators1992,2025-06-23 23:24:00,1,dataengineering,t3_1li79bs,False,
mz9yhq6,Databricks DLT is not the same als DLThub. Fivetran is crazy expensive imho.Edit: you rewrote your comment regarding dlt.,Zer0designs,2025-06-23 04:35:09,5,dataengineering,t1_mz9x7a3,False,
mzciwl5,agree. We looked at Stich some time ago. It seemed to be an afterthought to the vendor and they had odd pricing rules (which is saying a lot when considering Fivetran).,GreyHairedDWGuy,2025-06-23 15:50:25,1,dataengineering,t1_mzbamf7,False,
my9pbde,"Call me blunt - ultimately, we all exist on a bell curve. The reason I'm so blunt is that I was you. As a Chemist, I was probably below average. I'd struggle and over time became less skilled, experienced, and happy whilst people younger than me were flying through on what felt like passion alone.When I moved into DE, I went the opposite way. From not knowing to knowing. From lost to making intuitive decisions. From unhappy to happy. >I'd like to switch to something else but the pay has been too good it's hard to break free of the golden handcuffs.And this is the true curse of working in IT. The question to ask yourself is how much would you pay to be happy every day?Very hard to quantify if you have never been happy before, but I bet if you took a pay cut which didn't impact your essential spending in exchange for not feeling how you feel, you'd take it. The main problem is the mental block of taking a ""pay cut"". You aren't taking a pay cut. You are paying for happiness.",MikeDoesEverything,2025-06-17 14:30:16,25,dataengineering,t3_1ldnhzm,False,
my9mn9j,"Every environment can be different, maybe consider changing company.",Wingedchestnut,2025-06-17 14:17:09,6,dataengineering,t3_1ldnhzm,False,
mya5yly,Then your true work is you. It’s not the pipeline but you put the work on yourself to optimize your own speed go into depths and you’ll want to quantify your success on how much you improved each day rather than comparing or competing against someone else. Easier said than done. But keep putting in the work and once you’ve done that forget the rest. And enjoy whatever you are doing in that moment . Like once you’ve put the work in don’t think about it on ur vacation but make sure you do put your full focus while you are at work cause then you know u did your part. Essentially work on optimizing yourself go to the root cause of why you are lagging and put in the hard work to improve on that.. you’ll see how far you’ve come maybe 2 years from now. It will be worth sticking to it if you don’t have anything else to do for now. Cause all your doing is thinking is there something else you can do and splitting your focus there. If there truly is go for it but if not swallow the bitter pill and keep working hard at it . All the best,kkkrrrzzz,2025-06-17 15:48:52,3,dataengineering,t3_1ldnhzm,False,
my9m99c,Get therapy you are fighting an internal battle where your body is saying no to certain things and you need to invest the time to find out what it is and work from there.,heaven00,2025-06-17 14:15:13,5,dataengineering,t3_1ldnhzm,False,
mye6gk6,"I've been fighting with this too, however I do truly enjoy the puzzle solving and all those little self discoveries I make when things work, and have an overall interest in computers and using technology. I had a moment where I realized this stuff at work in DE are things I'll never actually care about in my personal life and interests, and this made me stop trying to rationalize some perfect balance where I could see myself being this craftsman in tech person like the jokes of the chad CS grad intern who could code up an OS in an afternoon as a hobby. I ask ""is this good? Are we happy with this?"" and if they yes, I did a good job, if not, I ask, ""oh sorry, what's missing/needed here to get this over the line"" and instead of all that time panicking, I just go back to work and have a sticky notes app because my memory is too also terrible.",ShroomBear,2025-06-18 04:24:26,2,dataengineering,t3_1ldnhzm,False,
mybuh2b,"How long have you been at this? As you progress in your career you run into an issue enough times (or versions of it) that you have a sense of what a solution might be without a night of tinkering. It may seem like your colleagues retain info efficiently, but maybe they’ve seen some version of this many times before that.I’ve changed titles and teams a lot over the last decade. There are always periods where I need to use extra/free time to get my balance again. Some paths lead to more work. Systems can be designed in a way that frees up your time and energy. I’ve learned to steer my stakeholders and analysts away from things I know will burn my time later for little value. What is your career outlook here? Some people want to spend their nights tinkering and learning. Others want to just delegate and manage.",the-strange-ninja,2025-06-17 20:30:41,1,dataengineering,t3_1ldnhzm,False,
myj6ei8,"If your body is saying no, then it’s saying no. I felt exactly the same, luckily managed to join a different business doing DE in a different environment and it was 10x better. I would suggest changing company before changing field, but everyone is different.",ratesofchange,2025-06-18 22:33:17,1,dataengineering,t3_1ldnhzm,False,
myf6121,Last sentence is golden,RatOnTheLoose,2025-06-18 09:50:15,1,dataengineering,t1_my9pbde,False,
mz6cazn,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-22 16:28:51,1,dataengineering,t3_1lhs0zq,False,moderator
mz6m385,"Imho, now is no longer the time to get into data engineering for non-IT people. The job market is the worst it has been in at least 2 decades, and not sure it will ever recover.",DotRevolutionary6610,2025-06-22 17:18:01,18,dataengineering,t3_1lhs0zq,False,
mz6d3z7,"i think data analyst is easy transition, she can use her experience in handling data, data engineering might has a steeper learning curve for her, but for Analyst, I think given her experience, SQL should be easy for her.",itsawesomedude,2025-06-22 16:33:02,35,dataengineering,t3_1lhs0zq,False,
mz7p1e6,why not qa in software? i would imagine there is some overlap?,seanv507,2025-06-22 20:36:00,4,dataengineering,t3_1lhs0zq,False,
mz74bg7,"Agree with another poster, look at the job market before deciding on this transition into DE. It is similar to SWE and corporations buzzing 'AI' isn't going to help either; you work at MSFT, what do you think?Also, nowadays, they want someone who knows DE, SWE, DevOps, etc for a single DE role, I know you want to make more money asap, but be sure that she's ready to learn all that and work on it day-to-day; it's one thing to do it as a secondary role and another to do it as a primary role.Will she enjoy it or will it add more stress to her life?",RDTIZFUN,2025-06-22 18:48:33,3,dataengineering,t3_1lhs0zq,False,
mz6jo4q,"It's possible, I've basically followed this career path.Was senior level in the corporate quality assurance laboratory of a manufacturing based company. Laboratory data of course is used a lot for decision making by corporate quality. When Power BI became the tool of choice I started building a lot of the reports/dashboards because I had a position of being comfortable with BI development and laboratory data. Eventually became the go to person for quality assurance data on the front end side. Then when a job opened up in data engineering, they offered it to me. I am now a senior data engineer almost four years later.It's basically using a de facto data analysis position as the transitioning point.",Plus-Opportunity-538,2025-06-22 17:06:15,2,dataengineering,t3_1lhs0zq,False,
mzcequp,Does your wife already know python and SQL? Now is a really bad time for entry level data jobs. Really bad.,Ralwus,2025-06-23 15:30:58,2,dataengineering,t3_1lhs0zq,False,
mz82jyh,It’s a tough market right now. There’s a lot of pressure on labor demand from AI and labor supply remains high due to H1B visas,SplitAccomplished980,2025-06-22 21:46:44,2,dataengineering,t3_1lhs0zq,False,
mzakasw,"""Too old""??? She's 29!",MathmoKiwi,2025-06-23 07:49:57,1,dataengineering,t3_1lhs0zq,False,
myw4dta,That's a fairly normal work week where I'm from. I don't know why you call this 'relaxed' though.,Ploasd,2025-06-20 22:26:06,53,dataengineering,t3_1lggukk,False,
myw4o60,"depends on if you're getting your job done. if you are, who cares when you do it. if it takes you longer, you work more than them. if you finish or are ahead of schedule and they don't let you leave early, polish your resumeedit: just saw you are an intern. you put in the hours at that stage. especially if you want them to hire you on full time. but hopefully they are mentoring you enough",fleetmack,2025-06-20 22:27:45,22,dataengineering,t3_1lggukk,False,
myw73h2,"Don’t worry about other people, just worry about yourself.",BougieHole,2025-06-20 22:41:45,7,dataengineering,t3_1lggukk,False,
myw8vvs,"Do they arrive earlier than you? Do they work weekends? Do they deal with being on-call if a server/pipeline/report breaks at 2am? Do they monitor things from their phone at dinner? Are there things not getting done or are they running a tight ship and get done by 3?It could also be asked if you take a lunch, or if you are only working 7 hours of the 8 you are in office.I'm not sure if I am reading your tone right, but I've seen more than one intern show up with some preconceived notions. As an intern, I'll let you know a few things for your career:1. You don't always see the effort others put in, and people who go down the road of attacking their superiors are almost always wrong, and usually get blacklisted or fired, so keep your head down and focus on your own work. Again, not sure if this is your tone, but the advice stands in case it's ever relevant.2. Get the idea of ""X hours worked"" out of your head now while you're hourly (Even though that is your whole world as an intern). You are all there to perform a service -- if that service is performed in 30 hours per week, then 10 hours is spent doing useless busywork to appear productive. But you'll have plenty of times when there's an emergency deadline and you're pulling 60 hours, that's what ""exempt"" (salary) means. You say you see them leave early, but did you see them crash on the couch in the lobby during the audit last year?3. There are no gold stars, rewards, raises, or bonuses for working harder/longer than contractually obligated. Especially at a company of 3,700 employees. And even more especially as a DE, your contributions will go with little more than a ""Thanks!"" if not completely unnoticed. The only time you will be ""seen"" is when something goes *wrong*, like a plumber or electrician.TLDR: Keep your head down, do your job, and hope that your future in DE is as ""relaxed"" as you seem to think it might be.",MakeoutPoint,2025-06-20 22:51:58,8,dataengineering,t3_1lggukk,False,
myw54oj,50/50 I think. You’re at a bigger company so processes are established. You’re not necessarily building net new procedures you’re just going through processes that already exist. Things move slower the bigger you get. It sounds like this is a team with well established scope so the work gets planned properly. People later in their career dream about a gig like this.,boboshoes,2025-06-20 22:30:22,11,dataengineering,t3_1lggukk,False,
mywn5oc,Just focus on getting your work done. Who cares who else does what? You’re not on the clock anyway.,BatCommercial7523,2025-06-21 00:14:56,4,dataengineering,t3_1lggukk,False,
myx7jsd,"37.6 hours in Australia. If you do any work outside of hours then take it as time in lieu next week, too.40 can get fucked :winking_face:",codykonior,2025-06-21 02:22:31,3,dataengineering,t3_1lggukk,False,
myy51cn,"I work fully remote with no on call, do 9:30-5. Basically never do overtime. Usually leave earlier on Fridays. Depends what you’re maintaining I guess. But it’s pretty chill for me.",likes_rusty_spoons,2025-06-21 06:43:57,2,dataengineering,t3_1lggukk,False,
myzjbj2,"Leaving before 4 is quite unusual. I aim for 9-5, but more typically leave around 6. When things are busy I work nights and sometimes will make the case to WFH so I can get more done without the distraction of people putting me in meetings.",bingbongbangchang,2025-06-21 13:57:21,2,dataengineering,t3_1lggukk,False,
myw9pgs,We do on-call so it's a bit different. Whoever doesn't do on-call on that day has their workload dictated by downstream clients.,redditthrowaway0315,2025-06-20 22:56:39,1,dataengineering,t3_1lggukk,False,
mym1y6f,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-19 11:13:25,1,dataengineering,t3_1lf85o6,False,moderator
mym9sf7,"Databricks has just announced a free tier:https://www.databricks.com/learn/free-editionNot sure how much compute etc you'll get from the serverless, but probably enough to get some experience with the platform and GUI",TheEternalTom,2025-06-19 12:09:13,23,dataengineering,t3_1lf85o6,False,
myma11y,"IIRC BigQuery has a generous free tier forever (1TB scan/month or something), but thats only one tranche of GCS - which is the least popular of the big 3 so ymmv",lozinge,2025-06-19 12:10:46,11,dataengineering,t3_1lf85o6,False,
mymc31g,"Hey, I switched from BI to data engineering too. When they ask about Azure, they usually mean Data Factory but sometimes also Synapse or Databricks. Azure and AWS are the most common, but GCP is decent too (BigQuery, Dataflow). All three have free tiers so you can build small projects without paying muchIf most jobs you see mention Azure, start there. AWS is the most popular overall. I’d also check out prepare.sh for interview prep - it’s helped me a ton and I’ve even contributed to it. Good luck with the move",Dependent_Gur1387,2025-06-19 12:23:58,4,dataengineering,t3_1lf85o6,False,
mym80kf,"AWS has a free tier for some of its services,  not sure if redshift is included but you should be able to do some small scale DE for free or very cheap  with that.Just be careful you shut everything down when you're done or you will spend money.",Bingo-heeler,2025-06-19 11:57:20,4,dataengineering,t3_1lf85o6,False,
myomb3b,"If you want experience with Fabric, here's a workaround. Fabric for some reason disabled Free Trials for personal emails. Here's a workaround to essentially run a free trial in Azure portal and you create a new business email lmao. [https://www.youtube.com/watch?v=6K4ADjkWjaY](https://www.youtube.com/watch?v=6K4ADjkWjaY)",Visual-Ad586,2025-06-19 19:28:11,3,dataengineering,t3_1lf85o6,False,
mymvom3,"> I was asked whether I know ""Azure"" (which I assume refers to Azure Data Factory?)Could be, but you have many services around ADF that can be used in data engineering projects, like Stream analytics, Analysis Services, Event Hubs, Azure SQL servers and other relational DBs, Fabric, etc.> I am considering learning it but I do not know if it's free to use for projects with a small amount of dataHere is a link with services in Azure that are free for 12 months, and free forever.[https://azure.microsoft.com/en-us/pricing/free-services](https://azure.microsoft.com/en-us/pricing/free-services)If you combine those services, and splash just 10-20$ on top, you can create and do all kinds of broad/advanced projects. Hell you can handle quite a lot of data in a databricks job executed from ADF that runs for 10 minutes each night, for next to no cost.",Gnaskefar,2025-06-19 14:15:11,3,dataengineering,t3_1lf85o6,False,
mymrpty,"Most cloud providers offer 1 month free trial. Azure , AWS.  While gcp offers 3 months limited credit.",Odd_Strength_9566,2025-06-19 13:54:34,2,dataengineering,t3_1lf85o6,False,
mymzhnq,"AWS has a free tier, and depending on what you're doing even non-free can be pretty cheap. My personal AWS bill is <$5 per month and if it's cheaper than a single McDonald's hamburger I can fit it into the budget.",Thadrea,2025-06-19 14:34:03,2,dataengineering,t3_1lf85o6,False,
myrsxom,"You can try Baselight: https://baselight.aiThe main goal is not to build data pipelines, but you can easily upload any type of data and then build queries correlating it with a huge amount of public data already available in the platform (275K tables so far). We’ll release soon an Apache Iceberg API which is one of the most trending technologies in data engineering.",Minute-Elk-1310,2025-06-20 07:09:17,2,dataengineering,t3_1lf85o6,False,
myjuyhx,"For viewing parquet file, I am using nushell with parquet extensions. Any data wrangler I don't do for any file format on CLI anyway.",robberviet,2025-06-19 00:52:09,1,dataengineering,t3_1lekoga,False,
mylo1z3,"Nice, I totally forgot nushell has parquet support, thanks for the info!",Vitruves,2025-06-19 09:08:37,1,dataengineering,t1_myjuyhx,True,
myc0y3l,"Typically MLE jobs pay more than DE, so if that’s true where you work, idk if I would make the change.",Mr-Bovine_Joni,2025-06-17 21:01:11,18,dataengineering,t3_1ldykb6,False,
mycfp8k,definitely not. Especially the way tech is changing. I am a great data engineer … however I feel the bar is very low in terms of software engineering principles. Especially as the old heads (bi developers) are phased out. If I could out money on it … data engineer will eventually just become Machine learning engineer,roastmecerebrally,2025-06-17 22:16:04,7,dataengineering,t3_1ldykb6,False,
mycji4e,">If I could out money on it … data engineer will eventually just become Machine learning engineerYeah I can see that happening. I've already seen ""Data and ML Engineer"" roles that tries to combine both. Or have MLOps responsibilities as a ""highly preferred"" qualification.",Illustrious-Pound266,2025-06-17 22:36:28,5,dataengineering,t1_mycfp8k,True,
my7ug7u,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 05:54:07,1,dataengineering,t3_1ldfik5,False,moderator
my80ch7,If you don’t feel a particular pull either way and just want that paycheck I’d lean towards devops. It’s pretty specialized so there’s less competition but every large enough company needs devops so there’s demand. Devops also tends to pay a little better than data engineering but not by much.,JaceBearelen,2025-06-17 06:48:49,11,dataengineering,t3_1ldfik5,False,
my8jckn,">Anyone who’s made a pivot after years of feeling stuck — how did you decide? Similar to yourself, although I came from a different field. For me, it was pursuing what I found interesting. When I broke into Data Engineering, Data Science was all the rage with job opportunities and salary. I found DS boring. Went into DE, never looked back since.>What worked for you?It's cheesy, although it's really about going after what you want to do and instead of looking back and cursing yourself for ""wasting time"", it's more about focussing on the future. Far too easy to feed into negativity.>Should I go for data role and prepare for it or continue in automation and I don’t know if I will be able to grow that much in QA?Only you can answer this. It's entirely in your hands to make this choice and I wouldn't let anybody tell you otherwise.",MikeDoesEverything,2025-06-17 09:57:29,4,dataengineering,t3_1ldfik5,False,
my7xgev,"\>  I want a high-paying job and strong long-term growthNoticed there’s no mention of your happiness in there. Guess what happens when you go all in and none of it works out.Also, does the new role come with More money?",chock-a-block,2025-06-17 06:21:41,7,dataengineering,t3_1ldfik5,False,
my8q6ff,"The past 10 years was likely not time wasted. You've built up skills that will layer nicely onto the path you choose next. We're all basically software engineers at the end of the day, with a specialization in data or automation. Choose something you'll enjoy doing for the next 30 years. Keep learning and the money will follow.",convalytics,2025-06-17 10:57:07,3,dataengineering,t3_1ldfik5,False,
my7ug6x,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 05:54:06,1,dataengineering,t3_1ldfik5,False,moderator
my8g795,"Cool man, so a big thing is of course which one is more interesting to you, but you definitely also need to take into account the opportunities for either proffession. In the absolute best scenario you have a preference to data engineering or that direction and you're able to move in a data type of position internally, it would make the move tremendously easier and moving in the future in general, so I would really explore that option thoroughly. So yeah spend those hours, and spend some more in weekend for a good while, with AI you can create projects and learn things very fast now, that's a must. However just know that getting an actual position in todays age will be the hardest thing, so priorities everything to that.Also don't worry about feeling like you wasted the last 10 years, I honestly think this is a lot of people if not even the majority people.",mean_king17,2025-06-17 09:27:13,1,dataengineering,t3_1ldfik5,False,
mybgyu2,"Honestly, you should talk about this to youth, to some fresh grads or current CS students. It’s not much, but sometimes it might help with inspiration. It’s always easier to set your mind on something when you get a real feeling of other people being in somewhat similar situations around you, which is for you – pursuing a new path in life.",Specific-Sandwich627,2025-06-17 19:26:46,1,dataengineering,t3_1ldfik5,False,
mylto3j,"Not upgrading to latest versions of software is generally a sign of a terrible engineering culture. Doubly so if you're using versions that are already EOL. The next LTS (8.0) has already been available for 7 years. It being a lot of work is not an excuse. Stability is not an excuse either. At best you run into lack of features or incompatibility issues like you do. At worst you're exposing your systems to vulnerabilities that aren't patched.To answer your questions:1. I sure hope not2. Absolutely3. Even if there aren't, it's only a matter of time until there areI would not trust that third-party software company with any of my business.",StereoZombie,2025-06-19 10:02:51,15,dataengineering,t3_1lf6ger,False,
mymphch,"You mention there’s a POS system. It would not surprise me there’s a dependency on what the POS supports regarding the MySQL version. And, yes, a completely EOL database would be normal. Windows 95 still runs a TON of very expensive things.If not, that, then, they have a bunch of code they have been deploying everywhere, for too many years, and no one to do the porting work. And, let be clear about this, software engineering is a cost center, not a profit center in most orgs. And the move from 5.x to 8.x was a big one.Finally, it will work. Don’t connect that machine to the Internet. And not having common table expressions sucks. But it will work.",chock-a-block,2025-06-19 13:42:20,3,dataengineering,t3_1lf6ger,False,
myngpd9,"if you're gonna upgrade, go to mariadbhas more features, and we found it to be substantially faster than mysql",saaggy_peneer,2025-06-19 15:57:20,1,dataengineering,t3_1lf6ger,False,
myxw53e,One of my old companies took 2 years to move from 5.7 to 8.0. They had to do it in phases because legacy code kept breaking due to slight differences in config and functions.Using sql without window functions or CTEs must be a pain in the ass!,SuperTangelo1898,2025-06-21 05:22:47,1,dataengineering,t3_1lf6ger,False,
mym0diw,"Not ok, but it's fine to not updating it.",robberviet,2025-06-19 11:01:10,-4,dataengineering,t3_1lf6ger,False,
mymxhan,Cost savings. There’s a proprietary bit of software in whatever was installed and no one wants to pay for the current license.,chock-a-block,2025-06-19 14:24:03,3,dataengineering,t1_mylto3j,False,
myrcwb4,Thanks for your reply. I've brought it up to management (non-tech people) before but it just got put on the back burner. Will need to educate myself a little more and put together a proposal about why we need to upgrade.,Which-External6344,2025-06-20 04:51:27,1,dataengineering,t1_mylto3j,True,
myre4fu,"I think you nailed it when you said it's a cost center not a profit center. That's the way management is likely seeing it and since times are already pretty lean (well, they're always lean in the restaurant industry) it will be hard for them to justify spending money on an upgrade.Not having the CTEs and window functions sucks for a lot of reporting stuff. I end up having to use sub-query's a lot and union all on occasion, but I make it work nonetheless.",Which-External6344,2025-06-20 05:01:05,2,dataengineering,t1_mymphch,True,
mymthwu,Probably running old magento for example which requires X version of MySQL,Afraid-Donke420,2025-06-19 14:04:03,1,dataengineering,t1_mymphch,False,
myqpopq,Switched to Airbyte a few months ago. It handled schema drift on our Stripe API and Postgres tables way better than anything we tried before.,Electronic_Ad_737,2025-06-20 02:16:12,18,dataengineering,t3_1lf5tkh,False,
myov6cf,thought dagster was dumb reddit hype but its actually really solid. maybe my favorite orchestrator rn. also really wanted to like mage but it tries to be too much. i appreciate the swiss army approach but too much trying to appeal to newer data engineers and a greedy marketing strategy,shittyfuckdick,2025-06-19 20:11:31,5,dataengineering,t3_1lf5tkh,False,
myqarf8,"Use Airbyte, more reliable and good community support. Self managed enterprise product is getting good traction these days.",tansarkar8965,2025-06-20 00:48:48,6,dataengineering,t3_1lf5tkh,False,
myqm2h8,"Sounds like you need two different tools, an orchestrator to manage the syncing/batch scheduling and some sort of ingestion tool to manage the various formats. If you want open source then:Orchestrator:Dagster, airflow, and prefect are the top 3Ingestion:Airbyte has an OSS version, not sure about fivetran but it seems popular.For the flaky APIs it may also just be best to use python + the tenacity library to extract the data and load it into wherever your raw/staging data lives",Routine-Ad-1812,2025-06-20 01:54:56,5,dataengineering,t3_1lf5tkh,False,
myp2vfc,Benthos (bento),_somedude,2025-06-19 20:48:22,2,dataengineering,t3_1lf5tkh,False,
mys4ktk,"I was pulling from Postgres, Salesforce, and a few custom APIs. It got messy quickly. Airbyte had stable connectors for all of them and actually retried intelligently on rate-limited sources. Sync setup was quick and we haven't missed a load window in weeks.",CrossyAtom46,2025-06-20 09:02:39,1,dataengineering,t3_1lf5tkh,False,
mysdsum,"Airbyte's open-source setup let us fully inspect what was happening when syncs failed. With their AI diagnostics, we had one pipeline fix itself automatically after a schema mismatch. That kind of hands-off recovery is rare in open ETL tools.",No-Arugula-1937,2025-06-20 10:29:03,1,dataengineering,t3_1lf5tkh,False,
mz02d4s,Microsoft Fabric does a fabulous work of that. Pipelines and orchestration along with Onelake. Notebooks for transformation.,Tophaholic,2025-06-21 15:41:41,1,dataengineering,t3_1lf5tkh,False,
myqh1qx,"Python and windows task scheduler gets the job done, for free.",crytomaniac2000,2025-06-20 01:25:48,1,dataengineering,t3_1lf5tkh,False,
myo9l6m,AirflowDagster,madness_of_the_order,2025-06-19 18:20:27,2,dataengineering,t3_1lf5tkh,False,
mylg8wn,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-19 07:51:40,1,dataengineering,t3_1lf528a,False,moderator
mylhn2y,Google's machine learning crash course for the basicsML Zoomcamp and MLOps Zoomcamp for more specific technical bits,mailed,2025-06-19 08:05:00,22,dataengineering,t3_1lf528a,False,
mylkls6,The deep-learning specialization from Andrew NG over at coursera is quite all-right.,Lol_o_storm,2025-06-19 08:34:18,5,dataengineering,t3_1lf528a,False,
mymhnpo,Andrew Ng's machine learning course on Coursera is a good first course,Illustrious-Pound266,2025-06-19 12:57:59,1,dataengineering,t3_1lf528a,False,
myooewh,I think you know can have ISL in python (https://www.statlearning.com).,defuneste,2025-06-19 19:38:42,1,dataengineering,t3_1lf528a,False,
mypd1u7,"The whole AI hype is running through people's blood and veins these days, in most of our multi team meetings, they always bring up AI stuff. To some extent, management is encouraging people to study AI related courses on platforms like LinkedIn.",69odysseus,2025-06-19 21:39:18,1,dataengineering,t3_1lf528a,False,
myrweq7,"Thanks guys. I’m under no illusion as to the actual uses of it in our current situation, But I’m never one to look a gift horse in the mouth when it comes to a training budget. Its probably more an intermediate level type course we’re looking for. I’ll take a look at the above and see what fits the bill!",Pleasant-Aardvark258,2025-06-20 07:42:41,1,dataengineering,t3_1lf528a,True,
mz749mt,Also consider AI governance eg https://iapp.org/certify/aigp/. And Mlops. Like a lot of new tech the biggest challenge is getting anything deployed (successfully/at all)Then you have more tools to lead these excited senior managers away from whatever the shiny new ball the sales people have told them will be the best thing ever $$$$ towards (probably smaller) deployments that are more effective and budget friendly.,Bodhisattva-Wannabe,2025-06-22 18:48:17,1,dataengineering,t3_1lf528a,False,
mypinnd,Learn everything but modeling. Sounds crazy but models are just endpoints. Learning how machine learning datasets are built will help you understand there is never a single dataset to answer all questions and long vs wide. Of course push some data into a few different types of models to understand the basics.,TowerOutrageous5939,2025-06-19 22:08:36,1,dataengineering,t3_1lf528a,False,
mylq7gu,"i am new to ML and AI, if i have to start from basic. what are the pre requisite to start google ML crash course. like what math I should know, what python libraries i should know?",mdayunus,2025-06-19 09:29:59,0,dataengineering,t1_mylhn2y,False,
myese81,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-18 07:35:20,1,dataengineering,t3_1leb32q,False,moderator
myfburg,"While it’s not specifically about PySpark, I highly recommend reading Andy Grove’s book, ""How Query Engines Work."" The online version is free, concise (about 100 pages), and offers a solid understanding of how Spark operates under the hood. The book guides you through ""writing a simplified Spark from scratch in pure Kotlin."" Don’t worry about Kotlin—it’s an expressive and easy-to-read language, especially with the book’s clear and comprehensive explanations.",ssinchenko,2025-06-18 10:41:24,17,dataengineering,t3_1leb32q,False,
myfua30,"IMO craftsmanship in writing PySpark code is more about organization, the logical flow of your transformations, and just knowing your data (e.g. how do you structure your joins, do you use built-in functions or expressions, etc.). To help folks I work with upskill quickly in PySpark, I created an opinionated tutorial focused on the above. You probably already have experience with most of the concepts given your background, but there may be some points that can serve as a helpful reference. Check out https://SparkMadeEasy.com",zchtsk,2025-06-18 12:46:49,7,dataengineering,t3_1leb32q,False,
mz9snep,"Checkout this YouTube playlist, you will not find anything better than this. Even better than paid courses. Thank me later.https://www.youtube.com/playlist?list=PL2IsFZBGM_IHCl9zhRVC1EXTomkEp_1zm",Complex_Revolution67,2025-06-23 03:51:45,1,dataengineering,t3_1leb32q,False,
myjadzn,love u,Comfortable_Page_869,2025-06-18 22:55:29,1,dataengineering,t1_myfburg,False,
myg4q9f,"I've checked the blog, that's really helpful, we need more content like this",HMZ_PBI,2025-06-18 13:45:06,5,dataengineering,t1_myfua30,True,
myjs8qh,Isn’t AQE and lazy evaluation going to solve a lot of logical flow of transformations?,DRUKSTOP,2025-06-19 00:35:57,2,dataengineering,t1_myfua30,False,
myjzjxr,Doesn't always work how you'd expect but I assume they're referring to readability and clarity of business logic,kaumaron,2025-06-19 01:19:40,3,dataengineering,t1_myjs8qh,False,
myk8vid,"^ Yup, exactly this. It's a mix of writing performant code while maintaining readability and clarity.",zchtsk,2025-06-19 02:15:16,3,dataengineering,t1_myjzjxr,False,
mzc60eo,"For OLAP, it’s perfectly normal to use s3 instead of a DB. I would recommend using iceberg instead of pure parquet, there are a number of performance enhancements you can get there over pure parquet.",ColdPorridge,2025-06-23 14:49:00,12,dataengineering,t3_1lii75d,False,
mzc7llr,"That's just datalake. Cover iceberg on it and boom, lakehouse.",robberviet,2025-06-23 14:56:40,10,dataengineering,t3_1lii75d,False,
mzc43hg,Yeah I mean it would be a janky setup if you were doing this for a real production pipeline. But if you’re just doing it for a personal project to test it out I don’t really see the harm. You’ll learn the limitations of it and get a good feel for why it does or doesn’t work,vanhendrix123,2025-06-23 14:39:38,7,dataengineering,t3_1lii75d,False,
mzc54sy,"It's funny having glue moved in with this jank. I'm sure glue is thinking ""hello? I'm right here.""",One-Salamander9685,2025-06-23 14:44:43,7,dataengineering,t3_1lii75d,False,
mzc5ha6,Can you avoid pulling all the data each time?,wannabe-DE,2025-06-23 14:46:24,1,dataengineering,t3_1lii75d,False,
mzemgiy,Dremio is coming to mind,No-Animal7710,2025-06-23 21:48:11,1,dataengineering,t3_1lii75d,False,
mzc6t6f,"Ok great, I have to research on Iceberg to learn more about it but thank you",scuffed12s,2025-06-23 14:52:52,2,dataengineering,t1_mzc60eo,True,
mzc79e7,"Nice, thanks",scuffed12s,2025-06-23 14:55:02,1,dataengineering,t1_mzc43hg,True,
mzc76i1,"Yeah lol, it’s not the best setup I can agree but I picked the different pieces so I can learn more about each service",scuffed12s,2025-06-23 14:54:39,2,dataengineering,t1_mzc54sy,True,
mzc6n6v,"Yes, when making this I also wanted to learn more about ecr so I intentionally built the script for pulling the data as an image, then allowed for it to use the events json for the date range of the pull",scuffed12s,2025-06-23 14:52:04,1,dataengineering,t1_mzc5ha6,True,
myzl585,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-21 14:08:11,1,dataengineering,t3_1lgxeqt,False,moderator
mz0fch4,"I won’t speak to full stack engineering as I’ve never done front end and barely done crud application backends. Keep in mind that the same job title can have many different responsibilities across different companies. Also keep in mind that I know a lot more about DE than DA. In general:A Data analysts will do some of the following:use python, SQL, and/or Excel to answer adhoc questions about the business. Build dashboards using powerBI or tableau or an alternative. Assist or own data pipelines that prep data for dashboards using sql and or python.A Data engineer in general will do some of the following:Operate as a database administrator for a “data warehouse” to ensure the warehouse data is secure and queries are executing efficiently. Build data pipelines from data sources into the data warehouse. Be responsible for scheduling and deployment architecture for DAs pipelines. Productionalize pipelines that run against the data warehouse. This may be a dashboard pipeline, or could be a pipeline to generate an ML model, or a pipeline that translates data into a whole different data model that makes more sense for a group inside the company.",a_cute_tarantula,2025-06-21 16:50:24,9,dataengineering,t3_1lgxeqt,False,
myzolg7,"Full stack is and will be relevant for a long time.Data analyst jobs are losing relevancy.Data engineering is an advanced job.Keep in mind that these are all very different job positions and use very different technologies, so there's a huge chance you might not like one or two of them, or hell, none of them. Don't be a ""code monkey"" (look it up) and choose ONE specialisation. Even data engineers have a ton of sub branches to specialise in. It gets super specific.",autophaggy,2025-06-21 14:27:44,3,dataengineering,t3_1lgxeqt,False,
mz1m6pp,Haven't done full stack development but have done some data engineering and data analyst work. Data engineering is doing more data integration with some data visualization while a data analyst does more data visualization with some querying. Data engineering is much more difficult in my opinion plus it has a wide scope than a data analyst.,shadow_moon45,2025-06-21 20:40:27,1,dataengineering,t3_1lgxeqt,False,
mz2vio5,"If you enjoy the coding part of the job, the relative amount of programming for these roles, in general, look likefull stack > data engineer > data analyst",komm0ner,2025-06-22 01:10:25,1,dataengineering,t3_1lgxeqt,False,
mz6u1ta,"This question is ***really*** weird so, I'm gonna go out on a limb. Choosing a career path is about building on what you already know and risk/reward.\- When you've already risk heavy (college time/$debt), investing in learning a career path like this is ***VERY*** risky. \- Also, job hunting as a recent grad is VERY rewarding. There are ***LOTS*** of low bar positions specifically made for new grads. I suggest listing the skills/projects you've already have, asking chatGPT for job search ideas and apply like your whole college debt depends on it.Job hunting is really degrading but you completed your degree, so you can tough this out.",RustyEyeballs,2025-06-22 17:56:25,1,dataengineering,t3_1lgxeqt,False,
mz7ijum,Data engineer would be the better choice,jicks98,2025-06-22 20:02:29,1,dataengineering,t3_1lgxeqt,False,
mz2nnpk,Same experience as mine. Great explanation,Last0dyssey,2025-06-22 00:21:27,3,dataengineering,t1_mz0fch4,False,
mz0ktpv,"Thank you so much for taking the time to break that down. I really appreciate the detailed explanation!Since you mentioned you have more experience in DE could I ask:In terms of learning curve, do you think DE is harder for someone starting out?Any advice for someone trying to explore both paths before committing?Do you think a recent graduate should aim for DE as a first role, or would it be better to build experience elsewhere first?Again, I really appreciate your time and insight!",Parking_Lettuce8006,2025-06-21 17:18:38,1,dataengineering,t1_mz0fch4,True,
mz5brzh,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-22 13:11:01,1,dataengineering,t3_1lhniwc,False,moderator
mz5frg8,"I'm not too sure what you mean by enterprise-scale API management. 9 times out of 10 you are just doing little REST API calls. I suppose you could read up on different pagination methods and Auth types, e.g. OAuth.The biggest task in practice is reading through the completely hideous cryptic docs that the API provider has published.",New_Ad_4328,2025-06-22 13:35:39,19,dataengineering,t3_1lhniwc,False,
mz9fw1r,"The best way to learn APIs and API management is to first build an API.Flask is the framework/library your looking for. I would say read he Flask documentation and write the code yourself to understand how routes are designed/implemented. Then make a few different endpoints to flesh out your APIs functionality.REST as a framework makes wayy more sense when you understand how we use it to build an API. Understanding those fundamentals clears all the confusion of why a 3rd party API might or might not work. I know when a 3rd party API is good because well, I've built enough of my own APIs to know if others are good or not.Understanding Enterprise API management becomes an endeavor in software engineering and system design. Now we're talking full blown backend python engineer. Instead, I would build your first API, run it locally, design an ETL to hit that api, and boom your cooking.",storeboughtoaktree,2025-06-23 02:30:11,1,dataengineering,t3_1lhniwc,False,
mz5ihsv,Maybe this article from Airbyte can better summarize what I’m referring to:https://airbyte.com/data-engineering-resources/api-management,CorgiSideEye,2025-06-22 13:51:53,4,dataengineering,t1_mz5frg8,True,
mz67ccv,Reading some cryptic api docs as I scroll reddit. Too real... just give me an erd for each endpoint!,TheEternalTom,2025-06-22 16:03:10,1,dataengineering,t1_mz5frg8,False,
mzdgm1k,Why Flask? Why not Django or FastAPI?,Long_Hedgehog_9215,2025-06-23 18:25:50,1,dataengineering,t1_mz9fw1r,False,
mz6xbfs,"In my experience, you won't need to worry about this. You'll need to be able to know how to structure GET requests from third party APIs when you want to ingest data from it, but you won't be maintaining internal APIs, that's more SWE/Back end dev territory. Obviously roles vary though.",New_Ad_4328,2025-06-22 18:12:41,2,dataengineering,t1_mz5ihsv,False,
mz8qnwo,"You mean developing APIs? That's more backend engineering/SWE. To start try building a web server API and a simple app that runs on top of that (there are thousands of tutorials online, basically full stack development). Then think through what you need to scale up to millions of requests a day while keeping things low latency and optimizing for cost. How to document, share, handle authentication integration. You probably won't have to actually handle all of those things in a personal project -- but that's the sort of thing the article is talking about.",CoolmanWilkins,2025-06-23 00:04:27,2,dataengineering,t1_mz5ihsv,False,
mz9470u,Airbyte wrote this doesn't mean it's correct.,robberviet,2025-06-23 01:23:04,-1,dataengineering,t1_mz5ihsv,False,
myrtu5c,The IS administrator sits opposite of me in the office.,Demistr,2025-06-20 07:17:48,4,dataengineering,t3_1lfxkuw,False,
myskuvu,"This might be a bit generic, but I'm too have systems set up so that there is an easy/clear 'first mover' for changes.If I am sending data to some downstream, I have a custom table just for that data transfer, and tell them they need to select specific columns (if applicable. When a schema change for column addition is needed, we make sure they're ok for us to add columns without changes on their end, and do so. Once that data is ready, they can make changes on their end to bring in the new column(s). Avoiding coordinated change windows is the key, because it causes immense difficulty when working across teams.If a column is being removed, we essentially do the reverse. Downstream removes their dependency on it, then we remove it. If this ever has to be inverted, then the new first-moving team needs to set up a view or some other 'dummy' mechanism to spoof the presence of the data, so that they can make their change now and let the other team catch up later.For ingestion we make use of lake storage -- we capture raw data and raw files, exactly as upstream provides them. We read the data as long as it is compatible, it does not have to be identical, but we do flag for changes in schema as they will need to be addressed. After read, we write to conformed tables that use a schema we set, so we can add in dummy data or drop columns as needed. Ideally upstream works with us and provides two copies when a change is happening, one in the old schema and another in the new, then we can switch over at any point (ie they are first mover in this scenario).",azirale,2025-06-20 11:25:16,3,dataengineering,t3_1lfxkuw,False,
mysmfqo,"we at dlthub use dlt to infer and evolve our schemas, here is a colab demo [https://colab.research.google.com/drive/1H6HKFi-U1V4p0afVucw\_Jzv1oiFbH2bu#scrollTo=e4y4sQ78P\_OM](https://colab.research.google.com/drive/1H6HKFi-U1V4p0afVucw_Jzv1oiFbH2bu#scrollTo=e4y4sQ78P_OM)",Thinker_Assignment,2025-06-20 11:36:50,2,dataengineering,t3_1lfxkuw,False,
mzcoqch,"Schema evolution is definitely one of the most underappreciated challenges in data ingestion pipelines. A few common techniques I've seen work well across teams:\- **Column add detection**: Regularly diffing source schemas against warehouse schemas and generating DDLs to add new columns automatically (or semi-automatically via approval workflows). \- **Soft typing**: Especially for NoSQL sources, coercing all incoming values into strings or JSON blobs to prevent type errors when a field starts varying in type across records. \- **Schema registry-backed ingestion:** For streaming systems like Kafka, using Avro or Protobuf with a schema registry to enforce compatibility at the producer level. \- **Shadow tables for testing**: Syncing to a shadow dataset before applying schema changes to prod, so you can monitor how ingestion and downstream transforms behave.A lot of it comes down to how much control you have over upstream sources and how comfortable you are automating schema enforcement downstream.I work at [Artie](https://www.artie.com/?utm_source=reddit), and one thing we do is automatically handle schema evolution in-flight—even inferring types for NoSQL sources and alerting teams when schema changes are detected. It's been interesting to see how much pain this saves folks once things scale.",Sam-Artie,2025-06-23 16:17:56,1,dataengineering,t3_1lfxkuw,False,
myuz9tp,"I use [ToolFront](https://github.com/kruskal-labs/toolfront), an IDE extension that connects Cursor/Copilot to my databases and helps me discover and search schemas by talking to AI. Disclaimer: I'm the author.",Durovilla,2025-06-20 18:54:32,1,dataengineering,t3_1lfxkuw,False,
myrtwfa,This is the way,Familiar_Poetry401,2025-06-20 07:18:22,1,dataengineering,t1_myrtu5c,True,
myrypuc,I had a dev next to me drop a column in a transactional database and he still forgot to tell me :face_with_tears_of_joy:,scataco,2025-06-20 08:05:18,1,dataengineering,t1_myrtu5c,False,
myxyf71,Nice! I plan to use dlt for my next project.,Familiar_Poetry401,2025-06-21 05:43:01,2,dataengineering,t1_mysmfqo,True,
my99d4f,"Well, the recruiters will just intentionally wrongfully assume that data analyst, data scientist, data engineer are just one role for their benefit. they'd need a single etl job and wouldn't be able to justify your need later so they'll put you upto any random shenanigans with data as prefix.... current employer has put me on fast api, vertex ai and devops with role as a DE.",Certain_Boat_7630,2025-06-17 13:05:57,11,dataengineering,t3_1ldm5pr,False,
my9sdos,I am a data engineer in a consultant firm.For my current client I am making an ai application. It's a mobile app. So using react native with expo for frontend and python backend.I never worked with react. I am just vibe coding the frontend,LordXavier77,2025-06-17 14:45:10,8,dataengineering,t3_1ldm5pr,False,
my9os6g,It beats an econ intern fetching coffee or a marketing intern doing front desk work,dadadawe,2025-06-17 14:27:41,4,dataengineering,t3_1ldm5pr,False,
mycj7j5,"As a Senior Data Engineer I was put on a project where I spent a lot of time adding features to the data, making it easier for the lead data scientist to run machine learning models against it. It was actually very rewarding and a nice change of pace from just piping the data into Snowflake.",crytomaniac2000,2025-06-17 22:34:52,3,dataengineering,t3_1ldm5pr,False,
my99fan,"It's common if you're working in consultancy but it depends on the company, I'm in a similar position where I have done different projects ranging from pure consultancy to building AI Agents but no DE, I'm in a large multinational company, I know a friend who does only DE and he works for a smaller consultancy firm (own country + neighbour countries)So this depends on the company and you have to choose yourself if you really want to only do DE or are fine with doing different data projects.That said you can always change company if you don't like it.",Wingedchestnut,2025-06-17 13:06:18,2,dataengineering,t3_1ldm5pr,False,
my99g2x,That’s more like AI engineer than Data engineer.,dreamhighpinay,2025-06-17 13:06:25,2,dataengineering,t3_1ldm5pr,False,
my9ck2s,"Yeah they currently dont have tasks related to data engineering and I am in the "" AI and Data Team"" so I am doing the projects they have.But will this have any negative effect if I plan to switch later?",the-random-guy-2002,2025-06-17 13:23:51,1,dataengineering,t1_my99d4f,True,
my9c2vw,"I am also working for a multinational company but the branch I am in is a young branch which was created just 8 months ago.I am fine with working in different data projects, I even enjoy that, the only thing I am concerned about is how it would effect if I try to switch jobs later.",the-random-guy-2002,2025-06-17 13:21:12,1,dataengineering,t1_my99fan,True,
myvl7ga,![gif](giphy|xUn3CkCUIGFaW8iIj6),Terrible_Ad_300,2025-06-20 20:43:57,25,dataengineering,t3_1lgae7z,False,
mywxk0g,"Regularly snapshot the XLS sheet into a database, another XLS file, or a CSV, then compare versions over time. Simple and effective.",Tical13x,2025-06-21 01:19:48,11,dataengineering,t3_1lgae7z,False,
myur31x,"If you have last week's spreadsheet and this week's spreadsheet you could just write some Java to compare them and calculate the ""diff"" yourself assuming the format isn't changing week to week. Alternatively, even if you cant change the ""source"" of the data, you could start tracking/copying the data in a proper DB to be able to calculate the weekly diff more easily. Then when the politics change (they always do eventually one way or another), you'll have a head start on managing this data in a better fashion.I'm sure there are tools out there, but I don't know of any, and even if they do exist it's just band-aiding the problem.",BadKafkaPartitioning,2025-06-20 18:14:23,9,dataengineering,t3_1lgae7z,False,
myuvw6o,Turn it into a csv file and append to it.,chock-a-block,2025-06-20 18:37:57,3,dataengineering,t3_1lgae7z,False,
mywicfa,"I'm confused about why you're mentioning CDC. If the file is only modified once a week (or even if it was once a day), why not just bulk load it on that same schedule? CDC is for things that are changing _a lot_, like multiple times an hour or especially multiple times a minute.",sjcuthbertson,2025-06-20 23:46:08,3,dataengineering,t3_1lgae7z,False,
myzwojh,"Hmm depends on what cdc type you are trying to achieve. To perform cdc, you need the following:1. key column2. update timestamp column3. Before and After tableBefore cdc is done on the Excel sheet, make a copy of the sheet to be used on the next run for comparison.",sung-keith,2025-06-21 15:11:44,2,dataengineering,t3_1lgae7z,False,
myvry0o,"I mean, like another user suggested, you could just append to a CSV, but how would they know if you imported into SQL for CDC? Depending on the volume of data, CSV may not be very practical. You can have authoritative data in excel, and import it to SQL to do your work. I would imagine this would play nicer with your app as well.",IronAntlers,2025-06-20 21:17:59,1,dataengineering,t3_1lgae7z,False,
myz4hhe,Why do you need CDC? Why not do a fresh write every time?,Bach4Ants,2025-06-21 12:19:12,1,dataengineering,t3_1lgae7z,False,
myzdf08,Why is this even here?,SquarePleasant9538,2025-06-21 13:20:10,1,dataengineering,t3_1lgae7z,False,
mz80am5,"Extract it each week holistically as a CSV, load it into some other system that has CDC tracking. Something like a merge into a delta lake table on Databricks (not necessarily that, that’s probably overkill for what you need, but just as an example).",dudebobmac,2025-06-22 21:34:29,1,dataengineering,t3_1lgae7z,False,
mytbwvj,u/Nekobul take a break from rage baiting everybody and help somebody use the best ETL platform on the market,MikeDoesEverything,2025-06-20 14:08:36,12,dataengineering,t3_1lfysr0,False,
myte07w,"You can have the XMLA scripting step in a For Each Loop container, processing each table. That should be easy to do and maintain.",Nekobul,2025-06-20 14:19:04,6,dataengineering,t3_1lfysr0,False,
mz3hxkd,"Alternatively, you could look into advanced partitioning strategies and setting up an incremental refresh. FYI it's more of a pain on SSAS compared to PBI. This way, your large tables aren't needing a full refresh every time as you only update the most recent partitions. This saves a lot on memory overhead and processing time for your large tables.MSFT has whitepaper and supporting example in a GitHub repo: [Advanced Partitioning Strategies](https://learn.microsoft.com/en-us/analysis-services/tabular-models/partitions-ssas-tabular?view=sql-analysis-services-2025#advanced-partitioning-strategies)",crazy-treyn,2025-06-22 03:38:10,1,dataengineering,t3_1lfysr0,False,
mz7i1kl,"I do this using PowerShell. First, I process all Dim tables in one go, then the smaller fact tables, maximum 10 at the time. Then the larger, partitioned tables, however only the most recent ones, based on some standard rules. Then I loop through all the other, older partitions and process the X oldest ones to make sure everything is processed within a certain time.I've got clients with 40-50GB models where this works great, and is a lot faster than doing a full process.",IrquiM,2025-06-22 19:59:50,1,dataengineering,t3_1lfysr0,False,
myyeny8,Ahaha you summoned him,Way2Drxpi,2025-06-21 08:19:50,1,dataengineering,t1_mytbwvj,True,
myyf0hj,Thank you I will try this when I get back to work,Way2Drxpi,2025-06-21 08:23:28,2,dataengineering,t1_myte07w,True,
mzar5x6,I was able to create the loop but im struggling to get the table names dynamically in vs and it also seems to be one transaction instead of seperate ones.,Way2Drxpi,2025-06-23 08:58:53,1,dataengineering,t1_myte07w,True,
mzar1fe,The issue is we dont know what is gonna change in the tables. It could be records from years ago.,Way2Drxpi,2025-06-23 08:57:36,1,dataengineering,t1_mz3hxkd,True,
mzaqx86,When using the loop how do you seperate the transactions?,Way2Drxpi,2025-06-23 08:56:27,1,dataengineering,t1_mz7i1kl,True,
mzawvj6,I create a JSON command manually that I tell Invoke-ascmd to process.,IrquiM,2025-06-23 09:55:15,1,dataengineering,t1_mzaqx86,False,
mz9epxq,We have a couple metrics that are sourced from LLMs analyzing conversations for sentiment and the like just because there’s not really another good way to do that. If I could explain to a model exactly how I want my data transformed or validated then I would just write the code that does it much faster at a fraction of the cost. Perhaps it has a use if your data is wildly irregular but fortunately I don’t have to deal with that.,JaceBearelen,2025-06-23 02:23:18,13,dataengineering,t3_1li4spt,False,
mzadcjo,"AI agents in pipelines are still very early for most orgs. Some teams are experimenting with using LLMs for things like auto-generating SQL, normalizing messy columns, or detecting anomalies but trust and reproducibility are real concerns.The agentic pipeline hype is growing but most production teams still rely on rule-based logic, dbt tests and human-reviewed pipelines. AI might assist more in the future.",eb0373284,2025-06-23 06:42:21,6,dataengineering,t3_1li4spt,False,
mz9tw2g,Sounds like you were the mark in a sales call,x246ab,2025-06-23 04:00:35,8,dataengineering,t3_1li4spt,False,
mzbkl64,If so it didn’t go well for them lol,poopdood696969,2025-06-23 12:54:34,2,dataengineering,t1_mz9tw2g,True,
mz0vijl,I’m curious to see the comments on this. Good luck with this,cloudsandtreks,2025-06-21 18:14:05,2,dataengineering,t3_1lh2yt4,False,
mz0wd0v,[https://youtu.be/\_RkhmHOlncs?si=T2VQeHvpd88gzfwU](https://youtu.be/_RkhmHOlncs?si=T2VQeHvpd88gzfwU) [https://youtu.be/bynsxAbjImQ?si=VvlyWfREsLDdC98B](https://youtu.be/bynsxAbjImQ?si=VvlyWfREsLDdC98B),69odysseus,2025-06-21 18:18:34,2,dataengineering,t3_1lh2yt4,False,
mz0ymae,"I’ve done a project based on Spotify API some time ago, maybe you can find something useful in the code :smiling_face: Though it might not work anymore, since they changed the way their API workshttps://github.com/KamilKolanowski/spotify-data-analysis",Natural-Tune-2141,2025-06-21 18:30:43,2,dataengineering,t3_1lh2yt4,False,
mz10s0b,This sounds great. Unfamiliar with AWS tools but overall concept good luck!,Pucci800,2025-06-21 18:42:26,2,dataengineering,t3_1lh2yt4,False,
mz17fqx,"I think it's likely a bit over engineered. The lambda to pull data from Spotify and dump into s3 sounds good. Once the data is in s3, just a notebook to load all the data and rearrange it into charts and graphs should be sufficient. If you just dump the raw responses from Spotify into s3 (segmented by retrieval date), you give yourself full flexibility to do whatever you want without losing data.Of course if your goal is to practice and work with AWS, your design makes sense to achieve that goal.",Ok_Yesterday_3449,2025-06-21 19:18:56,2,dataengineering,t3_1lh2yt4,False,
mz56ic9,"You should be able to do all this very cheaply on AWS. The pipeline sounds reasonable. I don't know about your final data model for the analysis tables, depends on the analysis you'll do. But designing building and loading into an imperfect data model, then realizing it's shortcomings is great experience.",tedward27,2025-06-22 12:36:01,1,dataengineering,t3_1lh2yt4,False,
mz1123s,"Thanks, I looked through the jupyter notebook file and the code looks very clean!",Lastrevio,2025-06-21 18:43:57,1,dataengineering,t1_mz0ymae,True,
myivi52,SQL is a great starting point but you would need some projects on your CV to break into the market. it is very tough right now to be honest,Aggressive-Practice3,2025-06-18 21:35:52,2,dataengineering,t3_1let7c5,False,
myu5eqm,If someone has solid SQL and dbt skills they are definitely interesting to us. Where I see most people fail is their inability to identify problems before they happen (anticipate) and people that don't understand the business they are working in. They're just moving data.,ChicagoJFitz,2025-06-20 16:31:39,2,dataengineering,t3_1let7c5,False,
myivlv9,Mastery of Python SQL and DBT will land you most analytics engineer jobs on the market.. from there you’ll know exactly how to transition into DE.,jduran9987,2025-06-18 21:36:22,1,dataengineering,t3_1let7c5,False,
myjba1s,"If you can, move in internally.",Chowder1054,2025-06-18 23:00:21,1,dataengineering,t3_1let7c5,False,
myjkpwr,"Based on the limited info, I think data analyst would be the ""easiest"" option to break into. If you can jump straight to analytics engineer, that would be even better.I argue data engineering is a role you go into after you get experience in the software engineering space and want to specialize, or you come from a data role and want to have more of an engineering focus (I went from data science to data engineering myself).Agree with others that Python, SQL, and dbt are going to be the best use of your time. Especially dbt for analytics engineering roles.Another thing to note is that I'm seeing Typescript come up A LOT for AI deployments. I'm strongly considering learning typescript myself because of this. I would definitely prioritize python over this, but if I had to choose another language after python and SQL, I would personally choose typescript.Finally, your work on MSE is a huge advantage if you position yourself right. You now have domain knowledge in manufacturing. Having such may lower the barrier of entry into a role. For example, I had a clinical research and health insurance background which helped me get my first data science role at a health tech company.Hope this helps!",on_the_mark_data,2025-06-18 23:52:12,1,dataengineering,t3_1let7c5,False,
myj3e2y,Learn how to use SSIS - it is the best ETL platform on the market. SSIS is part of the SQL Server license and you can download and install SQL Server Development Edition completely free. You can play with SSIS on your laptop without any network connectivity.,Nekobul,2025-06-18 22:16:46,-7,dataengineering,t3_1let7c5,False,
myjbiyq,I totally see the reason!,Ordinary_Acadia_1148,2025-06-18 23:01:42,1,dataengineering,t1_myivi52,True,
mz1vk7s,I totally see that not understanding what you work for people and someone trying to learn every part of the process.,Ordinary_Acadia_1148,2025-06-21 21:32:49,1,dataengineering,t1_myu5eqm,True,
myjbhv1,Thank you so keep doing python and sql before I try new things?,Ordinary_Acadia_1148,2025-06-18 23:01:32,2,dataengineering,t1_myivlv9,True,
myjbkod,Would you mind helping me understand internally meant?,Ordinary_Acadia_1148,2025-06-18 23:01:58,1,dataengineering,t1_myjba1s,True,
mzbbbl7,Deliver the solution for the business users and don't create future problems while I'm at it. The tools and methods don't matter if the above is achieved.,PossibilityRegular21,2025-06-23 11:54:01,26,dataengineering,t3_1liejbs,False,
mzbbg1r,"in general, ""[Building Pipeline](https://www.projectpro.io/project-use-case/build-an-end-to-end-machine-learning-pipeline-for-a-classification-model?utm_source=pawan&utm_medium=reddit)"" just means creating processes and tools to move and transform data reliably from source to destination. Technically, it can imply anything from simple scripts to complex workflows.",Altruistic_Road2021,2025-06-23 11:54:54,10,dataengineering,t3_1liejbs,False,
mzbcoou,"I'm more from the analytics side too, and to me ""build a data pipeline"" tends to mean a series of SQL (or possibly pyspark) scripts that transform the data.This would typically be run as a series of tasks in Airflow on a schedule. Ideally dbt would be involved.The data would start out as ""base"" tables, involve ""staging"" tables and having ""entity"" tables as the output.Definitely not saying this is a universal definition, just what it means to me.Edit: I imagine many DEs would be more focused on the preceding part: getting the data from the actual event to a data lake of some description.",Peppers_16,2025-06-23 12:03:30,9,dataengineering,t3_1liejbs,False,
mzbfvgs,Collect data from source(s) process and transform it so it's fit to be reported on to the business and create value,TheEternalTom,2025-06-23 12:24:58,3,dataengineering,t3_1liejbs,False,
mzbf4tk,"A pipeline is two connection strings (source and destination) and a transport protocol (bcp, tcp/ip).",SaintTimothy,2025-06-23 12:20:05,2,dataengineering,t3_1liejbs,False,
mzdp2tz,"In my engineering head a pipelime is something that move data, that's it. It can have many event producers or data producers, doesn't matter what the cadence is, but it just moves data.In business context, I have no fucking idea because non tech people call and entire data product a fucking data pipeline these days and do not understand the difference between a data platform and a warehouse and subsequently under the difference between a developer and engineer.",mzivtins_acc,2025-06-23 19:06:17,2,dataengineering,t3_1liejbs,False,
mzbb2th,"For me it means similar as data stack. What warehouses, cdps, analytics tools you use for proper data flow",Still-Butterfly-3669,2025-06-23 11:52:18,3,dataengineering,t3_1liejbs,False,
mzbcu84,Super glue everywhere :face_with_tears_of_joy:,diegoelmestre,2025-06-23 12:04:34,1,dataengineering,t3_1liejbs,False,
mzbfkie,"for me it's just setting things up so data moves without too much drama. Like, get it from wherever it lives, clean it a bit maybe, push it somewhere useful, and make sure it doesn’t break along the way. Tools don’t matter as much as the flow making sense tbh.Been doing this kinda stuff with the team. Your definition works, just sounds more high level. Engineers just get into the weeds more with tools and structure.",Automatic-Kale-1413,2025-06-23 12:22:57,1,dataengineering,t3_1liejbs,False,
mzbxr04,"It's generally more on the analytics side; I've not heard it referred to as a ""data pipeline"" or ""ETL"" when it's only on the operational side, e.g. operational data flowing between 2 services.In those cases we talk about flow diagrams more in the context of the information being passed, which tends to be transactional in nature.",Fun_Independent_7529,2025-06-23 14:08:10,1,dataengineering,t3_1liejbs,False,
mz1pq14,The answer is to not allow broken models to deploy in the first place.Use CI/CD with a slim CI check using state deferral against a copy of the prod manifest. Prevent PRs from merging if the build fails. If production is already broken then disable those models now and rework them until your CI check passes.,N0R5E,2025-06-21 20:59:50,22,dataengineering,t3_1lh5o3a,False,
mz1jipx,I assume you are using version control. If not I would implement that as soon as possible. That’s a must have and a foolish mistake to make with any business codebase Why is their broken dbt code that’s in main? We run GitHub actions for the parse phase to prevent any non building projects from going to prod. No need to hit a db engine which keeps it nice and segregated.At the minimum broken code should never hit a prod branch and you should have separate branches for marketing and sales,minormisgnomer,2025-06-21 20:25:50,8,dataengineering,t3_1lh5o3a,False,
mz29fws,"Is this something resolvable with selectors? We have our pipelines segregated out in selectors, so we can run, say, all marketing models at a time without needing to run finance tables.But as others mentioned, broken code should never hit prod and when it does, everyone needs to drop everything and fix it.",antraxsuicide,2025-06-21 22:55:00,3,dataengineering,t3_1lh5o3a,False,
mz3n2qx,I don’t quite understand the problem. Why not just run a subset of the models?By “parse” do you mean the dbt models don’t compile into SQL?,Slggyqo,2025-06-22 04:16:20,1,dataengineering,t3_1lh5o3a,False,
mz1skmf,Em I like the deferral trickThanks!,vh_obj,2025-06-21 21:15:42,3,dataengineering,t1_mz1pq14,True,
mz1zl16,"At the very minimum, a simple `dbt compile` in CICD would at least make sure the dag is parseable but it won't save you from SQL issues without state deferral builds. If you aren't familiar enough with CICD to set up actions that both store and retrieve the manifest from S3 and wire up state deferral, you might have a hard time although there are guides out there to follow. IIRC there is a blog post from Datafold.",DudeYourBedsaCar,2025-06-21 21:55:54,2,dataengineering,t1_mz1pq14,False,
mz1nshz,"I got it, and you are 100% right.The problem is that it's hard to find DEs who are fluent with Git, especially in my country where they rely heavily on GUI-based and legacy ETL tools.",vh_obj,2025-06-21 20:49:16,-4,dataengineering,t1_mz1jipx,True,
mz2veec,"I think an organization at minimum has to decide between paying for dbt Cloud or implementing dbt Core + GitHub Actions themselves. Anything less would not be a sustainable production environment.A sampled slim build is an excellent balance of coverage and runtime. You could get by with an `—empty` full build if state management was out of reach. A compile check isn’t great, but better than nothing if you can’t establish a db connection at all.",N0R5E,2025-06-22 01:09:40,3,dataengineering,t1_mz1zl16,False,
mz1yxze,You can be a DE without git knowledge? I'll be damned.,DudeYourBedsaCar,2025-06-21 21:52:12,5,dataengineering,t1_mz1nshz,False,
mz34dld,But like bare minimum gut fluency is all that’s required. It’s literally four git commands and you could solve the problem,minormisgnomer,2025-06-22 02:06:45,3,dataengineering,t1_mz1nshz,False,
myt7bpx,"Why is the catalog being loaded as a seed file? As far as I know the best approach would be to specify debt contracts with the data types in question, but why do you store them somewhere else?",slevemcdiachel,2025-06-20 13:44:34,1,dataengineering,t3_1lg2z0l,False,
mz5u664,"Mwahaha. SQL Server DBA here so I know exactly what you’re talking about :smirking_face: Well, not the DuckLake parts but the rest of it :smirking_face: Like where’s the equivalent of an SSDT project here?!Take a look at SQLMesh. It supports and/or replaces dbt. It has column type tracking / lineage between all of those databases and a few more!To summarise, you define a SQL model in SQLMesh (just a file with a select statement… model (name xxx); select blah from y), it works out what the source tables are by querying the source database, and caches them in a yaml file (it’s also a one command line to regenerate this at any time, so it’s no big deal at all, you can also easily parse it by hand or script because it’s so basic, literally just the table name column name and data type). Now for any more references to those tables or that model or other models and nested models etc it tracks the lineage downwards. If you have it materialize the views it calculates all the data types of the tables to create, or you can also manually define and override them, or keep the whole thing as just views.It has a VS Code extension that shows you all of the column types in your models while you’re coding, too. It has an API (of sorts) you can call to scrape it into other applications as well (but that part is a bit funny; because you need to run it in UI mode which opens a local 8080 port, and you query that… easier than it sounds).Anyway have a look just to see if it does what you want. One last thing though. F MAX column types in SQL Server :grinning_face_with_sweat: Those are LOB types so every single row query will cause an additional lookup for every LOB column in it. That quickly *kills* performance even in a data warehouse :grinning_face_with_sweat: Oh it’s okay for CSV files and stuff where you can’t be sure what the limits are… I get that part… but in general it’s a big no :grinning_face_with_sweat:",codykonior,2025-06-22 14:55:30,1,dataengineering,t3_1lg2z0l,False,
mz2l1bk,"It's a fair question. There were a few reasons I preferred this approach 1. The inability in dbt contracts of being able to do varchar(n) max length type checks - I come from a MS SQL server backgorund and am used to defining max field lengths for most text columns. This one is interesting though - I'm going to be using postgres for the database for the first time and I have just realised the strict varchar(n) types I'm useed to aren't really needed for the majority of columns because text / varchar data types will suffice - so it's less of a concern now. 2. I saw it as likely being a better debugging experience to pick up schema errors by tests (rather than using contracts which prevent the models from creating - although I get it that's what you'd want to happen). I'll also be creating other tests for expected values etc, so having all tests implemented the same way I saw as a cleaner apprach3. I just don't like the amount of yaml that gets created to implement schema checks via contracts (I think this is actually my biggest gripe). My first ingest pipeline has 30 files and some of them have 60+ columns - that is a lot of yaml needed not to mention dbt best practsies suggest putting it all in a single schema.yml file! That sounds a PITA for developers to maintain. Diffing metadata .schema changes in a small seed file is easy.",Zealousideal-Plum485,2025-06-22 00:05:18,1,dataengineering,t1_myt7bpx,True,
myo7u71,"This is great! I’m a big fan of architecture diagrams, so I think it would be a great addition.",Aggressive-Practice3,2025-06-19 18:11:10,4,dataengineering,t3_1lfbewj,False,
myy0kfr,"Nice job. I would have recommend to merge the Extract Transform Load into one script, since the scripts are not lengthy as well as being easy to grasp.",yellowmamba_97,2025-06-21 06:02:04,2,dataengineering,t3_1lfbewj,False,
myyywxx,Great job! My two cents is to create one .py file that combines the ETL process. Since yours is short I would also make use of functions. What I’m thinking looks something like this:def main(): Extracted_Data = extract_data() Transform_Data = transform_data(Extracted_Data) load_data()Create functions below:—-————main(),looking_for_info7654,2025-06-21 11:36:47,2,dataengineering,t3_1lfbewj,False,
myqyc5e,Appreciate it! Totally agree I’ve heard a solid architecture diagram goes a long way. I’ll add one in soon to break down how everything moves across the pipeline. Thanks again for taking the time to check it out!,Pucci800,2025-06-20 03:08:38,1,dataengineering,t1_myo7u71,True,
mz0xgna,Thank you! It definitely makes for better clarity. I don’t know what I was stuck in that mindset of they had to be all different scripts. So one script would also make things more testable and the code more modular.,Pucci800,2025-06-21 18:24:31,1,dataengineering,t1_myy0kfr,True,
mz0zpxq,Appreciate you! This makes sense makes keeps everything contained and readable especially since the ETL process is overall not lengthy and yes better use of functions.,Pucci800,2025-06-21 18:36:39,1,dataengineering,t1_myyywxx,True,
my9r0xp,"I have…. 1. raw files in S32. a parquet version of the files stored in S33. Snowflake Time Travel, which is automatically configured to save 24 hour history for standard physical tables. This can extended, but obviously that costs more money. Even the default 24 hours can be handy for rolling back any mistakes you notice immediately. Also safeguards around the modification/drop: 1. Monte Carlo to let me know if tables are modified or dropped unexpectedly 2. Alerts if a task fails because the upstream table is missing. 3. Proper protections and permissions on database objects/roles/users.",Slggyqo,2025-06-17 14:38:41,18,dataengineering,t3_1ldoodt,False,
myahxhx,"This is why the data lakehouse exists as a concept, all of our raw data lives in an S3 bucket in its raw format, when new files arrive it triggers an event notification that goes to an SQS queue, we then have a snowflake pipe which listens to that SQS queue and runs a COPY INTO command to copy the data from that new file into its corresponding table in our Snowflake landing zone.This is AWS centric but can be done with other tools, the core principle is a datalake for your raw data that no one gets access to except those that need it. This allows you to effectively replay any data loads, you could rebuild any table from the raw data just by running that COPY INTO command.",Maxisquillion,2025-06-17 16:45:32,4,dataengineering,t3_1ldoodt,False,
my9tb2h,"Thanks!I've been ingesting data directly into Snowflake, but seems like I ought to consider first bringing the data into a stage and then Snowflake.",what_duck,2025-06-17 14:49:34,3,dataengineering,t1_my9r0xp,True,
myaju9v,Are u me ? I built exact pipeline. Jk,HumbleFigure1118,2025-06-17 16:54:26,1,dataengineering,t1_myahxhx,False,
myd34v9,"What's your approach for when an invalid file comes and you need to either modify or delete it, and potentially ingest a fixed version?People in my company have been doing manual operations on the warehouse which is just wrong imo, as you lose replayability. They even designed the warehouse tables for this purpose (with colums that designate who change the row and when).",gajop,2025-06-18 00:25:39,1,dataengineering,t1_myahxhx,False,
my9wgu3,"Having the file in the staging area makes it really easy to reingest, as long as your pipeline is properly set up. If I lost dropped my entire database by accident and didn’t notice soon enough to recover it with time travel, I could rebuild every table with stored DDL (I have a repo where I save the ddl for every staging table), reload all of the data from my staging area, and rebuild all of my downstreamobjects with dbt. I can’t do it in a single button press, but I’m 100% confident that I could do it in a single day with enough processing power. I feel that is the baseline standard for a production system. Basically: Have copies of your raw data easily accessible, put your SQL and Python in source control.",Slggyqo,2025-06-17 15:04:22,3,dataengineering,t1_my9tb2h,False,
myaqtgq,"Hahaha well good design probably converges to similar forms, I didn’t come up with it a teammate with more experience did, if you’re on AWS there’s probably only so many ways to get data from S3 to snowflake and if you want low latency event notifications seem to be the way to go.",Maxisquillion,2025-06-17 17:25:44,1,dataengineering,t1_myaju9v,False,
myesbhz,"we’re still working on our pipeline observability, but ideally you have notifications set up for failed pipes and tasks in snowflake that go to a dedicated alerts channel. It then requires manual attention.This doesn’t really happen though as we’ve set up all our data pipelines, what’s more common is the extraction of data from its source fails resulting in no file when you expected one, so you should be measuring how stale your tables are and alert when it passes a threshold (which will be your SLAs). Similarly you should be measuring data quality with a tool like great expectations to do the same thing when you get a properly formed file but with values that don’t match business expectations, like a negative currency value when you expected it to be positive.",Maxisquillion,2025-06-18 07:34:35,1,dataengineering,t1_myd34v9,False,
myaa29y,"That makes sense to me. I've been ingesting data directly via an API, but I'd be in trouble if those tables got dropped somehow. All my other pieces are version controlled beyond the raw layer.I wouldn't be able to re-create my database from scratch though. It seemed like terraform was the best way to do that, but I haven't had the time to explore.",what_duck,2025-06-17 16:08:20,1,dataengineering,t1_my9wgu3,True,
myaom9q,"Could you expand on how you store your DLL? Is it literally just a repo containing the raw SQL for each table? Have you considered a migration tool like Flyway to automate DDL changes / recreation of the tables?Right now we’ve written table definitions in Terraform objects, and we have a module that parses these objects to create the tables, but it’s hardly the ideal tool and our tfstate has become littered with these tables.How do you handle the creation of the corresponding snowflake stages and pipes? Did you create them all manually? The one handy thing about terraform is it automates most of that work for us.",Maxisquillion,2025-06-17 17:15:58,1,dataengineering,t1_my9wgu3,False,
myic248,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-18 20:00:48,1,dataengineering,t3_1ler091,False,moderator
myie7za,Contract dimension,mlobet,2025-06-18 20:11:24,13,dataengineering,t3_1ler091,False,
myj6v2x,"There shouldn't be price records or columns anywhere in your finished dimensional model. You don't store price directly in a model, you calculate it as Extended Value ÷ Quantity. This means you can also do things like sum(Extended Value) ÷ sum(Quantity) to get an average price over some dimensional subset. You may have some price lookup stuff in the ""back office"" (aka silver layer if using medallion architecture), that you use to determine the Extended Value for each fact row, if the value isn't already stored at source. But you calculate EV then drop the price data, because users of the fact table can't just sum(Price): it's semi-additive at best.",sjcuthbertson,2025-06-18 22:35:51,2,dataengineering,t3_1ler091,False,
myj8m20,"Re ""products do not match between systems"": if you really do need a contract fact, with a grain that includes product, then you absolutely need a conformed product dimension that harmonises the product data from both systems. You need to work to _make_ them match. Then the single product dimension becomes part of how you associate rows in one fact table with rows in another fact table. You don't ever link one fact table directly to another. You traverse the model via one or more dimensions that the two facts have in common. (Those common dimensions might include degenerate dims like a contract number, perhaps. If so, the DD should be un-degenerated (!) back to a very narrow true dimension table, with surrogate keys in all the relevant fact tables.)You should work on that Product dimension before the facts, at least to get the basic approach and structure sorted, if row-by-row matching will take time. You can use tools like splink to figure out the links, potentially.(Unless they are actually different unrelated products? Like the contract is for a finished car, but the invoice is for components like engine block, axle, brake disk, etc. If so, Product and Component are probably two separate dimensions.)",sjcuthbertson,2025-06-18 22:45:40,2,dataengineering,t3_1ler091,False,
myjxafr,"When in doubt, https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/kimball-techniques/dimensional-modeling-techniques/periodic-snapshot-fact-table/",dbrownems,2025-06-19 01:06:05,1,dataengineering,t3_1ler091,False,
mypg1iv,"I didn't read all the comments here but purely based on your description, ""product on the contract and a product on the invoice"", you'll need a confirmed dimension which will be used across those two fact objects. Below I just created a dimensional data model based on your post:1) FACT\_INVOICES\_CONTRACTS\_LINE\_ITEM (Each line item representing to specific product on an invoice that maps to a product in a contract, including relevant prices, quantities, and amounts).2) Handful of dimension objects like Customer, Product, Invoice, Contract Line Item, Price, Date. 3) You can also create a mapping or lookup object (product\_mapping) given that products in both source systems might be different along with their id's.I was initially thinking you might need two separate fact objects but that's only required in the case you need to report on stripe invoices and Salesforce contracts independently in a way that doesn't require joining them.",69odysseus,2025-06-19 21:54:45,1,dataengineering,t3_1ler091,False,
mymlv1r,"Ah, the original ""snowflake"" design. Generally considered a bad idea. At that point, you may want to reconsider changing the design to 3NF. You are sort of backing into anyway. To be fair, while both have their place, I am much more of in Inmon fan than Kimball.",marketlurker,2025-06-19 13:22:01,0,dataengineering,t3_1ler091,False,
myiiymb,Oh am I just being dumb and thinking of a contract as a fact when its actually a dimension?,biga410,2025-06-18 20:34:08,3,dataengineering,t1_myie7za,True,
myka6j3,"Yeah, my team went with this approach initially as well and figured out gathering these individual metrics at the most atomic level was basically impossible. Super old legacy source system with complex calculations deeply embedded. Ended up committing the cardinal sin of fact to fact joins. What I’m getting at - OP might not have this luxury. It doesn’t *seem* to be the case but alas.",namethatisclever,2025-06-19 02:23:13,1,dataengineering,t1_myj6v2x,False,
myj5nso,"It could be both. The contract itself is definitely a dimension as it describes ""which something"" a factual event relates to. But you _may_ also need very closely related facts, like a fact table for ""Contracts Issued"". This fact would have dimensions like: date of issue, contract, customer, etc. A row for every contract issued, means it would be the same grain as the dimension IF the dim is not slowly changing. But you should still model the fact separately from the dimension, because the dimensional part is equally relevant to attach to other facts like Invoices.",sjcuthbertson,2025-06-18 22:29:11,7,dataengineering,t1_myiiymb,False,
my9tvvt,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 14:52:20,1,dataengineering,t3_1ldp6p7,False,moderator
my80h0k,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 06:49:59,1,dataengineering,t3_1ldgdxu,False,moderator
mye0k38,"We're going heavy on agents in my workplace and DE is needed more than ever.We still need to create sound data architecture, or we will just have data swamps and AI slop.The end isn't near.",frogsarenottoads,2025-06-18 03:42:23,9,dataengineering,t3_1ldgdxu,False,
myebbqj,Read this thread. Had asked similar question and got many great response. https://www.reddit.com/r/dataengineering/s/pb5xYaKEM9,ObviousDistrict2542,2025-06-18 05:02:16,4,dataengineering,t3_1ldgdxu,False,
my86cm9,Yeah the end is near.Kind regards [insert name],Middle_Ask_5716,2025-06-17 07:47:22,6,dataengineering,t3_1ldgdxu,False,
myaetxm,it seems like everyone is going to use AI at work the same way we use an IDE or tab-completion.it's just a required part of the job in order to be productive.,thisfunnieguy,2025-06-17 16:30:51,4,dataengineering,t3_1ldgdxu,False,
my9gfd7,"I am also a Data Engineer with 7yrs of experience and a GCP certified too. I have lead and implemented projects involving 'AI', the pattern I have seen is that companies want AI but after the project has kickoff the realisation or I would say the discovery that happens is ""Data is not organise"" the way it should be, no standardization, no data cataloguing, etc. Data Engineering is still need of the hour but yes you should upskill yourself on current frameworks and concepts that are emerging. We can chat more over here https://www.linkedin.com/in/darsh-shukla",Born_Performance3411,2025-06-17 13:45:05,6,dataengineering,t3_1ldgdxu,False,
mybu0pw,"Thanks for the question , I am also in search of some guidance. AWS Data Engineer here",Suitable-Page2991,2025-06-17 20:28:35,1,dataengineering,t3_1ldgdxu,False,
my84mhl,"Do you mean actual Data Science or applied AI as in implementing AI cloud services, working with LLM's..There is a course for everything, if you want to start with DS start with machine learning",Wingedchestnut,2025-06-17 07:29:46,1,dataengineering,t3_1ldgdxu,False,
my9hdcy,"Thanks, will contact you there",Firm-Huckleberry-316,2025-06-17 13:50:10,2,dataengineering,t1_my9gfd7,True,
my851eq,No i am actually looking for data engineering perspective AI use cases and learning. Other wise it will become too vast for data science n all,Firm-Huckleberry-316,2025-06-17 07:33:59,1,dataengineering,t1_my84mhl,True,
mzcqkvh,"Does it work, is it secure enough and are the costs acceptable? Then it's not shit. Is it easy to understand and to expand? Then it might actually be good!Of course it can be done in different ways, for example using dbt to call stored procedures strikes me as a bit odd, as -in my experience- dbt takes care of many things that you could otherwise use stored procedures for. But of course, you might have your reasons. Also, dbt only had community supporter SQL Server connectors, which can be fine, but if the community stops supporting it, you might fall behind on versions quickly (this happened for a while around the second half of 2023). Nothing of immediate concern, but something you may want to keep in mind.A while ago I had similar requirements but used Dagster on a VM for orchestration and hosting dbt (also storing data in blob storage), so I avoided Azure Data Factory and Azure Functions. I don't think this is a better or worse approach, but it's an alternative to reach a similar goal. I'm curious what people would recommend instead, but keep in mind my first sentences: if it's working, secure and cost acceptable, it's not shit.",nl_dhh,2025-06-23 16:26:35,9,dataengineering,t3_1likkfo,False,
mzcnzw6,High level that sounds good to me,nightslikethese29,2025-06-23 16:14:28,2,dataengineering,t3_1likkfo,False,
mzcnlv8,![gif](giphy|SxhDfgXq4nAYoKkvbR|downsized),x246ab,2025-06-23 16:12:37,1,dataengineering,t3_1likkfo,False,
mzdqldc,"Just break it down and if you do these things then it a good pipeline:Segregation of duty:Data acquisition: do you functions only achieve one thing? Are the repeatable, tastable and can they recover from transient errors or can they be invoked with some form of state to give recovery? Data movement: is schema change accepted in loving your data? Is you data movement resilient to schema change in order to garantee you move data to a persistent sink as per requirements? Is you etl/elt support by ci/cd, is it automated on triggers (any type) is it costs effective and does it handle increased volume without exploding costs /time? It sounds like. The answer to all of those would be either a ""yes"" or a ""it could be made to easily"" Your pipeline sounds great, good on you for using function app to handle different and varying api calls rather than making something over complex.",mzivtins_acc,2025-06-23 19:13:31,1,dataengineering,t3_1likkfo,False,
mzeyzl3,Seems fine by me!,lysis_,2025-06-23 22:55:12,1,dataengineering,t3_1likkfo,False,
mz6r8c3,"Few ways to do it, but if you’re already using Databricks you could set up a workflow on a schedule that runs a notebook to call your API and dump the data straight into UC",GuardianOfNellie,2025-06-22 17:42:48,6,dataengineering,t3_1lhsd45,False,
mz78i44,"- Use a single node cluster on a workflow. Having multiple workers doesn’t help you here. - make two async (use nestio for notebook async) functions, one to call the endpoint, the other to write out the file (external volume?). Then loop through them accordingly.- Reach out to your account rep, there is an api ingestion connector for lake flow either coming or already out.",TripleBogeyBandit,2025-06-22 19:10:04,2,dataengineering,t3_1lhsd45,False,
mz98ri6,dlthub simplifies ingesting data from rest endponits. i believe they support databricks as a destination.,Unlock-17A,2025-06-23 01:49:39,2,dataengineering,t3_1lhsd45,False,
mz6t2pb,Was thinking this as a solution too. Any recommendation on looping through the various endpoints or a separate workflow for each? Leaning towards looping through with error handling on each endpoint,SRobo97,2025-06-22 17:51:42,1,dataengineering,t1_mz6r8c3,True,
mz7uzg8,Thanks for this!,SRobo97,2025-06-22 21:06:24,1,dataengineering,t1_mz78i44,True,
mz6tulh,"You can use one workflow with multiple tasks within it, so one Notebook per endpoint.I can’t remember but I think if you don’t set task dependencies within the workflow they’ll run in parallel",GuardianOfNellie,2025-06-22 17:55:26,3,dataengineering,t1_mz6t2pb,False,
myy2c4l,https://learn.microsoft.com/es-es/sql/machine-learning/tutorials/demo-data-airlinedemo-in-sql?view=sql-server-ver16,Rough-Swing-972,2025-06-21 06:18:24,1,dataengineering,t3_1lgoyqg,False,
mza6qr4,Wow are you me from the past?,SquarePleasant9538,2025-06-23 05:42:30,1,dataengineering,t3_1lgoyqg,False,
mzab60y,Did you also have reality check when started working in aviation?,One_Nature4993,2025-06-23 06:21:59,1,dataengineering,t1_mza6qr4,True,
mzaex82,"Oh I just read your post again properly. I started as an aircraft electrician at an airline, but slowly moved into data engineering.Yeah it’s gonna be rough for you going in without the domain knowledge. I worked at one of the oldest airlines in the world so the people were quite challenging. They didn’t respect anyone with less than like 20 years service. Which data are you working with?",SquarePleasant9538,2025-06-23 06:57:01,1,dataengineering,t1_mzab60y,False,
mzafibe,"Oh that's really cool career path!But I don't have issue with respect and people in general. My ""worry"" or just something I eas not use to is outdated tech, lot's special software which is also pretty outdated, multiple different sources that are very complicated to put together and create some more complex projects ( for example basic data about flights and data about passengers) and so on.Maybe it's specific to setup that is in my company but it's something I'm not use to from my past experiences",One_Nature4993,2025-06-23 07:02:35,1,dataengineering,t1_mzaex82,True,
myx6e9k,"I’d say pick one between: Designing Data Intensive Applications, The Data Warehouse Toolkit, and SQL Antipatterns: Avoiding the Pitfalls of Database Programming",linuxboi231,2025-06-21 02:15:10,8,dataengineering,t3_1lgk872,False,
myx8mgy,Fundamentals of Data Engineering by Joe Reis,namnmi21,2025-06-21 02:29:20,9,dataengineering,t3_1lgk872,False,
myzf0yt,"Perhaps [Becoming a Data Head](https://www.amazon.com/Becoming-Data-Head-Understand-Statistics/dp/1119741742) might be a good read?Judging by the reviews, it is a high level read on how to think in terms of data science. Do keep in mind that it is not a book super-specific to DE stuff so if you are trying to learn DE as fast as possible then please ignore my suggestion :)",Cyber-Dude1,2025-06-21 13:30:31,1,dataengineering,t3_1lgk872,False,
myx6603,Interesting,optop17,2025-06-21 02:13:44,1,dataengineering,t3_1lgk872,False,
mytu84o,Start with the questions that users want to answer using PBI,New-Addendum-6209,2025-06-20 15:37:37,8,dataengineering,t3_1lg6v0f,False,
mytwk8y,A star schema is used to answer analytical queries - so your starting point should be to list the (or sample) queries you want to be able to answer.The structure of a star schema is independent of/unrelated to the structure of any source system(s) that might be used to populate it.https://www.amazon.co.uk/Data-Warehouse-Toolkit-Definitive-Dimensional/dp/1118530802/ref=mp_s_a_1_1?crid=2G133O3IQOPDF&dib=eyJ2IjoiMSJ9.Z2UrxOjmDPu17XOHJRUhrCZPcSRZQJGIz6DNarWBuVsIVG41X39A_mbzQPcSCiJ2VBFKVWlnpjNXc4_hQqGJaui8_bFRl7ieTY8DYQnreDjYJA03pIqpKJZqo-pG-27-0R15XOwRmrVKiXIf5JygTB7Ob9E29GD0nTLmRryYXIsGPshoSPEv16tIWMfI1RSbfcK0KkOxjF04PTklFtDSmQ.5QIqUC7VPKGwyNbfp_VzTnCXFpklRFqcRiXpPPh9-Bo&dib_tag=se&keywords=kimball+data+warehouse&qid=1750434500&sprefix=kimball%2Caps%2C80&sr=8-1,NW1969,2025-06-20 15:48:42,4,dataengineering,t3_1lg6v0f,False,
myttgxd,"What database are you using? This will have a big impact on how you go forward at this level of the discussion. You will need to know what features your RDMS is good at. Before that though, why are you doing this? What is the current design not doing? I'm not saying it can't be improved, but the form of the database should normally follow the functioning of the company.",marketlurker,2025-06-20 15:33:59,1,dataengineering,t3_1lg6v0f,False,
mytxkfu,You are right. I've added some more info about the questions i need to answer in the post.,the_aero_guy,2025-06-20 15:53:30,1,dataengineering,t1_mytu84o,True,
myuk6sb,"I've added some of the questions in the end of my post. Those are some metrics the stakeholders want to see. The point here is: with those questions in hand, how can I start doing my modeling? Is there a way/framework/sort of ""instructions"" I can follow? I found this book and I've heard about Kimbal, one of the most known figures in DW. I will definitely look for the answers for my questions there, but if possible i would like to know from you, since I do not have so much time do dig deep into the theory right now. Any extra orientations would be great!",the_aero_guy,2025-06-20 17:41:31,1,dataengineering,t1_mytwk8y,True,
mytw77v,"In order: It is a federated database from SQL Server we brought to Databricks. This data comes from an app another team built for internal use of the company. I am doing this because my team needs to show some metrics in PowerBI for the stakeholders be able to follow the activities closely and we saw the necessity to make this data modeling. Some of those metrics:\* the status of the reports of Type A and B's (are they open? are they closed?) for each location (lat long data is in TableA) and the map plot to show where each report where filled (independently of the B type of the report)\* The distribution plot for the level of criticality: how many B reports for each level (10 for low level, 3 for mid level and 4 for high level)\* alerts for activities that are next to deadlineAnd etc.There are other metrics I need to show.Hope I answered you well!",the_aero_guy,2025-06-20 15:47:00,1,dataengineering,t1_myttgxd,True,
myur8oy,"1. Define your measures2. Define the grain of each measureMeasures with the same grain can, but don’t have to be in the same fact table. Measures with different grains cannot be in the same fact table3. Decide the attributes that you want to use to filter or aggregate your measures by. Group these attributes into dimensions.",NW1969,2025-06-20 18:15:08,3,dataengineering,t1_myuk6sb,False,
myatuje,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 17:39:17,1,dataengineering,t3_1ldtkg3,False,moderator
myatuhk,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 17:39:16,1,dataengineering,t3_1ldtkg3,False,moderator
mybk76q,"Thanks for sharing the project u/ResortApprehensive72 I also love building projects from scratch to really understand concepts or deepen my knowledge about a topic. Maybe add some features or plans for roadmap and CONTRIBUTING guidelines to folks start providing feedback. I really like the [https://sadservers.com/](https://sadservers.com/) exercises, maybe your project could be a nice sandbox to help people with database internal problems interviews?",marcos_airbyte,2025-06-17 19:42:27,1,dataengineering,t3_1ldtkg3,False,
mybvpmn,"Thanks, I appreciate it! For now, it’s just a learning project, but I might plan to extend it in the future. I’m using data (de)serialization methods that aren’t exactly how a real database stores data, since I believe real databases directly cast raw bytes. That’s something to keep in mind. Still, I think this project can help someone understand how a real database works, at least in a simplified way.",ResortApprehensive72,2025-06-17 20:36:33,2,dataengineering,t1_mybk76q,True,
myjcdr4,cheers!,SadServers_com,2025-06-18 23:06:22,1,dataengineering,t1_mybk76q,False,
mya6ouh,"I skimmed it looking for some meat, but left hungry. I think I agree with the premise, but it's just a bunch of preamble and fluff.",nickchomey,2025-06-17 15:52:18,15,dataengineering,t3_1ldpc65,False,
myayx3t,"I am the same when reading this blog post. Very high, surface level content. Also, more IT focused than a data strategy should been I think. Needs to tie business outcomes to the tech. The three points you mentioned are only some elements that would be part of a larger strategy (data governance and stewardship, align business information flows to a high level design, data security, align other parts of the business to the high level strategy, and so on). This feels more like a section of a larger strategy solution rather than a full explanation of what a data strategy could be.",No-Challenge-4248,2025-06-17 18:02:00,1,dataengineering,t3_1ldpc65,False,
mya86j8,Thank you [nickchomey](https://www.reddit.com/user/nickchomey/) for commenting here. What would have made it for better blog. This is my first time trying so please be critical as I am looking to learn and improve.,UnderstandingTop1424,2025-06-17 15:59:20,2,dataengineering,t1_mya6ouh,True,
myb03mq,Thank you. This is a great feedback,UnderstandingTop1424,2025-06-17 18:07:28,1,dataengineering,t1_myayx3t,True,
myak1v2,"less preamble, fewer bullets, more actionable information - perhaps even with real code from a real situation.Also, I suspect that an LLM could actually give you good feedback on something like this (just dont let it do the actual writing for you). Here's a start [https://chatgpt.com/share/68519e5a-ca54-8009-b933-c3c6e12515d9](https://chatgpt.com/share/68519e5a-ca54-8009-b933-c3c6e12515d9)",nickchomey,2025-06-17 16:55:25,7,dataengineering,t1_mya86j8,False,
myaqzoh,Thank you,UnderstandingTop1424,2025-06-17 17:26:30,1,dataengineering,t1_myak1v2,True,
mysa1la,Pandera if you use csv. Otherwise parquet is just better. that has build in schemas.,None,2025-06-20 09:55:24,5,dataengineering,t3_1lfykr8,False,
mysszp0,Pass every row through a Pydantic Model that represents the schema.,MonochromeDinosaur,2025-06-20 12:20:50,5,dataengineering,t3_1lfykr8,False,
myrzrl7,Use pandera with pandas. You can define a schema and valudate your dataframe with the schema,psgpyc,2025-06-20 08:15:16,2,dataengineering,t3_1lfykr8,False,
mysebf3,How is the schema currently expressed?,Competitive_Ring82,2025-06-20 10:33:30,1,dataengineering,t3_1lfykr8,False,
mystaa8,As a dictionary.,ReportAccomplished71,2025-06-20 12:22:42,1,dataengineering,t3_1lfykr8,True,
myuvzu5,Not trying to be a smartass but I find ChatGPT is very good at quickly building functions to test for stuff like this,PresentationSome2427,2025-06-20 18:38:27,1,dataengineering,t3_1lfykr8,False,
myuwkgp,Thanks. I’ll try this out.,ReportAccomplished71,2025-06-20 18:41:19,1,dataengineering,t1_mysszp0,True,
mz68jp0,"Wouldn't recommend itereting row wise in python for larger datasets, as it's slow. Instead, decide your strategy to handle incorrect data e.g. Drop, nullify, raise an error etc. Then you can you can handle that at the ingestion stage with pandas or polars (personal preference towards polars",pin-i-zielony,2025-06-22 16:09:27,1,dataengineering,t1_mysszp0,False,
mys02ay,Thanks. Pydantic can be used with pandas dataframe. I also heard about Cerberus will it help,ReportAccomplished71,2025-06-20 08:18:13,1,dataengineering,t1_myrzrl7,True,
myszj0i,"We’re using Pydantic at the mo, but I’m going to check out Pandera’s integration with Polars",Nightwyrm,2025-06-20 13:00:33,1,dataengineering,t1_mys02ay,False,
mynvvqo,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-19 17:11:05,1,dataengineering,t3_1lfg8ii,False,moderator
myo8fri,"We use Azure and we basically have multiple versions of every resource, including our APIs and data lake.  So there are dev, test, and prod versions of ADF, ADLS, etc. Each resource only connects to other resources in the same environment. Configurations are managed through Azure Repos and we deploy changes to higher environments through ADO pipelines.",TheSocialistGoblin,2025-06-19 18:14:19,3,dataengineering,t3_1lfg8ii,False,
myp2k6k,"DE books and posts often softball this issue. Many times you have no control over your data sources - they're not setting up cdc, they're not setting up a replicated DB, and you're forced to query to get the data by last update date (which you can't control or tune). Given these constraints you often have to just focus on doing things at lower times and hopefully get a decent index put in in the sourc.e",PencilBoy99,2025-06-19 20:46:52,3,dataengineering,t3_1lfg8ii,False,
myq5oj7,"We use ETL for all if our applications. So we have a dev, prod, and sometimes a staging environment. Then our dbt projects run separately using prod, dev, and staging environments. This allows us to test without messing up pros",Ok-Working3200,2025-06-20 00:18:12,1,dataengineering,t3_1lfg8ii,False,
mypq8d9,This. In AWS land we would have separate environments in separate accounts for security reasons.,technowomblethegreat,2025-06-19 22:50:17,2,dataengineering,t1_myo8fri,False,
myljrk0,it is very lovely to think that such precise resources of GPUs can be used by data engineering.,liprais,2025-06-19 08:25:56,2,dataengineering,t3_1lf56a3,False,
mylhljj,No longer is regex and like matching your enemy!That's all I'll say!Maybe that and geospatial stuff might get A LOT FASTER...,pceimpulsive,2025-06-19 08:04:36,1,dataengineering,t3_1lf56a3,False,
myh7etv,"(I'm with DBOS) Research paper details how BMS rearchitected a genomic data file transfer pipeline that processes 1000s of files per week. Built with Python and the DBOS durable execution library, durable Queue abstraction in DBOS allowed BMS to meet three challenges simultaneously: letting VM workers execute tasks in parallel, durably tracking tasks that need to be completed and making pipeline activity observable (an FDA requirement). Paper also benchmarks reduction in file processing time from 5.6 hours to 8.1 minutes. DBOS libraries for Python and TypeScript: [https://github.com/dbos-inc](https://github.com/dbos-inc)",databACE,2025-06-18 16:50:17,1,dataengineering,t3_1lem0e0,True,
mys3i0l,Sometimes I do and then I end up spending the rest of the day cleaning up the mess.Then I open up my Itzik book and problem is usually solved.,Middle_Ask_5716,2025-06-20 08:52:14,1,dataengineering,t3_1ldrdoy,False,
mzeryzp,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 22:16:59,1,dataengineering,t3_1liu7tz,False,moderator
mzeugf1,Why not make a class and pass the spark session to the class and then call the the spark session within the function using self? This would clean up your functions and reduce repetition.,unluckycontender,2025-06-23 22:30:24,3,dataengineering,t3_1liu7tz,False,
mzetzf7,I always like passing spark because it makes it much easier to write tests,sahilthapar,2025-06-23 22:27:50,2,dataengineering,t3_1liu7tz,False,
mzfazge,This is the way.,Physical_Respond9878,2025-06-24 00:01:27,1,dataengineering,t1_mzetzf7,False,
mz5jg1p,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-22 13:57:22,1,dataengineering,t3_1lhoidk,False,moderator
mz5n9sg,"I have no thoughts on zoom camp but as a fellow mechanical engineer turned data/analytics engineer I would suggest looking for roles that mention manufacturing IoT work. That’s how I made the transition work pretty seamlessly. Obviously I spent lots of time outside of work learning on the side but here was the career path I took:Manufacturing engineer: I had a few roles before this that were more design focused and even though I hated manufacturing it was vital experience to get my foot in the door for the next step.Automation Engineer: worked and learned alongside controls engineers and IT networking experts to bring data from machines to databases for various use cases. Learned some PLC programming (don’t really use it now), a lot about networking and various data transfer protocols, and a lot of data modeling/reporting. I also got the chance to use some of my own data that I collected to mess around and try to build machine learning predictive maintenance models. The models didn’t perform well (for reasons outside my own control), but I learned a lot. I got much better at both SQL and Python and general problem solving.Data/Analytics Engineer: with all the experience I gained from my previous role I was able to make my way into a junior data role by taking a pay cut and just speaking really passionately about data (which I genuinely am). Since then I’ve learned a shit ton about good programming principles/procedures, working in a platform like Databricks, and how to communicate with business partners about data projects.I’ve since been promoted in this role and absolutely love the work that I do. I find it engaging and I continue to learn every day. If you have additional questions let me know but I hope this helps a bit.",Reddit_Account_C-137,2025-06-22 14:18:42,6,dataengineering,t3_1lhoidk,False,
mz5mkvt,These camps are selling pickaxes during the gold rush. If you want to find out if you like DE sure go ahead but it will not make you competitive. Get any data related job or a job at a data related company and work your way up or in like many of us have. Getting a CS degree is the only classes I would recommend that will directly help you.,boboshoes,2025-06-22 14:14:57,5,dataengineering,t3_1lhoidk,False,
mz617f3,"I've enrolled in their program and another paid bootcamp, and now I am actively looking for jobs. I would say their program is pretty good for introduction to DE, I respect their contribution to the community. However, there are so many details or problems you need to consider when you are working a real-life project, and some of them are extremely critical for interviews. The lack of depth in their course design (because it's only three months) means you need to take the initiatives to explore way more than they provide to you within the curriculum, which also stands if you enrolled an expensive bootcamp. I was asked a system design question during an interview to design a real-time pipeline, so get prepared for a decent resume, different problems or challenges you might encounter during a project, lots of SQL questions, Python programming questions (maybe not Leetcode style), and system design questions. P.S, in my opinion, sometimes I tend to ignore some people's advice like getting a CS degree or get a job in the data field first. I am not saying they're wrong, but their suggestions are based on their background and experience. It stands 10 years or 5 years ago, but nowadays even CS new grads are also struggling to get a job, some people became a DE because there were so many opportunities. I might offend many DE but this is my point view.",Internal-Daikon7152,2025-06-22 15:31:48,2,dataengineering,t3_1lhoidk,False,
mz8s27w,"I did a similar thing, I was an aircraft engineer. Start by doing data within your industry.",SquarePleasant9538,2025-06-23 00:12:54,1,dataengineering,t3_1lhoidk,False,
mz6551w,"Very good, especially if it contains buzzwords like former faaaaaaaaang employee , learn sql in 30minutes and how ai will take your job.",Middle_Ask_5716,2025-06-22 15:51:49,-3,dataengineering,t3_1lhoidk,False,
mz5v2kp,Forumer mech eng brah here who still knows people in the industry and I'd strongly agree with this. There is more and more data from IoT.I burned my entire 10 year eng career to the ground and started again in life sciences R&D for... reasons. It worked for me but I would not recommend this as the best route into DE in 2025!,speedisntfree,2025-06-22 15:00:10,5,dataengineering,t1_mz5n9sg,False,
mz849dj,1. What did you hate about manufacturing?2. I notice a lot of Mechanical & Electrical Engineers specifically end up in IT but don’t engineering jobs themselves pay more and maybe come with more prestige? I’ve always been curious about this.,khaili109,2025-06-22 21:56:07,2,dataengineering,t1_mz5n9sg,False,
mz67a53,Thanks for the suggestion. Currently I'm looking for a job so i believe getting directly into DE is better instead of find a mech related roles and enter into DE role later.,Tall_Ad_8216,2025-06-22 16:02:50,1,dataengineering,t1_mz5n9sg,True,
mz53q5i,"Epic does provide their own data warehouse Caboodle which is a mssql db and would be the easiest to pull from. If you need more transactional data, their FHIR API would be the way to go",wtgserpant,2025-06-22 12:16:03,4,dataengineering,t3_1lhkt21,False,
mz9hh2x,"What's the scope? All patients? A subset? How many patients? What are you retrieving? Orders? Billing? Drugs? Procedures? The FHIR api is really for talking to other healthcare systems, not the DW. Why do you have to use nifi? As the other person said caboodle or clarity is the right solution for a DW target most of the time. Have you talked to your epic integration team? I would be surprised if they allowed the workflow you are describing.",arborealguy,2025-06-23 02:39:41,1,dataengineering,t3_1lhkt21,False,
mz5cow0,my company uses snowflake.i need to load the data to snowflake via apache nifii will look into the FHIR API,Fearless-Yam-3716,2025-06-22 13:16:49,0,dataengineering,t1_mz53q5i,True,
mz9kmuo,"i just need few subset of details demographic,accounts,patient,appoinments its all about getting the data into the snowflake and thats all i know as the project is in inital stage",Fearless-Yam-3716,2025-06-23 02:58:36,2,dataengineering,t1_mz9hh2x,True,
mzckxoy,"That's a lot of data, believe it or not. Depending on number of patients nifi won't work. Ask why standard clarity or caboodle isn't an option.",arborealguy,2025-06-23 15:59:54,1,dataengineering,t1_mz9kmuo,False,
mzcomrr,sure got it,Fearless-Yam-3716,2025-06-23 16:17:27,1,dataengineering,t1_mzckxoy,True,
mysbd3g,"Proper way is, in fact, having scripts in production.That is mainly (but not only) for reasons relating automated testing, CI/CD, maintainability etc…However, Databricks has released a ton of features making notebooks not so bad to work with in those contexts.In addition, I think that those reasons exists mainly because, historically, we used to submit scripts as jobs and all the practices revolved around that.So, unless your development workflow and processes are very solid and, thus, require you to use scripts (or unless you have the expertise to create those processes) I would say go for notebooks because you will not get that much of a benefit otherwise.Also, speaking of productionalize, look into job clusters, serverless computing to reduce running costs. P.s. for the commenters, let me know what you think, what I said is very open to discussion as this is an interesting topic.",Awkward-Cupcake6219,2025-06-20 10:07:25,3,dataengineering,t3_1lfywaz,False,
myusgzu,"Once the code works in a notebook, you can create a Databricks job based on the code. You can also add scheduling and alerts into the job as well to make it more ""mature"".Your Databricks job should fetch a code from a git repo (we use GitHub) and everytime the code changes you should pull the branch in Databricks too (might have a way to automate this but I never bothered to check).In addition, make sure that you have multiple branches (dev and prd for example) and they point to different DB databases (e.g. mydb_prd and mydb_dev). One simple way to ""sync"" the two is to just make dev tables views pointing to prd tables.If you are doing streaming, Databricks has a few articles about that too.",redditthrowaway0315,2025-06-20 18:21:08,3,dataengineering,t3_1lfywaz,False,
mysew0y,"You can work with notebook in DataBricks and have it in production just fine, but you need to create your pipeline and tests around it.",BrunoLuigi,2025-06-20 10:38:24,2,dataengineering,t3_1lfywaz,False,
mytowh1,"I have been overhearing a couple devs talk about trying to make our databricks enviornment follow some better practices they want a (dev, uat, prod) environment. I think the plan is to use databricks asset bundles to handle the [https://docs.databricks.com/aws/en/dev-tools/bundles](https://docs.databricks.com/aws/en/dev-tools/bundles) then not using notebooks for anything except exploratory type work. I'm not sure if the full dev/uat/prod workspace separation is best practice since in azure you can only have 1 metastore per azure region. But I will 100% agree with trying to get away from notebooks for automated scripts that run.",ggeoff,2025-06-20 15:12:04,1,dataengineering,t3_1lfywaz,False,
mz4cg17,"Databricks asset bundles is the recommended best practice for cicd in databricks (including production) and it’s very straight forward to configure/ implement, integrating with GitHub etc. you can choose to run your code in a notebook or scripts or many other ways, if you like notebooks you just configure this as a notebook task (or many) in DABs and define your workflow in steps. I generally suggest running jobs via service principals in prod. It shouldn’t really matter whether you execute your code as notebook or scripts, both are supported and can be run via service principals. Scripts are generally a cleaner way to do this but if you run notebooks in prod just make sure you check right permissions are in place etc",InteractionHorror407,2025-06-22 08:03:19,1,dataengineering,t3_1lfywaz,False,
mynksmq,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-19 16:17:15,1,dataengineering,t3_1lfevqh,False,moderator
myo32cf,Dbt/sqlmesh,Zer0designs,2025-06-19 17:46:40,5,dataengineering,t3_1lfevqh,False,
mynll5h,https://airflow.apache.org/docs/apache-airflow-providers-openlineage/stable/guides/user.html,ReputationNo1372,2025-06-19 16:21:07,3,dataengineering,t3_1lfevqh,False,
myo481i,Are you using DBT ?,Aggressive-Practice3,2025-06-19 17:52:31,3,dataengineering,t3_1lfevqh,False,
mz1t2ja,"I was going to say dbt / sqlmesh, but saw you are doing videos. Check out Datahub. They have an API and they do ingest metadata from Airflow so it might do what you need.",Hot_Map_7868,2025-06-21 21:18:31,1,dataengineering,t3_1lfevqh,False,
mz3fbwv,"After exploring lot of tools, I found datahub lineage is really good.",PerceptionCautious82,2025-06-22 03:19:37,1,dataengineering,t3_1lfevqh,False,
mynmv00,I looked into it but it and played a bit around with it. I‘m missing an actual implementation of it tho. I found Marquez but it still very early days and much functionality I found missing,imbettliechen,2025-06-19 16:27:17,1,dataengineering,t1_mynll5h,True,
myo5ytc,Not so far. The data that we are processing are videos,imbettliechen,2025-06-19 18:01:24,0,dataengineering,t1_myo481i,True,
myps1j4,I did have a play with Acryl DataHub who provide their own version of the Airflow OpenLineage library that works quite well and a little nicer than Marquez. The gotcha we’re slowly working through with the baseline Airflow OL (at least in 2.10) is that not all the features are supported by PythonOperator so there will be some extra work required to extract and emit your desired metadata.,Nightwyrm,2025-06-19 23:00:29,1,dataengineering,t1_mynmv00,False,
myo6g09,Umm in that case you will have to build something of your own. Would be super interesting to build actually,Aggressive-Practice3,2025-06-19 18:03:52,1,dataengineering,t1_myo5ytc,False,
mymxz6r,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-19 14:26:29,1,dataengineering,t3_1lfc5eq,False,moderator
myncvlj,"You can dig into various commit protocols and implement your own for the storage layer you are writing to, which will have specific characteristics. For example HDFS allows you to rename files atomically, but s3 has no such functionality. You can start to read more about committers here:https://stackoverflow.com/questions/70008471/what-are-the-spark-s3-or-s3a-committers-in-simple-words-and-when-i-should-use",No_Equivalent5942,2025-06-19 15:39:02,1,dataengineering,t3_1lfc5eq,False,
myn44fp,"My need is to be able to do 4 operations on a table in a single transaction to maintain atomicity, my constraints are to do it in python",PuzzleheadedRule4787,2025-06-19 14:56:39,1,dataengineering,t1_myn24jo,True,
myryez6,Ok thanks you for that,PuzzleheadedRule4787,2025-06-20 08:02:24,1,dataengineering,t1_myncvlj,True,
myhjkoy,"Isn't Trino considered one of the go-to tools for querying data in lakehouse architectures, such as Iceberg?\*My initial knowledge, but wondering the same as OP",EHR1188,2025-06-18 17:45:36,4,dataengineering,t3_1lemi3l,False,
myhntk7,"You should use trino. Athena blows, redshift also blows",ReporterNervous6822,2025-06-18 18:04:53,3,dataengineering,t3_1lemi3l,False,
myjti42,"Trino. Using it with iceberg on minio, no problem.",robberviet,2025-06-19 00:43:28,2,dataengineering,t3_1lemi3l,False,
myjznnb,Trino. I think it is becoming an industry standard at this point,luminoumen,2025-06-19 01:20:18,2,dataengineering,t3_1lemi3l,False,
myrsmvf,Trino on EMR or EKS,wolf-f1,2025-06-20 07:06:27,2,dataengineering,t3_1lemi3l,False,
myjdfyv,"Trino is awesome. Very active community and things just work out of the box with tons of connectors. However, based on my non-scientific usage, I find Starrocks to be almost 1.5x to 3x faster for iceberg queries.But misses out on value add features and leas polished.Trino is like an apple product and Starrocks is like a top of the line Android",frazered,2025-06-18 23:12:05,1,dataengineering,t3_1lemi3l,False,
myk37q3,"absolutely Trino is your guy. in fact, Athena is build on Trino, but most see it as a stepping stone to running a more native Trino cluster when data scales beyond its sweet spot. DISCLAIMER; Starburst DevRel. [https://aws.amazon.com/blogs/storage/build-a-managed-apache-iceberg-data-lake-using-starburst-and-amazon-s3-tables/](https://aws.amazon.com/blogs/storage/build-a-managed-apache-iceberg-data-lake-using-starburst-and-amazon-s3-tables/) shows you how to set up S3 Tables with Starburst Enterprise (same connector properties for OSS Trino) and [https://www.starburst.io/blog/amazon-s3-tables-starburst/](https://www.starburst.io/blog/amazon-s3-tables-starburst/) shows you how to do it in our hosted Trino-based Starburst Galaxy solution.",lester-martin,2025-06-19 01:41:46,1,dataengineering,t1_myhjkoy,False,
myhw4rh,Why Athena blows?,sazed33,2025-06-18 18:44:13,1,dataengineering,t1_myhntk7,False,
myk5mcp,Trino dev advocate here from Starburst. Haven't ever heard the Trino-apple thinking but as a fanboy of my apple ecosystem I think I like it. :),lester-martin,2025-06-19 01:55:46,2,dataengineering,t1_myjdfyv,False,
myikcsl,Scales terribly against larger data. Pay per query usage. Lags far behind upstream trino,ReporterNervous6822,2025-06-18 20:40:50,2,dataengineering,t1_myhw4rh,False,
myalmgv,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 17:02:31,1,dataengineering,t3_1ldslel,False,moderator
myapbo8,Titles don't matter. Pursue the tech and experience. People use business titles (ie: short hops from actual) on their resumes all the time.,DistanceOk1255,2025-06-17 17:19:06,3,dataengineering,t3_1ldslel,False,
myhxq6u,Ah man you are suffering from success .Ha ha after some years try GCP also .,Jealous_Cricket6440,2025-06-18 18:51:52,1,dataengineering,t3_1ldslel,False,
mzce8k6,"If you want to continue working in the DWH side, here is my advice:You don't really need a lot of technical knowledge. You can pick optimization and DB internals along the road -- you don't get to read the source code of modern DWH plus you probably won't be able to read them anyway, and most of the optimization guides are just a few web pages so you only need to memorize and understand those. And since you are just ingesting data into DWH, most likely you don't need to write raw ingestion code -- and even if you do, it is going to be way smaller scale than Netflix.Basically the task falls into two parts:\- Gathering requirements from stakeholders and make sure you clarify every question before moving into implementation stage. It's difficult and sometimes impossible, depending on the quality of the stakeholders, most of whom don't know what they want anyway.\- Put up tests, alerts and monitoring into each pipeline.That's pretty much it. Apparently the people part is way more important and difficult than the technical part. It's essentially sort of BI analyst job.Oh and good luck on Fabric.",redditthrowaway0315,2025-06-23 15:28:34,2,dataengineering,t3_1liiwat,False,
mzcepkj,Thanks for the detailed but straightforward advice. Greatly appreciate it!,hedgehogist,2025-06-23 15:30:49,2,dataengineering,t1_mzce8k6,True,
mzarsah,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 09:05:10,1,dataengineering,t3_1libt0b,False,moderator
mzb2g9q,"I work at NatWest, Just in case if this information helps you, In my current project, we use Snowflake, Airflow, Spark, Pyspark, Cloudwatch, Streamsets, AWS Tech Stack ( SNS, EC2, Lambda, EMR, Athena etc ). You can dm me for any other information.",OkMouse303,2025-06-23 10:45:36,5,dataengineering,t3_1libt0b,False,
mza2v4f,"We had one multiplexed event stream ingestion. It helped because what would otherwise have been an individual topic only had a small trickle of records with occasional bursts -- not enough to justify running a separate streaming ingestion job for each, nor to handle the overhead of parquet+deltalake over individual row writes.So we bundled everything into one big stream with a wrapper around each event to indicate which type it was, which just helped with later processing.The advantage for us is we could run each downstream job on any schedule we wanted, all the data was there in the big ingestion table. Technically there is overhead with reading all the other data, but compared to reading directly off of kafka (or similar) it was still much faster to pull off lake storage.Another advantage was the sharing of overhead on the streaming size. Basically all the topics combined shared the same overhead or cluster oversizing, so while an individual 'topic' might burst to 10x traffic, since it only makes up 10% of the overall bandwidth, it would not shift performance demands too much. It kept usage reasonably predictable.Low latency use cases still ran off the original topics. The combined one was just for long term storage and batch processes.",azirale,2025-06-23 05:09:49,2,dataengineering,t3_1lhruwi,False,
myu3mre,It’s involved mix of both. But most of the data processing related to sales and expenses because they want to see profit and loss of the company. Also finance collegues want everything in excel so even if you have something in data base or as a semantic model in power BI you will still be requested to provide the data in excel,OkHorror95,2025-06-20 16:23:00,10,dataengineering,t3_1lg7n3v,False,
myulnxr,"It gets hectic during monthly or quarterly bill runs ,even need to work on weekends if business requires it",Acrobatic_Treacle_62,2025-06-20 17:48:26,3,dataengineering,t3_1lg7n3v,False,
mz0zibq,"Just to clarify, do you mean working as a Data Engineer in a finance team (like building pipelines for financial reporting), or specifically in FinOps (cloud financial operations)?",LowerDinner8240,2025-06-21 18:35:30,1,dataengineering,t3_1lg7n3v,False,
mytwesx,"The current situation isn't great. Bot identification should really happen upstream at an event or session level. If analysts can't identify individual bot sessions then it's likely the adjustments are being used to smooth outputs to create reports that look clean but are not necessarily accurate.You could try to implement clearly defined rules or a predictive model to identify anomalies at the required level of aggregation (eg. use a comparison to moving average or YoY metrics), but that still runs the risk of smoothing data in a way that could compromise accuracy.",New-Addendum-6209,2025-06-20 15:48:00,6,dataengineering,t3_1lg6kub,False,
myuc5ay,"Not great, but I had to do this before. At the end of the day, the business decides what they want to report and how it is calculated. My suggestion:- Create an ""adjustment"" metric that defaults to zero or null. This is the one provided by analysts, this way you keep track of their adjustments separately;- Create a downstream calculated metric that sums your numbers taken from the source with the adjustment, and that's what goes into reports;- Document and get agreement from whoever owns the metric. Then you avoid the overwrite and get tracking of adjustments that will support you if you ever want to make the case for fixing the problem at the source. If you can't get agreement on this approach, it may be that someone wants a way to hide numbers, which is a different problem.",bobbruno,2025-06-20 17:03:56,5,dataengineering,t3_1lg6kub,False,
mywy44f,"Your original DAG and target table should be upstream from whatever aggregate table the analysts use. If they want to make adjustments, then let them do it on their table. Their work should never feed back into source tables you're providing.",git0ffmylawnm8,2025-06-21 01:23:17,2,dataengineering,t3_1lg6kub,False,
mytobk0,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-20 15:09:20,1,dataengineering,t3_1lg6dsl,False,moderator
myu5fm6,"Streamlit for prototyping, dash for production. Rarely do you need anything more than that",newchemeguy,2025-06-20 16:31:46,3,dataengineering,t3_1lg6dsl,False,
myttgwp,do whatever interests you the most. you could make arguments either way based on a bunch of unknowns. just think about what you are mostly likely going to be doing / wanting to be doing and go that way. you can always pivot.,hotsauce56,2025-06-20 15:33:59,2,dataengineering,t3_1lg6dsl,False,
myttzeg,If you're sure you want to do a data role then simply use streamlit.Webdev skills are good to have to understand software development but not needed if you work in data.I have fundamental fullstack skills but since that I work in data&AI I don't really use these skills anymore.,Wingedchestnut,2025-06-20 15:36:27,2,dataengineering,t3_1lg6dsl,False,
mytptn5,Just focus on what you have to do,Available_Fig_1157,2025-06-20 15:16:27,1,dataengineering,t3_1lg6dsl,False,
mz9n99w,"I think there are two data ""engineering"" worlds that are completely separate from each other.The first world is the one that leans towards software engineering (well, it is software engineering, just with a focus on moving large amounts of data). This is the Kafka, Spark, Hadoop, Flink, Druid, NoSQL world. You would use these tools to complete projects such as real time data streaming, distributed computing, and moving petabytes of data around.Companies with a need to move massive amounts of data have use for this kind of data engineering: FAANG, Airbnb, Uber, and other companies that have serious needs to move petabytes of real time data and shit like that.The other side is BI and Analytics. This kind of data engineering can feature some code through use of APIs but nothing like the distributed computing Spark jobs and Kafka. Getting data for analytics is a lot more chill. Data doesn't have to be real time, maybe once a day or a week suffices. Stored procedures can reliably move large sets of data around. The skill set here is about analytics and SQL. No python, no system design, no fancy algorithm. It becomes more so a practice in how good you are at understanding the business, using that knowledge to analyze the data, and finally reporting on those connected dots with services like SSRS, Tableua, and Sigma, etc.Now, the HTML/CSS and Flask stuff is more like a back-end/full-stack Python engineering skill set. Throw in ReactJS for that front end your working and that's pretty much full-stack software development. I would try and figure out what you want to do first. Just remember: BI and Analytics data engineering is way different from the software engineering-esque data jobs.",storeboughtoaktree,2025-06-23 03:15:06,1,dataengineering,t3_1lg6dsl,False,
mzfi46f,Really depends on what you want to end product to be. If you are okay with less customization and a prototyped solution then streamlit. However most companies rarely use flask for deployment especially in the data analytics space,edimaudo,2025-06-24 00:43:23,1,dataengineering,t3_1lg6dsl,False,
myu1c8a,"Flask, HTML, CSS is for full stack engineers. Different career path. You’ll almost never use it as a Data Engineer.Streamlit is pretty good.Best investment would be to learn a dashboard visualization tool (ex. Tableau, Power BI, etc). That’s the final layer on most Data Engineering projects.Teams usually have Data Analysts build dashboards. Or they have “Full Stack” Data Engineers who build data pipelines *and* build dashboards.",TheRealGucciGang,2025-06-20 16:11:52,1,dataengineering,t3_1lg6dsl,False,
mybk38v,"why are you testing with large data? if it’s a e2e test, it should write where the destination is, otherwise integration test should be subset and unit test should be mock data",Ok_Expert2790,2025-06-17 19:41:55,3,dataengineering,t3_1ldwbhd,False,
myep4ag,"If that’s the case why don’t you use a makefile and transfer the fail data to a storage (gcs,s3,azure blob) ?",Aggressive-Practice3,2025-06-18 07:03:27,1,dataengineering,t3_1ldwbhd,False,
myl8sdb,Can't your tests write diagnostic data to a disk/s3?,TurbulentSocks,2025-06-19 06:41:13,1,dataengineering,t3_1ldwbhd,False,
myceplw,"the pipeline processes large, high-quality images, video, and pdfs. and there are a lot of edge cases to test…",BigCountry1227,2025-06-17 22:10:51,3,dataengineering,t1_mybk38v,True,
myqjmi3,"i was thinking about that, but i wasn’t sure if there was a “standard” (or easier) way",BigCountry1227,2025-06-20 01:40:50,1,dataengineering,t1_myep4ag,True,
my6psyo,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-17 01:19:52,1,dataengineering,t3_1ldafy5,False,moderator
my77ard,Tools come and go. Ability to deliver and get shit done is what matters the most.,Ok-Advertising-4471,2025-06-17 03:00:48,31,dataengineering,t3_1ldafy5,False,
my7ghdi,Repeat after me :# Snowflake is not an RDB,CrowdGoesWildWoooo,2025-06-17 04:01:27,15,dataengineering,t3_1ldafy5,False,
my6rb8a,I'd continue to use/learn spark in your off time if youre worried about losing that ability. Spark can be used to ingest/transform data in both platforms,HorseCrafty4487,2025-06-17 01:28:26,8,dataengineering,t3_1ldafy5,False,
my71h1s,we all have enough capacity to be good at both.just pick whatever feels more interesting and go back to the other later.,mailed,2025-06-17 02:25:54,4,dataengineering,t3_1ldafy5,False,
my6xurg,"I’ve seen way more Spark related jobs recently (US) and I think generally, it’s easier to go back to snowflake if you don’t like Spark. Snowflake is meant to be easier, but more expensive. So I would brush up on Spark and maybe build a few side projects with it then apply.",crevicepounder3000,2025-06-17 02:05:03,2,dataengineering,t3_1ldafy5,False,
my7hw0u,"Hone your modeling, SQL and coding skills. That's what matters at the end of the day.",Nekobul,2025-06-17 04:11:35,2,dataengineering,t3_1ldafy5,False,
myb7feh,do both.,None,2025-06-17 18:41:50,1,dataengineering,t3_1ldafy5,False,
my8bi64,U kind of also need to learn some tools before u “know all tools” and are able to deliver shit.,Beautiful-Hotel-3094,2025-06-17 08:39:46,7,dataengineering,t1_my77ard,False,
my78r5n,Agree 100%,data_ai,2025-06-17 03:09:38,2,dataengineering,t1_my77ard,False,
mzclqq0,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-06-23 16:03:43,1,dataengineering,t3_1likia1,False,moderator
mzefpbv,Maybe try https://commoncrawl.org/,LarryHero,2025-06-23 21:13:51,1,dataengineering,t3_1lijdsr,False,
myr8ty5,Nice!!!7.5 hours of interviews for a junior position is insane! This market is cookedEDIT: I misread - TEN hours of interviews. COOOOKED,HugeDegen69,2025-06-20 04:20:44,734,learnprogramming,t3_1lfub02,False,
myrcas5,I got my first Jr dev job when I was 32 after 13 years of working behind a meat counter at the grocery store. I relate to this. i am however now 8 years and many different developer roles into my career.,dwarven_futurist,2025-06-20 04:46:51,84,learnprogramming,t3_1lfub02,False,
myr9xz4,I’m 45 and graduated last March 2023 and I stopped looking for work after a year. You have inspired me to start again. I need out of the industry I’m in.,dangersdad08,2025-06-20 04:28:56,201,learnprogramming,t3_1lfub02,False,
myrcf8p,"Hey, as an almost-40-year-old who has also been taking software courses part-time for 7 years and has recently started tossing out resumes: thanks for sharing. Gives me hope. Not that I'm particularly down on myself, but the little extra hope really does help. Hopefully I can pass on the same inspirational story soon!",Robotkio,2025-06-20 04:47:47,31,learnprogramming,t3_1lfub02,False,
myr5avj,"Congrats! :partying_face:If you want to stay ahead of your competition, learn these things:* Linux* Virtual Machines* Docker* CI/CD stuff (Azure DevOps, GitHub actions, etc)* RAG-ing (Microsoft Semantic Kernel, LangChain, etc)* Design patterns that make code easily testable and scalable (think SOLID principles, MVVM, MVC, etc)",polymorphicshade,2025-06-20 03:55:33,223,learnprogramming,t3_1lfub02,False,
myro6go,"Same. I’m 34 as well. I worked almost 12 years in different industries. Just started as an associate developer in January. I’m loving every moment of it. For the first time ever, I actually enjoy working. I really should have done this earlier. Would have made my life so much better.",StationFull,2025-06-20 06:25:34,21,learnprogramming,t3_1lfub02,False,
myr4g5z,Congrats bro!!,nobled_4_40026,2025-06-20 03:49:33,17,learnprogramming,t3_1lfub02,False,
myrhu5m,"You’re me twenty years ago, basically. Your entire life is going to change. Congratulations. Keep up the hard work.",satansxlittlexhelper,2025-06-20 05:30:44,15,learnprogramming,t3_1lfub02,False,
myrj6z7,"Congrats man! 33 here, found my first tech job this year as well after 2 years of self studies. It's an amazing feeling!",Amplify_Magic,2025-06-20 05:41:59,13,learnprogramming,t3_1lfub02,False,
myr56cb,Thanks this is what I need.,polmeeee,2025-06-20 03:54:40,10,learnprogramming,t3_1lfub02,False,
mytimvh,"update: i just deleted my local git repo and recloned the latest github repo, and things seem to be normal again. thanks so much for your help y'all :)",Charming_Purpose4179,2025-06-20 14:41:50,513,learnprogramming,t3_1lg45al,True,
mytb4me,"Don’t try to fix this yourself. Ask someone more experienced for help. Everybody has been there at some point, and unless you work with a team of absolute jerks I’m sure someone will be happy to help you sort things out. And there’s a strong possibility that trying to fix it will only risk making things worse.Also: if you did in fact screw up on a massive scale in a way that really does impact the whole team, that’s really not your fault. Your shared repo should be set up so that relative newbies such as yourself cannot do that kind of damage. I wouldn’t go around pointing fingers or anything, but for now you can take comfort in knowing that it’s likely not as bad as you think. You may have lost a few days of your own work, but the teams work should still exist in the shared repo and in the copies on your teammates’ machines.",iOSCaleb,2025-06-20 14:04:35,340,learnprogramming,t3_1lg45al,False,
mytazeu,If you dont talk to your team then you'll never be trusted again. One of the worse things a junior could do is suffer in silence rather than ask for help.,JohnnyTork,2025-06-20 14:03:50,228,learnprogramming,t3_1lg45al,False,
myt70a5,You can always just delete the local files and then re-clone. The git way is to use git reset. Google it to find the exact syntax.If you had a local branch with changes then you could use git revert to go back to before you merged main into your branch.,samtheredditman,2025-06-20 13:42:50,62,learnprogramming,t3_1lg45al,False,
myt6wfn,"If you fucked up locally, why not just reclone the repo? Or is it your own work you lost track of? Did you make a separate branch for your work?",WeepingAgnello,2025-06-20 13:42:14,36,learnprogramming,t3_1lg45al,False,
myu5kwm,This page has had a solution for pretty much every “oh shit” issue I’ve had with git:https://ohshitgit.com/,gocougs11,2025-06-20 16:32:30,23,learnprogramming,t3_1lg45al,False,
mytqyy4,"If you haven't pushed anything to remote then you are fine. It's hard to permenantly fuck up in git without force pushing. If you have not made any changes yourself, you can just reset to remote. git fetch origin git reset --hard origin/",MrKnives,2025-06-20 15:21:59,10,learnprogramming,t3_1lg45al,False,
mytaah0,"Merging does not ""remove your team's progress"" until you push the merge. You may have removed all the progress you made locally over the past few days though. Try the other advice in this thread to get it back",mousachu,2025-06-20 14:00:16,6,learnprogramming,t3_1lg45al,False,
mytb05g,`git reflog` to find the commit id you last worked on with good changesThen `git reset —hard {ID}` to get back to where you need to be,Srz2,2025-06-20 14:03:56,6,learnprogramming,t3_1lg45al,False,
myu2s3i,https://ohshitgit.com/,_DONG_LORD_,2025-06-20 16:18:51,4,learnprogramming,t3_1lg45al,False,
mym0vx1,This might sound crazy but growing up I would read the source code for different minecraft mods I wanted to remake. I fully contribute that to my ability to read code to this day.,MiKaleIsACunt,2025-06-19 11:05:10,100,learnprogramming,t3_1lf7y7z,False,
mym3qqc,"...even less tutorials teach the ""why"" and the ""how to arrive"" at the code.This is the most important part and the part that most tutorials gravely underrepresent.----From the experience here through countless posts, way too many beginners state: ""I can *read and understand* code, but I cannot write my own.""Not to say that reading code is an unnecessary skill, but more tutorials should focus less on the actual code and more on the process behind the code.",aqua_regis,2025-06-19 11:27:02,44,learnprogramming,t3_1lf7y7z,False,
mym88s9,"> How are you learning to read and understand code?It's the same as learning to read your native language to a higher level (meaning: reading 1000 page books instead of instructions on a cereal box) or learning to read sheet music if you play an instrument.You learn by doing it. A lot. And I agree, it's not nearly emphasised enough. You can not be a good coder if you can not read the intent of other people's code. I've seen people with 5+ years of experience who see a function begin with checking whether the arguments are in a hashmap and not immediately realise that it's memoisation. At this point it doesn't matter how good you can program your own stuff, you can not trusted to modify other people's code without destroying something.",aanzeijar,2025-06-19 11:58:54,11,learnprogramming,t3_1lf7y7z,False,
mym3ilp,Man I'm having the exact same problem. I'm an undergrad student and working on other peoples project is a nightmare for me. I can write code no problem but reading and understanding is infuriating. It's not that I'm absolutely unable do it. I can but its annoying and it takes more time than I'd like. I know I have to work with other people in the future so I gotta adapt fast. IDK how do I manage to achieve that without torturing myself.,triple_a9999,2025-06-19 11:25:20,8,learnprogramming,t3_1lf7y7z,False,
mym2y4n,"Pretty dang accurate statement. I feel like a complete moron when I have to decide coding with someone as I know code (syntax) but I don’t know design patterns, data structures, or any of the “programming” aspects of it. There are courses that teach you this but I didn’t find any particularly useful outside of CS50.",Yhcti,2025-06-19 11:21:01,5,learnprogramming,t3_1lf7y7z,False,
mym2zn2,"I have been learning C# and what I have been doing is taking code I see and try to explain it to chatGPT what I think it is doing. Then GPT will explain what it actually is doing. Of course there are concepts that I might not have touched on yet so I just take note of that for later. Trying to pseudo code more too to put my logic on paper then I present that to GPT while explaining what I think my code is going to do, GPT then presents feedback. I ask it to not present final code solutions but more so point out an area in my logic where I should rethink it and it will drop a hint like “look into hashset” or something like that and then so I go and try",Zestyclose_Fix_6493,2025-06-19 11:21:21,4,learnprogramming,t3_1lf7y7z,False,
mym7h97,I teach this actually. When I have students who are preparing for interviews I'll prepare code snippets ans I'll ask them to read it and explain it to me line by line I find the students struggle alot the first couple times but they enjoy it,Ok-Willingness-9942,2025-06-19 11:53:37,3,learnprogramming,t3_1lf7y7z,False,
mym8wqc,"cant pick that skill from tutorials. not even from a 30 day bootcamp. for me it only came about after gaining exp on more than one language. from there, the semantic of most languages and thinking pattern of most devs becomes obvious",Sweet_Television2685,2025-06-19 12:03:24,2,learnprogramming,t3_1lf7y7z,False,
mym95u5,"I’m not sure if you can teach software reading skills, at least a good part of it is simply experience reading software. However, when you are writing software, you should always have readability in mind. IMHO, readability is the single most important of software quality. Part of this is following conventions (for instance, a getter method should never change data) and recognizing design patterns. Part is simply using good names for classes and functions/methods.",JarnisKerman,2025-06-19 12:05:05,2,learnprogramming,t3_1lf7y7z,False,
mymaxc6,"Despite the emphasis on computer code as something that does something in a computer, what it also fundamentally is an expression of human thought. (That's not as pretentious as it sounds. Pretty much any thing else expressive is, especially if it involves language, like a song or even this post.)When you look at someone else's code, you're looking at how they expressed their ideas in a form that can be executed on a computer. Different people will have different takes on that, even for the same problem. (That's one reason why one person's code may make immediate sense and someone else's doesn't - it can very much depend on whether you're thinking about the problem the same way they are or not.) So a key part of being able to read someone else's code is to approach it from a ""what were they thinking when they wrote this"" point of view. One of the first things you can do to help understand the code is identify what concepts they're expressing in the code - what the various players are, so to speak. The sooner you can grasp the bigger picture and what ideas are involved, the easier it will be once you get down into the details.One thing that will help you over time is having more and more exposure to different ideas. If you're looking at an HTTP server implementation, for example, it will make a lot more sense if you've seen one before, so you know what things are and how they interact. So a big part of being able to more readily understand code is having already been exposed to the concepts its trying to express, even if later it's expressed in a way you haven't seen before. You can know what the underlying ideas are.Unfortunately, this is where a lot of documentation comes up short. The individual calls makes sense once you have a broader view - the big picture - but the documentation often seems to start from the (unspoken) point of view that you already know all that. So you end up having to try to work out it's an elephant and not a tree or a snake.What will make reading code easier over time is:\- Seeing (and understanding) enough code that can know the various idioms and, more importantly, what they *mean*. That is, what the developer was most likely trying to say when they wrote the code.\- Gaining knowledge in the domains the code is a solution for, so you can know what things mean more readily and can more quickly get the lay of the land once you dive in.\- Writing more code yourself. Discovering how *you* express ideas will give you critical insight into how *others* express ideas in code. Eventually, you'll get to a point where you'll be able to see code and go ""I know what that means"" because you've not only seen it before but written it yourself before.Hope that helps!\[Note: Not all code is going to be so easily digested, even with experience. Some code is poorly written. Some software developers are insane. You can only work with what you're given. :) )",jaynabonne,2025-06-19 12:16:36,2,learnprogramming,t3_1lf7y7z,False,
myx33jr,"When u been programming many years and built 100s of web apps from scratch you realise that a lot of things are repeating. Every single app needs views, controllers, queries to DB, API etc.So to stop writing same code over and over again u create a web/mobile framework where you abstract common things  into libraries. Enforce best practices and other stuff. And then you share that framework with a community. Eventually it becomes de facto web framework for that language. However, because that framework is a combination of opinions of multiple people  with decades of experience, you as a beginner have trouble to understand. Because lots of things is done by framework implicitly. So you have to read a documentation to learn to use it. The same thing with debugging. It’s hard because things are hidden from you.So there is always a trade off.",StrikingImportance39,2025-06-21 01:54:36,222,learnprogramming,t3_1lgkpxz,False,
myx0yvh,>Why are most forms of programming so complex?Because it's complex stuff.A simple console app is dimple stuff. An android app? There's a ton of stuff that has to happen to get a basic android app running.,binarycow,2025-06-21 01:41:19,97,learnprogramming,t3_1lgkpxz,False,
myx1o7k,"Tools, Frameworks, and System Architectures. If your experience has been only making “simple” programs, I.e a calculator, or “hello world” apps, working an enterprise application would seem overwhelming, because you just don’t have experience with it.Yes, you can make a webpage with just html, but then how do you add interactivity and show other people across the net? A webpage stored locally that can only display information isn’t useful, so technologies were developed to solve these issues, which increased complexity. Honestly, an interesting simile to your observation would be, why do we need C/C++ if we could do everything in Assembly, which is the simplest language. An analog would be, why need a drill press when you have a drill. The reason why complexity exists, is because we have more complex problems.The tools and frameworks developers use that are “complex” actually have streamlined a lot of issues for us. Can you imagine how annoying it would be to process text if no one made “Stream” packages, or how annoying frontend webdev would be if frameworks like Vue.js and React didn’t exist?Just because something is complex, doesn’t mean it’s bad, but again, it becomes less complex when you get experience.",TsunamicBlaze,2025-06-21 01:45:43,38,learnprogramming,t3_1lgkpxz,False,
myx7bwx,There are a million moving parts in mobile and web apps. It’s not as easy as you may have been led to believe.,Then-Boat8912,2025-06-21 02:21:08,10,learnprogramming,t3_1lgkpxz,False,
myy8qos,"I'm with you on this, there's so much boilerplate stuff going on to make something that doesn't even do anything. My assumption is an accumulation over many years of tech stacks and frameworks that solve bigger problems than you need but you still have to pay overhead for to remain idiomatic within the ecosystem.",randfur,2025-06-21 07:19:39,9,learnprogramming,t3_1lgkpxz,False,
myx71tw,"Because other environment are bad, it's just bloated mess on top of other bloated mess at this point, I can at least understand the need for sandboxing, and privilege access, which will obviously add a bit of complexity.But a lot of the stuff currently used is complicated for no real reason.It's enshittification of software, plain and simple. An app should load instantly with modern phone/computer, yet it's not the case, the hardware is an incredible feat of engineering, but we forgot the engineering in software along the way.",Seubmarine,2025-06-21 02:19:21,12,learnprogramming,t3_1lgkpxz,False,
myypjpj,"Unless the C++ programs you are writing are either fairly simple, or you have written all of of your ""framework"" yourself based on simpler building blocks and have not yet gotten to the part where you've created the complexity present in the platforms you reference, then a well working and well written piece of software should have similar levels of complexity even from the beginning.Try picking up Unreal Engine, write a Qt application, or use any of the other ready-made application frameworks for native UI applications, and you will see similar levels of initial complexity. Because you're not starting from scratch, you're hooking into a long-living, already existing framework and ecosystem for creating applications, with well-defined and delineated structures to organize your program to ensure it works within the framework.You would see similar levels of triviality if you tried to make a ""bare metal"" web application with native javascript and HTML, as well, the complexity comes in when you pick up a framework, because you're CHOOSING that complexity in exchange for the power the framework offers you. Same with servers, you can write your own bare-bones HTTP server in C++ and simply use that as a REST-API handler, but that's a lot of tedious work... why would you do that when ready-made frameworks exist that, yes, take a bit more work to get started with, but over time drops your workload by a hundred times?Mobile platforms are different because they REQUIRE you to use their platform to be able to run your applications and ensure they don't do ""bad things"", you cannot do ""bare metal"" development. These platforms are hardware limited, run fundamentally different ""operating systems"", and have a much higher level of integration and centralized control than a PC. This requires you to break up your applications into event-driven models, state-based triggers, setting structures and sign up for all the functionality you want to hook into so that the OS can integrate these things, ensure you get your fair share of background time, and run your app in the correct situations. You *can* do close to native app development if you jailbreak Android, and skip all the framework stuff if you really want to, but you won't be able to run on a locked down, consumer platform.You will see that over time as you get more experienced with development and the applications you write get more substantial, you will either gravitate towards the same level of complexity, or you will be stuck doing so much manual work and trying to ensure it all works with each other that you drop it entirely because you get sick of it. Raw SDL is fine if what you're doing is fairly simple, a few UI elements there, a sprite there, but once you get beyond a certain level of complexity you'll either be wrapping it in your own engine, starting to use a framework yourself, or you ""muscle through"" it and create an unholy abomination that's a mess to work with.",irCuBiC,2025-06-21 10:12:41,4,learnprogramming,t3_1lgkpxz,False,
myx08ar,Well what did you use to make the desktop apps?,Brave_Speaker_8336,2025-06-21 01:36:39,3,learnprogramming,t3_1lgkpxz,False,
myxcv8o,"I do think some amount of it is necessary, and some of it is just boilerplate from bad design or legacy decisions. I have to link the classic: https://grugbrain.dev/",tomysshadow,2025-06-21 02:56:47,3,learnprogramming,t3_1lgkpxz,False,
myxhvrv,"I’m seeing weird answer here. The reason why a simple hello world is so difficult to get going dates back to graphical user interfaces (GUIs). In the old days demonstrated by the console programs that you’ve been playing with you have ASSCII printable characters (the letters you see for instance like a, b, c, etc.) and the non-printable characters like carriage return (CR) that return the cursor to the beginning of the line, new line (NL) that advance the cursor to the next line below, etc. All very easy to control with basic system calls.Enter GUIs where it’s not that simple. With a GUI you have to define what is called a draw or layout surface that allows you to place elements like text boxes, buttons, etc at various positions within that draw surface. That overall draw surface is stored in the form of a series of buffers or layers to present to the user visually and a further layer to track finger touches or mouse cursor movements so the system can track what the user want to interact with. Now, with SDKs they need to handle a lot of the overall setup for you and you utilize objects that represent text or buttons or other widgets that place on that surface.Now as you can see we have gone from simple system calls to print text to screen for your console apps to presenting a presentation layer for GUI elements that cannot only rely on system calls alone to display.This is why a simple hello world program on Android is so difficult because:1. You need to set up a display buffer with the resolution and how it will be displayed to the user2. You need to create a text box element in that buffer to display the text3. You need to set up what text is displayed in that text elementI hope this gives you a good idea in answer to your question.",ButchDeanCA,2025-06-21 03:31:24,3,learnprogramming,t3_1lgkpxz,False,
mye5fgb,"I’ve been programming for 30 years and this still happens to me all the time. There’s an infinite amount of library functions out there, you’ll never learn them all.With experience, you’ll know all of the important ones in your niche area after a while. But every time you write code outside of that area you’ll be like a newbie again.",dmazzoni,2025-06-18 04:16:48,136,learnprogramming,t3_1le7p5h,False,
mye53mi,Nah it’s good to do these things. It increases your understanding a lot,Forward_Trainer1117,2025-06-18 04:14:23,135,learnprogramming,t3_1le7p5h,False,
mye6smz,\> Anyone else feel like half of programming is just slowly discovering all the stuff that already exists?It's called learning. Happens to everybody.,0x14f,2025-06-18 04:26:58,36,learnprogramming,t3_1le7p5h,False,
mye6jkk,"Dude it’s okay. If anything it probably shows you had a sense of trying to solve a problem. I’ve always been a “why” guy. Like “why does map do a thing? Why am I using var, let, const. Why am I deprived of love” You know. Stuff like that. So I think it’s good you did it the hard way first.",iDontLikeChimneys,2025-06-18 04:25:04,18,learnprogramming,t3_1le7p5h,False,
mye7o4q,It was really eye opening when I discovered the Linux Manual Page Section 3. Turns out it's all the little library calls that K&R used to make Unix in the first place.,somewhereAtC,2025-06-18 04:33:38,9,learnprogramming,t3_1le7p5h,False,
myea0j2,"if you no rush in time, why not, u can learn something new.",jazzyroam,2025-06-18 04:51:47,3,learnprogramming,t3_1le7p5h,False,
myeo433,Congratulations! You learned a new thing that will save you time in the future!,Boring_Dish_7306,2025-06-18 06:54:02,3,learnprogramming,t3_1le7p5h,False,
myerghg,"If xyz() is a standard library thing then maybe spend half and hour a day reading the library docs, that's what I used to do, and still do when approaching a new project. Even if you forget the details, just \*knowing\* you saw a function that said it did ""x"" is what your brain evolved to do.If xyz() is an in-house utility then depending on your length of time there, and the projects you've been exposed to, you could still be forgiven!So... Use The Force, Read The Source, standard and in-house, it really does pay off and after a while, you will be the person people are asking about stuff, just because you spent half an hour a day reading, for maybe a month.Try it.",bravopapa99,2025-06-18 07:25:58,3,learnprogramming,t3_1le7p5h,False,
myfa07h,I spent weeks studying how the Chinese calendar system worked (jfc it's complex as fuck) only to find out that converting from Gregorian to Chinese is a built-in function in C#.I literally cried.,vardonir,2025-06-18 10:25:52,3,learnprogramming,t3_1le7p5h,False,
myemksu,"In 2015 I was writing my own sorting algorithm in c# lol, didn't know there were built in ones",TheReal_Peter226,2025-06-18 06:39:53,2,learnprogramming,t3_1le7p5h,False,
mz4bucv,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-06-22 07:57:30,1,learnprogramming,t3_1lhikrn,False,moderator
mz4e78d,Communication with my overconfident boss,jqVgawJG,2025-06-22 08:20:43,288,learnprogramming,t3_1lhikrn,False,
mz4pwr1,Functions returning functions :grinning_face_with_sweat::grinning_face_with_sweat:,mw18582,2025-06-22 10:18:52,70,learnprogramming,t3_1lhikrn,False,
mz4cczg,Classes.It took working on a project with someone who half got it for me to see why they got it wrong so I could get it right.,0dev0100,2025-06-22 08:02:30,135,learnprogramming,t3_1lhikrn,False,
mz4lb04,"For now, pointers and passing pointers to functions -_-",Party_Trick_6903,2025-06-22 09:32:44,25,learnprogramming,t3_1lhikrn,False,
mz4m6g6,Recursion. It took me a while to have it click in my head.,captain_obvious_here,2025-06-22 09:41:45,23,learnprogramming,t3_1lhikrn,False,
mz4nbw7,"APIs. For the life of me, I couldn't understand them and how they work for for the first year of learning, and now they are some of my favorite things to create when it comes to programming.",pecodeliar,2025-06-22 09:53:14,19,learnprogramming,t3_1lhikrn,False,
mz4cf1o,"Idk man, ive been in school for almost 2 years now doing C/C++ and only just found out chars are signed or unsignedJokes aside the feeling you're describing happens at least once a month to meThere was the month for state machines, one for unions, linking, STL stuff. Couldn't understand iterators for a while",eggmoe,2025-06-22 08:03:03,36,learnprogramming,t3_1lhikrn,False,
mz4cfaw,"The difference between code and data in memory. Once I understand there is no difference beyond its use, I make better progress",no_regerts_bob,2025-06-22 08:03:07,22,learnprogramming,t3_1lhikrn,False,
mz4tzr3,"When I first started out, DI (Dependency Injection)! Took me weeks to get my head around :grinning_face_with_sweat:",Positive_Rip_6317,2025-06-22 10:57:06,10,learnprogramming,t3_1lhikrn,False,
myno2ez,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-06-19 16:33:10,1,learnprogramming,t3_1lffa04,False,moderator
mynpagr,"There is a difference between a programmer, a computer scientist, and a software engineer.Without fundamentals, you are a programmer. You can write code, you may even be able to write good code. But to be an engineer, you need to understand concepts, and DSA is a pretty important one.Yes, a lack of DSA will likely hold you back at some point, because a lot of problems and their solutions rely on having a solid grasp of those. For example, how will you approach a problem that requires searching a tree, if you don't know how trees work? You may find some solution just tinkering around, but chances are that solution will be slow, will scale badly, and may miss edge cases.",Big_Combination9890,2025-06-19 16:39:08,191,learnprogramming,t3_1lffa04,False,
mynoqa5,"yeah, you are. Although, the algorithms you mentioned are not exclusive of competitive programming. However, if you build things, get paid for it and you feel as a dev, you're a dev. Fuck the people that tell you otherwise. Ps: Sorry for my english hahaha, not that good",JunketLongjumping560,2025-06-19 16:36:25,43,learnprogramming,t3_1lffa04,False,
mynp8we,"Are you making stuff?If you are there ya go, you're a developer.",CantaloupeCamper,2025-06-19 16:38:55,26,learnprogramming,t3_1lffa04,False,
myonitt,"Even as someone who teaches DSA for a living, I think it is a bit sad that so many programmers nowadays seem to think that DSA isn't just a fundamental, but almost indispensable part of a ""programmers toolkit"". Honestly you can get by for a very long time without knowing anything about trees or graphs, or Big-O notation - and I have yet to meet the person who actually *had* to implement quicksort or any other sorting algorithm from memory (and didn't just do it because it was a fun exercise).I think DSA is fun, and like everything else in programming it gives you a whole new perspective on how to think about data, and it helps you understand and implement well-known algorithms - but the idea that you MUST know how and why quicksort or red black trees work, that's just ridiculous.Like a carpenter doesn't have to be a wood scientist, a programmer doesn't have to be a computer scientist, because Computer Science isn't programming - it is the study of how computers can be programmed to perform computations. And vice versa - just because you can provide a mathematical proof that your sorting algorithm will perform in O(n log n) it doesn't mean that you can implement the feature that the customer asks for.",peterlinddk,2025-06-19 19:34:14,10,learnprogramming,t3_1lffa04,False,
myo1g9l,"Of course you are a developer. You develop software. Whether lack of algorithm knowledge will hold you back depends entirely on which direction you want to take your career. I've got a masters degree in CS, have led teams and certainly don't think you need those fundamentals to be a developer (even a good one). But learning them will most definitely improve your quality as a developer and skill level. If you want to go down the technical path I recommend learning those fundamentals. Also to be clear - it's not about just learning specific algorithms. It's understanding data structures, complexities of algorithms and trade-offs. It's about understanding how to develop algorithms when you need them. I've seen a lot of developers claiming they are not interested in ""CS trivia"", dismissing value of fundamental CS knowledge. In my opinion that's a mistake.",igalic,2025-06-19 17:38:34,5,learnprogramming,t3_1lffa04,False,
mynophb,"This is a good question, because I’m in a similar situation.Did you major in computer science or something different? How did you get a job as a Dev?",Head-Gap-1717,2025-06-19 16:36:18,3,learnprogramming,t3_1lffa04,False,
mynrggy,"You can be a programmer and develop CRUD app (which is the majority of apps & jobs).but you need CS fundamentals to say build an OS, or develop a consensus algorithm, or build a novel solution.Which is why Google and some companies placed a high emphasis on those skills.",Rain-And-Coffee,2025-06-19 16:49:34,3,learnprogramming,t3_1lffa04,False,
mynw5l4,Yes! You just have imposter syndrome. Everyone has to start somewhere. You've got this!,gametorch,2025-06-19 17:12:25,8,learnprogramming,t3_1lffa04,False,
mynr1ej,You wont be a developer until you start calling yourself one. Have faith in yourself and call yourself that first and then go on to go deeper in what truly interests you. Don't fall in the trap of there is some high standard that you need to achieve to be able to be called a Dev. All great journeys begin with the first step of acceptance.,BlueSalmonLord,2025-06-19 16:47:35,2,learnprogramming,t3_1lffa04,False,
mygn78j,You should find a job that you don't hate that can give you a stable income and learn on the side.,Wingedchestnut,2025-06-18 15:15:22,163,learnprogramming,t3_1leix9p,False,
myhllke,"I think DSA is not that important for you now because that's a generic on-campus placement criteria. No jobs in IT and layoffs means sh*t if you have an actual irreparable skill set. Now the question is will that irreplaceable skill set come to you? If you started coding for the money(only) then probably not but who am I to tell you that (please prove me wrong) . Now to the real advice part, target product based startups as they will look for a good project which you can build but not by learning things from hear and there. Depth in any one thing (except front end) will be the true decider.",Harshit1107,2025-06-18 17:54:43,21,learnprogramming,t3_1leix9p,False,
mygk48f,"No, I just watched an interesting video about someone who was explaining why no one makes ""A day in my life as a software engineer"" videos anymore and it's because the industry is no longer as glamorous as it used to be. Companies are laying people off each month. If you're the person with the least amount of tickets cleared for the month then you get fired. Everyone is overworked and stressed. Its honestly not worth it at this point unless you're already a graduate.",Error-7-0-7-,2025-06-18 15:00:50,79,learnprogramming,t3_1leix9p,False,
mygkgfc,"If you love it, do it, try to find an entry level job / junior / apprenticeship asap, don’t make the mistake of thinking that you’re not good enough, there are levels and roles for a reason. Just apply - interviewing is a skill on its own and has to be practiced. Yes the market sucks right now, but the role of software engineers is not disappearing.Good luck!",Latter_Associate8866,2025-06-18 15:02:29,46,learnprogramming,t3_1leix9p,False,
mygijx9,"Honestly right now is a terrible time to enter the IT job landscape as a new (junior) developers because so many very experienced developers are chasing the same roles,thanks to all the recent and on going tech layoffs , and you would be hard pressed to match them on terms of experience.My recommendation is if you want to get I to IT consider sales if you have the aptitude to sell, it's not as glamorous as development but if you can sell there's always work there for you . Outside of that more physical based IT think small scale IT networking (fixing small business connectivity , networking.,laptop oc provisioning issues etc ) will always be in demand since it's not a job that can easily be outsourced or automated away ...Good luck.",abrandis,2025-06-18 14:53:30,29,learnprogramming,t3_1leix9p,False,
mygth04,In 2 years of self teaching you managed to only learn some basic frontend? If you want to maximize your chances of getting hired you need to learn some enterprise backend technology in that case Java or C# which are the most used in the industry and a frontend framework like Angular. Don't ask on reddit if something is worth it to follow or not. Most of them are Americans so most of them are going to answer you that the market is bad and there are no jobs. This doesnt apply to every country in the world. In my country software engineering has 10 times more openings than the rest of the jobs and the greatest work to life balance. If you want real advice get in touch with people that work in the industry from your country and try to network.,Razzmatazz-Future,2025-06-18 15:44:37,19,learnprogramming,t3_1leix9p,False,
myhpw5b,Coding is an industry where hungry business man pray on the passion of people that couldn’t care less about the outcomes but enjoy the journey. This is an unfortunate reality of today’s developer market. I am in the same boat as you and even went much stupider into enrolling into a software engineering university as well as a bootcamp and some self learning myself. I have some familiarity some projects but nothing fully transactional. The market itself makes me build my own SaaS instead of even thinking to try anything like internships and so on. I thought university will actually provide internships but it seems I am so far away from that that I can’t even believe it how ridiculous it is. It’s majority about networking and actual shipping products. I had in mind a bit of technical ability and then get into the project management leadership roles as I already have experience as a manager/leader…. I have no chance for anyone to invest in me as I’m not a code monkey and no one does anything these days because of the budget… It’s just pushes us into other jobs until we are able to find a team to fit ourselves into and then that belonging will be limited until this will again happen. That’s the cycle of a developer. So in conclusion yes get a job- you’ll learn less and invest more time but you will have something for the time being. Make sure the job you choose can actually be something you can always jump back to once developing ends until it starts back again. The dilo for a developer nowadays is worse than a dilo for a warehouse worker that is underpaid and overworked. This life… Enjoy,Daydreg,2025-06-18 18:14:37,5,learnprogramming,t3_1leix9p,False,
myglhs8,"You're probably at least a year of grinding hard away from entry level, and when you get there it will be competitive.",code_tutor,2025-06-18 15:07:23,12,learnprogramming,t3_1leix9p,False,
myhzk05,"Get a stable income first. Programming in 2025 is not a fast route to a stable well-paying job. You can get there, but not overnight. And having recent work on your resume also looks good to potential employers - for juniors just starting out, work ethic is at least as important than what they know, since you'll have to teach them a ton no matter what.Ideally get something tech adjacent though, even if it is just working in a computer store or answering calls at a help desk.",PoMoAnachro,2025-06-18 19:00:30,3,learnprogramming,t3_1leix9p,False,
mykm6tx,I don’t understand. You have a post from 100 days ago claiming you had two job offers.,rayred,2025-06-19 03:41:12,3,learnprogramming,t3_1leix9p,False,
myszq9h,"Programming is a vast and varied field. You don't need to master every domain in that field (nor is it possible), but you should instead specialize in what you like. If you like machine learning, then do more of that. Of course it's important to have a general knowledge of other domains, but that's something that comes with time and experience.For example, I can code a website's frontend if hard-pressed, but that's hardly something I'd ever do of my own accord. That's not my specialty, and that's fine.",klorophane,2025-06-20 13:01:44,87,learnprogramming,t3_1lg35zj,False,
mytkc78,That's because HTML and CSS are mind numbingly boring,Luc-,2025-06-20 14:50:05,90,learnprogramming,t3_1lg35zj,False,
mytoywv,"It's not fun because you're not experimenting. The fun starts when you push the boundaries of what you know and find yourself in front of a problem you need to figure out. And honestly this goes for everything in life really. Pretty much you're not challenging yourself. Challenging yourself is your responsibility, not anyone elses. It's a tough perspective to adopt when you don't have people in your life encouraging it, but once you do, everything becomes rewarding.Here's some examples that can make css fun.https://uiverse.io/challenges/one-div-challengehttps://cssbattle.dev/",s00wi,2025-06-20 15:12:24,23,learnprogramming,t3_1lg35zj,False,
myt0v1c,"HTML & CSS aren't even considered coding by a lot of enthusiasts, invest some time in other languages like C or Python, both aren't that difficult to learn if you invest time into them!",Sk3leth0r,2025-06-20 13:08:18,73,learnprogramming,t3_1lg35zj,False,
myt1iyw,The joys of knowing how to make an Evil Web Page are lost on some people I suppose...,ValentineBlacker,2025-06-20 13:12:06,7,learnprogramming,t3_1lg35zj,False,
mytj030,"Css is kind of lame on the surface, but the more you ask of it the more it can do. What may help is manipulating the DOM with js and seeing how it works on the inside.",WorldlyEmployment232,2025-06-20 14:43:35,6,learnprogramming,t3_1lg35zj,False,
myszqsm,"I'm the same. If I'm not putting what I learn into practice, then that new information has little to no associative ties to experiences or other knowledge, which means it doesn't get memorized as easily and hasn't given me any dopamine rewards. It's boring.That's why you need to immediately start fiddling around and coding with what you're learning. You get to see the results of your experiments, it gives you a hit of dopamine, you remember what you've learned, and it's not boring, which means you want to go back for more.",SuperGameTheory,2025-06-20 13:01:49,11,learnprogramming,t3_1lg35zj,False,
mytlrv6,"Learning HTML and CSS after a couple years of learning actual programming languages is like learning to ride a bike, working your way up to a mountain bike and going off road, then getting on a toddler’s tricycle.",Night-Monkey15,2025-06-20 14:56:59,5,learnprogramming,t3_1lg35zj,False,
myt2gf4,The fact that you learned python in ML and then switched to Odin project shows you have no goal. You're all over the place. You ain't gonna be an expert at everything in this field..I would one Pick that interests you and specialise in that.,DesTodeskin,2025-06-20 13:17:25,20,learnprogramming,t3_1lg35zj,False,
myt0ada,"No. Maybe it's boring but with that I'm learning a lot before finding the Odin project, to be honest I wanted to give up always saying that dev web isn't for me but the Odin project completely changed my mind and with that after every lesson I notice improvement of my skills",Upset_Buy_4630,2025-06-20 13:04:58,3,learnprogramming,t3_1lg35zj,False,
myxltv5,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-06-21 04:00:09,1,learnprogramming,t3_1lgngqf,False,moderator
myxp2ip,"Recursion is one of those things that once you learn about it, you start to see it everywhere. Want to search your system files for a particular file? That’s a recursive algorithm. Want to draw a natural looking tree? That’s a recursive algorithm. Want to write an interpreter for another programming language? That’s a recursive algorithm.More generally, recursion helps whenever the problem you want to solve is hierarchical in nature. Your file system is a hierarchy of folders inside folders inside folders. A tree is a hierarchy of leaves on branches on branches. A written program is a hierarchy of different syntactic elements nested inside each other.",Quantum-Bot,2025-06-21 04:24:56,402,learnprogramming,t3_1lgngqf,False,
myxn6fc,"Recursion isn't \*that\* common in the real world, but it's not super-rare either.A lot of learning is so that you understand \*concepts\*. Recursion is a good way to teach the reality of functions, if you \*get\* recursion then you sort of \*have\* to get functions, how inputs and outputs work, and how functions aren't just about splitting up big blocks of code.",ToThePillory,2025-06-21 04:10:15,141,learnprogramming,t3_1lgngqf,False,
myxmbjw,"Recursion is specially useful in functional paradigms and to improve readability in some contexts of programming, of course you absolutely need to understand recursion, there are a lot of algorithms (e.g. recursive descent) that require heavy recursion so it would be good to know.",Party_Ad_1892,2025-06-21 04:03:47,45,learnprogramming,t3_1lgngqf,False,
myxn0au,"I view recursion as a basic building block of programming, one or two step above learning about for loops themselves. As far as real-world applications of it, any kind of tree structured data often lends itself to a recursive implementation, especially the more enterprise the code base. For example, at my job I maintain ""bills of material"" which are lists of items in inventory that can (optionally) contain other lists of more items (""assemblies""). Accordingly, the code I wrote to automate some of that work included a basic recursive tree linking algo in order to get a memory structure going where I could efficiently traverse the tree to do useful work with the data.",blackhawk1430,2025-06-21 04:08:58,19,learnprogramming,t3_1lgngqf,False,
myxnrh5,It’s an easy always to teach certain concepts. Like your call stack. But in reality is unlikely to be the optimal solution. It’s tolerated in cases where the recursion depth is likely to be logarithmic. E.g. merge sort.,donghit,2025-06-21 04:14:43,7,learnprogramming,t3_1lgngqf,False,
myxo1ss,You definitely need to understand it- crucial algorithms are implemented with it (though they can be done iteratively). Anything that is DFS-based uses recursion. The concept of the stack is also ubiquitous and you need to know that,mancinis_blessed_bat,2025-06-21 04:16:57,6,learnprogramming,t3_1lgngqf,False,
myxujx2,"1. If you’re learning recursion as part of a degree, then it’s a good bet that your professors think it’s pretty important. Trust them.2. Recursion comes up all the time. Many important data structures are defined recursively. For example, linked list is either null or a structure that contains some data and a pointer to a linked list. And when you have recursive data structures, recursive functions are often the best way to work with them.3. Recursion isn’t just some academic exercise. Consider a GUI framework. Typically, anything that’s drawn on the screen is drawn in a *view*. Controls, labels, text fields, menus, etc. are all specialized views. If a user clicks the mouse button, the framework figures out which view was clicked by asking the root view which view contained the click location. That view then asks each of its sub views which view contained the click, and so on. Or, if part of the screen needs to be redrawn, the framework goes through a similar process.4. Any problem that can be solved recursively *can* be solved iteratively, but recursion is often the easier, cleaner solution. Recursion uses the stack to keep track of intermediate results; things can get messy fast with iteration because you have to manage that state explicitly.5. There are some languages in which recursion is the only way to loop.6. If you’re working on a computer science degree, you probably have courses in theory of computation, compilers, and operating systems in your future. Recursion looms large in each of those. As a small example, read about the `fork()` function in Unix-like operating systems.7. Your question reminds me of high school math classes when students would ask “why do we need to know trig identities?” or “when are we ever going to factor polynomials in the real world?” It’s easy to understand that feeling, but it’s hard to provide a satisfying answer because someone asking a question like that just hasn’t seen enough to appreciate the importance of the topic. I think the best thing you can do is write your question down now and come back to it in a few years, after you’ve taken more advanced courses. That goes back to item #1 on this list: trust your professors, they know a lot more than you do.",iOSCaleb,2025-06-21 05:09:16,6,learnprogramming,t3_1lgngqf,False,
myxnpj6,"In some languages, you can't easily do anything at all without recursion. But that's a pretty trivial case. What about a very ordinary programmer like me, with a couple of decades working in imperative languages where recursion is very much a choice?It's a tool for your mental toolbox. You need to learn and practice it (even if it initially feels awkward and even if some examples feel alien or niche). Then, when you face real world problems, sometimes you'll realise that, hey, it kind of feels like if I split this problem up into pieces the algorithm will be simpler or the code cleaner...and maybe I can do that again in the same way...hey, this is recursion! I'm recursing! And when your problems don't nest that way, go back to ordinary imperative code.Kinds of data where recursion comes up naturally are common. Trees are obviously very likely to involve recursive operations and trees come up all the time in real world data wherever data are organised hierarchically: DOM trees, parse trees, nested spatial info, organisational charts, I'm sure you can think of many more examples where data are naturally nested in a self-similar manner.Most of my code is not recursive, but I wouldn't be a competent programmer if I didn't know how to use recursion when it's the better choice.",AdministrativeLeg14,2025-06-21 04:14:18,4,learnprogramming,t3_1lgngqf,False,
myxrtnr,"Binary search, some sorting algorithms, and tree traversals are recursive, just to name a few. Lists are recursive: current element and list formed by the rest of the elements. A lot of things in CS are recursive by nature.",Effective_Job_1939,2025-06-21 04:46:49,3,learnprogramming,t3_1lgngqf,False,
mz0rx9g,"Graphs. Every other data structure is either a large graph, or a group of graphs.",bestjakeisbest,2025-06-21 17:55:11,122,learnprogramming,t3_1lh1a94,False,
mz1pdt3,I like that a Master's in Computer Science is not a practical enough degree to obtain an interview for a Software Engineering position.,al_earner,2025-06-21 20:57:59,140,learnprogramming,t3_1lh1a94,False,
mz0j9xo,"Amazon, JPMC, C1 gravitate towards Lists, hashmaps, divide and conquer, and greedy algorithmsGoogle, Meta, Uber gravitate towards Lists Hashmaps, Graphs, tries, DFS/BFS, and DP, and string manipulation algos.Source: trust me bro.",EntrepreneurHuge5008,2025-06-21 17:10:41,52,learnprogramming,t3_1lh1a94,False,
mz0kn62,"DSA and leetcode have different aims. The goal of learning DSA is to understand some DSA. Its purpose isn't to train you to do leetcode interviews. It's kind of like the difference between learning the basic rules of chess and some ideas behind openings, then being asked to play and beat a bad chess engine. You can call it ""revising DSA"", but it's more accurate to call it ""beating leetcode problems"".",CodeTinkerer,2025-06-21 17:17:43,21,learnprogramming,t3_1lh1a94,False,
mz35w1u,"Job interviews love trees for some reason. And they often pop-up in actual practical applications (e.g. Scene-Graph which is usually just a tree, ASTs, filesystems).",Smart_Vegetable_331,2025-06-22 02:16:27,14,learnprogramming,t3_1lh1a94,False,
mz414de,"For data structures you should be comfortable with stacks, queues, arrays, hashmaps, linked lists, trees, and other graphs in general. When it comes to algorithms the most common ones that I've encountered are divide and conquer, two pointers, sliding window, breadth first search, depth first search, and dynamic programming.",parazoid77,2025-06-22 06:14:32,12,learnprogramming,t3_1lh1a94,False,
mz1aldt,I believe Leetcode have a DSA course tailored for these kind of interviews,StretchMoney9089,2025-06-21 19:36:42,4,learnprogramming,t3_1lh1a94,False,
mz4mzoe,"For a software engineering role I have never been asked leetcode questions, but rather how I would approach the scaling issue the had, what tools and frameworks I would use for messaging, how I would do a code review with a junior…",DEV_JST,2025-06-22 09:49:50,3,learnprogramming,t3_1lh1a94,False,
mz60mvd,"With a masters in CS, my assumption is that you don’t need more theoretical knowledge. You need hands on projects. Depending on the type of jobs you aim to land of course. But for most jobs, I stand by this.",pellep,2025-06-22 15:28:53,2,learnprogramming,t3_1lh1a94,False,
mz9r9t1,Basics? Look at what you needed to know in 1995 and that is still what you need to know today,ms4720,2025-06-23 03:42:04,1,learnprogramming,t3_1lh1a94,False,
mzab0ri,Learning to ________ is more mental than technical. The hardest part isn't ________ or ________ it's pushing through *doubt* and **staying consistent**It's the same vague advice that gets passed around every pseudo-insightful self help blog on the planet.,Luigi-Was-Right,2025-06-23 06:20:39,124,learnprogramming,t3_1li912g,False,
mza8zpb,"""Programming isn't about what you know; it's about what you can figure out.” - Anonymous",TheEyeOfTheLigar,2025-06-23 06:02:12,25,learnprogramming,t3_1li912g,False,
mza93xi,"In a way, this is right, because a good amount of code you'll write in your life will be quite trivial (meaning you won't implement a hyper-optimized key-value store from scratch on a weekly basis), but of course, if you want to be successful long term, you need to understand code and possibly, with it, advanced technical concepts.",skwyckl,2025-06-23 06:03:15,5,learnprogramming,t3_1li912g,False,
mzahguu,"What, no, I learned to code because the feedback is immediate.The problem is people setting goals like, man, I wanna build a Blockchain Website for Turtle Racing.And not like, WTF are all these questions marks. Oh sweet Nullable types are a thing. Instant dopamine. Fuck where else can you gonna get a rush from talking to a duck for 5 minutes.",Skusci,2025-06-23 07:21:32,11,learnprogramming,t3_1li912g,False,
mzad6ox,"Yeah, mindset matters more. Staying consistent is the hardest part.",GatoPeludoRata,2025-06-23 06:40:51,1,learnprogramming,t3_1li912g,False,
mzaeqds,"What you're describing is more the learning than the coding part of learning to code. Coding is a mindset, that much is correct, but the final mindset will have much more confidence.",aanzeijar,2025-06-23 06:55:15,1,learnprogramming,t3_1li912g,False,
mzahpqk,"Skills grow with time, but grit and patience are what keep you going when the path isn’t clear.",No_Computer8218,2025-06-23 07:23:56,1,learnprogramming,t3_1li912g,False,
mzbe4wb,It depends on what stage you are with coding. When you first learn how to code syntax and logic is normally the thing holding people back.When you get more experience people can reliably come up with a solution to most problems. At that time syntax and logic is not the thing holding you back.Eventually you get so good that you can reliably come up with multiple solutions to most problems. At that point getting accurate requirements are far more important.,WarPenguin1,2025-06-23 12:13:24,1,learnprogramming,t3_1li912g,False,
mzbr9jv,"The part that newcomers seem to miss is how to break a problem down into specific steps to solve it. I guess that's something that comes with practice - to be honest, I've been coding so long that I've forgotten what it was like to not know how to do it. I really struggle to teach coding, though, because to me the process of framing a solution in precise logical steps is easy and yet beginners simply cannot seem to really do it and I don't know how to get them to do it.",Ayjayz,2025-06-23 13:33:25,1,learnprogramming,t3_1li912g,False,
mycstoj,Yes. Plus it looks good on your resume if you want it there. Just keep doing it. If you want to have fun and make your life easy to high level. If you want to go through pain do low level like assembly. Anyone can learn how to code which is the beauty of it. Hop on YouTube watch tutorials and get to it,ROASTRUS_69,2025-06-17 23:26:57,6,learnprogramming,t3_1le1z80,False,
myd0db4,"As an hobby, and as with every other hobby, you don’t need to be very good at it. Just have fun and become every month better than the month before.",Affectionate_Horse86,2025-06-18 00:09:28,5,learnprogramming,t3_1le1z80,False,
mycsz20,"EDIT: I was warned that this post, in which the examples table is AI generated, is against the rules. Please consider messaging the mods to have this type of rule removed. It's obviously useful content that was hand written, and only the examples (which are also useful) were AI generated & then reviewed by me for accuracy and clarity.You're trying to create apps. For which you need this thing called 'skill' which can be cultivated over time. Your main bottlenecked & scarce resource, however, is time. If you were going into the industry, OR if you had 40+ hours a week to spend on this, then this wouldn't be an issue.So, you'll have to choose a very specific niche. A combination of subgenre, programming language, framework, and deployment target should do the trick. Each of these will have entire books written on them... so they're all vast fields.... but if you niche down, you'll be able to get good relatively quickly.For example, you could just build puzzle games in javascript, using Phaser.js, for the web.Here are some more ideas.| # | Subgenre | Language | Framework | Deployment Target || - | --------------------------- | ---------- | ---------------- | ----------------------------- || 1 | Puzzle Games | JavaScript | Phaser.js | Web browser (Netlify, GitHub) || 2 | Note-taking Apps | TypeScript | Electron + React | Desktop (Windows/macOS/Linux) || 3 | Generative Art | Python | Processing (py) | Web gallery / local renders || 4 | Pixel Art Platformers | Lua | LÖVE2D | Desktop executable || 5 | Mobile Business Apps | Dart | Flutter | Mobile (Android & iOS) || 6 | Markdown Formatter CLI Tool | Rust | Clap | CLI via Homebrew / Cargo |The worst thing you can do is dilute yourself into many different fields.If you were going to enter the industry, I'd tell you to diversify. But you explicitly don't, so don't diversify ----- put all of your limited time into one specific combo.",platistocrates,2025-06-17 23:27:46,22,learnprogramming,t3_1le1z80,False,
myctifi,I feel I'm decent with a variety of technologies and programming languages. It empowers me in my current field. I teach mechanics how to fix cars for a living. Definitely not a waste of time if its something you love.,ButtonChemical5567,2025-06-17 23:30:43,3,learnprogramming,t3_1le1z80,False,
myct7td,"Dude, you said you want it. As a hobby. How wouls that be a waste of time? You'l probably lack the experience of production in a real job but who cares, lol, you're doing it for you.Some people became employed while being self taught I'm pretty sure learning just for fun will take you anywhere you wanna go.And even better: You won't have to look for jobs or comply with adding the right key words to your resume for HR and all that bullshit. And if you change you mind, you can just stop.Don't overthink it, bro.",BunnyWants2Code,2025-06-17 23:29:07,2,learnprogramming,t3_1le1z80,False,
mycx8m2,"Definitely. Once you have enough knowledge to do so, I encourage you to contribute to open source projects. You'll meet a lot of highly skilled people who can teach you a lot of things and introduce you to even more skilled people. It's also always more fun to be part of a community. These people will also be able to quickly help you land jobs if you do ever decide you want to do that.",xDannyS_,2025-06-17 23:51:22,1,learnprogramming,t3_1le1z80,False,
mycya8e,"Programming requires purpose. You meed to a find a problem that needs solving and go from there. Look and see how others have solved said problems, see what you need to make an alternative solution that better fits your case. Both work and industry involvement will give you problems to solve, and it may be easier that way than finding those problems on your own.I tried to learn programming, but I have never been able to come up with a problem that hasn't been solved. That is why I have enrolled myself in community college.",MinTDotJ,2025-06-17 23:57:21,1,learnprogramming,t3_1le1z80,False,
myd13mt,"There is no magic here, you either learn stuff and get good, or you don't.",Pale_Height_1251,2025-06-18 00:13:45,1,learnprogramming,t3_1le1z80,False,
myd2awi,That was my goal when I started studing it. Eventually I realized that I really liked the field so now I started university to help me get my feet on the door of some company and I find that I am miles ahead of my pears as far as knowledge and experience.,Raioc2436,2025-06-18 00:20:44,1,learnprogramming,t3_1le1z80,False,
myd517g,You absolutely can. But you need to tamper your expectation. Just like a hobbyist woodworker will probably never be as good as a dedicated professional furniture maker. You will also probably never be as food or effective as a professional.But yes by working on it every week end for a few years you'll be able to do nice useful things.,esaule,2025-06-18 00:36:45,1,learnprogramming,t3_1le1z80,False,
mz77lgs,"The first thing you do, is to break your project-idea into the smallest, simplest project imaginable.""A music player"" could be a program, that when launched simply opened a window with the text ""playing music"" and then playing a file called music.mp3 that exists in the same folder as the program!I know that is not the final goal, but it is a good first step - or actually a number of steps. The first one would be to create a program that opened a window with the text ""Hello, World"", and then change that to ""playing music"" - the second would be opening a file, and not really doing anything with it, just opening it without crashing. The third would then be to play that file as a music-file - and since you probabaly don't know how to program that, but others have built libraries for it, you search for ""C++ Windows play mp3 file"" or something like that, and get some example code.You spend a lot of time getting that example code to work in your project, and then you've got your ""Music Player version 0.01""Next step is then to maybe let the player display some info about the music being played - adding play, pause, stop, rewind buttons - adding a seekbar etc.Every tiny step makes the player better and better - and because it is tiny steps, you can search for specific help on ""how to create play/pause toggle-button"" rather than very generic ""how to create music player"". There's of course more to it, but that is basically the way most of us work - start with the smallest thing possible, and everytime it works, we add another feature. One step at a time.",peterlinddk,2025-06-22 19:05:23,68,learnprogramming,t3_1lhv6hb,False,
mz73lor,All of the above. There’s no structure to this. Learn what you need in order to complete your tasks.,kevinossia,2025-06-22 18:44:53,13,learnprogramming,t3_1lhv6hb,False,
mz7dxcz,"You start researching.What do you know about music? What formats can it be stored in? What are the trade off of the different formats? Do any allow streaming? Does the language have any capabilities to play music? EtcWhat APIs can you hook into? Ex: does Spotify have one? Is it free? Is it rate limited? Etc.YOU have to go answer all these, but you can start with a simple one. Maybe for the first version you simply get a local file playing. Then next version you allow the user to pause & resume it. Then toggle between two files, etc.IMO it’s better to start with a very simple project then build slightly more complex ones as you learn.",Rain-And-Coffee,2025-06-22 19:38:21,5,learnprogramming,t3_1lhv6hb,False,
mz8ebe0,"You don't build a complex project from scratch. You learn all technologies you will need one at a time. And then you work towards building the project.You want to build a music player, there will be IO question, playing sound questions, and UI questions. Do you know how to do all that? if not scale down to something that uses no more than one tech more than you already know. And start by learning that tech first through a simple project.",esaule,2025-06-22 22:52:58,3,learnprogramming,t3_1lhv6hb,False,
mza5c4s,"To be honest , searching for "" how to make mp3 media player"" is the solution, the otherwise searching for frame and whatever data is impossible to find , unless you have a prior knowledge.",FreedomEntertainment,2025-06-23 05:30:21,2,learnprogramming,t3_1lhv6hb,False,
mza6tt0,"Even before getting getting to learning documentation for libraries, the first steps and most important of all is:1. Do your complete specification (eg. What do you functionally expect from your tools and how to interact with)2. Do the architecture of your specification. I do suggest C4 modeling for training purpose in your case as it should force you to get the ""vision"" and the logic behind getting it.Architecture, in my opinion, is by far the most important technical skills for a dev.",ALambdaEngineer,2025-06-23 05:43:13,2,learnprogramming,t3_1lhv6hb,False,
mzedugv,"Here's how I would conceptualize a music player:1. What library stack can I use to make sure it'll run and compile everywhere? GTK, cmake, and C++ is a good choice.2. What do I want the MVP (minimum viable product) to do? Let's say open a window, queue up some music, and play the currently active file. So I need to be able to queue up some files and then play them in the queue order.3. Figure out what I'm going to have to learn how to use to accomplish that goal. So I'm at the very least going to need to learn to build the window, work with the GTK ListModel, and find a library that will play sound and hopefully handle all of the threading issues gracefully. SDL is a pretty good choice for a cross-platform sound playing library even though it's intended for games.4. Lay out the project directory as well as bolt together all of the libraries I need, and for a windowed application, make some kind of ""Hello, world!"" window.5. Do the rest of the work. I would likely consider that I'm going to need a SongPlayer class and a Playlist class and code those things up accordingly, then from there's it's wiring up button callbacks and updating the state of the window.",InVultusSolis,2025-06-23 21:04:39,2,learnprogramming,t3_1lhv6hb,False,
mz78f75,I am literally doing my first ever project after learning 4 months (with some break) Basically I am making daily habit tracker on terminal It ask you Questions you answer them and it saves answer with today's date as daily log on text file. So you can see how your days spend. I am using functions and classes on python.,master_ulu,2025-06-22 19:09:40,1,learnprogramming,t3_1lhv6hb,False,
mz7d0f6,"Start with building all your stuff from scratch.How are you building anything? Write some code, write a makefile, compile it. Iterate on the code. Why are you building a music player? Are you good with GUIs? Are you good with working with audio codecs? Are you good with working with databases? Why would you start with a music player?Take an inventory of what you know how to do. Those are your tools. Build stuff with those tools. Don't decided to build a skyscraper when your tools are hammers and screwdrivers, instead of cranes and steel-welding equipment.Build what you can, learn more, build bigger. Rinse, lather, and repeat.",qruxxurq,2025-06-22 19:33:34,1,learnprogramming,t3_1lhv6hb,False,
mz8mcje,"OK, take the example of the music player.For me, I'd Google for GUI toolkits and I'd Google for audio playback libraries.I absolutely never use YouTube for programming stuff, I honestly don't know how anybody has the patience for that. You have sit through ads and some dude droning on when you could just be reading a couple of sentences on a project page on GitHub.Forget YouTube and start just looking things up.",ToThePillory,2025-06-22 23:39:02,1,learnprogramming,t3_1lhv6hb,False,
mydlk4p,"The frontend is the part that runs on the user's device - it usually refers to the client part of a website, the part built using HTML, CSS, and JavaScript. Sometimes the term is used to mean a mobile app too.The backend is the part that runs on the server. It sends the page to anyone who visits it, and handles storing persistent data in a database, authentication, bridging to third-party APIs, and posting notifications to your users when things happen, among other things. Backend can be written in lots of different languages.Most Internet-connected applications need both - a frontend and a backend.On larger development teams, those are specialized roles. Some people do one, some do the other.On smaller teams or smaller projects, one person might do both. That's called ""full stack"". It means you know how to write frontend and backend code.",dmazzoni,2025-06-18 02:10:57,152,learnprogramming,t3_1le5fsv,False,
mydmd4k,"People use full stack VERY loosely. Just because you CAN do something doesn’t mean you should. A full stack dev SHOULD be able to build a front end interface and access a back end to support it. What does that mean?Web, mobile, native - can you create a UI if someone gives you designs?Persistence - can you persist data (db management) across sessions?API - can you create a way for your front end UI to interact with your backend (persistence)?Server - can you provide this experience to the user?",Roguewind,2025-06-18 02:15:29,18,learnprogramming,t3_1le5fsv,False,
mydl1b8,"Can you code with frontend technologies (JS, React, Angular, etc)Can you code with backend technologies (Go, Java, Python, etc) + related infrastructure (DBs, Load Balancers, docker containers, etc)If yes you're might be fullstack.",Rain-And-Coffee,2025-06-18 02:08:00,12,learnprogramming,t3_1le5fsv,False,
mydl3ay,Who cares just slap it on the resume and talk your way to a job,TheAnissarap,2025-06-18 02:08:19,21,learnprogramming,t3_1le5fsv,False,
myg7ebx,"Everyone is saying ""full stack"" means they're both front and back-end, which is true, but the term comes from the fact that a person can develop using the ""full stack"" of web technologies. The ""stack"" in my mind used to be HTML, CSS, JS, SQL, and PHP, but there's a lot of options on the back-end, as well as a ton of front-end frameworks that bastardize HTML, CSS, and JS, so they may as well be languages in their own right.",SuperGameTheory,2025-06-18 13:59:01,3,learnprogramming,t3_1le5fsv,False,
mydlmwe,Somebody that can do the work of two developers for the pay of one.,EinsteinTaylor,2025-06-18 02:11:23,14,learnprogramming,t3_1le5fsv,False,
mydl4ud,Full stack just means you can code in the front end and the back end,BrohanGutenburg,2025-06-18 02:08:33,2,learnprogramming,t3_1le5fsv,False,
mye4hk5,I kind of thought fullstack had expanded to include devops as well.,Maraken,2025-06-18 04:09:53,2,learnprogramming,t3_1le5fsv,False,
myfek6p,"In practice it means you can build the front end and struggle and do badly at the backend, but it will kinda work :rolling_on_the_floor_laughing:(From a database developer haha, fixing full stack developers database code keeps me employed!)",TypicalOrca,2025-06-18 11:02:28,2,learnprogramming,t3_1le5fsv,False,
myj6muu,A term made up by start-ups with limited budget,ZookeepergameNew6076,2025-06-18 22:34:35,2,learnprogramming,t3_1le5fsv,False,
mz70xe3,You can always study Computer Science on your own to make up for the lack of a formal degree.[Open Source Society University](https://github.com/ossu/computer-science) has a complete CS program put together from good quality online courses.,David_Owens,2025-06-22 18:31:07,58,learnprogramming,t3_1lhuthb,False,
mz70ryt,I was in a similar situation and reading books helped me to improve a lot. Just pick any book that's relevant to your language and field.,g13n4,2025-06-22 18:30:21,12,learnprogramming,t3_1lhuthb,False,
mz7fdix,"You just spend time learning individual topics.For example I realized I didn’t really understand networking fundamentals, so I went and learned everything I could about it. DNS, ARP, IPs, MACs, Sockets, etc. It took several months.Then I moved onto the next topic I was weak at. I didn’t understand databases at all deep level despite using them for years. So I dove in and learned everything I could about them.Then the next topic, etc: OS, DSA, Containers, Cloud, Security, etc.Everything you could possibly want to know is a Google search away, even easier now with AI and tons of free resources online. Otherwise order a text book and work through it.",Rain-And-Coffee,2025-06-22 19:45:56,6,learnprogramming,t3_1lhuthb,False,
mz70w89,I don't see the problem if you have 5 years of work experience on your resume? That's more than the majority of people on this sub by far.I've seen people recommend teachyourselfcs so you can try that.,Wingedchestnut,2025-06-22 18:30:57,6,learnprogramming,t3_1lhuthb,False,
mz7bw2v,Give teachyourselfcs a try?,Hot-Caterpillar5380,2025-06-22 19:27:36,4,learnprogramming,t3_1lhuthb,False,
mz7xok8,"It’s easy to get stuck in a practical, project-based learning mode and feel like you’re missing the deeper, more theoretical foundations. I’ve been in a similar boat, where the hands-on stuff takes priority, but then you start hitting roadblocks in interviews or realizing there are gaps in your understanding of core concepts.First off, don’t beat yourself up too much. You’ve already got a solid understanding of how to get things done in real-world scenarios, which is a huge plus. The next step is just filling in those gaps in theory and fundamentals.One option could be looking into free or low-cost online resources. There are a ton of high-quality materials out there. Sites like Coursera, edX, or freeCodeCamp offer courses that dive into algorithms, data structures, and other core topics. If you're feeling motivated enough to try something more structured, CS50 from Harvard is an amazing free intro to computer science.Another suggestion is tackling coding challenges on platforms like LeetCode, HackerRank, or CodeSignal. They’ll help you get comfortable with algorithmic thinking and test your understanding of fundamental concepts like recursion, dynamic programming, and graph theory. It can be tough at first, but it’s a great way to get that theory-practice balance.As for motivation, maybe set up a study routine that combines theory with practical application—like, for example, learn a concept in theory, then solve problems related to it. It’ll help you connect the dots and see the real-world value of what you're learning.In terms of classes, I’d say if you're going to invest in them, a well-structured, affordable course from places like Udemy or Pluralsight might give you more value for your money. They offer structured paths that are more flexible than community college but still provide that sense of accountability.",CommentFizz,2025-06-22 21:20:31,5,learnprogramming,t3_1lhuthb,False,
mz8up0w,"The recent resource which has helped my programming markedly is:https://www.goodreads.com/book/show/39996759-a-philosophy-of-software-designwhich when I first read it, read one chapter at a time, then I re-wrote the code of my current project, then repeated that process for the next chapter --- the improvement of which I found quite motivating.",WillAdams,2025-06-23 00:28:04,4,learnprogramming,t3_1lhuthb,False,
mz8fn3g,"OSSU and teachyourselfcs are great resources. I'll also say, this is something we see a lot on Boot dev - professional developers coming back to the site to brush up on our algos, datastructures, FP, and memory management courses (disclaimer: am affiliated)It's a great decision honestly, the theory is super important, and understanding it will give you tons of benefits in your day to day code, in many small ways (and sometimes big ones)",bootdotdev,2025-06-22 23:00:34,3,learnprogramming,t3_1lhuthb,False,
mz9gb1w,"These books helped me, a bit dated now but the concepts are the same as ever:The Art of Computer Programming by Donald Knuth - you will master low level algorithms and just really understand the basicsDesign Patterns by the gang of four - you will know how to solve common problems using any OO language TCP/IP Illustrated - if you want to know networking",no_regerts_bob,2025-06-23 02:32:37,3,learnprogramming,t3_1lhuthb,False,
mz7ira5,I’m a noob so I could be complete wrong but from my limited knowledge if this was my goal I’d probably learn C from a relatively highly rated course and then learn data structures and algorithms. If you understand what goes on under the hood and dsa I feel like that’s your foundation right there,Cautious-Bet-9707,2025-06-22 20:03:35,2,learnprogramming,t3_1lhuthb,False,
myw5yjb,"Honestly, everyone moves at a different pace. There's no standard amount of time it takes. Nobody can guess at how quickly you'll learn",grantrules,2025-06-20 22:35:08,92,learnprogramming,t3_1lgh0vo,False,
myw618j,"Nobody can give you an actual answer to this except you. Are you learning? Are you able to *retain* what you learned and, in this case, demonstrate it through projects? If so, then it's enough.As far as getting a job, however long it takes. Even mastering something won't guarantee a job anywhere.",Initial-Public-9289,2025-06-20 22:35:35,29,learnprogramming,t3_1lgh0vo,False,
mywebuy,"What is studying to you? You need to program, and build things. 3 hours a day of just reading, watching videos, or focusing on trivia will get you nowhere.",InvestmentMore857,2025-06-20 23:23:15,25,learnprogramming,t3_1lgh0vo,False,
myw6m4u,any amount is fine as long as you're gaining actual knowledge,Shavixinio,2025-06-20 22:38:58,10,learnprogramming,t3_1lgh0vo,False,
myw9sbs,"Depends on how much you anticipate to learn and how long you plan to be learning. A university CS program is about 3–4 years long, with full-time study, and it does not guarantee a job.Having a network of friends, family members, and others who could offer you a first job can be really helpful (you may check for local job fairs, meetups, and different user groups in your area).",joranstark018,2025-06-20 22:57:07,8,learnprogramming,t3_1lgh0vo,False,
myw8sag,If you can keep doing something everyday none stop I am sure you can achieve whatever you want. Good luck! Unless you want to be Superman or something like that…,MyBaseHere,2025-06-20 22:51:24,6,learnprogramming,t3_1lgh0vo,False,
myw9ruj,I did it pretty much full time from scratch and it took me 2.5 years.,tylerlw1988,2025-06-20 22:57:02,7,learnprogramming,t3_1lgh0vo,False,
myw6tpy,"Just the others said, everyone has its own pacing and how own schedules. But 3 hours is better than 0 hours. Take your time and consistency is the key. Consistent reading and practicing will help you improve. Good luck!",nullptr023,2025-06-20 22:40:10,5,learnprogramming,t3_1lgh0vo,False,
myw7611,"3 hours a day is on the high end of what you might expect in single college class, or just about typical for difficult subjects. Id say at that rate you could learn programming well enough in about two years with one caveat. You’ll definitely need some sort of mentor or some way to get feedback on your learning to track your progress.",SirZacharia,2025-06-20 22:42:10,5,learnprogramming,t3_1lgh0vo,False,
myw74io,It depends.Everyone is different and only you know how you learn best.To learn a skill you must be consistent.Even 3 hours every day can make a big difference if you do it for a year.But to be one of the best you must be obsessed with learning.You must forget about time when you practice.That is how you reach the top,Gintoki100702,2025-06-20 22:41:55,3,learnprogramming,t3_1lgh0vo,False,
mze1793,"You’re an engineer. Nobody ever said, “well, houses had a pretty good run, guess we’re done with them now.”",BigLoveForNoodles,2025-06-23 20:04:55,199,learnprogramming,t3_1liqr1m,False,
mze1770,"Make it different. Make it better. Find an open source tool you like and contribute. The car already exists, but people still make new cars every year. New models. New features. Etc.",NeoSalamander227,2025-06-23 20:04:55,49,learnprogramming,t3_1liqr1m,False,
mze8jgy,Could say that about art or music too yet people continue to make it. There’s always something new …,Akin0,2025-06-23 20:39:28,15,learnprogramming,t3_1liqr1m,False,
mze7mzz,"> all the things I always wanted to make have already been made1. **So what?** If you always wanted to make them, why let that stop you? Build your own and do it exactly the way you’ve always wanted.2. **Great!** If the existing versions of the things you were going to make work well enough, maybe you don’t need to build them again. It’s a great big world full of interesting possibilities, so look around and pick a new project.",iOSCaleb,2025-06-23 20:35:13,10,learnprogramming,t3_1liqr1m,False,
mze2sfc,Make things that have already been made! Or Are you trying to make a startup?,NewPointOfView,2025-06-23 20:12:30,7,learnprogramming,t3_1liqr1m,False,
mze8sut,What a strange mindset to have for someone who knows programming well.,i-Blondie,2025-06-23 20:40:42,6,learnprogramming,t3_1liqr1m,False,
mze6xem,What have you actually done?What programs have you written?,rustyseapants,2025-06-23 20:31:52,4,learnprogramming,t3_1liqr1m,False,
mzebzc4,"Create programs that interest you, that you are curious about and want to do them , that you want to make ,and eventually people will found that one think that you have made and find it useful and interesting in their part.",FerretOver,2025-06-23 20:55:46,3,learnprogramming,t3_1liqr1m,False,
mzepycx,"Even if this is true, it can always be made better.",iliekplastic,2025-06-23 22:06:14,3,learnprogramming,t3_1liqr1m,False,
mzeq1qc,When you go through the app process you may discover new features you want to add that doesn’t exist on the current popular app. Keep going because I know I am!,mrburnerboy2121,2025-06-23 22:06:44,3,learnprogramming,t3_1liqr1m,False,
mzbm7op,"yes, it is bad practice. just return the proper status code and save a headache for the person integrating your apis",FreezeShock,2025-06-23 13:04:23,306,learnprogramming,t3_1lifxxz,False,
mzbmpyw,People will curse your name if you return errors with 200 status codes. We have a lot of code that checks for errors with simple if statusCode >= 400 { // handle error }Don't make me marshal json and have to know your schema to know that my request didn't work.,IncreaseOld7112,2025-06-23 13:07:27,136,learnprogramming,t3_1lifxxz,False,
mzbm6uv,"> is it bad practice to return 200 OK for both success and error cases?Yes.idk what more to really say about it, we have standards and protocols for a reason no need to reinvent the wheel.",Digital-Chupacabra,2025-06-23 13:04:15,38,learnprogramming,t3_1lifxxz,False,
mzbnuqm,">is it bad practice to return 200 OK for both success and error cases?Yes>Should I do this:>`res.status(200).json({ success: false, message: ""Invalid input"" });`>Or this:>`res.status(400).json({ message: ""Bad request"" });`None of them, 400 already means *""Bad Request""*.I would go with something like: `res.status(400).json({ message: ""The input XXX is invalid, should be bla bla bla"" });`",MeLittleThing,2025-06-23 13:14:07,59,learnprogramming,t3_1lifxxz,False,
mzbm3cc,"I think GraphQL does this, GraphQL always has to return a JSON response.Personally, I am still undecided on its 'legitimacy'; on the one hand it makes code more uniform but on the other hand it feels like splitting things up for the sake of it i.e. if you make an HTTP call you you expect 200/300/400/500 responses and usually code accordingly.",bravopapa99,2025-06-23 13:03:39,13,learnprogramming,t3_1lifxxz,False,
mzbn7n6,"I mean HTTP response codes feel like quite a unifying concept in an industry that is relentlessly innovating and finding new ways to do things. I've built my fair share of logic that is triggered by various responses, particularly 429s. It would seem a shame to skip over such an informative and succinct convention and I think it would make a lot of the response handling more convolouted. It's an interesting question but I'm struggling to think of a scenario where returning 200 for an error is good practice, though as you've said these APIs do exist!",RushDarling,2025-06-23 13:10:22,8,learnprogramming,t3_1lifxxz,False,
mzbqkb9,"By definition a RESTful API should respect HTTP verbs. You could decide not to of course, but then your API is not RESTful but instead simply an API communicating via HTTP.There are some HTTP communication protocols, like GraphQL, that (almost) always return a 200 response and the error in the body. Unless you are specifically using one of these protocols I would use the correct HTTP verbs wherever possible. Conforming to industry standards just makes everything easier. For example, many JS network libs (like Axios) understand that a HTTP status code of 400 is an error response and will throw an error on the client. This makes error handling client side a lot easier, as you can implement try/catch blocks.",ABadProgrammer_,2025-06-23 13:29:30,6,learnprogramming,t3_1lifxxz,False,
mzbmqzq,Yea.,Positive_Rip_6317,2025-06-23 13:07:37,5,learnprogramming,t3_1lifxxz,False,
mzbs805,"Yes, not only do you want to use error codes for the intended purpose. But if your getting lots of 400s you want to be able to identify that in your monitoring software which will be looking for those errors. Ideally unless someone's playing with your endpoints, you want no errors in day to day. Even a 404 error can point to dead links or improper checks on the frontend.",Emotional_Pace4737,2025-06-23 13:38:46,4,learnprogramming,t3_1lifxxz,False,
mzczq21,"I am of the camp that outside the most common status codes, no, you should not use most of the status codes that exist, because most of them have niche semantics that won't be applicable to you or are used in specific subprotocols that ride on top of HTTP like WebDAV, or HTTP extensions. Perhaps a 200 for an error is not OK, but I would prefer an API with consistent error responses to one that abuses 20 different HTTP statuses all slightly incorrectly. Same thing with HTTP verbs.Most HTTP status codes are designed to describe outcomes related to the transport itself rather than the business logic that is behind it, and as such, HTTP status codes should be used to describe issues that occur prior to any form of processing or side effect and past that you should fall back to a very small subset of statuses to describe the outcome. That is what a body is for.. The problem with this tends to be when people have to shoehorn complex behaviour into a single endpoint due to reasons outside their control, and they start abusing other HTTP status codes (especially WebDAV codes) to try and communicate their intent for things like partial success, or precondition failure, or side effects. They then do not realise half the HTTP status codes have strict and specific semantics about things like headers that should be included with them, and they break the rules of the spec by using them, which is far worse than just not using them at all. HTTP was not originally designed for requesting that Amazon sends you a new bag of cat food, it was designed for asking Amazon to show you a webpage about cat food.There is then confusion on what describes a client versus a server error. Does a 400 purely specify that a request looks okay, or does it imply that the actual data it represents is meaningful in terms of the current system state and data that is stored? Do you expect a server to start processing your request prior to giving a 400 back? Does bad request purely describe the request itself or the implication of that request? Do you consider a 500 to mean something went wrong during processing or just that your server is fucked? Once you get into the rabbithole of trying to work out exactly when each code is valid, you realise the system you are integrating with made a totally different decision on how to organise this and interpret it differently.The other issue is that some HTTP libraries made the somewhat braindead decision to throw exceptions when you get certain status codes, and this then makes integration more difficult. Really what you are often communicating is semantically tied to your own system, and if that is the case, using the body to communicate that rather than the status code can be more sensible.Even from a monitoring perspective, anything significant will be relying on application metrics rather than metrics from load balancers to determine system health. Load balancer metrics for status codes just give a rough idea of how much stuff is working versus not working.TLDR: 400, 401, 403, 404, 2xx, 500, 503 are OK. Use those as you will. Anything more complicated that is related to business logic should just be in a 200 or 500 and detail the issue in the body. Abusing other codes like 422, 423, 507 just because they ""sound like"" what you want is far worse than just using vague codes. If you are giving me a 479 Shits Fucked Yo designed to be used with WebFTP v2.718281828459045 from 1943, or a 486 Its Tuesday that Twitter used once, then I have a problem. Using 200 for errors might be controversial but if it is easier to do that and provide consistent responses in the body across your systems, then go for it. Whether you are checking a status code inside or outside a body, most programming languages use the same constructs to inspect it. If using a 3 digit number at the start of a response is what people think defines usability, then they are just gatekeeping unless there is an actual technical requirement for it.",nekokattt,2025-06-23 17:09:09,6,learnprogramming,t3_1lifxxz,False,
myg5och,"I feel the similarly to you but I never even completed my cs degree. I work in a company with over 100,000 employees and recently they’ve been pushing ai usage very heavily. Im curious about what interviews look like now that theres a bigger focus on ai…The best advice I can give is if your understanding of java for example is not great take a course to become an expert on it and that will probably help with your confidence. No one is good at reading documentation. For that you just have to force yourself to read it line by line and then summarise each paragraph to yourself to help cement the information in that paragraph. I especially struggle with pushing myself to learn more, but because I’m aware of it, I can now push myself to work on correcting it. It sounds like you probably know what your weaknesses are, your best way to fix it is to find a way to build your confidence in those skills. You very likely know more than you realise and just need to find a way to change your mindset. It’s pretty common to struggle with this but if you’re looking to specialise in something focus on what you enjoy and just branch out from there. Good luck! Hopefully this helps at least a little bit.",Spiritual_Treat9092,2025-06-18 13:50:07,11,learnprogramming,t3_1lef7fp,False,
myhesoj,"I can't comment on being a dev, that's not my job.I'm in a VERY similar position with my career. I do have a caveat though, and that is that I'm not in my job for the enjoyment of it. Im doing my job because it pays quite well.I'm in this sub purely because I was trying to learn python one time.I'm a heavy diesel technician. I work on mining machinery. My weaknesses include hydraulic/pneumatic diagnostics, electrical I'm ok with hilariously. Basically I have massive glaring weaknesses in my skillset due to various things that have developed my career.My perspective is this: I'll keep learning, if they keep paying me. If somebody asks me to do something don't know anything about I just tell them ""hey, I don't have experience on that but I'd be super keen to learn.""Thats a very respected response, because it means that you care enough about the end result to not make more work for other people. A surprisingly uncommon attitude.To be honest I think you're suffering a little from imposter syndrome. You have a fairly broad base of knowledge and I would imagine you can develop the skills required as needed.In any trade skill or otherwise, you're not expected to know everything. If you gave me a Bugatti, I would be lost. Its a piece of machinery sure, but not one I'm familiar with. I can definitely learn to work on them given opportunities. Same applies to you. You're not expected to know everything. Good luck out there friend :)",vbpoweredwindmill,2025-06-18 17:23:59,3,learnprogramming,t3_1lef7fp,False,
myfphbw,"maybe take cs50 course or read books on os, computer organization, networking etc so you can build basic foundations. checkout [teachyourselfcs.com](http://teachyourselfcs.com)",MAwais099,2025-06-18 12:17:44,7,learnprogramming,t3_1lef7fp,False,
mygchvd,"This sounds like classic imposter syndrome. In reality, with a CS degree and 4 years of hands on development, you're doing fine.When you spend time in programming communities on the internet, it can sound like everyone is using some new technology except you and you're falling behind. In reality, companies rarely use the latest hot thing and may be on tech stacks years or decades old. If you've learned the current tech you need, you'll be able to pick up new tech.If anything, consider job hunting. With your experience you're probably pretty valuable and could probably find a job where you have more responsibility for more pay and can work in a new environment with new technologies. Just remember that the tech stack you're working within is one small part of whatever job you have. Don't forget to strongly consider the quality of the people you're working with, the impact of your work, etc.",Ok_Yesterday_3449,2025-06-18 14:24:21,3,learnprogramming,t3_1lef7fp,False,
myg0yqg,"I'm pretty much like you bro. I learned all sorts of progamming language without having any structural foundation, since I mostly self-taught. Now I'm currently stuck, not specializing on anything, so ig i just need to ""tryhard"" in AI/ML, CS and networking.",Pleasant-Confusion30,2025-06-18 13:24:44,2,learnprogramming,t3_1lef7fp,False,
mygxrca,"You seem to have a good perception of yourself. Well done!It will be hard to slow down from the speed that you currently experience through jumping ahead, getting things done through trial and error, copy and pasting and use of AI.To earn money and depending on context you will have to hold the “facade” up, that you know it all and can do it all. For the right projects you can indeed do it all.I would look for a job or training place where you can be humble and ask the right questions: Ok, if I do this it works: But why? Would this be a true alternative? I believe that is better: Do you agree?But that implies that you have a job, where they no only push you as much as possible to get the most as possible.Maybe you need to find such a complex problem, that your current methods really do not work anymore. On another note: if you are overwhelmed when learning or digging deep: I often feel, that I should not invest that much time in that problem; that I should take a short cut to an easy way out.If you have similar experiences: make learning/understanding/contemplating your explicit goal for a set amount of time. Instead of finishing the project in 2h try to understand the aspect of the framework you are using for 3h and then finish the project in another 2h. During those 3h you might be able to calm your brain away from its “must finish project now” thoughts.",Ormek_II,2025-06-18 16:04:40,2,learnprogramming,t3_1lef7fp,False,
myh02d8,"Sharing my perspective, I also feel like this, I also learned things myself, I also do not have any mentor, I consider myself as a scrappy developer, a developer that won't give you the quickest solutions but eventually I will get there. Tbh it has taught me alot, the grit, the never give up attitude and along the way you will find good people that will help you as well.So overall don't worry much, try to find your niche in the field, and it might make you even more passionate dev, and learn more about the real software engg. stuff. The more you explore the better you become.Enjoy the journey, not just the destination.",notBotConfirm,2025-06-18 16:15:31,2,learnprogramming,t3_1lef7fp,False,
myhe5yf,"I really relate to your experience. During the pandemic, I used to cry because the classes were so difficult and confusing — everything felt very strange and disconnected. On top of that, we didn’t have AI tools back then to help explain concepts step-by-step like we do now.Honestly, a lot of the time I felt lost, especially since many professors kind of checked out or weren’t available. StackOverflow became my lifeline. There were so many moments when I was stuck and had no one to ask, so I had to figure things out on my own.About AI — I think it’s important to understand that AI doesn’t just solve the problem for you or give you the perfect answer every time. Instead, it helps guide you toward the solution, giving you hints or a direction to think in. At the end of the day, it’s still you who needs to understand the problem, connect the dots, and come up with the real answer.That guidance is incredibly valuable, especially when you feel overwhelmed or stuck. But relying solely on AI without building your own understanding won’t get you far. I think being aware of that balance — using AI as a tool, but still doing the hard thinking yourself — is what makes a real difference.So, hang in there. The fact that you’re reflecting on this and want to improve means you’re already on the right path. We all had shaky starts, but what matters is how we keep moving forward. You’ve got this!",SilentNebulaa,2025-06-18 17:21:08,2,learnprogramming,t3_1lef7fp,False,
mynhbg4,I feel I can relate to this even thought I just started college I am also studying CS. I’m also heavily realize on ChatGPT I do hate it but there are time that I struggle to understand it. I’m also afraid that I will be in the same boat as you are but I do want to have a better paying job then what I have now.,masga21,2025-06-19 16:00:18,2,learnprogramming,t3_1lef7fp,False,
mynn2sf,I would say just this. If you don’t work in an environment where you design the code the architecture and so on those are useless skills as long as you are paid to ship products and the how doesn’t really matter in most cases as much as the end product. In regards to your own abilities yes some jobs are really really bad as they will not develop good skills but force you to compromise on it. My advise will be to focus on that back end structure and architecture that you said you are loving and have smal windows where you either ask chat got to explain to you things like you were a beginner and they are your pair programming partner and so on or you find communities of people that share the same interest. For example you could start mentoring junior developers and have them contribute to your own back end small to medium and later expert api designs while implementing all the testing strategies and so on. It doesn’t matter if that direction is provided by chat got as long as you explain that to someone else as it’s coming from you as the one you explain to will struggle to understand or follow and you need to constantly repeat yourself hence learning the subject as you teach it. Pair programming is very good and the practice of small iterative steps while using git hub and commits push and pull requests with branching is an amazing collaborative tool to provide knowledge for yourself and for the mentored pupil. This will make both your GitHub’s active and it shows consistency. Setup the backend repo make a snap quick dummy - trace the steps and then delete it and provide the same from scratch to your newbie taking it slow explaining everything like he has no clue - which he won’t anyway - forcing you to explain your code differently even though you have an idea what it means. Encourage them to ask questions and focus on interacting instead of building. Follow the driver navigator pattern and make sure you stay within the roles themselves both the beginner and you and then switch after either functions being made or later features depending on the project itself. There is more to it on the aspect of self development here but I won’t get into that either as I’m writing too mi ha but find an actual person that works on backend and ask for being mentored by them as well. This will provide you with both as a mentee and mentor experience and will help you develop your skills in no time compared to what you doing. Focus on finding solutions together other than shipping a solution. Enjoy,Daydreg,2025-06-19 16:28:21,2,learnprogramming,t3_1lef7fp,False,
mzbfysv,"Arguably you wouldn't learn much more using Dreamweaver as it's a WYSIWYG tool. At least an AI created project is visible and you can tinker with bits.It sounds a lot like your teacher, unfortunately, doesn't know how to do web development OR doesn't have time to teach people. I would recommend you follow her instructions to some degree but take time to really understand the output of the AI and if you like attempt to write some of it from scratch.IMO if you understand the output of the AI it no longer constitutes ""vibe coding"" anyway. Take the time to learn to the level of your own curiosity and you will go a lot further - not just in this specific case but for the entirity of your educational experience.",bhison,2025-06-23 12:25:34,59,learnprogramming,t3_1lif5cg,False,
mzbhufa,"""Vibe coding"" is going to set you up for failure. Get a book that teaches you HTML/CSS/JS, do the examples, do the quizzes, build your own pages. If you have a true interest in coding, use *your* brain and learn it. There is NO substitution for actually learning the fundamentals. That being said, there is a proper way to use AI. When you get stuck, ask AI how to HELP you solve the problem. Use AI like a teacher or professor. Ask it the dumb questions that you wouldn't raise your hand to ask in class. It gets REALLY boring at times, you have to power through it. Get a buddy to learn with, show each other up with what you've learned and then teach each other how you did it. If you're serious about coding, then actually learn it. ""Vibe coding"" will get you nowhere. Plus, you've got us. What more could you ask for? :winking_face: You can do it, it's gonna be hard ... but it gets awesome when you build something impressive.",doxx-o-matic,2025-06-23 12:37:36,15,learnprogramming,t3_1lif5cg,False,
mzboyqi,> Adobe DreamweaverWhat year is it?! This is still a thing?,InfectedShadow,2025-06-23 13:20:29,13,learnprogramming,t3_1lif5cg,False,
mzboaqa,"This is a good lesson for you though maybe not the one you were expecting. Teachers aren't there to give you all the knowledge, they are there to provide the spark of learning. The goal of education is to learn to teach yourself because learning never stops, especially in this field.",writing_code,2025-06-23 13:16:40,3,learnprogramming,t3_1lif5cg,False,
mzcj5nq,"If you want to teach yourself HTML/CSS, I remember Khan Academy's tutorials were pretty good a few years back, they're probably still good.[MDN](https://developer.mozilla.org/en-US/) is also a good reference for when you forget what something does. Think of it like an encyclopedia.",ChickenSpaceProgram,2025-06-23 15:51:36,3,learnprogramming,t3_1lif5cg,False,
mzcx1bm,"I don’t know the expectations for a 9th grader computer class in the USA. But showing kids how to “vibe code” doesn’t sound bad to me. I think it’s fine to show kids how the web works, the different elements that go on a front end web page like html+css+js, how “code” looks like and some of the tools we use. That said. There still is a long road ahead. If you are enjoying programming and want to learn more then don’t let this class demotivate you.",Raioc2436,2025-06-23 16:56:49,3,learnprogramming,t3_1lif5cg,False,
mzbhg61,Did she at least tell ya'll what AI to use? Do you get a subscription through your school? The whole thing is absolutely bonkers to me.,beastwithin379,2025-06-23 12:35:04,2,learnprogramming,t3_1lif5cg,False,
mzc0lal,Dreamweaver still exists?,nousernamesleft199,2025-06-23 14:22:27,2,learnprogramming,t3_1lif5cg,False,
mzc68k5,Dreamweaver in 2025? How old is your curriculum.,DeadLolipop,2025-06-23 14:50:05,2,learnprogramming,t3_1lif5cg,False,
mzd28a5,"Sounds like your teacher is either incompetent or unsupervised and has gone down the rabbit hole. Because if most other teachers did something like that, their credentials would be questioned.",kickingpplisfun,2025-06-23 17:20:20,2,learnprogramming,t3_1lif5cg,False,
myfxg23,you don't need to buy an operating systems book:[https://pages.cs.wisc.edu/\~remzi/OSTEP/](https://pages.cs.wisc.edu/~remzi/OSTEP/)[https://pdos.csail.mit.edu/6.828/2023/xv6/book-riscv-rev3.pdf](https://pdos.csail.mit.edu/6.828/2023/xv6/book-riscv-rev3.pdf),justUseAnSvm,2025-06-18 13:04:57,19,learnprogramming,t3_1lefw9a,False,
myfui9u,Seems to have a lot of redundancy.,throwaway6560192,2025-06-18 12:48:06,12,learnprogramming,t3_1lefw9a,False,
myfu59x,I suggest checking out this GitHub repo that collects a wide variety of free Computer Science resources. You may find some utility in planning your learning.[https://github.com/ossu/computer-science](https://github.com/ossu/computer-science),DodgeThis90,2025-06-18 12:46:03,9,learnprogramming,t3_1lefw9a,False,
myfx516,"If you read C Programming: A Modern Approach and do the exercises, then you probably won't actually ""need"" The C Programming Language nor Beej's Guide, but it still might be interesting to look at them.Personally I'm a fan of The C Programming Language because it is short, concise but also detailed. If you want the ""thorough"" treatment of C, then King's C Programming: A Modern Approach is better.Beej's Guide to C is OK-ish, but I don't think it's as good as his Guide to Network Programming. I would recommend a different book if you are a beginner to C. Beej's Guide is useful if you want to see explanations of new C features like #embed or #include , but a major weaknesses for new learners are that there are no ""student exercises"". I suppose you could invent some on your own, but it's a sign of a good book that good, well-thought-out exercises are given at each stage that help you ""level up"" at each chapter, to help you slowly build up your ""rpgramming muscles"" as it were. Both K&R's book and King's book do that very effectively. In fact for the classic K&R book there is also a separate book called The C Answer Book where solutions are given. But in order to get the most out of such exercises, you should first try your own solutions yourself before reading another answer.Also, I noticed you have no book which specifically mentions assembly language. If you want to learn low level, then you need at least a passing familiarity with Assembly, in my opinion, e.g. x86, x86\_64, ARM, or all of them. If you learn one architecture, then learning another is not as hard.",chaotic_thought,2025-06-18 13:03:10,5,learnprogramming,t3_1lefw9a,False,
myhftfw,"Build more, read less",No_Chard5003,2025-06-18 17:28:36,5,learnprogramming,t3_1lefw9a,False,
myfwykz,"Since you mention both C and UNIX-like operating systems, perhaps instead of reading multiple books on each subject, pick just one that is a good overview and instead use the time to get to know, read and contribute to the Linux kernel? The [Kernel Janitors](https://lore.kernel.org/kernel-janitors/) (beginner's) group still seems to be quite active.",gary-nyc,2025-06-18 13:02:08,3,learnprogramming,t3_1lefw9a,False,
myg6eiy,"It's literally thousands of pages of text. So what do you *really* intend to read? Have you bought all these books? They're all quite expensive.How do you know you won't buy the books then choose not to read it? It's nice to have a plan, but doing something about it tougher. Some feel like they've accomplished something by organizing a plan, but a plan is just a plan.",CodeTinkerer,2025-06-18 13:53:55,3,learnprogramming,t3_1lefw9a,False,
myg7prs,You people in the comments are awesome!,pebz101,2025-06-18 14:00:37,1,learnprogramming,t3_1lefw9a,False,
myfzuzv,"I personally recommend Core Dumped channel on both the CS and OS sections, his explainations are quite deep and related to OS functionalities as well.",Pleasant-Confusion30,2025-06-18 13:18:39,1,learnprogramming,t3_1lefw9a,False,
myg5km9,"I've seen this one before, but forgot it was online, thanks for the link",Rain-And-Coffee,2025-06-18 13:49:35,2,learnprogramming,t1_myfxg23,False,
myyt030,"Being a SE hiring manager, in the U.S, it is very hard to even be considered without a degree, and that is done at the recruiting side, not the SE manager side. I’m not saying that’s fair, it’s just how it is. But, over time the degree matters less than the experience so if there are ways you can get yourself into the tech field even if it isn’t programming, that will get you started. Also note (and you can read this in the news) programmers are a bit at risk these days with AI. So it would be good to find a space in the AI world with programming. There will be more open doors this way, at least for the short term.",airveens,2025-06-21 10:46:09,12,learnprogramming,t3_1lgoh5y,False,
myy52ez,"It's possible to get a SE job without a degree, but it's a million times harder to do the self taught route. You don't have as many opportunities as a college grad.",Alert_Locksmith,2025-06-21 06:44:15,23,learnprogramming,t3_1lgoh5y,False,
myzmzqn,"if you’re located in the US it is basically impossible to get a SW job without a degree. youre competing against people who have degrees, internships, research positions, and SW devs with 10+ YOE who hav been victims of the recent tech layoffs. the people with degrees are struggling immensely in getting jobs nowadays. please do not listen to the people who entered the market more than 3 years ago. that was a completely different time and job market. current tech standards require you to have at the very least a degree and enough projects to fill your resume, even that will leave you struggling if you have no internships. and you have no shot at internships without a degree as they are explicitly targeted to uni students. the market is NOT at all what it was before and if you’re in the US or Canada please don’t waste your own precious time. head over to r/cscareerquestions and r/csmajors if you would like to read some personal stories about the horrors going on now. i really just want to caution you against wasting your time, in the end it is your choice how you proceed and i wish you best of luck OP!",Any_Avocado9129,2025-06-21 14:18:47,9,learnprogramming,t3_1lgoh5y,False,
myxtvh7,"Speaking from personal experience, you don’t need a degree to become a developer. At the company I work for I started off working in several data entry roles, and then ended up as a developer. I do have a college degree in something that isn’t even remotely close to software development/engineering. To beef up my resume/portfolio I started taking classes on freecodecamp. 10/10 would recommend",tjzwijac,2025-06-21 05:03:39,22,learnprogramming,t3_1lgoh5y,False,
myzekh8,"For website developing , yes you definitely don't need a degree, but like if U wanna make games/ desktop apps you'll need to go to college imo",Motor-Efficiency-835,2025-06-21 13:27:36,4,learnprogramming,t3_1lgoh5y,False,
myxu5h1,"I don't have a degree, most of the developers I know don't either.You either learn and get good at it or you don't.",ToThePillory,2025-06-21 05:05:57,8,learnprogramming,t3_1lgoh5y,False,
myz9c9t,It is possible but difficult especially now with the job market. Think from the perspective as company. If I have 5 open positions and have 10k resumes to filter. Having a diploma is a relatively low bar that can filter out the noise even if there are false negatives. I know plenty that don't have a degree but got a job. It is doable but you have to really set yourself apart from others ie no stupid projects like making a basic calculator. If you wanna do full stack then I recommend you look into the Odin project,heroyi,2025-06-21 12:53:14,2,learnprogramming,t3_1lgoh5y,False,
mz4h38r,"I’m not in the US, but I did get a non CS engineering degree. Worked for over a decade in non tech jobs. Realised I love to code and decided to change my job. What worked for me: learn a programming language. Preferably Go or Python. Learn Linux, use it as your daily driver. Learn how to use the terminal. Learn everything you can about installing and maintaining a Linux system. RHCSA is good, but not needed. Learn Docker and Kubernetes. Learn a cloud service like AWS or Azure. Most importantly, always be ready to learn. I did all that and applied to a DevOps/Sys Admin role. The company I applied to also needed intern product developer role. I volunteered for that. Did a 6 month internship. Pretty weird to be an intern as a 34 year old, but I’d like to think I killed it there. They made me a permanent employee on June 1st and I’m loving it. I suppose being a bit older than a regular intern motivated me to put my best foot forward. I volunteered to do things no one else wanted to. Learned a lot in the process. Hope things work out for you.",StationFull,2025-06-22 08:50:03,2,learnprogramming,t3_1lgoh5y,False,
mz0oh3e,"I was in a similar situation sometime back, I suggest take whatever job you can, study a part time degree and work on your goals like that, am still on the journey of being an SE but this is too relatable",nileyyy_,2025-06-21 17:37:26,1,learnprogramming,t3_1lgoh5y,False,
mz17pk6,Imo it doesn’t matter if you think you’re being slow as long as you are absorbing the information - that’s more important.,Tycuz,2025-06-21 19:20:26,31,learnprogramming,t3_1lh43o5,False,
mz18ejx,I think 7pgs an hour is a reasonable pace for a textbook.,light_switchy,2025-06-21 19:24:20,14,learnprogramming,t3_1lh43o5,False,
mz1b3a4,"Treat it like you're in a college course and take notes on everything you read. The process of taking notes actually slows our brain down and forces you to pay more attention to what you're reading. They've actually done studies on this and found that process of taking notes is one of the best ways to not only process information, but retain it as well.",Automatic-Yak4017,2025-06-21 19:39:29,9,learnprogramming,t3_1lh43o5,False,
mz1b54w,"The more you read the faster you get as you increase “seeing” the words, e.g. syntax highlight first time it’s annoying to read out, then it is interesting and your mind wanders just a bit, after that you just see it and move on :)",Timely-Degree7739,2025-06-21 19:39:46,7,learnprogramming,t3_1lh43o5,False,
mz2kzta,"> I'm trying not to skip any exercises so sometimes my pace is extremely slow – like 7 pages an hour.That sounds normal. Reading technical literature is slow in the first place. Plus you’re doing exercises, not just reading.You’ll realize reading one book completely will give you such a good base you’ll be able to read other books more quickly.Tl;dr (joking): It’s worth the grind!",Just_to_rebut,2025-06-22 00:05:03,3,learnprogramming,t3_1lh43o5,False,
mz301ug,"Try to go slower. Understanding is what matters. Double check your knowledge as you go.Take notes in your language if needed, it may help to distill the information.And just keep reading, deliberate practice is what in the end will make you read faster.",juancn,2025-06-22 01:39:03,3,learnprogramming,t3_1lh43o5,False,
mz49wgb,It’s not a novel. It’s supposed to take time. You need to absorb and really understand what you read. Maybe write some code and take breaks to clear your head.,aardbeg,2025-06-22 07:38:02,4,learnprogramming,t3_1lh43o5,False,
mz16887,"My approach was to get some tool to highlight the book (unless it's psychical copy, calibre worsk the best), get markdowns and possibly comments in your native tongue what all that means for you, slowly going with each paragraph. On second screen, I've Obsidian opened (you can get it for free if you don't have it, just remember about backing it up) configured with zettelkasten method (slipbox) with bunch of ideas tagged and connected, and slowly developing that over. Truly said, I have never been thinking about using tool like this for years as there, but boy - it speeds things up drastically. Just be honest with yourself and make clear and nice notes - not too long. I will be more than happy to help you If you're interested - just DM me. :)",Additional_Zebra9397,2025-06-21 19:12:13,1,learnprogramming,t3_1lh43o5,False,
mz1f407,"Are you reading the physical or digital book? If digital I would recommend looking for a translated version, it’s much easier to learn in your native language instead of translating in real time while learning programming. Otherwise, your approach is great. Be present with what you’re learning, we live in an era where “learn as fast as you can” is the dominant influence. But learning with your full attention is more deeply ingrained, especially if you try to explain or teach that to someone else to reinforce it.",i-Blondie,2025-06-21 20:01:41,1,learnprogramming,t3_1lh43o5,False,
mzcwdb6,"Taking regular breaks *is* sustainable. Trying to work without stop is not. (Please don’t drink 5 cups of coffee a day though). On days where I work 3 hours without a break I generally run out of juice and either log off early or suffer a significant drop in the quality of my output.I recommend trying to do something healthy on your breaks. Drink some water, eat a small snack, go for a quick walk. At the very least just get up and use the bathroom. Kidney stones are no joke.",josephjnk,2025-06-23 16:53:46,35,learnprogramming,t3_1lilp3n,False,
mzcwapv,"It is significantly easier to focus on writing software when you uninstall Tiktok, Instagram, and Reddit from your phone.",polymorphicshade,2025-06-23 16:53:27,12,learnprogramming,t3_1lilp3n,False,
mzd7sd3,"The Pomodoro Technique works for me. You set a timer for 25 minutes and code without distractions. Take a 5 minute break next. Walk around, stretch, hydrate yourself. Repeat this 4 times (four 25 minutes work sessions) and then take a longer break. It's best if you try to avoid screen time during your breaks and give rest to your eyes otherwise you'll get major headaches.",codingzap,2025-06-23 17:45:01,7,learnprogramming,t3_1lilp3n,False,
mzd2km4,"Healthy answer: Getting up every 25-30 minutes to stretch for a bit, drink water and look through the window (no phone, no talking with anyone if it's not about what I'm working on)Gremlin answer: chug a coffee, turn on pokemon battle music and hyper focus on my work for 5 hours straight.",LazyWorkaholic78,2025-06-23 17:21:51,5,learnprogramming,t3_1lilp3n,False,
mzcxpfi,You have to build up for it but it's also discipline.,Ok_Tadpole7839,2025-06-23 16:59:52,4,learnprogramming,t3_1lilp3n,False,
mzdwdzx,"Regular brakes. Stand, walk... tea.",yoroxid_,2025-06-23 19:41:46,3,learnprogramming,t3_1lilp3n,False,
mzd016m,"What's ""focus""?I write a line of code every other while in between bouts of distraction.",EliSka93,2025-06-23 17:10:32,2,learnprogramming,t3_1lilp3n,False,
mzdgafm,Code 60 minutes then take 15 minute break. Code 90 minutes then take a 20 minute break. Give your mind a rest and refresher away from the screen(s).,wolfhuntra,2025-06-23 18:24:18,2,learnprogramming,t3_1lilp3n,False,
mzcwly2,"While working, I just do 10 minute breaks every 2 hours, and I have an hour lunch. It’s rare for someone to be programming a full 8 hours non stop unless there is some major crunch.Working on code for me is more like trying to solve a puzzle. If I can sit and play portal for 2-3 hours with no break, that just means I actually need to feel engaged with what I’m working on.When I was learning at university, it was pretty much the same thing, except sometimes I would be chatting with someone to work through the problem with them or shoot the shit while during.",TsunamicBlaze,2025-06-23 16:54:53,1,learnprogramming,t3_1lilp3n,False,
mzczpic,"I usually have some sort of music/asmr/white-sound in the background when I need to go into focus mode, they're usually at least 2 hour long and with no mid rolling ad (hate those, break me out of my zone). I usually tune out what I'm play after 30 minutes in but the noise help me stay focused. I don't have much issues hunker down for the entire day if needed, might not work for other people though.",zerakai,2025-06-23 17:09:05,1,learnprogramming,t3_1lilp3n,False,
mz1xbb5,Baby steps:  https://inventwithpython.com/pygame/,grantrules,2025-06-21 21:42:51,22,learnprogramming,t3_1lh7cl7,False,
mz22qrx,"Like the other people mentioned start much smaller.Learn to print hello word.Then write basic functions, etc.Then write a tiny command line program.Then learn a 2D engine.",Rain-And-Coffee,2025-06-21 22:14:33,22,learnprogramming,t3_1lh7cl7,False,
mz1wufq,Can you tell us more about what you’ve tried? What are your goals? What are you working on right now? Are there any specific problems you’re running into?As a side note: There is research that shows passive learning (such as watching videos) leads to an “illusion of competence”. That’s what you feel like you understand when you’re watching a video but can’t do it by yourself. The feeling of understanding while watching a video is an illusion.,lolripgg_,2025-06-21 21:40:11,8,learnprogramming,t3_1lh7cl7,False,
mz1vnhh,"Do not watch videos, they wont help you unless you have a base, I do not know which languaje you are trying to learn, but for example you can do something like the MOOC from Helsinki university (its in Java or Python) with the language you are trying to learn.You need to write and think how to solve an isse, you dont learn math + - / \* just watching videos, you learn it doing operations and you get better the more you do",Nok1a_,2025-06-21 21:33:21,9,learnprogramming,t3_1lh7cl7,False,
mz1vrg2,"Start smaller. Whatever you're doing is too big. Make a smaller thing that you have full understanding of, and does exactly what you expect out of it, even if its not something huge thing you aspire to. Learn lessons from that and .ake something bigger or enhance the thing you have. Work your way up.",eruciform,2025-06-21 21:33:59,3,learnprogramming,t3_1lh7cl7,False,
mz1wxxt,Maybe try the Pico8. Force you to make small game it will,Interesting_Cut_6401,2025-06-21 21:40:44,3,learnprogramming,t3_1lh7cl7,False,
mz21ptk,Go make a Godot side scroller or something.,duckonmuffin,2025-06-21 22:08:26,2,learnprogramming,t3_1lh7cl7,False,
mz1wie9,"Have you been consistent? Do you know a programming language?The problem with watching videos is that maybe conceptually you're understanding it, but a big part of programming comes down to the thought process of how to approach and build something. The person in the video knows the how so they build something out and remove that thought process for you. But, that doesn't help you at allAlso, a programming language is a tool you need but the thought process is the factor that helps you to figure out how to build something. So you need to first learn the tool (programming language and concepts) before you can attempt to build something. When learning the programming language, consistency is key and curiosity helps a lot",Lurn2Program,2025-06-21 21:38:17,1,learnprogramming,t3_1lh7cl7,False,
mz2b3r6,"Have you tried actively? How many hours writing code and compiling and testing? This is what counts. If you did that “a lot” I think give up. As many here learned it, some small part anyway, in 3 hours. If you did it “a little” do it more? If you did it “not at all” for 3 whole years - well, don’t give it 3 more years on top of that. Produce games can you draw maps and create scenarios for WarCraft 2, Heroes of Might & Magic 2 and so on? It’s not enough? Interesting situation. HyperCard, Klik & Play! LOL naaah not worth it, be a craftsman or whatever instead?",Timely-Degree7739,2025-06-21 23:05:02,1,learnprogramming,t3_1lh7cl7,False,
mz2bv0s,"Just stamping your feet and going ""wahhhh it's hard, I'm so frustrated, I don't know what to do!"" doesn't really do much for you as far as actually seeking help is concerned. Hows anyone supposed to help you when you can't even put in more effort than that when requesting it?",TheDonutDaddy,2025-06-21 23:09:36,1,learnprogramming,t3_1lh7cl7,False,
my9he1c,"What problem do you want to solve? Define goals that you can accomplish, and if you don't manage to do it, review the requirements and iterate. It's not a technical issue, it's organizational. For me, it helps to have a list of stuff I want to accomplish on that day, it takes some time to tune the expectations/actual deliveries but it gets better over time.If you need ideas, there are a few repos like this one https://github.com/florinpop17/app-ideasRemember projects don't need to be perfect at first, make it work then make it better.",guigouz,2025-06-17 13:50:16,5,learnprogramming,t3_1ldniy7,False,
my9xe4z,"> Seriously, rather than building i think about the whole architecture of the app. Now regret about how much time I've wasted by not building projectsIf you're just starting, you need to ignore that and start building. You'll hit a snag and realize you should have thought ahead. You'll get annoyed that you have to go back and change things. But that's how you learn. Then you'll know next time what's important and what isn't. You're a beginner so you aren't going to carefully think your way to a perfect development process.It gets at a bigger issue with tutorials, lessons, and seeing other people's code in general. You only see the final polished product. You don't see the whole writing/refactoring/repeat process that went into it.Most of us don't write anything perfect on the first try. In a professional engineering environment there will be a lot of careful planning upfront, but you don't have to worry about that right now. Put a little thought into it but then pick something and start working.",Less_Fat_John,2025-06-17 15:08:44,3,learnprogramming,t3_1ldniy7,False,
myb2012,This is a non sequitur. You can build personal projects which use any architecture you want. Quit procrastinating and making excuses.,KwyjiboTheGringo,2025-06-17 18:16:22,2,learnprogramming,t3_1ldniy7,False,
myblkxd,"Don’t you have any ideas or websites you’ve always wanted to make happen? Most learn best by doing. That’s how I learned, anyway.",who_am_i_to_say_so,2025-06-17 19:49:04,1,learnprogramming,t3_1ldniy7,False,
myc3047,"Start small, build fast, stop overthinking. Learn by doing.",DevOps_Sarhan,2025-06-17 21:11:16,1,learnprogramming,t3_1ldniy7,False,
myc3w0s,"I started learning by reading, watching videos and once I felt comfortable - I joined an OSP to help DEBUG OTHER FOLKS code. Was great to dip my interest into seeing a) how other folks code, B) see other folks mistakes and c) come up with fixes/solutions to make the code working or WORK BETTER/more efficiently.",wolfhuntra,2025-06-17 21:15:36,1,learnprogramming,t3_1ldniy7,False,
myc8xym,not related but can anyone help me in using a csv file i have been given a project and i cannot use any type of AI for that since it is my test so can anyone help me the thing is i am a biggener and i have been given the task of making a currency conversion site and in that site i have to add currency exchnage rate baf chart as well i am using django and along with it i have to make the website using html so can any one please guide me in this csv part,Grandmother8,2025-06-17 21:41:05,1,learnprogramming,t3_1ldniy7,False,
mydeb9q,"Building is worth more than any tutorial imo because this is where the real learning happens. This is where you will find out how much you actually know and how much you don't. Pick a project, ideally that solves some kind of problem in your life, or helps you in some way. Then start building and stop procrastinating.",sandspiegel,2025-06-18 01:29:43,1,learnprogramming,t3_1ldniy7,False,
my9sw7f,Dear diary,PlanetMeatball0,2025-06-17 14:47:37,0,learnprogramming,t3_1ldniy7,False,
mya5htn,"At this point i barely watch tutorials when I'm working on my project , In fact I use ai with a starting line ""this is the problem and this is my thought process"" .",ammature-coder,2025-06-17 15:46:40,1,learnprogramming,t1_my9xe4z,True,
mykwqyv,"Somehow, even code in a language that I don’t know is more readable than pseudocode to me",Own_Possibility_8875,2025-06-19 04:58:43,43,learnprogramming,t3_1lf29a7,False,
mykxpmg,the pseudocode i write looks awfully similar to python syntax because python looks so much like english,big_guyforyou,2025-06-19 05:06:26,24,learnprogramming,t3_1lf29a7,False,
myl4a4d,"To be completely honest, I kinda stopped writing pseudocode...I just use python instead, describing parts that I'm too lazy to write out or that aren't important as comments:```class Repo() # repo implementation @classmethod def get_backend(): return # current backend impl. #def to_db(id, name, surname): Repo.get_backend().add(id, name, surname) # add customer data to DB```Quick, clean, standardized, easy to read, and everyone knows it.",Big_Combination9890,2025-06-19 06:01:09,12,learnprogramming,t3_1lf29a7,False,
mykx3hu,"The best pseudo-code is the one that can be pseudo-read, and nothing pseudo-more",IncompleteTheory,2025-06-19 05:01:29,6,learnprogramming,t3_1lf29a7,False,
myl24ir,Shakespeare in the original Klingon,ms4720,2025-06-19 05:42:48,6,learnprogramming,t3_1lf29a7,False,
mylioje,>comic book panelsFlowcharts?,numeralbug,2025-06-19 08:15:09,3,learnprogramming,t3_1lf29a7,False,
mylix57,"You can write pseudocode in your own language - but as most programming languages are close to English, it is often easier to use that language all the way through.But, here's a version in Danish: sæt sum = 0 kør igennem alle personer i listen for hver person: læg person.alder til sum gennemsnit = sum / antal personerPseudocode isn't a specific language, or specific version of a language, it is simply a step-by-step written description of what the algorithm in the program should do. Very close to a recipe in a cookbook, but structured so even the ""stupidest"" reader would be able to follow.I honestly don't get why so many seem to struggle with it - maybe it is because they are required to use LaTeX, where pseudocode is literally a language with very specific syntactical rules, and it is truly a pain to format anything in it ... Because otherwise pseudocode is just intended to ignore syntax rules, specific keywords and built in library functions - just write what the program should do!The few times I've met students that claimed they didn't understand pseudocode, it wasn't because they didn't understand pseudocode, it was because they didn't understand the algorithm or the program they were supposed to write. At least not on any level of abstraction above the actual code (which was most likely written by someone else, copied from the web, or generated by AI).Maybe students should try to write pseucocode for each other, and implement solutions that someone else wrote the pseudocode for ... And maybe teachers should stop requiring students to ""code"" in LaTeX pseudocode-languages!",peterlinddk,2025-06-19 08:17:34,3,learnprogramming,t3_1lf29a7,False,
myodfo8,"When I learned programming in the 1980s, we used Nassi-Schneiderman flowcharts. Here is a link: [https://en.wikipedia.org/wiki/Nassi%E2%80%93Shneiderman\_diagram](https://en.wikipedia.org/wiki/Nassi%E2%80%93Shneiderman_diagram)",Ecstatic-Balance5170,2025-06-19 18:41:10,2,learnprogramming,t3_1lf29a7,False,
mymihtt,I usually write out all my comments if im struggeling with something. Thats for designing the logic. Then i just have to fill in the code below the comments. It makes sure i have comments in my code and it helps me designing before thinking about the sytax.,Meisterthemaster,2025-06-19 13:02:53,1,learnprogramming,t3_1lf29a7,False,
myr1rbp,"Literally, just do it in english. For non-english, use a (human, natural) language of your choice.The point of pseudocode is to get your point across. Nothing is true, everything is permitted. Including diagrams, emojis, whatever, doesn't matter. Your goal is to convey the gist of your idea.Here is legitimate pseudocode:```pythonRepeat for numbers from 1 to 100: If the number divides evenly by 15: Print ""FizzBuzz"" Else if the number divides evenly by 3: Print ""Fizz"" Else if the number divides evenly by 5: Print ""Buzz"" Otherwise: Print the number itselfEnd of loop```Notice how it's very easy to read?And it's mostly just EnglishBut it's still the algorithm.Here's another version, equally easy to read, but this time recursive... with some comments```pythonDefine a function that takes a number (i): If i > 100: Stop # Base case: stop when we've printed up to 100 If i divisible by 15: Print ""FizzBuzz"" # Multiple of both 3 and 5 Else if i divisible by 3: Print ""Fizz"" # Multiple of 3 only Else if i divisible by 5: Print ""Buzz"" # Multiple of 5 only Else: Print i # Not a multiple of 3 or 5 Call the function with i + 1 # Continue to the next number```See? Still readable. It even has comments!And here, here's one with emojis, still perfectly good pseudocode```pythonDefine fizzbuzz(i): If 15 perfectly divides i then return :beer_mug::honeybee: Else if 3 perfectly divides i then return :beer_mug: Else if 5 perfectly divides i then return :honeybee: Else return iDefine apply_fizzbuzz(numbers): Return map fizzbuzz over numbersCall apply_fizzbuzz on range 1 to 100Print each result```So yeah.. just do your own thing!",platistocrates,2025-06-20 03:30:56,1,learnprogramming,t3_1lf29a7,False,
my7gsgk,"I don't think your age is a problem, but the market is **really** crowded right now. Just check out r/cscareerquestions: plenty of people are coming out of college with computer science degrees and struggling to find work. I don't want to be the one to scare somebody off of this field -- I love what I do -- but you should know what you're getting into.",ForSpareParts,2025-06-17 04:03:39,21,learnprogramming,t3_1lddl3x,False,
my7z1yz,"Yeah, like the other guy said , treat it as a hobby.Unless you know someone in tech who can vouch for your skills, it's really hard to get job at the moment.This isn't even considering if you are going to get paid well.",RollingKitten2,2025-06-17 06:36:37,5,learnprogramming,t3_1lddl3x,False,
my7gvq7,How long you’ve done something isn’t as important as proving you can build things. People can study all they want but you got to prove you can do the job.,haydogg21,2025-06-17 04:04:19,3,learnprogramming,t3_1lddl3x,False,
my7ij18,"I think at this point learning programming is more of an entrepreneurial endeavor than a wage labor one. If you were wanting to start a web based business it's a great idea. You'll have a hard time finding a software development position with the current market. You may be able to do it more easily if you're willing to move.Also ""APIs"" as a category is like saying ""programming."" Maybe focus on the http protocol. APIs is too generic.",ShardsOfSalt,2025-06-17 04:16:18,3,learnprogramming,t3_1lddl3x,False,
my88ko7,"hey, 27 is *not* too late at all—plenty of folks switch even later and do just fine. your roadmap looks solid, and 2 years is def enough if you stay consistent. i’d also suggest building small projects along the way, they really help. also used Edusum for practice when prepping for certs—it’s worth checking out. keep going, you got this!",Ok-TECHNOLOGY0007,2025-06-17 08:09:50,3,learnprogramming,t3_1lddl3x,False,
my8xjvr,You’re age isn’t a problem. The problem is the market. Software development right now is crowded. The last 5 years everyone decided they wanted to be in IT. Every job opening online gets thousands of resumes. It’s hard to find a job,Realjayvince,2025-06-17 11:51:38,3,learnprogramming,t3_1lddl3x,False,
my7u7qy,"Do not do this.Just treat it as a hobby. It's fun!There are not a lot of jobs, it is a VERY outsource-able job, AI is wiping away whole departments as we speak. It's just a horrible financial decision. Stay in teaching or at least pick a lucrative career to switch to.",Python_Puzzles,2025-06-17 05:52:02,7,learnprogramming,t3_1lddl3x,False,
my7i8pv,You could but you will probably have a job that pays $50k with questionable amount of actual coding and use some dumb language like vb.net for 3 years before you can try out for actual swe job,Calm-Tumbleweed-9820,2025-06-17 04:14:10,6,learnprogramming,t3_1lddl3x,False,
my7zep6,"Forget it, because you’ll be competing with tens of thousands of 22-year-olds from India and China who already hold master’s degrees in computer science.Maybe give ESL a go in Thailand, Vietnam, Japan, China, or Korea -- its much better than teaching in Australia, less hours, better atmosphere, the kids are nicer, no stress, etc. (that's what I do).",None,2025-06-17 06:39:57,2,learnprogramming,t3_1lddl3x,False,
myal7xu,"I worked as an English Teacher at uni/private school for about 14 years. When I was 39 I changed career to IT. I don't work as a dev tho, more supporting role. If I can do it, so can you.",JoshuaSpice,2025-06-17 17:00:43,2,learnprogramming,t3_1lddl3x,False,
mzaub43,So am i. I’m 22 and afraid to be seen as a fraud. My advice would be to just do it and see what happens,gamernewone,2025-06-23 09:30:30,24,learnprogramming,t3_1libvc3,False,
mzav97v,"Don't worry this feeling won't go anywhere no matter how long you will work in the industry :grinning_face_with_sweat:Just accept that you will fail a lot, that many interviews will fail and you will feel humiliated on some of them when you don't know the answer.On the first job it will feel like everyone knows what to do except you.I'm 9 years into the industry and only now I am starting to relax about not knowing something. I know that there are a lot of ways to do the same stuff. If you saw someone did something differently - it doesn't mean that you are wrong. It just means that you just discovered one more way to do the same stuff.Be proud to say ""I don't know"". Don't try to hide it. If you get into a place where people shame you for that phrase - they are stupid and cowards. Not knowing something is just a first step into knowing it. Without this step - you will never learn anything.I worked at some companies where the code base is so terrible that even with my bad experience I was shocked by its quality. And the people there were so proud of themselves.After that I started to realize that perfect code exists only in examples. If the project is live and constantly changing - the chances that it will become a monster are almost 99%.It doesn't mean that you should not care about your code. It means that at any point of your career what you know is enough. Just keep learning from your mistakes. And keep going.Perfectionism killed more projects than bad code. Because bad code actually works and perfect code works only in theory.",Overlord_Mykyta,2025-06-23 09:39:54,10,learnprogramming,t3_1libvc3,False,
mzc8gl4,Do stuff. Break stuff. Fix stuff. Do not overthink.,Felix_Todd,2025-06-23 15:00:53,4,learnprogramming,t3_1libvc3,False,
mzay1my,"Google ""Imposter Syndrome"" and deal with it. Gl!",Environmental_Pay_60,2025-06-23 10:06:15,3,learnprogramming,t3_1libvc3,False,
mzb3f4g,if you don’t do anything you wont make mistakes.,brandi_Iove,2025-06-23 10:53:31,2,learnprogramming,t3_1libvc3,False,
mzbnott,"FIDO. Forget It and Drive On. No one is going to pay you to despair. I started in 1981. You couldn't even practice until you got a job. You have the ability to write code on your own. Practice, practice, practice. You will gain confidence via experience. Perseverance brings hope.",AppState1981,2025-06-23 13:13:11,2,learnprogramming,t3_1libvc3,False,
mzccwi2,"Having the right mentality is more important than coding skill. So spend your time accordingly - train your mentality the same way you would train any other skill: practice what stresses you, raise the bar, practice again.",the-techpreneur,2025-06-23 15:22:14,2,learnprogramming,t3_1libvc3,False,
mzcwe9n,"2 YOE, wake and sleep with this thought everyday but somehow I am working for the past 2.5 years writing code almost every day. So relax one foot in front of the other.",CampaignAccording855,2025-06-23 16:53:54,2,learnprogramming,t3_1libvc3,False,
mzed8zh,"I am 35, I have worked for 8 years in tech, and so am I. Every new job is a load of anxiety to me because I may not be enough, how do I manage my work and their expectations and also preserving my personal boundaries?Dude, just chill. You're (k)enough. Live is not a job and success is not a career. That's what I learned. About the cheating: there are 2 types of people, the ones that cheat a little, and the ones that are too afraid to admit it.Focus on managing your mental resources and give your best without physically and mentally harming yourself, you have at least 40 years to work on a job before you can retire, so focus on being able to work for that long. Live is not a sprint, it's a marathon.Now that doesn't mean you should be lazy or anything, but I was your age when I got my first job in IT, and I was learning to program since I was like 16 years of age. You're doing fine, don't give in to anxiety.",tldr_er,2025-06-23 21:01:45,2,learnprogramming,t3_1libvc3,False,
mzau8ll,Is this learn to program or talk therapy?,rustyseapants,2025-06-23 09:29:48,2,learnprogramming,t3_1libvc3,False,
mybqskp,"The Art of Computer Programming series by Donald Knuth, if you really, really want to understand and have the time",927945987,2025-06-17 20:13:32,10,learnprogramming,t3_1ldwv70,False,
mybowc0,"It depends on how dedicated you are, and how much you want to learn. Imo, if you want it enough, lectures are the best, because usually they go through it in a structured manner, where they build up your foundation, explain with illustrations, give relevant tangential information, show practical examples that is ideal for building up your intuition, as you go through the course. Obviously you will be missing out on supplemental things, like exercises and book references that might be related to the lectures, but you can always just stop the lecture when they are about to shift topics, if you feel like there's soemthing missing, go and dig a little bit further into that topic, before you continue with the lecture to the next topic :b Lectures are however quite time-consuming. It's for a good reason, you don't build up your intuition and understanding without spending time, so it requires your dedication. I haven't seen this specific lecture, but it's an example of something that seems good. It's from a respected university and the topics it covers seems adequate for a good introduction: [https://youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY&si=gcqYPHrNVBRoLuvg](https://youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY&si=gcqYPHrNVBRoLuvg)",PhilNEvo,2025-06-17 20:04:37,3,learnprogramming,t3_1ldwv70,False,
mybq20g,"I'd recommend the grokkings algorithms books \~250 pages or somethingShort, and gives you the most useful algorithms you'll come across without overwhelming you, you'll probably want supplementary information which is easy to find for each concept.Introduction to Algorithms goes into much more concepts as well as everything in grokkings, but it's like \~1500pages. Very good though, but for you the short but structure grokkings algorithm book to start I think is best, but having this as supplementary for now and during your carreer is good.",RunicWhim,2025-06-17 20:10:04,2,learnprogramming,t3_1ldwv70,False,
mycb5xl,"I started using grokking algorithms, I don't remember the author now but he is super well known and you will find it easy. Now to learn with books I use Nodect, which is like a learning co-pilot and if you use books or have doubts it is easy not to get stuck because you always have the book next to the co-pilot, maybe the combination works for you",Numerous-Oil-8786,2025-06-17 21:52:20,1,learnprogramming,t3_1ldwv70,False,
myd74zu,"I'd read the book  y tardos and kleinberg. It is probably the best advanced algorithm book that is also approachable.If you are looking for simpler, I like the book by levitin.",esaule,2025-06-18 00:48:56,1,learnprogramming,t3_1ldwv70,False,
myd8j6q,Look up ThePrimeagen on frontend masters website. Its a paid platform but he put out a kick ass DSA class for free.,Striking_Baby2214,2025-06-18 00:56:56,1,learnprogramming,t3_1ldwv70,False,
myfxviv,We released this YouTube course just a couple months ago (totally free ofc)https://youtu.be/DMeD8trbj6A?si=7byp1WMdH2qRBv_S,bootdotdev,2025-06-18 13:07:25,1,learnprogramming,t3_1ldwv70,False,
myblxa6,"The mit course on algorithms is worth checking out.  It's on YouTube.  Otherwise, have chatgpt build an algorithm problem set that builds in complexity.",mikeyj777,2025-06-17 19:50:42,1,learnprogramming,t3_1ldwv70,False,
mych8c6,"I did a lot of reading of those three volumes. Mostly melted my brain. I did create VAX VMS fortran code that was 3x syncsort and 10x VMS sort. I had to alter DK's algorithm I was implementing is his was not equal key stable. Yes, I am that old.",Dean-KS,2025-06-17 22:24:09,4,learnprogramming,t1_mybqskp,False,
mybz75i,"This. I can’t stand YT videos, and the like. I read much faster than I watch.",Billy_Twillig,2025-06-17 20:52:52,3,learnprogramming,t1_mybqskp,False,
mzcpcp5,"You got a good advice. You could spend several lifetimes learning stuff and would not build anything.There's a benefit of knowing what are the other options out there, for example in my current project a colleague has suggest using an aws product that i had no clue about that has simplifed the design quite a bit.On the other hand actually building stuff is the most important part, the breadth of knowledge will come with time.",szank,2025-06-23 16:20:53,9,learnprogramming,t3_1lijtk3,False,
mzcq2l3,"It depends on how you define familiar.After you learn a new topic you should build a small project, even something simple that uses what you just learned.If you can build the project then you should be ready to move on. But if you're stumped, just staring at the screen unable to finish then you need to keep studying.",PerfectInFiction,2025-06-23 16:24:13,2,learnprogramming,t3_1lijtk3,False,
mzdik1w,"Any time you call an async function, it won't necessarily be done by the time you reach the line of code directly after it.Think of async as like ordering a meal. It can be step #6 of the plan for your day, and then on step #7 you can wait for your meal to arrive or you can do something else in the meantime.Or you can delegate another async task to handle it, like someone else picking up the meal and bringing it back home, while you do the dishes.Async can be either waited for, not waited for/not delegated/result not handled, or delegated by an async handler.",Key_Storm_2273,2025-06-23 18:35:04,2,learnprogramming,t3_1lijtk3,False,
mzcs8jo,"Async is a messy subject. It's really up to you how ""familiar"" you want to be with it.",kschang,2025-06-23 16:34:24,1,learnprogramming,t3_1lijtk3,False,
mzd337f,"I agree with advice but also think that may just be bit of a misstep directed towards someone learning vs a mid/sr level dev. You still have to actually learn how to program and you should learn it on SOMETHING, once you understand the concepts and get a flow for making things it becomes easier to pick up another language. I wouldn't leave yourself not understanding async for example, it is used almost everywhere, even if you aren't writing it, it will be built into the libraries you are using. The best way to learn is to do, so pick a language and try to write something with a thread or two just to see how it is done and run the thought exercise for managing the sync and flow of everything. I think the advice is true, when you get your job you will be working in the tech stack the company has and most of the difficulty will be figuring out the companies code base, so while you might be an expert in one language they may be using another. However, this does not mean that it doesn't make your life easier to know one language and just learn the ins and outs of the other language vs trying to figure out say async concepts while figuring out he language, it is much better to pick up a language and read what kind of async stuff is in the language while understanding the concepts and challenges ahead of time. It is much better to help you evaluate the code base as well if you have a good understanding of what 'good' can look like. Another interpretation of it might really be that you can't learn everything a computer can do now a days, it is essentially infinite as it continuously expands day bay day. But again, do not take this as don't bother mastering what you are working on, or, i don't get this topic and am free to moving on. If you move on make it for a good reason, you won't ever use it perhaps or hate it so much you would refuse a job working with it etc.",reapy54,2025-06-23 17:24:10,1,learnprogramming,t3_1lijtk3,False,
mzd3755,"Async is a fairly important concept to understand, but I don't think it matters that much in the beginning to really understand it. Once you start bumping your head against a wall dealing with async issues, you'll gain a better understanding.Are you struggling with the idea of async, or the implementation of it?",grantrules,2025-06-23 17:24:39,1,learnprogramming,t3_1lijtk3,False,
mzdhdw7,"They are mostly correct, but you should be able to use async functionality in JS if you are searching for React roles. Fetching and rendering data is the bulk of what you will do, so find a free API and start doing that once you have the basics of React down.",KwyjiboTheGringo,2025-06-23 18:29:31,1,learnprogramming,t3_1lijtk3,False,
mzewwab,This is how all tech career is. The rabbit hole is so deep on any specific subject that you either become a pigeon-holed expert who can only do a few things or you are spread thin and can adapt and get the job done well enough.,iliekplastic,2025-06-23 22:43:50,1,learnprogramming,t3_1lijtk3,False,
mymgz0j,"Git and GitHub are fantastic but GitHub isn't exactly a structured learning platform if that's what you're askingGranted there are a lot of resources on there, but it's just a store of code and documents at the end of the day",bootdotdev,2025-06-19 12:54:01,19,learnprogramming,t3_1lf9cwi,False,
mymbjgd,dont worry about github until you have a solid grasp on the foundations of programming imo,LostBazooka,2025-06-19 12:20:32,39,learnprogramming,t3_1lf9cwi,False,
mymrw46,GitHub won't help you with programming. It's just a tool that helps maintain a project.Just don't bother yourself with that for now.Learn programing. When you will feel confident enough to make small projects by yourself - then you can start looking into GitHub functionality.,Overlord_Mykyta,2025-06-19 13:55:30,6,learnprogramming,t3_1lf9cwi,False,
mymde8g,"i don't use a ton of github but when i add stuff to a repository it's mostly git add . git commit -m ""your message here"" git push -u origin main",big_guyforyou,2025-06-19 12:32:19,12,learnprogramming,t3_1lf9cwi,False,
mynj293,"There are two main uses for github.* Storing your own stuff.* Getting other people's stuff so you can use itThe first one really requires that you know git. If you don't know git, you should learn. Github is cloud storage for git (it's more than that, but that's 90% of it).If you just want to get other people's stuff you don't really need to know how to use git (but it's probably worth your time to do so).So, which is it?",lurgi,2025-06-19 16:08:48,5,learnprogramming,t3_1lf9cwi,False,
mymh3wd,"It's a great site for project hosting and collaboration. However, if you don't know the first thing about programming or version control, you won't find it very useful. Learn to program... Once you have written a small project, learn to use Git for version control... Then start using GitHub.",cgoldberg,2025-06-19 12:54:48,3,learnprogramming,t3_1lf9cwi,False,
mymheb7,"git is something you should learn before making any actual program (even if small) since it lets you create branches (separate versions to work on), undo changes, etc. it isn't very difficult, it's the kind of software where you can get 80% of the usefulness by knowing about 20% (maybe a little more, I digress) of the features.but there's no reason to start there. start by making small isolated code snippets.GitHub, as opposed to git the program, is a website where you can upload your git repositories, or look at other people's repositories, or download and use their software. if you want to learn stuff by looking at existing code, it's useful—but you need to have around intermediate knowledge before that becomes reasonable.even having intermediate knowledge it can be hard to even know where the entry point of a program is! and often you need to spend quite a bit of time with the source code to get a sense of how it all fits together. so don't bother with that until you feel like you have a good grasp on the fundamentals.",the_cat_theory,2025-06-19 12:56:30,2,learnprogramming,t3_1lf9cwi,False,
mymi90q,"Personally i would have said dw about it until youve got the programming basics down. However, im doing the odin project currently and it teaches you to use github before you write a single line of html/css/js. First few lessons are all about the command line and github and honestly, i get it. It makes it so that by the time you type that first line of proper code, youre already familiar eith the git workflow, and it fast becomes second nature. Might be more difficult to try and do it the other way around? Who knows. My 2 cents",Haunted_Entity,2025-06-19 13:01:26,2,learnprogramming,t3_1lf9cwi,False,
mympukk,[New? READ ME FIRST!](https://www.reddit.com/r/learnprogramming/comments/61oly8/new_read_me_first/)[Getting Started](https://www.reddit.com/r/learnprogramming/wiki/faq/#wiki_getting_started),putonghua73,2025-06-19 13:44:24,2,learnprogramming,t3_1lf9cwi,False,
myn34wl,"I would say pick a programming language and just dive into the basics! I would say Python is a very great one to start - it's syntax is quite readable, it's easier to use than many other languages, and yet it will certainly get you into the ""flow"" with how to think about how to solve programming type problems.I would 100% recommend coding along to a YouTube channel, namely BroCode (his videos and teaching style are amazing). There are also some great sites like CodeCademy that have guided practice / learning sessions - these would probably be more than enough to teach you the fundamental terms you'll want to familiiarize yourself with.More than anything, it is \*totally\* normal to feel lost. Just remember that you do not need to understand all of a certain language or anything (nobody does!), and that you can go quite far with the fundamental building blocks of most programming (like variables, functions, loops, and conditionals). Although there tends to be ""better"" ways to do things and ""worse"" ways to do things, there are TONS of solutions to the same problem in programming, perhaps more so than many other fields. Just to clarify - GitHub is basically a platform for storing and sharing code projects, especially when multiple people are working together. It's more of a tool for managing and collaborating on code rather than a place to learn programming itself. That's probably why you felt so lost there!In any case, try to have fun as you learn!",AtlasLeCleetus,2025-06-19 14:51:51,2,learnprogramming,t3_1lf9cwi,False,
mytly2g,"You're giving every reason to use Version Control in this post. You don't need to be a Git expert. It's as simple as pushing a button and saying ""this is the version where login works"", so you can always go back to it with a push of another button.",Salty_Dugtrio,2025-06-20 14:57:49,45,learnprogramming,t3_1lg5xo7,False,
mytp4ma,">What if I break the login? What if I mess up something that's already working?You run your test suite. If you haven't figured out how to test yet, this is a good time for you to learn that required skill.",CarelessPackage1982,2025-06-20 15:13:09,20,learnprogramming,t3_1lg5xo7,False,
mytrnl6,"> I came to code, not to become a Git expert you know?You just need basic Git knowledge.Anyway, one should be flexible. You can't progress if you think learning useful tools for your task is beneath you.",throwaway6560192,2025-06-20 15:25:17,17,learnprogramming,t3_1lg5xo7,False,
mytm3gr,Comprehensive test suites make this a non-issue.,cgoldberg,2025-06-20 14:58:32,11,learnprogramming,t3_1lg5xo7,False,
myuwuxr,"One does not simply avoid version control*Ever use ""save state"" on a video game emulator?",Jeffdipaolo,2025-06-20 18:42:45,7,learnprogramming,t3_1lg5xo7,False,
mytpxyl,"So there's two things here which will really help.**Version Control:**It really doesn't have to be complicated. You simply have a main branch where you know things work. If you make a change where you later find out something broke, you can always revert back to the commit where you know everything worked.Of course there is still lots of room for improvement here with proper branching strategies. But to start off, this is better than nothing.**Tests:**In your case, I would really suggest writing integration or end to end tests. Ignore unit tests completely.All you want to know is that broadly speaking, your feature set works as intended. Caring about every single unit of code is not where you're at.[Test bahavior, not implementation details](https://codeling.dev/blog/testing-behavior-or-implementation/) which will tell you immediately if any of your features break and makes refactoring code much less risky and certainly less of a pain in the a$$.**Where to start:**Since you're really concerned about existing working features breaking when you change something, I would really suggest writing a few tests for the most important features.Maybe start working in version control when you feel you're up to it,...but at least start with a few end to end or integration tests which focus on behavior. It's easier than you think,....and actually quite fun,...and makes you feel safe making changes or new features.",brenwillcode,2025-06-20 15:17:02,4,learnprogramming,t3_1lg5xo7,False,
mytmqnl,"IMO you seem to know the solution to your problem. This is by no means the standard pattern for usage but I'll recommend the following.By default you will be on your `main` branch`git checkout -b 'new-feature'`make changes, test, push, merge to main when happy.Switch back to your main branch`git checkout main``git pull`Repeat.If you've ever merged something into main but they're not in your current branch. Make sure all current work is committed`git checkout main``git pull``git checkout your-branch``git merge main`Hope this helps",delliott8990,2025-06-20 15:01:40,3,learnprogramming,t3_1lg5xo7,False,
myu0tfv,You'll need to learn git sooner or later. You don't need to be an expert to create a feature branch.,Maleficent-Freedom-5,2025-06-20 16:09:19,3,learnprogramming,t3_1lg5xo7,False,
myu5khw,"> I know I should probably use Git properly but honestly every time I try to set up branches and stuff I just lose all momentumMe: I'm going to work on a new feature git switch -c awesome_featureMe: Let's go.That's it, my friend. If that kills your momentum then I don't know what to tell you.",lurgi,2025-06-20 16:32:27,2,learnprogramming,t3_1lg5xo7,False,
myu6dey,"Git expert? Just do an init, then ""add ."" every time your code works and commit -m ""msg"". Then revert if you screwed something up. Using 3-4 commands or using an UI to work on a solo project is literally 5 minutes of learning Git. If you want more you can use branches, pr, merges etc. but no need really for solo projects.",Alphazz,2025-06-20 16:36:25,2,learnprogramming,t3_1lg5xo7,False,
myd6jss,"Sounds like you just lack programming practice, i.e converting the theory/concept into implementation. You have the concept in your mind, but you don't your tools well enough to freely and intuitively convert it into a program. I'd argue getting out of ""tutorial hell"" has nothing to do with computer science at all, it's more about ""how do I structure this, where do I put that, what can I use here to do this, what do I need here"".",h-gotfred,2025-06-18 00:45:29,17,learnprogramming,t3_1le3ksf,False,
myd9ojx,"I think it depends on the concept. Computer science itself is inherently mathematical, but most programmers don’t really engage with that side of CS outside of academia. I think you sum up your issue here:> I only had occasional sporadic 1-2 hour studies of a programming video, mainly copying the code line by line and aimlessly googling every keyword in the documentation while being confused by the meaning of the syntax and still unable to make anything by myself, mainly being more concerned with schoolwork. I would focus heavily on trying to understand math on a more conceptual level or at least get enough practice to be prepared for theoretical computer science, but I consistently failed when implementing algorithms for projects. Algorithms typically employ a type of math called discrete math, and understanding it is crucial to understanding algorithms; but you also need to understand programming principles. A lot of discrete math is, unlike the higher-level continuous math in a CS curriculum, much more intuitive. It is much more logical and “common sensical” than, say, divergence of a series. Sorting a list or traversing a tree, for instance, often just makes sense without delving too deeply into the underlying mathematics. You should be focusing more on the data structures themselves than deep diving into the theory at this point. There are many clever tricks used in DSA problems (I’ve always liked the sliding window problem), but this is more about creative problem-solving than applying mathematical foundations. Having a theoretical understanding of DSAs will not get you far there. Mathematical *reasoning* is much more important here. Outside of a few fields such as data science, the most math you’ll use is probably basic statistics and algebra, and perhaps discrete math such as bit-wise logic and graph theory. Ideally, however, if you’re struggling with simple syntax and concepts, you shouldn’t be too focused on *any* of the math yet. If you’re not understanding conditionals, loops, logic, and native data structures, you shouldn’t skip to DSAs, since the foundation of data structures and algorithms lies within those rudimentary concepts. You should be able to solve basic to intermediate problems before DSAs. If you can’t write a program to convert between Celsius and Fahrenheit or find the factorial of an integer, then you need to revisit the fundamentals.",sch0lars,2025-06-18 01:03:23,6,learnprogramming,t3_1le3ksf,False,
mydeyfo,"Data structures are hard even if you are good at coding. They're also more advanced tools, so if you're not using the basic tools, it makes it even tougher.My best advice would be to get coding. Reps to get comfortable with the syntax, and going from idea to functional. When you're stuck, talk to AI and tell it you don't want the answer, but to help it tutor you. You have this problem, you're here, and you got this error. Ask it to help you step through the code to identify where the error happens. Ask it to help identify few different possible avenues that may cause an error that you should look to check, and how to prove if that is or isn't where the problem is.Next I would take on studying big O. You want to understand how optimized your code is. If you rewrote the same code using a hashmap or array, which would be better? why? In all scenarios? Big O helps you understand efficiency.Once you understand that, then DSA comes into play. A lot of DSA is purely conceptual. The code looks similar to other code with if statements and some variables. I've also seen most DSA just use an array to accomplish it, so it makes it even more confusing. If they're just using an array, why add all the the complexity?Some problems, that are not even that hard of a concept to understand, are tricky to code efficiently. It could be the difference of trillions of operations every second using the wrong algo.",SenorTeddy,2025-06-18 01:33:26,6,learnprogramming,t3_1le3ksf,False,
myd5v7k,I'm terrible at math and do fine with CS theory. Totally anecdotal and not helpful.,MCFRESH01,2025-06-18 00:41:32,13,learnprogramming,t3_1le3ksf,False,
mydvldh,"You’re too caught up in your own head. You think getting your hands dirty with programming is beneath you. You let this mindset blind you and keep you from any true progress. Let’s look at this logically. Your classmates, who have done hackathons, projects or whatever, are outpacing you, who has done no such thing. What do you think is the difference?You attemp to understand math (a different subject entirely) deeply so that you’ll be prepared for the theory. When the time to apply that theory comes you consistently fail. Is this approach working?When you asked your professor if your thought experiment held any water, he said “no. Concrete implementation is more important” and you ignored him. Was this a wise decision?You constantly see that your approach fails you in every respect. Why do you cling to it?When presented with the simplest, easiest programming language out there—so easy a child could use it—you turned your nose up at it and called it a toy. If you can’t make a stack with wood blocks what makes you think you could build a house?Abandon this mindset which has never helped you and actually learn to code from people who know better than you. Your failure does not come from a weak understanding of algorithms. Everyone starts with a weak understanding; that’s why they’re leaving in the first place. Your problem is arrogance.",mierecat,2025-06-18 03:09:37,5,learnprogramming,t3_1le3ksf,False,
myecb0x,"> mainly copying the code line by line and aimlessly googling every keyword in the documentation while being confused by the meaning of the syntax and still unable to make anything by myselfThis is an indication that you did not get enough practice.As you can clearly see, copying the code line by line does not actually teach you anything. Even if the teacher is explaining things, and you feel like you kind of get it in the moment, that's never enough. You managed to complete your assignments before the DS&A class, so you've obviously written some code that solves problems based off the learning material and your ability to google the rest, but what you should have been doing is spending some extra time with each assignment after you finished it making sure you understand the code you've written. This could involve things like messing with the code and seeing what happens, or coming up with your own slight variation on the problem and solving that. It could involve asking other students about how they solved the problem (after it's been submitted, and without seeing their code), or discussing things with them (again, without sharing code) while working on it. If there is time to ask questions during class, make sure you ask them when you're unsure about something. If your teacher has office hours, make use of that. You don't have to learn entirely on your own, but you do have to be willing to recognize when you're not getting something and take the initiative.What you need for DS&A above all else is a solid understanding of the fundamental concepts of programming. What I mean is understanding how things like loops, conditionals, variables, and functions combine together to create specific behavior in your program. And I don't mean at a conceptual level, I mean understanding it deeply enough that you can actually write programs that solve problems on your own (this does not mean without looking up functions or syntax, but it does mean knowing roughly what you're looking for). Without that, you are woefully unprepared for DS&A.even a solid understanding of discrete mathematics alone would not get you through a DS&A class, because in the end your assignments will be primarily implementing specific data structures or algorithms, and while that math certainly helps, it doesn't magically make you able to write code on your own. It only helps you understand what you're writing.The only way you develop this knowledge is through practice. You need to sit down, and actually try to solve problems with code enough that you actually develop a feel for how to use the tools you've been taught.Here's an analogy. Let's compare learning to program with learning woodworking. Following along line by line is like the teacher explaining each tool, giving you a complete blueprint, and then telling you *exactly* how to make that specific thing out of your wood. Sure, you came out the end with something that more or less resembles what the teacher showed you how to make. But that alone is not going to teach you the nuance about how to actually get a nice straight cut, what steps to take to go from a block of wood to the piece you need, what order to take those steps, or any of the nuance involved with using each tool. Those are all things you develop through experience actually using the tools.College expects you to be smart enough to recognize when you are not actually understanding things. It also expects you to be willing and able to learn on your own.I want to be clear, I'm not trying to say you're completely screwed. What I'm saying is that what you've been doing up until now is simply not enough. You need to devote more time and effort into actually learning the material properly. If you are in a position where you absolutely cannot Devore the necessary time and effort into learning the material, them maybe you need to take some time off, self learn during that time, and come back later to finish things.Consider this: can you write a basic text based program that plays rock paper scissors against the user? If you think you can, go write it. Try the same with tic tac toe. Writing the code to check if someone has won a game of tic tac toe is an algorithm, albeit one with a single very specific application.If you don't think you are capable of writing those, then you need to sit down and figure out how. You have at least learned all the necessary building blocks to put together to make those programs by now. It's up to you to spend the time playing with those blocks and finding out what ways you can put them together that makes those programs.If you don't even know where to start, don't think about code at all. Think about the steps a program would have to go through, and write them down in plain English, or in pseudocode. Once you have the basic structure of what that looks like, think about how you might convert each step into code. If a step seems too complex, try breaking it up into smaller steps, then try to convert each of those.The idea here is that before you actually write code, you should understand at a conceptual level what your program should roughly look like. Not the fine details, just a rough outline. Once you've come up with a rough idea of what your program looks like, then you know enough to actually try to write it. If you just jump in and try to write code without some idea of what your program should look like, chances are you'll have no clue where to even begin, or you'll just flail about trying to randomly slap different ideas together until you get something that works.",Bobbias,2025-06-18 05:10:17,4,learnprogramming,t3_1le3ksf,False,
myd7pg4,"Something that really helped me was taking a project… even if copied and pasted, or cloned - take that project and convert it to another language. How to make it work in another language. Even if you need to google how to build arrays or functions, translate it. I swear that is the best way to learn programming. You can then build something of your own and start to forage scraps of code from different tutorials, build your own templates and just make different pieces of functionality for fun.",IllustriousNinja8564,2025-06-18 00:52:10,2,learnprogramming,t3_1le3ksf,False,
myda5rg,They’re both important but you need more practice o syntax structure and basic understanding. Don’t compare yourself to people that have done hackathons and you only watched a 2 hour video,Realjayvince,2025-06-18 01:06:08,2,learnprogramming,t3_1le3ksf,False,
myddfak,How much time did you spend in the professor's office hours?  Talking to TAs?  How much time did you spend trying to lay out exactly where your points of confusion were?  How did you attempt to resolve them?  These are concepts like any other concept in any other subject.  You're going to have places where you are confused.  Those that seek help to close those gaps succeed.  Those that just shrug their shoulders and blame it on a weak base don't get anywhere.,mikeyj777,2025-06-18 01:24:40,2,learnprogramming,t3_1le3ksf,False,
myd8j2p,What about an algorithm for the square root of a positive floating point number in a programming language of your choice? How would you do that?,Ksetrajna108,2025-06-18 00:56:55,1,learnprogramming,t3_1le3ksf,False,
mzamlj8,"They're both future proof as a generalisation, but also bear in mind that the first language you learn isn't the one you'll use your whole career. We don't pick languages for our careers, we pick them to learn with, and later on for a first job.Look at the jobs in your area, what are they asking for? What do employers want? It's not the same globally.",ToThePillory,2025-06-23 08:12:42,10,learnprogramming,t3_1liauza,False,
mzao5ng,C# for web service.ReactJs + Typescript for frontend.Both if you want to be slightly closer to full stack.,BoBoBearDev,2025-06-23 08:28:27,9,learnprogramming,t3_1liauza,False,
mzaxj2l,I always recommend starting with Java / C# / python (choose one) and then JS/TS,Realjayvince,2025-06-23 10:01:23,7,learnprogramming,t3_1liauza,False,
mzapll5,"They are equally ""future proof"", just like any other current technology, they might be replaced at any time, gain immensely in popularity or quietly forgotten - nobody knows the future!Decide what you want to build first - a backend service that connects to a database and handles requests from a client? Or the client that displays data in a way so the user can manipulate it? Put another way: are you mostly interested in the ""invisible code"" in the backend or in the user facing code in the frontend?If the first, then go straight for C# - and if the latter, then go for JavaScript!There is a lot of overlap in both languages, especially when you add TypeScript to JavaScript, so at some point you'll want to learn both anyways, so it is only a matter of where to start.",peterlinddk,2025-06-23 08:43:12,3,learnprogramming,t3_1liauza,False,
mzatp7z,"Hey there. Harsha from Metana here. Just saw your post and wanted to say that your help desk background is actually gonna be super valuable when transitioning to dev work. You already understand user problems and how systems break, which is half the battle.Between JavaScript and C#, honestly both are solid choices but I'd lean toward JavaScript for someone in your position becuase JavaScript is everywhere. Frontend, backend (Node.js), mobile apps, even desktop apps. More versatility means more job opportunities. The learning curve can be a bit weird at first but once it clicks, you're golden. C# is great too, especially if you're thinking enterprise development or want something more structured. Microsoft ecosystem is huge and pays well.At Metana we see a lot of career changers and the ones who succeed fastest are usually those with some kind of customer facing or problem solving background. They just ""get"" what users need in a way that pure CS grads sometimes dont.My advice? Pick JavaScript, build a few projects that solve real problems you've seen in help desk work, and apply for roles that value that crossover like developer advocate positions, technical support engineering, or even full stack roles at smaller companies.Either way you choose though, you're already ahead of most beginners because you understand the business side of tech. Don't underestimate that advantage :)",darkstanly,2025-06-23 09:24:28,4,learnprogramming,t3_1liauza,False,
mzcopnw,"Both are great choices! If you’re aiming for web development, JavaScript is essential. If you’re more into enterprise apps, game dev (Unity), or backend with .NET, C# is super strong. Think about the kind of projects you want to build — that’s your best guide.",NurAhmadli,2025-06-23 16:17:50,2,learnprogramming,t3_1liauza,False,
mzarfsi,It really depends on what you want to do. But that said I'd think learning C# would give you better fundamentals being strongly typed and class based. JavaScript is great but it can teach you bad habits since it's so flexible.,JuomariNurmio,2025-06-23 09:01:38,1,learnprogramming,t3_1liauza,False,
mzebj3k,JavaScript so you can be a full stacker. Then learn the 3 Cs.,isredditreallyanon,2025-06-23 20:53:39,1,learnprogramming,t3_1liauza,False,
mzeuq83,Pick the one you like more and start programming. You'll figure out what you want to do later.[https://roadmap.sh/computer-science](https://roadmap.sh/computer-science),iliekplastic,2025-06-23 22:31:55,1,learnprogramming,t3_1liauza,False,
mz640rs,"Oh yeah, there are many places where low level programming is used. Embedded systems, like wearable devices. Robotics, avianoics, medical devices, drones, warfare and so on. Some of those industries are emerging and will only get more and more popular. So, I think it’s a god path.",StrikingImportance39,2025-06-22 15:46:06,15,learnprogramming,t3_1lhqt18,False,
mz63kni,Yes while new language's are popular the whole world runs on low-level.,Pasec94,2025-06-22 15:43:49,3,learnprogramming,t3_1lhqt18,False,
mz63hpl,"It could be a niche worth thinking about but the job market for that would be smaller than more cutting edge languages. It would be useful for companies with large amounts of legacy code or for companies that develop compilers or use very limited capacity microcontrollers. One example is NASA has low level code that they still need to work with for reprogramming old satellites that are still in space, but as you can imagine, not many job vacancies like that exist! Where it would come in useful mainly is either in industries where there's a lot of legacy code, or where very high optimisation of code for efficiency is required",140BPMMaster,2025-06-22 15:43:24,6,learnprogramming,t3_1lhqt18,False,
mz657kr,"Remote jobs are available but they need to send you a development board, sensors and a prototype etc. it can be painful if something happens to the hardware and they usually want you to come to the office. Just check local tech companies who develop devices and research and development projects. You can visit them ask engineers about their job and their life etc. I am sure they will be okay with that because you are young and want to learn what they do.",neuralengineer,2025-06-22 15:52:10,3,learnprogramming,t3_1lhqt18,False,
mz64n0n,It's quite niche compared to general software so you should check local job applications in your country.,Wingedchestnut,2025-06-22 15:49:16,2,learnprogramming,t3_1lhqt18,False,
mz6715i,"well I think low-level programming is a niche but sort of a critical field, not like web dev with tons of daily postings. You'll find jobs more through networking mostly, direct applications maybe. Remote work exists, but onsite is often preferred for truly deep low-level roles. Anyways, coming from Argentina, it's doable but tough! You'll need to heavily showcase your skills through projects to stand out globally. More important is that you love it so pursue it, and be persistent",Ok_Ratio_5135,2025-06-22 16:01:32,2,learnprogramming,t3_1lhqt18,False,
mz68i6l,"Progress is moving, and there is more and more automation in production. Specialists for programming and configuring controllers will be needed in large numbers.",Alaska-Kid,2025-06-22 16:09:14,2,learnprogramming,t3_1lhqt18,False,
mz6a4yj,Software? Probably? Embedded system? Definitely especially for startups.,lolichaser01,2025-06-22 16:17:38,2,learnprogramming,t3_1lhqt18,False,
mz79hr0,"The demand is huge but I have no tips for directing you where to find those places. Look for companies that have their own hardware, or act as hybrid HW producing and SaaS.",Important-Product210,2025-06-22 19:15:09,2,learnprogramming,t3_1lhqt18,False,
mz7wpjl,"If your interest lies more with low level stuff I'd urge you to shift towards studying electrical or computer engineer rather than computer science, if the institution you plan to attend has these things. That will gear you better for things like embedded systems while also paving the way for hardware descriptive languages (VHDL, Verilog) to work on things like FPGAs.This path would also make you pretty well rounded to work on things like OSs and compilers as it will give you a better understanding of what a computer is doing from a physical perspective.",office_chair,2025-06-22 21:15:25,2,learnprogramming,t3_1lhqt18,False,
mz0guo6,"This is referred to as ""imposter syndrome"" and is very common especially in junior Devs/new jobs. It'll be fine, trust yourself more and don't let it take over your work. You learnt something from the tech lead so that's one more thing you know you can do in the future. You can also be proactive - do specific courses related to your job so you know how to tackle specific situations. Otherwise learning on the job is expected.",tommeh5491,2025-06-21 16:58:10,15,learnprogramming,t3_1lh0zm9,False,
mz0hroi,"No worries. I feel like this is pretty common. I think it’s because there will always be a deeper level of knowledge than what you currently have. Regardless of what you know. It’s kind of the nature of programming. The more you learn, the more you learn that you have more to learn. I promise that you’ll eventually look back and think, “How could I have ever been so worried about X? Especially since Y is currently kicking my ass!”Imposter syndrome and low confidence means you’re recognizing the areas where you can improve. Which is awesome because it means you’re still growing and learning!",rdb212,2025-06-21 17:02:52,4,learnprogramming,t3_1lh0zm9,False,
mz0v0xv,"Yup, that’s imposter syndrome. Everybody goes through it. Don’t worry about it. And it’s common to break stuff in our line of work. Just make sure to learn from your mistakes and you’re golden.",avi-dgt,2025-06-21 18:11:28,2,learnprogramming,t3_1lh0zm9,False,
mz1n2ml,impostor syndrome. Look it up and stop that kind of thinking,jeffrey_f,2025-06-21 20:45:19,2,learnprogramming,t3_1lh0zm9,False,
mz5bttg,"Sorry to break it to you OP but I (a random unqualified stranger who hasn't seen any of your work) know better than your tech lead, and your manager about how you are doing and I hate to say it but you are doing terribly!",Techno-Pineapple,2025-06-22 13:11:21,1,learnprogramming,t3_1lh0zm9,False,
mzb7lz6,"Dude, this is SO normal it's not even funny. I remember feeling exactly like this when I was starting out and honestly, even now running Metana and helping train developers, I still see this pattern with almost every single student who transitions into their first dev role.Here's the thing that might help reframe this. You upgraded Node containers, used new JS features, AND you sought help when you hit a roadblock. That's actually really solid problem-solving. Yeah, you could have done the cloud builder upgrade yourself, but how were you supposed to know that without... well, being told exactly what happened?Your tech lead isn't frustrated with you, they're teaching you. There's a huge difference. If they thought you were doing poorly, trust me, you'd know it. The fact that they're giving you your own features to plan means they see potential.At Metana, I always tell our bootcamp grads that the first 6-12 months are basically extended learning with a paycheck. You're not supposed to know everything yet. The goal is to learn fast and not make the same mistake twice.One thing that really helped me early on was keeping a ""learning log"". Just a simple doc where I'd write down these exact situations. What I did, what I learned, how I'd handle it next time. Looking back at it after a few months was eye-opening because I could see how much I'd actually grown.Also, 5 months in and you're already handling complex features and supporting QA? That's actually ahead of the curve. Most devs I know were still figuring out the codebase at that point.The imposter syndrome is real but it gets better as you build up more of these learning experiences. Just don't let it paralyze you from taking on those new features they want you to plan.",darkstanly,2025-06-23 11:26:39,1,learnprogramming,t3_1lh0zm9,False,
mz0zwab,"Look up the Dunning Kruger effect. You are in the dip and will be there for some time. That's life no matter what discipline you choose. Keep learning and doing, and you'll eventually feel more confident, but perhaps never as confident again as someone who is ignorant of the work you do",SeriousDabbler,2025-06-21 18:37:37,0,learnprogramming,t3_1lh0zm9,False,
mylqh3v,"sure! i'm only in a few programming servers. full disclosure, i got banned from the official python server for shitposting too hardmy discord is alias_qr_rainmaker",big_guyforyou,2025-06-19 09:32:36,1,learnprogramming,t3_1lf5y6t,False,
mymvlor,I would also love to join !,Full_Advertising_438,2025-06-19 14:14:47,1,learnprogramming,t3_1lf5y6t,False,
myouu9m,I also love to join my discord is alo00803,Muted-University9426,2025-06-19 20:09:56,1,learnprogramming,t3_1lf5y6t,False,
myowyvu,"I'm an old guy, but a beginner. Can I join? :hand_with_fingers_splayed_light_skin_tone:",pookpaak-karepaak,2025-06-19 20:19:59,1,learnprogramming,t3_1lf5y6t,False,
myqbhnh,Im trying to surround myself with ppl at the same path as i am but i have none so far. Here's ma disc: lmotarabis,StrangeGrand7836,2025-06-20 00:53:09,1,learnprogramming,t3_1lf5y6t,False,
myqbt61,I am in a similar boat. Currently in a course for a Certificate for CompTIA Security+ exam taken at the end of the course.discord name is stretchedraz,iamRaz_,2025-06-20 00:55:01,1,learnprogramming,t3_1lf5y6t,False,
myr0ovw,"I am a beginner too, would love to join.",TraditionalFocus3984,2025-06-20 03:23:49,1,learnprogramming,t3_1lf5y6t,False,
mythjre,I am in learning frontend and need some help from u guys,Patient-Frosting9301,2025-06-20 14:36:32,1,learnprogramming,t3_1lf5y6t,False,
myuy34n,Interested. Can we add discord through dm?,Far-Buyer-3308,2025-06-20 18:48:43,1,learnprogramming,t3_1lf5y6t,False,
myvi2jv,Just 1 month into to the odin project... No tech background..started to learn coz i want to build my own web apps.. Would love to connect with like minded friends :grinning_face:,Over_Dig_8876,2025-06-20 20:28:30,1,learnprogramming,t3_1lf5y6t,False,
mz88qjm,"I think it makes more sense to go to the path of Cloud/devops/cybersecurity from IT support compared to a development job, but tbh whatever you choose you will need to do quite some upskilling for these positions, it's your choice if you're motivated enough to learn and practice a lot and then apply.Having IT work experience is the most important which you have but the rest will depend on your own.",Wingedchestnut,2025-06-22 22:20:54,10,learnprogramming,t3_1lhz7en,False,
mz7zvi9,Point to the m-dash key on your keyboard.,Moloch_17,2025-06-22 21:32:12,19,learnprogramming,t3_1lhz7en,False,
mz86nq4,"I'm also 44. Can you make a lateral move at the company you are with now? I was previously a senior tech support and then QA for a SaaS startup; I stayed there for nine years, should have made a career move sooner but I burnt out pretty hard and I've been unemployed since 2017, not even trying to work, but lately I've been really wanting to go back to working with a dev team and/or a software product. My technical skill set is outdated at this point and that combined with being old now makes me feel like an unlikely candidate for a technical role, but I still have my industry experience and my passion (hopefully) so I'm wondering if I could be a project manager or somesuch, has something like that crossed your mind?",AfraidOfTheSun,2025-06-22 22:09:21,2,learnprogramming,t3_1lhz7en,False,
mzae536,"Welcome to the 40+ camp! :) I'm now 25 years in tech.1. ""honestly, it feels like a huge mountain to climb""Why climbing that mountain if you aren't an alpinist and that's not your call? 2. ""I’ve hit a point where I really want to progress, earn a better salary, and feel like I’m actually growing in my career.""Congratulations on self-realization that your needs aren't met!What growing in your career actually entails for you?3. ""The problem is — I feel completely stuck and unsure of the right direction to take.What brought you to this point of stuckness? 4. ""What triggered all this is seeing someone I used to work with — he’s now a successful cyber engineer in his 20s. It hit me hard. I know it’s not healthy to compare, but I can’t help feeling like I’ve missed the boat.""Yes, it's not healthy. You know it's not healthy to eat chocolate every day. But you continue eating chocolate every day and asking people what you should do? :)I'm 47 now, partially disabled. Immigrated the 2nd time. Aren't there younger people around who are better than me? There are. There are even people elder than me who are stronger, smarter, etc. So what?! It's your life, you make your own rules, set your own standards, have your own values. It's easy to compare with those younger. But I also remember my struggles of insecurities when I was their age. The grass always looks greener somewhere else. :)5. ADHDThis isn't your cornerstone. But this is something to consider when choosing your career move / adjustment! Since you have it, it means coding, analysis might not be for you since they require attention to details & that will suck energy out of you.I worked 7 years as a web developer at the start of my career. 15 years later I also was said I had adhd. No wonder why I felt so exhausted on my 5th year in ""coding"".DM me if you need your career guidance.",IgniteOps,2025-06-23 06:49:45,2,learnprogramming,t3_1lhz7en,False,
mz8jgez,"I would get the ADHD checked out, Without overcoming your lack of focus I just don't see how you would be able to learn what you need. Are you sure you don't just lack routine & discipline, check out ""Atomic Habits"".The key is just to do something for small periods of time until it becomes normal. Set small goals & study for 20-30 minutes, takes notes or do whatever it takes for you to retain it.",Rain-And-Coffee,2025-06-22 23:22:22,4,learnprogramming,t3_1lhz7en,False,
mz8kxg9,"I am not an AI doomer, but web dev got hit the hardest with AI sort of forcing a compression of front end into back end roles as a smaller subset of the work. You really should plan to become full stack now.Also: have you been diagnosed with ADHD, or is it self diagnosed?",jjopm,2025-06-22 23:30:50,1,learnprogramming,t3_1lhz7en,False,
mzajr75,"Man, I feel you on this one. First thing, stop beating yourself up about being 44. That's actually not old at all in tech, and honestly some of the sharpest people I know didn't really hit their stride until their 40s or later.Your IT support background is actually gold. Most college grads and junior devs have zero real world troubleshooting experience, but you've got 4 years of it. That's huge when things break in production.About the ADHD thing, look, it can be challenging but it can also be a superpower once you find your groove. The hyperfocus aspect is incredible for debugging or diving deep into problems that would frustrate other people.Regarding web dev vs cloud/cyber? honestly with your AZ-900 already done, you've got momentum there. Don't underestimate that achievement. The fact that you passed shows you can learn new tech. At Metana we've had plenty of career changers in their 40s and 50s. What I notice is they often outperform younger students because they have better work discipline and actually know what they want from their career.My take? Pick one path and commit for 6 months. Based on what you've shared, cloud seems like the natural next step. Go for AZ-104 next, build some projects, document everything you do. The networking and scripting stuff will come as you practice.You're not behind. You're just getting started on the next chapter :)",darkstanly,2025-06-23 07:44:27,2,learnprogramming,t3_1lhz7en,False,
mz9xh01,Ten years ago I would have said hell yes. I'm a web dev at a tech company and I feel like I've probably got 5 years before the shit is going to hit the fan in the industry.,rg25,2025-06-23 04:27:14,1,learnprogramming,t3_1lhz7en,False,
mz9zg2s,Alt 0151. Are implying an LLM wrote this with all that back story and feelings and what not? To what end?,ristar_23,2025-06-23 04:42:32,3,learnprogramming,t1_mz7zvi9,False,
mz8it4q,\[Shift\] + \[Option\] + \[-\]I use it all the time — just prefer it,Rain-And-Coffee,2025-06-22 23:18:39,1,learnprogramming,t1_mz7zvi9,False,
myzl5ny,"Try CS50, it's a free online course from Harvard for absolute beginners.",Random-Real-Guy,2025-06-21 14:08:15,7,learnprogramming,t3_1lgxa8z,False,
myzoo80,Check the FAQ in this sub,Sheezyoh,2025-06-21 14:28:10,4,learnprogramming,t3_1lgxa8z,False,
myzt3bs,I'm also of the same age we can connect and learn together. I think if you want to study CS then cs50x is a good start. And you can pick up any programming language of your choice according to your interest the key is to learn problem solving and algorithmic thinking.,Rich_Government007,2025-06-21 14:52:22,3,learnprogramming,t3_1lgxa8z,False,
myzvkk2,"I would recommend starting with python. Easy to learn, many libraries, used in almost every technology(cloud, machine learning, automation etc)",lush_tutor,2025-06-21 15:05:45,2,learnprogramming,t3_1lgxa8z,False,
mz0absq,"That’s an awesome place to start., Liking Modded Minecraft already gives you a great reason to learn Java. Making mods is actually a solid intro to programming, and Java is a widely used language, even in jobs.Don’t worry about learning “the perfect language” right now. Start with Java through Minecraft modding, and as you get comfortable, you can branch into others like Python or JavaScript. You *can* learn multiple languages over time, but focus on one first.Check out some beginner-friendly Java tutorials or modding guides, and try building small things.",CommentFizz,2025-06-21 16:23:47,2,learnprogramming,t3_1lgxa8z,False,
mz006h5,"Making mods in java is the perfect way for you to learn. Don't listen to the Python evangelism. You're going to breeze through university programming if you are hobby programming on the side. I learned Java before python in uni and I turned out good. Now I work with C# now, which is much more similar to Java. The only reason to start with python is if don't have a reason pick a specific language, but you definitely do",mockingbean,2025-06-21 15:30:14,1,learnprogramming,t3_1lgxa8z,False,
mz00s24,"Just master Java, every language will make senseStart here:https://www.jetbrains.com/idea/download/?section=windowsGet community edition (free version).Use free course, YouTube, AI to learn to do stuff. Learn to install dependencies via cmdMove on to c/++/#/python/sql/html/css/etc later",Sad_Whereas_6161,2025-06-21 15:33:22,1,learnprogramming,t3_1lgxa8z,False,
mz06yce,"I would learn Java and make mods for Minecraft. Java is widely used, and the stuff you learn from making mods will be useful in other areas. Once you are familiar with Java you can look into other languages. If you are interested in gaming you might wish to look at learning languages that are used in gaming. Gaming is a huge industry and there are loads of jobs in it so you shouldn't think of making mods for Minecraft as something that diverts from becoming a programmer in the future. In fact I'd argue that it is a really good place to start because you are interested in the game, so you will be very invested in learning. I learned HTML at around your age because I wanted to make fan sites for bands I was into. Whatever it is that gets you interested in learning is important. And employers are still going to see coding skill in making mods for games, so don't worry too much that it is a distraction, or diversion from your goal of becoming a programmer.",Dead-Circuits,2025-06-21 16:05:59,1,learnprogramming,t3_1lgxa8z,False,
mz0hbid,same,Individual_Answer761,2025-06-21 17:00:34,1,learnprogramming,t3_1lgxa8z,False,
mz2zjtw,"If you decide on Java, use their learning site [https://dev.java/learn/](https://dev.java/learn/) and of course, [https://www.reddit.com/r/learnjava/](https://www.reddit.com/r/learnjava/)",isredditreallyanon,2025-06-22 01:35:49,1,learnprogramming,t3_1lgxa8z,False,
myjkngi,"Can you be more specific about what ""feels heavy and sluggish"" about C# to you? The only *specific* thing I see that you mentioned is setting up VS Code. Is that what your concern is?You can edit C# code in either a plain old text editor, or an IDE like VS Code, just like you can with JavaScript. The difference is that with C#, you have to compile your code before running it, but that's true of many other languages too.The .NET framework is basically just the standard library for C#. So being ""dependent on the .NET framework"" is like being ""dependent on Chrome to provide the browser DOM APIs"". The same dependency exists in both cases, it's just that you don't really notice it in the second case because the browser came pre-installed on your computer, or you installed it before you started thinking about programming.And in both cases, the framework that you're using is open source, so you're not really being ""sold"" anything. It's true that if you invest time into learning a language and ecosystem, that investment ""locks you in"" to that ecosystem, but that's true of literally anything you could learn.",teraflop,2025-06-18 23:51:50,18,learnprogramming,t3_1lew5v0,False,
myjmjbh,"> With JavaScript, I could just make a js file in anything text-based editor, even notepad, and just go.You can do that for C# too. We like to use more advanced IDEs because they give us more features. > Is C# always plugin and library heavy?Javascript is library heavy. In C#, a ton of stuff is built in. Javascript has basically nothing built-in, so you need libraries. > Is C# always like this? It feels heavy and sluggish compared to the flexible JavaScript.Do you mean execution performance? If so you're making incorrect assumptions. If you mean developer setup - yeah, the more complex language has more setup. Once you get your environment set up, it's all easy from there.",binarycow,2025-06-19 00:02:25,10,learnprogramming,t3_1lew5v0,False,
myjmk75,"Most C# development happens in .NET environments. There’s Unity and whatnot, but most C# projects depend on the .NET runtime and its base class library. Microsoft is going to be a good resource, and is invested in C#, but it doesn’t mean you’re stuck with Windows development - or Windows apps.You mentioned “feeling dependent.” It’s part of programming. Car manufacturers are dependent on steering wheels, radios, and carpet. Don’t let it stress you and make you feel like less of a programmer. You get to code in your idea space and not recreate common tools and controls.Even in Javascript, for a sizable project, you’re going to import libraries with something like node package manager (just like you use nuget package manager in .NET).The other concern you have is spending hours on something and backtracking. This is where a solid, semantically sound, commit history in source control comes in, and it’s not specific to any language.For the “sluggishness” you mentioned - just be careful not to think of any language learning or initial project setup “sluggishness” as an indicator of runtime performance capabilities.",Western-Trip2270,2025-06-19 00:02:34,5,learnprogramming,t3_1lew5v0,False,
myjkp20,"js is great for quick, creative, and web-based projects, and c# is powerful for games and apps, but setup is heavier.you can learn both at the same time, no problem, the one you spend most of your time on is up to you",big_guyforyou,2025-06-18 23:52:04,1,learnprogramming,t3_1lew5v0,False,
myjntew,"Maybe try visual studio instead of visual studio code? I have .net set up so I can make APIs for my websites, sure, but I reallt didnt need anything extra to do Unity stuff in Visual Studio.C# is a lot bulkier than JS and is way more powerful.Maybe since you're starting with an art and animation background, try Unity programming first, then move to web design. Web design definitely has a lot more of a learning curve up front when it comes to programming, since you'll need a front end and back end (and maybe even SQL, depending on what youre doing). Unity is just C#.",HumanHickory,2025-06-19 00:09:48,1,learnprogramming,t3_1lew5v0,False,
myjrdzn,"I'm learning visual studio, just a few tutorials in I'm to the math game was tweaking that before that squirrel caught my eye being J1939 CANbus. I'm unfamiliar with the Visual Studio ""language"", so it's like learning a new language and is not intuitive because I haven't seen it before (like learning a new word you never heard); maybe it's a common syntax and I'm just a noob, I submit. I'd expect several more hours \[don't want to scare you with a number\] of research, debugging and testing before knowing enough to be useful.",PPGkruzer,2025-06-19 00:30:50,1,learnprogramming,t3_1lew5v0,False,
myk6xvi,One thing you learn is when you start doing professional development is that you're spending three quarters of the time making libraries work and a quarter of the time making business logic. One thing that changes is that when you're not a student learning the basics then no one wants you to actually reinvent the wheel and many libraries actually make your code cleaner like in c# the linq library is a god send,Lotton,2025-06-19 02:03:38,1,learnprogramming,t3_1lew5v0,False,
myktyiz,"> Apps, websites, games for consoles, web-based games, AR and VR experiences, and so on.C# is definitely better choice for that than JavaScript.>With JavaScript, I could just make a js file in any text-based editor, even notepad, and just go. It's true that C# (for now at least) requires a bit more ceremony, since you also need in most cases at least a csproj file. But there's nothing preventing you from writing C# in any text-based editor, it's just harder than using an IDE or at least a code editor but the same is true for JS. Library-wise C# should be much better than JS though. It has many more things built-in and a lot more available directly from Microsoft as packages.>Is C# always like this? It feels heavy and sluggish compared to the flexible JavaScript. I don't want to use up hours and weeks moving in a direction just to backtrack and have to unlearn it.Honestly, it's a matter of opinion imo. Personally I find C# much more flexible than JS. It's easier to write various projects in it, JS above else is for webpages and even though it tries to be useful in other places it's not particularly good in it. Btw, if you want modern C# features, remember to use .NET, not .NET Framework.",Dealiner,2025-06-19 04:37:28,1,learnprogramming,t3_1lew5v0,False,
mymfrlf,">With JavaScript, I could just make a js file in any text-based editor, even notepad, and just go.New feature in dotnet 10https://devblogs.microsoft.com/dotnet/announcing-dotnet-run-app/",lifeslippingaway,2025-06-19 12:46:52,1,learnprogramming,t3_1lew5v0,False,
mz8uvqa,"No, and you don't have unlearn anything.Learning how to use a good language like C# will benefit you even if you don't end up using it in a job.",ToThePillory,2025-06-23 00:29:04,1,learnprogramming,t3_1lew5v0,False,
my9wec9,"I recommend raising the issue with your superior and have a plan on what to do and what do prioritize, don't keep the blocker for yourself because it will blow up in your hands.",guigouz,2025-06-17 15:04:02,23,learnprogramming,t3_1ldpb8b,False,
my9yiso,"Google Sheet + Apps Scripts are very limited, with rate limits and not very friendly developer experience. They can be used to build something for a small scale of users or you do not expect everything to blow up. It’s okay to integrate into external systems but it shouldn’t be your system if you are expecting most of the work happening there. As someone else said, raise it up with your supervisor, explain. I do not think such a system will be possible with Google Sheets, even if it was it won’t be worthwhile. Also, it won’t be quick. Gather your facts and issues, talk it out, at least reach some middle ground. It won’t be easy so best of luck. :)",stuartelkeino,2025-06-17 15:14:01,5,learnprogramming,t3_1ldpb8b,False,
myccx42,"As someone near the top of an engineering department for a company heavily invested in the Google ecosystem: we avoid App Script unless it's for something like adding a menu or tool that does a very simple process. They're a pain to maintain, have weird limitations, and just don't offer a lot of freedom of implementation.I would document your issues with whoever your boss is, but there are a few ways for more effective communication. Number one is that you shouldn't just complain, but show solutions. Document what problems you're having, how you can solve them in the current framework (or why you cant), and what a better path forward would be.Executives don't care if a problem is hard, they care about cost and hours. If it takes less hours or money to solve a big problem a new way, that's how you get traction. Translate hours of work to cost and you'll be speaking a language they understand.",iamnull,2025-06-17 22:01:21,3,learnprogramming,t3_1ldpb8b,False,
mycjf03,"You need to start managing this project by capturing the business requirements and tracking how long it takes you to deliver them.The temptation is to just work on features as quickly as you can, to the best of your ability, and try to hit the deadlines set by your manager. *Don't do this: it's a recipe for burn-out and failure*.Instead, you need to plan your work up front, calculate how long it will take, and manage the business's expectations accordingly. You're a junior, and your working alone, so you need to give yourself time to do the necessary research and to correct the inevitable mistakes you'll make along the way.Businesses like *certainty*. They are less concerned with *how long* things take; they want to know *when* they will be ready so that they can plan accordingly. Your job is to give yourself enough time to deliver your work to an acceptable standard, to tell your manager *when* things will be complete, and to warn your manager *when* they will be late *as soon as you are able to*.Below is an outline of how to do this effectively: You have some high-level requirements already. Break those requirements down into units of work that deliver business value. We'll call those units features. The features need to be as small as they can be, such that completing one delivers some value to the business, even if it isn't usable in isolation.As an example, imagine you need to implement user accounts so that people can log onto the system and use it. The complete set of features that make a complete working implementation might be the following:- Registration- Login- Reset password- Update credentialsAll of these can be delivered as separate features. Even though registration is useless without login (and vice versa), they can be developed independently and each add business value independent of the other, so they count as separate features.The reason we try to make features small in this way is that it makes them closer to each other in size; therefore the time it takes to complete any of them will be of a similar magnitude. This will be important later.Once you have a collection of such features, you can begin working on them. As you work on them, you want to set aside some time in your week to plan the next set of requirements while you deliver the first.It's up to you to find the right balance between planning and delivery. Basically you want to be delivering as much as possible, but doing enough planning that you always have something in the backlog to work on. You want to make sure you capture all the requirements in the planning phase.You should have a nice predictable cadence to your work. You begin a task and you work on it until it is done. If you have to stop half way through a task because you failed to capture a business requirement, or failed to predict a technical problem, this is an indication that you didn't do enough prep work. We call these issues *blockers*. They happen to everyone - even experienced devs - but they will become rare if you are able to identify and fix their cause.You should keep a record of the features you're working on somewhere. It could be a Trello board, a GitHub project, a spreadsheet, a list in your diary, post-it notes - it doesn't matter where it lives. What matters is that you move features from the backlog to *in-progress* while you're working on them, and then into *done*, when you complete them; *and crucially*, you need to record *when* you completed them. Tools like Trello do this automatically for you.Once you have completed some features, you will have some real knowledge of how long it takes to complete a feature. Let's say you complete 5 features over a 2 week period. That means you have a velocity of *2 days per feature*. *Now* you can predict how long it will take you to complete the remaining features. As you complete more features, your velocity will become more accurate. Maybe by the end of the month, it turns out that it takes 2.5 days to complete a feature. Feed that back into your predictions.If you break your features down into small units of business value, like I outlined above, you will reduce the margin of error in the prediction. Realistically, some features will be completed sooner than others, but it all averages out over time.You can also use your velocity to make long-term predictions. If you count the average number of features that make up a high-level requirement (let's call it an ""epic"") then you can get a rough estimate of how long it will take to deliver an epic.Don't *guess* how long a feature will take to complete. You'll just get it wrong, but you'll still be obligated to achieve the deadline you set for yourself just the same. Use the velocity to *predict* how long it will take to complete your features, and keep updating that velocity. It's a good idea to put a couple of days on the end of the prediction in any case, to give yourself some wiggle room if anything goes wrong.Initially, you won't have a velocity. Tell your manager that you'll give him an estimate just as soon as you've completed a few features. If he really needs an estimate now, give him your best estimate, but update it as soon as you have a velocity, and update it again every time that velocity changes.Sometimes businesses actually do have deadlines they need to meet. Once you're tracking your progress effectively, you have the means to tell your manager if those deadlines are realistic. If you can see that you aren't going to deliver all the features required for a deadline, you and your manager need to negotiate what you're going to do about it. You're likely to have one of 5 options:1. Move the deadline;2. Remove features;3. Hire another developer;4. Work overtime;5. Cut some corners.4 and 5 are real options, but they are riskier, and they need to be managed carefully. If you're going to work overtime, you ought to be getting paid overtime, and you'll also need to take a holiday afterwards to recover your energy. There is also the issue of whether or not you *want* to be the one making all the sacrifices, and whether or not your company is taking advantage of you.If you're going to cut corners, you need to fix-up your work as soon after the deadline as possible. Time needs to be set aside for this and future deadlines may need to be delayed. This is called *paying back your technical debt* and failing to do so can ultimately sink a project.Along with features, you're also going to have to perform other tasks, such as bug fixes, refactors, meetings, and so on. You only need to track product facing tasks (i.e. features and bugs), but you can track other things as well if it helps you organise and manage your workload.Bugs are an important dimension to measure. Together with velocity, they give you a real measure of the success of your project, and some actual quantitative data to share with you manager. (Managers love data.)You can track bugs on the same board, but track them separately, and *don't include them in the velocity*; that's for features only. More bugs will usually coincide with a reduction in velocity, and both trends mean that you need to fix some underlying issue with your code. Maybe it needs refactoring, better linting, or more unit tests. Maybe it's outgrown its architecture. They're an indication that you're either delivering too quickly and neglecting the quality of your code, or have some limitation in your architecture that you need to overcome.You need to pay attention to what is causing these issues because it will help you inform decision you make about the project going forward. E.g. have you finally outgrown those Google Sheets? Or, are you spending enough time keeping your code tidy.Again, all of this is intended to help you make room for yourself to improve the parts of your project your manager won't see and ultimately doesn't care about unless they produce a failure (which they will if they go unchecked) while providing the velocity that shows predictable progress. You need to give yourself room to try unit testing, or some library that you need, or whatever it is you think the project needs.Don't hide these kinds of data for fear of being criticised. You can use them to demonstrate why you need the things that you know you need.",marrsd,2025-06-17 22:35:59,3,learnprogramming,t3_1ldpb8b,False,
mycz913,"> Now, I’ve landed a role at a non-IT company as their only IT Automation Engineer. **There’s no other IT person in the company.** They’ve given me a project to automate their processes using Google Sheets and Apps Script — they chose this route thinking it would be quick and low-cost.Well, you are in a bad situation brought about by employer ignorance. As the only IT employee in the ""company"", you are the definitive source of what is possible though. Assuming you want to continue in this role (I'd give that some thought...might be best just to move on...it's a stupid structure that you are the only IT person....)...You need to learn to speak their language and tell them when what they want is unrealistic without calling them a-holes. ""We need to manage expectations here.""",dwitman,2025-06-18 00:02:58,2,learnprogramming,t3_1ldpb8b,False,
myahu99,"you are doing system architecture design, your fuckup will end cost a lot. Just ask for a senior with deep knowledge on system architecture to design the layout. you can learn too but i wouldn't recommend designing an entire system as a project unguided.",Special_Beefsandwich,2025-06-17 16:45:07,2,learnprogramming,t3_1ldpb8b,False,
myclf0f,Thanks for this.,Standard-River4990,2025-06-17 22:46:55,2,learnprogramming,t1_mycjf03,False,
mylosft,"if you want flexibility and aren’t 100% sure, go for IT or CS. you can specialize in cybersecurity or data science later, and you’ll have more career options",big_guyforyou,2025-06-19 09:15:55,6,learnprogramming,t3_1lf5qif,False,
mylp0o0,"Okay, thank you so much for your advice!:beaming_face_with_smiling_eyes:",Billionfairyyass1539,2025-06-19 09:18:13,3,learnprogramming,t1_mylosft,True,
mylp32x,no problem! i wish i majored in cs. i was a linguistics major. the language aspect of programming is what really interests me,big_guyforyou,2025-06-19 09:18:53,3,learnprogramming,t1_mylp0o0,False,
mylpbow,"Oh, I have heard that there are plenty of courses available on the internet for various topics! They have free and paid ones, but it depends on the quality of the course and your interests for sure!:beaming_face_with_smiling_eyes:",Billionfairyyass1539,2025-06-19 09:21:12,2,learnprogramming,t1_mylp32x,True,
mylpi73,"i recommend youtube tutorials. just type what you're looking for into the search bar, whether it's ""javascript arrays tutorial"" or ""python OOP tutorial"" or ""bash scripting tutorial""",big_guyforyou,2025-06-19 09:22:59,2,learnprogramming,t1_mylpbow,False,
mylpre5,"Ohh, that's very helpful for sure! Thank you!",Billionfairyyass1539,2025-06-19 09:25:31,2,learnprogramming,t1_mylpi73,True,
mylptqv,no problem! happy coding!,big_guyforyou,2025-06-19 09:26:11,2,learnprogramming,t1_mylpre5,False,
mylpupy,Thank you so much!!,Billionfairyyass1539,2025-06-19 09:26:27,2,learnprogramming,t1_mylptqv,True,
my948so,"After 20 years these are steps I'd follow to learn to be a programmer.1. Can I build the functionality I want to make? Proper design, performance and maintainability comes later in the learning curve. Syntax, the algorithm and the availavle libraries are the main focus here.2. Can I make this secure? Know the most common attack vectors and how to mitigate them. Don't settle for ""just use library X"". Understand the principle what the issue is and how it can be exploited. Then use the library.3. Can I fix performance bottlenecks. Learn profiling techniques and caching for starters.Now you've hit the milestone that you can deliver usable software. It might not be pretty but it works and is secured against most common attack vectors.4. Can I deliver fast? Time is money and to be competive you must learn to deliver quicker. Tooling, frameworks ai come into play here. Optimize your workflow for quicker results5. Can the software adapt to changes quickly? The main goal of software maintainability is to be able to adapt to changing requirements. New market oppertunities, chaning legel requirements. Compitive software can be changed quickly. Learn common patterns and practices. Learn about software architecture for differnt levels of scale.At this point your technical skills are what I would expect of a senior developer.Now I just ask myself the question. Can I make X?If the answer is no I follow these 5 steps and expand my knowledge for each step where needed. It looks like you are expanding your skills in step 1 and you have dabbled a bit in the others. Good. Now look at your work from the perspective of the other points. Detect issues, find and assess the solutions. Train yourself on the tooling surrounding those solutions and voila, your skillset has expanded. Rinse and repeat.It's not about learning, it's about building.Build. Build better.Build bigger.",Historical_Equal377,2025-06-17 12:35:21,8,learnprogramming,t3_1ldk4ye,False,
my9cn6k,"Once you build it, do you think you could build it again? Or, at the very least, describe the major steps you took to build it? One idea is to make a fake presentation. Imagine you're doing this as some kind of school project, and you have to explain what you did. Could you do that?Explaining something often reinforces what you have learned.",CodeTinkerer,2025-06-17 13:24:20,2,learnprogramming,t3_1ldk4ye,False,
my8rq94,"Actually, it sounds like you're on a good way. You're using AI to guide you, not to *do* things for you.Yet, when you have the feeling you're just hacking things together, you need to change your approach to programming.Learn a more *pragmatic* approach: *plan before program*.Instead of directly clobbering away on the keyboard, pick a piece of paper and a pencil. Spend time fleshing out what you want to do, describe the functionality, describe the individual parts of your programs, drill deeper and deeper. Then, start solving each of the parts as *you*, the person would do. Once you have working solutions, test them. Then, implement them in code.The following literature can help:+ ""Think Like A Programmer"" by V. Anton Spraul+ ""The Pragmatic Programmer"" by Andrew Hunt and David Thomas+ ""Structure and Interpretation of Computer Programs"" (SICP) by Ableton, Sussman, Sussman+ ""Code: The Hidden Language of Computer Hardware and Software"" by Charles Petzold",desrtfx,2025-06-17 11:09:07,3,learnprogramming,t3_1ldk4ye,False,
myaqqac,"Thanks for breaking this down, this actually gives me a much clearer roadmap than the usual “just keep building” advice I hear.Right now, I think I’m definitely in Step 1. I'm trying to build things that work, even if they’re messy or inefficient. I try to break problems down and write things out, then rely on Google, Stack Overflow, docs (which I still find hard to fully understand), and sometimes ChatGPT to clarify things when I’m stuck.I’ve dabbled a little in Step 2 and 3, like trying to optimize something when it feels slow, or understanding how APIs might be vulnerable, but I still feel unsure if I’m going about things the right way.Is there anything you’d suggest to help someone like me level up through these stages more intentionally? Especially going from “just build stuff” to “build better and smarter”?Really appreciate the clarity in your response.",FyodorAgape,2025-06-17 17:25:21,1,learnprogramming,t1_my948so,True,
my9e9o4,">Once you build it, do you think you could build it again?Not always >, at the very least, describe the major steps you took to build it?Yes, I guess.>Could you do that?I would say, yes because I went through the whole process even though I looked up things on Google, etc. I also looked up why and how it works, I didn't just put up the code to run it. It's a very new experience for me honestly, and programming is kinda hard unlike the popular opinions I've heard about it.",FyodorAgape,2025-06-17 13:33:18,2,learnprogramming,t1_my9cn6k,True,
my8sgns,"I’m not sure if I’m doing things the way experienced programmers do, but I try to break down the problem and write it out in a text editor first. Since I don’t know as much yet, I rely a lot on Googling, reading docs, and checking Stack Overflow. Though honestly, I find documentation pretty hard to understand most of the time.Does this sound like the right approach? Or is there a better way I should be doing this?I’ll definitely check out the books you mentioned, thanks!",FyodorAgape,2025-06-17 11:14:44,2,learnprogramming,t1_my8rq94,True,
myb5zp7,"The only thing you really need to be sure about is security. The rest boils down to. If the users are happy you should be happy. Software is a tool that solves a problem. So if it solves the problem without creating any new ones (those pesky security issues) you're good.For security I'd suggest to look into the OWASP juice shop. It is a deliberatly insecure webshop and you're challenged to hack it. ""Owasp cheat sheet series"" is comprehensive list of common security flaws the help je get started. Youtube has videos of people doing the challanges.Once you get through that you should have solid foundation to judge your own code for security flaws.Owasp also has a list of tooling that can assist in testing for security flaws.For performance you optimize the bottlenecks and leave the rest. Learn about caching and some basic database optimization.Step 4. I believe that editor/ide configuration is highly personal. Try different stuff and do what is right for you. Optimize whats slows you down.Step 5. Is best if you have a solid fundation on step 1. Read up on design patterns, soft architecture patterns. At this point you should have buily enough stuff to understand where you could use that stuff effectively.",Historical_Equal377,2025-06-17 18:35:05,2,learnprogramming,t1_myaqqac,False,
my9gegs,"Most of those opinions come from experienced programmers who may have found it easy or forgotten the difficulties they had learning programming. If you press an experienced programmer, they would eventually admit that they know a lot about programming, but they feel none of it is hard and are often surprised people find it hard.People get paid well because it is hard to learn. Many school in the US still don't teach it as commonly as they teach math. That's how challenging it is when they can find teachers of math more easily than teachers of programming.",CodeTinkerer,2025-06-17 13:44:57,3,learnprogramming,t1_my9e9o4,False,
my8t2g2,"Sounds like you're absolutely on the right track, much, much better than most people who ask similar questions here.I'd just do away with the text editor and resort to classic paper. Less distraction and the act of writing by hand consumes less mental attention than typing on a computer.Yes, it is slower, and that's the whole point. Less mental energy, lower speed, more time left to think through.Get away from the keyboard when you plan. Really.Later, there is nothing wrong with googling, reading docs, checking SO - that's what every programmer does and what you absolutely should keep doing. You'll need it less and less.> Though honestly, I find documentation pretty hard to understand most of the time.Understandable, but keep going. It'll get better over time with more exposure and experience.",desrtfx,2025-06-17 11:19:18,2,learnprogramming,t1_my8sgns,False,
my8x94g,Thanks for the advice :),FyodorAgape,2025-06-17 11:49:35,1,learnprogramming,t1_my8t2g2,True,
mz9xyvf,"[https://www.algorist.com](https://www.algorist.com) use this book. all code examples are in C though. but you can do it in C++, STL simplifies it a lot.",doggitydoggity,2025-06-23 04:31:05,3,learnprogramming,t3_1li7h40,False,
mzahi0b,"Gratz on finishing your first year!) Here are sources that helped me a lotYouTube Playlists:- CodeWithHarry – His DSA in C++ playlist is beginner-friendly and covers all the basics.- Abdul Bari – His explanations are super clear, especially for core concepts (though some videos are in Java, the logic is the same).- Take U forward – This channel is really popular for DSA, and the C++ code is clean and easy to follow.Paid Courses:- Coding Ninjas – Their DSA in C++ course is very comprehensive and has a lot of coding practice.Extra tip:When you’re ready to practice problems and prep for interviews, check out prepare.sh (I’m a contributor and used it a lot myself). It’s great for practicing real coding questions and staying up to date with changes.",Dependent_Gur1387,2025-06-23 07:21:51,3,learnprogramming,t3_1li7h40,False,
mzas5nf,"I also recommend you to practice at LeetCode. There are daily tasks, but also you can find tasks by topic, participate in contests and so on. For every task usually there are many good detailed explanations It might be a little bit complicated at the beginning, but it would be a perfect option if you already know some basics and what some practice",mr-defi,2025-06-23 09:08:59,1,learnprogramming,t3_1li7h40,False,
mzfqzdx,"Might be quite ambitious, but perhaps you can try to implement the existing standard library data structures yourself with the goal of trying to replicate their interfaces as much as possible. A lot of YouTube videos/tutorials really don't emphasize idiomatic C++. I'd be ready for a lot of pain with this approach though. It also really depends on how much you care about the C++ aspect by itself.",roasted_water_7557,2025-06-24 01:35:25,1,learnprogramming,t3_1li7h40,False,
mz9yb47,Thx will surely try that.,ExternalPair2708,2025-06-23 04:33:43,1,learnprogramming,t1_mz9xyvf,True,
mzbif7r,Thanks a lot buddy. And yes i will be following take u forward but I am a bit confused about the structure of his videos like do I have to watch videos straight up from the youtube as they are arranged or do I have to follow his tuf website and follow theory as per the questions. Can you please suggest me something on that.,ExternalPair2708,2025-06-23 12:41:13,1,learnprogramming,t1_mzahi0b,True,
myew73n,"This is a developer course not engineering. If you wish to go into research on AI or other cs related things, then choose engineering course. I study s/w engineering, we have physics, calculus 123, AI, prob stat along with the usual Dsa, c,c++,java,project management,networking, OS, web dev(html css js),microchip, logic circuits etc. This makes us ready for both industry and research fields.- i would advise against paying for a web developer course since its free and you just need someone to set you up with a roadmap. after that you can learn with free resources.- if you want an engineering degree which is flexible for both industry and research then only paying for it makes sense.",Reaperabx,2025-06-18 08:13:28,6,learnprogramming,t3_1lebgzl,False,
myevjbm,Like i have taken a udemy course which was of 60 days but i covered it in a month the course will help you make 20 real world applications and it will teach you the basics of python along the way after the 20th day you will start to learn advanced python,Grandmother8,2025-06-18 08:06:56,4,learnprogramming,t3_1lebgzl,False,
myev9sf,What language do you want to learn?,Grandmother8,2025-06-18 08:04:25,1,learnprogramming,t3_1lebgzl,False,
myeyvtj,"Never heard of scaler academy so it's probably not worth it.There is no course that will give everything you stated structured in one course, you need to learn things step by step.Try Udemy or the IBM courses on coursera for paid structured development courses.",Wingedchestnut,2025-06-18 08:40:28,1,learnprogramming,t3_1lebgzl,False,
myewfig,"Ahh !! thanks for identifying that, will change it right away,All the best with your course",Chethan_Gopi,2025-06-18 08:15:47,1,learnprogramming,t1_myew73n,True,
myevfnp,"I have knowledge on Javascript and basics of react, I wish to continue on the same",Chethan_Gopi,2025-06-18 08:05:58,1,learnprogramming,t1_myev9sf,True,
myf0sjl,"Sure, will look into it Appreciate your suggestions !!",Chethan_Gopi,2025-06-18 08:59:30,1,learnprogramming,t1_myeyvtj,True,
myevoci,Man i wish i could help but i only have knowledge of python,Grandmother8,2025-06-18 08:08:19,1,learnprogramming,t1_myevfnp,False,
myew9xm,"Uhoo no worries, Thanks a lot, I really appreciate it.",Chethan_Gopi,2025-06-18 08:14:14,2,learnprogramming,t1_myevoci,True,
myf0le1,Please share for beginners who are wanting to learn Python as a side hobby and also to gain better skills.,AllforPnt,2025-06-18 08:57:32,1,learnprogramming,t1_myevoci,False,
my8nua2,Do the course cs50x,Augit579,2025-06-17 10:38:01,6,learnprogramming,t3_1ldjnyt,False,
my8o27x,freecodecamp,SpottyJaggy,2025-06-17 10:39:55,2,learnprogramming,t3_1ldjnyt,False,
my8sn95,"This is a craft, an excellent craft. Like carpentry, like plumbing, like jewelry-making. The only way to learn it is to do it. To master a craft takes many thousands of hours of practice. You can make useful things in those thousands of hours. The more people use what you lear, the faster you’ll learn — if you listen to your users’ feedback.The people behind FreeCodeCamp share this attitude, so you’re on the right track.Beware: the crypto corner of our craft is full of grifters and confidence artists.",Aggressive_Ad_5454,2025-06-17 11:16:07,2,learnprogramming,t3_1ldjnyt,False,
my8q4w6,"CodeAcademy has good stuff for very beginners. Don’t recommend spending much time on it though. For example, if you do Java, just do the learn Java course , don’t try to do all the stuff they have , etc",Realjayvince,2025-06-17 10:56:47,1,learnprogramming,t3_1ldjnyt,False,
my8qghk,"The Odin Project is pretty good, plenty of people seem to get jobs and use it as a good entrance into software development through web dev.CS50 is pretty generalist so you can pick what might interest you from there. A lot of web3 sdks are based off web dev languages so that's something to consider. If you want to get into the real blockchain development you're going down the C, Haskell, C++ route.They're a bit different from web dev so take a moment and think what you want to dabble with. You can definitely always change later though.",RtotheJH,2025-06-17 10:59:18,1,learnprogramming,t3_1ldjnyt,False,
my8qk5w,"You are spreading yourself way too thin. You are trying to learn too many things at once.Focus on *one* thing and learn it well.Also, you should have read the **Frequently Asked Questions** here in the **sidebar** before you bought anything. There are plenty excellent free learning resources.> I’ve been retaining information fairly well although I don’t know if I’m overdoing it.You only know if you actually retain and understand something once you put it into practice, once you use it. You can watch and read all you want and won't be any wiser until you *try*.Learning programming is more practice than anything. You need to actively program, you need to create your own applications/sites, not just blindly follow tutorial after tutorial.You need to establish a *solid foundation* through a high quality course in *one subject* and then use it.",aqua_regis,2025-06-17 11:00:05,1,learnprogramming,t3_1ldjnyt,False,
my8shsm,"\> I was hoping I’d be half decent by the end of the yearUnlikely. First, you need to learn the ""alphabet"" of programming such as variables, loops, functions, algorithms and other basic concepts that are applicable to any programming language. Then you need to learn idioms for the programming language of choice, e.g., object-oriented programming for C++ or trait-oriented programming for Rust, as well as the standard library for that programming language with basic string operations and so on. Then, finally, you need to learn the chosen problem domain, such as blockchain API and smart contract API.That's a lot of material and that's why a proper Bachelor's Degree in Computer Science takes 4 years. I rarely see a programmer who writes maintainable, usable code with less than 2 - 3 years of experience. Five years of experience is the minimum to be able to build serious, larger systems without constant supervision.My advice: don't waste too much time on passive, video-based courses. If you want to get good at something, learn by doing. Learn a topic and start solving specific exercises for that topic using a specific programming language, hands-on.",SysWarden,2025-06-17 11:14:58,1,learnprogramming,t3_1ldjnyt,False,
my8yqpo,"If you focus purely on web development the next 6 months with 6-8 hours a day you will become decent, as long as you are spending your time right. I think deliberate practice is a pretty undervalued method of learning in this field, and I would recommend that you apply it to your learning process. Other than that focus on learning and understanding the concepts and tools deeply. If you know what concept you need to apply to get some problem solved, you can always look up the syntax how to do so.For example; You want to parse json data from the APIYou would need to use ""encoding/json"" for converting that json data to a ""programmable format"" called parsing. To do that you need to know concepts like parsing, json unmarshalling/marshalling, learning what even API means etc. You don't need a deep understanding of these concepts first and I think they can be learned by doing projects and then asking chatGPT or fellow humans for assistance when you hit a roadblock or need further explanation. When you do project based learning you will encounter many points, in which you have to dive deep into the inner workings of a computer to get past something or after you are done building for the day, you can further your understanding on some new concepts that you encountered/applied. Basics can be drilled by practicing for loops, if statements, variable declarations, playing around with data structures like looping over them, learning some basic searching and sorting algorithms and then diving deeper into paradigms and how to identify some of the key patterns found in some of the problems.",Fancy-Letterhead-692,2025-06-17 11:59:44,1,learnprogramming,t3_1ldjnyt,False,
myaz4g3,2-4 years,CarelessPackage1982,2025-06-17 18:02:56,1,learnprogramming,t3_1ldjnyt,False,
my8o06e,Okay:) What does this do?,avrsty,2025-06-17 10:39:26,3,learnprogramming,t1_my8nua2,True,
mz659rb,Because you prob want to add more questions after the first question,helpprogram2,2025-06-22 15:52:29,11,learnprogramming,t3_1lhr20w,False,
mz65pyl,"In the array instantiation, you could instantiate multiple questions at once. It's usually not a great way of doing things, but it's good to be able to read it. I'm assuming that's the point of the tutorial.Side note, the class should be Question not Questions.",Yogso92,2025-06-22 15:54:47,7,learnprogramming,t3_1lhr20w,False,
mz6sk5u,"variables are generally only interesting when you know ahead of time how many instances of something you have (and usually also what purpose each variable serves)if you have a group of objects that just exists (their purpose is as a group, 'questions' rather than questionCapitalGB, questionCapitalUK and so on) it is in a sense clearer that you only care about them on a grouped scale.It sounds a bit abstract I admit. More practically: imagine that these questions aren't created in code as part of an exercise/test but are simply read from a database. and another tool is used to insert the questions into the database. So as a programmer you have no idea how many questions there are or how to name them.It makes a lot more sense to simply throw them into a list (the list of questions). In your case because you run into exercises and example code, often people want to show you things you'll encounter in later life but run into the problem that doing the setup for these sorts of systems would distract you from the thing they are trying to teach. So they compromise.Personally I would find it better to use a function that returns the questions (in your case). the function will return a list of questions and you can add in comments / naming of the function that it represents a lookup from file or database. that way you can practice working with abstractions / accepting data comes from another location (without needing to know exactly how it is put together)",josephblade,2025-06-22 17:49:14,2,learnprogramming,t3_1lhr20w,False,
mz65tlu,"...Holy shit, thank you! I feel ***SO*** silly, but yeah, not bunging up your readability with: Questions questions = new(""What is the capital of Germany?"", new string[] { ""Paris"", ""Berlin"", ""London"", ""Madrid"" }, 1); Questions questions2 = new(""What is the capital of Canada?"", new string[] { ""Paris"", ""Ottawa"", ""London"", ""Madrid"" }, 1); Questions questions3 = new(""What is the capital of the USA?"", new string[] { ""Paris"", ""Washington DC"", ""London"", ""Madrid"" }, 1);would be nice!",mith_king456,2025-06-22 15:55:18,3,learnprogramming,t1_mz659rb,True,
mz6659r,"Thank you! The instructor has the class as Question intuitively I preferred Questions, why should it be Question?",mith_king456,2025-06-22 15:56:58,0,learnprogramming,t1_mz65pyl,True,
mz66im8,"Each object only deals with a single question, which has multiple possible answers. So it's confusing to call it `Questions`.Same reason the `string` type is called `string` and not `strings`, the `int` type is called `int` and not `ints`, etc.",teraflop,2025-06-22 15:58:52,3,learnprogramming,t1_mz6659r,False,
mz67fxo,"Oh, that's a fair point! Thank you!",mith_king456,2025-06-22 16:03:40,1,learnprogramming,t1_mz66im8,True,
myax8eo,Are you getting a compiler error? Those tend to be more reliable than looking at colors.,high_throughput,2025-06-17 17:54:25,9,learnprogramming,t3_1ldttim,False,
myb0uxk,Thank you so much for the support!!I'll read the error logs with other eyes from now on! ᕦ⁠ʕ⁠ ⁠•⁠ᴥ⁠•⁠ʔ⁠ᕤ,Someone_With_Time,2025-06-17 18:11:00,9,learnprogramming,t3_1ldttim,True,
myay0f8,"Yeah I have an error. When I try to execute the program, it says:Exception in thread ""main"" java.lang.Error: Unresolved compilation problem:Syntax error, insert OHI FOUND THE ERROR OMGTHANKS LMAOThe problem was that It didn't want to compile it without the } at the end (in the example I'm using it didn't happen but hey, solved!!!) (correcting myself: yes, it was there, in the example!! I didn't notice because it was put there at the start and got too low in the screen (⁠•⁠ ⁠▽⁠ ⁠•⁠;⁠))",Someone_With_Time,2025-06-17 17:57:55,15,learnprogramming,t1_myax8eo,True,
myazorh,"Everyone has been there at some point :)Reading and trying to understand the error messages the compiler is giving you is very important. Glossing over them is all too easy as a beginner.The same goes for stack traces. They can look horrific, but often gives you all the information you need to solve the problem.",hrm,2025-06-17 18:05:34,8,learnprogramming,t1_myay0f8,False,
myb0dvu,Congratz :) also this is an good experience for things like reading error logs. My suggestion is always read error/exception logs first and try to understand them. It will make your debugging process much easier,Background-Pirate210,2025-06-17 18:08:48,4,learnprogramming,t1_myay0f8,False,
mygmgls,I've been there so many times. Good job finding it!,Striking_Baby2214,2025-06-18 15:11:55,1,learnprogramming,t1_myay0f8,False,
mya0msd,Decide whwt u want to do then do it. Theres no guarentees about careers here or how long they'll be around. Only guarantee is you gotta work harder then the next guy for each and any of the roles ur gonna be seeking.,Neomalytrix,2025-06-17 15:23:57,6,learnprogramming,t3_1ldptpd,False,
myahd9w,"You have time to play around, and should probably choose modules that let you do that. My first year programming module was webdev, but in my degree I also had a lot of data science and machine learning in Python, performance computing in C++ and a few other fields I found interesting. You should spend time exploring and doing what you want, building what you want, and using your university course to your advantage in the modules you get to choose.",RajjSinghh,2025-06-17 16:42:52,3,learnprogramming,t3_1ldptpd,False,
myauo55,"maybe try a language more strongly typed like for e.g C#, etc. I mean, I hated web development till I gave C# and .NET a go. I didn't fall with love with web development, but C# and .NET makes it enjoyable somehow",JunketLongjumping560,2025-06-17 17:42:57,2,learnprogramming,t3_1ldptpd,False,
myb7vx0,"I started out in internet banking (having come from technician before college)... yuck, very dry. Now I'm writing firmware and creating widgets for the semicon industry and loving it. Use C a lot... Python not so much. Just something gratifying about making a microcontroller do your bidding. And of course you have to write the utilities that test and power the widgets, so Visual Studio there.",I_compleat_me,2025-06-17 18:44:01,2,learnprogramming,t3_1ldptpd,False,
mybwht8,"A great deal of programming, including for web development, is entirely behind an API. No UI code required whatsoever. You should see your careers advisor to find out what different programming fields are available to you and see what looks most appealing.",marrsd,2025-06-17 20:40:14,2,learnprogramming,t3_1ldptpd,False,
myc9e9q,"Good news, you found an area of programming you enjoy. Trust your instincts.... are there jobs for systems programmers? Hell yes.",Typical_Newspaper408,2025-06-17 21:43:21,2,learnprogramming,t3_1ldptpd,False,
mybdy54,whoa “real” programming,jsondeen,2025-06-17 19:12:25,1,learnprogramming,t3_1ldptpd,False,
mycofwe,Try web3,ItsYassin_Yes,2025-06-17 23:03:14,1,learnprogramming,t3_1ldptpd,False,
myff3ss,Can you please guide me I am a complete begineer. I have purchased coursera subscription. Do you think this course is worth it. It is also in C# and .NET. [https://www.coursera.org/professional-certificates/microsoft-full-stack-developer](https://www.coursera.org/professional-certificates/microsoft-full-stack-developer),Mammoth_Knowledge_18,2025-06-18 11:06:30,2,learnprogramming,t1_myauo55,False,
mybr0ny,That sounds like an amazing job and I sounds like something that I would love to do,CroolSummer,2025-06-17 20:14:36,2,learnprogramming,t1_myb7vx0,False,
myhfasj,"> without co pilot until I'm more comfortable with programmingThis is the perfect mindset to have. I found that AI ""copilots"" produced garbage that no-one could not understand that broke later, so staying well clear of them while learning allows you to actually **understand** what you are doing and well... learn it. So keep doing what you are doing and you'll be golden :)",SirSpudlington,2025-06-18 17:26:16,9,learnprogramming,t3_1lell6o,False,
myh68wz,"I'd say you're actually on a solid path. Many developers break into web development without a CS degree, especially in product-based companies where skill level matters more than your background. What matters is how well you are able to develop solutions, justify them, and improve your skills. Since you're already implementing projects shows how serious you are about coding. Building a strong portfolio and applying for apprenticeships is also a good plan. Just keep coding and don't get discouraged by rejections, they're a part of the process. Wishing you luck!",codingzap,2025-06-18 16:44:48,6,learnprogramming,t3_1lell6o,False,
myicwk5,"I did it, you can do it too. Took me a year, broke into a Python backend position and they transitioned me into DevOps/Infra early on so I mostly deal with K8s, Go and Terraform now. They simply needed help there and were okay with me learning on the job. Entry is the hardest, but if you have the right mindset and dedication, and it seems like you do, then you'll be positively surprised how little effort some of cs grads put in. Build projects and make your entire resume about them, your competition usually lists their school projects and have no personal ones. If you have better and more interesting projects on the resume, then someone is bound to value them more than your competition's degree. Not everyone, but someone will give you a chance. And from there, keep the growth mindset going and you'll be golden.",Alphazz,2025-06-18 20:04:56,4,learnprogramming,t3_1lell6o,False,
myi0atq,Is it possible yes. Is it probable no.,Hsuq7052,2025-06-18 19:04:05,2,learnprogramming,t3_1lell6o,False,
myifdd3,"Stand out, build cool things using your skills, stuff that is challenging and achievable for you.  I think people who create things on their own time hits harder than results of required course work like a school project or final. Then share it, no one is for you but you, sell yourself it's easy cause you did it.",PPGkruzer,2025-06-18 20:16:57,2,learnprogramming,t3_1lell6o,False,
myjmio0,"You may wish to look at ancillary positions. I'm going for QA Automated Testing Engineer, it's easier to get into, and you can transition into backend engineering from it fairly easily, once you have experience.",UnderBridg,2025-06-19 00:02:19,2,learnprogramming,t3_1lell6o,False,
mykk0c5,> without co pilot until I'm more comfortable with programmingGood. > Is software engineering extremely heard to break into without a cs degree? I did it.,binarycow,2025-06-19 03:26:14,2,learnprogramming,t3_1lell6o,False,
myhgrjx,I don't want to be a Debbie downer but... Web development and software work in general is declining. If AI wasn't bad enough offshoring is on the rise again. If you look at places where fresh CS graduates are commenting they are having a heck of a hard time finding work. The field just got too popular.Even very talented people with experience are having trouble finding work in this field.,ShardsOfSalt,2025-06-18 17:32:52,3,learnprogramming,t3_1lell6o,False,
myigz0z,"This question is hard to answer in general as there are so many variables. However for you the answer might be to stick with it because of your brother. The fact that you mention your brother works with computers as a full stack dev might be something that you have going for you that most others don't have, as you may be able to leverage his friends and colleagues and networking to getting you a job interview that you might not otherwise get. If nothing else, he can ask his HR people what a new hire would require and he could tell you that directly.",Aglet_Green,2025-06-18 20:24:40,1,learnprogramming,t3_1lell6o,False,
mymjidj,Lemme just say I'm relatively new to reddit and I've found it to be so helpful. Thank you all so much for your input.,QuirkyCaramel4954,2025-06-19 13:08:45,1,learnprogramming,t3_1lell6o,True,
mz7uvbl,"Don't worry, that's normal.Reference your notes and documentations as many times as you need to. This is all practice and exercise. There will come a point where what you're struggling with now is second nature - then you'll be stuck at something new.Hope you enjoy it, because that's a big part of what we do :P",EliSka93,2025-06-22 21:05:48,5,learnprogramming,t3_1lhyiyq,False,
mz9dos1,"Try not to think of it like repeating the code you've seen. You can't memorize code. Think about what you need the code to do in natural language(e.g. English) and then turn that solution into code. Making simple diagrams on paper helps as well. This works no matter the programming language.For example, if you're implementing a binary search tree data structure you might sketch a diagram of the nodes and their subtrees. From this you can see you'll need a Node class that stores the data and the left & right subtree nodes.",David_Owens,2025-06-23 02:17:17,3,learnprogramming,t3_1lhyiyq,False,
mz7z4oe,Practice more and more,ItsYassin_Yes,2025-06-22 21:28:12,2,learnprogramming,t3_1lhyiyq,False,
mz97g3p,practice is the key my friend,tanishqq4,2025-06-23 01:42:04,2,learnprogramming,t3_1lhyiyq,False,
mz9rl0b,"Super normal. You will never be asked to write code in the real world without access to documentation and notes. You're doing fineKeep practicing. Do your assignments and then try to find another way to do them, or a way to improve on them. A program that completes the task correctly can still be a pretty awful program.",no_regerts_bob,2025-06-23 03:44:16,2,learnprogramming,t3_1lhyiyq,False,
mzagaqw,1. Do you enjoy coding?2. How does it make you feel?,IgniteOps,2025-06-23 07:10:07,2,learnprogramming,t3_1lhyiyq,False,
mz89wpn,"When I first started learning Java, within my second week I started making hobby projects. Learning from my course helped me with my projects, and working on my projects helped me learn new concepts and get ahead in my course, sometimes 1-2 weeks before they even delved into a topic.If you need something fun to do with Java and find it difficult to enjoy most projects, or find them too dry at this stage of learning, you could try coding Bukkit plugins, that's what was fun for me at the time, and was something I aspired towards doing when I first started learning Java in 2015.",Key_Storm_2273,2025-06-22 22:27:33,1,learnprogramming,t3_1lhyiyq,False,
mzak2pf,"This is super relatable man. I see this exact struggle with students at Metana all the time. The thing is, you're actually doing everything right by understanding concepts and practicing, but there's a gap between ""getting it"" and ""doing it from scratch.""Here's what usually helps.1. Stop trying to memorize syntax. Seriouslyy. Even experienced devs look stuff up constantly. Focus on understanding the WHY behind data structures instead of memorizing how to implement them perfectly.2. Try the 'explain it to a rubber duck"" method. Before you code, explain out loud what you're trying to build and why. 3. Build the same data structure multiple times but solve different problems with it. Don't just implement a stack. Use it to check balanced parentheses, then use it for undo functionality etcc. This builds real understanding.Also, data structures in Java can be tricky because there's so much syntax to remember. Focus on understanding the concepts first, then worry about perfect implementation later.You're not behind. You're exactly where you should be in the learning process :)",darkstanly,2025-06-23 07:47:40,1,learnprogramming,t3_1lhyiyq,False,
mzdjq2o,"Heyo, this is totally normal, and you're not behind at all. I've been a developer for 20+ years, and I still look things up, especially syntax, all the time. That's WHY Stack Overflow exists, and why it's so active after so long and so many changes to the platform. All developers forget the little bits from time to time, and it sucks because the code won't run without them, but it's just how it works. Our brains are not computers, so speaking computer languages, especially like Java, doesn't come naturally. When you were learning English, you didn't say everything correctly all the time either, and you still don't, but obviously you know English, and you can communicate your point well enough that everyone here, native English speaker or not, understands you. It's the same for Java, or any other coding language. You'll always be looking up this syntax or that function. Eventually, the things you're learning now will become second nature when you've used them in 50 different programs or functions. But by then, you'll be looking up other things you just can't remember the exact way to do. Don't stress about this part.But if, even after looking it up and getting the code to compile and do what you want it to do, you're not proud of yourself, then you might want to consider whether this is the right career for you. Because honestly, I will spend 60+ hours on a bug sometimes, and I have literally thrown a party (a happy hour with coworkers) when I got to a different error message I hadn't seen before. The bug wasn't fixed, but I had made some kind of progress, because now I was executing a different part of the code, and that was worth celebrating. If you don't want to party when the code works right (or at least more right), then you are either taking it all too seriously, or you might not have the right temperament for Software Engineering.Good luck!!",OddMarketing6521,2025-06-23 18:40:44,1,learnprogramming,t3_1lhyiyq,False,
mzdhrjx,"Occasionally during job interviews I am asked to write code on a whiteboard, no documentation or notes allowed. I usually ask why since I'll have access to other sources during actual work. If their answer isn't ""we really just want to see how you work through the problem"" (usually it's ""we want to make sure you actually know how to code""), then I usually say, ""I'm sorry, I don't think this will be a good fit."" In 20+ years of professional contracting, this has happened at least 6 times. Only once did they say, ""Oh, we're not checking correctness, just how you work through the problem.""",OddMarketing6521,2025-06-23 18:31:19,1,learnprogramming,t1_mz9rl0b,False,
myyfh3z,"Go, Rust and C are all high level languages, it really just depends what you want to make.When you say low level, you mean kernels and stuff? C and C++ are the norm there, with Rust making some inroads.",ToThePillory,2025-06-21 08:28:10,6,learnprogramming,t3_1lgro89,False,
myyilsg,"um like system calls and operations .thinking in making my GUI frameworks as mono ,GTK ,something like that or on that depth",Mobile_Savage,2025-06-21 09:00:46,1,learnprogramming,t1_myyfh3z,True,
myyjige,You want to make a toolkit along the lines of GTK? I'd probably consider Rust. It's a nice language and worth learning.,ToThePillory,2025-06-21 09:10:21,1,learnprogramming,t1_myyilsg,False,
myyjzfi,"that's great, many thanks",Mobile_Savage,2025-06-21 09:15:19,1,learnprogramming,t1_myyjige,True,
mym23zc,"Technical documentation is a dictionary, not a novel, you're supposed to reference it, not read. Some of the best technical documentation does have user guides and the like which are a good primer that you can read and follow along. But in general with docs you're supposed to go in, find the API you're struggling with, read and get out.It's more or less a requirement for docs to be dry, since they should contain all the information for an API, rather than just the relevant information for a particular use case.",HQMorganstern,2025-06-19 11:14:38,37,learnprogramming,t3_1lf81gk,False,
mymm3ug,"\>  reading the whole documentation is soooo dry to me.If you're reading the whole document, you will learn very little. Instead, read a very small section of the document, and then using what you have learnt, write some code.",ScholarNo5983,2025-06-19 13:23:24,4,learnprogramming,t3_1lf81gk,False,
mz41nxb,"I think a lot of us hit that wall, especially early on, but it doesn’t mean programming isn’t for you. Sometimes I use AI tools as a support when I'm trying to digest longer or more technical docs, using ChatDOC and ask it create a quick mind map from a doc - like breaking down a library’s structure or understanding how different parts connect, just so I don’t feel so lost when jumping back into code.But tools like this are just tools. They help you get your bearings, but they shouldn’t replace reading the source docs when it matters. So if reading docs feels boring, you can try to use tools to support your learning, break things into smaller chunks, build while you read, and permit yourself to skim when you need to. Just don’t skip the reading entirely, there’s a lot of value in it once your brain has some hands-on context to tie it to.",Kimutai_nare,2025-06-22 06:19:31,3,learnprogramming,t3_1lf81gk,False,
mymrvom,"I say this with all due respect: No fucking shit it's dryIt's technical documentation, not an epic fantasy adventure novel. This is like complaining the instructions for assembling your furniture isn't the most thrilling thing you've read this year",PlanetMeatball0,2025-06-19 13:55:27,2,learnprogramming,t3_1lf81gk,False,
mym2koj,"Do you mean ”documentation” as like odin project’s instructions? For me reading documentation is not boring or dry, it is part of the programming. In general a document can be like Qt documentation. I’m working with qt, I know what I want to achieve so I go to documentation and searh for api that does what I want. Usually documentation is for library or framework and you don’t read the whole thing at once, you search for what you need for your project.",Nahkamaha,2025-06-19 11:18:10,1,learnprogramming,t3_1lf81gk,False,
mym42ln,"I am facing the same problem , most of TOP's articles are kind of boring",Apart_Set_8370,2025-06-19 11:29:29,1,learnprogramming,t3_1lf81gk,False,
mym491e,"read it bit by bit, look up when you need it. you'll pick up the habit.",denizgezmis968,2025-06-19 11:30:47,1,learnprogramming,t3_1lf81gk,False,
myn8m40,"I am a dumbass. I beat my head against a library in order to learn it. I hate reading documentation. Also, AI.",nabokovian,2025-06-19 15:18:27,1,learnprogramming,t3_1lf81gk,False,
mynf7n0,"It's documentation, not a novel",nousernamesleft199,2025-06-19 15:50:10,1,learnprogramming,t3_1lf81gk,False,
mypth3a,"It is. It's dry. Do it anyway. You'll know more, and you'll open the path to architect so much easier. Do the hard work, it'll pay off",Coder-Guy,2025-06-19 23:08:33,1,learnprogramming,t3_1lf81gk,False,
mykw5mo,"Just check job postings and see what you want to brush up , you already have work experience so you should just apply and see what happens",Wingedchestnut,2025-06-19 04:54:08,1,learnprogramming,t3_1lf0wxh,False,
mykw5pq,"What resources or GitHub roadmaps you’d recommend => roadmap.sh is probably the best pick for this purpose imo, and I see a lot of people recommending this as well. Whether it’s worth revisiting fundamentals or jumping straight into projects/interview prep => I think you've been away for a while, revisiting fundamentals again won't hurt that much - and then you can learn the necessary libraries and frameworks and then finally start building projects.",NationsAnarchy,2025-06-19 04:54:09,1,learnprogramming,t3_1lf0wxh,False,
mylf5d2,Thank you for the thoughtful direction! This really helps a lot : DD,LoneWolf0936,2025-06-19 07:40:49,1,learnprogramming,t1_mykw5pq,True,
mym4njh,"My preffered platforms are HackerNews (probably best and most real time updates), Medium, Reddit and some local newspapers form my country. Also, I regularly browse for new publications and courses on platforms like Pluralsight, OReilly, Packt and even Udemy to see which new stuff comes out because it mostly follows the trend. And of course there are a ton of cybersecurity and crypto platforms which I just skim over to get the picture. Also decent and reputable newspapers(I follow WSJ) can be a great source of latest deals and speculations, but from more of your every day user perspective(certainly not linux kernel stuff:beaming_face_with_smiling_eyes:). This way when you follow many sources sometimes you get to see how the news 'propagates' between sites which is kind of cool:face_with_hand_over_mouth:",Abject-Comb-8144,2025-06-19 11:33:45,4,learnprogramming,t3_1leq4r8,False,
mykihhe,"I’m looking for this too. Like a place where you can get news about latest tech that you can read through. What new tech stacks are being tried, what improvements is Linux making to their kernel, what networking innovation is being done, etc. what’s the best source for this? Medium?",Apocalypse-2,2025-06-19 03:15:59,2,learnprogramming,t3_1leq4r8,False,
mz0pxqs,"Twitter (X), [LessWrong](https://www.lesswrong.com/), arXiv, and the content put out by OpenAI, Anthropic, etc.",MatricesRL,2025-06-21 17:44:57,2,learnprogramming,t3_1leq4r8,False,
myin9nn,Just start building,jsnoobie,2025-06-18 20:55:12,-2,learnprogramming,t3_1leq4r8,False,
mz7zw4z,Thank you,Ok_Durian_5597,2025-06-22 21:32:17,1,learnprogramming,t1_mym4njh,True,
mz7zu9i,Thank you,Ok_Durian_5597,2025-06-22 21:32:00,2,learnprogramming,t1_mz0pxqs,True,
mz8af5j,"Of course, I realized that I misread your post and focused on developments in AI.Here's a couple more tech-oriented blogs:* [Stratechery](https://stratechery.com/)* [Meritech Capital - Alex Clayton](https://www.meritechcapital.com/insights)* [a16z Insights](https://a16z.com/news-content/)* [Clouded Judgement - Jamin Ball](https://cloudedjudgement.substack.com/)* [Benedict Evans](https://www.ben-evans.com/)",MatricesRL,2025-06-22 22:30:29,2,learnprogramming,t1_mz7zu9i,False,
mzduqn6,"If done correctly it makes everything easier. Rather than having a big file doing a ton of stuff you now have focused sections of code.I just think about what the current module is responsible for, what are inputs, and what are its outputs of behavior.This is why frameworks are also helpful, they help you break large apps into smaller sections.Hard to give concrete advice output more specifics.",Rain-And-Coffee,2025-06-23 19:33:41,7,learnprogramming,t3_1lipzrz,False,
mze6l9q,"Can you clarify a bit on the ""think about the future functions"" thing? I feel like that's the crux of your block.The way I approach modularization is generally more retroactive. First goal is to build something that works. It always starts ugly and messy and probably more like functional scripting than OOP. Second goal is to make it nicer to read, which means separating stuff out into functions, and if it's really its own monster, taking up half the main file, to a module it goes, purely for ease of use. I almost never set out with an idea how how many or what types of modules will need, I just come to points in the process where I'm like, damn that's ugly, or I realize that I'm re-using stuff, or this function is huge, let's throw it in a new file.Of course if you find yourself creating something where it's extremely obvious that you'll be using it all over, then sure, go ahead and proactively write it as a module from the get go and build it up as you go.",LALLANAAAAAA,2025-06-23 20:30:18,3,learnprogramming,t3_1lipzrz,False,
mzefm4e,"So, although you want to learn about making code modular early on so you can keep it in mind as you move forward, keep in mind that this kind of software architecture is a rather more *advanced* skill - something I'd expect a working programmer to be moderately good at, of course, but I wouldn't expect a learner to pick up quickly.The reason is the motivation for all of this comes from the experience of working in code that *wasn't* very well organized on a big project. Just endless pain and headaches and frustration. But until you experience some of that pain, none of the strategies to solve it really make that much sense. And when you're starting out working on smaller projects, often a lot of code organization is kind of optional anyways because you're not dealing with enough complexity for it to really matter.So, like, sure, read about it. Think about it. But understand that what will make it click is getting your hands dirty in the guts of big, complex codebases.This is the kind of thing that, although there are principles that can be applied, really needs experience and developing some *intuition* for the problem in order to be able to do well at it. Which is a *good* thing - it is the skills that are hard to develop except through long practice that makes programmers employable!",PoMoAnachro,2025-06-23 21:13:24,2,learnprogramming,t3_1lipzrz,False,
mze24k3,"I think the easiest way to think about this is to think about what functions are actually meant to do. A function is a set of code that performs a specific task, and can be reused repeatedly. For example, thinking of a simple calculator application that we want to be able to add, subtract, multiply, and divide. When we think about specific tasks that can be made into functions, it sounds like we will need a function for adding, subtracting, multiplying, and dividing, as those are all specific tasks that we want to perform repeatedly. Of course, identifying functions gets more complicated for larger projects, but you don't need to know all the functions you could possibly need ahead of time. Modularization isn't something that happens completely up-front before you program anything, it's something that you will do throughout the programming process. For me what works is outlining functions I know I need at the beginning, then starting to write my program and looking out for sections of code that are reused multiple times. When I realize it is something that is going to be reused, I move it to a function. Basically, keep an eye out for things that your program will be doing a lot of. Any time you are seeing the same logic repeated, or have something that performs a specific task, those are good things to consider putting into functions. Don't worry if you can't identify everything in advance or feel like it's a struggle at first. That's part of the learning process and I promise, it gets easier the more you do it!",FlyLikeHolssi,2025-06-23 20:09:23,1,learnprogramming,t3_1lipzrz,False,
mzel9as,"Read Martin Fowler's book on refactoring, in a way it is about going from one big file/class/function to many smaller files/classes/functions. Your rule of thumb is ""low coupling high cohesion"", google what that means.",alibloomdido,2025-06-23 21:42:03,1,learnprogramming,t3_1lipzrz,False,
mzeukag,"It feels hard, because it IS hard. For designing modules you need to grasp systems.Pick up a pen and paper and try to design something which makes sense. Draw boxes, lists, trees and arrows.It doesn't matter wether it's good or not (spoiler: It will probably be bad), but it will get better the more you do it.A general starting point should be ""concerns"". That means separate functionalities.At a certain point something clicks. If possible try to get personal feedback from someone more experienced.",tobias_k_42,2025-06-23 22:31:00,1,learnprogramming,t3_1lipzrz,False,
mzfl9o4,"Honestly the easiest way is to start writing in one big file, then every once in a while take a step back and think about what you can split off.",kbielefe,2025-06-24 01:02:01,1,learnprogramming,t3_1lipzrz,False,
mze93iq,">It feels like I have to think about the future as to what functions may come in the file as opposed to just working in present in a single big file.This is the big challenge of writing software in general. We don't know what is going to change, but we know that change is inevitable. Maybe an API you depend on gets a breaking change, maybe you want to drastically change the way you display stuff to users, maybe you discover a major security flaw with how you're handling data etc etc...The way we prepare for that is not by thinking about every possible scenario and making preparations, but instead by building systems that are flexible to change. One way you could achieve that is by following the [SOLID principles](https://en.wikipedia.org/wiki/SOLID).1. Limit your modules to only one responsibility. ([example](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON))2. Write your modules to be open to extension, but closed to modification. ([example](https://alexnault.dev/open-closed-principle-in-functional-typescript))3. Any substitute modules you write should not break the program. ([example: a square data object is not a valid substitute for a rectangle data object](https://en.wikipedia.org/wiki/Liskov_substitution_principle#Violation))4. Keep code decoupled from other code it does not need. The math module does not need to know about drawing boxes on the DOM.5. Depend on interfaces rather than specific implementations. Makes it trivial to substitute behavior.",0xFurtiv,2025-06-23 20:42:07,0,learnprogramming,t3_1lipzrz,False,
mzdwcvq,"Yes that's why I'm trying to learn to modularize. I don't yet want to rely on frameworks, because most of my work needs vanilla js. What specifics do you need ? I believe I've laid out most of my problems in the post. I have a big project and I wish to modularize it since I've never done it before.",Diligent-Scarcity_,2025-06-23 19:41:37,1,learnprogramming,t1_mzduqn6,True,
mzehitn,"Yes, so my project includes having 3D models, animations, and a lot of functions to move objects around in general. When I say I have to think for the future, I try to think what files do I initially need to create so that the project doesn't get too big but eventually get stuck trying to divide these functions and decide which modules should they go into or do I create a new module itself, getting lost which function is in what file/folder.If I look at a basic three.js template, it has a few parts in the main function, that I wonder if they should be modularized or not, because they all do lots of things like loading assets, render stuff, animate stuff etc...I'm at the phase of ""First goal"" you mentioned. It's all bundled together in one big file with over 2000 lines of code. The only problem is that when I import things into files and say there are 10 files like this, I can't seem to build functions with proper parameters, because I'm too confused which import parameters needs to go where and what other file/function would require it. I think what you said : ""taking up half the main file, to a module it goes"", is a good rule of thumb. I have a very similar situation.I'm probably trying to modularize every 2 similar functions which is what I think is causing this issue. Thank you for your answer.",Diligent-Scarcity_,2025-06-23 21:22:57,1,learnprogramming,t1_mze6l9q,True,
mz4ucxh,"Don't overthink. Just do.How many hours to dedicate cannot be answered as nobody knows your attention span. Could be anything. Important is that you are *consistent*, that you keep going.You will figure out which lectures are more difficult and which are easier. What might be easy for me might be difficult for you.Take notes if you think they help you, but do not forget to focus on practice. Take the notes if you want in whatever format works best for you. Again, what works for some might not work for others.The course tells you how submission works.The course tells you what tools you need.As for advice:You are planning too much instead of *doing*. Jump right in.Always look *behind* the code, focus on the problem analysis, on breaking down problems. Do not directly try to program. Sit down with pencil and paper and work through the problem set *your* way. Once *you* have understood and solved the problem set, start programming it. You cannot solve what you don't understand.Enjoy the ride. Don't look to speedrun. Focus on understanding. Don't look too early for solutions. Work hard. Experiment. Fail. Fix. **Learn.**Keep AI out of your learning at first. At utmost, use it for deeper explanations, but never, absolutely never to do *your* work, thinking, programming. The less AI you use, the better.",aqua_regis,2025-06-22 11:00:17,4,learnprogramming,t3_1lhl3oj,False,
mz5fxl0,"There are people who like the unknown and there are people who like the known. Those who like the known are those who prefer to live in a town where they are close to relatives and friends. The idea of going some place new where you have to make new friends is scary. Others will hop on a plane and decide to wander the Earth with no particular plan except to explore. They believe they will manage somehow. One is driven more by fear, and the other is driven by lack of fear.Anyway, it sounds like you want reassurances to make sure you know every step of the way where others would just jump in and do. You're probably concerned ""what if I get stuck and don't know what to do next"". You want someone to help you out. People may help, and that's great, but realizing that, ultimately, you have to look out for yourself is an important life skill. I myself fall into the category of wanting to know how I will do things ahead of time.But, let's just go through some of your questions.**What should be my ideal roadmap or study plan to cover CS50 efficiently in this time frame?**Try not to worry about the time frame. The course is set up for ten weeks, but this is a Harvard course and as a college course, it's pretty aggressive to finish so quickly. I would budget twice the time, maybe twenty weeks which is about 5 months, but take all the time you need. You don't have to race to the answer. You may feel like you have to be efficient, but expect to be slow, and don't pressure yourself to move faster because you'll likely skip information you need by trying to ""keep up"".**How many hours should I ideally dedicate each day, considering I want to complete as much as possible before July ends?**You've only given yourself 5 weeks. You are unlikely to finish unless you are either smart or cheat (you may think using ChatGPT is not cheating, but it is). The class already takes ten weeks for Harvard students, and you want to do it in half the time. Spending lots of hours, esp. on academic topics, is not always productive. There's this joke that goes ""if it takes 9 months for a woman to have a baby, then it should take 9 women 1 month each to have a baby"" which means that you can't speed up certain things. I mean, if you can spend that time and not go brain dead, then good for you. Give it a try. But most people find it hard to focus for more than about 3 hours a day. If you try for more, you'll need a break, and you'll have to be making some progress during that time.You might get through the C coding part if you happen to be quick (so 5 weeks).**How does submission of problem sets and projects work?**I think you need to read this and figure it out. It is a bit elaborate involving using Github and setting that up. Harvard doesn't want to be in business of managing user accounts. There are instructions on how to do this. I would say, outside of the actual programming itself, it's this part that's kind of annoying. You just have to follow the steps carefully, that's all. I would probably suggest using their version of Visual Studio Code (assuming they still use it).**Are there any specific tools or software I need to install beforehand?**You'll be instructed how to do this. This is the kind of question that suggest apprehension on your part. Read it, dig in, and figure it out. It's a useful skill to be able to work through problems.**Any extra advice, personal experiences, or tips you’d like to share would be greatly appreciated!**The problem sets (which are the programming assignments) are challenging. I've taught intro programming and I would likely not give that level of difficulty to a class. In particular, CS50x uses more math than the projects I used to assign. Also, some projects are considered notoriously challenging. One is called Tideman. Usually, they have an easier version of the project and a harder one. You might opt to do the easier one.One reason Tideman is challenging is the length of the description of what to do. Beyond that, it's hard to visualize the arrays to place the data. If C were object-oriented, it might be easier to understand (though still not easy).Expect it to be challenging. Don't worry if you don't complete the course in a month. You're expecting a lot, maybe too much. Any progress would be considered good. Try not to be disappointed if you only get through, say, 3 weeks of the course in the time allotted. You're setting yourself up to be disappointed.Anyway, good luck. Hope you get done as much as you plan, but even if you don't you took some initiative which is a positive attitude.",CodeTinkerer,2025-06-22 13:36:39,4,learnprogramming,t3_1lhl3oj,False,
mz5f94e,"Real talk. As a almost beginner you are not going to cover CS50 in a month and complete all of the problem sets.The CS50 website is well-designed, provides an outlay of the curriculum, and has additional resources which I would advise you to utilise.Don't go in with the aim to get everything done in x amount of time. Focus on making sure that what you cover in x time, you fully understand and can demonstrably use (the problem sets will test this).I would take notes through using comments in your code. When you come back some time later to your code, comments really get you up to speed quickly. I would advise a good ol' fashioned notepad and pencil to help you with the problem sets. It really helps when you design potential solutions that you can draw / write out steps in psuedocode.TL;DR as another poster said, just do!",putonghua73,2025-06-22 13:32:32,3,learnprogramming,t3_1lhl3oj,False,
mz5osjj,"You're thinking too hard. Don't worry about ""roadmap"" and ""study plan"", tools, and all that. The course will show you enough to get you going. HOW you study is up to you. You will need to pass some quizzes and whatnot at the end of each section.",kschang,2025-06-22 14:26:55,3,learnprogramming,t3_1lhl3oj,False,
mz718e5,Thanks a lot. That's a really in depth analysis.,Muzzz07,2025-06-22 18:32:43,1,learnprogramming,t1_mz5fxl0,True,
mz7we2m,"This is a really good binary breakdown of how people see the world and I love it. It's a good read to reflect on how you're perceiving the world; I am the kind that also wants a path laid down, too fearful, and that held me back my whole life because I had to realize how I was acting by myself and with my mistakes and lack of progress. Being too careless sucks, being too careful sucks. Really good advice, specially because it might pass as ""obvious"" for some people.Other than that, a good guiding comment on how to tackle CS50. I did most of the course's problems (Didn't make the final one, so no certificate to show) and even though I already had some experience with C(just as a student, I don't have any professional experience), Tideman gave me a few hours of thinking and stressing over. The course is indeed challenging and it brushes over some of topics that will require more studying if you want a better understanding, such as data structures and algorithms, how memory works and so on.Not OP, but thank you for the comment and willingness to share your experience in depth.",BunnyWants2Code,2025-06-22 21:13:46,1,learnprogramming,t1_mz5fxl0,False,
mz8y3k7,"Of course, taking a binary view typically oversimplifies how things are, but it's easier to make a point with two different views than a dozen subtly different ones.I've noticed a lot of self-taught programmers who didn't like the conventional approach to learning programming. They started on a project and made progress. But that was only because they knew how to do Google searches (I'm talking about those who took this approach before ChatGPT was a thing) and learned just enough to make progress. That kind of person assumes that this is the approach that works for everyone. They like the approach that allows them to work on a problem and get to a solution with the minimum amount of theoretical work. But it doesn't work for everyone. Some need more guidance on how to think before they dive into doing a project. Also, picking a good project that is at the right level is hard. Most pick too challenging a project or can't figure out how to pick a project that interests them.Anyway, I appreciate your opinions!",CodeTinkerer,2025-06-23 00:47:56,1,learnprogramming,t1_mz7we2m,False,
mz3c19r,[Learn you a Haskell for Great Good](https://learnyouahaskell.com/),Smart_Vegetable_331,2025-06-22 02:56:51,2,learnprogramming,t3_1lhd7o7,False,
mz3q46b,"By writing granular, clean and well organized functions!",Serious_Tax_8185,2025-06-22 04:40:03,1,learnprogramming,t3_1lhd7o7,False,
mz3rvl5,"Do you want to learn a functional programming language (like haskell, ocaml, etc) or do you want to learn a language with functions in it (like C) ?",cartrman,2025-06-22 04:54:07,1,learnprogramming,t3_1lhd7o7,False,
mz4uo4w,"If you use google, you will find a good amount of artikels and even a book that's called ""functional programming in java"". Do you have any specific question?",rocco_storm,2025-06-22 11:02:59,1,learnprogramming,t3_1lhd7o7,False,
mz7z63m,"If you want to learn functional programming with C or Java, there are a few good resources out there. For Java, Codecademy and Coursera have solid courses on functional programming concepts. You can also look into books like *Functional Programming in Java* by Venkat Subramaniam.For C, functional programming isn't native, but you can still apply some of its concepts. Check out online tutorials or books that focus on functional programming patterns in C, like *Functional Programming in C* by Adam Tornhill.Another great option is [Exercism.io](http://Exercism.io), which offers hands-on coding exercises to practice functional programming concepts.",CommentFizz,2025-06-22 21:28:24,1,learnprogramming,t3_1lhd7o7,False,
mz3d5zn,"Admittedly it's a weird language choice, but we have a functional programming course in Python on boot dev:https://www.boot.dev/courses/learn-functional-programming-python(Content is free to read and watch)",bootdotdev,2025-06-22 03:04:36,1,learnprogramming,t3_1lhd7o7,False,
mz3wmug,I want to apply functional programming to c or java,Actual-Run-2469,2025-06-22 05:34:22,0,learnprogramming,t1_mz3rvl5,True,
mz3x42w,2 questions.1. Why?2. What kind of functional programming concepts do you want to apply?,cartrman,2025-06-22 05:38:38,2,learnprogramming,t1_mz3wmug,False,
mz63pbl,"No you don’t. You think you do, but you don’t.",ThunderChaser,2025-06-22 15:44:28,1,learnprogramming,t1_mz3wmug,False,
mz6ksvh,What do you mean,Actual-Run-2469,2025-06-22 17:11:47,1,learnprogramming,t1_mz63pbl,True,
mz33s60,"Yeah, not to discourage you, but Machine Learning and Graphics Programming are some of the most difficult subjects in programming. You need to be good at a ton of Math for those two subjects (and some physics for CG) for general programming you don’t really need any math but basic arithmetic. I mean yes, there’s good books like The 100 Page Machine Learning Book and Raytracing in a weekend (series) and these are just introductions, but if you try to dig deep into this subject at first, you are almost certainly going to get very overwhelmed. I’m almost 2 years into my programming journey and I’ve begun on these and they still overwhelm me. So anyway, just be prepared that, no matter how awesome you are, particularly ML and CG are not just stuff you pick up easily. It’s years of learning and you’d ideally be better off with an education, like a degree in CS. Do you want to learn web dev? Then that’s a whole different conversation.",Environmental_Gap_65,2025-06-22 02:02:50,6,learnprogramming,t3_1lhck3m,False,
mz333lc,"The thing with coding is, as long as you don't try it out yourself as you learn things, it generally doesn't stick.",iamjacob97,2025-06-22 01:58:29,2,learnprogramming,t3_1lhck3m,False,
mz354ud,"Not a book, but plenty of reading. I learned quite a bit going through The Odin Project. I don't know how relevant it is directly for you, or the current job market, but many of the principals you learn apply elsewhere as well. My path was working through that, then playing with some Rust just for fun, and because of that I was given side projects at work, and eventually became an actual software dev. I don't use Rust, I definitely don't use Ruby. But none the less, the skills transferred over. Keep in mind, though, as u/iamjacob97 said, you have to practice. The downfall to reading too much is that everything makes sense as you read it, but, you're not really getting it. You just feel like you are. Then, you finish the book thinking you have a great understanding of the language the book covered, and programming in general, and start to write something and your mind will just blank out on you. Do the work as you learn.",SevenFootHobbit,2025-06-22 02:11:36,2,learnprogramming,t3_1lhck3m,False,
mz7z9zx,"Since you're looking to build AI and game code, starting with general coding basics is a good idea. For general programming, I’d recommend ""Automate the Boring Stuff with Python"" for practical coding and a solid foundation. For AI, ""Python Machine Learning"" by Sebastian Raschka is a great next step. As for game development, ""Beginning C++ Through Game Programming"" by Michael Dawson is a solid choice for beginners. These books will give you a good mix of theory and hands-on practice to build up your skills.",CommentFizz,2025-06-22 21:28:59,1,learnprogramming,t3_1lhck3m,False,
mz3dand,"I want to learn how to make AI’s and video games tbh, I kinda learned how to make platform games I mean not like full full games but I made like half a level by watching some YouTube videos, Ik it’s a long process the YouTube videos kept telling me the same thing but I still really wanna learn, any suggestions on books or YouTube channels to fallow would be appreciated!",Salty_Constant_1242,2025-06-22 03:05:31,2,learnprogramming,t1_mz33s60,True,
mz37qk7,You don’t need much math for graphics because there are many apis for it,Actual-Run-2469,2025-06-22 02:28:24,-2,learnprogramming,t1_mz33s60,False,
mz33z5g,"I have been trying, I have unity on my laptop and it runs well, I got a mini map built and my character to move but can’t seem to understand the rest of the coding, figured reading a book on it would help",Salty_Constant_1242,2025-06-22 02:04:08,2,learnprogramming,t1_mz333lc,True,
mz346ce,"Maybe I’m starting to big as well, not sure what to use to make Ai idk if unity works for it, like I said I’m new to this need the best advice on where to learn, YouTube videos and books I’d say would help the most",Salty_Constant_1242,2025-06-22 02:05:27,2,learnprogramming,t1_mz333lc,True,
mz3fug2,"Searched up the Odin project, I’ll start going through it tmr thank you for that suggestion I totally missed that part sorry!",Salty_Constant_1242,2025-06-22 03:23:12,3,learnprogramming,t1_mz354ud,True,
mz3dqmd,"Yes ik that I gotta do the work as I’m studying and that’s how I was going before, I think the YouTube videos I was watching just were to fast for me, I was constantly rewinding and getting confused on what to write in my notes.",Salty_Constant_1242,2025-06-22 03:08:33,2,learnprogramming,t1_mz354ud,True,
mygqspn,[studyplan.dev](http://studyplan.dev) / [learncpp.com](http://learncpp.com) these two are crazy good i finished all basics from the beginners c++ course of studyplan cause it was not as a boring / lengthy as learncpp it covers almost all of the imp stuff \[but learncpp is better if u want to go extremely in depth gl !!,ironclad241,2025-06-18 15:32:08,2,learnprogramming,t3_1leduf2,False,
myfjnq1,Why C++????,dempsey_original,2025-06-18 11:39:27,1,learnprogramming,t3_1leduf2,False,
myg92sb,"If you are serious, best of luck for you + if you are not patient, switch the language...",SunSolShine,2025-06-18 14:07:31,1,learnprogramming,t3_1leduf2,False,
myfger4,Use linux for more performances while using c++,Acceptable_Ad6909,2025-06-18 11:16:12,-1,learnprogramming,t3_1leduf2,False,
myfdaiu,But don't u think watching videos and learning would be better?! As first I will learn c++ and then dsa...,BreakfastWilling3421,2025-06-18 10:52:48,1,learnprogramming,t1_myfcwaq,True,
myfyqe2,Out of curiosity How’s the course named for C+ ?,NoBee4959,2025-06-18 13:12:17,1,learnprogramming,t1_myfcwaq,False,
myfjxyp,Basically I wanna do dsa so starting with c++,BreakfastWilling3421,2025-06-18 11:41:26,3,learnprogramming,t1_myfjnq1,True,
myfjw9i,Why not??,BreakfastWilling3421,2025-06-18 11:41:06,1,learnprogramming,t1_myfjnq1,True,
myhdsqg,IT'S DA BEST!,SunSolShine,2025-06-18 17:19:28,1,learnprogramming,t1_myfjnq1,False,
myaey26,Got one at my job. Does the trick. Won't recommend it without a clear graph use case,HolyPommeDeTerre,2025-06-17 16:31:24,5,learnprogramming,t3_1ldr9b6,False,
myc071g,It's one of the most popular graph databases.Most apps don't need a graph database though.,WorriedGiraffe2793,2025-06-17 20:57:34,3,learnprogramming,t3_1ldr9b6,False,
myad4e0,I’m using Neo4j ontologies for my job right now (aerospace/satellite communications),will0w1sp,2025-06-17 16:22:51,3,learnprogramming,t3_1ldr9b6,False,
mybix3l,">I am a student and we are forced to learn and use neo4j and I was curious if neo4j is still used in the industry?Let's say it wasn't used in the industry .. so what? neo4j approaches and solves certain kinds of problems in a very interesting way - as a student, it's good for you to be exposed those and understand them. Good comp-sci education isn't focused only on the current tools, but rather the underlying concepts and theory, so you can adapt yourself to any tool.",_jetrun,2025-06-17 19:36:15,4,learnprogramming,t3_1ldr9b6,False,
myad5jr,"It doesn't matter, it's about the concepts you'll learn (graph data modelling, graph transversal, graph algorithms, indexing, transactions, etc), those can be reused when working with other dbs.Just learning tools do not require formal education, but if you don't dive in core concepts you'll limit your career.",guigouz,2025-06-17 16:23:00,4,learnprogramming,t3_1ldr9b6,False,
myempx6,"if you're planning on building a RAG tool that requires accuracy and low latency for good ux you'll need to retrieve and augment from a graph, not a vector db. Neo4j and other graph databases like [FalkorDB](https://www.falkordb.com/) are leading the way in this.To your question: learning graphs and cypher is very much used. Check out Wiz's implementation of a graph in their core product, along many other examples like fraud detection and financial policy analysis that are made possible with graph.Don't take my word for it: [https://www.falkordb.com/case-studies/how-adaptx-uncovers-hidden-potential-in-their-clinical-data/](https://www.falkordb.com/case-studies/how-adaptx-uncovers-hidden-potential-in-their-clinical-data/) disclosure: I'm with FalkorDB. Call me not objective, but what i stated here is an objective truth even if I wasn't.",Striking-Bluejay6155,2025-06-18 06:41:12,1,learnprogramming,t3_1ldr9b6,False,
mzey4jl,"Neo4j had a significant lead but squandered the opportunity. Despite years in the market, they’ve never achieved profitability. When their open source offering began to impact sales, they turned on the very community that helped build their brand. Instead of embracing that momentum, they spent millions in legal battles against a single individual (the creator of ONgDB and DozerDB) who promoted open-source alternatives and challenged their licensing stance. (I believe they lost $20M+ just to ONgDB, DozerDb is catching up fast) Now, they’ve gone all-in on GraphRAG, but it’s unclear if Neo4j adds any real ROI in that stack. In short, it’s a textbook case of mismanagement. What could have been a dominant force is now a cautionary tale. Adopting Neo4j today carries risk: there’s no guarantee they won’t shut down what’s left of the community next, or even worse, if the Ninth Circuit upholds their toxic behavior, it could set a precedent where companies, not the FSF or GPL authors, get to interpret license terms.In other words - be very wary of Neo4j adoption anytime soon. Graph Databases and architectures including GraphRAG - are very promising. But if you go read the original graph rag article from Microsoft - you will start to realize why Neo4j may have made a bad bet on it being important for GraphRag. Just my 2 cents.",Major_End2933,2025-06-23 22:50:32,1,learnprogramming,t3_1ldr9b6,False,
myaywu9,"as as student, focus on much more important things like SQL",CarelessPackage1982,2025-06-17 18:01:58,1,learnprogramming,t3_1ldr9b6,False,
myazqzu,yes any opportunity to learn a new tool is useful. every year you should plan to learn something new anyway,djkianoosh,2025-06-17 18:05:51,0,learnprogramming,t3_1ldr9b6,False,
myazkko,graph data and dbs are just as important these days as sql and relational data,djkianoosh,2025-06-17 18:05:02,1,learnprogramming,t1_myaywu9,False,
mze6xui,"An API function returning a list of results that successfully matches nothing should return an empty list. Not null, not an exception. I feel like the same applies here.If you request a specific entity by id and it doesn't exist, then 404 makes sense.",high_throughput,2025-06-23 20:31:56,69,learnprogramming,t3_1lirdwc,False,
mze75tn,Empty list with a 200 status code if it's a valid request that simply doesn't yield results. 404 if it's a fetch-by-ID and the provided ID isn't associated with a record.,anonymousflash,2025-06-23 20:32:59,24,learnprogramming,t3_1lirdwc,False,
mze75z3,"You made the call, it found the resource, did whatever logic needed to fetch data based on your parameters, found nothing, and successfully returned a response to you. How would that be a 404? The resource was found, and it returned a valid result of “nothing”. That’s not a 404 kind of scenario, that’s a 200 with an empty list kind of scenario",elementmg,2025-06-23 20:33:00,11,learnprogramming,t3_1lirdwc,False,
mzebfba,Empty list with 200,Rain-And-Coffee,2025-06-23 20:53:09,3,learnprogramming,t3_1lirdwc,False,
mze6m18,"This is kind of a philosophical question, so I would agree that it comes down to preference. But personally, my own preference would be *strongly* in favor of making an empty search result return 200 with an empty list, rather than 404.Consider a closely analogous situation: an email account with multiple folders. Even if a particular folder is empty, the folder itself still exists, so returning a 404 for that folder would be weird and misleading. The same applies to an empty search result list.",teraflop,2025-06-23 20:30:24,10,learnprogramming,t3_1lirdwc,False,
mzedulc,"An empty list is a valid and complete result, so return code 200 and whatever representation you have for the empty list (e.g., '\[\]'). It's not 404 because the resource (the thing asked for) was found; it just happens to be an empty list.",MeepleMerson,2025-06-23 21:04:40,3,learnprogramming,t3_1lirdwc,False,
mzexvbk,"404 is is for error, not empty sets. An empty set is still a success. You might, however, use 404 for a query by id.",huuaaang,2025-06-23 22:49:08,3,learnprogramming,t3_1lirdwc,False,
mzeg0wt,If it's a list - return 200 with empty list. If it's just one entry which doesn't exist - return 404.,Dziadzios,2025-06-23 21:15:26,2,learnprogramming,t3_1lirdwc,False,
mzfnm1w,404 is for when the API url cannot be found. An empty list is a valid result and should return 200.,mleclerc182,2025-06-24 01:15:44,1,learnprogramming,t3_1lirdwc,False,
mze9ht2,"If you're asking for a specific resource with a unique identifier and it doesn't exist, it should return a 404.But if you're asking for a list of things that match certain criteria and it just so happens that nothing matches, it should be a success and empty list.Here's an example to illustrate the distinction and why it's there:I want to call an endpoint GET /customers/12345/favorites to get the list of products that the customer with ID 12345 has added to their list of favorites in our app. If there is no customer 12345 in our app, I would expect to get a 404 error. But if the customer exists and they just haven't added anything to their favorites, if it returned a 404 it would be misleading and make it seem like something went wrong in the request. So it should just return an empty list.",some_clickhead,2025-06-23 20:44:00,1,learnprogramming,t3_1lirdwc,False,
mz4xgdz,"Super is just a way to call a specific method from the parent (or super) class.  You're creating an object of type Square,  but since it's a child of Rectangle, it inherits the methods from it.  The constructor (init method) is overridden in the child Rectangle, but you can manually call it using the super keyword.",mandradon,2025-06-22 11:26:50,9,learnprogramming,t3_1lhli4s,False,
mz5aq74,This guy is the best for python. Here's a detailed explanation in a video.[https://youtu.be/X1PQ7zzltz4?si=RTloEyO4Cx-ivTWJ](https://youtu.be/X1PQ7zzltz4?si=RTloEyO4Cx-ivTWJ),IncreaseOld7112,2025-06-22 13:04:20,2,learnprogramming,t3_1lhli4s,False,
mz7xybb,"In Python, `super()` and `Class.__init__()` are related to how inheritance works.In the first example where you use `super().__init__(side, side)`, `super()` is a special function that refers to the parent class in the method resolution order (MRO). When you call `super().__init__(side, side)`, it’s essentially telling Python to look up the inheritance chain and call the `__init__` method of the parent class (which in this case is `Rectangle`). This allows the `Square` class to inherit and use the initialization logic of the `Rectangle` class without explicitly referencing `Rectangle` by name. When `super().__init__(side, side)` is called, it sets the `height` and `width` attributes of the `Square` instance (which is `s`), because `super()` is calling `Rectangle.__init__` internally and passing the values to it.Now, in the second example, `Rectangle.__init__(self, side, side)` does something similar but directly. You’re calling the `__init__` method of the `Rectangle` class explicitly. Here, `Rectangle.__init__` sets the `height` and `width` attributes on the `Square` instance (`s`) in the same way, but this time, you’re directly referencing the parent class.In both cases, the key point is that calling `__init__` on a class (whether via `super()` or directly) will set up the attributes of the instance. When you do `Rectangle.__init__(self, side, side)`, it sets `self.height` and `self.width` on the `Square` instance, just as if the `Square` class was directly calling `Rectangle`'s `__init__` method.The reason this works, even though `Rectangle` is a class, is because `Rectangle.__init__` is a method that belongs to the class and can be called just like any other method. The instance (`self` in `Square`) is passed along, so it has access to the attributes defined within the method.",CommentFizz,2025-06-22 21:21:57,1,learnprogramming,t3_1lhli4s,False,
mz50lpb,"I know what it does but also want to know how it does what it does, because in Python super isn't a keyword it's a class",Ok-Current-464,2025-06-22 11:52:33,1,learnprogramming,t1_mz4xgdz,True,
mz5y5ka,Is a 21 minute video really the best bet?,lurgi,2025-06-22 15:16:05,-1,learnprogramming,t1_mz5aq74,False,
mz597cs,"`super` is indeed a class, but not a normal one. All classes in python return objects when instanciated. `super()` returns what the documentation calls a ""proxy object"".https://docs.python.org/3/library/functions.html#superProxy objects are special. They are bound to a type and an instance of a type. When any method is called on them, they search the [method-resolution-order (MRO)](https://docs.python.org/3/glossary.html#term-method-resolution-order) for this combination, and call that instead.The actual call signature of `super`:```super(type, object_or_type)```Takes these 2 arguments. Usually, `type` is a class, `object_or_type` is an instance of that class. When called without argument but directly followed by a method call, these arguments default to the enclosing class and the calling instance.Therefore, let's break down what happens in the case you described:> super is a class therefore super().__init__(side, side) should create instance of the class super1. `super()` returns a proxy object, bound to the type `` and the current instance of that class2. `.__init__` tells the proxy object: ""Search the MRO for this instance of this class 'upwards' for a method called `__init__`""3. The search determines that the method to call is `Rectangle.__init__`4. `(side, side)` now calls `Rectangle.__init__` with `side` as the value for both arguments",Big_Combination9890,2025-06-22 12:54:20,9,learnprogramming,t1_mz50lpb,False,
mz60if8,It depends on how much you want to learn. Op's question answered directly at[https://youtu.be/X1PQ7zzltz4?si=AnDrrOgk4ImUaAOY&t=721](https://youtu.be/X1PQ7zzltz4?si=AnDrrOgk4ImUaAOY&t=721),IncreaseOld7112,2025-06-22 15:28:15,1,learnprogramming,t1_mz5y5ka,False,
myggc8r,"Your post essentially says: ""I want to start building my house from the fourth floor up, but neither want to learn to make an architectural plan, nor build the first three floors"".You absolutely, 100% need a very solid foundation in programming before going into GPU programming as it is an entirely different beast.Focus on building a solid foundation, e.g. https://learncpp.com for C++, or MOOC [Python Programming 2025](https://programming-25.mooc.fi)Further, you need a good mathematical background, matrices, etc.",aqua_regis,2025-06-18 14:43:02,35,learnprogramming,t3_1leipyv,False,
myhkfx2,"- get a GPU - find the GPU library for it (I think back in my day I used opencl, not sure what it is now) - write a simple task the GPU will be good at, like a for loop that counts to a million - work on your inputs and outputs and checkpoints - realize GPU programming is extremely specific and unless you're going to mine crypto inefficiently, sieve prime numbers, or calculate pi really far, it's day-to-day application is limited. If your end game is to jump on the AI bandwagon, this is like learning to race a car and starting with how to pour asphalt.",Chaseshaw,2025-06-18 17:49:31,5,learnprogramming,t3_1leipyv,False,
myi8ge2,"You're aiming for something way out of reach right now, like trying to dive into theoretical physics when all you know is basic multiplication.",UnnecessaryLemon,2025-06-18 19:43:24,3,learnprogramming,t3_1leipyv,False,
myghi9b,You could try the Mojo tutorials https://docs.modular.com/mojo/manual/gpu/intro-tutorial,Tok-A-Mak,2025-06-18 14:48:32,1,learnprogramming,t3_1leipyv,False,
myld185,"I've been studying how GPUs work and programming on mine recently, so here's my advice.1. Learn C (great book: https://seriouscomputerist.atariverse.com/media/pdf/book/C%20Programming%20Language%20-%202nd%20Edition%20(OCR).pdf) -- do practice problems, write a few programs to understand how programs are written and execute on your computer2. Learn some computer architecture -- helps you understand what your CPU is doing and the purpose of a GPU3. You should have spent A LOT of time on doing steps 1 and 2, so it depends what you want to do from here. The two most common applications: 3a. If you're interested in programming on a GPU for AI reasons, then study what kind of math operations are performed for most deep learning applications (e.g., matrix multiplication). 3b. If you want to do something related to graphics, start with something like OpenGL (https://learnopengl.com/)It's important to lay a solid understanding of programming and computer fundamentals before diving into parallel programming. Parallel programming APIs like OpenCL are a huge abstraction, and it assumes the user has a solid understanding of how they want to parallelize their workload and exactly how they're going to manipulate the GPU.If you have any questions, I'd be happy to chat for a bit!EDIT: Here's a good book for learning about computer architecture. If you're interested, it would be a good project to implement the ISA they talk about in C after you've gotten comfortable with the language: ""Computer Organization and Design ARM Edition"" by David A. Patterson and John L. Hennessy",chandyego84,2025-06-19 07:20:14,1,learnprogramming,t3_1leipyv,False,
mz4basv,"GPU programming is very vague. The GPU is like a tool. Its kinda like instead of ""i want to learn how to make a table"" you're saying ""i want to learn how to use a saw.""Its not super accurate analogy but i think similar to how people might say ""build a table"" you might want to try making a renderer using openGL.Like others have said, utilizing the GPU effectively -- requires pretty moderate knowledge in writing programs the run on the CPU.You cant really jump to using the GPU without knowing how to compile a single threaded hello-world.exe first",eggmoe,2025-06-22 07:52:03,1,learnprogramming,t3_1leipyv,False,
mygh5ty,Fair enough thanks for the advice. Guess I will get started on C++ and Python,Cosmix999,2025-06-18 14:46:55,5,learnprogramming,t1_myggc8r,True,
myl0hub,I’m glad people with little experience and knowledge comment on posts like this! Thumbs up for reading comprehension and almost forming a cohesive thought :thumbs_up_medium_skin_tone:,Immediate-Blood3129,2025-06-19 05:28:58,-1,learnprogramming,t1_myhkfx2,False,
myiefyd,Yeah consensus so far seems to be just start to get a hang of python and C/C++. My parents say the latter is tough to learn and I should just start with python,Cosmix999,2025-06-18 20:12:28,0,learnprogramming,t1_myi8ge2,True,
myhce2q,"Learn python first. It's great for getting the basics with algorithms. Once everything starts to look like a programming challenge, you should then start with something like JavaScript, this'll show you the C-style syntax without randomly [segfaulting](https://en.wikipedia.org/wiki/Segmentation_fault), and you can do GPU-ish stuff with [three.js](https://threejs.org/) or [WebGPU](https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API).If you really want to put code on ""raw hardware"", you could try C or C++ and compile directly for CUDA - NVIDIAs GPU software platform or you could use Rust with `rust-gpu`. But as [u/aqua_regis](https://www.reddit.com/user/aqua_regis) said, you need a firm foundation in both, algorithms, programming, mathematics, and how the GPU (and other hardware) actually works.",SirSpudlington,2025-06-18 17:13:05,3,learnprogramming,t1_mygh5ty,False,
my8dgyu,"I’m kind of a beginner too but here’s some advice I’ve heard: What industries/companies/roles are you most interested in? You can look into doing a project similar to that. Maybe something that connects to work you’d actually do on the job.An example for swe is developing a website or app to help companies solve a common issue or task. Then you can try shipping the website and getting users to make it more impressive. Might be a good idea to implement buzzwords like AI, popular tech stacks, etc into it too.For data science, something like building your own ML model based on a domain-related data set comes to my mind. You can show skills like data wrangling and cleaning as well as feature engineering and model training.Just make sure you document it well. In your portfolio give a really good description of WHY you did the project and what is the value of it. If you do ship your project be sure to include stats and numbers that show impact. Companies value people who can identify and solve problems more than simply good coders.Also ngl asking what good projects look like might be a good talking point in a coffee chat.",UrBoiKrisp,2025-06-17 08:59:34,5,learnprogramming,t3_1ldhtfi,False,
my9wkna,"Join an open source project on Github and start contributing to it by finding issues with the ""beginner"" tag, for example fixing documentation, typos or small bugs (the Linux kernel project as a ""kernel janitors"" group just for this purpose). You will have to learn version control and how to work together with other contributors. When you create ""pull requests"" with your fixes, more experienced programmers will have to review them and guide you further. You will have to read and comprehend a lot of code written by others, which will teach you a lot about a single, chosen programming language, as opposed to maintaining shallow knowledge of a dozen of different programming languages. Finally, you will be able to write your own features and contribute larger code patches to the project.",gary-nyc,2025-06-17 15:04:52,2,learnprogramming,t3_1ldhtfi,False,
my8b9je,"hello im looking for a sort of teammate in coding for building sites for a portfolio. DM me if interested, I'm currently proficient (literal beginner )in backend development. It's kinda hard to make one alone because i dont feel like doing it.",Nepnep_time,2025-06-17 08:37:19,1,learnprogramming,t3_1ldhtfi,False,
my8bnbu,"It doesn’t matter if it’s useful or not, it’s more important to show off what you can do, and that you can explain it well. You should definitely aim for something unique as calculators and weather apps have been done so much and an interviewer won’t find it interesting, but it can be hard to think of a project. Best thing to do is find something you’re actually interested in and make a project surrounding that even if it’s small. It could be to do with a certain topic you like (networking, embedded etc), or it could link with a hobby of yours.If you really can’t think of anything try to remakea tool that you use often and find out how it works. I recently did a TypeScript dependency manager (like NPM) and that was a good small project that gave me something to talk about.Depending on how much of a beginner you are projects like this may be difficult but personally I think it’s worth the effort",oliknight1,2025-06-17 08:41:13,1,learnprogramming,t3_1ldhtfi,False,
my8cg6l,"Hey I do like a little bit of short listing applicants and fwiw ive never really cared too much what the apps are or even run them. I look at the code. There's plenty of discourse about what's good in that regard so I won't get into that. But I'd say whatever you make, actually make it yourself. Make your own design decisions about it. Code that has room for improvement actually tells me something about you. If it's obvious you've just done what some tutorial told you to do I'm ignoring your portfolio altogether.",wally659,2025-06-17 08:49:19,1,learnprogramming,t3_1ldhtfi,False,
myahcvh,"Of course it's nice to have useful apps in your portfolio. But equally, things you have a passion for, curiousity, and commitment to programming.",Ksetrajna108,2025-06-17 16:42:49,1,learnprogramming,t3_1ldhtfi,False,
myebppb,"Well, you don't need a ""never done before"" project, just something that showcases your current skills and reflects how well you can implement solutions. It's true that many beginner portfolios have projects like calculators, weather apps, etc, but these are also great projects to start with.Try building something small but genuinely useful. The way you present the project in your portfolio is what makes it unique - well-structured and optimized code, clean UI, accessibility considerations, a clear README, etc can go a long way.If we talk about trends, you can build something involving Machine Learning, Generative AI, and other emerging technologies. These are in high demand right now and can also enhance the appeal of your portfolio.",codingzap,2025-06-18 05:05:25,1,learnprogramming,t3_1ldhtfi,False,
my8djbk,Is it acceptable if I make a game using pygame ?,THayataki,2025-06-17 09:00:14,1,learnprogramming,t1_my8cg6l,True,
my9mnqb,"Don't neglect packaging / deployment. For python, something like uv. Or some at least a venv/setup.py situation. I know it's boring, but it shows a level of maturity in a beginner that will help you stand out.",Ill-Significance4975,2025-06-17 14:17:12,2,learnprogramming,t1_my8djbk,False,
my8e7tf,"Obviously you know, I dont represent the whole industry but I'm more than happy to give you my thoughts. A game is a pretty good way to demonstrate a lot of stuff. I wouldn't look down on pygame any more than I would Unreal (so not at all). I would say that games tend to be hard to test properly so I'd make sure another one of your portfolio pieces really leans on testing if you're going to have a project that doesn't really have it.",wally659,2025-06-17 09:07:10,1,learnprogramming,t1_my8djbk,False,
myz1xmh,Scrimba?,Master_Delivery_9945,2025-06-21 12:00:22,3,learnprogramming,t3_1lgspzo,False,
mz0ahmy,"Hey! If you liked Traversy’s hands-on style, you’ll probably enjoy The Joy of React by Josh W. Comeau. Super modern (covers React 18+, solid prep for v19), very interactive, and focused on building real things. Another good one is React with TypeScript by Matt Pocock if you're thinking of adding TS later.Also, Frontend Masters has great project-based React courses that stay pretty up-to-date. You might want to check out their workshops by Brian Holt or Steve Kinney.",CommentFizz,2025-06-21 16:24:38,2,learnprogramming,t3_1lgspzo,False,
myz6x1l,Never heard of Scrimba - thank you for the suggestion! Seems like it's a subscription model and they use an in-browser-IDE? Would you happen to know if I can just follow along the course with my own VSCode setup? Since I prefer Tailwind over vanilla CSS it would probably be helpful to just write/work along with my own setup instead of writing in their browser-ide.,Barotrauma747,2025-06-21 12:36:48,1,learnprogramming,t1_myz1xmh,True,
mz16oml,Oh these are fantastic options - thank you so much for the suggestions!,Barotrauma747,2025-06-21 19:14:46,2,learnprogramming,t1_mz0ahmy,True,
myz9in8,Yeah its possible. And I think they have 19 hours for free on freecodecamp as well,Master_Delivery_9945,2025-06-21 12:54:24,1,learnprogramming,t1_myz6x1l,False,
myvua6p,"For *clarity of intent* separate methods with clear naming, e.g. `FindById()`, etc. are definitely preferable.Yet, your `GetEntry(...)` method also has its appeal. It could work ""behind the scenes"" (meaning that your front-facing public methods `FindById`, etc. *call* the generic `GetEntry` with the appropriate arguments) so that you don't have to rewrite the entire methods. This way, you have one method that does the work and separate methods for code clarity facing the front/user side.The dedicated methods (no matter which way, as independent methods, or calling the generic) have the advantage that they assure only valid fields can be queried.There is only one caveat `String field` is a bad idea. Such a limited, restricted, well defined value should be an *enum* so that typos, wrong values, etc. are directly caught.",aqua_regis,2025-06-20 21:30:28,12,learnprogramming,t3_1lgezky,False,
myw0gwx,"Well put it like this:in the first case, each method only does one thing. this is helpful. It also signals clearly what each method is doing, which is autodocumenting. in the second case you have to look a little closer. And while it can be convenient to use ""field"" as a variable that means people could call it like: GetEntry(someVariable, someValue);leaving you with no idea what is going on. (or whether someVariable actually exists). now imagine this call is being done in code outside of your reach. (a client library for instance). you wouldn't know what variables they are using. so if you ever change the database you won't have an automatic warning that the field they are selecting on exists. Except at runtime which is not ideal. If you make the same changes in the first example, (remove a findBy..... because the field is no longer offered), the client will get a compilation error when a developer updates to the latest version of your library. which they will be much happier about than an error in the rare situation a user sorts a table by pressing a UI element the developers never touch.I know what I write is slightly charged / exaggerated but I tried to sketch the use cases where you would know the difference.I think you are falling into a beginner trap where more code looks inefficient. And creating a godly one-liner that handles everything / runs the whole program looks good. But more verbose self-documenting code generally is code that will have less bugs later on. because you won't be the only programmer working on your code. You may not even be at the employer when someone tries to work on a function / replaces something. for instance in your case: it is easy to replace findById with findByIdOrSecondaryId because it'll be clear where you use it and you'll get a compiler error if you forget one since the original doesn't exist. But it is entirely possible you overlook GetObject( ""id"") (possibly because of whitespace differences and such.Think about cleanness of code in the sense that it should be straightforward to read. Don't shy away from extra functions. However what you can do is have findByName and findByEmail and findById all internally call GetEntry(string field, string value) if you wish. (to share error handling/recovery/etc). that way you present stable methods to the outside world and you can have more generic reusable functions for internal use.none of this is absolute truth of course, just advice",josephblade,2025-06-20 22:04:01,5,learnprogramming,t3_1lgezky,False,
myvq71c,both can be fine but the generalized should be typed so only valid keys can be passef but imo a seperate method is more clean,csharpboy97,2025-06-20 21:08:52,2,learnprogramming,t3_1lgezky,False,
myvw4ax,"On top of what everyone else has already said, a single entry point for multiple operations is a pain to unit-test, and potentially goes against the O in SOLID.",BookkeeperElegant266,2025-06-20 21:40:22,2,learnprogramming,t3_1lgezky,False,
myvstey,"If you're manually writing the methods use whatever makes sense to you, I personally like the `FindById()`A lot of modern ORM frameworks *auto-generate* the methods for you.They have you define a Model, then they automatically generate methods like `FindByID`",Rain-And-Coffee,2025-06-20 21:22:35,1,learnprogramming,t3_1lgezky,False,
myw6bb3,"Much depends on the type of application you build, the type of user you may have and what requirements you may have.For example, we built a search form for a research project where different researchers could fill in a form with many, very specific parameters to query for different types of resources. They were super users with an understanding of the different query parameters. For another customer (a university), we built a search form where students could search for and apply to different courses. The students were seldom users, had no knowledge of different parameters, so had just one free-form text input that we matched against a special database view where we merged all relevant data from different tables and columns into one against which we matched the query (the more words that matched in a resulting row, the higher the score the result got).A search index could be an alternative; again, much depends on the type of application you build and your requirements.",joranstark018,2025-06-20 22:37:13,1,learnprogramming,t3_1lgezky,False,
mywpd86,"The first one. Why?Because it’s not common, or even possible in some SQL dialects, to parameterize column names, your GetEntry() implementation will have a switch / case or if / else control structure leading to three different SQL statements. So GetEntry() gives your users a false illusion of data uniformity, and puts a lot of logic in one function.My opinion. Take it or leave it obviously.",Aggressive_Ad_5454,2025-06-21 00:28:42,1,learnprogramming,t3_1lgezky,False,
myx6rti,"On top of what everyone else has said, the first version with separate methods is actually much easier to use in practice. One word: intellisense.With your monomethod I am given a parameter 'field' and all I know about it is that its a string. Wtf do I put there. Guaranteed most strings aren't going to actually work. I have to have some other information in order to actually use your method. Maybe you added the valid fields to the documentation for the function, and maybe that comes up as part of intellisense, but then I have to read through the description and I could still mistype one of the field names.With individual methods I hit . on your model and intellisense gives me a list of all the ways I can use it. There is nothing to mistype; intellisense knows what the valid methods are. I probably don't have to read any documentation at all because I know by the method names what they do.",Bulky-Leadership-596,2025-06-21 02:17:35,1,learnprogramming,t3_1lgezky,False,
myy17a9,"`GetEntry(string field, string value)`Has the advantage of flexibility and extensibility and the disadvantage of being more verbose and prone to error. If you can't decide which option is better, consider providing both versions - particularly if this interface is externally visible.",light_switchy,2025-06-21 06:07:50,1,learnprogramming,t3_1lgezky,False,
myz582c,"Strings matching is going to be very inefficient, which might matter depending on your use case. To be honest, if you have a large dataset where you are frequently querying items by certain fields, you should be using a relational database, instead of reinventing the wheel. But again, this depends on the scope of your project.",ReplacementThick6163,2025-06-21 12:24:37,1,learnprogramming,t3_1lgezky,False,
mylbght,"Start with Docker. Develop your app with it. That'll allow you to run nginx (for ssl certs and reverse proxying) and postgres as well, and very easy to migrate to a server.",grantrules,2025-06-19 07:05:30,3,learnprogramming,t3_1lf3pnh,False,
myoevpu,"I would say you actually shouldn't want to self host as much as possible if you want to figure out some of this stuff. There's tons of things I could get working running locally, using localhost that screws up because of DNS issues, CORS, etc. I'd actually actively try to use a bunch of cloud hosting services.",ottovonbizmarkie,2025-06-19 18:48:59,2,learnprogramming,t3_1lf3pnh,False,
myojzak,Ah I see. Thanks for the advice,Manasveer,2025-06-19 19:16:45,1,learnprogramming,t1_myoevpu,True,
mydkggn,"Looks at the Syllabus for your upcoming classes, they're usually posted online.I would focus on that material, often you can find the exact textbook.But if none of that is available I would go the Java route, you can learn the fundamentals with a strong typed language rather than get confused with the oddities of prototypical inheritance of JS.",Rain-And-Coffee,2025-06-18 02:04:43,3,learnprogramming,t3_1le5d7j,False,
mye1pz7,"A degree program normally doesn't use a single language. You'll probably end up using a bunch of languages anyway. Learning HTML/CSS/JS is fine. Or you could do Java, up to you. Doesn't really matter.",nog642,2025-06-18 03:50:26,3,learnprogramming,t3_1le5d7j,False,
myfdbyn,"I am doing the Odin Project and I am in the last Nodejs section of the course. It is a fantastic course as it is not only free but also open source so the technologies used are kept mostly up to date.However you won't be able to finish it in a couple of months as there are many concepts and also projects you have to do. It is very time consuming.However I'm not sure if learning Javascript and React is good preparation for a computer science degree but probably not. There is a computer science section though that touches on some computer science concepts like recursive programing etc.If you have a way to know what languages will be used during the first semesters, I would focus on that.",sandspiegel,2025-06-18 10:53:06,2,learnprogramming,t3_1le5d7j,False,
mye1ysj,"WebDev and Computer Science are completely different. You will also need as much math as programming for Computer Science.You don't need a head start for school but if you want one, look up AP Computer Science.",code_tutor,2025-06-18 03:52:09,3,learnprogramming,t3_1le5d7j,False,
myesjkb,"Depends on what it is that you want to do, want to build a web front end -> js. Want to do backend -> Java.",TopOne6678,2025-06-18 07:36:47,1,learnprogramming,t3_1le5d7j,False,
myfcti6,"Java... Start with something like [java-programming.mooc.fi](http://java-programming.mooc.fi/), [hyperskill.org](http://hyperskill.org), or [codegym.cc](http://codegym.cc)",rednoodles,2025-06-18 10:49:03,1,learnprogramming,t3_1le5d7j,False,
myfs9ud,Harvard CS50 is a nice intro to computer science.,alexanderhumbolt,2025-06-18 12:34:58,1,learnprogramming,t3_1le5d7j,False,
mydrtkt,"Tbh I would take a step backwards. Think about it like this : The Odin project teaches front end technologiesJava is mostly used for backend tech Take a week or two, or maybe a month and do slow research and maybe do some interactive coding (following a tutorial) on both types of technologies and see what you like. Think on what you would want to build. They’re very different. Not that you can’t learn both, but would be best to focus on one.",Realjayvince,2025-06-18 02:46:51,-1,learnprogramming,t3_1le5d7j,False,
myfcqgq,"""The Odin project teaches front end technologies""This is not true, I am doing the Odin Project and the course is full stack, so you also learn backend.",sandspiegel,2025-06-18 10:48:24,2,learnprogramming,t1_mydrtkt,False,
mye5254,Bruh what:loudly_crying_face:,Bold2003,2025-06-18 04:14:04,0,learnprogramming,t1_mydrtkt,False,
mybrnoa,"What you encounter is 100% typical and what *learning* is about. You absolutely have to struggle. You absolutely have to fight. You absolutely have to fail. That's the way to learn.Think back: how long did it take you to grasp math? How long for more difficult math subjects? How many times have you failed? How many subjects did you not immediately uinderstand?Did you even consider giving up?Stop using AI - completely. Pretend it doesn't even exist.If you get stuck, go back a chapter and start over. Take it slow.Work through the prompts on paper, with pencil. More than often, it is not the actual *programming* that is the problem; it's *understanding* the task as you cannot solve anything that you do not fully understand.Again, take it slow. Play with the code. Change it. Break it. Fix it - **without AI** - do not take the easy way out (using AI) - take the hard way. **learn**.It's not Kaggle that is the problem. It is your approach to learning and your mentality. You thought it would be easy. You thought, you could breeze through. It isn't easy. It takes a lot of effort, determination, discipline, persistence, and hard work.Most likely, you progressed too fast with your use of AI. Slow down. Take time to *truly understand* what you are programming.Yet, again: pretend AI doesn't exist and that you're on your own.----Side note: my go-to recommendation for absolute beginners is the MOOC [Python Programming 2025](https://programming-25.mooc.fi) from the University of Helsinki. Free, textual, extremely practice oriented, and top quality. Sign up, log in, go to part 1 and start learning.",aqua_regis,2025-06-17 20:17:34,7,learnprogramming,t3_1ldxdmk,False,
mye01ek,"Kaggle is at least junior level college stuff. Of course you'll struggle doing it. It's NOT an introductory course. For that, try Coursera (ain't free)",kschang,2025-06-18 03:38:50,1,learnprogramming,t3_1ldxdmk,False,
mybt7lu,"Thank you :folded_hands: this was the sort of grounded advice I needed, I will completely ditch AI, work through the course and keep going backwards if I get stuck",Accomplished_Escape4,2025-06-17 20:24:49,2,learnprogramming,t1_mybrnoa,True,
myelldx,Lmao yeah no wonder,Accomplished_Escape4,2025-06-18 06:30:43,1,learnprogramming,t1_mye01ek,True,
my9anbc,"just search ""language name"" example project on a search engine and you'll find tons of examples",ItzRaphZ,2025-06-17 13:13:12,15,learnprogramming,t3_1ldmogj,False,
my9dmi4,"Why don't you choose a (relatively not hard) project YOU are interested in and learn programming while building it? You have google, LLMs, reddit, stackoverflow, etc",syshukus,2025-06-17 13:29:44,8,learnprogramming,t3_1ldmogj,False,
mya3fli,"I'm very much like this, and one of the things I did very early on was take ""fun example code"" and ""obsessively poke at it"". Just like make small tweaks and changes to stuff similar to p5js.org/examples.I also did a lot of Hackerrank problems, and would do the same ""obsessively poke at it"" for solutions to problems I knew I would never be able to solve.I don't necessarily recommend that for ""learning"", but it can be a fun way to get your feet wet with reading / writing code.Beyond that, you really can't go wrong with any kind of tutorial, but you'd probably fair best with something like ""X Y tutorial"". Replace X and Y with a language, and something like: todo app, chat app, calculator, snake game, calendar. Those tutorials don't focus as much on things like ""programming fundamentals"" and ""language features"", and will give you a lot of good example code to help you build stuff.You should ***really*** try to get back to revisiting ""programming fundamentals"" and ""language features"", but those are also things that are fine to skip over for a while if you just wanna get started and ""make stuff"". I never really liked those multi-hour long ""intro to programming"" videos and much preferred learning that kind of stuff through written material (but only after I made a couple projects and got sucked into programming).",SpookyLoop,2025-06-17 15:37:01,3,learnprogramming,t3_1ldmogj,False,
my9a6ec,"You mean like, the project + the solutions?",EntrepreneurHuge5008,2025-06-17 13:10:33,2,learnprogramming,t3_1ldmogj,False,
my9ic4e,Github?,paperic,2025-06-17 13:55:15,1,learnprogramming,t3_1ldmogj,False,
my9kimc,GitHub actually has tons of publicly available project source codes (do a search) I recommend checking out opensource projects just to get used to reading other peoples codes (with more experience than you or more experienced with a particular language or framework). :thumbs_up:,FunnyMnemonic,2025-06-17 14:06:29,1,learnprogramming,t3_1ldmogj,False,
my9lsbl,"Go to GitHub, search and find something that seems interesting, try to figure out how to compile/run it from code, then try to see if you can figure out how it works and start making small modifications. Make sure you understand what it is you’re doing; don’t just guess.",0xmerp,2025-06-17 14:12:52,1,learnprogramming,t3_1ldmogj,False,
mya95fb,C++ projects with Javascript,Acceptable_Ad6909,2025-06-17 16:04:00,1,learnprogramming,t3_1ldmogj,False,
myg644x,"One surprising lesson you might discover: learning about something doesn't mean you can create something.Let's say you want to learn to hit a forehand in tennis. You listen to a bunch of tennis teachers on YouTube explaining how to hit a forehand. Maybe you choose to imitate Roger Federer's forehand. You watch how he hits in slow motion. You shadow stroke it.Then, you go on the court, and you don't hit anything like him. What happened? There are subtleties about his game you can't see if you just watch video. Maybe you focus just on his hand, but ignore the rest of his body: his torso, his legs. Maybe you don't fully understand how he gets acceleration. You observe things, but they still don't fully capture what's really happening because you make assumptions.OK, maybe this didn't happen to you, but it did happen to me. It made me realize looking at someone do something doesn't teach *me* how to do it. I lack a lot of information despite paying attention.I think the same may happen to you. Yes, you'll learn some things looking at projects, and yes, programming isn't tennis. Programming is more quantifiable. But, like watching a pro tennis player, looking at a completed project may not be enough to understand it.Even when the person who programmed it explains it, they're likely to skip all the beginner stuff and assume the person listening is not a beginner. If I built a website using Python and Django and you didn't know how a loop works in Python, then I'd spend forever going over the basics of Python just so you could understand it.Instead, I'd assume you know Python, you had some idea of how Django works, and then I'd go into the specifics. You'd miss out on the details of the Python language or a big picture view of how Django works.But give it a try and see what you learn. Some of your problems with learning are likely linked to getting bored easily, but if diving in helps, then great. You can ask ChatGPT (or similar) to explain code to you, but they do have token limitations, which means you may not get much explained before you run out for the day.",CodeTinkerer,2025-06-18 13:52:26,1,learnprogramming,t3_1ldmogj,False,
my9fqqf,"this is what i'm getting out of vibe coding. cursor makes me something that works but eventually becomes to much of a big mess to improve upon, and i try and figure out how it works to make it better, learning the language in the process and best practices",vaeliget,2025-06-17 13:41:23,1,learnprogramming,t3_1ldmogj,False,
mz3f31r,"There is a long tradition of writing simple games in standard CS education. I remember writing tic tac toe and blackjack in C some 30 years ago in 100 level class, and I still see simple games posted here from people struggling to do their homework.I'm sure you're thinking about something flashier and more engaging, but you could probably find a lot of helpful information by studying the traditional approaches/lessons taught in those assignments",no_regerts_bob,2025-06-22 03:17:54,2,learnprogramming,t3_1lhd9zm,False,
mz4m5nk,"CodinGame, hourofcode, gamified css apps like Flexbox Froggy. Make basic or retro game tutorials on YT using JavaScript, Python, etc.Im currently learning Godot game engine GDScript (looks similar to Python in context).Lots of choices, but shouldnt stop you making your own platform or app. Good luck!",FunnyMnemonic,2025-06-22 09:41:31,2,learnprogramming,t3_1lhd9zm,False,
mz38w8x,"Light maps are gunna mess em up real good. And anything other than a built in physics engine is gunna bust em up real good too. The pixel art won't be too bad, but anything involving blender is going to be quite challenging as well",effortissues,2025-06-22 02:35:59,1,learnprogramming,t3_1lhd9zm,False,
mz5bwx0,"I personally do think learning game programming is kind of too isolated and too far away of majority of jobs in software and data field after programming fundamentals.Closest thing outside of gamedevelopment would be making simulations like VR or something similarI knew a gamedev student who was good at pure programming but he did not know anything about web fundamentals, making a backend, working with docker etc.I'm biased but learning gamedevelopment is only interesting for people who want to learn gamedevelopment, not for people who want a general programming curriculum where the person can later on adapt for the job market in software or data positions outside of gamedevelopment.",Wingedchestnut,2025-06-22 13:11:54,1,learnprogramming,t3_1lhd9zm,False,
mz5rhfo,"You can make games that includes those ""real world programming"" concepts, esp. on the backend.",kschang,2025-06-22 14:41:21,1,learnprogramming,t3_1lhd9zm,False,
mz6laww,"Well there's two things here:1. If you need a game to make programming fun, then you're not interested in programming as a career.2. Some aspects of game programming are much harder than the usual fields of programming.I would say it's only good if they're already interested in programming and it focuses on the hard parts of game programming.If the course focuses on how to make a game, then they'll learn how to make a game, not programming. Almost no game design courses teach any amount of programming.If it's writing their own game engine or something, then it teaches a lot more.Also you can't say ""learn to program"" and ""JavaScript"" with a straight face. It's sad to see the focus entirely on WebDev. What is the goal: do you want them to learn programming or WebDev? GameDev is not a good way to learn WebDev.If you look at the CS50 course, you can see the order they go in: [https://cs50.harvard.edu/x/2025/weeks/](https://cs50.harvard.edu/x/2025/weeks/)They actually begin by having people make a game. But they basically learn no programming from it because it's using Scratch. I actually think that week could have been replaced with something better. Notice how they go all the way through an intro course and through Data Structures before they even start WebDev.I spent many years making games on Atari XE and graphing calculators. I went to a community college after that and learned basic programming. But a single Data Structures course was more impactful on my ability to program than all those years of experience combined.Also when I tutored math, people always said the same thing. They hated math until they learned it properly, then they loved it. They were so happy doing it. Teachers focus too much on making things ""fun"" instead of making things understandable. The fun comes naturally when they're learning.",code_tutor,2025-06-22 17:14:12,1,learnprogramming,t3_1lhd9zm,False,
mz7kx19,"I've been a cs teacher for many years. I currently teach a section of cs1 with a game dev focus. It's something i've wanted to do for some time. Game dev is tricky for beginners, because you really need to have your fundamentals down, and then you need to add some other cocepts: oop, graphics, and some math. I teach standard cli python until midterm, and then switch to the engine for the second half. I ended up writing my own wrapper to pygame. It encapsulates all the math, and adds some nice features. I also wrote a version in javascript. In general, students find my section of the class is more difficult than some others, but they still enjoy it.All my stuff is open source, so DM me if you want links.",twopi,2025-06-22 20:14:54,1,learnprogramming,t3_1lhd9zm,False,
mz7wfqo,"I have tried making some introductory programming curricula based on making games, as well as an advanced DSA course - not as ""game design courses"", but simply using games as the applications that the students had to build.I still think it is an excellent idea, and it works really well, especially because when writing a game, you naturally run the code over and over, and it is never exactly the same, so you constantly discover new issues, more things to learn. Whereas if you build a program to display a list of items from a database, the moment you got a list, you are done, and leave that part of the code. Also, when you make a game you feel like you've built something - and you are proud to show it to others, and let them play it. Whereas when you've made a form for entry into a database, well ... :)And I believe that you can learn any programming topic from writing games - there's almost no single algorithm, pattern or data structure that doesn't fit into some game or other.However, I've had some issues - mostly with students and especially other teachers not understanding what they actually learned, so I'll give you some of them as ""warnings"" - not warnings against doing it, but warnings about how it might be received.* Students have a really hard time transferring skills between writing different kinds of software - when they learned how to write games, they didn't understand how it could be used in database-applications, when they learned frontend coding, they didnt' understand how it could be used in backend, then they learned terminal-applications they didn't understand how it could be applied to web-applications, and so on. It is important to add other kinds of applications using the same patterns as they learned in the games - so they don't think that it is a ""games course"", but see how learning to code with games, is just learning to code.* Students are extremely scared of math - not just matrix-calculations, or trigonometry, but something as simple as ratios, converting a number between 0 and 1 to a number between 50 and 300 is almost impossible for them to grasp. And in games there's a lot of math. Don't be discouraged by it, just be prepared to spend A LOT of time explaining even the simplest calculations.* Some students actively dislike having to create or even obtain graphics and other assets. But on the other hand they don't like just being given assets and ""forced"" to use them - expect to spend quite a bit of time explaining how to prepare those as well :)* As games get a bit more complex, there is a lot of prep-work in building the level or setting up the code for input. I recommend re-using code throughout the course, and copying in earlier ""blocks"" from some games to re-use later, so the students don't feel like they spend all their time typing in ""platform code"".* A lot of programming students nowadays actually don't know that many ""simple"" games, so it might be necessary with a bit of games history as well, to teach them about top-down, platforms, scrollers, shooters, and so on. I was surprised at how few of my references my students actually recognized - even when it got to board games!But otherwise, I think that it is a really, really good idea - and don't listen to the ""haters"" talking about how games programming and JavaScript isn't ""real"" programming! Every kind of programming is programming, and if something can inspire students to build more on their own, it is even better!",peterlinddk,2025-06-22 21:14:00,1,learnprogramming,t3_1lhd9zm,False,
mzbrz2j,"Not all sections learn OOP in cs1, so they have that advantage. And the project most do as a final project in other sections (a choose your adventure text game) we've done by midterm. To be fair, the other sections specialize in other areas: crypto, data science, web dev. I've taught some of them too. But I find that people tend to be highly motivated to learn the fundamentals well as they are moving towards making games.And we start the semester by showing games made by last semester's beginners. That is inspiring.",twopi,2025-06-23 13:37:22,1,learnprogramming,t3_1lhd9zm,False,
mz58u2u,Thanks. I didn't know flexbox froggy.,parseroftokens,2025-06-22 12:51:53,1,learnprogramming,t1_mz4m5nk,True,
mz22w4n,"Same answer I give every week this gets asked.Solve a problem you have Or make something you wish existedHere’s one: build a bot to answer variants of this very question every time it gets asked, will require network programming, deploy it somewhere.",Rain-And-Coffee,2025-06-21 22:15:26,8,learnprogramming,t3_1lh868o,False,
mz23062,"What have you built so far? What kinds of things are you interested in? Give us something to work with, otherwise you'll just get a bunch of recommendations that are way too hard/easy or completely uninteresting to you.",numeralbug,2025-06-21 22:16:06,2,learnprogramming,t3_1lh868o,False,
mz3qznp,"Unreal Engine uses C++. So if you want to explore game development that might be a good choice for you. It might require that you have a decent powerful machine to run it though. If your machine struggles, stay with 2D games. If you don't find a good project to work on and still want to code, you can try out leetcode.",throsturh,2025-06-22 04:47:02,2,learnprogramming,t3_1lh868o,False,
mz24nlh,Thanks:loudly_crying_face:,UncleSh4k,2025-06-21 22:25:59,0,learnprogramming,t1_mz22w4n,True,
mz24hyb,"Well that's the thing, other than the assignments ive been given to build I haven't really built anything worth noting. I made a calculator that you can use your terminal but that's pretty much it. in terms of interest Ive been looking a lot into building simple games, like I saw a guy build a snake game that was cool. I don't exactly know the full capabilities of c++ so I'm open to suggestions.Feel free to ask for more information",UncleSh4k,2025-06-21 22:25:02,1,learnprogramming,t1_mz23062,True,
mz4eu1z,">I haven't really built anything worth notingNobody's first projects are anything worth noting! You're still in the learning stage. That's fine - we all start at the same place.>I made a calculator that you can use your terminal but that's pretty much it.How does it work? Can I type in 5 \* 6 + (3 - 4) / 8, and it will give me the right answer, or is it more restricted than that? Can it handle fractions? Can it handle exponentiation? Factorials? Basic polynomial algebra? If I give it an unusual expression like 3 - (-(-2)), does it handle it as expected? If I give it a syntactically illegal expression like ""5 + \* 5"", or a mathematically illegal expression like ""3 / 0"", does it handle it gracefully without crashing?There's a **lot** that goes into building a calculator, and this kind of thing might be an interesting project. If you're not interested in calculators, don't think of it as a calculator: think of it as ""teaching the computer to understand commands"". This is a whole field in its own right - tokenising, lexing, parsing, building syntax trees, Backus-Naur, and all that - and this is a (small but significant) step towards building something like a compiler. (As a side benefit, it will also make you better at understanding and reading certain kinds of documentation.)Also: when you do this, you'll probably want to reuse your old calculator code, but you might find that extending your code to accept these new features is more trouble than it's worth, and you have to rewrite it from scratch. Don't be afraid of doing this, even multiple times if you have to - in fact, I think it's a really good thing in the learning stage. Implementing individual features is one thing, but learning how to structure large projects in a clean and modular way - so that you can swap out features, upgrade them, rewrite them without changing all the rest of your code - is a skill in its own right.>I saw a guy build a snake game that was cool.Why not try building that yourself? Or Pac-Man, or Tetris. It can be in the terminal if you want - just redraw the board as a grid of characters every second - it'll look ugly, but that's fine.That said, if you're feeling up to something a bit more of a challenge, then why not learn to use a library like [raylib](https://www.raylib.com/)? That's a simple way of getting graphics onto the screen. Fair warning: once you start using external libraries, the difficulty **does** spike a little, because you're suddenly having to learn a whole new feature set that you know nothing about, with all of the syntactic difficulties that come along with it. In practice, what that means is you will spend a lot of time learning how to read documentation efficiently, which is also a crucial skill for a programmer.>I don't exactly know the full capabilities of c++ so I'm open to suggestions.Literally anything a computer can do, you can do it in C++. Most operating systems are written in C, which you can think of as a very bare-bones version of C++. Most modern programming languages have compilers / interpreters written in C/C++. Most browsers and web servers are written in C/C++. The main barrier here is not the capability of C++: it's the fact that even very ""simple"" software can be tens of thousands of lines of code, and you need to work towards that. So don't be afraid to rewrite things that people have already written before: they will be very valuable learning tools.",numeralbug,2025-06-22 08:27:08,5,learnprogramming,t1_mz24hyb,False,
mz1o201,"Do you _like_ programming? Have you considered programmer-adjacent positions like devops or QA? You've really gotta start building projects.. it doesn't matter if they're trash, it's a learning experience.. you'll learn a ton about what not to do and avoid those headaches in the next one.",grantrules,2025-06-21 20:50:42,2,learnprogramming,t3_1lh68b8,False,
mz3egu8,"You can do what I did, spend 30 years doing odd jobs and working everything but programming and then go to a bootcamp and work in a low-end IT job doing programming and loving it.",AdFamiliar4776,2025-06-22 03:13:34,1,learnprogramming,t3_1lh68b8,False,
mz1xgd1,"Thanks for the reply. I do like programming, but I think I’ve been stuck in a cycle of perfectionism and fear of failure. I start something, get overwhelmed or feel like it’s not good enough, and then I stop. I know deep down that building anything would help me grow, but I keep psyching myself out.I haven’t really thought much about programmer-adjacent roles",Conscious-Bat3735,2025-06-21 21:43:41,2,learnprogramming,t1_mz1o201,True,
mz1xt0o,"There's no magic trick to motivation.. you just have to make yourself do it. Do or do not, there is no try.",grantrules,2025-06-21 21:45:41,1,learnprogramming,t1_mz1xgd1,False,
mza7fg1,Maybe you can ask for help when you feel overwhelmed. It also helps a lot when you identify the part of the problem that's gotten in the way of completion,Ksetrajna108,2025-06-23 05:48:28,1,learnprogramming,t1_mz1xgd1,False,
mz0awdm,"I think your portfolio website looks really nice. Good job. It does feel a little generic, but that's okay! You can continue to develop it as your skill grows.I would add some distinction to your preferred languages or languages you have the most skill in. Something that highlights ""I love... !""I checked out your projects. One of them does not have a readme, so I would add README.md's to your projects giving a brief overview of them and what they do/consist of, as well as maybe some of your thought process going into and what you learned from it.Otherwise your other repo's look great, they have previews, a screenshot/screencast, and relevant info. You are setting yourself up for success.",stiky21,2025-06-21 16:26:48,2,learnprogramming,t3_1lgysvl,False,
mz5jfby,Imo remove the 'I am a MERN stack developer' because it gives the intention that you are not learning anything else and you can also not know if that is even in demand.,Wingedchestnut,2025-06-22 13:57:15,2,learnprogramming,t3_1lgysvl,False,
mz1affe,"The one project that doesn't have a README was done as a graduation project, I did only the front-end on that project and another student did the back-end. I was thinking of not putting it on my portfolio but I ended up putting to showcase it as a learning foundation, do u recommend I remove it instead?",DesignAffectionate95,2025-06-21 19:35:44,1,learnprogramming,t1_mz0awdm,True,
mz19q6t,"The projects are definitely a starter until I make new projects, but I did change the projects quit a bit from the original follow along projects does that help when I start applying? Regarding the content i changed it to make less misleading. Thank you for the feedback",DesignAffectionate95,2025-06-21 19:31:46,2,learnprogramming,t1_mz14ayg,True,
mz1dnap,No. Be proud of everything you work on.,stiky21,2025-06-21 19:53:40,2,learnprogramming,t1_mz1affe,False,
mz2w065,"Thank you for the insight, I'll make sure to keep it in mind as I start applying for and hopefully find a job.",DesignAffectionate95,2025-06-22 01:13:29,1,learnprogramming,t1_mz2lq0q,True,
myscgtf,"I would think yes. The point of a singleton is to only ever have one instance of a class, so if snapshots would be multiple instances then it would break the design.If you wanted to have one “main” config class that utilized singleton then you could create a “config manager” to be a singleton that holds the main config instance. This slight change will let you utilize any benefit of a singleton while also being able to create multiple instances of the config class.At that point, the benefit of a singleton may not be as obvious and will be more of a personal choice than a necessity",StonedFishWithArms,2025-06-20 10:17:18,7,learnprogramming,t3_1lfzxnn,False,
myscoh0,"The problem with your argumentation in favor of a singleton is that it is always context dependent. Yes, the way your program is currently implemented may need only one instance of a Configuration. But software changes over time and I've seen it plenty of times that something was introduced as a singleton when only one instance of the thing was required and later it turned out that (under certain conditions) you need multiples of that thing. Something as simple as a test that runs the code that depends on the singleton twice can become impossible to implement properly. And refactoring a singleton away can be a lot of work.Another general issues with singletons is that you can access them from anywhere (as there often is a global Singleton::GetInstance() function or similar). This means that (as opposed to using dependency injection) it is hard to tell what code depends on the existence of that singleton, making it hard to reason about the code. And then there are other issues like initialization/deinitialization and dependencies between multiple singletons, etc. That's the reason why the singleton pattern is considered an anti-pattern.That being said there are common cases where I see singletons used frequently (e.g. for a clock or a logger object) where it can be justified but even for those I've seen it cause problems that they are implemented as singletons.For your specific case, I would not implement a Configuration as a singleton. The example you provide (multiple instances of calculations using their own copy of a Configuration object) is reason enough to not make it a singleton.",Visual_Yoghurt21,2025-06-20 10:19:10,3,learnprogramming,t3_1lfzxnn,False,
mys9hth,"Does the configuration need to change during runtime? If so, then why?",xxxTheBongSquadxxx,2025-06-20 09:50:22,2,learnprogramming,t3_1lfzxnn,False,
mysge8i,"Since you are using C# you should explore some of the built-in immutable datatypes, like Records.It could still make sense to have your ConfigurationManager be a singleton, and have that make the changes to the configuration stored in a single (and mutable) configuration object of some sort. But when another class asks for the configuration, it should receive an immutable record of what the configuration is right now - basically a copy of the global single configuration object, or at least a copy of the values.Don't provide methods on the Configuration object to read individual values, but force every class using configuration, to obtain their own copy, and expect anyone that wants to change the configuration, to go through the ConfigurationManager.I won't explain exactly how to create records, but you should get the gist from this!*Side-note: immutable records are used* ***a lot*** *when transferring data between services, be it REST or anything else, so it pays to get experienced with them!*",peterlinddk,2025-06-20 10:50:54,1,learnprogramming,t3_1lfzxnn,False,
mysp2xb,"You note that each differeot calculation run can have it's own configuration, which can be set when the caluculation is queued. To me this says already that you probably don't want a singleton.Instead, I might think of a design where each calculation run owns an instance of it's configuration. If you don't want to pass around a configuration object to every maybe you could create a function `getCurrentRunConfig` which keeps track of where you are in the queue and grabs the appropriate config.",allium-dev,2025-06-20 11:55:08,1,learnprogramming,t3_1lfzxnn,False,
mysqi33,"A singleton is, at its essence, a class instantiated only once. You can write code to enforce that (private ctor etc) or not. These formal patterns are most valuable when you are packaging a bunch of code for use by other people, because they’re a shorthand for documenting their use.Get the code working first.Consider that you may want to use some sort of threading or parallelism to handle those long computations if your app has to scale up.",Aggressive_Ad_5454,2025-06-20 12:04:40,1,learnprogramming,t3_1lfzxnn,False,
mysqjh2,"You are describing two different things here: config management and config data.If you split up your configuration into these two smaller parts, your problem is solved. The configuration management can live as singleton, and it manages multiple instances of config data.",Laskoran,2025-06-20 12:04:55,1,learnprogramming,t3_1lfzxnn,False,
mysxyp4,"Yeah, that goes against the point of a Singleton. If you need snapshots, you're better off just passing around a config object and cloning it when needed. Singletons are for global, unchanging state yours isn’t.",affectionate_orchid,2025-06-20 12:51:31,1,learnprogramming,t3_1lfzxnn,False,
mytbkd8,"If a calculation requires the state at a specific point in time of your Configuration class, you should not design that class as a singleton - rather you should create an instance of that class that gets attached to every calculation you perform and ensure those instances are immutable. Singletons are good for a lot of things, but what you're describing where you have a singleton holding mutable state is pretty much the entire reason people say not to use them lol.",ehr1c,2025-06-20 14:06:50,1,learnprogramming,t3_1lfzxnn,False,
myty1dv,"The Singleton pattern was invented before C++ had proper modules, in order to implement modules. There's no good reason to use them anymore. Just use modules. I.e., in C#, you can make a namespace.",Gnaxe,2025-06-20 15:55:46,1,learnprogramming,t3_1lfzxnn,False,
myn99zd,In what language are DSA taught? That would be a good one to learn.,aqua_regis,2025-06-19 15:21:44,2,learnprogramming,t3_1lfdhbg,False,
mynicij,"Maybe just try to build some stuff you like, e.g. a web page or a game, or a small app for you to use - something that is fun and takes more than just remembering syntax of a language. You will spend time with DSA anyhow, so no need to push yourself on vacation, even though you might find it interesting. If you are rally bent on learning something 'theorethical' , pick up a book of coding best practices or OOP - there are so many of them, just to escape the collage syllabus a bit.",Abject-Comb-8144,2025-06-19 16:05:18,2,learnprogramming,t3_1lfdhbg,False,
myniu7x,"C or Python! Python for simplicity, C for depth.",egonSchiele,2025-06-19 16:07:43,2,learnprogramming,t3_1lfdhbg,False,
mynb35w,"Look up the syllabus for your 3rd semester, it's usually posted online (even old ones might be ok).Usually you can find the topics & language, C is usually popular for DSA since it lacks built in collections like ArrayList.",Rain-And-Coffee,2025-06-19 15:30:27,1,learnprogramming,t3_1lfdhbg,False,
myngkq5,"More C - get really good at declaring and using structs and enums, and using pointers to structs, in function-calls as well as return-values. Take especially care to get a lot of practice on declaring dynamically sized arrays of certain kinds of structs, and stuff like that. Get used to write small functions to quickly dump data to the terminal.That is good prep-work for DSA in any language, but if the course is in C, you are going to spend a lot of time writing a lot of very basic code, so it pays to get fast at the basics!Also learn to make ""libraries"" of C-functions that you can import in all of your projects, so you don't have to re-write or copy-paste the same code over and over! You'll enjoy making libraries for your abstract data types, so you can use them in all of your projects.If you already know all that, check out some Python.",peterlinddk,2025-06-19 15:56:43,1,learnprogramming,t3_1lfdhbg,False,
mynlb9h,If you plan on doing anything web related learn Python and Javascript.,_heartbreakdancer_,2025-06-19 16:19:46,1,learnprogramming,t3_1lfdhbg,False,
mynrtt1,"Master proble solving, stick with C",Ok-Sprinkles-2157,2025-06-19 16:51:19,1,learnprogramming,t3_1lfdhbg,False,
myo3yg6,"Since you are already aware of C, practice it more with DSA concepts. Focus more on topics like recursion, searching and sorting algorithms, and look into data structures like stacks and queues. If you still have time, move on to the complex data structures like trees and graphs. It will give you a strong head start for your next sem! Otherwise, go with Python if you're looking for something that has an easier learning curve. Focus on learning the basic syntax, control flow, and using libraries. You can also try building a small project in Python to stay motivated.",codingzap,2025-06-19 17:51:09,1,learnprogramming,t3_1lfdhbg,False,
mynk866,I liked this answer,academicRedditor,2025-06-19 16:14:29,1,learnprogramming,t1_myniu7x,False,
mynhamx,"Im currently learning C also in the time before my second year starts. Low level stuff is super interesting to me, and I think youre right, a lot of the code I write is pretty basic but it still forces me to think carefully about what im doing lol.",Lunapio,2025-06-19 16:00:11,1,learnprogramming,t1_myngkq5,False,
myicauu,My first real big project was centring a div,AdanKhan22,2025-06-18 20:01:59,10,learnprogramming,t3_1lepxdj,False,
myi3qh4,My first big project was for CS50x. It was a stock trading algorithm simulator. Managed to scrape 10 years of stock data for a bunch of stocks then ran an algorithm I designed. Proved it didn’t work but the learning experience was really good,Proud-Track1590,2025-06-18 19:20:41,3,learnprogramming,t3_1lepxdj,False,
myiansy,"I’m working on a console/text copyOf Pokémon. Full save system, profile loading system and all the mechanics of Pokémon in general. Standard .net 8/C#. First full project not out of a tutorial. Still far to go in the journey.",googleaccount123456,2025-06-18 19:54:03,3,learnprogramming,t3_1lepxdj,False,
mykrh27,I helped write the code for particle detectors in Hexadecimal.,QuantumDiogenes,2025-06-19 04:18:39,2,learnprogramming,t3_1lepxdj,False,
myif9rr,I'm not good enough for this one sadly...,AxxDeRotation,2025-06-18 20:16:28,2,learnprogramming,t1_myicauu,True,
myi3r9m,What is a CNN,Proud-Track1590,2025-06-18 19:20:47,2,learnprogramming,t1_myi3qh4,False,
myi4ovw,Yo that's a crazy project even though it sadly doesn't print money,AxxDeRotation,2025-06-18 19:25:16,1,learnprogramming,t1_myi3qh4,True,
myiau2m,Nice!,AxxDeRotation,2025-06-18 19:54:52,1,learnprogramming,t1_myiansy,True,
myidjms,What version of Pokémon? I assume gen 1?,Proud-Track1590,2025-06-18 20:08:06,1,learnprogramming,t1_myiansy,False,
myll9mp,WTF that's crazy!,AxxDeRotation,2025-06-19 08:41:01,1,learnprogramming,t1_mykrh27,True,
mye2uyf,I recommend you go through the pinned post FAQ on r/LearnProgramming : https://reddit.com/r/learnprogramming/w/faq,Anonymous_Coder_1234,2025-06-18 03:58:23,6,learnprogramming,t3_1le69hi,False,
mye8300,"Also Since you're already leaning toward web development, software engineering, or full-stack development, you might actually find that focusing on **Software Development** as your main path could be more aligned with your interests than general Computer Science. CS can get quite theoretical (math-heavy, algorithms, machine learning), while Software Dev is more **practical and hands-on**—you’ll be building things from day one.If you enjoy building apps, solving real-world problems, and seeing quick results, software dev could be the better fit. Just something to think about before you dive in!",Imaginary-Let5096,2025-06-18 04:36:49,3,learnprogramming,t3_1le69hi,False,
mz6gofz,"I can't comment on the other three, but *The Pragmatic Programmer* is more geared towards software engineering rather than CS proper. It's easy to pick up and read in small chunks, treat it more like a collection of related (topically) essays rather than a text to be read cover to cover in one go.",rabuf,2025-06-22 16:51:28,2,learnprogramming,t3_1lhfkji,False,
mz3ui8h,"Any book that helps you move forward is fine. Nobody is going to ask you what books you read in a job interview, outside of maybe some classics like TAOCP or design patterns. And honestly most ppl hiring you won't know those either and they are not entry level. If the book is inspiring you to write code then it's a great book",no_regerts_bob,2025-06-22 05:16:11,2,learnprogramming,t3_1lhfkji,False,
mz3sigh,"As a highschool student who programs as a hobby too, I will say it. Books suck to start with. For me, they were everything but motivating. Really, just go find a tutorial for your language, choose some stuff you want to work on and go there. Working on a project will teach you a lot and the knowledge will likely stick better. Once there, books will help you with getting more specialized knowledge, not otherwise easily available in any other forms. Although THERE ARE EXCEPTIONS.That's my humble opinion as it is. Maybe my ADHD brain wasn't capable enough of reading, but that's it.",Smart_Vegetable_331,2025-06-22 04:59:23,1,learnprogramming,t3_1lhfkji,False,
mz3t8ht,"Oh yeah, totally get that! don’t worry - I’m not planning to learn just through books. I’m taking CS classes both in and out of school, and I’ve been doing some small projects on the side too. I mostly wanted to add in books since I enjoy reading, and it felt like a fun way to combine two of my hobbies. but yeah, I’ve got ADHD too, so I definitely get where you’re coming from :loudly_crying_face: Thank you a lot for your take!!",Sad_Canary125,2025-06-22 05:05:25,1,learnprogramming,t1_mz3sigh,True,
mz3ubk7,"You might want to add all of that to the post, so other people can actually recommend you some great books.",Smart_Vegetable_331,2025-06-22 05:14:35,1,learnprogramming,t1_mz3t8ht,False,
myy5jbt,"The best resources are documentation and creating a simple project like todos app cause there you will learn how to use c, but knowing tests they won't have any connection with reality so you should find the previous tests and solve them.",_Beempathic,2025-06-21 06:48:40,3,learnprogramming,t3_1lgp6k6,False,
myyu6nk,"I think the C Book is pretty good: [The C Book - Table of Contents](https://publications.gbdirect.co.uk/c_book/)I would use the PDF version linked in the first few paragraphs. The print layout quality is not great (it looks like it was Ctrl+P'ed from web pages) but the material there is solid, it has good programming examples and exercises.After you know C a bit, the GLIBC manual is pretty good. It is pretty comprehensive and has lots of nice little examples sprinkled throughout:[The GNU C Library - GNU Project - Free Software Foundation (FSF)](https://sourceware.org/glibc/manual/)If using entirely free materials I would first read The C Book (and do the exercises) and/or Beej's Guide to C (unfortunately no exercises in Beej's) before reading the GLIBC manual. Also, when reading such a manual, you don't read ""in linear order"" but you should read ""a la carte"" i.e. choose the topics that are interesting/relevant for you.",chaotic_thought,2025-06-21 10:56:42,3,learnprogramming,t3_1lgp6k6,False,
myxzuzz,[https://beej.us/guide/bgc/](https://beej.us/guide/bgc/) This is also great for some network programming in c[https://beej.us/guide/bgnet/](https://beej.us/guide/bgnet/),RunicWhim,2025-06-21 05:55:44,2,learnprogramming,t3_1lgp6k6,False,
myydm7y,"To get started: https://learn-c.orgBuild a small CLI project, like a command parser or sth. Learn as you go.Then a GUI project.",NobodySure9375,2025-06-21 08:09:07,1,learnprogramming,t3_1lgp6k6,False,
mz0aj5p,CodeAcademy is good for absolute beginners.consider [Exercism ](https://exercism.org)once you've had a little run through CodeAcademy.,stiky21,2025-06-21 16:24:52,1,learnprogramming,t3_1lgp6k6,False,
mymiayd,I recently did a big fat many-hour free course on Boot dev's YouTube channel if you want to check it out: https://youtu.be/DMeD8trbj6A?si=Xje7x_k1I_5KhBEk,bootdotdev,2025-06-19 13:01:46,2,learnprogramming,t3_1lepu5o,False,
myi5cgz,DSA path at [https://www.w3schools.com/dsa/index.php](https://www.w3schools.com/dsa/index.php) is free,Shamuell33,2025-06-18 19:28:23,1,learnprogramming,t3_1lepu5o,False,
myk7tjs,The Grokking books are excellent resources!,smichaele,2025-06-19 02:08:56,1,learnprogramming,t3_1lepu5o,False,
myl31lc,"Hey, my friend from amazon was planning to conduct a paid dsa bootcamp, would you be open to explore such an option? It would be live so it can be personalised according to you.",Excellent-Pool-5474,2025-06-19 05:50:36,1,learnprogramming,t3_1lepu5o,False,
myduldh,"Stick to learning/reinforcing the fundamentals, then create projects without tutorials.",WeepingAgnello,2025-06-18 03:03:21,5,learnprogramming,t3_1le4158,False,
myewes1,"Yes, modern technologies are often overly complex with many moving parts. If you are learning a new problem domain (e.g., using Rust for web-assembly), ignore all the dependency and toolset ""rabbit holes"" and just stick to the main goal (e.g., Rust code itself) to achieve your main goal as quickly as possible (or fail and get forced to switch technologies). As you keep working more and more with a specific problem domain that has already allowed you to achieve your goal, with time you will naturally learn more and more about all its auxiliary tech (for example when something does not work as expected), becoming an expert in that problem domain.",gary-nyc,2025-06-18 08:15:36,2,learnprogramming,t3_1le4158,False,
mzc9kzm,lol I’m doing this too.,ajm1212,2025-06-23 15:06:19,1,learnprogramming,t3_1liiriy,False,
mz9c8un,"You can do this with the `jq` tool, which has somewhat tricky syntax but is incredibly powerful: https://unix.stackexchange.com/questions/561460/how-to-print-path-and-key-values-of-json-fileOr you could implement the same thing yourself with a depth-first search in any programming language.",teraflop,2025-06-23 02:09:07,1,learnprogramming,t3_1li4w6i,False,
mz9k1lx,You don’t need a tool to do a while loop and iterate until you find object then go into that object and iterate that until you find the key you want,helpprogram2,2025-06-23 02:55:05,1,learnprogramming,t3_1li4w6i,False,
mzbf7ec,If it’s something manual I’d go with jq or regex,Tarazena,2025-06-23 12:20:34,1,learnprogramming,t3_1li4w6i,False,
mzcwgv6,RegExes are a terrible choice to parse nested expressions,MeLittleThing,2025-06-23 16:54:14,1,learnprogramming,t1_mzbf7ec,False,
mzd4wf5,"Depending on the use case, I use regex to look through a large response to see if I’m getting a certain value and not all of them are 0 for instance",Tarazena,2025-06-23 17:32:14,1,learnprogramming,t1_mzcwgv6,False,
mz8jn1z,"Python Beautiful Soup, read the docs. Or Python Scrapy",Rain-And-Coffee,2025-06-22 23:23:26,2,learnprogramming,t3_1li0qh1,False,
mz8jveo,"Is there something in particular you're struggling with? Web scraping at its base is pretty simple.. make a HTTP request, then parse the results.",grantrules,2025-06-22 23:24:47,2,learnprogramming,t3_1li0qh1,False,
mz9ap33,"I did it with ***NodeJS*** and ***Puppeteer*** || ***Cheerios***. I now want to give it a try to ***Playwright***, because I never tried it.The problem is that you need to know the **tech behind the login**... Check the network tab and check for a ***XHR*** or ***Fetch***, or you can even read the plain *HTML* and see if there is a *method=""post""* with some *inputs*). Depends on the login it can get harder or just *EZ* as fuck. Then you can do it with an ***async***/***await*** function with a ***Promise.All***.Something like this:`const page = await browser.newPage();``await page.goto('https://yourwebtoscrap.com/login', { waitUntil: '`networkidle2' `});``await page.type('#username', 'yourUsername');``await page.type('#password', 'yourPassword');``await Promise.all([``page.click('#loginButton') ...)]`1- First problem -> If there is a ***Captcha*** \-> You can solve with AntiCaptcha or other techs. 2- If you want to fully ""*automate*"" it, you can use a ***CRON***, with this you can schedule when to do something. With ***NODEJS*** you can use **node-cron**, and it looks like this:`cron.schedule('0 8 * * *', () => {``console.log('Running scraping task at 8:00 AM every day');`By the way, if you are using *Ubuntu*, you can check *Crontab* and take a look at it, cos it's pretty similar. Is the way *Ubuntu* schedule tasks for the *OS* (and you can schedule some scripts in Ubuntu's crontab, I did one for example to always commit something to Github once a day).It's been a long time since I ""scrap"" a website, but I still think I can give it a try again. If you need some examples with *Node*, just tell me and I'll link the ones on my *Github*.Hope it helps.",frkadark,2025-06-23 02:00:33,2,learnprogramming,t3_1li0qh1,False,
mzasefu,"Hi, it’s the case that there’s no collected book for web scraping atm; we might probably work on that. In the meantime, here is how to get your feet in the water:- learn about web scraping- learn about headless libraries like Selenium - learn about bot detectors and stealth systems like DataDome and AkamaiThis will take weeks running into months. By the way, here is a short material to get started: https://www.scraperapi.com/web-scraping/",ScraperAPI,2025-06-23 09:11:28,1,learnprogramming,t3_1li0qh1,False,
myrstsy,"As with everything CodeCademy: overpriced and too low quality.> this gives it more structure to get shit done by keeping it organized.That's what the top free resources:+ The Odin Project+ Free Code Campalso have.Once you have some fundamental skills, [Fullstack Open](https://fullstackopen.com/en/) from the University of Helsinki is also top quality - and free.----Besides that: *course/tutorial projects* are never portfolio worthy unless you completely rebuild them from scratch with your own code and with your own twists.Last: CodeCademy certificates are worth zilch in the industry. They are only *completion certificates* that indicate no more than that you have sat through the course. They are not *competence certificates* that indicate your real competence.",aqua_regis,2025-06-20 07:08:17,3,learnprogramming,t3_1lfvqyv,False,
myrgsbz,What’s the total cost?,StillGetNaaasty,2025-06-20 05:22:17,1,learnprogramming,t3_1lfvqyv,False,
myrr2si,"What’s your goal? If it’s to get a job, not worth- if you have $480 to burn, and this will make you commit to at least trying web dev/programming and you learn better with structure, go for it! I don’t really like the technologies they are teaching, but that’s not particularly important tbh",mancinis_blessed_bat,2025-06-20 06:52:03,1,learnprogramming,t3_1lfvqyv,False,
myw4841,"Don’t do Codecademy. It’s very bad at giving you permanent knowledge. I paid like $99 for a year and I’m sour about it. They hold your hand so much while making you feel like you’re doing the hard work, when in fact you’ve been duped. Full stack open mentioned above is much better. As well as Odin. Or get a book for much better learning and just as much structure.",way_ded,2025-06-20 22:25:12,1,learnprogramming,t3_1lfvqyv,False,
myrkcpj,480$ for 18 weeks with 9 hours a week of learning. Honestly doesn’t seem bad to me and isn’t a bad price point for a beginner course. Sort of like paying 500 to have an organization.,Tw1987,2025-06-20 05:51:53,1,learnprogramming,t1_myrgsbz,False,
myrq6ix,It says 480 and it includes a year of Codecademy Pro,BerryConsistent3265,2025-06-20 06:43:52,1,learnprogramming,t1_myrgsbz,False,
myrhxh0,$420 for the whole thing,ChaudaryCodes,2025-06-20 05:31:29,0,learnprogramming,t1_myrgsbz,True,
myryhkw,Why don't you like it?,ChaudaryCodes,2025-06-20 08:03:06,1,learnprogramming,t1_myrr2si,True,
myt8se0,"thtas just to register, i'm sure there's gotta be some payment afterwords.",StillGetNaaasty,2025-06-20 13:52:26,1,learnprogramming,t1_myrq6ix,False,
myskywc,"Unlikely to get a job because it’s all JavaScript and mostly front end, like 95% of the boot camps that are failing.Plus, the codecademy platform isn’t rigorous at all.",daedalis2020,2025-06-20 11:26:05,1,learnprogramming,t1_myryhkw,False,
myphdpl,"Draw.io is pretty easy to use and has loads of templates. There's a web version and a desktop version if you want to use it offline, and all the save files are text based so they fully work with git.",Sophiiebabes,2025-06-19 22:01:47,5,learnprogramming,t3_1lfn6i3,False,
mypptyw,"I personally like plantUML. Its open source, and has been around for a while Because its text defined, it works easily with version control",CptFlashbang,2025-06-19 22:48:03,6,learnprogramming,t3_1lfn6i3,False,
myprqu6,umbrellojkunless...,LowB0b,2025-06-19 22:58:51,1,learnprogramming,t3_1lfn6i3,False,
mz2dp58,This. It excels at sequence diagrams.[https://github.com/plantuml/plantuml](https://github.com/plantuml/plantuml)[https://plantuml.com/sequence-diagram](https://plantuml.com/sequence-diagram),bravopapa99,2025-06-21 23:20:39,1,learnprogramming,t1_mypptyw,False,
myou1dm,"Like other people said, solve a problem you have. It's the best feeling ever. For example, I have this issue where sometimes I want to send a link to someone or use it in a document but it's a little bit too long and ugly for my liking, but I'm also too lazy to open a new tab to bitly or tinyurl just to shorten and copy the link. So, a good solution would be a chrome extension that grabs the current tab's link that you want to send to someone and it automatically shortens it using the bitly API or however you want and you can save it or copy it or create a QR code with it, whatever. You can create this project with the technologies you have, it is very easy.Solving your own problems with code is one of the most rewarding and motivating things you can do.",W_lFF,2025-06-19 20:06:04,2,learnprogramming,t3_1lffmdy,False,
mynu54t,Input the same stack as in your post and ask chatgpt if it can give project ideas based on that stack while suggesting free public api that you can incorporate in your project.,Wingedchestnut,2025-06-19 17:02:31,1,learnprogramming,t3_1lffmdy,False,
myo4t5e,"Try solving a problem you currently have, or creating something you wish existed.That will 100x more motivating than anything someone else gives you.",Rain-And-Coffee,2025-06-19 17:55:28,1,learnprogramming,t3_1lffmdy,False,
mypncim,"Build something that interests you. Like baseball? build something related to fantasy baseball. Wish you retained some of that HS spanish you took? build a flash card app. Always forgetting to take the garbage out on time? create a notification system. Wish you were a better dancer? get out the house, computers cant solve everthing;) .... tho you could probably create something w/ pytorch that maps the rhythm of your moment from a video and taking it further see if its on beat w/ the music your listening too. ... maybe stick w/ the garbage app first",vigoritor,2025-06-19 22:34:02,1,learnprogramming,t3_1lffmdy,False,
myqjlxw,- Expense tracker- Pomodoro timer- Flashcard app- Job application tracker,AlSweigart,2025-06-20 01:40:44,1,learnprogramming,t3_1lffmdy,False,
myoviql,That sound so cool but I really can’t think of a problem thaz I have…,Revolutionary_Pop474,2025-06-19 20:13:07,1,learnprogramming,t1_myou1dm,True,
myn5955,"Generally the OS protects one application from accessing the memory of another application.In Windows, drivers can get access to the memory of an application, but I haven't done windows driver development in a long time. I don't remember how to get the driver ""injected"" into the memory space of another application. Windows may have an API to access the memory of another application but you would probably need administrator access, I don't know if this can be ""blocked"" by an application.Just be aware that the location in memory you need to access may change based on a whole bunch of things outside of your control. So you are probably going to have to:1. Find the location of what you are interested in.2. Find a pointer that points to that location.3. Find a pointer that points to the pointer that points to the location.Repeat step 3 until you find a memory location that reliable doesn't change. To make matters more difficult you may need a pointer that points before the location and an then increment it by an offset. The offset may be constant or it may be provided in another memory location.At least that is how I would tackle the problem.",pixel293,2025-06-19 15:02:07,4,learnprogramming,t3_1lfceo3,False,
myn125h,Is this an app that you have made that you want to read the memory of?,whoShotMyCow,2025-06-19 14:41:45,1,learnprogramming,t3_1lfceo3,False,
myona1j,"Generally the OS will not let you do that any more. You're basically trying to recreate a ""memory hack"" albeit more formalized in program form. And such programs already exist: CheatEngine is probably the best known one in Windows.",kschang,2025-06-19 19:33:02,1,learnprogramming,t3_1lfceo3,False,
mysmmu6,"first you need to find the location in cheat engine, then you ensure that it works all the time even if you reboot the game.when you have a working version in cheat engine you can build any external program you want with whatever language you want.the api you should look into are:\-OpenProcess (to get access)\-ReadProcessMemory to read the game memoryyou don't need any driver to do so, just keep in mind that if an app is running as admin also your app must run as admin otherwise OpenPRocess will fail",randomjapaneselearn,2025-06-20 11:38:13,1,learnprogramming,t3_1lfceo3,False,
myn6dxp,"> Windows may have an API to access the memory of another application but you would probably need administrator access, I don't know if this can be ""blocked"" by an application.[There is an API like that.](https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-readprocessmemory) It also doesn't require administrator permissions unless the program you're trying to read from is running with administrator permissions itself.",sidit77,2025-06-19 15:07:36,3,learnprogramming,t1_myn5955,False,
myn5m1r,"Thank you very much, I'll look into that",Accurate-Crazy4869,2025-06-19 15:03:53,1,learnprogramming,t1_myn5955,True,
myn1dy6,No I didn't make the app I want to read the memory of,Accurate-Crazy4869,2025-06-19 14:43:21,1,learnprogramming,t1_myn125h,True,
myn9zmv,"This is how I would approach it as well. Some things to note:You can write a generic kernel driver and register it to be loaded at boot time. However, to get Windows to load an unsigned driver, you have to use the boot menu to disable driver signature enforcement.The driver will expose an API (accessed through IOCTL calls) that will allow a user mode program to pass it a process ID. You will then write a user mode program that will find or get the process ID of the target application and pass it up to the driver.The driver can then use functions like MmProbeAndLockPages, and MmMapLockedPagesSpecifyCache to build MDLs for the virtual memory regions that you are interested in in the target application, lock them into physical RAM, then map them back down into the virtual address space of your user mode program.Once you have done that, the user mode program will have a ""live view"" into the memory of the target application, and can write whatever values it wants to disk.That is assuming you have solved the problem of figuring out which virtual address you are interested in in the target application.Note that this is all quite difficult, and not something for a novice programmer to take on. I used to do this kind of stuff for work, when I was working 8 hours a day, 5 days a week on it. It was infinitely easier for me because I wrote the code for both applications and the driver, plus my driver was signed. I was just using this technique to share memory between applications in a closed environment.",wildgurularry,2025-06-19 15:25:11,2,learnprogramming,t1_myn5m1r,False,
myn1qaf,Probably will have to look into decompilation etc (unless I'm way off base) if the app is not open source then. You'd have to figure out how and where the memory is stored by the code,whoShotMyCow,2025-06-19 14:45:01,1,learnprogramming,t1_myn1dy6,False,
myn29c9,"Apparently people use cheat engine to figure that out, but what about after I figure that out?",Accurate-Crazy4869,2025-06-19 14:47:34,1,learnprogramming,t1_myn1qaf,True,
mz0bwp4,What did the diagrams show and why was the code wrong?,mxldevs,2025-06-21 16:32:14,1,learnprogramming,t3_1lf7kcj,False,
mymtj2m,"Unfortunately, I don't think Python is a good language for learning data structures. Dictionaries, lists, sets, etc... are already primitive data structures in Python. For example, you can't really build your own list in Python because it would itself have to be made out of lists, since there is no data structure provided which is more primitive than that. It would be nonsense to try. If you want to learn data structures, I would highly recommend learning C. C++ and Java are possible choices too but those languages are quite a bit more complicated, whereas plain C is quite ""bare bones"". It's not only easier to learn as a langauge, but its primitives are truly primitive. In C you actually build real data structures - linked lists, array lists, hash tables, etc... rather than create silly simulations of them.",Cybyss,2025-06-19 14:04:13,-1,learnprogramming,t3_1lf7kcj,False,
mz1j80q,I am interested in this as well.,Navoke,2025-06-21 20:24:13,1,learnprogramming,t1_mz0bwp4,False,
mytezr2,"> For example, you can't really build your own list in Python because it would itself have to be made out of lists,Wrong.```class Node: def __init__(self, data=None): self.data = data self.next = Noneclass Linked List: def __init__(self): self.head = None def insert(self, data): # instanciate `Node` and add # etc.```Here you go. Linked list implementation in Python, no need to use the builtin `list` class. The same is true for every conceivable data structure. Is it efficient? Hell no.Does it make sense to do this in production code? Hell no.Is it both possible andt suitable to teach or learn DSA? Absolutely.",Big_Combination9890,2025-06-20 14:23:59,2,learnprogramming,t1_mymtj2m,False,
myn131n,"I agree, though, I'm not looking at implementing the data structures from scratch, what I'm interested in is using what's already there (in the case of Python) and code the operations on the data structure. Which shouldn't make that much of a difference from C.",Dramatic_Food_3623,2025-06-19 14:41:52,0,learnprogramming,t1_mymtj2m,True,
mytfqvp,I wasn't referring to a linked list. Try building a vector/arraylist type of list in python.,Cybyss,2025-06-20 14:27:42,0,learnprogramming,t1_mytezr2,False,
myrm7l5,The data structures and algorithms course I took in college had us implement data structures from scratch using Python so it's definitely possible to learn DSA using Python.Here is a lesson I made with diagrams that teaches the difference between python lists and arrays. [https://codeonthecob.com/page/d34ddbd1-dae7-4069-acd8-de9a2af7d3da](https://codeonthecob.com/page/d34ddbd1-dae7-4069-acd8-de9a2af7d3da)Then after that lesson there is a challenge where you implement a dynamic array from scratch using Python.Honestly the only data structure I can think of that is unusual to implement in Python is the dynamic array because you end up using a python list (a built in dynamic array) to simulate the fixed size memory block of a static array.,Navoke,2025-06-20 06:07:57,2,learnprogramming,t1_myn131n,False,
mytjbnq,"You were using the word ""list"" which commonly refers to linked lists or similar data structures.If you wanted to specify the concept of an ""Array"" as this concept is understood e.g. in C, you should have used the word ""Array"".Also, wrong.Not only does python have a builtin type for such arrays (`from array import array`), it would also be trivially easy to simulate a C-array for basic types like fixed-width integers or characters using a `bytes` object of fixed length.And lastly, as fixed length arrays *ARE* a primitive datastructure in C e.g. `char myArray[7]` defining those is not required to teach DSA.",Big_Combination9890,2025-06-20 14:45:10,1,learnprogramming,t1_mytfqvp,False,
mytmcvm,"An arraylist is not the same as an array.An arraylist simulates an array (constant time reads and writes to any index) but which can grow and shrink as needed. It is *not* a linked structure! `List` in C# and `list` in Python are most certainly *not* linked lists but nor are they fixed-length arrays. They work much more like C++'s `vector` type. Having to import `array` from a separate module kinda proves the point that they're not among Python's primitive data types. Also... `bytes` objects are immutable, so are hardly replacements for C-style arrays.",Cybyss,2025-06-20 14:59:49,0,learnprogramming,t1_mytjbnq,False,
myto1pe,"> List in C# and list in Python are most certainly not linked lists but nor are they fixed-length arrays. They work much more like C++'s vector type.Aaand...who exactly said they were? The point of discussion was you stating that one cannot build a list in python. I showed that one absolutely can. If you wanted to exclude linked lists from that statement, you should have said so.Oh, and you could absolutely build a random access list without using linked nodes from bytearrays in python as well. It would not make a lot of sense, and have zero impact on this discussion, because again, not a datatype DSA is concerned with. but it would be possible.> Having to import array from a separate module kinda proves the point that they're not among Python's primitive data types.Is this now a discussion over what is or isn't a primitive datatype in Python, or a discussion whether DSA can be taught using Python?Because, I thought it was the former:> Unfortunately, I don't think Python is a good language for learning data structures.---> Also... bytes objects are immutable, so are hardly replacements for C-style arrays.And? Again, this is an implementation detail that has absolutely zero to do with the point I am making.You could also point out that my Python `Node` class is not the same as a node would be in C, because it uses a reference instead of a pointer. Wouldn't change a thing about the validity of my argument.",Big_Combination9890,2025-06-20 15:08:01,1,learnprogramming,t1_mytmcvm,False,
myh8izf,"You posted yesterday about parsing your CSV and showing it in a Django web app.You probably misconfigured something (ex: wrong route, params, etc).I would look at the log output and see if there's an error message.",Rain-And-Coffee,2025-06-18 16:55:29,3,learnprogramming,t3_1lel9oj,False,
myh928d,"Django doesn't magically ""connect"" html files with python files. You'll need at the minimum to declare a url, a view (where you put the python code) and tell the view to return your html template.https://docs.djangoproject.com/en/5.2/intro/tutorial03/",BassSpleen,2025-06-18 16:57:56,3,learnprogramming,t3_1lel9oj,False,
myhcugm,"Hey man thanks for taking time to reply,I have figured it out i haven't made the url the tutorials i have watched on YouTube and the course i have taken from udemy from that i haven't really figured out how to make a url",Grandmother8,2025-06-18 17:15:10,1,learnprogramming,t1_myh8izf,True,
myhd0dd,Thanks man i was able to figure it out because of you,Grandmother8,2025-06-18 17:15:54,1,learnprogramming,t1_myh928d,True,
mydwuxd,"DSA stands for data structure (and) algorithms, learn it anyway you can that works for you. YouTube, leetcode, udemy, free code camp. But in my experience it's ""only"" important if you are going for an interview where you know you will be tested on it.",Unplugthefone,2025-06-18 03:17:45,6,learnprogramming,t3_1le6qch,False,
myifesx,"DSA stands for data structures and algorithms.If you've programmed some you're probably familiar with some data structures like integers, arrays, lists, vectors, dictionaries, maps, etc.Algorithms are just a list of steps to achieve some goal. A commonly studied algorithm is sorting.These two concepts align to form solutions to problems which have ""time complexities"" and ""space complexities"" which is just how long a program takes to run for a given input and how much memory is used during the programs execution.Software development interviews sometimes ask questions related to DSA and this is commonly referred to as ""leetcode"" due to the popularity of the website Leetcode for practicing interview questions of this type.The goal of these interviews is for the interviewee to solve problems with optimal time/space complexities. Sometimes there are multiple ways to solve a problem with multiple different tradeoffs for time and space complexities.You can learn a lot of DSA for free by going to [neetcode.io](http://neetcode.io)",ShardsOfSalt,2025-06-18 20:17:08,1,learnprogramming,t3_1le6qch,False,
myllew8,"Hey, my friend from amazon was planning to start a paid dsa bootcamp in july august, would you be open to explore such an option? It will be live classes so more personalised and live qna will also be conducted.",Excellent-Pool-5474,2025-06-19 08:42:30,1,learnprogramming,t3_1le6qch,False,
myecvfs,"Well, I’d say the basics of DSA is very important, but not that tough. Knowing what a map is, what makes it so great. What sets and different lists are for is pretty basic DSA knowledge that all programmers should know. As well as some basic understanding of space and time complexity.Being able to convert a NFA to a DFA or quickly find any loops in a graph on the other hand… well that’s borderline useless for most of us outside of bad interviews.",hrm,2025-06-18 05:14:54,11,learnprogramming,t1_mydwuxd,False,
myhhu35,"Finding cycles in a graph is kind of a bad example. Any CS major would've seen this problem, because you need to know the answer if you want your DFS to not loop forever. So if you ask this question, it's super easy to tell if someone knew this at some point and just forgot, vs someone who's really never seen DFS on graphs before. Sure I don't expect you to be ready to write out DFS at any given moment, but you can't tell me you know ""the basics"" of graphs and trees, if you have never even seen it. It's not a clever application of something obscure, DFS could show up on probably every algorithms exam in the world. The point is they want to know if you've really learned the content that every decent CS grad would have seen. Every job app says they want a CS degree *or equivalent*. They want to know if you are part of the club or not.",tiltboi1,2025-06-18 17:37:45,0,learnprogramming,t1_myecvfs,False,
myclnx1,"> I know I should validate the input format with something like the express-validator middleware, but what about for something like a text-area where a user might have a perfectly valid reason for including ""dangerous characters""?Characters are not dangerous, and any system that treats them as such is poorly designed.You don't need to escape *inputs* i.e. strings that you receive. You must correctly escape *outputs* when you embed them in anything that's going to be parsed: an SQL statement, an HTML document, etc. (For that reason, I think that having HTML escaping in an ""input validation"" library is pretty nonsensical.)Escaping is essential for the parsing on the other end to work correctly, even leaving aside the dangers of XSS.When you're running JS code in the browser, and you set a property with `textContent`, you don't need to do any escaping because the string you're providing is not going to be parsed as HTML. It's just being directly passed into the DOM. On the other hand, if you assign to `innerHTML`, then the string you assign will be parsed as HTML. So if you have text that should be interpreted as text rather than HTML, it must be escaped.If you are using EJS to generate HTML code, then HTML escaping is likewise necessary. But EJS already handles this escaping for you. (But it's very important to read the documentation to ensure you understand when and where this happens!) You can use ""View Source"" in your browser to see the escaped output for yourself.> However, is there still a risk of an attacker manipulating the code on the back-end if I don't escape the input?The whole point of escaping *outputs* is that no matter what string the attacker puts into your database, if you escape it correctly, the recipient of your output will interpret it as that same string of text, rather than as HTML tags.Reddit does not prevent me from typing `alert(1);` in a comment, nor should it. Me causing that string to be saved in Reddit's database is not ""manipulation"", it's just normal usage. But that's why it's crucial that Reddit correctly escapes the string when generating pages.> Finally, I know I should use parameterization for Postgresql queries. Will this alone protect my database from SQL injection (I'm use node-postgres for queries)?As long as you always use parameterized queries, and never build queries with string concatenation, then yes. (And as long as you don't do other silly things that would enable *indirect* SQL injection, like reading a value from the DB and then executing it as a query.)",teraflop,2025-06-17 22:48:16,3,learnprogramming,t3_1le0uos,False,
mydez66,"Thank you so much for this response!! This clears up a lot for me, I really appreciate you taking the time!",Strange_Bonus9044,2025-06-18 01:33:33,1,learnprogramming,t1_myclnx1,True,
my7q4pr,Read the documentation and figure out what you need as you build a project,Dismal-Farmer1453,2025-06-17 05:16:46,1,learnprogramming,t3_1ldetn1,False,
my8ezom,Learn python first. Then fast api docs. Stay away from random YouTube channels unless it’s a structured course.,queerkidxx,2025-06-17 09:14:58,1,learnprogramming,t3_1ldetn1,False,
my7wbyz,Actually it needs FASTAPI so for that I need to learn python and then the FastAPI framework.,suri_ritesh,2025-06-17 06:11:10,1,learnprogramming,t1_my7q4pr,True,
my8qvjq,"For sure, but still looking into the best source from where I can start my journey.",suri_ritesh,2025-06-17 11:02:31,1,learnprogramming,t1_my8ezom,True,
mycunso,Head over to r/learnpython I always recommend codeaccademy but it isn’t really the canonical resource.,queerkidxx,2025-06-17 23:37:06,1,learnprogramming,t1_my8qvjq,False,
mzfbq37,"You'll need about 10,000 hours of writing code to achieve whatever level you're going to achieve. Spend more time writing code and hope for the best",no_regerts_bob,2025-06-24 00:05:51,1,learnprogramming,t3_1liw5sv,False,
mzfc18o,"nope. it'll never go away.seriously. you just get used to feeling that way. hate to be a downer. :face_with_tears_of_joy:reality is you're probably not that bad. maybe not cut out for FAANG but you can very likely earn a decent salary with whatever skills you possess. i'm not great. i work in data analysis because i'm not that great. i make plenty of money. like, plenty more than enough. people always want to push to be the best and make more but that's so unnecessary. live a happy life. i know that's not programming advice but it's the truth. fuck working yourself to death and feeling bad all the time.",YOUR_TRIGGER,2025-06-24 00:07:43,1,learnprogramming,t3_1liw5sv,False,
mzfejzv,"I'm not somebody in a position to be giving you advice, I'm a guy who is doing a CS Masters in AI with no background in tech. I did mechanical engineering in my undergrad (I hated it with a passion) but I love what I am doing now. There's a lot of people like me doing this course, people who are touching code for the first time, and tbh it's super overwhelming. You're interning at FAANG, and that's something that I dream of. You probably have knowledge about things I haven't even heard of. We're both masters students, but if I was to compare myself to you, I'd feel pretty shit about the kind of stuff I'm trying to learn right now. It feels so basic. You're surrounded by FAANG engineers. They are people who have been working together on solving a problem/creating something new. So is it fair to compare your work to the work these people do? It's all about perspective.I don't know if you were looking for a technical answer, and I am sorry if I disappointed you, but I've seen that it's always the people who believe they could do it that find a way to do it. You're perfectly capable of being as good or better than anyone else working with you, that's why you're there. Because you have the potential. Fix your mindset and you'll be able to achieve great things.",iamjacob97,2025-06-24 00:22:32,0,learnprogramming,t3_1liw5sv,False,
mz0w8xu,"Hot take - the kind of person writing these articles is way more likely to be replaced than any of us. I use AI daily, and it’s becoming more and more like any one of my incompetent customers.",xch13fx,2025-06-21 18:17:57,1623,cscareerquestions,t3_1lh2oaf,False,
mz0x5l4,"> Artificial intelligence is ideally suited to replacing the very type of person who built it.So, researchers that develop AI? Models aren't typically developed by software engineers working on creating products, they're developed by researchers who's sole job is to create AI and further the field. > Szymon RusinkiewiczWhile his resume is admirable, he's a researcher and his area of expertise is in computer graphics, robot vision, and robotics. I'm not sure if he's ever worked in the industry, but it's safe to say that based on his skilkset and his role in academia, he's probably not someone that I'd go to for advice on how the industry is going. > cohort of graduating comp-sci majors at Princeton is set to be 25 percent smaller in two years than it is todayAnd what is that compared to 5 years ago? We've seen huge growth in thr number CS majors in the last 10 years. Even if you're on the ""AI is taking over"" train, you should at least realize that a 25% drop after a huge increase isn't unusual or necessarily bad, not does it represent a loss overall",IBJON,2025-06-21 18:22:51,65,cscareerquestions,t3_1lh2oaf,False,
mz0vpis,"It’s cyclical. Too much supply, not enough demand given the economy. People will still be needed. And if people stop going into the field for a while, the balance will shift again. Accounting is a good example of this right now",walkslikeaduck08,2025-06-21 18:15:05,557,cscareerquestions,t3_1lh2oaf,False,
mz0xaro,My company hasnt hired a new grad that isnt living in India in over 5 years now,marx-was-right-,2025-06-21 18:23:39,240,cscareerquestions,t3_1lh2oaf,False,
mz0vjgd,This article sounds like it was written by the zeitgeist of /r/csMajors,nsxwolf,2025-06-21 18:14:13,116,cscareerquestions,t3_1lh2oaf,False,
mz11d8v,Everything is a bubble when you don't know what you're talking about and you don't know what a bubble is,SmolLM,2025-06-21 18:45:37,24,cscareerquestions,t3_1lh2oaf,False,
mz19ca9,"""Artificial intelligence has proved to be even more valuable as a writer of computer code than as a writer of words""Maybe it's because I'm good at programming and not at writing, but to me this statement couldn't be further from the truth. Hallucinations are a much worse problem when you're building a system (or component of one), than if you're writing something that's mostly for entertainment.I find LLMs orders of magnitude better at writing stuff meant to be read by humans than writing code.",some_clickhead,2025-06-21 19:29:35,21,cscareerquestions,t3_1lh2oaf,False,
mz0thpi,"Counterpoint: No, it actually isn't.",emetcalf,2025-06-21 18:03:22,328,cscareerquestions,t3_1lh2oaf,False,
mz0vrb6,"I began my CS degree in 2000, post DotCom bomb. Enrollment was dead. The 2008 Financial Crisis caused a 2nd ""bubble burst"".Go into CS because you enjoy it, but don't forget that the reason we get paid well is because not too many of us enrolled in Computer Science because so many people thought the bubble was bursting.Computation isn't going anywhere. The need for programmers will continue to increase for decades. AI will not replace programmers any time soon (in fact, it's becoming clear that it enables more modalities for computation and we'll need more).It's silly to me that we jump right to the notion of AI replacing programmers and don't discuss all of the types of jobs that use a subset of the total skills required to be a good software engineer.Logically, before you see a programmer wholesale replaced you'd have to see Translators/Court Stenographers/Draftsmen/Accountants replaced. They do a subset of work that programmers do with deterministic rules and regulations (which we don't have).There are so many canaries that need to die before we should be concerned.It stands to reason, how can a human hope to control a tool when they can't understand the output? You need LLMs to produce code that works 99%+ of the time, out of the gate, to hope to replace us, and/or have an extremely robust system of feedback loops plumbed back into the LLM with 0% hallucination. We're nowhere near that.I love LLMs in my own workflows, but it takes my experience to get the LLM on the right track even on small workflows. Even with specificity, I'd estimate that the LLM gets it right way less than 30% of the time, and it's my ability to debug and suggest fixes is what gets me to working solution.",MasterLJ,2025-06-21 18:15:21,63,cscareerquestions,t3_1lh2oaf,False,
mz2v0a5,"Another AI doomsayer post.>Sam Madden, a computer-science professor at MIT, told me that even if companies are employing generative AI, that will likely create more demand for software engineers, not less.From the very same article that you posted.",Inside_Team9399,2025-06-22 01:07:10,13,cscareerquestions,t3_1lh2oaf,False,
mye473t,And why am i going through leetcode?,Iwillgetasoda,2025-06-18 04:07:48,463,cscareerquestions,t3_1le798g,False,
mye2qq9,This bubble gonna pop so hard holy shit,savage_slurpie,2025-06-18 03:57:34,1192,cscareerquestions,t3_1le798g,False,
myf1rpj,">whoever said No to $100M, why?No one, it's in Sam Altman's head.",hellobutno,2025-06-18 09:09:01,79,cscareerquestions,t3_1le798g,False,
myecjd0,Meta is not offering $100m cash to anybody. Sam Altman is a grifter.,globalaf,2025-06-18 05:12:10,126,cscareerquestions,t3_1le798g,False,
mye97y0,Yann LeCun couldn't make AGI?,fragrant_ginger,2025-06-18 04:45:37,39,cscareerquestions,t3_1le798g,False,
mye7uas,"Okay, *fine*. I'll accept, I guess :face_with_rolling_eyes:",Derpy_Snout,2025-06-18 04:34:56,14,cscareerquestions,t3_1le798g,False,
mye1tc4,"They’re already rich. The people getting $100m offers are way past the point of being motivated by a bigger number.Worse mission, worse leadership, and starting from far behind the leading frontier labs.",Lololwut,2025-06-18 03:51:05,245,cscareerquestions,t3_1le798g,False,
mye4vac,There is going to be strong clauses and condition with it like something something milestones or you will be canned before the signing bonus vests like if your team doesn't deliver AI that puts meta on the map.,SomewhereNormal9157,2025-06-18 04:12:40,33,cscareerquestions,t3_1le798g,False,
mye373u,Just another desperate attempt by the grifter to keep the bubble from deflating. Most AI projects are being discarded after the POC stage at customer orgs. Apple basically yelled out on a loudspeaker what any decent developer already knew - LLMs are trained parrots and will spit out all sorts of bs with a lot of confidence.,Infinite-Employer-80,2025-06-18 04:00:46,131,cscareerquestions,t3_1le798g,False,
myemers,"You’d need to be pretty stupid to believe Meta is offering top talent 100 Million, but you have to be truly braindead to believe OpenAI employees would turn it down for “mission” reasons.",Ocluist,2025-06-18 06:38:20,36,cscareerquestions,t3_1le798g,False,
mzcg0cz,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-23 15:36:56,1,cscareerquestions,t3_1lijss4,False,moderator
mzckv2c,320K with only 4 YOE is more of the extreme. Be grateful you had it while you did.I don't think you need to temper pay expectations but understand there might be more of these peaks and valleys. If you prioritize compensation then you should continue to climb back up if you keep applying and interviewing.,redfour0,2025-06-23 15:59:34,392,cscareerquestions,t3_1lijss4,False,
mzchymh,"You were making $280k while living at home, so you should be pretty flush. Get a place with roommates in the outer boros and you'll be fine.",NandoDeColonoscopy,2025-06-23 15:46:01,1432,cscareerquestions,t3_1lijss4,False,
mzch6mp,">Do I need to fully temper expectations of pay and security moving forward?Yes. Your previous total TC was around 2.5x the average salary in this career field.I cannot even fathom that amount of money every year, insane",Budget-Government-88,2025-06-23 15:42:25,1226,cscareerquestions,t3_1lijss4,False,
mzcho5o,Is it chewy cuz chewy is my dream company :rolling_on_the_floor_laughing:,teenydog,2025-06-23 15:44:40,297,cscareerquestions,t3_1lijss4,False,
mzcgtgh,playing with puppies can help,StackOwOFlow,2025-06-23 15:40:45,166,cscareerquestions,t3_1lijss4,False,
mzchbb0,You worked for one of the most evil company on the world. Now you help to feed puppies. You also grown up and started your independent adult life in your own flat. That is a big Win pal. Always look on the bright side of life!,DragonfruitLow6733,2025-06-23 15:43:01,528,cscareerquestions,t3_1lijss4,False,
mzcn4dc,"You got lucky, then unlucky, then lucky again. You are still making more than double the median individual income in America, but can’t enjoy it. No forum response will fix that. You either shift your mentality to one of gratefulness and content or you don’t. Figure it out.",hootian80,2025-06-23 16:10:17,53,cscareerquestions,t3_1lijss4,False,
mzcs2wb,You make 130k??? Jesus christ I would be ecstatic to make that much. I'm sorry you're no longer rich but damn,romerule,2025-06-23 16:33:40,52,cscareerquestions,t3_1lijss4,False,
mzcu5rl,"Oh no I made a quarter million for years while everyone was being laid off and now I have to move to NYC to work another high paying job.Bro I make 50k, just shut up and stop overthinking",the_Safi30,2025-06-23 16:43:28,126,cscareerquestions,t3_1lijss4,False,
mysnfjv,"Bud this is just the life of having a job in general. I think you're looking at those other careers you listed with some deeply tinted rose colored glasses. I haven't gotten into a CS career yet, but I have worked food service, retail, warehouse, manufacturing, and a remote document analysis job. The reality of work in the U.S these days is having companies drain as much as they can out of you while putting harsher restrictions on your ability to freely socialize at work. It sucks, it's anti-human, but it's where we are as a society.",Metawoo,2025-06-20 11:43:52,737,cscareerquestions,t3_1lfzvhv,False,
myswa15,"I'm telling you loud and clear -- you do not want all those other things with an insufficient salary.You think you'd be happy in a job that pays less, as long as it ""covers your basic needs."" But how much does it actually take to cover those needs, now and forever? Because the way this society is going, you're going to need a financial safety net larger than you're thinking right now. The societal safety nets are disappearing.If anything happens to you and your capacity to bring in money, you're going to wish you had enough money such that your *money* generates money -- i.e., investments so large that you can live off the interest alone. And you're not going to have the leftover funds to invest with an average salary if you're ever laid off, get sick, get into a car accident, etc.Most of those people whose jobs you're eying won't be able to financially recover from a bad diagnosis, let alone retire.Think back to when you were in college and money was tight. That's going to be your life without a good income. You just forgot what that's like.If you don't hear anything else I'm saying, just remember that you can always find ways to socialize and engage with your interests with a high salary. But a low salary is a limiting factor that puts hard a ceiling on every other aspect of your life. And I truly believe a person's earning power is the single hardest thing to change in life. So hard, in fact, that most people never do it.Only quit your current line of work at your current company if you just can't stand to do it anymore and it makes you absolutely miserable. I'm talking, you *dread* getting up in the morning and your evenings are spent agonizing about having to go back to work the next day. To the point where the dread consumes you and it becomes your whole life.Beyond that, consider yourself lucky to be able to do what you do, for the salary you do it at.**Edit:** If you really don't want to do that kind of work long term, the best thing you can do is look into FIRE-ing and retire early. You have the salary to do that and do it comfortably. But your friends with low salaries would have to live like literal paupers to do even half of that. I'm talking worse than you lived when money was tight in college.",oftcenter,2025-06-20 12:41:23,72,cscareerquestions,t3_1lfzvhv,False,
mys8zdo,"Want to trade? I work in public sector. Everyone at the place I work with are parents with a diverse set of interests outside of their career. I like to chat from time to time but with 3 YOE I want to put in the work while I'm on or off the clock. They think I'm autistic and now I'm not so sure I'm not.That said, I can ask for time off whenever I want and generally it's going to be a yes. There's a lot of perks that you don't notice never having worked private sector jobs, because the biggest difference, salary, is the most noticeable.",Unintended_incentive,2025-06-20 09:45:35,109,cscareerquestions,t3_1lfzvhv,False,
mysjo5w,This is why I quit gaming and focus more on hobbies that involve some type of social or exercise and doesn’t involve staring at a screen. That’s the last thing I want to do after staring one at work for 8 hours a day,wake886,2025-06-20 11:16:20,110,cscareerquestions,t3_1lfzvhv,False,
myt027r,"Grass is greener.You'd rather work on your feet all day to make 20% of your salary in a restaurant?I mean shit bro. Quit and join up, I'm sure you could find a retail job.",8004612286,2025-06-20 13:03:40,65,cscareerquestions,t3_1lfzvhv,False,
mytdty9,You guys are so melodramatic on this sub. You really think other people are full of energy after a day's work to go out and socialize? Your personal growth is what you make of it.,wankthisway,2025-06-20 14:18:12,24,cscareerquestions,t3_1lfzvhv,False,
mysbgxy,"My dude you are looking for social butterfly college level social life and space for experimentations with a working adult level responsibilities and obligations. Very few manage to get both.  You knew what was coming when you signed up for in this field of work. We are all some level of NPC living our lives in routines and we are all trying to get by. That's just an adult life vibe.You want to yap about shit and get paid for it while still being in tech industry, get a sales engineer or product designer job, or some bullshit like scrum master or developer advocate. I don't have time to chitchat about butterflies in Bolivia when the fucking monitoring is down again.",TangerineSorry8463,2025-06-20 10:08:23,132,cscareerquestions,t3_1lfzvhv,False,
mysiaoq,"No.> Before this job, I would be regularly socializing even in school while studying/doing assignments, playing sports, developing my tastes in art, doing random (code and non-code) projects, playing instruments, had lots of time and mental energy to do self reflections, etc.I'll point out that the 3 ""grass is greener"" examples you provided all include people who exercise regularly. Consider that perhaps the regular exercise and regular social engagement is the core reason they don't feel burned out at the end of the day as opposed to some circumstance specifically related to their employment.We're really ***reaalllyyyy*** fuckin going through it at work right now. Busiest month of my professional life in the ~15 years I've been banging on keyboards for money. Last week fucking sucked for me because I took 2 weeks to have an extended vacation with the family and walked into 2 weeks of the craziest most hellish backlog of decisions that need to be made and pivots across ~2-3 functional groups that have to happen.I have a mental list of ""things I do to mitigate the suck"". I made time for those things. That meant some other things didn't get done. It was fucking hard to make time for those things between kids, time with my spouse, work the house needs done, help my folks need because they're old/frail, etc. But I made time for those things that ""mitigate the suck"" and boy oh golly gee do I feel 1000% better this week.This situation likely has nothing to do with your job, and you should give therapy a try.",healydorf,2025-06-20 11:05:46,27,cscareerquestions,t3_1lfzvhv,False,
myspzzz,"That’s why it’s called a 9-5, you aren’t paid to be expressive and have a social life, you’re paid to churn and get shit out the door. People tolerate it because it pays well and it funds their 5-9.",ChadFullStack,2025-06-20 12:01:19,24,cscareerquestions,t3_1lfzvhv,False,
myknmy8,work there until you can find another job,entrepronerd,2025-06-19 03:51:18,1153,cscareerquestions,t3_1lf12px,False,
mylhbpt,Employers and recruiters complauning about job hoppers should STFU.,ReactionEconomy6191,2025-06-19 08:01:59,265,cscareerquestions,t3_1lf12px,False,
myl195c,"Similar situation happened to me. Recruiter told me “we’re full remote now, but when we eventually RTO you’ll be able to choose between full remote or hybrid”. I take the job, a few months later they start RTO and /*surprise!* it’s mandatory 2 days in-office. I complain, my manager asks HR and they deny ever telling me this. I ended up finding a new job after ~6 months of looking.",locke_5,2025-06-19 05:35:20,186,cscareerquestions,t3_1lf12px,False,
myll503,Go complain about that old recruiter and ideally leave before a few months so he doesn’t get his commission Work there until you find a new jobIs there anything in your contract?,TobyADev,2025-06-19 08:39:43,61,cscareerquestions,t3_1lf12px,False,
mykoepl,Nothing you can do but find another job. I would be upset and would bring this up with the manager. Next time make sure you get a straight answer.,Difficult-Self-3765,2025-06-19 03:56:42,39,cscareerquestions,t3_1lf12px,False,
mym3dus,I really don’t get the RTO push when you have a laptop and get on Teams meetings anyway.,dakin116,2025-06-19 11:24:19,15,cscareerquestions,t3_1lf12px,False,
mylgvke,"A month after I joined I started hearing rumors about RTO and started applying immediately. Luckily landed a new gig before the RTO went into full effect. On the bright side, it was easy to explain to my manager why I was leaving since I didn’t agree to this",carrymepl0x0rz,2025-06-19 07:57:43,10,cscareerquestions,t3_1lf12px,False,
myky82p,"Recruiters lying is the new norm sadly. Find a way if you can get out, otherwise you can't change the policy. You'd shocked what recruiters lie about. So we have to stand ready every time.",average_turanist,2025-06-19 05:10:30,44,cscareerquestions,t3_1lf12px,False,
myko8m7,Did you have your wfh condition in writing either withheld recruiter or hr of the company? I'd double over that paperwork and use that as leverage. Just try not to kick the hornets nets to hard if you do.,blackout-loud,2025-06-19 03:55:31,20,cscareerquestions,t3_1lf12px,False,
myi2a34,"I'm personally neutral on Gen AI. I see both good use cases, and terrible dangers. \> all the shit the industry has been up to since long before the generative AI boomThis is what's driving me to retire early. The enshitification, the ""best practices"", the duct tape architecture with dozens of incoherent layers, the horrendously inefficient project management, run by people who've never written production code in their life, pushing people to their breaking point over arbitrary deadlines. THAT is what smells. Throw AI on the fire and it just reaks.",Euphoric-Stock9065,2025-06-18 19:13:39,248,cscareerquestions,t3_1leolz9,False,
myhtcrt,Every single industry is moving towards AI but the argument you’d be left behind if you don’t learn AI is also stupid. You could learn AI now or you could learn AI in 2 years and it wouldn’t impact your ability to do AI related stuff in 5 years,ElectronicGrowth8470,2025-06-18 18:30:57,210,cscareerquestions,t3_1leolz9,False,
myhwwmx,"Over the past decade, tech started to attract the same sociopaths that flock to Wall Street. It is no longer something that people admire but has turned into something people turn their nose up at. Yes you can make a lot of money but it’s turning into a profession which is not held in high regards to many. Tech used to be about making peoples lives better but has turned into the opposite.",McCringleberried,2025-06-18 18:47:57,102,cscareerquestions,t3_1leolz9,False,
myi53zx,"I think you should continue to use your best skillset for making money as that's optimal and I don't like AI either, but it is coming for everything IMO and you could always channel your skills into some app or business that tries to hold AI accountable or something to that effect. GLHF",m4gik,2025-06-18 19:27:15,16,cscareerquestions,t3_1leolz9,False,
myiac8j,You should spend less time crying about the current fad and focus more on building your career. You sound genuinely brainwashed by the AI hype. Build good skills and don’t be a psycho at work and you’ll be ok.,PM_ME_MEMES_PLZ,2025-06-18 19:52:29,17,cscareerquestions,t3_1leolz9,False,
myjrkkq,"all of your description sounds to me like you hate people chasing money, so yes you should pivot out of CS >all the shit the industry has been up to since long before the generative AI boom. The big tech CEOs have always been scumbags, but perhaps the straw that broke the camel's back was when they pretty much all bent the knee to a world leader have you wondered why? the answer is very simple: money >I see generative AI as contributing to the ruination of society, and I do not want any involvement in that. The problem is that the entirety of the tech industry is moving toward generative AI, and it seems like if you don't have AI skills, then you will be left behind and will never be able to find a job in the CS field. Am I correct in saying this? I see ""Generative AI"" as just the latest buzzword that gets investors excited, same as Hadoop, or Distributed Computing, or Blockchain, or Web3, or... so many buzzwords that I can't even remember all, once every couple years there'll be a new hype, so if that is sickening to you, CS is not a good fit for you",NewChameleon,2025-06-19 00:31:57,17,cscareerquestions,t3_1leolz9,False,
myi1mtt,I think it’s rather pointless to be ideologically against using AI tools to help you code. You can obviously avoid contributing to the development of LLMs as that is a tiny minority of jobs. Honestly it seems like your issue is with corporatism broadly rather than tech necessarily? Just work for a company whose mission you believe in and who you believe is less evil enough.,EmiKawakita,2025-06-18 19:10:31,19,cscareerquestions,t3_1leolz9,False,
myjauq1,"I echo your view. Most upper management and BAs don't understand AI is a ""guessing software"". It doesn't have much use cases outside of being chatbots. My friend works in a big MNC - he is on project to re-develop some services. Everyone in his team is frustrated because  their requirements remain unclear since BAs keep throwing genAI and other AI terms without understanding that they don't fit into scenarios. Most of the time AI gives unpredictable and hallucinatory answers. Using AI in scenarios where it is not necessary is making their product perform slower. Not to mention testing and debugging this is hell in itself.",ObjectiveKindly3671,2025-06-18 22:58:01,16,cscareerquestions,t3_1leolz9,False,
myiwgnc,I wouldn't abandon the field. If you love and you work hard this field has more opportunities than most others. I have a friend thats a lawyer. Its brutal out there for them.,Sky-Limit-5473,2025-06-18 21:40:44,3,cscareerquestions,t3_1leolz9,False,
mz93jpi,Locking as this post has run its course comments-wise.,healydorf,2025-06-23 01:19:16,1,cscareerquestions,t3_1lhayzr,False,moderator
mz2qc6f,I honestly would never make that kind of effort for a job interview — it feels like an exploitive scam.,ThomW,2025-06-22 00:38:14,289,cscareerquestions,t3_1lhayzr,False,
mz2upkg,Good on you for naming and shaming. Upvoting and commenting to help this be more likely to show up in search results for this company.,hensothor,2025-06-22 01:05:19,106,cscareerquestions,t3_1lhayzr,False,
mz37hqu,Company looks like a scam and a half. You dodged a bullet,MCFRESH01,2025-06-22 02:26:50,21,cscareerquestions,t3_1lhayzr,False,
mz2r2re,id rather do an rng leetcode question instead of that bs,No_Loquat_183,2025-06-22 00:42:50,60,cscareerquestions,t3_1lhayzr,False,
mz3081p,"Look I know this is in hindsight but, did you licensed that code? Like ""this code ... only for demo purposes ... everything owned by me"".Because that requirements sound a little over the top.",bacmod,2025-06-22 01:40:11,47,cscareerquestions,t3_1lhayzr,False,
mz3kwia,"This is why people don't do take-homes. You can do it, give an answer you are sure is correct, but no feedback and no interview.Suppose that 30 people did what you did, and spent 30 hours on the take-home. That's 900 hours, almost a half year of work, wasted to fill one opening.For all you know, it's an automated E-Mail they sent to every applicant. Then, once you submitted a solution, then they actually read your resume, determine you aren't qualified, and reject you without even reading your work.Pre-interview coding tests enable employers to waste vast quantities of candidate time. They're expecting a time commitment from every applicant, but they're investing zero.My personal rule is that I only do the take-home if I think it will take me an hour or less.",fsk,2025-06-22 03:59:56,32,cscareerquestions,t3_1lhayzr,False,
mz3df6g,Thanks for naming and shaming. Please don’t delete the post. We need more of these.,pratikp26,2025-06-22 03:06:23,7,cscareerquestions,t3_1lhayzr,False,
mz475oc,"> “Please complete no later than 3 days from the time of this email.”> It didn’t matter when I saw the message or what I had going on--they expected urgency and precision on my end. Ugh this has driven me crazy about take-homes. I had one last year where the initial mid-week interview went well and they told me Round 2 would be a take-home ""some time next week"". Cue them emailing to me on Friday at 4pm, giving me exactly three days to complete it. Worked through the weekend, completed it in depth, nothing after that. It was absolutely not anything that could be used as ""free work"" either - it was simply a time-consuming bootcamp-level web project that took about 10 hours.All I can say is - ignore all the snobs in this thread criticizing you for agreeing to hop to a take-home assignment at all. They'll be singing a different tune if and when they find themselves months deep into a current-market jobhunt and getting maybe one or two responses per month to jump at the chance for. You do what you gotta do to try and keep the lights on right now. Fuck that company though.",BackToWorkEdward,2025-06-22 07:11:13,4,cscareerquestions,t3_1lhayzr,False,
mz3swif,"This is so unprofessional and disrespectful. I know for a FACT that a company that small is not receiving 100s of applications per day, and if you're directly emailing the company, then someone saw those messages and decided to ignore them. I've reached out to YC founders and other startup owners before and the majority of my interactions with them have been positive. I'm so sorry to hear that this THIRD LAYER (wtf sort of a name is that) company ghosted you and didn't even look at/acknowledge your work. This is like... a full hackathon worth of work...On the plus side, you got the experience/practice of building an application in a short turnaround time, but it's still terrible to have to go through the stress and anticipation all for it to fizzle out into nothing. I hope this never happens to you again and that thirdlayer goes underwater in six months.",New_Hair6216,2025-06-22 05:02:38,3,cscareerquestions,t3_1lhayzr,False,
myk485y,"Yes, during my PhD, I worked defense. It was so easy as it was mostly babysitting others and explaining concepts to them.",SomewhereNormal9157,2025-06-19 01:47:42,185,cscareerquestions,t3_1leyfsi,False,
mylha5e,"My current job is like that. My projects go on and off hold all the time. So I end up twiddling my thumbs for multiple weeks at times, cashing in my paycheck for doing literally nothing at all. And I mean nothing, 0 hours of actual work. Like I actually just have my stand up once a week, then spend the rest of the day gaming and applying to other jobs to see if I get a bite lmao.",Wayfarer285,2025-06-19 08:01:34,102,cscareerquestions,t3_1leyfsi,False,
myk7e0f,Yes. I took over two people's jobs but one slowly became unneeded and the other I automated. I did that for a couple years.,wrigh516,2025-06-19 02:06:21,49,cscareerquestions,t3_1leyfsi,False,
mykdloc,As an SDET I did once. I worked at this company thought it was going to be automation heavy it wasn't even the manual job was too easy and not complicated. I basically did an hour of work each day to show I did work. Cause usually weeks of worth of stuff I'd finish in 3-4 hours in one day. It depressed me. I started looking elsewhere for work and switched In retrospect I kinda wish I stayed at that job and worked towards other degrees while in that job. I legit feel like I could do that job while attending med school or even doing a PhD program. Maybe I'll apply back to it should I pursue one of these ventures and have steady income,downtimeredditor,2025-06-19 02:44:15,29,cscareerquestions,t3_1leyfsi,False,
mynuto1,"I did a contract gig for an insurance company. Every day in standup I said I had nothing to do, just learning C#/.NET, let me know if you need me to anything. Nobody ever asked me to work on anything. Maybe just “learn about the code base” “try to get this running in your local”.I attended company team buildings, ate free food, met all the directors in person, made jokes in meetings. They liked me a lot. They told me I was doing a really good job.I got bored and quit after 4 months of this.",Skittilybop,2025-06-19 17:05:53,16,cscareerquestions,t3_1leyfsi,False,
myk42y0,"Yes, when I was 16/17. I was a parking lot attendant. Stand and point, for hours and hours. Maybe over the entire summer where there 15 minutes of intense work. Just stand, and point.",justUseAnSvm,2025-06-19 01:46:51,44,cscareerquestions,t3_1leyfsi,False,
mykeel6,"I work 2-3 hours a day, more than ten years passed like that. The salary is low (employer knows I am working this way and payment is per hour). I cannot change anything because I simply cannot work like a normal man and even 2 hours per day often seems too much for me. Finding new job seems extremely hard for people like me, so I never tried it, it is the very first job I've found while being a student. I would rather have no job at all, never, but I have no other source of income.",hornofdeath,2025-06-19 02:49:20,38,cscareerquestions,t3_1leyfsi,False,
myn4mtz,"Yes and it was a mix of feeling useless but knowing it wont last forever and using my free time the best I could.Read ""Bullshit Jobs"" by David Graeber, great book on the subject.",None,2025-06-19 14:59:07,11,cscareerquestions,t3_1leyfsi,False,
myn4sro,"Lol, honestly sounds like a job im looking for.",EB4950,2025-06-19 14:59:55,10,cscareerquestions,t3_1leyfsi,False,
mylco6k,"First software job I had was remote and I basically did nothing for the first year and a half. I got no direction or support from my manager and he seemed busy with other stuff. I also personally know people that probably average 1-2 hours per week, sometimes less. We weren’t getting paid a lot. If you actually did the math for real hours worked, it’s probably very high.",LeetcodeFastEatAss,2025-06-19 07:16:47,9,cscareerquestions,t3_1leyfsi,False,
myqdpo7,"Work down the F500 list.The very, very, very large F500 companies are the ones that bulk-hire new grads every year just to combat natural attrition. At a company that size, there could be 0 growth, there could even be significant losses, but they still need to hire hundreds/thousands of people to combat attrition.And don't go through that list just one time. Check on it periodically. A company hiring 0 SWE's today could literally be hiring 20 tomorrow. When I job hunt and I see a company doesn't have any postings relevant to me, I note that down, and I check up on them again in a week. Timing and luck plays a huge role in job hunting, with that strategy I've found a lot of jobs I wouldn't have otherwise seen.For new grads specifically though, you're kinda out of season, unless you're talking about prepping for a 2026 graduation. College recruiting normally happens in Sept/Oct and Jan/Feb. That's when the bulk of those new grad positions get posted for large companies like that.",SouredRamen,2025-06-20 01:06:12,263,cscareerquestions,t3_1lfqua7,False,
myqbd81,"Epic Systems, Vanguard",hunygac,2025-06-20 00:52:25,195,cscareerquestions,t3_1lfqua7,False,
myqe3ai,"Insurance Companies like Geico, State Farm, and USAA",Paul_Ryan_Official,2025-06-20 01:08:26,48,cscareerquestions,t3_1lfqua7,False,
myqa63f,Any of the consulting firms would hire a lot,spencer2294,2025-06-20 00:45:17,76,cscareerquestions,t3_1lfqua7,False,
myqa9oh,Enterprise,yarrowy,2025-06-20 00:45:53,35,cscareerquestions,t3_1lfqua7,False,
myqax6h,Costco is probably the best white/blue collar employer out there.,Single_Software_3724,2025-06-20 00:49:46,29,cscareerquestions,t3_1lfqua7,False,
myrez09,"Banks tend to hire a lot of new grads for tech roles like Capital One, Wells Fargo, and Fidelity.",thenewladhere,2025-06-20 05:07:48,20,cscareerquestions,t3_1lfqua7,False,
myqac6i,I have Raytheon and Lockheed Martin in my state. I’ve seen some of their job posting specifically ask for “less than 2 years of professional experience”[Here’s the actual quote from job posts I saw]( https://www.reddit.com/r/ITCareerQuestions/s/Kzs3pKZWg1),dontping,2025-06-20 00:46:18,39,cscareerquestions,t3_1lfqua7,False,
myqw2xg,Big consulting companies. They like to hire new grads because they can bill clients the same rate for them as mid level and sometimes senior engineers..,patheticadam,2025-06-20 02:54:34,7,cscareerquestions,t3_1lfqua7,False,
myunzsy,FAANG really does hire the most honestly. If I had to rank1. Amazon2. Capital One3. Meta4. GoogleEvery other company hires much less new grads in 2025.,Fun-Advertising-8006,2025-06-20 17:59:29,6,cscareerquestions,t3_1lfqua7,False,
myztw3s,"You're basically a manager for the fastest, most capable, and well intentioned idiot you've ever hired. Micromanagement is a must.",Ffdmatt,2025-06-21 14:56:41,399,cscareerquestions,t3_1lgyd32,False,
myzxwg1,Disagree on the frontend stuff. I can ask copilot to re arrange components on a page and every single prompt will yield unstructured garbage,Crime-going-crazy,2025-06-21 15:18:15,96,cscareerquestions,t3_1lgyd32,False,
myzxi63,"Completely agree, and I'm wondering if a lot of the vibe coding hype is coming from people at AI-companies developing mainly scripts, Python notebooks and throwaway/one-of personal software programs, rather than long-lived large codebases. At least that's the workflow I've seen from people working in Data Engineering and Data Science.>\[...\] but I still think SWEs will still need to serve as an ""architect"" for the AI while the AI takes the role of the ""construction worker"" or ""builder"". This all depends on if the whole ""trust in the trend"" holds out or not. Today's AI models just scaled up and made cheaper won't replace software engineers.",muuchthrows,2025-06-21 15:16:09,45,cscareerquestions,t3_1lgyd32,False,
mz010yg,"I started using AI and found it's a good replacement for Stack Overflow. ""I need to do X, what's the library call that does something like that?"" It will answer the question, and not a different, unrelated question.The code it spits back is suspect, though. I read everything, extract what works, and hopefully learn there is a `MethodThatDoesWhatYouWantedAllAlong()`When it's wrong, I can pretty easily figure out why... but only because I have decades of muscle memory of writing real code. If I was blindly copypasting without understanding I have no idea how I would fix things.And yet even that very narrow use case is pretty damn useful.",wayoverpaid,2025-06-21 15:34:40,20,cscareerquestions,t3_1lgyd32,False,
mz00auf,"I think there’s a huge difference between “vibe coding” and properly utilizing AI as a copilot.  In my head, vibe coding is treating the AI as the designer, implementer, and manager, when it’s really just a super fast intern/junior.  Offload the small stuff, but you still have to lead it with your will and vision, and manage quality if your project gets bigger than just a few KLOCs.",Varkoth,2025-06-21 15:30:52,11,cscareerquestions,t3_1lgyd32,False,
mz0q8pm,"Bingo. AI takes on large amounts of technical debt, but (hopefully) makes it much easier to pay off this debt.My manager handed me off a project that started as a vibe coding session. Basically they have no clue why everything is falling apart, so they created a dashboard to gain observability into service outages.This dashboard is an Azure workbook with heavy UI elements that was created in the portal (browser GUI) and they decided they want this converted into code and deployed via CI/CD. Let's have Chad Jebity do it!The result was this very large codebase that essentially creates deployment stages for every workbook that gets added into the pipeline and it iterates through a list to populate the data. It literally takes 20-30 minutes for me to run the pipeline and validate a change that usually takes 1 click in the browser.I've been trying to explain to them that this won't scale and will eventually have to get replaced, but trying to get them to understand Big O notation was like drawing blood from a stone. I've realized life is much easier if I just go with the flow and use those 30 minute pipeline runs as a break to focus on sharpening my own axe.",Willbo,2025-06-21 17:46:29,6,cscareerquestions,t3_1lgyd32,False,
myzvnsk,If anything vibe management has more potential,None,2025-06-21 15:06:14,7,cscareerquestions,t3_1lgyd32,False,
mz333me,"SQL was the first time this claim was pushed. It was meant to be a kind of programming that managers could do. These AI tools will end up the same, I think.",pitched-black,2025-06-22 01:58:29,3,cscareerquestions,t3_1lgyd32,False,
mz0ct5j,"There's a shit ton of people who want to be in tech but don't have the skillset or will to actually do the work so the notion of vibecoding is super appealing because it lets them spit on SWEs who held the upper hand. There's also a ton of B2B companies being built on the idea of getting rid of SWEs at other companies to make their money.Finally there's a shitton of tech ""influencers"" esp on linkedin who market themselves as being on the forefront of AI (they got into chatgpt suddenly two years ago) to sell their bullshit.All that aside, I think AI has improved greatly over the last two years, I can get some solutions- there's no fucking way I'll unleash it on a production code base that's more than 5 files though. At best I'll ask it to give me some options for a problem and I'll adapt its solution to my needs. The thing is your average vibe coder can't make heads or tails of what gets spit out and they'll gleefully shove it into github (barely knowing what that is) and proclaim themselves an engineer.",coffeesippingbastard,2025-06-21 16:37:01,5,cscareerquestions,t3_1lgyd32,False,
mz0mcnf,"I was using Cursor for a while, and it was pretty good, but it really sucked a lot of joy out of my daily work. I don't want to be reading code, it takes me so much longer than just typing out what I need with a bit of Copilot Autocompletions. For me I think what i've really grown to enjoy is just continuing to use Neovim with CoPilot completions and a CLI based agent. I find the CLI based agents really solid for querying my code base about something I might want to do, and when the task is small enough that the CLI can spin up something that I can read in a few seconds to determine if it's correct. But I found that \_miromanaging\_ the agent in Cursor is really just not how I want to develop with AI on a daily basis. It doesn't bring me joy, and if it doesn't bring me joy, my work is going to suffer and bugs will slip through. I'm not afraid of the vibe coding revolution tbh, the only thing I am sort of concerned about is that organizations might start demanding certain text editors as mandatory.",DennisTheMenace780,2025-06-21 17:26:32,2,cscareerquestions,t3_1lgyd32,False,
mz7lzlm,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-22 20:20:23,1,cscareerquestions,t3_1lhxl8f,False,moderator
mz7n1j0,"Let the move and the decision settle for a bit. A few weeks is not enough time to start feeling comfortable. If you're absolutely certain that you hate the move, I would honestly start a job hunt before asking to ""undo"" the move. They'll probably tell you no, for the reasons you mentioned.",Ettun,2025-06-22 20:25:48,640,cscareerquestions,t3_1lhxl8f,False,
mz7mjm9,"I think it’d be hard for at least another year. Just curious, what do you not like about MD compared to TN?",Gentle_Jerk,2025-06-22 20:23:16,119,cscareerquestions,t3_1lhxl8f,False,
mz7wrw0,> I've been here a few weeks and feel I made an impulsive decisionLmao that's me every time I move,high_throughput,2025-06-22 21:15:46,66,cscareerquestions,t3_1lhxl8f,False,
mz88j4x,"I expected to see a location move from a highly desireable part of the USA to...the middle of nowhere...not the opposite.It seems that the issues stem from a doubling in cost of living plus your favorite hobby not being as easy to do in MD.All of which...you should have factored in before the move. Also OP. MD is tiny, people that like to shoot and have it as a BIG part of their identity would have moved to VA. Yes it can be more expensive and time consuming....but you have to pay to play when you move to the tristate area/NOVAAgain...something you should have factored in. My friend got a nice CS job and LOVES shooting...but its in Mass...so guess what he did..he moved to NH and commutes 45mins from there every day.",millionTofu07,2025-06-22 22:19:45,21,cscareerquestions,t3_1lhxl8f,False,
mz7uu2z,Don't be impulsive in both decisions. Give it some more time before you decide if you like it there or not.,dllimport,2025-06-22 21:05:37,45,cscareerquestions,t3_1lhxl8f,False,
mz8eayf,"Wait six months.- you might find you like it- you might get your head together- you might date someone nice- at the six month mark, you can tell your boss you made a mistake, without looking like a total idiot",yojimbo_beta,2025-06-22 22:52:54,15,cscareerquestions,t3_1lhxl8f,False,
mz8apiq,"Yes, it would be career suicide. Don't do it.Keep a stiff upper lip, and just work your way through this. It's not as bad as you think it is. Just try to calm down and appreciate the things you do have.",Turbulent-Week1136,2025-06-22 22:32:08,14,cscareerquestions,t3_1lhxl8f,False,
mz7mo4t,"No one can answer this for you, we don’t know your company. I can say that HR having to re-do tax documents isn’t a big deal, unless they are just lazy",Gawd_Awful,2025-06-22 20:23:55,11,cscareerquestions,t3_1lhxl8f,False,
mz7o1jg,Is there someplace else in the DC radius you can try living in the meantime?,goldie987,2025-06-22 20:30:56,8,cscareerquestions,t3_1lhxl8f,False,
mybkyjt,"The job market is absolutely bonkers awful right now. Just keep applying, and hopefully get lucky. Networking (the people kind) to try to find someone who can help you get a role is also beneficial, but I think we're all in the same sinking boat ):",Twitch-Drone,2025-06-17 19:46:06,159,cscareerquestions,t3_1ldwr42,False,
mybnapx,I know this is not what you want to hear but someone should say it. You realize it was a mistake to turn down the offer you had right? Even though it was a lowball offer? Don't make that mistake again,chrisfathead1,2025-06-17 19:57:10,162,cscareerquestions,t3_1ldwr42,False,
mybrg5i,"If you’ve had 50 interviews and only 1 job offer but you rejected it, it seems like you need to work on your interviewing skills.",White_C4,2025-06-17 20:16:35,75,cscareerquestions,t3_1ldwr42,False,
myc7gu2,There are a thousand people like you. We need to let people know to avoid this degree unless you passionate,Imnotneeded,2025-06-17 21:33:35,29,cscareerquestions,t3_1ldwr42,False,
mybnhdg,"Not trying to pile on, but you really should have taken the super underpaid job",Euphoric-Guess-1277,2025-06-17 19:58:02,36,cscareerquestions,t3_1ldwr42,False,
mybp0vr,"Where in the process are you dropping out? Candidate screen? Interview 1. 2, 3? Near offer stage? Helps diagnose the ""issue"".",Eze-Wong,2025-06-17 20:05:13,9,cscareerquestions,t3_1ldwr42,False,
mycma4u,"Of those 50 interviews, how many proceed past the initial stage/screening?That seems like a huge number to only get 1 offer, thar you felt was low.",unstoppable_zombie,2025-06-17 22:51:38,6,cscareerquestions,t3_1ldwr42,False,
mybkpr4,"Outside of tailoring your resume for each job, if your family situation allows for it apply nationwide and be open to relocation. Government spending is going to be nearly zero in the near future and you'll be competing with people they laid off so a DOD hotspot is not necessarily a great place right now",Primary-Walrus-5623,2025-06-17 19:44:55,10,cscareerquestions,t3_1ldwr42,False,
mybsl4l,"Everyone saying it was a mistake to turn down the offer, it’s not. Know your worth. You have experience and a degree, maybe just find local companies and apply directly? I usually find the best listings that way instead of on indeed or something",AnswerMyPrompts,2025-06-17 20:21:55,23,cscareerquestions,t3_1ldwr42,False,
mybus4f,There is no space in market right now for new grads. There might never be. It’s a tough situation. Take anything you can get in this direction and try to build experience. But the future is not looking great for anyone right now.,Hutcho12,2025-06-17 20:32:09,15,cscareerquestions,t3_1ldwr42,False,
mzdfzi9,"Implement proper testing and CI/CD pipelines asap.  AI is a tool to be wielded, but it’s like a firehose.  You need to direct it properly for it to be effective, or else it’ll piss all over everything.",Varkoth,2025-06-23 18:22:51,155,cscareerquestions,t3_1linwzs,False,
mzdg1mh,time to introduce code reviews?,new2amsterdam,2025-06-23 18:23:08,41,cscareerquestions,t3_1linwzs,False,
mzdkava,"Whenever I see the question about AI replacing coders anytime soon?Hey where did all the code come from to train the models? Public repos. Know how much of that is shit? Kids trying to get jobs and making their own weekend backends, some clobbered together shit for kaggle, etc. And all the good code? Private repos. That's not floating out there for people to know. Facebook, Twitter, Google isn't exactly sharing that what I can imagine is slightly better maintainable code to be ingested by AI. So yeah, the code we are getting from AI is equivalent to a fresh grad making a capstone project. Yeah there's good repos out there with open source projects, but LLMs cannot tell what is good code from bad code. The majority wins. And do we think most of the code out there is good?God, I just imagine some poor soul has consumed some manifestation of my public repo made 10 years ago and shudder.",Eze-Wong,2025-06-23 18:43:33,18,cscareerquestions,t3_1linwzs,False,
mzdv1gs,"consider viewing this at the 30,000 foot view... we're already seeing the effects of over reliance on AI. Most school aged children are increasingly relying on LLMs to produce answers. hardly anybody uses traditional search engines anymore. What happens when the models have consumed all the original content? The models will never be perfect, but if we allow LLMs to indiscriminately consume any and all information, it's going to results in an endless feedback loop of robots talking to robots, eating each others' shit and feeding us the same... the current generation is is already trending towards lacking the skills to produce something on their own. Ive noticed that my own reliance on llms have watered down my skills and I've gone back to using Google (but it's so hard not to fall into the temptation of easy answers)On the flip side of this, picking and choosing the content for an LLM can be equally as damaging. Dont like a competitor's product? Easy! Only allow the llm to ingest data based off the competitor's negative feedback. We will have no way of knowing what's real",IAmBeary,2025-06-23 19:35:09,4,cscareerquestions,t3_1linwzs,False,
mzesd71,">input the entire section into Claude and ask to fix it and then copy and pasteThis is not ""vibe coding"" by the way.Vibe coding isn't even really a thing, it's 99% just people who think using ChatGPT to generate some code here and there constitutes as vibe coding.",Ok_Heat_9976,2025-06-23 22:19:06,3,cscareerquestions,t3_1linwzs,False,
mze0peh,"Without good E2E tests with something like Playwright, unit tests, very disciplined scope and git commits, shit will go real fast directly into a brick wall.",Icy_Foundation3534,2025-06-23 20:02:34,1,cscareerquestions,t3_1linwzs,False,
mzecv1l,"Don’t worry too much. This has been happening as long as startups have been around, long before AI!Try not to over-index on the mechanism of failure. Add testing for critical features that can’t break (and be honest about this - there are always features where a breakage isn’t that big of a deal)",Nosoups4u,2025-06-23 20:59:54,1,cscareerquestions,t3_1linwzs,False,
mzf4og4,"My 2c:If your co-founder is non-technical, they need to either be doing competitive analysis, marketing, outbound sales, user research (probably this and sales are #1), design, or setting up times with VCs. You can’t afford to have your velocity killed by this so early on.",xSonicPenguin,2025-06-23 23:26:19,1,cscareerquestions,t3_1linwzs,False,
mzdhz76,lol it will replace us. Just not now def within 10 years.50% is a lot considering this hasn’t been hyped up for long.,dahecksman,2025-06-23 18:32:18,-7,cscareerquestions,t3_1linwzs,False,
mzdipjd,"This is the answer. I’m not a fan of vibe coding either, but even if this was hand-authored code no contributor should be able to single-handedly bring down the app. I would mandate PR reviews as well.",josephjnk,2025-06-23 18:35:48,33,cscareerquestions,t1_mzdfzi9,False,
myi8h9s,Will the LLM bubble pop? Yes.Will LLMs stop being used as a tool? No.,minimaxir,2025-06-18 19:43:31,433,cscareerquestions,t3_1leqgte,False,
myibqrm,I think we might see a pop similar to the dot com bubble in the early 2000s. There are just so many Gen AI based startups popping up with a ton of VC backing that I think will eventually fail to turn a profit as the cost of using these AIs increase. It will never go away though and will likely still be useful in a ton of applications. But yeah I think a lot of the AI based startups that have popped up recently will not exist in several years.,StanleyLelnats,2025-06-18 19:59:16,84,cscareerquestions,t3_1leqgte,False,
myi8k8y,"Yes it will, but not before most of the jobs are sent overseas.A lot of my peers are getting job offers but they're ALL Gen-AI wrappers. I don't know anyone getting an offer at a ""conventional"" company recently. I'm worried that the jobs being sent overseas are those ""non-AI"" SWE roles/companies and if GenAI pops it'll hurt US SWE's at a way bigger level than anyone is anticipating.",ForsookComparison,2025-06-18 19:43:55,86,cscareerquestions,t3_1leqgte,False,
myibgbq,"Hard to say.If it truly lives up to its promise of being a total paradigm shifts of automation (I don't expect this to happen) then I wouldn't say ""pop"" so much as ""level out."" Think about Microsoft Office (e.g. spreadsheet software) - absolute game changer, rocketed Microsoft to a *massive* valuation, but you don't really think of it today as the thing that's changed the world. A little closer to home, think about Kubernetes and Docker - again, *absolutely world-shattering* for the industries it affects, a market of somewhere in the $200B range, that replaced entire teams of inefficient human labor... but it's just part of our tools today, and it had a net positive effect on jobs.I think it's not going to live up to its promise, my guess is we'll see a ""crash"" more like we saw with cloud tech 20-odd years ago. The 10% of useful tools will stick around, and the 90% of AI cash grabs / unsustainable businesses will die off.Also, most forms of gen AI are **currently** *wildly* unprofitable - the market is currently operating under the assumption that costs will fall dramatically, and/or benefits will continue to improve. I think that's going to be an interesting factor in whichever future ends up being true. There's fair evidence to support falling costs, and (so far) there's been a decent history of rising benefits. There's a lot of ground to cover though.",sessamekesh,2025-06-18 19:57:52,35,cscareerquestions,t3_1leqgte,False,
myi9831,"I don't think the market niche for building AI integration tools like what you've described will shrink, but investors are probably over-invested in it and they're bound to realize that sooner or later",CardiologistOk2760,2025-06-18 19:47:07,16,cscareerquestions,t3_1leqgte,False,
myiafe5,Yes it will. But not after thousands of applications fail because they’re shoddily slapped together AI slop that nobody understands and is able to fix in any sensible amount of time,Round_Head_6248,2025-06-18 19:52:55,9,cscareerquestions,t3_1leqgte,False,
myi9uzu,"I belive the foundation models will get stronger and don't see any bubble regarding them, however 95% of the wrappers will be dead in 3 years.",Melodic-Ebb-7781,2025-06-18 19:50:11,21,cscareerquestions,t3_1leqgte,False,
myib4eg,"Of course. We're in the [hype cycle](https://en.wikipedia.org/wiki/Gartner_hype_cycle), although I can't tell you when we'll reach the peak.",Embarrassed_Quit_450,2025-06-18 19:56:16,19,cscareerquestions,t3_1leqgte,False,
myi8va2,"Pop, eh its tough to say. At some point all of the investment money that has gone into gen AI will dry up as they will expect a return on investment and most arent generating any profit at this point in time, most probably never will. That said, there are still more than enough areas where it can be justified as a business expense due to the non-monetary value it brings to the table.",fake-bird-123,2025-06-18 19:45:24,8,cscareerquestions,t3_1leqgte,False,
myio44n,"To counter your specific take on how the bubble will pop, I think even that is ultimately too complicated for most businesses. Even if all that happens, I don't necessarily think it's going to pop the bubble.I'm not sure how the ""AI chats and wrappers bubble"" is going to ""pop"", but I'm more inclined to think it will just be a slow death. Eventually people are going to be too unhappy, and stop wanting to throw money at subpar AI solutions. McDonalds investors aren't going to be happy after the Nth 3rd party fails to create a solution that gets AI to provide real returns, and I doubt McDonald's is seriously going to attempt to string together an AI system in-house to make something that actually can.As a small aside, I think Apple is actually making the smartest move in the room, and talking a big talk about AI to keep investors happy, but just waiting for all the hype to wash over before bailing out on their supposed ""AI efforts"" (which all seem to be marketing material, rather than anything that is hogging up engineering resources).",SpookyLoop,2025-06-18 20:59:17,7,cscareerquestions,t3_1leqgte,False,
myj7gs4,Im about to be laid off... not very confident. Been applying for months.,sircontagious,2025-06-18 22:39:15,349,cscareerquestions,t3_1leui53,False,
myjc45c,I'm a senior with 10 years exp and the more I hear the horror stories the more I think I'll never find another job,Anxious-Possibility,2025-06-18 23:04:55,192,cscareerquestions,t3_1leui53,False,
myjmfbl,"2 months? Absolutely not. I wasn’t laid off, just putting out feelers to stuff that I was overqualified for. It took 9 months to get an offer that was 30k less than I make. Good luck to everyone searching.",endurbro420,2025-06-19 00:01:48,180,cscareerquestions,t3_1leui53,False,
myjbgxi,Not confident at all. Which is why I've stayed in my current toxic ass role for so long. Have literally been talking about quitting for over 2 years but too afraid to make the jump.,Sock-Familiar,2025-06-18 23:01:24,107,cscareerquestions,t3_1leui53,False,
myj9a6k,Not confident at all,t3klead,2025-06-18 22:49:22,103,cscareerquestions,t3_1leui53,False,
myjpu5u,"If I dropped my standards, was willing to accept something in the 75-90k mark, and willing to go in office I’m pretty confident I could land a role within 4-6 weeks.All that would suck, and I’m probably closer to senior than mid level at this point, but that’s my take",kingofthesqueal,2025-06-19 00:21:36,97,cscareerquestions,t3_1leui53,False,
myjwa21,"I have 15 YOE, lead a team on a billion dollar software project lasting multiple years, and I have my name on patents granted in multiple countries. Saying all that I have 0 confidence in finding a job in 2 months.",diablo1128,2025-06-19 01:00:02,128,cscareerquestions,t3_1leui53,False,
myk8gih,I was fairly confident until I saw the comments.,MaximusDM22,2025-06-19 02:12:46,54,cscareerquestions,t3_1leui53,False,
myj5m19,I have 3 companies from my previous work that all want to hire me. I just don't want to deal with cleared work unless I have to.,Difficult-Lime2555,2025-06-18 22:28:55,61,cscareerquestions,t3_1leui53,False,
myj7d8m,"I had my pick of a few different positions, but most were in-office. It took a little longer for me to find a fully remote role to replace my current one, but I know if I got laid off, I could be in some company's office in a few weeks.",OkConcern9701,2025-06-18 22:38:40,18,cscareerquestions,t3_1leui53,False,
mz7h2aj,"As the security guy at my job responsible for performing digital investigations, I don't look at anybody's shit unless an order comes down from HR at the very least, or General Counsel if it involves me snooping on anything that might include personal information.This SVP is setting themselves and the company up for some major grief. All because they suck at managing.",robocop_py,2025-06-22 19:54:44,158,cscareerquestions,t3_1lhwsmq,False,
mz7l1tl,do people use work machines for personal use anyways? i just assume everything i do on a work device is public knowledge,octocode,2025-06-22 20:15:35,137,cscareerquestions,t3_1lhwsmq,False,
mz7ma5v,"This is in HR and General Counsel territory, as already pointed out.A written statement from either of those that they are happy with this should be a minimum requirement to proceed.Building anything without a clear legal paper trail (ESPECIALLY IF REQUEST WAS JUST VERBAL) just means that your co-worker will be thrown under the bus when inevitable lawsuits come in.",Itchy-Science-1792,2025-06-22 20:21:55,40,cscareerquestions,t3_1lhwsmq,False,
mz894z6,"It’s great to know the SVP is hard at work spying on people doing all the ACTUAL work. Definitely earning their 500,000+ / year salary and bonuses! What commendable work, truly a saint.",csthrowawayguy1,2025-06-22 22:23:11,54,cscareerquestions,t3_1lhwsmq,False,
mz8b0if,"Since you're processing and potentially storing personally identifiable information, there's privacy compliance laws involved. If used on employees in the EU for example, you might have to comply with GDPR. Not doing so can land the company as well as your coworker personally in legal trouble.",Accomplished-Dot-333,2025-06-22 22:33:53,13,cscareerquestions,t3_1lhwsmq,False,
mz8agly,"Depends on what the dashboard does.If it pulls aggregate numbers? Eh. I'd discuss with my manager and ask if he thinks we should do it. My manager is responsible for how my time is allocated and me going off the books needs to be for a good reason.If it's directly providing access to peoples emails or on an individual level? I'm started a thread with legal with my manager and skip cc'd before doing anything.You shouldn't be doing involve yourself, but your coworker should be talking with their manager at the least because even if they don't care about legal issues, who gets access, how are you handling allocating resources (dev bandwidth/support and hosts/computer/storage), who is maintaining this in the future, etc are all things that need to be discussed.",termd,2025-06-22 22:30:43,10,cscareerquestions,t3_1lhwsmq,False,
mz8srdx,"Anonymously advise the General Counsel and/or the Compliance department. Alternatively send an anonymous email asking your colleague how that secret monitoring program is coming --- cc'ing the CEO and VP/SVP of compliance/legal. In the anonymous company mailbox ask ""What is the best way to report unethical behavior anonymously?"" Follow those directions. \_\_\_\_\_\_\_\_\_Now it is possible that your CEO knows all about this and has tasked your manager with building an alternate tool. There are a number of reasons why this could be justified: \- another company or another division used the same tool that your company is using. They were just issued a significant fine or regulatory finding because its use was ineffective. (more on this below) Your CEO wants to avoid being tarred with the same brush. \- the CEO thinks too many people were aware of the use of sapience. And therefore the investment wasn't paying off. CEO figures to cut the recurring maintenance cost of the third party product and your boss has said they can build an in-house tool that will be just as effective. On point 1 you should be aware that regulators regularly share findings with each other. So if company A gets a 'noted deficiency' the other auditors look for that in other companies. \_\_\_\_\_\_\_\_\_\_\_It's also possible that your SVP is being defensive. S/He's wary that if/when something goes wrong they will be the scapegoat. Possibly feels that the political winds are blowing the wrong way. S/He's setting this up so s/he has evidence if the feces hits the oscillating wind generator. Another way your SVP could be protecting themself is if they know there is some regulation or law that requires email retention or email monitoring. They are proactively avoiding a whole series of audit comments and/or regulatory comments. \_\_\_\_\_\_\_\_\_\_\_It would be interesting to know the dynamic between the Board of Directors and CEO. The Board should have a Board Member responsible for Compliance / Audit. If you can identify that person you could send an anonymous email cc'ing the Board Chair as well asking whether they were aware that email monitoring was being discontinued. Don't say anything about someone building a replacement. See what happens.",PsychologicalCell928,2025-06-23 00:17:06,3,cscareerquestions,t3_1lhwsmq,False,
mz8tekl,Should he have access to those logs per SOD?,R1skM4tr1x,2025-06-23 00:20:55,2,cscareerquestions,t3_1lhwsmq,False,
mzbc0cy,"So. Like. I did this. The thing is, either you do the dashboard or they find software that takes screenshots every 30 seconds and compares. The job market sucks too much to refuse work",nineteen_eightyfour,2025-06-23 11:58:50,2,cscareerquestions,t3_1lhwsmq,False,
mzau8w7,Is this in China or Russia?,raygud,2025-06-23 09:29:53,1,cscareerquestions,t3_1lhwsmq,False,
myxk6jh,Can you reveal which company is this? This sounds like criminally underpaying their employees,Efil4pfsi,2025-06-21 03:48:07,270,cscareerquestions,t3_1lgn79s,False,
myxkrs9,"I’d go $60k near home, cobol or not, software development experience is usually translated across languagesBesides the obvious part of more money and closer to home, moving away to only make $40k would be extremely tough. The company probably sucks if they’re treating even new grads like this.Either one is better than nothing, and you can continue to look once you’ve landed something. Every month you are at either one makes you more likely to land another role, so get whatever one you can unless it’s absolutely horrible, which anything paying less than $60k i’d consider horrible",BurgooKing,2025-06-21 03:52:25,95,cscareerquestions,t3_1lgn79s,False,
myxl8ra,"First job, optimize for learning as much as you can and building a portfolio of projects and results to fill your resume. $40k is super low. Let them know you have a $60k offer and negotiate up. Negotiate to work remotely if you live in a LCOL area. Keep interviewing and dip out if you find something better. You can choose to add it to your resume if you’ve only been there for a few months, and if someone asks why you’re leaving just say it wasn’t a good culture fit. $40k is better than $0k, you get experience, you can continue interviewing. Hopefully it’s not a lot of work hours since it’s only $40k.What industry is the cobol role in? The subject matter experience and general programming experience will be valuable when interviewing for your next job.",firstapex88,2025-06-21 03:55:50,32,cscareerquestions,t3_1lgn79s,False,
myxkmux,40k a year sounds like robbery. What company and where? That’s 19 dollars an hour assuming you don’t work more than 40 hours a week but you probably will because they’ll overwork you. You can make more working in fast food in many places.,APotatoFlewAround_,2025-06-21 03:51:24,92,cscareerquestions,t3_1lgn79s,False,
myxk9nj,I'd take the cobol role,Effective_Hope_3071,2025-06-21 03:48:44,41,cscareerquestions,t3_1lgn79s,False,
myxn8u2,"You could make more by working at Amazon...warehouses. Entry level warehouse worker earns more than that.Take the COBOL role, this is a no brainer. I'd question what kind of work youd really be doing for $40k/year. COBOL may not be modern but it's not like it's not work experience.",iprocrastina,2025-06-21 04:10:45,10,cscareerquestions,t3_1lgn79s,False,
myxkvz6,"Im praying this is engagement bait lmfao, no way 40k is real",Ekimerton,2025-06-21 03:53:16,19,cscareerquestions,t3_1lgn79s,False,
myxo22a,Cobol. That's the better pay and the better resume equity. Cobol is inseparable from major institutions and nobody is learning it. You will be able to write your own checks in 10 years.,NotHosaniMubarak,2025-06-21 04:17:00,12,cscareerquestions,t3_1lgn79s,False,
myxnjtq,What is your financial situation and what is the col difference between the places? Can you afford to make payments on presumably your student loans and live of these wages?,standermatt,2025-06-21 04:13:06,4,cscareerquestions,t3_1lgn79s,False,
myxw4sy,"If you get cobol experience, then you should be able to land a solid gig in banking or government for excellent benefits. That talent pool is dying off while entire industries still run on it.",Baxkit,2025-06-21 05:22:43,2,cscareerquestions,t3_1lgn79s,False,
myfj9f2,"That's the neat part, you don't.",Fun-Meringue-732,2025-06-18 11:36:40,439,cscareerquestions,t3_1leefir,False,
myfsqup,I'm looking into local companies ran by family or friends. My internship sucked so i need a huge boost to have any chance at supporting myself haha,thewillsta,2025-06-18 12:37:49,60,cscareerquestions,t3_1leefir,False,
myhq77z,"You side gig for income (e.g. Uber), do side projects, attend career fairs, and keep applying for years and years until you hopefully hit the lottery. That’s the reality of the job market these days.",Successful-Head-736,2025-06-18 18:16:04,51,cscareerquestions,t3_1leefir,False,
myg3mh1,"Dunno, but it doesn't get better. I have 13 YoE and am currently a node dev. I'd like to break into golang but can't because I didn't have golang exp(no employers aren't counting personal projects)",budding_gardener_1,2025-06-18 13:39:10,61,cscareerquestions,t3_1leefir,False,
mygualj,You may need to take things into your own hands to make your own experience. Founding a startup or business and doing what you think is right for real people,PM_ME_VEGGIE_RECIPES,2025-06-18 15:48:25,10,cscareerquestions,t3_1leefir,False,
myfy1mj,"Focus more on getting good internships by showing up for careers fairs and networking with your family and friends to land one. Had a college friend that got decent internships, and wasn’t entirely sure which direction or focus to go in. After he got his first full-time job at Nike right out of college (cause of the internships), he was able to explore and decide that he wanted to focus on cybersecurity. If you know you like one more than others, focus on that. I heard cybersecurity is not easy to get into, but idk if it really matters what your focus is when you don’t have any work experience. Try and get a freelance gig this summer, maybe even do your own project that you put on a portfolio to help you get an internship next year. Start applying for 2026 internships in October",Silver-Impact-1836,2025-06-18 13:08:24,17,cscareerquestions,t3_1leefir,False,
myg72eu,"Having a decent portfolio can help, especially if you can talk about why you made the choices you did.",None,2025-06-18 13:57:19,8,cscareerquestions,t3_1leefir,False,
mygeat0,"There are many CS jobs with entry level salaries, tho",amesgaiztoak,2025-06-18 14:33:15,36,cscareerquestions,t3_1leefir,False,
myk2vrf,"When you have no experience, building up experience is more important than making money. You should try to reach out to small start ups/companies ideally via connections. And then you should take the job/internship even if it’s for very little money. If you need to continue living at home with your parents or make money on the side then do that. But try to build up 6 months/1 year experience. Enough to hop on to a different job. I speak from personal experience. My first internship I made under 1000 a month for a company with like 5 people. I then switched to a bigger startup where I made about 25 an hour. After that I was able to land a Microsoft internship which was a big step. One of the things that helped me get that job is that I also did some side projects which made a good impression during the interview and buffed my resume. From there I went to work full time at Meta, and now I’m making over 400k a year. So ideally you build up over time, and try to constantly learn, get experience, and move up. Hopes this helps.",Legal_Peak9558,2025-06-19 01:39:47,5,cscareerquestions,t3_1leefir,False,
myfx7v5,Is it too late to change degree now?,Imnotneeded,2025-06-18 13:03:38,16,cscareerquestions,t3_1leefir,False,
mzdheo3,Personally I’d take the voluntary layoff and the free move to NYC since you really want to go there. If you don’t like Meta you can leave when you vest or earlier if you really hate it.,PhantomCamel,2025-06-23 18:29:37,393,cscareerquestions,t3_1lio5hs,False,
mzdhanu,Take the severance and go to meta,Tak_Kovacs123,2025-06-23 18:29:06,212,cscareerquestions,t3_1lio5hs,False,
mzdlfnk,Sounds like they're all doing layoffs so why not take the severance if you're moving where you want to go anyway.,sudden_aggression,2025-06-23 18:48:58,61,cscareerquestions,t3_1lio5hs,False,
mzef87b,"Go for it. IMO the toxicity of Meta is overstated on places like Blind, and Google's culture is worse than it used to be. It's true that Meta is overall more ""intense"" but what this really means is that people don't coast. Getting high ratings and raises is very doable, which is why everyone is trying to do it, and I wouldn't say that's a bad thing. The E4 -> E5 promotion is probably easier to get at Meta.The biggest differences in my mind are:1. Meta is more customer metrics driven; a good project is a project that made the numbers go up. Whereas Google is more focused on alignment: if the senior engineers agreed your design was good, and your leadership thought it was a good idea, and you executed it well, then it was a good project regardless of what happens after. On the positive side, this means that at Google you can spend more of your time on risky, speculative things; at Meta you have to think about your time more like an investment portfolio, with some things you're pretty sure will pay off to ""fund"" your riskier ideas. On the negative side, as you advance in your career at Google you have to spend more of your time sucking up to leadership, because there is no objective way to determine whether your projects were good so it is more of a popularity contest.2. Google has better engineering practices, infrastructure, and documentation. This follows from Meta being an entertainment company; Instagram users will come back even if the app crashes sometimes, but Google Cloud customers wouldn't tolerate this. Things break pretty often at Meta. The downside of this is that you spend more time firefighting during oncall. The upside is that it's much easier to ship things. Code and design reviews are less nitpicky and there are fewer barriers to just doing things. It does mean that more knowledge at Meta is in people's heads rather than written down, so you have to build out a network of experts. There is more chatter and context switching as a result, although overall there are fewer meetings which is nice.If you were someone who disliked the bureaucracy at Google, Meta will be a good change of pace. They are both good companies to work at, it's all about what you value.",FourForYouGlennCoco,2025-06-23 21:11:29,43,cscareerquestions,t3_1lio5hs,False,
mzdmw28,"The fact there are volunteer layoffs, i'd say take the layoff and go elsewhere. I would search what that severance package look slike. I've perosnally have never gotten a severance package but I think they put rules against still getting severance when you start a new job. Like if you are starting next week, dont expect to also get severance and paid at your new job. But even without the severance, volunteer layoffs sounds like forced layoffs are around the corner.",Broad-Cranberry-9050,2025-06-23 18:55:50,12,cscareerquestions,t3_1lio5hs,False,
mzdiqog,Is that an E4 offer? I would take that in a heartbeat.,Daedelus123,2025-06-23 18:35:57,6,cscareerquestions,t3_1lio5hs,False,
mzdjypm,What does the severance look like?,netwhoo,2025-06-23 18:41:54,7,cscareerquestions,t3_1lio5hs,False,
mzdhe7a,Stay in Google,TryAggressive9338,2025-06-23 18:29:33,10,cscareerquestions,t3_1lio5hs,False,
mzdi5r1,Personally that’s not enough for me to jump to Meta tbh.,juwxso,2025-06-23 18:33:10,13,cscareerquestions,t3_1lio5hs,False,
mze6x98,I’m gonna catch shit for this for gearing ring but I wouldn’t recommend going to Meta right now.Every anecdote I’ve heard about Meta within the past 2 years is that they will burn you out. The politics and backstabbing sounds insane.Unless you just hate your life at Google wouldn’t take the risk.,Full_Bank_6172,2025-06-23 20:31:51,6,cscareerquestions,t3_1lio5hs,False,
my6x6kz,"For ICT3, a base pay of 200-250 would be too high. However TC of 200-300 would def be normal depending on team.",coinbase-discrd-rddt,2025-06-17 02:01:14,107,cscareerquestions,t3_1ldaxdp,False,
my6v7tm,"For apple, stock portion of compensation will be higher than your intel data point. Make sure consider your total compensation when talking to recruiter, not just base pay. Also post to blind for opinions.",probabilititi,2025-06-17 01:50:21,147,cscareerquestions,t3_1ldaxdp,False,
my6z2kv,Did you ask what level There is no way Qualcomm could pay higher though,zninjamonkey,2025-06-17 02:12:01,35,cscareerquestions,t3_1ldaxdp,False,
my759if,"You never (rarely?) get flushed out because you ask too much. Its so hard to get a candidate through the hiring pipeline that once you're at the offer phase, the employer is also partially locked in, especially at a bureaucratic FAANG like Apple, so you're in a better position than you might think. Plus your obviously in a red-hot specialized field with huge demand so you really are in position of strength.They'll take into account what you said and give you a counter-offer. You'll get a chance to counter-offer again. Don't pay any attention to the ""talk to senior hiring manager"" bullshit, that's the equivalent of the car salesman telling you ""I need to run that by my manager"". I've had tons of friends (not all of them great engineers) submit outrageous hiring demands, they never get flushed, they just get offered what they get offered.",affabledrunk,2025-06-17 02:48:22,67,cscareerquestions,t3_1ldaxdp,False,
my74qpl,"I'm currently at Apple.This conversation should mostly be happening with your recruiter, not your hiring manager. I'm surprised they asked you.Look at [levels.fyi](http://levels.fyi) \- you should be able to find your current level at Intel and your projected level at Apple, and that should give you an idea of the range to expect. In general what I see is that Apple offers lower base pay but higher TC for ""equivalent"" levels.Unless you're an extremely strategic hire, Apple generally only negotiates based on your current salary or competing offers. If your offer doesn't match your current TC, Apple will ask for evidence (like a pay stub) and probably beat it. They will probably increase stock to match, not base salary.Apple's stock refreshes are generous. Even if you only meet expectations, you'll get a stock refresher every year and that will increase your annual total compensation.Don't forget that Apple hasn't had mass layoffs like most other tech companies. It's one of the more stable companies I've worked at. You'll work hard but you won't be in fear of losing your job.",spicy_tuna_code,2025-06-17 02:45:15,91,cscareerquestions,t3_1ldaxdp,False,
my7gtfn,You should have just gave a range for TC rather than base pay.,machine2Strong,2025-06-17 04:03:51,17,cscareerquestions,t3_1ldaxdp,False,
my7rc63,This is for sure a case of misleveling. The published range doesn’t necessarily mean the full range. They could be trying to hit a budget by hiring a certain level even though the posting is broader. The recruiter’s reaction shows to me they thought they were on the glide path to a mid level hire but now realize you are already earning senior level pay.They probably need the hiring manager to make a call on hiring you at the higher level or walking away. Do they have budget? Do they think you’re qualified from the interviews? Or do they need more interviews to assess for that higher level?,doktorhladnjak,2025-06-17 05:27:01,16,cscareerquestions,t3_1ldaxdp,False,
my7upp1,"They’ll probably offer significantly more RSUs than Intel and you can expect refreshers. I’m surprised you didn’t mention Apple’s RSU offer, there should certainly be a starting grant.",suboptimus_maximus,2025-06-17 05:56:24,9,cscareerquestions,t3_1ldaxdp,False,
my7jw7g,"I’m at Apple, joined with exactly the same YoE. My TC is about $500k, split between base, RSU and 10% bonus. Apple’s first offer is extremely low. Show them competing offers and they will exceed those.",bluedevilzn,2025-06-17 04:26:35,17,cscareerquestions,t3_1ldaxdp,False,
my8y67q,You didn't fuck up. No company should dump you for giving too high salary expectations. If they have brains they will give you an offer anyways.,Professional-Put5380,2025-06-17 11:55:54,6,cscareerquestions,t3_1ldaxdp,False,
mykteol,"Chill. Take #1. You’re in a great spot.Your skip knows you have a management problem and that’s not necessarily you, or only partially. Essentially, You’re a top performer fighting with a manager who doesn’t understand what you do for the business, and your skip probably has a strong idea.Rather than lose you to poor management, he’s agreed to take you on directly, and needed you to meet your new skip and get buy in from him on you.This is a fast pass to promotions, because it means you’ll be doing tasks typically above your level working for people closer to budgetary and promotion decisions.Be easy to work with for your new manager, and this will make great futures for you. Chances are, you’ll have a much easier time with this manager who will want to give you more autonomy anyway.",CustomDark,2025-06-19 04:33:15,247,cscareerquestions,t3_1lf1fa2,False,
mykq5e8,Just do 1. you will get pipped after FMLA anyways,just_a_lerker,2025-06-19 04:09:02,76,cscareerquestions,t3_1lf1fa2,False,
mykvmoq,"For the record, FMLA isn't a magic button you can hit that makes you un-fireable.If the company has anything on paper that says you were a poor performer, or if they have any way to gather metrics that could paint the picture you were a poor performer, they can absolutely fire you while on FMLA.You're protected from being fired ***because of*** taking/requesting FMLA, but that protection does not extend to anything else.I've actually been in a position identical to yours before. It was pretty bad, I took it to my skip, my skip was on my side but there wasn't anything they could do besides try to mediate which my manager clearly wasn't open to.So I kept my job, I kept a smile on my face and played good employee, I still let my manager/skip know I was unhappy with the situation, but I also reassured them I'm a professional and this won't impact my ability to do my job.I job searched, and left the minute I had something else lined up. Not a soul on the team was surprised when it was announced I was leaving. That's what I would do in your situation. I wouldn't try to play games with FMLA or anything.With the opportunity to transfer to a sister team, you even have it better than me. I'd *absolutely* do that if it were presented to me. But only because that means I get a solid 6+ months to job search on the side, because that's generally how long it takes for someone to become productive on a new team.",SouredRamen,2025-06-19 04:50:10,23,cscareerquestions,t3_1lf1fa2,False,
mylynzk,"Take option 1.Non-tech managers are the bane of my existence as a sde previously and currently as a manager. Nothing you can do about it, moving on is the easiest.You really can’t tell your manager he’s a micro manager. There’s no changing this and you’re just pissing him off. It’s good to see your skip is aligned on this, but you took all the risk for no reason. What I’ve found when dealing with micro managers is that you’ll be labelled defensive if you don’t agree with their views. It’s some sort of manipulative technique they use to gaslight you, fk that. I get called defensive every year but I still don’t see a PIP (exceeds last performance review).",ChadFullStack,2025-06-19 10:47:23,15,cscareerquestions,t3_1lf1fa2,False,
mylw3e5,"This is pretty routine stuff during a career. It can be stressful but you have an easy out - just do the transfer. I would also take a step back and consider your behavior in all this. The way you're telling the story, you're a high achiever who is the victim of a micromanaging manager who has a big ego. Is it possible there are actually growth areas for you that they've identified and you're being defensive and combative? This is really common with junior engineers - they start making progress and gain a little independence, think they're much more self sufficient than they actually are because they have no perspective on things, and then can't accept feedback because it means reassessing their view of their work as maybe not quite as perfect as they'd imagined. If you can learn to accept feedback and address the good stuff and let the incorrect stuff slide off your back without a strong reaction you'll be much better off.",seinberg,2025-06-19 10:24:59,6,cscareerquestions,t3_1lf1fa2,False,
mykq8jg,Is your manager Indian,cwolker,2025-06-19 04:09:40,39,cscareerquestions,t3_1lf1fa2,False,
mymom7e,Take #1,Doombuggie41,2025-06-19 13:37:29,3,cscareerquestions,t3_1lf1fa2,False,
mykw6hb,Why the fuck would they pay this person? How did they get the job?,abluecolor,2025-06-19 04:54:18,4,cscareerquestions,t3_1lf1fa2,False,
myl3s72,Never quit before you have another job lined up..,tkyang99,2025-06-19 05:56:54,2,cscareerquestions,t3_1lf1fa2,False,
mybbvp8,"These offers are close enough that I'd choose the city/job I like better (for me it'd be Austin), but the difference in maternity leave is no joke if you're expecting to have kids soon.",ryan_770,2025-06-17 19:02:37,249,cscareerquestions,t3_1ldvmqu,False,
mybbpb9,"I can’t imagine leaving Chicago for either of these places (biased because I’m in Chicago, but still), lmao. But if you’re dead set on leaving, Offer2 is the best bet. Maternity leave being 4 weeks is insanity on Offer1, with the added portion of 3 days in office and being the sole person who’s responsible for DevOps. Plus, your money is going to go much farther in St. Louis than the real estate nightmare that is Austin",blackiechan99,2025-06-17 19:01:47,196,cscareerquestions,t3_1ldvmqu,False,
mybgh5a,"As someone who has lived in St. Louis, but lived in Austin for a few months in college, I can say it depends a lot on what you plan on doing. 130k goes a long way in St. Louis , especially in real estate. And if safety is your concern, the city has been improving, but it’s still better to live in the county.As for Austin, the suburbs are newer, but far more expensive. The summers are blistering, the winters amazing, and there is way more to do in the city. If you want activities and live In a city, then probably Austin. But you mentioned maternity leave so I’m assuming you’re planning on starting a family in which case it’ll probably be the suburbs . And if that’s the case a quick Zillow search can show how much cheaper stl is. Plus the benefits are better in the 2nd offer.",42nd_loop,2025-06-17 19:24:26,25,cscareerquestions,t3_1ldvmqu,False,
mybn2dc,"20k is not worth being the sole devops person of 18 developers even if it was a straight comparison cost of living. Thats a mental health nightmare waiting to happen and the 4 week maternity leave is a joke And will only be more exasberated as the only devops. That also means pressure to not call out sick and pressure to come back early from maternity leave. When you have multiple people, someone can help shoulder the responsibility. That alone without knowing the other specifics is a huge red flag for me personally. Offer2 is the deal to take based on the information posted.",guten_pranken,2025-06-17 19:56:05,24,cscareerquestions,t3_1ldvmqu,False,
mybggyo,"St. Louis offer is better and that money will be luxury there. Plenty of people here are likely biased on the cities based on where they live. I’ve known plenty of people who fell in love with St. Louis and decided to settle down there. I personally live in Cleveland, and despite the hate it gets online, I love it here. We have crime too, but it’s in pockets and you know where to avoid it. I imagine St. Louis is similar. There will be nice neighborhoods near any large city, so just work with a good realtor to find the best location to move to.",cabbage-soup,2025-06-17 19:24:24,35,cscareerquestions,t3_1ldvmqu,False,
mybra8k,"I'd do St. Louis as the suburbs are nice, the maternity leave is a million times better, lower COL, less in office time, and being the sole devops person in Austin sounds terrible.Also, I personally would be majorly adverse to moving to the American south in general. It's HOT down there and that's only going to get worse. I also expect climate refugees will be a bigger issue there in the long term.",SuperDuperCoolDude,2025-06-17 20:15:49,8,cscareerquestions,t3_1ldvmqu,False,
mybjsma,I'm on paternity leave as we speak. I have 6 weeks and I ended up taking an extra week using vacation hours. 4 weeks especially for the mom is unacceptable,HKSpadez,2025-06-17 19:40:29,6,cscareerquestions,t3_1ldvmqu,False,
mycc6xy,The biggest challenge is how often does she change jobs and what are the sizes / stability of firms. If you move to either how challenging will it be to get another role? That being said your costs to live in STL will allow you to save a ton more. Either way network in the new city you end up at to really develop a few contacts outside of her firm. Good luck.,HackVT,2025-06-17 21:57:36,6,cscareerquestions,t3_1ldvmqu,False,
mybc4sm,I’d choose Austin personally,yato17z,2025-06-17 19:03:50,16,cscareerquestions,t3_1ldvmqu,False,
mybkgsw,"Saint Louis is a diamond in the rough; it's definitely a city that feels like an actual city.My biggest regret was having my first job out of college there, due to being able to cruise control.",Senth99,2025-06-17 19:43:44,5,cscareerquestions,t3_1ldvmqu,False,
myji3w0,You’re getting fight or flight response from sitting down to workTherapy,gfivksiausuwjtjtnv,2025-06-18 23:37:40,193,cscareerquestions,t3_1levy02,False,
myji9e0,Burnout?,RecognitionPast8105,2025-06-18 23:38:31,39,cscareerquestions,t3_1levy02,False,
myjgzni,Speak to doctor and get some time off,Bconsapphire,2025-06-18 23:31:29,29,cscareerquestions,t3_1levy02,False,
myjimxx,"Go to the doctor, tell them about your symptoms and get some blood work done. I kinda felt the same but a little less extreme, I had headaches, lots of fatigue and brain fog and felt really unmotivated to do anything. Turned out to be iron deficiency",plantsarecool213,2025-06-18 23:40:36,15,cscareerquestions,t3_1levy02,False,
myjheus,"Hi there as a programmer I hope I can help you out. Try blue light glasses, exercise and 45 mins in front of of the screen + 15 min break from screen every hour, can still focus on tasks off screen",namonite,2025-06-18 23:33:49,45,cscareerquestions,t3_1levy02,False,
myjj7nv,This is burnout. Take at least 2 weeks off. Talk to your boss.,PatchyWhiskers,2025-06-18 23:43:47,7,cscareerquestions,t3_1levy02,False,
myjsy68,And this is why the 9-5 5 days a week sucks.,RadiantHC,2025-06-19 00:40:10,6,cscareerquestions,t3_1levy02,False,
myl0ytk,Thats why we all dream of a farm life. No more fucking screens.,DatMysteriousGuy,2025-06-19 05:32:55,5,cscareerquestions,t3_1levy02,False,
myjhx2n,Go to the optometrist. Try to limit your screen time by planning out the code on paper or in your head. Go for walks to plan out your code. Spend as little time actually typing as possible. Use a voice recorder and transcribe your ideas using whisper. You can use that as inputs to gpts.,import_awesome,2025-06-18 23:36:38,8,cscareerquestions,t3_1levy02,False,
myjmqvb,"Test your eyes by reading story/novel on screen. I had same issues, thought burnout, later checked like this and I still was facing issues while reading light fun stories. That marked off burnout/anxiety. Later I got diagnosed with Binocular Vision Disorder after thorough eye test (regular optometrist can’t detect it). I wear Neurolens now and back on track on screen usage.",adib2149,2025-06-19 00:03:38,4,cscareerquestions,t3_1levy02,False,
mzci7pe,"Well IBM is still around but hardly anywhere near what it once was from all the layoffs and offshoring they pulled in the 90s. You can think of AI as a form of offshoring, end result is basically the same and AI is actually worse than the offshore talent.",StatusObligation4624,2025-06-23 15:47:12,89,cscareerquestions,t3_1lijxx8,False,
mzcirvz,"I was re-watching Office Space the other day and was amazed to see the movie set in 1998 featured a company doing mass layoffs of tech staff, asking those who remained to work unbelievable hours, all while offshoring jobs to Singapore. This movie could’ve been made today.My conclusion: this never works long term",henryofskalitzz,2025-06-23 15:49:49,217,cscareerquestions,t3_1lijxx8,False,
mzctkqn,"They don't have any idea of how to increase revenue so the only thing they can do is reduce expenses. This happens all the time, usually an indicator that the company is in decline.",rmullig2,2025-06-23 16:40:44,57,cscareerquestions,t3_1lijxx8,False,
mzcqvag,"It works for the managers and execs who can show how they saved on expenditure. It nearly always results in worse products. Unfortunately, upper management are always safe and exempt.",tjsr,2025-06-23 16:27:56,18,cscareerquestions,t3_1lijxx8,False,
mzdbmla,"managements thinks yes, so it's a yes >in the long term that's called ""another CEO's problem""",NewChameleon,2025-06-23 18:02:20,8,cscareerquestions,t3_1lijxx8,False,
mzcii7k,"Layoffs in theory let you lay off your worst performers.Pushing out lays off your 2nd best in my experience. (The best having golden handcuffs because they joined the company really early and have stock options and ""best"" is partly contextual).",poipoipoi_2016,2025-06-23 15:48:33,16,cscareerquestions,t3_1lijxx8,False,
mzcje8o,It depends on the aspiration of the executives.Everyone thinks they are Twitter and can just coast millions through established user base.,kevin074,2025-06-23 15:52:44,3,cscareerquestions,t3_1lijxx8,False,
mzdly6l,"I argue that it DAMAGES the company in the long run, but it doesn’t matter because the c suite will be long gone by then.The blueprint is always the same: new executive team gets in, they start re orgs and cutting here and there to justify their big compensation packages, but the company is now a shade of its former self that made it successful to begin with.New hires are usually obedient corporate drones, and everyone is playing internal politics as opposed to innovate or care about company products.In the best case scenario, if the company was big enough, you can have a IBMfication process in which the company transforms into a legacy low paying crap, but more often then not it’s just a complete decline until acquisition or failure.",EntropyRX,2025-06-23 18:51:24,4,cscareerquestions,t3_1lijxx8,False,
mzdwljr,"I worked for Control Data. At its peak, it was a leading computer manufacturer that rivaled IBM and had 60,000 employees. When I joined, it had quit manufacturing hardware and was down to 1500 employees. The CEO was trying to focus on opportunities in software and services. He said something that has stuck with me, “You can’t shrink yourself to greatness.”",jake_morrison,2025-06-23 19:42:48,4,cscareerquestions,t3_1lijxx8,False,
mzdeqy3,"Well, we are in sort of unprecedented times. There's a lot of talk about tech being a boom-and-bust industry, but even to an experienced tech exec nowadays they've seen three busts:1. Dot com2. Great Recession3. TodayThe difference with the first two is that tech (and especially web-based software + SaaS) has grown its talent pool significantly since 2008. One man's trash is another man's treasure. Once companies set in these Three Horsemen of the (Tech) Apocalypse (RTO, Offshoring, and Stack Ranking), those companies in the past would be seen as ""failing"" culturewise. However, in 2023-2025 the normal cycle of job changing was disrupted, so you have a lot of built-up dissatisfaction from people who want to change jobs, but can't find new opportunities. When opportunities arise at these companies with those qualities, the new folks may be arriving from something that was an even worse dumpster fire. A good example is GEICO. They fired swaths of their IT/SWE and have a 2.6 on Glassdoor. They are pretty much bottom of the barrel as far as large companies. However, if someone was working at Geico and transitioned into something like Amazon, they might find it a breath of fresh air.The real problem at the end of the day is an oversupply of engineers. Fix the problem at the source and reduce enrollments.",csanon212,2025-06-23 18:16:56,3,cscareerquestions,t3_1lijxx8,False,
mzcohw4,"Before you entirely abandon this field, here are some things that might help.1,000 applications is intense. But applying online is also a saturated channel and an increasingly inefficient one. In the past 3 years, a bunch of recruiters got laid off, and according to our data, there are about 3X fewer recruiters working now than there were in the first half of 2022.At the same time, the number of (non-spam) applicants for eng jobs has 3X'ed since the first half of 2022. I don't have numbers for how many spam applications companies are getting, but if I had to guess, I'd say that it's probably another 3-5X increase.So, recruiters are maybe 30-50X less productive than they were a couple of years ago. Which, for you, means that applying online isn't the best approach.Before you completely give up and switch to a field that takes over 10 years to start making money, try doing outreach instead. You can give yourself a deadline. Something like, ""If I can't get some responses by January 2026, I'm going to med school."" And until then, I'd focus on trying to get in the door.So, what to do? I'm one of the authors of Beyond Cracking the Coding Interview. We have a whole chapter on how to do outreach that includes some templates, and it's free: [https://bctci.co/free-chapters](https://bctci.co/free-chapters) It's the first document, and just go to Chapter 7: Getting in the Door.When you do your outreach, in the part of the template where you should mention something unique about you, try writing about how you were able to automate your job. I bet it's a good story.Finally, if you post a link to your resume/LinkedIn in a response to this comment, I'd be happy to review and share some notes. That said, you (and others in your shoes) probably don't need to spend lots of time on your resumes because recruiters typically scan them for brands, and either you have them or you don't. Anyone who tells you to spend a lot of time polishing your resume is probably selling snake oil.",alinelerner,2025-06-23 16:16:50,51,cscareerquestions,t3_1lijpsg,False,
mzct6vr,"Unfortunately, this is a common occurrence. There is no real advice other than upskilling in the field, perhaps adding AI/ML to your knowledge base? Otherwise, welcome to reality where corporations don't care about your experience, degrees, or anything. They simply bias select who they want for hire.",dj911ice,2025-06-23 16:38:56,30,cscareerquestions,t3_1lijpsg,False,
mzcqht5,Go back to school and become a doctor.,Good_Focus2665,2025-06-23 16:26:11,22,cscareerquestions,t3_1lijpsg,False,
mzcysuz,If you wanna go med school don't go carribean just go to an American medical school Do post bacc courses and if needed do the special masters program and go to a medical school. Carribean Schools business model is based on dropped outs. Kevin Jubbal on Med School Insiders did a video on YouTube on carribean med schools and he just wasnt impressed. It'll probably be easier to match and potentially study and get score on USMLE if you do it in the US. I'm contemplating switching to medicine too but i got a long road ahead of me with post bacc courses and such cause my gpa was near the mid 2. I use to be a bio major.,downtimeredditor,2025-06-23 17:04:56,7,cscareerquestions,t3_1lijpsg,False,
mzci8ng,"I have been unemployed since November 2024. I’m in the same boat with 5.5 YOE. Keep your head up, 6+ months isn’t that long to be out of a job. I know it feels like it’s over, but keep applying, upskilling and interviewing. You will land a position, recruiters understand the market is bad and imo, will always overlook the time gap if you have a reasonable explanation….",illnotsic,2025-06-23 15:47:19,17,cscareerquestions,t3_1lijpsg,False,
mzcicvu,Have you had your resume reviewed ? What roles are youShooting for and where are you looking ? What sort of network do you have ? What’s your university network look like ? Do you volunteer at all?,HackVT,2025-06-23 15:47:52,5,cscareerquestions,t3_1lijpsg,False,
mzd1htd,"You mention being in a tech hub, are you looking for in-person roles exclusively in your current city? Being open to relocation might help if you weren’t considering doing so. Also that MD comparison isn’t great imo, two very different styles of working and a vast difference when looking at wlb",code_in_420p,2025-06-23 17:17:05,2,cscareerquestions,t3_1lijpsg,False,
mzeb3v0,This hits home,p0st_master,2025-06-23 20:51:40,2,cscareerquestions,t3_1lijpsg,False,
mzehavt,"I’m a SWE and yeah this market completely sucks. That said, you should really consider the commitment medical school is. Here in the us you have four years of medical school plus like three to seven years of residency then an additional couple of years of fellowship. In addition to the time commitment it is incredibly expensive (I’ve dated a doctor and she had close to a million dollars of loans - you have to add in living expenses on top of medical school). And you have to literally apply and hope to match for your residency positions amongst other candidates. It is extremely competitive and stressful.Medical school is not an option for me. I am not interested in medicine and as someone with a chronic illness I cannot imagine dealing with 10s of patients as complicated as my medical history EVERY day. On top of that you take call, a lot.I considered going to law school for a while and I am still wrestling with the idea. But I just don’t know if I see it happening. Its is arguably just as stressful as working in Medicine but less stable. And honestly I just don’t know if it’s a good fit for me due to the competitiveness and lack of connections in the field.If you want to be a doctor then medical school is the only way to do it. But keep in mind you should NOT go to medical school just because you want a job.Going to physician assistant or APP school might be an option if you want to work in the medical field and have similar clinical responsibilities. It’s still stressful but not nearly as grueling as being an MD or DO. It’s more stable than tech but most PAs tend to make less than senior software engineers as well and have quite a bit a loans.",fast_flamenco_,2025-06-23 21:21:50,2,cscareerquestions,t3_1lijpsg,False,
mzf94rc,Zero criminal convictions. Well done.,CdubyaAbides,2025-06-23 23:50:58,2,cscareerquestions,t3_1lijpsg,False,
mz25lem,"if you were to ask this in 2020 the answer wouldve been certainly. right now there's way too much uncertainty imo, there's also heavy saturation at the entry level.",S7EFEN,2025-06-21 22:31:38,191,cscareerquestions,t3_1lh8le1,False,
mz268b5,"I mean there’s government, non high tech defense contractors, non tech company dev jobs, etc. but it will still take a lot of effort to get your foot in the door if you’re starting from nothing.And be aware if you don’t keep up with the industry / skills you may be left behind and struggle to find a new job if you get laid off etc.And also if you don’t actually like it, you may still get burnt out. You’re staring at a screen all day, sometimes with little human interaction, being forced to solve problems. It’s not a job like at a factory or elsewhere where you come in and know exactly what you’re doing every day, day in day out. You will need to think and exert effort to keep your job.",penguinmandude,2025-06-21 22:35:31,55,cscareerquestions,t3_1lh8le1,False,
mz2692o,The competition is indeed quite high. The field is saturated at the entry and junior level. You do have to leetcode during your off hours if you want a new job. Or keeping up with new technologies. Are you okay with spending that time outside work?,Illustrious-Pound266,2025-06-21 22:35:38,20,cscareerquestions,t3_1lh8le1,False,
mz27h1g,"way too competitive for me, im changing majors. you got to compete with not only the people here but with people from india. but if your passionate then go for it",WholeNo7237,2025-06-21 22:43:02,29,cscareerquestions,t3_1lh8le1,False,
mz262gl,"Yeah it is. You can make a whole career out of being average and being easy to get along with and doing your job and going home. They aren't more dedicated than you. They face corporate red tape and get put back in their place. Or they follow the [Peter Principle](https://en.wikipedia.org/wiki/Peter_principle) until they fail.If you're an entry level overachiever coming in half an hour early and staying half an hour late and answering every question on a group meeting, everyone's going to hate you. Don't be a Boy/Girl Scout.",NewSchoolBoxer,2025-06-21 22:34:31,26,cscareerquestions,t3_1lh8le1,False,
mz25ogy,You can do it. Those really smart people will probably go work at Meta to make a million dollars. You can get a great local or state government job doing minimal work with really solid\* pay\*solid compared to any profession other than software eng,No-Amoeba-6542,2025-06-21 22:32:09,12,cscareerquestions,t3_1lh8le1,False,
mz2kh20,Right now? Hell no. 4 years ago? Sure.,fake-bird-123,2025-06-22 00:01:52,4,cscareerquestions,t3_1lh8le1,False,
mz2segu,"If you enjoy programming, this is a good career. If you don't, do something else.",ToThePillory,2025-06-22 00:51:00,4,cscareerquestions,t3_1lh8le1,False,
mz27uq5,"Absolutely not. Unless you are working with old languages or low level languages you at the very least need to believe that you have the potential to be better than the majority of others. You will have to overachieve. You will have to push through extremely high levels of stress. You will have to make sacrifices. You will have to solve every puzzle. You will need to be insanely patient. You will have to appeal to your coworkers. I think of it as being no different than pursuing a career in music, extreme sports, or day trading.But hey if you like Java, cold fusion, or being a database monkey it’s normally a cakewalk.",No_Expression2927,2025-06-21 22:45:21,10,cscareerquestions,t3_1lh8le1,False,
mz2aa1o,"No. According to most here...you need ""passion"". So instead of eating and sleeping...you need to code. You need 10 projects in 5 different languages at all times on your resume.You going to college for 4 years mean nothing.",shitisrealspecific,2025-06-21 23:00:03,3,cscareerquestions,t3_1lh8le1,False,
mz50q76,No cheaper options? Also if you really want something stable do something in healthcare.,cs_broke_dude,2025-06-22 11:53:30,105,cscareerquestions,t3_1lhkm49,False,
mz5m0v9,"Definitely don't go to that school. Too expensive.Go to either a public university in your own state, or check out programs like WGU. I went to WGU and it was super affordable and I learned a lot. No matter what if you do pursue CS you need to do side projects and additional outside learning. Side projects are very important and it shows that you enjoy / are interested in CS. Speaking of, make sure before you go to school for CS I highly recommend doing some self learning and make something small. I know a lot of people who go to school for CS, spend the money and realize they don't like it mid-degree and switch OR even worse get their whole degree and not like to code. Make sure when selecting your major you aren't just picking something that ""makes a lot of money"" but also consider what you think is interesting. Then consider how you get there, and in many many cases you don't need a degree depending on what you decide. The last advice I'll give is that college is always there. I get the impression you're younger, and from experience I think going to college right after high-school is one of the worst things about society. In the past going to college and ""figuring things out"" wasn't a big deal because it was priced very very differently. Now due to the cost of most colleges I'd rather recommend a new high school grad to spend time working and looking into career fields they find interesting. Then reach out and find people doing those things and see if you can find someone who will help answer any questions about what its actually like doing those things and the day-to-day.",ENGROT,2025-06-22 14:11:54,23,cscareerquestions,t3_1lhkm49,False,
mz4q8dd,"Do you love C.S.? If so, go for it. I'm sure you will find a way. if you want money... no.",Fred_dy_,2025-06-22 10:22:01,69,cscareerquestions,t3_1lhkm49,False,
mz4ubp0,"Nurse plz, if I can go back in time definitely medical field.",NiceGame2006,2025-06-22 10:59:59,47,cscareerquestions,t3_1lhkm49,False,
mz5j3ed,"Nobody knows what any career will look like in 4, 20, or 50 years.",Coldmode,2025-06-22 13:55:22,16,cscareerquestions,t3_1lhkm49,False,
mz4ql9o,"AI will alter almost every white collar job so I am not sure how you would save yourself by switching. As for outsourcing, that has been a thing for several years now and there are still more high paying developer jobs in USA than in any other country. With time and policy things will change. If those are your only two reasons I wouldn't switch.",Abyss_Kraken,2025-06-22 10:25:30,20,cscareerquestions,t3_1lhkm49,False,
mz517dg,"Yo. I’ve been in this industry for the last several decades. AI is a set of tools that can be used to expedite work and outsourcing is always going to be around in either consultants for specialty work or delegation to remove simple processes to keep costs down. Re- outsourcing Outsourcing or delegation of labor has been around for my entire career. Firms tend to dabble in an effort to think they cs save money and that staff are fungible. What’s not fungible is learning and understanding of vestigial projects. Where outsourcing works is when the team is seen as another dev group and can solve projects entirely on their own without constant supervision from home office because staff have relocated there and the firm is invested for the indefinite future. Otherwise it’s executives dabbling with consulting groups that fail because they need to call in more staff to do what is being asked or write better requirements. Re - AI Just another set of tools that really depend on where they are sourcing more than anything else. Think of moving from paper to a computer in the 70s to do bookkeeping. The general ledger was a legit book where inflows and outflows were recorded. I worked on wall street where funds would calculate their values and holdings at the end of day by hand. Think of a circular saw , if you don’t know how to cut 4x8 sheet of plywood well your just going to do it faster than a handsaw. Same deal with a car - it’s great you can drive it but if you don’t have a general clue of where you’re going you are going to go somewhere quickly. It helps you expedite but you need the expertise to understand holistically what you want to accomplish.",HackVT,2025-06-22 11:57:10,22,cscareerquestions,t3_1lhkm49,False,
mz4rzuu,you really want guarantee become a dentist or nurse. ee will do well but you’re not gonna make cs money but it’ll be stable. plenty of people still and will make bank in cs but not everyone,Seantwist9,2025-06-22 10:38:57,20,cscareerquestions,t3_1lhkm49,False,
mz4z4et,"By the time you graduate, AI would have been deeply embedded into every industry and job. I won't matter where or what you switch to.",LeagueAggravating595,2025-06-22 11:40:46,8,cscareerquestions,t3_1lhkm49,False,
mz66s2p,"Unless you are very passionate about CS and coding, I would not recommend it. Go for a traditional engineering degree.",GeuseyBetel,2025-06-22 16:00:14,3,cscareerquestions,t3_1lhkm49,False,
mz6dkhj,You really shouldn't lie on those My lies will get drowned out if everybody else is doing it too,blind-octopus,2025-06-22 16:35:26,341,cscareerquestions,t3_1lhs4g7,False,
mz6gd7v,I wouldn’t so much lie as I would “round up” on your experience.,PrincipleNo8675,2025-06-22 16:49:53,140,cscareerquestions,t3_1lhs4g7,False,
mz6gzbj,"My company puts programming languages in “nice to have” not requirements. In that case you definitely shouldnt lie. The whole rationale is that we are fine with you not knowing that exact language, the only way you can mess this up is if you lie and we catch you in lie.Recently we saw an uptick in people failing coding exercises bc they insist on using the language in our description even though we tell them a million times they should use the language they are most comfortable in which I think is really silly.In the case you mentioned though it’s one of those things where, sure you can lie to get thru the initial screen. Next step they make you do a coding exercise expecting 5 yrs of react competency, can you pass that?",Dry_Row_7523,2025-06-22 16:53:00,19,cscareerquestions,t3_1lhs4g7,False,
mz6fqka,"There is a big difference between making stuff up out of whole cloth and embelishing. To use your specific example of react and django... If you had 2-3 years experience in those and said 5 to get through the resume screens then sure, as long as you actually are well versed in it I, as an interviewer/hiring manager, really don't care. If you have zero years experience in it (even with experience in a related tech) then i will be wasting my time interviewing you. Some experience comes with time and really cant be crammed. Any competent interviewer (which you might get lucky and not have one) should be able to tell if you crammed for a week to look like someone who ahs 5 years experience in a specific tech or not.",Shatteredreality,2025-06-22 16:46:42,53,cscareerquestions,t3_1lhs4g7,False,
mz6eiis,"I don’t like lying, but realized if I don’t my applications get auto rejected.",NaranjaPollo,2025-06-22 16:40:23,25,cscareerquestions,t3_1lhs4g7,False,
mz6og2b,Yes. And then study the thing and create projects with it before the interview,heytherehellogoodbye,2025-06-22 17:29:21,5,cscareerquestions,t3_1lhs4g7,False,
mz6tdgl,"No, most people know that the Javascript frameworks are pretty similar, so often interviewers will be able to make the ""close enough"" judgment call. But if you fake it and get hired lying about react experience thinking it is angular, you're getting fired in the first week. A lot of companies are acceptable of the adjustment period for switching Javascript frameworks, but then that is part of on boarding.Also Django is it's own beast, java and c# are similar, but thinking python, go or c are similar is really looking for trouble",Alienbushman,2025-06-22 17:53:09,7,cscareerquestions,t3_1lhs4g7,False,
mz6slvt,"A professor once gave me the advice that if I've touched the tech at all, I have experience in it as far as my resume is concerned. Has worked well in getting my foot in the door. Just be ready to back it up in the interview.",lordnachos,2025-06-22 17:49:28,4,cscareerquestions,t3_1lhs4g7,False,
mz6yqio,"If the goal is that 2% of applicants pass the resume screen, and 5% of applicants lie, then almost everyone who passes the resume screen will be liars.",fsk,2025-06-22 18:19:55,3,cscareerquestions,t3_1lhs4g7,False,
mz6kve3,"You shouldn't lie about stuff like attending Harvard or having a PhD but I think most other things are fair game. In fact, I would encourage you to lie as much as you can. In my case, I basically fabricated a company and said I was an engineer there. This is all true to some extent. The company is a real LLC but I am the only person there and don't actually do anything. Of course I don't tell them any of that, and they don't ask. From their perspective it's another no-name startup that will likely go bankrupt in the next 5yrs \*shrug\*",_cyano_,2025-06-22 17:12:07,6,cscareerquestions,t3_1lhs4g7,False,
myx7dqk,"The first comment by /u/okayifimust in the original post was right on the money. No hate just straight to the point with good advice and reasoning and it turned out to be exactly what you were missing. So who cares about the negative posts, lift up the ones that were crucial",TerriblyRare,2025-06-21 02:21:27,26,cscareerquestions,t3_1lgklmb,False,
myxatep,"Happy to hear it! I'm also self-taught and trust me when i say i know the backlash :grinning_face_with_sweat: mine is for more health-reasons though. Atm I'm building my portfolio up on github, but honestly as i learn more, i realize why i probably wont get a job anytime soon.I can understand the frustration that csgrads have, spending 4ish-years in university while struggling is not easy, especially to not be able to find work afterwards.",Husy15,2025-06-21 02:43:23,3,cscareerquestions,t3_1lgklmb,False,
myy2v2f,is linkedin Premium worth?,DandadanAsia,2025-06-21 06:23:21,3,cscareerquestions,t3_1lgklmb,False,
myxanx5,"Any advice on the personal projects part? I'm trying to think of something unique to make, but a bit lost :(",Vegetable_Trick8786,2025-06-21 02:42:23,2,cscareerquestions,t3_1lgklmb,False,
mz5l0gm,Nice one and nice of you to post the positive follow up,MeTechBwoy,2025-06-22 14:06:16,1,cscareerquestions,t3_1lgklmb,False,
mzfcmtr,Always nice to hear the success stories. Someone out there needed this.,FreeRangeDingo,2025-06-24 00:11:15,1,cscareerquestions,t3_1lgklmb,False,
mycwpp0,genai is incredibly ass at low level stuff,ArcYurt,2025-06-17 23:48:26,74,cscareerquestions,t3_1le2ir2,False,
myd085y,"So far I mostly use GenAI for tasks I wouldn't have done before rather than to augment tasks I already do.I have a lot more random scripts, and do more POCs when doc writing then I used to. The type of stuff that isn't hard and doesn't require good code, but can be nice to have.",EngStudTA,2025-06-18 00:08:38,26,cscareerquestions,t3_1le2ir2,False,
myd2x2i,"GenAI isn't readyThe problem is that you need a SME to review the nonsense that the GenAI puts out unless you're doing something truly trivial, but as we lose expertise because we are using genai to solve our problems for us, we'll become more and more prone to error.This is not the same as coding become higher level and we moved away from assembly, the shit that genai puts out is straight up incorrect and that's pretty rare from a compiler or an IDE.",termd,2025-06-18 00:24:22,11,cscareerquestions,t3_1le2ir2,False,
myd6xxo,"I feel like I’m just ending up slinging shitty code out of my laptop at a faster rate, that’s all.",hatsandcats,2025-06-18 00:47:47,6,cscareerquestions,t3_1le2ir2,False,
myd7i7r,Ready for what?,iBN3qk,2025-06-18 00:51:02,5,cscareerquestions,t3_1le2ir2,False,
myd2rbq,"Tools don't need to be perfect. They just need to be one step better than what existed before. And just like any tool, the user has to know how to use it.We are obviously not at the point where you can hand the tool directly to your product owner and skip the developers. But in the hands of an experienced developer, it is already a very effective time saver. Smart code completion is great if you know how to structure your code and have it write single-purpose functions. Tools like Claude Code are great for one-and-done scripts. They can write boilerplate code, and you can use them as interactive documentation.",Feroc,2025-06-18 00:23:26,4,cscareerquestions,t3_1le2ir2,False,
mycxdkf,"Its great at increasing coding speed, that translates into higher productivity.",Glad-Interaction5614,2025-06-17 23:52:09,4,cscareerquestions,t3_1le2ir2,False,
myd2i7y,"So OP is going to be unemployable within the next 2 years lmao. If you arent using LLMs to improve your productivity right now, you are just asking to get canned.",fake-bird-123,2025-06-18 00:21:55,4,cscareerquestions,t3_1le2ir2,False,
mycyi1t,it’s not ready but the recruiters don’t know that,Financial-Flower8480,2025-06-17 23:58:36,1,cscareerquestions,t3_1le2ir2,False,
mypvo2i,Are you putting this pressure on yourself or is someone breathing down your neck?,ewhim,2025-06-19 23:20:43,112,cscareerquestions,t3_1lfoxxp,False,
mypxacm,"Takes at least 6 months at a new company to properly judge individual velocity. Takes time to learn the codebase, nuances of what people look for in PR’s, what people can get you the right answers to questions, etc. Just get a little better each day and you’ll be fine, and check in with your manager to verify expectations are being met on a regular cadence. If your boss is content, that’s all you need to worry about.",SeaworthySamus,2025-06-19 23:29:44,30,cscareerquestions,t3_1lfoxxp,False,
myq2een,Honestly for first job and only there a month getting 2 tickets done a week is stellar IMO. I’m 12 YOE and would never expect a junior to work at that speed if they just started. Hell I expect juniors to basically be interns++ but maybe I am too nice,Material_Policy6327,2025-06-19 23:58:46,17,cscareerquestions,t3_1lfoxxp,False,
myr5b8s,"1) You're a junior, you're supposed to be slow. Don't compare yourself to your seniors or to other juniors who have been there longer when it comes to speed.2) Onboarding for a new engineer takes from 3 to 6 months. Even if you were a senior, you'd STILL be slow after only a month. 3) Focus on being slow correctly: slow is smooth, smooth is fast. Communicate what's blocking you, don't surprise your team or your lead, and learn as fast as you can. Focus on understanding your team's process and best practices, and testing your changes rigorously. Seek to pair with every other person on your team at least once.",thashepherd,2025-06-20 03:55:37,5,cscareerquestions,t3_1lfoxxp,False,
mypx3f8,"It's normal to take time to learn a code base even if you're more senior, if it's complicated. It's also your first job, nobody's expecting you to be as quick as your other colleagues. Chill:)",Anxious-Possibility,2025-06-19 23:28:39,8,cscareerquestions,t3_1lfoxxp,False,
mypvryg,First job at half the speed is phenomenal. That's why they pay you the small bucks.,poipoipoi_2016,2025-06-19 23:21:19,7,cscareerquestions,t3_1lfoxxp,False,
myq8wlo,you have 11 more months to get up to speed,besseddrest,2025-06-20 00:37:37,2,cscareerquestions,t3_1lfoxxp,False,
myqexjl,"You should just ask your manager if you are being slow and what you can do to speed up. Communicating this kind of stuff is actually more important than working fast sometimes because people appreciate a person who is self aware and easy to work with. Of course, this depends on if your manager is evil or not.",e_Zinc,2025-06-20 01:13:21,2,cscareerquestions,t3_1lfoxxp,False,
myqiywv,"Chill the fuck out about being fast, you’ve lost the plot. You need to be 100% focused on effectively learning .NET, the codebase, best practices, etc. If you do that, speed will increase. If you rush, you’ll be both slow and unskilled.Congrizzle on the jizzle homie!",Mentalextensi0n,2025-06-20 01:37:07,2,cscareerquestions,t3_1lfoxxp,False,
myybx9f,"What you're going through is completely normal. It took me probably over a year to start feeling ok with my output. The best thing you can do is listen to your manager and trust them, don't try to compare yourself because you'll always look to those working faster than you at any given time.",Droxiav,2025-06-21 07:51:55,2,cscareerquestions,t3_1lfoxxp,False,
mzd5ts2,So you've worked on HTML emails too?,ClideLennon,2025-06-23 17:36:21,113,cscareerquestions,t3_1limqdo,False,
mzd7imo,Pretty much every day at work.,diu_tu_bo,2025-06-23 17:43:50,56,cscareerquestions,t3_1limqdo,False,
mzdae30,"Not sure if this counts but….. I was a dev at a place where managers used a shared excel workbook to track something or other. Issue was that managers would open it and walk away, causing others to be unable to make edits because the workbook was locked. I was asked if I could force it to close after a period of inactivity. Sure - after ten minutes of inactivity it would save changes and close. But, one of the managers totally screwed up their edits and those changes were saved.So I was asked if I could prompt user to see if they wanted changes saved or not, before auto-closing due to inactivity. I pointed out that that would defeat the entire purpose of automatically closing it because, you know, *they’d walked away from it*. So I was told to auto close it *without* saving - except next I was told that on the first business day of the month, some of the managers entered data and would sometimes have it opened but inactive for more than ten minutes while they were working on it, and one had just lost their desired changes. So could I have it auto-close after ten minutes of inactivity, without saving, unless it was the first business day of the month, in which case I should auto-close but save it first?An. Excel. Workbook. I had actual real work to do. I did it - I also got told I was being “difficult” when I asked if the managers could just be told to *close the damned workbook when they were done using it*.",TheRealMathilda,2025-06-23 17:56:43,22,cscareerquestions,t3_1limqdo,False,
mzd49oh,"CS, no. IT, yes.I don't want to have to learn about Docker, ever again, for instance. And I don't care about remembering the configuration format for $(whichever piece of software).",ImYoric,2025-06-23 17:29:25,29,cscareerquestions,t3_1limqdo,False,
mzd82lk,Sorting. I seriously DNGAF about sorting algos. If I need random access I use a map or directory if I need to iterate I use a list and hit .sort. I don’t have time to investigate what algo to use.,KrispyKreme725,2025-06-23 17:46:16,29,cscareerquestions,t3_1limqdo,False,
mzdao2l,"I work in Healthcare as a Software engineer.I thought I would be developing all this cool stuff, saving lives, etc...99% of what I develop is stuff related to billing, and solutions to things that dont really matter...",Dazzling-Rooster2103,2025-06-23 17:57:59,11,cscareerquestions,t3_1limqdo,False,
mzd472o,Literally every bigger issue and then I still need to fix take care of it otherwise I feel like a moron cuz I got nothing to contribute to the daily.,Mesapholis,2025-06-23 17:29:06,10,cscareerquestions,t3_1limqdo,False,
mzd6649,"DevOps and surprisingly frontend which people try to simplify a lot. Even AI, while it’s decent, it’s still crapping out on specific UI/UX stuff like accessibility and page responsiveness consistently across the board when you look at [benchmarks](https://www.designarena.ai/).On the DevOps side, AI is pretty much like a quick google search for me to get commands, but I can’t really imagine a non-technical person being able to set up an AWS EC2 instance with very little or no knowledge of programming concepts without breaking things.",reddit-burner-23,2025-06-23 17:37:54,9,cscareerquestions,t3_1limqdo,False,
mzde1pu,"My entire job?It’s fine, I’m happy enough to do it, it’s just all meaningless. Beyond pay and promo I just don’t care.",Ok_Opportunity2693,2025-06-23 18:13:39,5,cscareerquestions,t3_1limqdo,False,
mzd7r2e,"Yeah. Right at the end. During the course of COVID I went from doing field support in factories, troubleshooting problems with automation on the assembly line and writing code to fix them to eventually spending my days arguing over the colors of boxes on slides in presentations my managers were using to pitch bullshit to their managers and then eventually somehow doing sysadmin jobs on Jenkins servers. The susadmin stuff pushed me over the edge. I wanted nothing to do with it so badly I decided to retire early.",suboptimus_maximus,2025-06-23 17:44:52,3,cscareerquestions,t3_1limqdo,False,
myo5dk0,Apply for jobs,PatchyWhiskers,2025-06-19 17:58:22,165,cscareerquestions,t3_1lfhbub,False,
myo799i,Your employer is circling the drain. Get out NOW,jhkoenig,2025-06-19 18:08:06,87,cscareerquestions,t3_1lfhbub,False,
myob69x,translation: you should have 0 surprises if company closes its door tomorrow owed you wages? you threaten lawsuits? meh who cares... the company's out of money,NewChameleon,2025-06-19 18:28:56,56,cscareerquestions,t3_1lfhbub,False,
myo72uq,run ASAP,Immediate_Fig_9405,2025-06-19 18:07:10,20,cscareerquestions,t3_1lfhbub,False,
myoiz8u,Can’t pay employees = Bad.. no need to ask online,Big-Dudu-77,2025-06-19 19:11:35,12,cscareerquestions,t3_1lfhbub,False,
myocast,It's up to you if you trust the owners. Just have a backup plan like start budgeting like you have no job.,MSXzigerzh0,2025-06-19 18:35:02,9,cscareerquestions,t3_1lfhbub,False,
myo7ejk,"Nope, the company is badly run",Intelligent-Row-6573,2025-06-19 18:08:51,7,cscareerquestions,t3_1lfhbub,False,
myof0up,"This happened to a local biomedical startup a friend was working for. For a couple months running on founders credit cards, then one day the CEO runs off to Canada for tax evasion and the place is shuttered. Interestingly enough the ex CEO lived in Canada without issue for a while and was nabbed when he came to attend a wedding. So grind some Leetcode and if you're getting married make sure he's invited /s",debugprint,2025-06-19 18:49:46,6,cscareerquestions,t3_1lfhbub,False,
myog4mj,"Look for a new job, and realize that you may not get paid at some point",icenoid,2025-06-19 18:55:50,4,cscareerquestions,t3_1lfhbub,False,
myoe8hr,/giphy you in danger girl /giphy jurassic park run!,desert_jim,2025-06-19 18:45:30,5,cscareerquestions,t3_1lfhbub,False,
mz15ogy,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-21 19:09:12,1,cscareerquestions,t3_1lh49qt,False,moderator
mz170q7,Nobody fires interns that are here for 3 months dude,Bobby-McBobster,2025-06-21 19:16:38,128,cscareerquestions,t3_1lh49qt,False,
mz187yz,I’ve been faking it for 7 years. I’ll update when they find out.,ZolaThaGod,2025-06-21 19:23:19,67,cscareerquestions,t3_1lh49qt,False,
mz195ih,"You don't have to be better than everyone else. You just have to be good enough. Focus on learning as much as you can, rather than on comparing your performance to that of others.",doktorhladnjak,2025-06-21 19:28:33,20,cscareerquestions,t3_1lh49qt,False,
mz1nkbi,"Ironically, your anxiety makes you an ideal entry level employee. Will be easily workable and moldable. Stakeholder negotiation will be effortless because you’ll do it all. Don’t leak any of that anxiety into manager 1 on 1’s and you’ll show high performance signals.Does it get better over time? Maybe. I know people that still feel this way after a decade of experience.I have similar to the opposite of imposter syndrome. Instead of being scared of falling into the fire bucket, I get thrilled targeting the minimum work to stay in the desired bucket. It does feel a bit limiting from a career perspective.",xlb250,2025-06-21 20:48:02,15,cscareerquestions,t3_1lh49qt,False,
mz1quv1,"Personally ? I find the anxiety around being fired makes me less effective. After recognizing that, it's basic unwanted emotion management: Acknowledge the feeling and what it's telling you (this job is important to you), then let it go. I find once I'm in flow, I'm fine, so it's just getting over that initial hump that takes effort. You may have to try a few times to get past the feeling. It's ok if this is difficult at first. This is an important soft skill, and like all skills, it takes practice.In my experience, it's actually really rare to be fired for performance unless you do like, literally nothing for months. Usually it's some political game happening 3 levels above you that you have no control over, and performance is just the excuse they use to justify someone sacrificing their pawn to take a rook. I have seen so many amazing engineers get fired for ""performance"" who were certainly out performing me.The best way to protect yourself is to just be reliable, and get your work done. You can't hit your target if you're watching everyone else draw their bow.~ Sincerely, a FAANG worker that has survived 3 layoffs (and probably a fourth, soon :grimacing_face:)P.S.: there are two books that may help, though I've never read them. My coworkers loved them, though. - The Subtle Art of Not Giving a Fuck- The Upside of Stress",zoe_bletchdel,2025-06-21 21:06:03,11,cscareerquestions,t3_1lh49qt,False,
mz1i905,"Two quotes for you: 1) ""Comparison is the thief of joy."" 2) ""It is possible to commit no mistakes and still lose. That is not weakness. That is *life*.""",OneOldNerd,2025-06-21 20:18:53,7,cscareerquestions,t3_1lh49qt,False,
mz1s3qm,"You're an intern, they're not going to fire you. The worst case scenario is that they don't ask you back next year and you have an internship on your resume. Relax, you're there to learn.",imLissy,2025-06-21 21:13:03,3,cscareerquestions,t3_1lh49qt,False,
mz8ky07,"I've been fired, it's no big deal. Yeah you're sad, yeah you have self doubt. You just keep pushing forward. You get over it and find something else.",Personal-Molasses537,2025-06-22 23:30:55,2,cscareerquestions,t3_1lh49qt,False,
mz1qff0,Ask howcyoirecdoingvpeeformancecwise,GaslightingGreenbean,2025-06-21 21:03:42,1,cscareerquestions,t3_1lh49qt,False,
mycwxej,"i think people are missing the fact that a regular career pays you 1/5 of your businesses earnings. If you are interested in it, ask your dad to mentor you and learn more about the niche and the software",bottlethecat,2025-06-17 23:49:37,27,cscareerquestions,t3_1le06x2,False,
mycdv8o,"Get in the business. Improve the software, leverage AI if there’s genuine opportunities for that. Aim to scale it to 1M/year",t3klead,2025-06-17 22:06:23,81,cscareerquestions,t3_1le06x2,False,
mychp7w,"Regular career. The former would've been a good idea thirty years ago. It's so competitive now. How are you going to grow the client base? How are you going to change the pricing structure? It's a lot more work than just modernizing the tech.>But with correct investments for modernization and some time I think it has the potential to reach much higher.That's what they all say: ""if I just make all the right decisions and execute it perfectly, we could be the next Salesforce."" Not trying to be rude, but you're gambling your career on what seems to be wishful thinking at best.>I know its ultimately my choice but I feel like whatever I choose I will regret it.Do you even want to work in software?",BAMartin1618,2025-06-17 22:26:38,15,cscareerquestions,t3_1le06x2,False,
mycoqf6,Is your dad looking to get out of the business ASAP so you'd have to take over current operations? Or is this a looking down the road kind of thing?A smart way to play this might be to become an additional partner in the business now. You can own modernization and expansion while your dad continues to cover the legacy offering. The business grows and takes on new customers.Over time you learn the legacy system too and are eventually ready to start modernizing your legacy customers off of it. Now the business you inherit will be modern and bigger than the one that came before it.,serial_crusher,2025-06-17 23:04:48,4,cscareerquestions,t3_1le06x2,False,
mycmfur,"If an owner operated business only generates 150k/year post tax, and taking out your father's considerable effort and knowledge, it's a business that's most likely not worth anything past what it could be sold for as parts. When evaluating an owner operated business, you must consider the cost of labor down by the owner, since that effort is required if you take it over.That said, I'd try to learn the business anyway, even if you aren't sure you will take it over. There could be avenues for expansion, revenue increases, tangential markets, all those things. Not only that, but it's extremely valuable to see production software systems in action, and get a sense of what a successful 0 to 1 project actually looks like.Additionally, I'd try to independently build your software career to the point where you are a tech lead or otherwise have a couple years experience leading teams, since that's essentially what your role would be. You could make the mistakes you need to learn how to lead on your own time, or you could use the company. One of those will be far better for your career and the value of the business!",justUseAnSvm,2025-06-17 22:52:30,3,cscareerquestions,t3_1le06x2,False,
mye5vj5,"Not even a question, take over the business, build it out, bring in the new AND RELEVANT tech. Retire early.",noselfinterest,2025-06-18 04:20:08,2,cscareerquestions,t3_1le06x2,False,
mycja84,"Makes $150K in profit or in revenue? $150K in revenue is not a business, it's barely a normal full-time job and from your description it doesn't seem like something customers will be lining up for.That said I don't think the two are exclusive, you can take over your dad's business, and if it fails just continue in a normal career.",Bobby-McBobster,2025-06-17 22:35:16,4,cscareerquestions,t3_1le06x2,False,
mydk252,"This sounds like Panther, or one of those types of solutions that businesses invested in to ""computerize"" and never left. If so, there's probably not much money left in them besides consulting.",time-lord,2025-06-18 02:02:27,1,cscareerquestions,t3_1le06x2,False,
myf2884,"Imo, a good middle ground would be to get some experience in a normal career and build the skill to come back and inherit the family swe business.You'll gain a lot of skills and have a lot of leeway in comparison in a normal job and when you come back you'll have new skills that your dad doesn't that'll help you when working with him and then modernize.",ProfessorPhi,2025-06-18 09:13:32,1,cscareerquestions,t3_1le06x2,False,
myrruhx,sounds like a loser. like it or not ai usage will continue to increase exponentially until humans are no longer in the loop,jarislinus,2025-06-20 06:59:04,1,cscareerquestions,t3_1le06x2,False,
mygws8v,"Definitely, it is one of the most toxic platforms I’ve ever seen lmao. At the end of the day, your experience may differ.",Enough_Capital_8786,2025-06-18 16:00:01,114,cscareerquestions,t3_1lekpvw,False,
myh4g1p,"Blind is... Unique. It's both reliable and absolutely not. All blind really tells you is that everyone you're talking to is guaranteed to be written by someone who has a valid company email for the company they claim to work in. That's really all. As a platform, it encourages extremely negative interactions, and the anonymity means there's no consequences of either being brutally honest but also of lying. And of course, the biggest issue: there's no way of verifying almost anything people say. I'm not saying that people always lie, there's a lot of frank and honest discussion that happens. I'm saying that you can't tell when people are lying, because you don't know who they are, can't really verify anything, and there are zero downsides to lying.I would also not call it representative. Blind users don't represent a majority of employees at most companies, and the site self-selects for the kind of people who _want_ to engage in the kind of negativity you get on that side. Because of all that, I'd take most things there with a grain of salt.",rickyman20,2025-06-18 16:36:15,46,cscareerquestions,t3_1lekpvw,False,
myh99sc,it's both very toxic and very good information ymmv,ImSoCul,2025-06-18 16:58:54,17,cscareerquestions,t3_1lekpvw,False,
myhinrm,the 4chan version of linkedin,Windlas54,2025-06-18 17:41:29,14,cscareerquestions,t3_1lekpvw,False,
myh7be5,"I wouldn't trust ""anonymous"" commentary. Since none of it is verifiable the loudest voices are going to be LARPers and schizos posting their own insanity as gospel. Some people stir shit and do so with made up facts.",ShardsOfSalt,2025-06-18 16:49:50,10,cscareerquestions,t3_1lekpvw,False,
myijq1a,"It is decent for some things. Mostly company channel for internal gossip and interview related threads.Sometimes salary data if folks clarify that they're not counting stock growth.Levels.fyi for salary data.Lots of random white and Indian nationalism, with a boatload of random incel fanfiction fetishizing Asian women.",AtheistAgnostic,2025-06-18 20:37:47,9,cscareerquestions,t3_1lekpvw,False,
myixaip,TC or GTFO,AdministrativeHost15,2025-06-18 21:44:56,5,cscareerquestions,t3_1lekpvw,False,
myh5ghb,My company channel is slow but has been accurate. Recently scored a nice referral from a random user on Blind as well. YMMV.,big_casual,2025-06-18 16:41:04,4,cscareerquestions,t3_1lekpvw,False,
myhggcy,I only look at my company's channel and it generally provides accurate information that you can't get anywhere else. This includes equity award comparisons and pending layoffs.,thedudeoreldudeorino,2025-06-18 17:31:28,5,cscareerquestions,t3_1lekpvw,False,
myh1tfb,"Yeah Blind is basically where the deplorables of Silicon Valley hang out. All the racism, male chauvinism, xenophobia, homophobia, and just plain greed they keep bottled up at work is released there. I wouldn’t ignore it entirely, as there’s occasionally useful information or gossip there, but just keep in mind the population you’re dealing with when you’re there.",Independent-End-2443,2025-06-18 16:23:46,8,cscareerquestions,t3_1lekpvw,False,
myibn7k,"DO NOT GET A MASTERS IF YOU DO NOT KNOW WHAT YOU WANT TO DO… figure out your next steps, then plan accordingly. You might not need to further your education or you might need a specific degree. Don’t do this backwards.",Perezident14,2025-06-18 19:58:48,59,cscareerquestions,t3_1leqcbk,False,
myi75b3,I hear trade schools are always hiring,ohai777,2025-06-18 19:37:05,9,cscareerquestions,t3_1leqcbk,False,
myj7ypk,I am thinking about getting into construction. I am looking into framing at my local community college. I have over 20 years of software development experience.,aeplus,2025-06-18 22:42:02,6,cscareerquestions,t3_1leqcbk,False,
myi8xfh,saw frame beneficial gold rain live whistle modern market recognise *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*,AdventurousTap2171,2025-06-18 19:45:42,11,cscareerquestions,t3_1leqcbk,False,
myjprud,"Do not do a PhD. Or go to law school, but even that's not as laughably bad an idea as doing a PhD ""to help me get a job"".",anemisto,2025-06-19 00:21:13,3,cscareerquestions,t3_1leqcbk,False,
myi984i,What do you want to do? MBA is a pretty popular option. A lot of grads at top MBA go to strategy kt product at a big tech company.,Illustrious-Pound266,2025-06-18 19:47:07,7,cscareerquestions,t3_1leqcbk,False,
myid54t,"If you’re upset about the underemployment rate of computer science, then I really hate to break it to you about other fields. If you really want to try something out that is complimentary to your current education, an MS in civil engineering might be a good play. For now. Because odds are, many young people are looking up “fields with low underemployment”. Guess what’s going to get rushed into next?",Pristine-Item680,2025-06-18 20:06:06,5,cscareerquestions,t3_1leqcbk,False,
myi7myl,Why would people in the CS sub know about that?,Bobby-McBobster,2025-06-18 19:39:27,5,cscareerquestions,t3_1leqcbk,False,
myixu2c,You could go into DevOps or SRE with just certs and projects.,UntrustedProcess,2025-06-18 21:47:41,1,cscareerquestions,t3_1leqcbk,False,
myj4517,Thank you,XinWay,2025-06-18 22:20:52,1,cscareerquestions,t3_1leqcbk,False,
mywdnyp,"Yes you should ask, unless you're getting bad feedback and not clicking the whole chat. ""Is your company or anyone in your network hiring? If so, would you be comfortable providing a referral?""Chances are if you made it to the coffee chat, they're expecting the question.I would not assume they are against it if they didn't bring it up themselves. They may just be waiting for you to pop the question.",RemoteAssociation674,2025-06-20 23:19:27,82,cscareerquestions,t3_1lghj7c,False,
myw9xty,A closed mouth doesn’t get fed.,lupercalpainting,2025-06-20 22:57:59,61,cscareerquestions,t3_1lghj7c,False,
myw9ul8,"as the person on the other side, if a new grad asks me for a coffee chat and I say yes, I know you probably want a referral even if you don't say it outright. if we get through the chat and I don't offer a referral then I probably made the decision not to refer you for whatever reason.",Dry_Row_7523,2025-06-20 22:57:28,44,cscareerquestions,t3_1lghj7c,False,
mywvi5x,"FYI when I refer someone I have to specify how I know them, how familiar I am with their work, and provide a writen summary of why they'd be a good candidate. If I don't know someone at all I generally won't refer them bc it's work for me and I don't think it really has much impact.",retirement_savings,2025-06-21 01:07:12,29,cscareerquestions,t3_1lghj7c,False,
myw9mtn,"Yes, inappropriate to ask. Typically referrals are meant for “I’ve worked with this person before and can speak to how they would fit into the team”. However, referrals are often incentivized (my company gives a $1500 referral bonus) so many are happy to refer anybody.",locke_5,2025-06-20 22:56:14,15,cscareerquestions,t3_1lghj7c,False,
mywoz42,Keep asking for advice and intros and not referrals. I'd take an intro to someone else especially someone who is a hiring manager with staff needs versus someone that I have never worked with giving a referral. Everyone who is responding has some sense of altruism and wants to help you at some point in your career. The other thing I would say is you're selling yourself and the average number of engagements to get to a client can be 5+ so just keep being genuine. DO NOT ASK FOR A JOB. Figure out ways that this person is empowered to help you and after you have their email and their cell(not linkedin or insta) keep that connection warm.,HackVT,2025-06-21 00:26:15,2,cscareerquestions,t3_1lghj7c,False,
mywc1ob,"If there's a referral bonus (like most companies have), I'd rather you skip the chat and directly ask for a referral by providing the link to the posting and your info. Saves a lot of time for everyone.",thewarrior71,2025-06-20 23:10:09,2,cscareerquestions,t3_1lghj7c,False,
myxdut4,"It is ABSOLUTELY expected that you will ask for more people to talk to. If you don't, you're hamstringing your networking efforts.",jhkoenig,2025-06-21 03:03:26,1,cscareerquestions,t3_1lghj7c,False,
mz94iv6,"Never heard of that. Even for government positions that require a clearance, you can usually list the agency you're working for. You just don't go into details about what you do.Only exception I could think of is a stealth startup that doesn't want to have their name publically announced yet. That, or it's made up experience.If you don't feel comfortable recommending this person, don't. It's not a big deal. ""Sorry, if that's the case I also can't give you a referral for security reasons. I need a full picture of your experience if I'm going to be a referral"".",SouredRamen,2025-06-23 01:24:57,68,cscareerquestions,t3_1li3zpq,False,
mz94fgl,"I worked for a private company that did government work so I had a clearance. That said, even then the company has a LinkedIn page, not being able to list anything is super sketchy and likely won't even pass HR",NEEDHALPPLZZZZZZZ,2025-06-23 01:24:25,16,cscareerquestions,t3_1li3zpq,False,
mz94i4c,"Yes. [Stealth Startup](https://www.linkedin.com/posts/stealth-startup-jobs_what-is-the-stealth-startup-on-linkedin-activity-7216502419138961408-tKPX/) is an absurdly common ""organization"" to work for if you haven't noticed.And the reasons for doing this aren't totally bonkers dumb. It looks super suspicious if Persons X, Y, and Z with foremost subject matter expertise in ""Area of the Future"" all start working at Widgets Unlimited in the same month, right? And if you're a competitor who's business is threated by ""Area of the Future"", you might start paying much closer attention to Widgets Unlimited than if they were an otherwise nameless/faceless organization. Simply knowing who your org's largest threats are/aren't is a competitive advantage.I dunno if that's the situation your acquaintance is in. But it's not a far-fetched concept to simply not list, or obfuscate, your current employer on LinkedIn.",healydorf,2025-06-23 01:24:50,13,cscareerquestions,t3_1li3zpq,False,
mz9bql5,"People in the national security establishment sometimes have almost comically vague titles and no position description, but they're on LinkedIn.",anemisto,2025-06-23 02:06:19,12,cscareerquestions,t3_1li3zpq,False,
mz9ib2v,"He's probably just taking an NDA too literally.Another smaller possibility is that it's something they worry will be socially embarrassing. Like working for Nazis, or Ticketmaster.Maybe have him ask HR or legal if it's OK for him to say where he works. Or ask to see his W2 or something that confirms he's not just making everything up.",tcpWalker,2025-06-23 02:44:46,10,cscareerquestions,t3_1li3zpq,False,
mz9eg96,Sounds like your acquaintance is lying to you.,Ettun,2025-06-23 02:21:43,5,cscareerquestions,t3_1li3zpq,False,
mz96c0b,"That's fishy as hell, I would not recommend",Ok-Entertainer-1414,2025-06-23 01:35:32,4,cscareerquestions,t3_1li3zpq,False,
mz96n21,That’s weird. I wouldn’t recommend him if I were in the position. Always keep in mind that your recommendations reflect yourself. Don’t recommend people you wouldn’t want to depend on.,ComfortableJacket429,2025-06-23 01:37:19,4,cscareerquestions,t3_1li3zpq,False,
mz9xiys,Sounds really weird. I agree it sounds like he doesn’t have a job.,p0st_master,2025-06-23 04:27:40,2,cscareerquestions,t3_1li3zpq,False,
mza8su8,"Some trading firms like TGS have strong policies about social media/etc, so most folks working there can only list something like ""engineer at a trading firm"" on their LinkedIn and resume. And TGS has been around for well over 20 years.But if your friend actually worked at a place like that, he would not be asking for referrals :P",tikhonjelvis,2025-06-23 06:00:30,2,cscareerquestions,t3_1li3zpq,False,
mz3hw9s,All that for 65k/ year? Canada salaries are just. I mean I have no words,AdLate6470,2025-06-22 03:37:54,94,cscareerquestions,t3_1lhdj42,False,
mz3su8r,:rolling_on_the_floor_laughing::rolling_on_the_floor_laughing::rolling_on_the_floor_laughing:This would take a software engineering team months to develop and launch this into production. And they want it from one person in 2 weeks. I would tell them very impolitely to f:face_with_symbols_on_mouth::middle_finger_light_skin_tone: all the way off.,OkConcern9701,2025-06-22 05:02:07,58,cscareerquestions,t3_1lhdj42,False,
mz3f0h8,"I worked with nestle’s software side for one of its biggest SaaS providers and everyone (mostly site engineers and data scientists) seemed miserable. Now, I know why. They are getting insanely underpaid for working 60-70 hours per week. Also, I hated using the jump servers from Switzerland for WW. This makes no sense.",Gentle_Jerk,2025-06-22 03:17:23,24,cscareerquestions,t3_1lhdj42,False,
mz3tdrx,I know the CEO of Nestle so maybe this issue needs to be escalated,eatdrinksleepp,2025-06-22 05:06:39,20,cscareerquestions,t3_1lhdj42,False,
mz56d2d,I wouldn’t do this for a $200k job,Chevaboogaloo,2025-06-22 12:35:00,16,cscareerquestions,t3_1lhdj42,False,
mz3j3sq,47K USD for anyone wondering.,yellowmunch152,2025-06-22 03:46:43,22,cscareerquestions,t3_1lhdj42,False,
mz40swc,I got rejected for this position and I have no regrets. Fuck nestle,stealth_Master01,2025-06-22 06:11:38,9,cscareerquestions,t3_1lhdj42,False,
mz68n92,This is 100% a scam to get this project done for free.,ChineseAstroturfing,2025-06-22 16:09:58,8,cscareerquestions,t3_1lhdj42,False,
mz3duif,"Lol all of this for less than what my gf makes after switching to marketing this year. She didn't have any stupid hoops like this to jump through in interviews.Typically I would say a job is better than no job, but this doesn't even guarantee a job. Don't do this, especially for such a low salary.Also I am so sorry, I know the Canadian market is so damn cooked right now, it's awful, but keep at it",sersherz,2025-06-22 03:09:18,13,cscareerquestions,t3_1lhdj42,False,
mz3wauv,r/fucknestle exists for a reason lol…,Salmon117,2025-06-22 05:31:28,11,cscareerquestions,t3_1lhdj42,False,
mz8fooj,"I think you answered your question with > Obviously it's company and team dependent At some companies, it’s expected that getting promoted requires sacrificing wlb. At other companies, everyone has decent wlb and promotions depend more on how well you do your job. Personally, I worked for several years at the latter kind of company, and I have friends who have worked at the former.",maybe_madison,2025-06-22 23:00:49,48,cscareerquestions,t3_1li0sht,False,
mz8ju1g,"Not an IC any more, but I was for a long time and I now manage everywhere from interns to staff engineers.My experience is that right toward the high end of senior engineer tends to have the absolute worst WLB. I’ve long said that I think tech lead is the absolute worst job you can have and I think that that often falls right in line with this.The problem is that you’re still expected to contribute code like any other engineer, but you start taking on more project management responsibilities that require heavy context switching. You end up doing 70% of two jobs that require very different skill sets and I think the only way most people manage is to put in extra hours.Once you’re beyond that level, I think your WLB actually starts to get easier because you’re no longer expected to write as much code. The problems you focus on are harder, but you have the ability to make more time to think on and you’re able to step away from the day to day work more.So yeah, I guess my point is that I think to get to any level above senior, you likely have to push through a few years of shit WLB, but beyond the senior level it actually starts to get better and not worse.",Drugba,2025-06-22 23:24:33,38,cscareerquestions,t3_1li0sht,False,
mz8hhj4,"Demonstrated value add in a company with a budget for it. I'm a little north of 200, IC with leadership responsibilities but no direct retorts. I'm an architect, but essentially a technical liaison between management and engineers. I clock out by or before 5 every day. Doing more work at previous companies for half the pay and longer hours.Really depends on your company.",Lower_Sun_7354,2025-06-22 23:11:08,17,cscareerquestions,t3_1li0sht,False,
mz8lsm9,"The farther you go up the IC food chain the more you start developing other developers instead of software, so some of the actual day-to-day software development starts to taper off. If we pretend incident escalations don't exist, its pretty much a 9-5 gig, because you're not going to be having mentoring sessions super early or late in the afternoon. But incidents do happen, and things get escalated, and if you're something of a principal engineer, you're likely to have some expectations of stepping into escalations at some capacity. How often that happen to you is really going to be dependent on where you work, how often shit breaks, and how high up people may need to escalate to get help fixing it on the quick.",Federal_Employee_659,2025-06-22 23:35:49,14,cscareerquestions,t3_1li0sht,False,
mz8oeb5,"I don't get much stress but do a lot of work. That is a function of our team and some of the choices I have made. There are multiple archetypes for above-senior ICs and my experience is not universal.Day to day, I do a little bit of architecture, code reviews, mentoring, regular IC coding-type work, strategy support working with managers, working with product and stakeholders. This is for multiple (usually two) teams concurrently. I am there to spot opportunities for collaboration and leverage, find different solutions to problems, to nudge people to think about different approaches. Sometimes I fill in most of the duties of a tech lead if someone is out.Part of the reason I do a bit of everything is that I have been promoted three times in seat. I am sure it would feel different joining a team as above-senior rather than previously having been in the lower roles on the same team. It's not like I'm going to refuse to do the things I did before, if there is an urgent need. It's just that normally there are other people to delegate to.Because I don't really hold any primary accountability for anything and have had managers largely leave me to do as I see fit, it doesn't come with much stress. I might be getting a new manager in a month or two, though.",rajhm,2025-06-22 23:51:00,5,cscareerquestions,t3_1li0sht,False,
mza30a8,"Career progression is linear for most people from junior to senior. Senior is a terminal level for many. Skill growth continues, but the title remains.From junior to senior, the scope and complexity increased, but the nature of the work remains. Staff engineer is the first level that is a different type of work than the previous levels, so you would need to make a conscious decision if you want it (not only WLB).If your main goal is money, then getting a job at a higher tier company could be a better fit than going for staff role: https://newsletter.pragmaticengineer.com/p/trimodal-nature-of-tech-compensationWLB varies between companies, not dependent on the title. But if you find cross-team coordination more stressing than hands-on development, then a staff role would be more stressful for you regardless of the company WLB culture.",LogicRaven_,2025-06-23 05:11:00,3,cscareerquestions,t3_1li0sht,False,
mza7d0e,"Really depends on the team and company of course, but, counterintuitively, more scope and responsbility can be *less* stressful and busy *when it comes with real autonomy*.I've had some past roles where I was expected to own some area, collaborate across teams and departments, learn about both the business and the relevant OR/math foundations for what we were doing, design and build some complex systems... sounds like a lot, right? And I did get a lot done. But the key thing is that my day-to-day was flexible, so I could adjust what I was doing and how hard I was working based on circumstances or even just based on how I was feeling. I got a lot done by doing high-leverage work and figuring out more effective ways to achieve my high-level aims rather than working long hours.But that only worked because my manager was willing to trust me to make real decisions not just about how I was working day-to-day but also about what I was doing. I could go out, talk to people, understand their actual constraints and the interaction points between my system and other teams, then scope my work based on that rather than aiming for arbitrary deadlines or roadmaps. When you have the ability to just solve real problems rather than chasing output for the sake of output—and when nobody is trying to optimize your ""capacity""—you can get a lot done without working crazy hours or burning out.On the other hand, there are lots of teams and managers that do not operate like that. I've seen company planning processes that were clearly designed to put lots of artificial pressure on people and in those situations, yeah, a higher level role might be more stressful than a lower-level role. But even at those companies, at some point, you'll only be able to perform at a given level by doing high-leverage work rather than just working harder, so, if you don't burn out along the way, you'll learn how to have a large impact with reasonable(ish) effort.",tikhonjelvis,2025-06-23 05:47:53,3,cscareerquestions,t3_1li0sht,False,
mz8ntqn,"I am Sr Staff/Principal SWE in big tech, I would say the regular day to day is the same as when i was a senior SWE most of the time, but sometimes (often?) I'm pulled into critical projects that throws my WLB out the window. So I think the main difference for me is that 30-40% of the year I'm fighting fires or pushing on difficult technical work, but the rest of the time i don't feel i work more hours than when i was a senior SWE.",aregma,2025-06-22 23:47:37,2,cscareerquestions,t3_1li0sht,False,
mz8q2xg,"It’s a balance. I’ve taken my time getting to where I’m at (staff). I usually work 30 - 40 hour’s a week. However I’ve seen others that are more attentive during after hours. I’ve just paced myself so that I understand how to catch up on things during working hours and training other engineers how to not rely on me. That makes me less visible during big events so it slows down my progress but I’ve done enough of the “hero” thing in the past that I don’t care to do it again regularly but can of needed. I’ve also switched into management which required a lot more after hours work than when I was in hero mode, and it was less fun, so I switched back.So no it doesn’t require more time investment while being above senior level but you need to pace yourself to find the correct balance to get there.",saranagati,2025-06-23 00:00:57,2,cscareerquestions,t3_1li0sht,False,
mzcoipn,"Is 9 to 5 a full day? Is starting earlier than 9 considered bad WLB now? When do people eat during the day? Do people still eat during the day? Is working a LITTLE MORE than 40 ""killing yourself?""I'm not software but I am a senior engineer of a different discipline in a different industry (chemical engineer, at EPC), and if someone was only ever ""working"" 9 to 5, we'd be suspicious that they were working sub 40 hours a week, 35-40 ish. Given we ""bill"" every hour because we have to invoice and get paid for our designs by clients who want them, 40 hours on your time sheet means 40 hours of work. Not... 35 + paid lunch. You can and will get fired for that. You're free to report 35 + 5 hours OH, but people would ask why this is the case. I am positive I will be techsplained how software is different (yes I am aware, this isn't the point here).Not to get all Office Space Stan on people, but doing the bare minimum with respect to anything generally does not get you ahead. 9 to 5 and anything more being ""killing myself"" really sounds like 15 pieces of flare and no more. This isn't going to be rewarded, and it can be difficult to make a lasting impact if the bare minimum is all you're willing to do.It might be different in software, but senior around my parts implies a willingness to put in the work / time / hours when it is necessary. Projects succeed or fail on the willingness of the senior leadership corps to do what is necessary. Seniors are the critical force that holds the project together, that is their impact. After that, whether or not you experienced WLB during this time frame will be by how well a project is run, project schedule, how well defined a project is... all of which conspire to define how crazy a project is.For your case, it REALLY sounds like if you want that high TC, senior title, with ability to make impact, you're GOING to need to make peace with high pressure and hectic environments, and then critically, be willing to put in the time when it is necessary. So if your current work DOESN'T require this extra time and extra availability, then you're likely golden. Keep on going on. However, are your coworkers experiencing stress, working early, working late, to get things done while you're over here working 9 to 5? Are you complaining openly any time work requires deviation from this (don't do this if you are)? If you're working 9 to 5 while everyone else is working 7 - 6 and drowning... then you're NOT going to get senior there. You're NOT in the trenches with your team. You'll have to quit and get hired as senior somewhere else (good luck with that in this environment).For reference here... ""Projects"" I work on are 1.5 to 2 year affairs, the larger of which can easily be 1000-1250 FTE for factories/sites that can run 20-25 billion once tools are put in, with base infrastructure being between ~5-8 billion. Error bars on these projects exceed the total cost of other megaprojects. So these are huge... long affairs, involving many people. My point is, that for the longer durations on this, they look and feel a lot more like traditional work. People will remember if you put the bare minimum in or not and if the project suffered because people didn't go above and beyond.For context, I am currently on a mega project, we can't add anymore staff because we don't have any, and the project would benefit GREATLY from 45-50 hour weeks out of our junior engineering core for a month or three to get caught up. A few are doing this, and their scope situation is improving, but several others are not, and they're behind. Whether or not this is recoverable, is an interesting question. I'm not lead here... thankfully. So we have this weird situation where everyone is drowning short term, and the group is splitting into people who make an effort, and people who do the bare minimum. The career consequences of which won't be felt for years. For what it is worth, engineering staff gets straight time OT on billed work, so 60 hours means a 50% increase. It's our bonus structure to reward additional work.",GlorifiedPlumber,2025-06-23 16:16:56,2,cscareerquestions,t3_1li0sht,False,
mymz7za,"Idea is if you can implement it, you understand it and hence you understand the tradeoffs associated with it and pros and cons when deciding what to implement.However I agree I don’t think this is a great way to test if you understand it or not",Cptcongcong,2025-06-19 14:32:43,81,cscareerquestions,t3_1lfc8th,False,
mymzm36,"Your premise is wrong. It's not ""suddenly so popular"". Leetcode-style interviewing has been the prevailing doctrine in high-paying roles for the past 15+ years.",SuhDudeGoBlue,2025-06-19 14:34:40,106,cscareerquestions,t3_1lfc8th,False,
myn2a5a,"Companies don't ask LC questions because they expect you to solve similar questions in your day-to-day work. They ask LC questions to 1) act as a proxy for some combination of ""inherent problem solving abilities, work ethic, and ability to perform under pressure"" and 2) to filter out candidates since there are almost always more qualified applicants for a role than there are open positions. All that being said, performing well on LC is a necessary, not sufficient condition: even if you're a LC God, you're not getting an offer if you're an asshole, can't talk/present well, or have sloppy code (most companies, including mine, often have system design or similar tasks alongside LC).",saulgitman,2025-06-19 14:47:41,27,cscareerquestions,t3_1lfc8th,False,
myn1i05,"I wouldn't say that AI has mastered algorithms specifically. It has the same problems it has with them that it has with any other development.AI has mastered taking a clearly articulated, simple, well-defined problem and producing a solution for it in a vacuum. Unfortunately, basically any ""solve a problem"" based interview falls into this category, and the same things that make them a challenge for AI to understand makes them a challenge for humans to understand.",PPewt,2025-06-19 14:43:53,10,cscareerquestions,t3_1lfc8th,False,
myn3f2q,"You know how good soccer players can usually juggle the ball much longer than bad soccer players? Well, despite the skill having no direct use, it can still be a useful heuristic to rank 10 candidates who want to join the team. Sure maybe some of the ones who pass simply practiced juggling and know nothing about playing soccer, but the basic fact remains.",ub3rh4x0rz,2025-06-19 14:53:13,11,cscareerquestions,t3_1lfc8th,False,
myn0m3x,Because it has been like this for a long time and companies (people) are lazy.,Consistent-Cup-3900,2025-06-19 14:39:36,4,cscareerquestions,t3_1lfc8th,False,
myna8lh,Leetcode is simply an IQ test for software developers. They are either trying to filter out people who more or less faked their entire resume or they are searching for the mythical 1% developer.,rmullig2,2025-06-19 15:26:23,5,cscareerquestions,t3_1lfc8th,False,
mynkkc6,lol what> suddenly so popular ... AIThey got popular before LLMs went mainstream. > the thing AI is best atLLMs are really good at this because there was a lot of data to train them on. There was a lot of training data because algo interviews were already very popular.> I have eight years experience lmao... people were already doing these types of interviews long before you even joined the industry.Were you at a single company for the whole time or something?,ur_fault,2025-06-19 16:16:08,4,cscareerquestions,t3_1lfc8th,False,
myn14m9,"There’s an historic level of unemployment in software engineering which means a huge number of job seekers. Interviewing is a task where working engineers are incentivized to minimize their time on it. This means that they want interviews that take them zero time to prep and “objective” evaluation criteria. Twenty years ago Google made headlines by asking brain teasers in interviews like “how many ping pong balls would fit in a jumbo jet?” This led to the rise of cargo-cult interview processes where you just grab two leetcode medium questions to ask in a 60 minute interview. If we run seven rounds like that then we can claim that we only hire the smartest 0.1% of all engineers. (Approximately none of that is true, btw.)In other words, it’s popular because interviewers are lazy and there’s a huge population seeking jobs.Here’s my advice: give yourself a time limit to practice this stuff, but take s many real interviews as you can—even just for practice (and even if you fail). If you find a role that *doesn’t* do these kind of lazy interviews *go there* — the culture you see in the interview process is the culture you will see at the company.",DrCaret2,2025-06-19 14:42:05,9,cscareerquestions,t3_1lfc8th,False,
myn1f36,"I've been in software development for nearly 10 years, and i've never had to write a graph algorithm, implement my own sort, use DFS, or Dijgstra or any of the other popular DSA algorithms on the job. Are there jobs that actually require it? Yes, and I'd be utterly unqualified for those roles. But if a job doesn't need it and you still test with it, why?",Anxious-Possibility,2025-06-19 14:43:30,5,cscareerquestions,t3_1lfc8th,False,
myq9j4r,"I know a dude with 8 YOE who was job hunting the past year. He said, in a decent market, many of his technical interviews would've been 100% a-ok. But because the market is what it is, even a minor flaw among minor flaws is enough to disqualify you.",Available_Pool7620,2025-06-20 00:41:25,63,cscareerquestions,t3_1lfq7ra,False,
myq6dac,No one can really tell you what signals the interviewers want to see. All you can do is to make sure you perform to the best of your abilities and hope for the best. It's not ideal but that's just how it is. But in my opinion taking longer to get to the solution isn't a big deal as long as you clearly demonstrate all the signals I want to see.,throw_onion_away,2025-06-20 00:22:20,51,cscareerquestions,t3_1lfq7ra,False,
myq7nj9,Pretty much. Seems like they all want someone on adderall cause damn.Practice leetcode top 50 or 75 (stick to one language) and be as robotic as possible,V-weezus,2025-06-20 00:30:05,43,cscareerquestions,t3_1lfq7ra,False,
myq9vta,"Quick caveat that if you're in India, I have no idea if this applies to you.In my experience, which admittedly is only about 6 years so maybe a grey beard can correct me, is that the biggest mistake you can make is thinking that a technical interview is like a test at school. Most of the time they are not, and if you come across a company that does treat interviews that way, you don't want to work there anyway.A technical interview that's administered well and evaluated fairly is an evaluation of your problem solving process and your understanding of the technology you're working with. Here are my tips, many of which I've gotten from FAANG recruiters so I assume they're good for most of the industry:- Do not start coding right away. Collecting requirements is a good thing, and something that good interviewers will appreciate.- Always think out loud. You're better off talking through a problem than keeping your entire process internal. It allows the interviewer to hear how you arrive at a solution, what you're taking into consideration, and even allows them to interject if they have a suggestion or you've misunderstood the problem.- As you're outlining and then coding your solution, talk through what you're doing and mention trade offs. Stuff like ""I'm going to use DFS here instead of BFS because...."" will demonstrate to the interviewer that you're not just reciting a memorized solution and you understand the options before you.- Do not get nervous if you get stuck. I'm naturally a bit nervous, and my first reaction is to get very sweaty if I'm not sure what to do next and it's cost me positions before. When you get stuck, just stay calm and talk it through with the interviewer. Most of the time they're happy to provide a hint or two, and as long as you don't come across as entirely clueless, it won't count against you. I would even go so far as to say it might help you a little, since someone who gets stuck isn't using an AI cheat tool. At least they know they're not being lied to. In summary, the technical interview isn't a test of whether or not you can invert a binary tree from memory. It's an opportunity to see how you solve problems, and the more junior the position, the more important coachability becomes, so taking hints and implementing them is not only ok, it's a good thing. Best of luck in your interviews. Just relax and work your way through the problem and you'll be fine.",Ozymandias0023,2025-06-20 00:43:34,16,cscareerquestions,t3_1lfq7ra,False,
myr8q0y,"With a 45 minute interview, I generally expect a breakdown like this:* 5 minutes intro, setup* 5 minutes clarifying questions* 20 minutes primary coding* 5 minutes thinking about test cases* 5 minutes extension questions* 5 minutes questions for meNow; I had a candidate recently miss every hint they should start coding, didn't start until 15 minutes in and I'm already at ""OMG they're never going to be done in time"" and then absolutely obliterated the coding section, so it doesn't have to be this pattern, but...Yes generally if it takes 10-15 minutes to go through clarifying questions, you're probably looking too hard for corner cases. That said, a good interviewer should be nudging with ""You can probably start coding now"" or similar, when you've caught all the cases they expect you to.Also; I give a strong hint that I'm really only interested in the core algorithm, not the data classes, or really even method signatures. Some candidates try to do these anyway, but if you can focus on the problem and not the boilerplate, that may help.",rnicoll,2025-06-20 04:19:57,4,cscareerquestions,t3_1lfq7ra,False,
myqk7hl,"Asking clarifying questions and understanding the problem is good... but you shouldn't just sit there and burn 10-15 minutes on it before writing a single line of code.Right now you're approaching interviews in a waterfall style. You're collecting all the requirements upfront, which takes a large amount of time, and you only start once everything's extremely well defined.Instead, maybe start approaching interviews with an agile approach. Sure ask your questions, but at the same time aim to get *something* on paper as quickly as possible. Get something going, and then ask clarifying questions as new things pop up while you're implementing. You don't need to spend 15 minutes asking questions before you're able to at least *start* coding, right? The questions aren't *that* vague. You don't need to be ""fast"", I think they're expecting you to be ""agile"" and take an incremental approach. Just like they don't expect you to arrive at the optimal solution the first time, they expect you to arrive at the brute force solution which you then iterate on to improve.I'm just hypothesizing here, maybe I'm way off base. I'm not the greatest interviewer, but my interviews are very much agile. I'm extremely communicative throughout, but I jump into running through examples ASAP, and get what code I can written ASAP. I can work out ambiguities and questions as I go.All that said, in the current job market, you don't need to be ""perfect"". I job hopped in 2024, which was also a very bad market, and for my current job I completely flopped one of the interviews. I did great at the backend oriented question, handled all the system design questions with ease, and then they hit me with some frontend stuff which is not my forte. I struggled, I needed hand holding, I didn't even get through the entire problem. And yet, I still got the offer.",SouredRamen,2025-06-20 01:44:13,1,cscareerquestions,t3_1lfq7ra,False,
myr6a9j,"I recently had a faang interview but it was actually really easy. It depends on what position, what department, and if they like your resume they might just give you easier questions. I didn't get it, but it's because I wasted my time studying their leetcode practice problems and then I was surprised when my time would have been better off practicing very basic C++ which I just had hardly done in recent years. The interviewer gave me like 3 mulligans even.",tomqmasters,2025-06-20 04:02:29,1,cscareerquestions,t3_1lfq7ra,False,
myudyyg,"Depends on the team and how you get along with the members of the team.Some people are just picky and want to find reasons to say no either due to bias, bad mood or to look smarter so they go in looking for reasons to dismiss you. My easiest interviews were at FAANGs and the most complex ones with more rounds than necessary, more cherry picking and bitter team members were at startups or non technical companies that wanted to seem smart. I’d focus on your people skills first and foremost and tech second. Leet code and system design seems to be all the rage still, but the impression you give people matters more",Few-Conversation7144,2025-06-20 17:12:30,1,cscareerquestions,t3_1lfq7ra,False,
mywz7yg,"No, they don't expect u to be faster, they expect u to be faster than the previous guys. So if the company is super popular, the bar will be artificially higher.Last place I worked, we deployed fixes once a week on Friday and it broke instantly on Monday.So no, of course nobody expects u to be perfect, that's unreasonable and unnecessary. Changes don't make it to production instantaneously but ya during interview, they expect it to be that way, so stupid.",SpiderWil,2025-06-21 01:30:17,1,cscareerquestions,t3_1lfq7ra,False,
mzes54e,"I've seen technically great candidates get rejected because of perceived interview mistakes (eg: tone, unprofessional expressions, inability to be concise, etc). There are hundreds of candidates for any given position. Feels like the employer has the luxury of aiming for the perfect candidate and any mistakes will be costly",XenOmega,2025-06-23 22:17:53,1,cscareerquestions,t3_1lfq7ra,False,
mybc53s,Networks! It's a surprisingly artisan type of work especially the wireless/RF part. You can try to model things in simulations but oftentimes its your creativity and experience that enables you to provide optimal solutions.,Stubbby,2025-06-17 19:03:52,12,cscareerquestions,t3_1lds18y,False,
myb3zy9,"I haven’t left the field but I have several friends that went into IT help desk jobs and they seem to enjoy it. It doesn’t pay as well but it’s easier to get into, I think you just need to get some certifications. I’m not sure what the competition’s like these days for those roles.",dijkstras_revenge,2025-06-17 18:25:42,5,cscareerquestions,t3_1lds18y,False,
myeet9c,"Teaching, technical writing, project management, or UX research are all solid pivots—you're not quitting tech, you're just changing how you use it.",LPCourse_Tech,2025-06-18 05:30:48,2,cscareerquestions,t3_1lds18y,False,
myeuv6r,"Kinda difficult question to answer if we don't know why you wanted to try a CS career in the first place...did you like coding at all? If so, then maybe you can try getting into indie development or something...but if you just have no interest in coding then heck just do whatever you want...",tkyang99,2025-06-18 08:00:21,0,cscareerquestions,t3_1lds18y,False,
myc2lky,Interesting.  How did/would you get into networks from swe?,InitialAgreeable,2025-06-17 21:09:17,1,cscareerquestions,t1_mybc53s,False,
mycgt13,"I joined a startup and wore many hats and suddenly my wireless networking hat was bigger than the hats of people whose career was in wireless networking :)EDIT:There is a lot of networking *experts* that have very shallow knowledge and that is immediately apparent within a 5 min conversation. Especially people who worked for large networking companies as they were delivering an extremely narrow sliver of functionality and when overall solution is concerned, they dont have much to offer.",Stubbby,2025-06-17 22:21:54,4,cscareerquestions,t1_myc2lky,False,
myagftv,"As someone who has been in a kinda similar situation, know that problem is not your intelligence or affinity for software development, you can fix your issues by:1. Addressing bad habits that have caused you problems before, like are you often pushing bugs in prod? - problem maybe you always try to do things fast.2. look if there is a software, tools or maybe simple extension that can help with some common issues, maybe your coworkers are even using it. for example I often had typos in my code for variable names, found out from coworker there is a vs code extension that tells you about them.3. finally, be confident and trust yourself, you are not dumb or incompetent 5 years is a very long time to keep you employed if that was the case.",mdivan,2025-06-17 16:38:30,13,cscareerquestions,t3_1ldr2b8,False,
myagpke,I found that using GenAI to generate test cases (or even just suggest them) is pretty useful because it will suggest ones you haven't thought of.,Bobby-McBobster,2025-06-17 16:39:46,3,cscareerquestions,t3_1ldr2b8,False,
myaaihm,If you’re already feeling this way would it help to ask your manager straight up if that’s the way they see it too? And if so maybe they’ll then share something you can work on instead leaving you marooned in existential dread. I’ve been in the same place and avoiding that conversation (whether with the manager or some other coworker I trusted) didn’t help me.,Chekonjak,2025-06-17 16:10:29,1,cscareerquestions,t3_1ldr2b8,False,
myfiong,At least you have one,BayouBait,2025-06-18 11:32:36,1,cscareerquestions,t3_1ldr2b8,False,
myfx5h8,"If you’ve been at the company for over 5 years you should have the seniority to be driving change for the better in the codebase, you shouldn’t just be a passenger getting dragged down by a brittle codebase like a fresh junior dev.",TracePoland,2025-06-18 13:03:15,1,cscareerquestions,t3_1ldr2b8,False,
mye8k62,"Seems like someone needs to read up on the topic of imposter syndrome. The imposter syndrome is a psychological pattern where individuals doubt their accomplishments. They feel like frauds, despite evidence of their competence and success. People with imposter syndrome often attribute achievements to luck rather than ability. This can lead to anxiety, self-sabotage, and a persistent fear of being “found out.”",CorDharel,2025-06-18 04:40:29,0,cscareerquestions,t3_1ldr2b8,False,
mybwt4z,"I appreciate the input. We don't have a formal QA process here, so it's usually up to us developers to QA our own work unless it's a bigger feature/change. I do perform a lot of testing, but I usually just miss a case I didn't even think of. There are so many aspects of our code base that interact with each other, so it's easy to miss things. I don't usually have problems with variable names and smaller stuff like that. It's usually what I just mentioned, like breaking existing functionally that gets me. We don't have any test code either. Furthermore, our code is highly customized to countless different scenarios in which our customers use it.And I do try to stay confident in myself, but being overconfident can lead to these mistakes as well. I feel like I've just come up with excuse after excuse here, but I think I'm just seeing how difficult this job really is. One thing that I'm trying to do more is to create testing outlines to document the changes/testing done so I can at least show my effort.",HittingItFlush,2025-06-17 20:41:42,2,cscareerquestions,t1_myagftv,True,
myb25dc,I would not do that. That could be the trigger for a hard conversation that ends with you holding a cardboard box with your personal items in it.Maybe management hasn't been paying attention and haven't noticed.,terjon,2025-06-17 18:17:03,11,cscareerquestions,t1_myaaihm,False,
myba7ow,Is it safer to rely on them never noticing? Maybe as a middle ground they can reach out to a trusted coworker or friend instead.,Chekonjak,2025-06-17 18:54:51,1,cscareerquestions,t1_myb25dc,False,
mynahdt,"Yeah, that would be better, assuming there is someone there you can actually trust.",terjon,2025-06-19 15:27:33,2,cscareerquestions,t1_myba7ow,False,
mydjbst,"If you want promotions, your goal should be to make your manager and your skip level's lives easier. Not to please your teammates, not to hone your skills, not to be a good engineer - but simply to make those 2 people happy.Good luck and congrats on the offer!",asteroidtube,2025-06-18 01:58:18,35,cscareerquestions,t3_1le4sht,False,
mydjwwg,"Learn how to learn. The most valued people, in my opinion, are those that can be thrown a problem and can just “figure it out.” That means dealing with not well-defined problems, giving things a few solid attempts before asking help from others (this can be a balance, especially when you’re just starting out), and being as autonomous as possible. Also I’m glad that chat GPT wasn’t around when I first started. Try not to let it do too much, treat it like a better google and use it to understand why things work",vikingville,2025-06-18 02:01:37,13,cscareerquestions,t3_1le4sht,False,
myeuw7n,"Congrats on the offer man! Going straight from research to industry is actually a solid path. You've got the problem solving skills down which honestly matters more than most people think :DFew things that'll serve you well though:First day, don't overthink it. Be curious, ask questions about the codebase, understand the product you're building. Most people forget new devs need context on why they're building something, not just what.The ""work your ass off"" mentality is good but be smart about it. Focus on delivering quality over quantity. I'd rather have someone ship one solid feature than rush through three buggy ones. Oof, and the biggest pitfall? Not asking for help when you're stuck. Senior devs expect you to get stuck, they just want to see you've tried to figure it out first. Give yourself 30-45 mins on a problem, then ask.Also, document everything you learn about their systems. You'll thank yourself later and it shows you're thinking beyond just your immediate tasks.Research background is actually an advantage in startups. You know how to dig deep into problems and you're used to figuring things out independently. That's valuable.One last thing. build relationships with your teammates. Grab coffee, understand what they're working on. Technical skills get you hired but relationships help you grow.You got this :)",Informal_Cat_9299,2025-06-18 08:00:38,3,cscareerquestions,t3_1le4sht,False,
mydy0fm,"How did u land it. Same situation same city, no job",Redgeraraged,2025-06-18 03:25:14,2,cscareerquestions,t3_1le4sht,False,
myqgdzy,"I'm going to answer your question from a different angle. I'm a senior engineer that mentors juniors and interns, and gets new hires up to speed so they can start contributing. I have an informal ""30 minute"" rule for our interns. If you're stuck on something, spend 30 minutes trying to figure it out on your own. If you solve one problem that leads to a new one, reset the clock. If you've made zero progress for 30 minutes then you can ask for help. This has two benefits:1. it forces you to be self-reliant and sharpen your ""figure it out"" skills which are incredibly important in this industry2. it prevents you from wasting an entire day on a problem someone knows the answer to in 30 secondsStart there.",allllusernamestaken,2025-06-20 01:21:53,2,cscareerquestions,t3_1le4sht,False,
mydr9f4,My advice is to stay organized and take lots of notes. It’s amazing how much I still reference notes I took from years ago. Also helps to avoid asking the same question multiple times,Kool-Kat-704,2025-06-18 02:43:36,1,cscareerquestions,t3_1le4sht,False,
myq16ts,"You got the offer among others offers, you will be fine and are wanted in the industry!Pick the brains of others, look for mentors, be a person others want to be around or gravitate too, I can’t stress this one enough but read the room!!! and ultimately just do your best, you got the job for a reason :thumbs_up:",margielalos,2025-06-19 23:51:46,1,cscareerquestions,t3_1le4sht,False,
mydnxa9,"Good communication. That is one thing AI can't touch. Learn how to listen, how to ask the right questions. When to pause, when to talk.Overdeliver, promise little and deliver more.Address problems and blockers early.",InlineSkateAdventure,2025-06-18 02:24:29,1,cscareerquestions,t3_1le4sht,False,
myzavmf,"That's pretty weird. It wouldn't be a showstopper for me as it's obviously intended to be used for a PR sizzle reel. Honestly I recommend you just take the internship and don't think too hard about it.If shit gets weird, it's what ... 3 months?",Eire_Banshee,2025-06-21 13:03:28,31,cscareerquestions,t3_1lgvwzw,False,
myzc789,One of the interns I worked with ended up being the face of the company’s intern section of their website. They just got a good picture of him being mentored by someone else.,JMartheCat,2025-06-21 13:12:14,19,cscareerquestions,t3_1lgvwzw,False,
myzc9yn,It could be interpreted in many ways. Most likely they want to make some photos or videos of their work environment for their online presence and they want to make sure that no-one has an issue with thatIt never hurts to ask them what this clause actually means. That gives you a paper trail in case they do make an uncanny AI recreation of yourself,Loves_Poetry,2025-06-21 13:12:45,12,cscareerquestions,t3_1lgvwzw,False,
myze2p1,Aren't unpaid internships illegal in the US unless they are for educational purposes and the company does not benefit from your work?,RailRuler,2025-06-21 13:24:25,12,cscareerquestions,t3_1lgvwzw,False,
myzwudv,"Not a Lawyer, but I’d ask that it be amended to add something like only in promotion of and marketing of the company. IMO that reads far more broadly than most media’s releases.",Rascal2pt0,2025-06-21 15:12:37,3,cscareerquestions,t3_1lgvwzw,False,
myzd4h1,I have signed this clause without regret,TheMoneyOfArt,2025-06-21 13:18:16,2,cscareerquestions,t3_1lgvwzw,False,
myze7dw,Worst case scenario your photo might become a stock photo on the internet for “intern being mentored”.,Broomstick73,2025-06-21 13:25:16,2,cscareerquestions,t3_1lgvwzw,False,
myzldnb,"""Unpaid internship"" is illegal. Dont do this. Run. Just run as fast as you can away from these people. They are immoral, will use and abuse you and they dont care about following basic labor laws.",SomeDetroitGuy,2025-06-21 14:09:32,2,cscareerquestions,t3_1lgvwzw,False,
myzz2ih,Please do not take an unpaid internship.,ThatOneComment,2025-06-21 15:24:22,2,cscareerquestions,t3_1lgvwzw,False,
mz0w03b,Don't sign this.Edit: A lot of folks do not seem to understand the implications here in this thread. This would grant them rights to nearly everything OP does including things unrelated to their job.,Just_Another_Scott,2025-06-21 18:16:39,2,cscareerquestions,t3_1lgvwzw,False,
mz1t8ya,"I think you’re worrying too much tbh. Experience in core distributed systems at an infra company definitely works in your favor. Because those roles are rigorous and always in high demand unlike most of the “full stack” javascript slop. Once you familiarize yourself with the shiny new tech stacks and do some leetcode grind, you might have an easier time doing personalized outreach to well funded startups in your area of expertise (cold dms to the founders/ctos, tapping into your network for intros etc) vs applying for roles via recruiters at a mid-large corporations that are currently on a hiring freeze or find your gap a bit too much of a red flag. I’ve worked at 3 different startups and “guy pivoting careers from physics to programming” or “guy coming back to work after a 2 year parental leave” weren’t uncommon archetypes, they only care about you moving quickly and getting shit done. Once you do a year or so at a startup doing some generalist work, you can go back to whatever role or company that appeals best to you without worrying about the gap. I do have some doubts on whether grad school is the move though, you’ll be burning way too much money in tuition + it’ll keep you occupied and away from full time work (on top of your 2-3 year gap) = all for very little marginal gains.Also, take most of the advice from this subreddit with a grain of salt, it mostly self-selects for unemployed new grads who complain about how the job market is impossible (yes it is definitely harder but not remotely “give up and find a different career” hard, if you’ve some experience under the belt)",AugusteToulmouche,2025-06-21 21:19:33,23,cscareerquestions,t3_1lh6uc4,False,
mz3drz1,"The market is extremely competitive right now, anything like a big ass gap will work against you when they're filtering through hundreds of resumes for a job. Having a flawless resume is even just half the battle before the offer stage.",jimRacer642,2025-06-22 03:08:49,5,cscareerquestions,t3_1lh6uc4,False,
mz1sccc,"A gap that big is a big deal, especially in a hyper-competitive market like this one, but it all really depends on the market.What kind of personal projects do you have on your resume?",polymorphicshade,2025-06-21 21:14:23,9,cscareerquestions,t3_1lh6uc4,False,
mz269z8,"The industry has collapsed for US citizens. It won’t come back. Each job has 1000 applicants. Pay is worse than before, working conditions worse. Don’t waste money on grad school for anything related to software. Pick a new vocation.",Nofanta,2025-06-21 22:35:48,17,cscareerquestions,t3_1lh6uc4,False,
mz20nv4,"Edit your post to include how many years of experience you had before the gap. You have a damn good reason for taking time off. But if you had two years experience with a three year gap, you are probably hosed. 8 years experience and had significant ownership of the core distributed systems work? It’ll be tough but I’m sure you will be fine",Illustrious-Age7342,2025-06-21 22:02:11,2,cscareerquestions,t3_1lh6uc4,False,
mz3koa5,same position bro. keep chugging,SamWest98,2025-06-22 03:58:13,2,cscareerquestions,t3_1lh6uc4,False,
mz3lunz,I would use the masters to get into college student/grad only internships at a faang and work my tail off to get a return offer. If you really insist on staying a sde.,Modullah,2025-06-22 04:07:02,2,cscareerquestions,t3_1lh6uc4,False,
mz220zm,I’d list the time as education if you were taking classes. And I’d also be up front at taking time off because of life.,HackVT,2025-06-21 22:10:16,2,cscareerquestions,t3_1lh6uc4,False,
mz1zpqe,"Sounds like you are still young probably on your 20s. Then going to school again is perfectly fine, and you don’t have to worry about the gap once graduated",AmbassadorNew645,2025-06-21 21:56:39,1,cscareerquestions,t3_1lh6uc4,False,
mz2femt,information no,giddiness-uneasy,2025-06-21 23:30:52,1,cscareerquestions,t3_1lh6uc4,False,
mzffiup,Yeeeeeahhhh,zipped_chip,2025-06-24 00:28:11,77,cscareerquestions,t3_1lix52b,False,
mzfg3ot,"Yes, the job market is bad. Tbh, I'm still surprised by people being surprised at the state of the tech job market, when everyone is always talking about how bad it is. We are not lying. It really is that bad.",Illustrious-Pound266,2025-06-24 00:31:32,114,cscareerquestions,t3_1lix52b,False,
mzffq76,Yes it is,Astral902,2025-06-24 00:29:22,20,cscareerquestions,t3_1lix52b,False,
mzfj1ho,Yes it’s brutal…. if you’re that out of the loop then you’re in for a dose of reality. Beat of luck.,Dear-Captain1095,2025-06-24 00:48:50,20,cscareerquestions,t3_1lix52b,False,
mzfh8mq,">What's going on? [Uncle Sam pulled out of the investment economy around 2022.](https://www.reddit.com/r/cscareerquestions/comments/1avadgm/comment/kr9rq96/)So no more swimming in ""unlimited funding"" for us (like 2011-2021 lol) until he decides to share the money printer with us once again.",maz20,2025-06-24 00:38:12,35,cscareerquestions,t3_1lix52b,False,
mzfkqvn,60% of roles I’m seeing aren’t even hiring for SWEs in the U.S. below a staff level.,Bubbly-Concept1143,2025-06-24 00:58:52,9,cscareerquestions,t3_1lix52b,False,
mzfhrvn,My advice: - remote work is dead. Youre competing with every other unemployed (and some employed) CS person in the country. And outside of the country. You should be applying to in person or hybrid roles near you if you can. - networking is incredibly important. Call old colleagues and friends in the industry. Cash in all the favors you can.,deadlock_dev,2025-06-24 00:41:21,23,cscareerquestions,t3_1lix52b,False,
mzfnzqh,Interest rates jacked up in 2022 so there are no more startups running on free money to pull talent from bigger companies. Also companies can no longer write off software development expenses on their taxes which kills jobs. This is something that can change with currently proposed legislation. Interest rates will have to wait.,The_Mauldalorian,2025-06-24 01:17:57,5,cscareerquestions,t3_1lix52b,False,
mzfm3io,"Like others have said it’s tough, but from what I’ve seen not impossible. Had multiple mid level buddies with fairly basic experience land hybrid roles in non-tech markets. The main thing is full remote is going to be really tough. Also depending where you’re at, look at state/city level jobs. I’m cleaning up with that right now and fully remote.",Dear_Measurement_406,2025-06-24 01:07:02,4,cscareerquestions,t3_1lix52b,False,
mzflh5k,Yeah it’s horrific. Ur lucky u graduated 5 years ago and got experience,erinthefatcat,2025-06-24 01:03:18,3,cscareerquestions,t3_1lix52b,False,
mz8htl9,"I didn't get an internship until I graduated, lol. don't beat yourself up. The only advice I would give you for your resume is that your projects are spread out across a bunch of different topics. Instead of having an ""other projects"" section, I would create several versions of your resume, with each version containing projects you've done that are tailored towards some field. (AI, Robotics, Games, etc).",yungbasedd,2025-06-22 23:13:03,30,cscareerquestions,t3_1li0n46,False,
mz8c9j5,"Well if you are interested in academic research, at least this will increase your chances of getting into a PhD program.There are a bunch of people working at prestigious Faang like companies who would be envious of you if you do get into a doctorate program.",Resident-Ad-3294,2025-06-22 22:41:04,5,cscareerquestions,t3_1li0n46,False,
mz8od3l,"Take the CC off. Any mentions of it off. I'm from a CC, and I've spoken to some recruiters and employment managers. They all say the same thing. ""CC is not where we look for potential interns"". Plus, it could be weighing you down in ATS systems as a person with 2 sections of education instead of 1. Also, try to network. UCSD has a lot of students that will be going to big firms come this summer, and many of them will get full time offers. Being friends with those people will help a ton.Finally, you do have an internship. That research internship is something you can present as evidence that you are employable.Finally, I would wonder why you haven't taken any courses on things like OS, compilers, databases, etc. You know, core CS stuff. That might be something an employer might wonder too, why all your coursework is solely focused on Ai and ML. As for the job search, I'm left wondering how exactly you went about that. Like, did you spend a lot of your time on LinkedIn? Handshake? In person recruiting events? Direct company applications? Indeed? There is some statistical evidence suggesting that some of these lead to jobs at higher rates than others(LinkedIn sucks for this, while Handshake and in person are a lot better).",ebayusrladiesman217,2025-06-22 23:50:48,9,cscareerquestions,t3_1li0n46,False,
mz9zex7,Are you getting callbacks? Any email backs from recruiters on next step? Are you failing at the resume stage or the actual interview stage?,Potential_Owl7825,2025-06-23 04:42:16,1,cscareerquestions,t3_1li0n46,False,
mz8uc2q,Yeah I guess I could change up that other projects section and tailor more. Thanks for the advice!,Exact-Reputation9798,2025-06-23 00:26:14,5,cscareerquestions,t1_mz8htl9,True,
mz8tm2l,"I guess so, but that's if I get into a PhD program. We'll see.",Exact-Reputation9798,2025-06-23 00:22:11,2,cscareerquestions,t1_mz8c9j5,True,
mz8tj3d,"Okay I will remove CC education. On the part why I haven't taken OS, compilers, etc, that's because I still had some (lower division + upper division) prerequisites to complete before being able to be eligible taking them. CC transfer moment : ()For the job search, 70% was linkedin, 15% handshake. Then for the rest, I spent a lot of time on writing applications out to research internships here at UCSD and then even some international ones. Applied to some AI research internships that looked like they were targeting students as well, but yeah didn't get into any of them.Yes lots of direct company applications, first going from linkedin to then their website.I attended only two recruiting events, each were specific companies where you'd ultimately they told us to apply on their website, but yeah did not get an offer.",Exact-Reputation9798,2025-06-23 00:21:41,3,cscareerquestions,t1_mz8od3l,True,
mz8cltx,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-22 22:43:02,1,cscareerquestions,t1_mz8clrr,False,moderator
mza07j3,I think I'm failing at the resume stage. I've had 2-3 interviews out of the hundreds of the applications I've sent.,Exact-Reputation9798,2025-06-23 04:48:29,1,cscareerquestions,t1_mz9zex7,True,
myidir9,"Resume generally fine, market is just REALLY rough right now for anyone under 10 YOE, and still rough for people at or above 10 YOE.",Iyace,2025-06-18 20:07:58,39,cscareerquestions,t3_1ler44t,False,
myk6xw3,“Javascript” => “JavaScript”“Typescript” => “TypeScript”,beyondavatars,2025-06-19 02:03:38,9,cscareerquestions,t3_1ler44t,False,
myihe36,"Things I would change: * Add a location for your last 2 jobs. (even though they are remote)* Move work experience to the top.* Remove the summary section.You can sell yourself as 3+ yoe with that 8 months internship.Anecdotally, I found my reply rate is much higher when applying to the local market. I do wonder if recruiters use your job location as a filter.",Ad-Minus,2025-06-18 20:26:39,10,cscareerquestions,t3_1ler44t,False,
mylkcan,"A few changes I would make based on what worked for me personally (4 YoE).First, don't put too many bullet points per position. My longest position (2 years) has 4 bullet points. I would go 2-3 per position, and really focus on the main accomplishments. Also, don't exceed two lines per point.Second, try to be a bit more specific. For example, describe what the ETL pipeline did and what your contributions to it were. Focus on the impact you made and how you made it, rather than just listing technologies or describing the task.Third, I would also chill out a bit on the keyword stuffing. While you do have to massage a couple keywords into your bullet points, it should feel natural and not excessive. The skills sections is usually the better place for keyword stuffing technologies, whereas the bullet points are better for keyword stuffing higher-level concepts. Excessive keyword stuffing might get you through ATS more often, but it also will turn off humans. Try to strike a balance.Lastly, I skilled a summary altogether. I hear mixed things about them online, but I've found that dropping it improves the focus of my resume.My current resume is <400 words. In my opinion, with such high application volume, it's critical for a resume to be short and to the point. Taking away unnecessary wordiness and corporate speak makes your resume more concise and more authentic.",Annual_Willow_3651,2025-06-19 08:31:41,3,cscareerquestions,t3_1ler44t,False,
myny9ul,Are you getting interviews? I’m getting interviews but failing,EitherAd5892,2025-06-19 17:22:48,1,cscareerquestions,t3_1ler44t,False,
myotd9x,"Hey, totally get how rough it is right now; 2 years exp and suddenly laid off can feel like starting over :confused_face:. A few tweaks I’d make to help boost callback chances:1. Highlight relevant metrics early — if you improved uptime, reduced latency, fixed X bugs, share that up front in your summary/experience to catch attention.2. Focus on SRE/Full‑Stack wins — if you automated builds, improved CI/CD, or built backend services, list those first with details like languages, tools, outcomes.3. Tailor per location or industry — Austin vs. Raleigh vs. non-tech differs. Add a one-liner like “open to on-site roles in Austin or Raleigh” — helps with local filters.4. Consider adding a short “SRE/DevOps projects” section — even if small or self-led, that shows recent hands-on work and keeps ATS engaged.5. Update your summary to show recent progress: *“2 yrs backend/SRE experience; laid off recently but now focusing full-time on improving resilience through independent automation projects.”*You’re close — your core experience is solid. Want help tightening your summary or building a quick skim‑ready project entry? Feel free to DM — happy to help polish it for those market spots.",scaramouchefandangoo,2025-06-19 20:02:49,1,cscareerquestions,t3_1ler44t,False,
myie98e,Bro I am at 13 years and it's shit right now.,BigPepeNumberOne,2025-06-18 20:11:34,19,cscareerquestions,t1_myidir9,False,
myii68g,"Also consider listing the internship as Jr. Developer if appropriate.You probably were a Jr. Dev and not an intern if you were there for 8 months. a 6-12 week program is an internship, not a whole year on the job.",donniedarko5555,2025-06-18 20:30:21,4,cscareerquestions,t1_myihe36,False,
mz3j8y2,"I had a guy on my team go elsewhere and when the company was hiring he messaged a few of us asking if we were interested. Did not even have to interview, was more of a come check the place out and see if you’d like to work here since we know the place you came from hired good workers and guy had recommended me. The power of using your network is the best because you can often get jobs that aren’t yet listed or they are thinking of adding but haven’t done so yet.",LOL_YOUMAD,2025-06-22 03:47:46,30,cscareerquestions,t3_1lhefz8,False,
mz3jaci,"All of my best jobs — about half of them — I got through my network. Usually the job was created for me, there were no other candidates, and HR was the last to know.",Traveling-Techie,2025-06-22 03:48:03,23,cscareerquestions,t3_1lhefz8,False,
mz4b1ir,"1. Internship - Online application on my school's careers board that external companies would post on..2. Internship - Talked to a recruiter face to face at the college caree fair.3. Job #1 - Online application on my school's career boad.. Never ran into them during the actual career fair, but they interviewed me while they were there just from the online application.4. Job #2 - Online application on the company's careers page. No referrals, just found them from google searching.5. Job #3 - Online application on the company's careers page. No referrals, just found them from google searching.4. Job #4 - Online application on the company's careers page. No referrals, just found them from google searching.The only value I think LinkedIn has is in finding *companies*. Their job post search algorithm is trash, and the data that fuels it is also trash. But they're a great way to discover *companies*, after which you can go to the company's careers page to see the full picture of what they're hiring for. All too often LinkedIn has recommended me jobs that were terrible fits for me, but after going to the company's page, I found postings that were a perfect fit that LinkedIn's shitty algorithm hid from me. Or a post that is still open on LinkedIn, might be closed on the company's careers page because they just neglected to update LinkedIn. And the reverse, a company put a posting on their careers page, but didn't put it on LinkedIn or Indeed.Always go to the source of the job. Don't put your career in the hands of a middle-man.",SouredRamen,2025-06-22 07:49:30,8,cscareerquestions,t3_1lhefz8,False,
mz3k35b,"**Answer to your last question:** Reach out to people in the company for coffee chats. The best piece of advice I got from a chief marketing officer is to waste time. You don't always need to be working on stuff, sometimes it's good to talk with others and better understand what others are doing and how the business works. I regularly reach out to people, even people I have never met in person. It has worked out well and management really likes it as well since it gives their projects more visibility.**Short answer to your original question**: a recruiter reached out for a job below my skillset which accidentally lead me to getting an internal promotion to a software engineer, which wasn't my initial intended career path, but I am so glad I kept an open mind when taking the initial job",sersherz,2025-06-22 03:53:55,4,cscareerquestions,t3_1lhefz8,False,
mz3mgtf,by applying on linkedin,SoulCycle_,2025-06-22 04:11:43,3,cscareerquestions,t3_1lhefz8,False,
mz73hgr,The last company laid off half the department (and team). I did all the work to make the remaining team look busy while they interviewed out. Then one of them recruited me. I technically applied to zero jobs.,travelinzac,2025-06-22 18:44:17,2,cscareerquestions,t3_1lhefz8,False,
mz3kj71,"Most of my offers were a mix of: \- somebody reaching out to me, because they had gotten ahold of my resume (either online, or by way of somebody I had worked closely with before) and thought I would be a good fit for their team and/or heard good things about me \- I reached out to somebody because they wanted a very niche skillset and/or situation that I was perfect for.Networks help a lot, because there are a lot of job opportunities that aren't externally available (or only get posed once a company already has their pick in mind). Networking remotely isn't that different from networking face to face, you're really just building relationships with folks. Its sure easier to build relationships in person though, so there's that aspect working against you if you're 100% remote.",Federal_Employee_659,2025-06-22 03:57:11,1,cscareerquestions,t3_1lhefz8,False,
mz3knf4,My brother found his current SWE job from a recruiter messaging him on LinkedIn.,metalreflectslime,2025-06-22 03:58:03,1,cscareerquestions,t3_1lhefz8,False,
mz3kr3k,Following,Life-Pangolin-586,2025-06-22 03:58:49,1,cscareerquestions,t3_1lhefz8,False,
myngai5,"It’s an internship, you’re there to learn brother not know everything to be good at the job (unless it’s a crappy internship). Talk to your manager!",billgilly14,2025-06-19 15:55:23,20,cscareerquestions,t3_1lfe9sn,False,
mynieb3,Internship is to learn and have something on your resume and you should better interview prep for full time role.,Consistent-Cup-3900,2025-06-19 16:05:33,6,cscareerquestions,t3_1lfe9sn,False,
myoxj3o,"Three days is about enough time to get through the HR stuff and understand where the coffee and toilets are. Expect to spend some time exploring; start with one section (with guidance) and work your way out, Remember the biggest part of your job is to be a sponge and learn. Your new coworkers don't expect you to jump right in without help and time to get the lay of the land. They \*do\* expect you to show an eagerness to learn. Expect to feel like you're drinking from a firehose. The first week of my student position (20hrs/week during my junior year; it'd probably be called an internship nowadays but at the time everyone thought of it as a co-op position (which everyone including HR was surprised to learn a few years later wasn't really what it was)) was spent getting my workstation set up to be somewhat usable after being handed an OS install CD and a boot command (it wasn't a PC or a Mac, the system would boot to firmware from which incantations had to be entered) and get briefed on the group's main tools and systems.",Loosh_03062,2025-06-19 20:22:40,5,cscareerquestions,t3_1lfe9sn,False,
mynxqw1,Just trust yourself and know that your team understands you are new and won’t expect you to 100% know everything. You will be ok. Keep asking for feedback and assistance when you need it.,SquirmleQueen,2025-06-19 17:20:12,2,cscareerquestions,t3_1lfe9sn,False,
myo0w87,"I felt the same during my internship. I’ve been working full time big tech for 3 years and I still feel it sometimes. It takes a while. You won’t feel competent ever during your internship and that’s okay. You just need to learn what you need to complete your tasksAsk questions. Don’t be afraid to sound dumb. Do your due diligence to figure shit out but don’t stay blocked. If you don’t know how to get started, ask",idliketogobut,2025-06-19 17:35:46,2,cscareerquestions,t3_1lfe9sn,False,
mz7eaam,The is completely normal. Learning a new company’s stack takes time even for seasoned engineers.Don’t pressure yourself to learn it all because that’s impossible!Focus on one small feature of the product and see if you can figure out how it works in the code. Another good thing to familiarize yourself with is the CI/CD workflow. How does your code make it to production?,grizltech,2025-06-22 19:40:14,2,cscareerquestions,t3_1lfe9sn,False,
myriflg,You just need to understand the small part you are working with. You won’t be able to understand the full stack of the company and honestly depending on the company there’s probably very little that do.It could take you up to a year to fully understand the code base your own team is working with.,TheCrowWhisperer3004,2025-06-20 05:35:37,1,cscareerquestions,t3_1lfe9sn,False,
myt2mey,Are you getting paid?,splashmountain37,2025-06-20 13:18:21,1,cscareerquestions,t3_1lfe9sn,False,
mynotc7,"Chat gpt piece by piece. Don’t tell them you are overwhelmed. Don’t even freakin talk to them, just close tickets.",V-weezus,2025-06-19 16:36:49,-10,cscareerquestions,t3_1lfe9sn,False,
myd58yp,"Similar situation with you, did computer vision research and human-ai interaction research my entire undergrad. Rejected to all grad schools I applied to, and now just trying to figure out how I can stay in the country and find a job.I recommend looking into research-based companies or companies/startups built by ML professors. If you’ve used Alphafold, maybe medical research institutions are looking for data analysts and ML specialists to build their tools. Not going to be always 6-figure big tech jobs, but still a great job to advance medical research and starting point for a great career.",Real_nutty,2025-06-18 00:37:59,15,cscareerquestions,t3_1le3gsl,False,
myfx1lm,"Honestly sounds like you haven’t applied to that much. You only applied to two colleges and had a recruiter go out of his way to interview you and tell you you’re the wrong fit for a job. You need to get thicker skin. Since you are so research focused I think you should continue applying to grad school programs. Plenty of people have been rejected by 9 to finally get accepted into 1 and it change their life. Same with jobs, when applying to need to accept only getting interviews for 1/50 applications.I think overall you need to decide what YOU want to do and make it happen rather than waiting for it to show up on a silver platter. For example if your dream is to get a PhD, then apply to as many schools as you can. I’m sure there’s a program excited to have you. If your dream is to work in industry, then apply to as many jobs that you’re interested in, and when you’re in the interview progress, sell yourself! I know it can be hard to not look at all the ways you don’t fully qualify for a job, but unless you think the job would actually be too difficult for you, most people have to learn on the job and rise to the occasion. Like many people lie saying they can do a skill, knowing they’ve never done it, or maybe have never done it professionally, but they know they are competent enough to figure it out in a week or month before starting the job and that they’ll be fine.",Silver-Impact-1836,2025-06-18 13:02:37,9,cscareerquestions,t3_1le3gsl,False,
myj4nlx,"No you didn't apply enough. Also if your professor is that big, he/she probably has industry connections especially since their research is ML related. Ask them for referral.",SomewhereNormal9157,2025-06-18 22:23:40,2,cscareerquestions,t3_1le3gsl,False,
myfy2si,"Your path forward is through networking. The big AI companies are not *that* big in the grand scheme of things. They’re not Google with 100k employees and a fully disconnected recruiting arm. Additionally networking doesn’t mean “talk to one person and he directly gives you an opportunity”. The folks your professor knows probably have connections to smaller AI companies like ElevenLabs, Mistral, Sierra, and others. You’ll be able to get closer to a hiring manager there to make your case that you don’t need a PhD to be valuable.",DeliriousPrecarious,2025-06-18 13:08:35,1,cscareerquestions,t3_1le3gsl,False,
mz2roon,"You should decide if a PhD is what you want to do. And the answer to that question should dictate what you make happen if it’s industry or PhD. I got into theoretical ML PhD at Waterloo through the stats department. The department is expanding in that direction with new profs every year. Also doesn’t appear to be nearly as competitive to get into as the CS department. Maybe not as reputable as the CS department but at the PhD level your research is what matters, and there are resources there to help you be successful.",dirtboy900,2025-06-22 00:46:36,1,cscareerquestions,t3_1le3gsl,False,
myg5sqe,"I appreciate the feedback. I left some stuff off for the sake of shortness. But I did apply to 7 PhD ML comp bio programs (6/7 rejections and only Columbia downgraded me to masters with a ""priority track"" to PhD but at 80k I couldn't justify taking that much debt).After realizing that I wasn't getting in anywhere I panic applied to a bunch of MSc Math programs at home, albeit I think I botched the applications without contacting any potential supervisors since they're all funded, but a supervisor at Waterloo was like you have a strong background so I will vouch for you to the adcomm and you should get in. Quite frankly after the clusterfuck of my PhD applications, I'm quite skeptical of what he said as all the potential supervisors said the same when I was applying for PhDs.Tbh 6 months later I've realized I couldn't mentally get myself to spend another 5 years as a broke (PhD) student and im a bit glad i got rejected.But you are correct, in that I need a thicker skin. The whole reason why I've managed to come this far was because I was overselling myself (I started my first ML research internship knowing zilch of ML) which has exacerbated my inferiority complex over the years.I am just not used to applying for hundreds of applications and going through multiple rounds for industry positions.",RNRuben,2025-06-18 13:50:44,4,cscareerquestions,t1_myfx1lm,True,
myhf0sg,"Oh, I’m sorry for jumping to conclusions! Sounds like you have put in the effort to find a PhD program. I’m sorry you didn’t get into any, but like you said it might have not been the best path for you right now. It’s also common for people to work in the industry for a few years and then come back to do a PhD. Especially after having a better understanding of what their passion is. I wonder if your indecision came across in any part of your applications? As I’ve heard of very qualified people getting rejected for lack of direction and passion. As for the job market, you have such a niche skill set, I feel like the perfect job for you isn’t common, but that when a company or government is looking for someone with your skills and experience, that you’ll be a top candidate and hired quickly! If you’re willing to move, I’m sure you’ll find jobs that fit your skill set. Were all the masters and PhD programs Computer Science with a focus in ML/AI? Or Math?",Silver-Impact-1836,2025-06-18 17:25:00,3,cscareerquestions,t1_myg5sqe,False,
mz9cjwt,"Actually, yes! I did this by enrolling in a single directed research class at my university for the following semester. I think it was a couple thousand dollars, and that extended my eligibility since I was still considered a student. I told the employer I was continuing my studies to improve my knowledge of my specialization, and when I eventually did get a full time job I completed the coursework while I was employed. If that isn’t accepted at this company, then I would recommend continuing to look for other opportunities - there are not that many companies that offer internships following graduation, but there definitely are some.",Ok_Idea8059,2025-06-23 02:10:55,6,cscareerquestions,t3_1li4kii,False,
mz9ad2h,Get an online masters degree,__CaliMack__,2025-06-23 01:58:42,8,cscareerquestions,t3_1li4kii,False,
mzbhii8,This internship is not even promised to happen for you to start spending money on enrolling to university for it. Look for new grad roles instead,EntertainerPure4428,2025-06-23 12:35:30,3,cscareerquestions,t3_1li4kii,False,
mzamewc,"If the internship is tied to student status, your best shot is enrolling in a cheap online course or certificate to technically stay a student while you gain real experience.",CourseTechy_Grabber,2025-06-23 08:10:50,1,cscareerquestions,t3_1li4kii,False,
mz9nmw2,you can't,giddiness-uneasy,2025-06-23 03:17:34,0,cscareerquestions,t3_1li4kii,False,
mz9nof6,too late to enroll. that was due earlier this year,giddiness-uneasy,2025-06-23 03:17:51,1,cscareerquestions,t1_mz9ad2h,False,
mzbih10,"Application/Enrollment windows vary by school, it’s still worth a look into",__CaliMack__,2025-06-23 12:41:32,4,cscareerquestions,t1_mz9nof6,False,
mz7r8ua,"Yeah it’s definitely possible, but it’s getting harder as time goes on.",PuzzleheadedSlip218,2025-06-22 20:47:16,30,cscareerquestions,t3_1lhy25d,False,
mz7tz9r,"It’s not the only way, you could marry a US citizen and work in the US legally... Jokes aside, yeah, it’s definitely tough. Some companies still do transfer employees from other countries' office to the US, but that’s been slowing down a lot in the past few years.",Sad-Sympathy-2804,2025-06-22 21:01:08,15,cscareerquestions,t3_1lhy25d,False,
mz7tkpi,"If you work for a multinational company, reach above senior level, get highly regarded, and get extremely lucky in circumstance and situation when an opportunity arises, you could get sent to the US on assignment if the company needs someone to work in a US office and thinks you're a better fit than people they could hire or their existing US employees, more or less.For executives and rare specialists it happens as well.So it happens for some but is generally not a strategy for a life plan.",rajhm,2025-06-22 20:59:02,15,cscareerquestions,t3_1lhy25d,False,
mz9916j,"No foreigners with foreign eduction come to the US everyday.The secret is either be THE best in your school, or go to the BEST school in your country.",Free-Cat-7289,2025-06-23 01:51:12,6,cscareerquestions,t3_1lhy25d,False,
mz8r9te,Be Canadian lol,Kitchen-Bug-4685,2025-06-23 00:08:05,3,cscareerquestions,t3_1lhy25d,False,
mz9qmu3,"Get a PhD in the US. You don't have to pay anything. Even better, they pay you.",mao1756,2025-06-23 03:37:38,2,cscareerquestions,t3_1lhy25d,False,
mz87pb9,An internship is another way,PizzaCatAm,2025-06-22 22:15:07,1,cscareerquestions,t3_1lhy25d,False,
mz8cxdr,"I know some people who did manage to work for international companies and then get transferred to the US. It's possible, but in all honesty, you'd need to be quite impressive for the company to move you to the US (especially in this climate), so it wouldn't happen until your mid 30s or so.",RDSne,2025-06-22 22:44:54,1,cscareerquestions,t3_1lhy25d,False,
mzakipl,"You can also be noteworthy enough and network. If you are a well known member of some technology's conference circuit, then connections to the US will appear.You can also just be contracting for a US company via some kind of staffing company, in a position with direct contact with US teams, and then knock it out of the park so they want to keep you regardless of any further dealings with the staffing company. But again, you have to be really good and make connections.There are many, many developers all over the world: If people have no idea of your skill.. why even talk to you at all?",hibikir_40k,2025-06-23 07:52:09,1,cscareerquestions,t3_1lhy25d,False,
mzb1qrn,"No, many companies recruit outside the US but they only get the best of the best. Two of my colleagues got recruited into Microsoft this way. Each had to go through 7 interviews and compete against top talent. This was back in 2019/2020.",DieSchungel1234,2025-06-23 10:39:31,1,cscareerquestions,t3_1lhy25d,False,
mz1zrpx,Commute from out of state like Oregon and Nevada or like commute from Maine?,Illustrious-Pound266,2025-06-21 21:56:58,52,cscareerquestions,t3_1lh7uro,False,
mz2j4s9,"IMO it's going to kill you if it's anything more than a very short-term thing. I used to have to do 1wk/month in NYC, and that was the worst part of every month. Spending most of a every week in SFBA if you're not nearby would be awful, awful awful",ecethrowaway01,2025-06-21 23:53:32,17,cscareerquestions,t3_1lh7uro,False,
mz2kyeg,"Looks like you may be coming from Denver based on your post history. I frequently travel out of DEN and also make 1 trip per month to CA. It’s a 2-2.5 hour flight, not too bad. The Denver airport runways being under construction + ground stop weather storms throughout the year cause delays, so just keep that in mind to get in the day before you’re supposed to be there, and maybe pack a change of clothes in case of cancellations. I don’t know that I would do that every week though, it will get exhausting.",darkmatterhunter,2025-06-22 00:04:48,8,cscareerquestions,t3_1lh7uro,False,
mz20wp5,I definitely have not done this…I would not rely on air travel for a “commute.”   Make a plan to move yourself to the Bay Area (maybe a month-to month sublet) and relocate them when the time is right.,shirefriendship,2025-06-21 22:03:39,16,cscareerquestions,t3_1lh7uro,False,
mz2asuz,"I almost chose to do this but it depends how far that flight is. They will not help with housing though, it is your choice not too move asap (unless you are pretty high up they might make exceptions). Get a travel credit card and just book hotels and flights and stay there for 3 nights.",honey1337,2025-06-21 23:03:12,3,cscareerquestions,t3_1lh7uro,False,
mz31aji,"I have a colleague who comes in twice a month from Utah for similar reasons, he seems fine with it but the way he describes taking a red eye flight day of sounds like hell to me.People do it, but three days a week sounds like a pretty big stretch.",sessamekesh,2025-06-22 01:47:02,3,cscareerquestions,t3_1lh7uro,False,
mz3605x,"I worked at a company where someone did this from MN to NYC, travelling on (I think) Monday and Friday. The company did pay for a hotel for him, but this was a company full of ex-consulting types (BCG and Thoughtworks).",anemisto,2025-06-22 02:17:13,3,cscareerquestions,t3_1lh7uro,False,
mz3lhj3,"There are daily commuter flights to SFO from where I live, definitely doable to fly in and out and stay at a hotel in between. But my flight is only 30 minutes in the air.",j_schmotzenberg,2025-06-22 04:04:20,3,cscareerquestions,t3_1lh7uro,False,
mz2ofx7,I mean the Starbucks ceo does this,soscollege,2025-06-22 00:26:19,4,cscareerquestions,t3_1lh7uro,False,
mz3melp,"I worked with several people in Seattle who used to do it. It's more common than you might expect, at least it used to be. They all would fly in Sunday night or Monday morning, then back on Thursday night, WFH on Friday. They each had a cheap place to stay by renting a friend's guest room/couch, or rented out a micro apartment.Still, it was very rough on them and their families. It's not so much about the monetary cost. You can maybe even save money in many cases, even after all the flight costs. It mainly comes at the cost of your time and time with your family.",doktorhladnjak,2025-06-22 04:11:15,2,cscareerquestions,t3_1lh7uro,False,
myxlqe1,94% chance they provide you with a company account for AI (copilot for vscode is common). using personal accounts usually not allowed in a big co,jfjfjfajajaja,2025-06-21 03:59:27,58,cscareerquestions,t3_1lgn8q1,False,
myy1oof,"Never paste company IP code to an AI site unless explicitly told you can. For my company we can only do that for copilot. I think copilot is way worse than claude or chat, so I'll sometimes do those but I'll ask questions more generically or give a fake code example similar to what I need figured out.",afunnywold,2025-06-21 06:12:16,7,cscareerquestions,t3_1lgn8q1,False,
myxlp62,Ask because some companies view it as a privacy concern. But most seem to be warming up to AI as a productivity enhancement.,ObeseBumblebee,2025-06-21 03:59:11,5,cscareerquestions,t3_1lgn8q1,False,
myxktlx,"Ask your manager what the policy on AI is at your company. A lot of places have internal AI tools (gpt wrappers basically) that engineers are allowed to use, since pasting confidential code into AI like ChatGPT that store your queries is a big no-no. As for whether it'll be ""looked down upon"", most companies, even FAANG have adopted AI. If you use it properly it'll make you a lot faster, and you'll also learn a lot as long as you aren't blindly copying everything it spits out.",Mother_Maintenance32,2025-06-21 03:52:47,8,cscareerquestions,t3_1lgn8q1,False,
myxkrdp,Always ask before being tempted. Sometimes your code could be considered intellectual property/classified and illegal to input into large language models like GPT or Claude as they can retain memory of information entered.,SexySisyphus,2025-06-21 03:52:20,4,cscareerquestions,t3_1lgn8q1,False,
myxlogh,Mine heavily encourages AI use but only allows some specific tools. Just ask!,sneaky_binders,2025-06-21 03:59:03,2,cscareerquestions,t3_1lgn8q1,False,
mz0tg6m,"They'll typically give you access to an internal LLM tool, though I'd personally ask your manager politely about it.The big thing is NEVER paste company code (or even conceptual questions) into a personal LLM account.",Ancient-Purpose99,2025-06-21 18:03:08,2,cscareerquestions,t3_1lgn8q1,False,
myxl7ui,"If it’s a big tech company, try using their AI or find out which ones are approved for use.",Impossible-Volume535,2025-06-21 03:55:39,1,cscareerquestions,t3_1lgn8q1,False,
myxx9cw,I am at a FAANG internship and my mentor and manager both have constantly suggested I use the in house Claude alternative,worldofrain,2025-06-21 05:32:39,1,cscareerquestions,t3_1lgn8q1,False,
myy0rt3,You have to use their tech stack. You'll get in trouble for unapproved AI tools. They should provide one for you,RemoteAssociation674,2025-06-21 06:03:54,1,cscareerquestions,t3_1lgn8q1,False,
myvmnkd,"I go by the mantra ""No answer is also an answer"" (i.e., negative)",HansDampfHaudegen,2025-06-20 20:51:04,14,cscareerquestions,t3_1lgdkev,False,
myvzrqf,"What you should do is pretty straightforward... move on. That's all you *can* do.Does ghosting suck? Yes. But it's still extremely common. Even if you drive an hour. People even get ghosted after final rounds all the time.It's also possible this company just sucks at communicating, and their process moves very slowly. One company I was working on scheduling the final round panel interview asked me for my availability over the next few weeks, which I gave them. Then crickets. I got other offers, so followed up letting them know. More crickets.Then about a month later they emailed me back asking for updated availability to get the final round scheduled. They obviously didn't even see/read my message letting them know I had an offer with a deadline. Their process was just disorganized and slow.Either way, ghost, slow process, what have you, what you do is still the same. Move on.",SouredRamen,2025-06-20 22:00:08,6,cscareerquestions,t3_1lgdkev,False,
myvrxq4,"translation: consider as a rejection not frustrating for me because I would never have drove 1h for an interview, it was always either international flight into USA (and company pays for all flight tickets/hotel/etc) back when I was intern/new grad, or I'd just call for an Uber and company pays for it",NewChameleon,2025-06-20 21:17:56,4,cscareerquestions,t3_1lgdkev,False,
myvu2nr,"Been there, it sucks.I drove out for an in-person interview, and talked to a friend of mine who also interviewed there and had an offer but was waiting to accept until my interview was over while getting lunch before driving back home.Not 10 minutes after our conversation ended did I get the message that I wasn't being considered for the job they just interviewed me for. Wasn't even a half hour after I walked out the door, they fully knew they weren't considering me short of their main candidate changing their mind. If you want a positive, the place that did eventually hire me a few weeks later was way better and compensated me far more, with far better working conditions. And got fucked over when my friend bailed on their toxic workplace environment and got a ""lol, we're good"" from me and another friend when they called us asking if we were still interested months later.",BellacosePlayer,2025-06-20 21:29:21,3,cscareerquestions,t3_1lgdkev,False,
mywt631,"Unfortunately, you just need to ignore and move on. It's just how things are working these days.Funny enough, I've had one or two positions that reached back out way later. Only to ghost again. Sometimes it's a weird internal corporate policy. Other times it's a lazy/thoughtless recruiter.",Chili-Lime-Chihuahua,2025-06-21 00:52:33,2,cscareerquestions,t3_1lgdkev,False,
myx0uq0,What company is this?,metalreflectslime,2025-06-21 01:40:35,2,cscareerquestions,t3_1lgdkev,False,
myyrcj8,"Up until the last few years this was the norm. Default assumption is that you didn’t get the job. If they’re interested, they’ll get in touch with you. I still do it that way and if you were harassing me like this even if I did want to make you an offer I would not for this reason alone.",Nofanta,2025-06-21 10:30:20,0,cscareerquestions,t3_1lgdkev,False,
myvk7ty,Blow up on them,Delicious_Bell9758,2025-06-20 20:39:04,-1,cscareerquestions,t3_1lgdkev,False,
myy2viw,CS job applications are worse than Tinder IMO.,Codex_Dev,2025-06-21 06:23:28,2,cscareerquestions,t1_myvzrqf,False,
myp76zt,"So the first question fo the day is have you been logging these non-business friendly activities that you lead has been doing? Have you escalated to your manager about the lack of access needed to do your job? Have you escalated about the unacceptable behavior that your lead did when they got back along with the failure of you potentially not have full access to dashboards and other information you should have access too?this is not a hard-skill issue it is a workplace management issue that needs to be addressed by your management.In terms of skills there are too many to list, I will also note many of the things that are classic DevOps are being automated or will be mostly automated so you will need to upgrade your skillsets to take advantage of the technology evolution that is occurring so you will be most marketable.The enhancement of your hands-on skills are great, but mainly only useful if you are still physically hands on with servers, switches, etc. if you like doing that do not let your hands on skills degrade due to non-use. For your virtual/physical setups be sure you still have a good foundation on Linux, Windows, and MacOS to be most marketable globally.Learn of all the different cloud providers capabilities pros/cons for AWS, Azure, GCP and start building in the cloud to include dashboards, building metrics, building automated workflows, etc. and see if you can upgrade your skills to the point to where you can move on to a new job. Make sure you are also continuing to train using official and non-official high quality sources to keep your hard skills sharp. If you are not networking outside of people you know at work you are doing a disservice, get out there and expand your network. That way you can reach out to people you actually know to land opportunities.",Helpjuice,2025-06-19 21:09:23,3,cscareerquestions,t3_1lfkaoz,False,
myr63x1,"Your lead sucks. Certs are maybe less relevant on the ""international"" (read: US) side than experience. 36 with a DevOps background here (currently director of engineering), feel free to DM me if you'd like to talk.",thashepherd,2025-06-20 04:01:13,1,cscareerquestions,t3_1lfkaoz,False,
mypcojl,"I really appreciate you taking the time.Regarding the team dynamics, I’ll just say it reflects a common cultural issue in environments like mine. Knowledge tends to be closely guarded rather than shared, and that limits opportunities for others to grow. I’ve tried to stay respectful and focus on what I can control. When I escalated, I was promised more structured handovers and collaboration, but so far that hasn’t materialized. I continue to show up, do my part, and document everything when needed. The meeting is scheduled on my calendar and nobody shows up. My predecessor told me that this guy is the nephew of ceo and hard to work with. OTOH my project manager and Dev Lead are helpful. I’m grateful for that. I’ve been learning independently and had only a 10-day KT session with my predecessor. Since then, I’ve been handling responsibilities without ongoing guidance. While it’s not ideal, I’ve accepted the reality and adjusted my expectations. I’m committed to growth, and that’s where I’m placing my energy.Right now, my first priority is delivering on my current job responsibilities. After that, I’m preparing for the AWS Solutions Architect Associate certification. I’ve also started work on a side project that combines AWS with SageMaker, with a focus on practical applications of agentic AI. Progress has been slower than I’d like, partly because I’m doing it solo and don’t have a mentor to bounce ideas off. Still, it’s helping me apply what I’m learning in a more real-world context.As for networking, I’ve been reaching out on LinkedIn and other platforms, but I’ve found that 9 out of 10 people simply don’t respond. I’ve also been trying to attend virtual and local seminars via Meetup.com. Unfortunately, events are quite limited in my country, but I don’t see that as a blocker. I’m not giving up. I know someone out there is looking for someone with drive and a willingness to learn. I just need to be in the right place at the right time.Your advice on staying sharp with hands-on skills, understanding cloud deeply, and constantly training through official and high-quality sources is spot-on. I’m applying it as best as I can and will continue pushing forward.Thanks again for your guidance. If you have any suggestions on communities that are actually responsive or mentorship opportunities worth exploring, I’d be grateful to hear them.",Fantastic-Average-25,2025-06-19 21:37:23,1,cscareerquestions,t1_myp76zt,True,
myslc4b,Thank you so much. Its a hindrance. I am trying to circumvent it. Please check DM.,Fantastic-Average-25,2025-06-20 11:28:49,1,cscareerquestions,t1_myr63x1,True,
myr6fbl,"Just one thing - it sucks, it's not ideal, but at 37 you're gonna need to start fighting and winning political battles when necessary.",thashepherd,2025-06-20 04:03:28,1,cscareerquestions,t1_mypcojl,False,
my8z4rd,Not at all. It's a great way to distinguish yourself from the crowd and embedded dev isn't going anywhere anytime soon.,zjm555,2025-06-17 12:02:22,79,cscareerquestions,t3_1ldl9cs,False,
my9gb8r,"Embedded and especially complex, high visibility high stakes embedded like medical or automotive are an excellent way to build skills. The only things missing here are SQL and such, and modern UIs. Those you can try to sneak in to your work as side projects. For example we needed a gps test simulator back then, so i wrote one in early .net (2000's) to learn .net. When a colleague took a year off for FMLA i volunteered to do some of her work (the corporate bug tracking software all SQL). And so on. After decades of C++ and Linux i jumped into Python and OpenCV, to camera software, to silly high volume data (autonomous driving) etc all while preparing for my next gig.I now run a mostly backend and interoperability team in non tech healthcare.",debugprint,2025-06-17 13:44:27,11,cscareerquestions,t3_1ldl9cs,False,
my9r646,Embedded is cool af and you’re likely to distinguish yourself from the pack by specializing in that.,Emotional_Fun2444,2025-06-17 14:39:22,6,cscareerquestions,t3_1ldl9cs,False,
my93cgh,"Certainly, not a mistake. How you leverage it is up to you.",zacce,2025-06-17 12:29:43,6,cscareerquestions,t3_1ldl9cs,False,
my9izqh,"There are an increasing number of devices that require software engineers with embedded specialization to make them work. With more devices becoming internet connected means more complicated software to make them work (and to keep them secure!) then ever before. This is on top of the many ""traditional"" roles working on lower-level systems and building device drivers on laptops, servers, and smart phones. There are lots of opportunities.It's probably easier to move from embedded to non-embedded than vice versa. Yeah, you'll have to learn new frameworks, but we all have to keep up with the new frameworks.>I'm majoring in CS. My upcoming fall internship is at a small company and is AI/general SWE related so I'm worried there's not going to be any real consistency in my resume, on top of the unrelated major.I've seen a large number of new-graduate resumes that say the candidate is proficient in both Lisp programming and the MIPS instruction set. Most people who read these resumes get it - you take what you can in school, and things are consequently all over the place. The thing that helps is being able to speak to substantial, challenging, and ambiguous projects you worked on, whatever they might be.",jkingsbery,2025-06-17 13:58:39,4,cscareerquestions,t3_1ldl9cs,False,
my98t73,I think you'll be fine.,Drauren,2025-06-17 13:02:44,3,cscareerquestions,t3_1ldl9cs,False,
mya3h2j,No. Your degree is a checkbox. It doesn’t matter.,nsxwolf,2025-06-17 15:37:12,2,cscareerquestions,t3_1ldl9cs,False,
myacjmn,"Embedded is probably going to pay less then the than the top of the field, but there are jobs everywhere and they are in demand. Issue investigations can require physical access to boards so there may be less full remote options. However, local debugging across software and hardware components are somewhat resilient to offshoring and AI as well.",haskell_rules,2025-06-17 16:20:09,2,cscareerquestions,t3_1ldl9cs,False,
myal4lk,"lol. You accidentally made a good career decision. I'm a CS grad with about 10+ YoE. I did a lot of hardware and low level projects in my free time (and lots of C++), as well as work with UIs in the embedded space. During my time in university a lot of people mistook me for a CE or EE major; I had more interviews aligned with hardware work. Most of my CE & EE friends could only find web related roles.It's not as glamorous as other areas in tech, but IMO it feels more secure. The shortest I've been unemployed was 1 week. The longest was 3 months. Average has been 6 weeks. Oh, and I get to charge a premium for my age because the pool of talent skews older. Currently I'm the youngest on the team by 20 years. Chances of working in big tech are a bit lower (I have), but so is the stress much lower IMO.To put this in better perspective, while there might be 1000 web dev jobs in an area and have 1000000 people applying for them, there's probably only a measly 50 hardware jobs, but only 200 people applying to them.EDIT: want to throw some extra flavor into the mix? COBOL. I'm sure if you had some minor COBOL project (e.g. a calculator) that could really turn some heads.",reuuid,2025-06-17 17:00:18,2,cscareerquestions,t3_1ldl9cs,False,
mybbjia,"Majority of recent grad resumes that I review are ML/LLM focused so if you want to be more average, that's the way to go.",Stubbby,2025-06-17 19:01:01,1,cscareerquestions,t3_1ldl9cs,False,
mygt7br,"Any offer is better than no offer, and accepting an offer doesn't mean that you need to stop looking.",dowcet,2025-06-18 15:43:21,37,cscareerquestions,t3_1lekcvc,False,
mygugin,Take the call and be honest about your intentions. Check their career site for the job you would target instead.,AndyMagill,2025-06-18 15:49:11,5,cscareerquestions,t3_1lekcvc,False,
mygx8ku,"Best thing you can do is practice your interviewing skills right now. Give yourself the opportunity to improve as a interviewee now, that way you are ready for your desired opportunity",code_in_420p,2025-06-18 16:02:09,3,cscareerquestions,t3_1lekcvc,False,
myh0mdw,"Suck it up, take offer if given after interview, then make lateral move within company to software engineer role. If company is not interested in putting you into a software engineer role, you apply elswhere while still currently employed, then leave once software engineer role is obtained.",m1nhC,2025-06-18 16:18:09,2,cscareerquestions,t3_1lekcvc,False,
mygyc9r,"Drop his info, some of us won’t look down on a business analyst position right now",curie2353,2025-06-18 16:07:23,3,cscareerquestions,t3_1lekcvc,False,
mygzt08,"You should not suck up being a BA if you don’t want to be a BA. A BA job at faang is a career setter, that’s what you’re doing for the next long while. You aren’t a data analyst or a software engineer, it’s a completely different career that isnt really technically in any way. If you’re ok with that go for it, but fully understand that this is a Product/Business role, not an R&D one and that’s what you’re slotting yourself as for good.OP- it is painfully obvious from these comments none of these people know what a BA is. BA-SWE is not a traditional path and you are never making a jump like that anywhere outside of a very small company. Take the job if you need a job but don’t believe people who clearly don’t know the difference between data analyst and business analyst.",HauntingAd5380,2025-06-18 16:14:18,2,cscareerquestions,t3_1lekcvc,False,
myh7t9g,"I briefly considered taking a Tech Sales job at Google just because Google, despite graduating with a comp engineering degree from a top-10ish school. Unless you want to be a Business Analyst don't get roped in by company branding, pursue the career you want.",ImSoCul,2025-06-18 16:52:09,1,cscareerquestions,t3_1lekcvc,False,
myhkyr5,If this recruiter isn’t hiring for DS or SWE you talking to this recruiter about it won’t matter lol. Just talk to him about the BA role. Also if this is a target company you want to get into just chat with them and if you get the job do it and switch later-way easier to switch internally usually.,kater543,2025-06-18 17:51:53,1,cscareerquestions,t3_1lekcvc,False,
mygu76e,"Agreed, especially in this market.I graduated in a rough market, accepted a SWE-adjacent role at a tech company, and transferred into SWE a couple years later.I had similar concerns as the OP but in hindsight it was definitely the right move in that job market.",nyc311,2025-06-18 15:47:59,9,cscareerquestions,t1_mygt7br,False,
myhazlg,They are most definitely gonna hire for the positions I’m interested in. This is one of the companies that posts a general SWE role and a general DS and team matches later. But the recruiter only hires for BA roles.,Otherwise-Panda341,2025-06-18 17:06:43,1,cscareerquestions,t1_mygugin,True,
my7f3wb,"I think front-end dev is the most threatened by advancing AI, since vibe coding makes it trivial for non-technical people to translate their ideas into UI. With 8 years of experience, though, you have a lot of skills that AI can’t replace, and many of those skills are not unique to front end. If you think you’ll need to move companies or positions, a good coaster might highlight their backend, security, or customer facing experience to move laterally.Probably time to put some AI tools in your toolbox and gain some more breadth skill",Squared_Aweigh,2025-06-17 03:51:40,26,cscareerquestions,t3_1ldd5t0,False,
my7vy9l,"Start treating every project like an opportunity to learn system design fundamentals—read case studies, build side apps with scaling in mind, and embrace the discomfort as your new edge.",LPCourse_Tech,2025-06-17 06:07:41,5,cscareerquestions,t3_1ldd5t0,False,
my7epbm,"Learn some back-end languages (Python, C#, etc), LangChain / Microsoft Semantic Kernel, Docker/Kubernetes, CI/CD, Virtual Machines, stuff like that.On your off time, you should be building large, complex, full-stack projects with automated testing and deployment.",polymorphicshade,2025-06-17 03:48:51,3,cscareerquestions,t3_1ldd5t0,False,
myilmqc,Just add the tool to your belt. I think people are really overthinking this stuff to a large degree. Generative AI is another round of buzzwords in a constant sea of changing buzzwords. It’s just as possible all this vibecoding will create new jobs in the future for experienced devs to fix up issues that generative AI creates.,seriouslysampson,2025-06-18 20:47:06,1,cscareerquestions,t3_1ldd5t0,False,
mykilt5,"Coasters make up too much of the market and that's why the market looks scary and why there is such a desire to replace with ai.Use ai to pick up another discipline quickly but in truth do still have to be motivated to keep up on your own time.If you have no desire to put in the extra time, which you suggest you haven't been, then really think about another profession or at least moving up the chain to something less hands on.Engineering will never die, especially not for AI. but one trick dev roles certainly will.",Historical_Emu_3032,2025-06-19 03:16:47,1,cscareerquestions,t3_1ldd5t0,False,
my7gvnq,"Tbh I've been trying to find my groove into full stack and building out some full stack mini projects with the help of AI has drastically decreased the learning curve. I'm well aware of the short comings of AI as it is now, but building a small simple ""library"" app and following the flow has helped me learn way faster than YouTube vids and stack over flow",AlexisMarien,2025-06-17 04:04:18,5,cscareerquestions,t1_my7f3wb,True,
mykgf0w,"Idk man, I do a lot of full stack at my job and I find AI can much more reliably be used to generate backend code since it's so much easier to give it explicit prompts. I can feed it diagrams, build a really dense context file, and have it reference patterns I've already established and it does solid work.Trying to get it to match a design is a lot more work IMO. The Figma design needs to be really detailed, you need to have all your theming and configs set up, and you need to have your components actually behave correctly.",Traditional_Lab_5468,2025-06-19 03:02:18,2,cscareerquestions,t1_my7f3wb,False,
my7fgt9,"Yes to back end languages, boo to large off-time projects. And full stack!? Gtfo. That’s not realistic in modern stacks, at least not well.  also we have lives to live?",Squared_Aweigh,2025-06-17 03:54:11,10,cscareerquestions,t1_my7epbm,False,
mykiswy,Honestly since getting some AI tools to help speed along the drudgery I'm enjoying programming again. I want to learn about things like system design and best practice again. It's been really nice,AlexisMarien,2025-06-19 03:18:05,1,cscareerquestions,t1_mykilt5,True,
mys10gm,"Asking questions and time is what separates mediocre engineers from cracked engineers. You aren’t going to become a cracked engineer in a year. The best engineers I know have just spent a lot of time doing it because they love it. They ask a lot of questions, either to others, or themselves. The rest is just time, repetition, and pushing to learn something new constantly.I have been programming since I was ~12 year old. Instead of doing my homework I was building projects, learning algorithms and exploring different parts of computer science. It really is just time like most things. Unfortunately there’s no “trick”.",HallDisastrous5548,2025-06-20 08:27:36,34,cscareerquestions,t3_1lfx18f,False,
myrq87t,Build something that has users and scale that,Independent_Arachnid,2025-06-20 06:44:17,27,cscareerquestions,t3_1lfx18f,False,
myt3b7v,Being a good team member is much better than being a rockstar solo.,ClideLennon,2025-06-20 13:22:11,7,cscareerquestions,t3_1lfx18f,False,
mysznca,"Sounds stupid, but some tools that people think are fancy shovels are actually really nice.The amount of people that have jobs but still refuse to use git, I just don't understand it.",throwaway10000000232,2025-06-20 13:01:15,4,cscareerquestions,t3_1lfx18f,False,
mytzw71,"code a lot. if you play video games, replace video games with programming.",ilmk9396,2025-06-20 16:04:49,4,cscareerquestions,t3_1lfx18f,False,
myrziem,Make everything scalable,Ok_Bullfrog5951,2025-06-20 08:12:51,5,cscareerquestions,t3_1lfx18f,False,
myrzh5z,Adderall,youreloser,2025-06-20 08:12:31,6,cscareerquestions,t3_1lfx18f,False,
mytgqvn,Spend an unhealthy amount of time learning. I did this in college and was able to get really good. It did burn me out at the end I never want to work that much again :face_with_tears_of_joy:,pstanton310,2025-06-20 14:32:36,2,cscareerquestions,t3_1lfx18f,False,
myu2bd3,You don't. You just are.,SpiderWil,2025-06-20 16:16:35,2,cscareerquestions,t3_1lfx18f,False,
myl5mhb,"I gave a presentation at the world trade center to a bunch of CEO clients. My VP told me I should wear a hoodie instead of a suit to stand out as the tech guy who is confident in their stuff. It depends on the company and location, but I don't think suits matter much at all for software engineers. I don't think I've ever worked with a software engineer who has worn a suit. Just be clean, dress reasonably, and act professionally.",Zesher_,2025-06-19 06:12:56,146,cscareerquestions,t3_1lf3dqv,False,
myla234,"The only time I ever wear suits is when I'm meeting with upper management or big customers, and even then, I'm back in a tshirt and jeans 10 minutes later. I like looking sharp, but fuck wearing a suit all day",IBJON,2025-06-19 06:52:42,28,cscareerquestions,t3_1lf3dqv,False,
myl7p4c,"Suits might be appropriate if you're the ""face"" of the company at some point, like a startup founder going around fundraising or someone in fintech doing a lot of interfacing with partners / vendors / high profile customers / whatever.A few of the best engineers I've ever worked with consistently showed up in graphic tees and jeans.There's a pretty wide range of fashion in between the two - as a general rule of thumb I'd say dress *one little bit* better than whatever ""average"" is at your company if you want to make a good impression. Necessary? No. Helpful in a perfect world? No. Helpful in *our* actual imperfect world? Often.",sessamekesh,2025-06-19 06:31:20,14,cscareerquestions,t3_1lf3dqv,False,
mymskgx,"I have several suits. I wear tee-shirts and jeans to work because that's what the rest of my team wears.Generally, if someone is in the office in a suit we assume they are going to go to a job interview in the afternoon.One day a few of us agreed to suit up for work, and it made one of the principal engineers think we were all about to quit.",ClideLennon,2025-06-19 13:59:07,6,cscareerquestions,t3_1lf3dqv,False,
myn5ukb,Try wearing a black cashmere turtleneck instead,natziel,2025-06-19 15:05:00,5,cscareerquestions,t3_1lf3dqv,False,
mymazvn,"If your goal is to become a psychopathic manager, sure.",io-x,2025-06-19 12:17:04,2,cscareerquestions,t3_1lf3dqv,False,
mynu9sa,"If you’re talking to your CIO, I assume you work in IT, and I don’t know how it works in that industry. However, on the engineering side, almost nobody wears a suit, and it’s actually frowned upon (unless you’re [Vint Cerf](https://en.wikipedia.org/wiki/Vint_Cerf), then you can wear whatever you want). It’s a shame, because I do appreciate well-fitted suits, and I find it silly that the whole “authentic self” ethos that we have doesn’t usually permit people to dress a bit more formally if that’s what they like.",Independent-End-2443,2025-06-19 17:03:10,2,cscareerquestions,t3_1lf3dqv,False,
myldvs4,never heard such thing,NewChameleon,2025-06-19 07:28:21,4,cscareerquestions,t3_1lf3dqv,False,
myl7ckr,I think you need to escape from that company asap. Start grinding leetcode,Travaches,2025-06-19 06:28:12,4,cscareerquestions,t3_1lf3dqv,False,
mymkygr,"We had a company wide offsite. You could immediately tell who was in marketing, all very well dressed. The sales guys sported their nicest watches. The women in designer clothing. And the engineers making 4x their income: chancletas, cargo shorts and shitty t-shirts. Did not give a fuck. I love engineers.",unlucky_bit_flip,2025-06-19 13:16:58,2,cscareerquestions,t3_1lf3dqv,False,
myutx4m,"You should do it! Don't think of it as 'a presentation', that sounds so stuffy and formal. You are just going to explain a project, that you know very well, to your coworkers. It's not a big deal. You even want to do it, because you did cool stuff. Just don't let your head make a big deal out of it. You will nail it!I used to be very anxious about talking in front of people, but I've had to do it a few times and realized there was nothing to fear. Nothing bad is going to happen. It's just talking.",tandem_kayak,2025-06-20 18:28:13,16,cscareerquestions,t3_1lgavqw,False,
myuueph,"Whoever presents the project is the one whose name/face will be attached to the project in the minds of the audience. If you are ok with your own hard work being all attributed under someone else's name/face and having it go towards their achievements to further their chance at a promotion, you can let that person present.Unfortunately, while we all want and expect coding to be the most important part of our jobs, it is often the least important. Communication and presentation is the most important. Your upper management are not geniuses either; they can't just look at your code and your project and extrapolate exactly what was so important about it. You have to show them why the project was important and why you are important.",Glittering_Visit6530,2025-06-20 18:30:36,13,cscareerquestions,t3_1lgavqw,False,
myuwlu0,"I used to struggle with my anxiety sooo badly like horribly especially in work situations. The *only* way out is through exposure. You have to repeatedly put yourself in situations where you might get embarrassed until you realize it is no big deal.I recommend the toast masters suggestion (still on my todo list), but the biggest key in my recovery was mentally unwiring the idea that “I have anxiety” like never speak or think those words again. From this point on you’re competent and in control; your team and boss value your contributions, and that’s why you’re there to begin with. It is quite literally all in your head. PM me anytime if you want. When is your prezzie?",haunteddev,2025-06-20 18:41:30,8,cscareerquestions,t3_1lgavqw,False,
myv85kh,"Just plan out your demo, what are you showing, what's the purpose? Who's the audience? Then before the demo run through the software and make sure it's working like how you would demo.",Red_Tien,2025-06-20 19:39:03,3,cscareerquestions,t3_1lgavqw,False,
myvy9gt,"Practice absolutely *does* make it better.I think you just might have unrealistic expectations about what that phrase means. It doesn't mean that if you force yourself to present, one day all your anxiety and stage fright magically goes away and suddenly you're a pro presenter.It means that the more you do it, the easier that anxiety becomes to manage, and the less it impacts your ability to present. The anxiety's still there. It'll probably *always* be there. You're not going to ""get over"" it. But you will absolutely become better at managing it.I also hate presenting. I've always been uncomfortable with it. In college, and early in my career, the anxiety would really get to me. The anxiety would hit me so hard I can feel my voice straight up changing, dry mouth, stuttering, stumbling over my words, rushing, I start sweating, if it's bad enough I'll be shaking like a leaf.With years and years of on-the-job practice in the *professional* world, that anxiety slowly became more and more manageable. I think maybe 4 or 5 years into my career is when it became so manageable I started considering myself a *good* presenter.For example, not long after I started at my current job, I got the chance to present a demo of a new feature to all of our stakeholders. It was a very not-casual call with 50+ people on it. I crushed it, I spoke slowly and clearly, I communicated my points well, it went great. I got multiple comments, and even a formal email to my manager, mentioning how great of a demo was, specifically calling out how well I presented it.The anxiety was absolutely still there. Tons of it. Leading up to, during, and afterwards. But, at this point in my career, I can manage it to a point where it doesn't impact my ability to do an amazing presentation, it's not showing through my voice, or stuttering, or shaking anymore. I'm able to keep it mostly internal. Everything that goes into presentations today are very much leaned behaviors that come from practice.Presenting is going to be a very important part of your career. It gets even more important as you gain seniority, you're not going to be able to pawn that responsibility off for your whole career. Do the presentation. Keep doing them. It will get better. I'm living proof.",SouredRamen,2025-06-20 21:51:54,2,cscareerquestions,t3_1lgavqw,False,
myw1s2t,"For me, presentations about work I have spent a lot of time on and am passionate about does not get me nervous anymore. Just write an outline of what you want to talk about, and maybe review with somebody on your team. I was terrible doing presentations in school as well, but in work learned to not mind at all. Asking me questions off guard in a large meeting is a different story though…",ACont95,2025-06-20 22:11:21,2,cscareerquestions,t3_1lgavqw,False,
myx0ef6,"I would not ask another unrelated person to do it, that's for sure.",deejeycris,2025-06-21 01:37:43,2,cscareerquestions,t3_1lgavqw,False,
myywjgn,"Here’s what you need to do. Talk to your doctor or online if you have Telehealth and tell them about performance anxiety and ask for a prescription of beta blockers. It’s the same thing used by musicians and others before big events. It makes presenting so easy, it literally saved my career. I only take it 2x month for demos. They’re not addictive and only needs to be used as needed. Been around since the 1960s and super safe. Search for “propranolol” in the r/publicspeaking subreddit and you’ll see a ton of success stories.",Mr-Canadian-Man,2025-06-21 11:17:11,2,cscareerquestions,t3_1lgavqw,False,
myuz97b,"Here's my favorite story from 10-15 years ago. Our embedded box was at the annual CES in Las Vegas. Demos for hours a day. We uncovered a critical bug and fixed it, but wifi during CES isn't a good idea so USB drive was given to the demo engineer to reprogram the unit when he can.He's demoing the unit for a CEO of another company using the old software with the bug. Mid-demo the box froze. Without missing a beat, the demo guy, a 5.5 ft tall Indian version of Tom Cruise with similar steel nerves, pulls out the USB drive, inserts to the box debug port as the unit is rebooting, reprograms the unit in front of the CEO all while explaining that the unit is field upgradeable via USB. Unit reboots as expected and demo is great. The guy is now VP engineering for a major tech firm. You don't need to be able to do that but an internal demo should be easy enough to start.",debugprint,2025-06-20 18:54:27,3,cscareerquestions,t3_1lgavqw,False,
myr7go0,Under absolutely no circumstances should you even CONSIDER leaving your job unless you have at least a year of work lines up already. Being an introvert is fine. But understand that striking out on your own will REQUIRE sales work for success. You may find that you enjoy that lifestyle less than your current one.,thashepherd,2025-06-20 04:10:49,11,cscareerquestions,t3_1lftzm2,False,
myu4t67,"Options:- Find part time, hourly dev work, while doing full time work: This will make you supplemental income. The downside is you may get stuck doing not fun work, and may get burned out or overwhelmed.- Hobby project: These can lead to money making endeavors, but most hobby projects never earn money :) On the plus side, you can do whatever you feel is exciting. And you can learn a lot this way.- Find a more ambitious job with more money making opportunity.",Joram2,2025-06-20 16:28:45,3,cscareerquestions,t3_1lftzm2,False,
myr8en4,"Absolutely! Thank you for this. I am just trying to become more informed of my avenues before trying to jump into the deep end. Totally understand the need to have work lined up & needing to do sales work. It's been a shock to the system but I think, I can start to manage it. Even with no success, it's super clear that it's much much harder than a regular 9-5.",Live-Basis-1061,2025-06-20 04:17:39,1,cscareerquestions,t1_myr7go0,True,
myr7r90,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-20 04:12:56,1,cscareerquestions,t1_myr7r6h,False,moderator
myr9j3l,"I'm an introvert as well, and I went into management then leadership - so it can be done. A LOT of things that you'd think people are naturally good at are actually acquired skills. But management/leadership isn't sales. You may not ENJOY having to do sales for your livelihood. And yeah, in this market, once you quit, it's tough. Can I suggest an alternative? As you become more experienced, senior+, your role does become inherently political and more about people. Would you consider maybe sticking with a salaried role but cutting your teeth on team lead or lower-level management roles? Even if you want to stay an IC long-term, having led is often a requirement for Staff.",thashepherd,2025-06-20 04:25:54,2,cscareerquestions,t1_myr8en4,False,
myraa9o,"I haven't considered that! I have been thinking about supplementing my income or trying to have multiple sources so as to not fall back on financial obligations. As I mentioned, never was in a big enough developer group / company to see a defined team lead or management position. But it certainly should be something I can contemplate on.",Live-Basis-1061,2025-06-20 04:31:30,1,cscareerquestions,t1_myr9j3l,True,
myrctlg,I'm definitely an advocate for finding the job where you think you can learn the most. I also believe in whole-assing one good job over half-assing two.,thashepherd,2025-06-20 04:50:52,2,cscareerquestions,t1_myraa9o,False,
myrd1kw,Thank you for your insights! I do agree with you about the 1 better than 2 part! Great way to put it by the way!,Live-Basis-1061,2025-06-20 04:52:34,2,cscareerquestions,t1_myrctlg,True,
myp1ajh,"In my opinion you should never relocate unless you already have a job lined up.Moving is expensive, risky, and there's no guarantee you'll even find a job in that specific area. Limiting your job search to a single area, especially in a bad market, makes the search significantly more difficult and time consuming.What's your plan if you can't line anything up for several months, or even a year? What if the only jobs you can find are ones that would require you to relocate a 2nd time to somewhere like Austin, or Detroit?If I were you, and I wanted to relocate to the Bay Area, I'd line up a job there *first*, and then move once I have one lined up. That's exactly what I did in my current city actually. My new grad job was in the Midwest, which was fine, but I always wanted to move back to the east coast. So once I had a few years experience under my belt, I started job searching in the city I wanted to move in, and then when I had something lined up, I relocated. I can't imagine quitting my job and moving to a very expensive city unemployed. In fact I probably wouldn't have even been approved for my apartment if I didn't have a job, they asked for my offer letter as proof of income.That said, what's your goal behind relocating? Do you *want* to live in the Bay Area? Or are you just looking for a hybrid/on-site job? If the latter, you can find those all over the US, there's a lot more places than just the Bay Area. You should be searching country-wide if that's the case, your job search will be way easier if you can lift the geographic restriction.",SouredRamen,2025-06-19 20:40:47,43,cscareerquestions,t3_1lfk4kb,False,
myp5z12,"All of these comments and your post seem to be missing the most important factor, do you have working rights? If you don't have working rights, you need to already have a job offer and a visa sponsorship before you can move, so it's not something you can just decide to do. Until then, apply for jobs you think might be worth moving for, and if you get an offer you can consider it then.",Sad-Movie2267,2025-06-19 21:03:22,16,cscareerquestions,t3_1lfk4kb,False,
myosj42,"I moved to the Bay Area and am moving back. Unless you have connection with people who make important hiring positions, the number 1 thing that can impact your job opportunities is being able to clear interviews. And with current layoff waves, if you need to relocate, make sure the sign on is big enough.",Consistent-Cup-3900,2025-06-19 19:58:47,20,cscareerquestions,t3_1lfk4kb,False,
myoup92,Do you currently have a job offer there?,Iyace,2025-06-19 20:09:16,6,cscareerquestions,t3_1lfk4kb,False,
mypfpnn,"The Bay is a great place for a CS career, but it's also _very much_ the big leagues. If you have a HUGE amount of cash ready to possibly go a year or three underemployed here, it's an amazing place to meet people in the industry and build a career. But you'll seriously need $200k USD cash ready to burn in living costs and be ready to hustle pretty hard. And be ready to fail - the competition out here is stiff, I know experienced engineers who have a hard time finding work out here.I would highly highly recommend having either a job in hand or a wealthy benefactor.",sessamekesh,2025-06-19 21:53:01,5,cscareerquestions,t3_1lfk4kb,False,
myox3k9,If you are good then no problem,pigindablanket,2025-06-19 20:20:36,1,cscareerquestions,t3_1lfk4kb,False,
myqn48j,"First, are you an American citizen or green card holder? If not, you can't just pack up and move to the US.",Comprehensive_Baby_3,2025-06-20 02:01:05,1,cscareerquestions,t3_1lfk4kb,False,
myqo23l,Better have some fat stacks to make such a move,travelinzac,2025-06-20 02:06:38,1,cscareerquestions,t3_1lfk4kb,False,
mz8c80q,I would probably aim for a Junior level role. You aren't even using git which is a basic industry standard tool. I would assume there are a lot of other gaps you likely have as well sadly. Doesn't hurt to try though! Maybe trying you'll get a better idea of where your skill gaps are and might be able to fill them.,Fun-Meringue-732,2025-06-22 22:40:49,4,cscareerquestions,t3_1lhz288,False,
mzbh2ob,All I can say is you will not regret putting up with this when you get your next job. You got your foot in the door and put some years on your resume. That's a big win right now. I had to do the same thing and it paid off big time.,ConflictPotential204,2025-06-23 12:32:39,2,cscareerquestions,t3_1lhz288,False,
mzc4ngz,"With 3yoe on paper, you can go with mid-level positions. There are too few junior roles out there. Most interviews still ask you leetcode anyway, so your actual experience isn't a problem even if you interview for a mid-level role.Your day-to-day skills probably aren't there. But those are the things that you can quickly learn once you join, or you can self-learn as much as you can if you end up getting a job.You definietely need to tailor your resume to appear to be more dev-oriented so you can pass the resume screening.",weavewillg,2025-06-23 14:42:21,2,cscareerquestions,t3_1lhz288,False,
mz8qora,"Unfortunately so but yeah you are right thank you.The only issue is, there aren't many junior front end roles, there's only likes 10 - 15 and then I can't find any more roles",ferioku,2025-06-23 00:04:35,1,cscareerquestions,t1_mz8c80q,True,
mz9dslm,"If you’re interested in full stack jobs, you can sharpen some skills and get you some exposure you you could do a project where you have a dockerized database like MySQL or Postgres, and write a JavaScript API to do “CRUD” operations in that database. You could use your current skills to write a front end app that connects to that API to interact with that database",requios,2025-06-23 02:17:54,1,cscareerquestions,t1_mz8qora,False,
mz9guit,"Honestly, for the time being I'm more interested in front end development",ferioku,2025-06-23 02:35:52,1,cscareerquestions,t1_mz9dslm,True,
myt0vc3,"They might ask you a decently sized logic question but not one that would take too long since it is only 30 minutes long. They might ask a couple technical questions on git/sql and maybe ask about any projects you have done, experience you have. Good luck!",cr0wndhunter,2025-06-20 13:08:21,4,cscareerquestions,t3_1lg3f8w,False,
mytd8gd,"My current employer has a similar tech stack, and we recently held interviews for an entry level engineer. I tried to format my interview questions in a way that just tests core concepts, since I expect to be mentoring entry levels.I asked questions that:- verify you know you can use a set to remove duplicate items from an iterable- verify knowledge that you can use a set for O(1) lookups.- verify you know when to use a dictionary by providing a brief problem based around inventory tracking or score tracking- Questions that verify knowledge of SQL. Regrettably, the way I framed these tested rote memorization of keywords rather than understanding of core concepts- Questions that verify you understand environment variables and why they’re used for passing secrets to a program- basic Linux questions based around things I’ve had to do on the jobThe other interviewer asked questions about:- knowledge of the types available in Python,- knowledge about the type returned (tuple) when you put something like “return a,b”- the difference between a list and a tupleFor the coding portion we just asked them to return the string that appears the most within a list.——That all being said, my company is pretty laid back and doesn’t pay nearly enough for us to be asking leetcode type stuff. Other companies may take differing approaches toward interviews for their entry levels.——For those interested in how I’m planning on asking SQL questions in the future, I plan on writing some example SQL code ahead of time and just asking them to explain what it’s doing.That way I’m testing the ability to understand SQL rather than rote memorization.——",Uncreativite,2025-06-20 14:15:13,4,cscareerquestions,t3_1lg3f8w,False,
myt1rey,"Thanks, I was scouting the company and I've noticed a lot of green flags (disclosed salary ranges on all of their job ads, senior devs have a requirement of mentoring juniors etc.) that's why I was wondering if they would give me a leetcode stylke question (which I suck at tbh), or if they would more or less would want me to talk about my resume, my projects, how did I handle x error, today I'm having a screening with the HR and some team members to talk a little bit about their company culture, and to get to know me a little. (Also a huge green flag, they are straight to the point and there was no weird homework that you get ghosted after sending)",rikeeeee,2025-06-20 13:13:27,3,cscareerquestions,t1_myt0vc3,True,
mytj69s,How complicated would the SQL questions be?,narpuppy,2025-06-20 14:44:26,1,cscareerquestions,t1_mytd8gd,False,
myuy3wd,Sounds great. You might be able to ask the recruiter/hr what the style of the interview is so that you can prepare better.,cr0wndhunter,2025-06-20 18:48:49,2,cscareerquestions,t1_myt1rey,False,
mytldpz,"I asked questions testing if they knew:- of the LIMIT keyword and how to use it- how to use the SELECT keyword beyond just “* FROM”- how to use the JOIN keyword- how to use the LIKE keyword and the % operatorThe other interviewer asked a question testing if they knew how to skip the first five elements while limiting the query to five elements. Funny enough, I could not remember the keyword name at that moment but knew there was functionality for it. The OFFSET keyword. (While also using LIMIT)I chose these keywords because for the most part we rely heavily on the Django ORM at my company, and so when I’m writing queries it’s mostly to find data to try and replicate issues. These keywords were the ones I found myself using most frequently.Moving forward I plan on showing them queries with these keywords in them and asking them to explain to me what it’s doing, since the ability to understand an SQL query is a lot more valuable than rote memorization of keywords.",Uncreativite,2025-06-20 14:55:06,3,cscareerquestions,t1_mytj69s,False,
mytvfuh,"I’m assuming they ask about inserting/updating/deleting rows. Maybe some things about using cursors and committing transactions. And then primary keys, foreign keys, and indexing. If you bring up connection pooling, indexes, and explain plans they’ll probably be surprised (but read articles on those first if you haven’t used them before).Probably just gonna make sure you’re at least familiar with how to interact with a MySQL database from Python and can do the basics with CRUD, maybe db permissions and some other basics.Honestly just go through MySQL w3schools tutorials for info. For Junior dev they won’t get too spicy",InstructionFast2911,2025-06-20 15:43:23,1,cscareerquestions,t1_mytj69s,False,
myyzqv4,"Turns out that they instantly started with a technical interview even though the job posting said different, caught me off guard and was a bit stressed, but the devs that were sitting with me in my google meet were either young seniors or older regulars. They went through my gh and asked me technical details about my portfolio app (django psql tailwind docker etc.) I think I have answered their questions flawlessly allthough these questions were simple for example;Q: Where and how did you deploy the app, did you have to deploy db and the app separately?A: I deployed on render, took great care to use as many environmental variables in settings.py, exported them to the cloud service, then i set up another service for postgre db, connected them together and deployed with gunicorn, allthough it was about 3 weeks ago, right now I would automate the process using a docker-compose.yml file, by setting up two services web and db and configuring the environmental variables there.There were some other basic questions, they didnt really follow up that much, also gave me a lot of time to speak and later on ask questions about the company, we scheduled a 30 minute screening and it took about 45-50, so to me it seems like I did decently, I dont think they would let me spend like 20 minutes asking them questions about the company if they didnt consider me as a potential candidate",rikeeeee,2025-06-21 11:43:25,3,cscareerquestions,t1_myuy3wd,True,
myz0euq,"Also I think I did good at the start when I was starting the project, I made a lil mistake by checking out from dev to main and trying to run server locally (I forgot that I set up the prod branch to only accept https and my localhost wasnt in allowed hosts, also debug was False) even though this was a mistake I feel like ive shown them that im familliar with version control, virtual envs, and good security practices for production, also im running a WSL in my pycharm terminal so I showed them that Im also familliar with linux environment",rikeeeee,2025-06-21 11:48:39,2,cscareerquestions,t1_myyzqv4,True,
myjb8lz,"No, I'd say it's much better to do it before rather than after graduating.",Bobby-McBobster,2025-06-18 23:00:08,51,cscareerquestions,t3_1lev7tz,False,
myjdjte,"> I am pretty concerned that I might lose the momentumThis is the only reason not to consider the gap, imo. If you think you will struggle to become motivated to succeed in school after the gap, then maybe it isn't a good idea.> I got pretty deep into math and cs competitions, and I feel like I would forgot most of what I’ve learned after the gap yearI was once told by a professor of mine that learning something is not about retaining that knowledge, but how quickly you can *re-learn* it. Everybody forgets over time, but if you know something, it will come back to you quickly after being exposed to it again. That rings true, in my experience. If you feel confident now, you'll be fine later. You'll be taking university classes, not doing calculations for the moon landing. There is plenty of time to ramp back up in first-year courses.> I’m kind of afraid that this would ruin my careerIt absolutely, and I cannot stress this enough, *will not*. I know more kids who burned out after college from the endless grind throughout their whole student life than I do those who ""ruined their career"" before it even began. I actually don't know any of the latter, but a lot of the former.> Some people also told me that I can take a gap year anytime, so I should spend my most meaningful years at school with friends.I can get behind the friends part, but both a gap year and going to school with your friends are very valuable things to spend your ""meaningful years"" on, though I disagree that meaningful years as as limited as that sentiment implies. Also, you'll make a ton of new friends at university, and being a year older won't change much there. 5-10 years, maybe, but you're still a peer to everybody after only 1 year away. That opportunity won't change.Taking your gap year *after* university is way more likely to effect your career, however. You'll hopefully make some connections at school, and having those connections be fresh as you look for jobs is a big deal. Applying to jobs or grad school while you're in your last year is much easier, especially if you're interning somewhere that may want to hire you.This is absolutely the *best* time to take a gap year, but if you do take it you should know what you want from it, even if that is just time away from the stress of the student grind.",skodinks,2025-06-18 23:12:39,9,cscareerquestions,t3_1lev7tz,False,
myjba2q,"Nope. Taking a gap year between graduation and workforce will, though.",csanon212,2025-06-18 23:00:21,36,cscareerquestions,t3_1lev7tz,False,
myjzn81,"No, very little chance, unless you get involved in something like drugs or crime.I remember math proofs and concepts I studied once, in grad school, well over a decade ago. Even if you forget some details, you'll just have to quickly re-learn the skills, and the concepts don't really leave you.I don't believe in momentum, either. You get burned out, you take a break, work on some projects you like, then you get back to work.",justUseAnSvm,2025-06-19 01:20:13,5,cscareerquestions,t3_1lev7tz,False,
myjedgx,"Before, no.After....",Some_Developer_Guy,2025-06-18 23:17:08,1,cscareerquestions,t3_1lev7tz,False,
myjgxcp,Congrats brother! UofW for SWE is amazing! I’d be so excited that I couldn’t wait to start!,11markus04,2025-06-18 23:31:08,1,cscareerquestions,t3_1lev7tz,False,
myjhvoz,Congrats. I think you should. I went to Waterloo for a co-op program and it was exhausting to go for almost five years with no real breaks.,antiantiwork666,2025-06-18 23:36:25,1,cscareerquestions,t3_1lev7tz,False,
myk3gh9,"Honestly, if you can defer do it. If you can’t and it’s not a guarantee you’ll get into Waterloo in a year don’t.",ComfortableJacket429,2025-06-19 01:43:13,1,cscareerquestions,t3_1lev7tz,False,
my7pzwp,"I would for sure study up on system design. At your YOE, you’ll definitely have at least 1 system design interview for basically any company.I’d prep by using hellointerview and watching a shit ton of mock interviews. After that, practice it yourself and do mocks. That’s how I prep for them anyway.",adstrafe,2025-06-17 05:15:39,15,cscareerquestions,t3_1ldeht1,False,
my7p9ia,I work for DoD contractor too. Do you have clearance? I noticed that a lot of jobs opened up for me when I got my clearance.,XxAkenoxX,2025-06-17 05:09:31,3,cscareerquestions,t3_1ldeht1,False,
mygmm7m,"Double down on coding drills and small-scale system design that mid-level roles care about. After Leetcode/Neetcode, switch to questions like URL shortener, rate limiter, real-time chat; Grokking’s SDE book plus Tech Dummies system design channel cover those quick. Mock on Pramp or pair with a buddy to get timing right. For resume, cut side projects unless they show production traffic; instead, load bullets with numbers: latency dropped 30 %, revenue up 50 k, whatever. DC loves clearances, so highlight any if you have them. I’ve used Educative, Pramp, and JobMate to blast apps quietly while I practiced. Smash the coding drills and pragmatic design work.",Easy-Fee-9426,2025-06-18 15:12:39,1,cscareerquestions,t3_1ldeht1,False,
my7o3qy,Get cooked,soscollege,2025-06-17 04:59:55,-10,cscareerquestions,t3_1ldeht1,False,
my7q8hd,Oh cool. Never thought about watching mock interviews. Thanks! Any idea how much time I should spend prepping for leetcode. Or should I keep doing leetcode problems until I can do most mediums without help?,New-Pea4213,2025-06-17 05:17:40,2,cscareerquestions,t1_my7pzwp,True,
my7q1a0,No my current job doesn’t require one,New-Pea4213,2025-06-17 05:15:58,1,cscareerquestions,t1_my7p9ia,True,
my7qo0b,Did you do military or got a job where you got sponsored for clearance?,TheAnissarap,2025-06-17 05:21:19,1,cscareerquestions,t1_my7p9ia,False,
mygmuzq,Thanks!,New-Pea4213,2025-06-18 15:13:47,1,cscareerquestions,t1_mygmm7m,True,
my7qxlg,"I’m currently on the job hunt and I’d say every company I’ve interviewed with so far has had at least one Leetcode round (except for 1 start-up).I’m less experienced than you at 2.5 yoe as a fullstack dev and have mostly been getting recruited for frontend leaning roles but still get DSA interviews.I do prioritize Leetcode because all my phone screens have been only that. Neetcode75/150 and then I practice company tagged questions. Yes, some mediums are still hard for me if I’ve never seen it before :loudly_crying_face:",adstrafe,2025-06-17 05:23:32,1,cscareerquestions,t1_my7q8hd,False,
my7u0ah,No clearance is going to make the DMV area job search brutal. Much of the GovTech roles require one.,Drauren,2025-06-17 05:50:13,3,cscareerquestions,t1_my7q1a0,False,
mzcrkq6,"3 yoe might be too early to decide if you want to pursue for IC or management path. But I personally prefer IC since I like coding and pretty good at it compared to other colleagues. But management can also go far and beyond but your promotion depends heavily on the empire building, so without the org growth don’t expect promotion. And if you get laid off in late forties likely you’ll have hard time finding the equivalent level jobs from ageism.",Travaches,2025-06-23 16:31:16,2,cscareerquestions,t3_1lihoz8,False,
mzdfpai,I think in my case I'm less concerned with choosing right now between IC and management and more so how I can best utilize time with someone so senior. But those are good things to keep in mind if/whenever the option opens up,sersherz,2025-06-23 18:21:30,1,cscareerquestions,t1_mzcrkq6,True,
mzdjvno,Just build up good relationship with him. Don’t be too nervous and try to make it friendly conversation with him. Sometimes talk casually about daily company stuffs but time to time talk about growth opportunities. He already has good impression of you so should be easier.,Travaches,2025-06-23 18:41:29,2,cscareerquestions,t1_mzdfpai,False,
my82fg6,Can you share your reasons for avoiding monetization? Because I've been told by some people monetization is the way to go and less likely to get laid off there. I've been advised to avoid reality labs instead,jaljeeraa,2025-06-17 07:08:23,17,cscareerquestions,t3_1ldfgyi,False,
my7uvb4,Are ML SWEs really that rare and in-demand?,livLongAndRed,2025-06-17 05:57:48,2,cscareerquestions,t3_1ldfgyi,False,
my7vfqq,"Unless you have a strong backup plan, declining early offers—especially in a serialized match process—can backfire, so weigh the risk of no match versus the discomfort of a less-than-ideal team.",LPCourse_Tech,2025-06-17 06:02:55,-7,cscareerquestions,t3_1ldfgyi,False,
my8zsi6,"Ads ranking at meta should be your match made in heaven. You’ll get the culture you deserve, working with the challenges you claim to want. Which other role could possibly be a better stepping stone to a “top quant firm,” outside of roles at those very same quant firms? Time to shake the devil’s hand.",TeamLeaderLeo,2025-06-17 12:06:47,-2,cscareerquestions,t3_1ldfgyi,False,
my866cl,Monetization is crazy hours and FRL has tons of layoffs. The reality is to know someone who isn't in those orgs and is hiring but that's not exactly realistic for most folks.,ImSoRude,2025-06-17 07:45:35,9,cscareerquestions,t1_my82fg6,False,
my7vyus,"If they have experience, yes.",anemisto,2025-06-17 06:07:50,6,cscareerquestions,t1_my7uvb4,False,
my8lzrh,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-17 10:21:51,0,cscareerquestions,t1_my8lzq2,False,moderator
myqr9ql,"Eh, seems like it’s working out. Had 3 matches in my first 3 days and another hm reach out on LinkedIn but she doesn’t have official head count approval",Hungry_Ad3391,2025-06-20 02:25:32,1,cscareerquestions,t1_my7vfqq,True,
mzf9h12,You are correct that there is a gap between the skills to get a job and skills to be good at a job. Unfortunately to excel at interviews you need to play the game. Were you grinding lc questions prior to interviewing? Most folks (your competition) are probably spending 3-6 months grinding lc prior to even interviewing. I know it sucks but it is what it is. Even the best of developers can’t just raw dog these interviews :(,kdot38,2025-06-23 23:52:52,13,cscareerquestions,t3_1liwc4t,False,
mzfbofx,"You are not alone... I have code patches in the Linux kernel in a critical subsystem. My code is by now in billions of Android devices, and it will be in some satellites. I am a developer with 20 yoe and I applied for a low level/Linux kernel dev position at a big name company (not faang). What did they ask me to do?HR sent me a coding challenge, not LC, but similar. Something from a university competition, unrelated to low level, hardware, kernel dev. It's nothing that can't be done, especially with a little online research, but I'm not even going to bother (I do have a job and was just curious how the market looks like).I'm obviously not expecting them to open the doors for me and lay down the red carpet. But I have code in the public domain that we can discuss, they can query me, challenge me, etc. And if they want a coding challenge, give me something related to the work.Anyway... I guess that's how many companies operate nowadays. It's the first time I apply at a job in years and it's weird.",dsp1893,2025-06-24 00:05:35,22,cscareerquestions,t3_1liwc4t,False,
mzf9ihk,"The bar is high, indeed. Most people get rejected from a FAANG",Illustrious-Pound266,2025-06-23 23:53:05,6,cscareerquestions,t3_1liwc4t,False,
mzfgfof,"This is why I avoid FAANG like a plague, I refuse to waste my time doing leetcode. Any company that sends me leetcode style OA I don't even bother. They clearly either don't read your resume or respect the fact that you have years of experience and don't need to prove that you can do the job.",SolidKey8561,2025-06-24 00:33:29,4,cscareerquestions,t3_1liwc4t,False,
mzfes00,"I'm a noob, but for years I've had a bunch of small things I would rewrite in every language I've learned.. I know the TSP was your example and there could have been many others but that is one that I solve from having a library of ""katas"" that I always run through... there are a couple of small(ish) games that use many different algos for this reason... practice.",Striking_Baby2214,2025-06-24 00:23:49,3,cscareerquestions,t3_1liwc4t,False,
mzffc5j,"Idk if this is the right audience, but think of it like dating vs maintaining a long term relationship. The skills you need to maintain a long term relationship is vastly different than what you need to be successful in getting that first/second date. Plenty of people currently in a ltr would get eaten alive if they had to start dating again and plenty of people who can easily date around make absolutely terrible life partners. Ideally you would need to be good at both to succeed in the long run",110397,2025-06-24 00:27:06,2,cscareerquestions,t3_1liwc4t,False,
mzfhi5q,It's a stress test. Simulates a rainforest prod system being down and the company losing millions of dollars per minute. You're debugging it while a multitude of VPs and directors are demanding status updates.,AdministrativeHost15,2025-06-24 00:39:45,2,cscareerquestions,t3_1liwc4t,False,
mzfkwdc,">Should I accept that there is just no correlation between the skills to get a job and the skills to be good at a job and waste a bunch of my time studying b trees and graph theory and the freaking TSPThis has always been the case. It's not unique to this market.Leetcode has never been an indicator of on-the-job skills. Even the easier leetcode questions. They show your ability to learn leetcode patterns and common solutions.If you want to join those top 1% of companies like FAANG, or fintech, yeah, you gotta study a lot of really hard, obscure leetcode riddles in order to get through those interviews. The reward is FAANG level pay though.If you expand your search to other types of companies, small ones, non-tech ones, the F500's, etc where you won't be making nearly that kid of money, they'll probably ask easier leetcode questions or take homes, where you won't have to know the really obscure stuff and can focus more on the behavioral side of things.",SouredRamen,2025-06-24 00:59:48,2,cscareerquestions,t3_1liwc4t,False,
mzfkz93,normal,NewChameleon,2025-06-24 01:00:16,1,cscareerquestions,t3_1liwc4t,False,
myxwmq4,You get paid $240k in a support role? What do you do exactly?,coldhandslol,2025-06-21 05:27:03,40,cscareerquestions,t3_1lgovkh,False,
myxyley,as long as you have enough money saved up in case you want to switch back surethough if you have time now you can always learn to codeI would be more worried about the skills they are looking for than the marginally lower pay. a job offering 220k where I'm at is only for the most senior level position and would have a lot of responsibilities that require that type of experience. of course if that's the entry level option and you know it only goes up from there take the job and remember me when you can give out referrals.,panthereal,2025-06-21 05:44:33,8,cscareerquestions,t3_1lgovkh,False,
myy32w2,"This is just a 9% pay cut (on your gross amount even, so even less net), so it really shouldn't feel risky.That said I don't think it makes a lot of sense, you'll do a more difficult job for less pay, it's a bit of a nonsense. You should negotiate the offer at least.",Bobby-McBobster,2025-06-21 06:25:26,8,cscareerquestions,t3_1lgovkh,False,
mz1ejim,"I went from systems engineering to software development. Had to take an initial pay hit, but it’s been worth it in the long run for me. Just some things to keep in mind, on the less technical side lots of the tasks were less easy to track progress on so it was easier to skate by and take time on things but on the tech side everything is tracked by points and depending on the program you can end up working significantly harder. Just make sure you actually want to be coding day to day.",youngthrillak,2025-06-21 19:58:37,3,cscareerquestions,t3_1lgovkh,False,
myzq2ju,"Having spent 20 years in software development, I wouldn't do this. I'd think about pivoting to Cyber Security or Machine Learning - fields that are in demand and are not likely to replaced by the mirage of GenAI, or the very real threat of cheap offshore workers using GenAI, over the next few years.Your SRE experience will put you in a good position to transition to Cyber Security with some upskilling and certs - you could go into DevSecOps without much issue.I'm sure you must have noticed that the current SDE job market is an absolute bloodbath, with a ridiculous amount of competition? Be kinder to yourself. Also at your experience level you will start to notice a lot of ageism where companies prefer fresh graduates than you, and those fresh graduates prefer working with other fresh graduates than you, even though it makes no sense on any level given your skills and experience. Often it is actually down to the age of the person managing you and whether they feel intimidated by you or not.Offshoring is the main threat though, plus the amount of competition with all the overqualified laid off people looking for work.FYI: I am in the process of transitioning to Cyber Security - hoping to land security reseacher/appsec/security engineer roles after 20 years in SDE/SDET/Devops roles.",planetwords,2025-06-21 14:35:51,3,cscareerquestions,t3_1lgovkh,False,
myzc93j,If this is a stable job keep it - you do t know how lucky you are - once you switch you will be pipped bet on it,Exotic_eminence,2025-06-21 13:12:35,2,cscareerquestions,t3_1lgovkh,False,
mzdkn1o,"Seriously not trying to sound rude here, but you're using the term ""financial security"" when deciding between 240K vs 220K. My dude, are you okay? There's probably other factors at play here (possibly mental ones) that you are not sharing. Again, I don't mean to say that to be insulting, but you're going to be wealthy either way. Why is this 20K so important to you?",Yehorivka,2025-06-23 18:45:11,2,cscareerquestions,t3_1lgovkh,False,
myxwr0p,SRE work I'd say. Support is the title but the company knows.,cauliflowerindian,2025-06-21 05:28:06,19,cscareerquestions,t1_myxwmq4,True,
myy0j2m,yes its mid level and i do have significant programming experience but not in a mid-large team. i really value this job as i'd get direct exposure to building applications for large scale transactions and revenue impacting services.,cauliflowerindian,2025-06-21 06:01:42,3,cscareerquestions,t1_myxyley,True,
mz1rurg,Yes I did confirm this is a regular dev role as opposed to operations. I did the regular loop which had leetcode systems design etc and the team also works on features development. Thanks for the pointers! I will discuss the tracking metrics during my first few weeks and align myself to contribute value as soon as I can.,cauliflowerindian,2025-06-21 21:11:40,2,cscareerquestions,t1_mz1ejim,True,
myxl2ik,Usually contractor positions pay less than the FTE counterpart because they don’t include the benefits. If that’s your case then I’d assume the benefits are worth at least that 8% difference.,dontping,2025-06-21 03:54:35,50,cscareerquestions,t3_1lgnaly,False,
myxluiu,Are you really losing that much income? By becoming salaried that's 7.6% in FICA tax you don't have to pay. And that's not counting any benefits you'd get as a full time employee.,mwraaaaaah,2025-06-21 04:00:17,13,cscareerquestions,t3_1lgnaly,False,
myxmf0i,"Were you a 1099 contractor? If so, you pay self-employment tax, right? That *on its own* more than makes up for an 8% difference.Did you have any benefits as a contractor? What benefits will you get as an FTE? Compare and contrast those. Those easily could make up the 8% difference on their own as well.The consensus is a contractor should generally make 20-50% more than a full-time employee to account for those lack of benefits, job security, and other expenses like self-employment tax. So only an 8% diff likely means you're coming out pretty far ahead.",SouredRamen,2025-06-21 04:04:29,6,cscareerquestions,t3_1lgnaly,False,
myxl32l,"Not a lot of info for us to go on here, but I probably would if I were you. During a recession you don’t need to maximize total comp, you just need to avoid unemployment",Illustrious-Age7342,2025-06-21 03:54:42,13,cscareerquestions,t3_1lgnaly,False,
myxy9gd,YES.And that is expected. Your total comp is likely higher even though your salary is slightly less,RemoteAssociation674,2025-06-21 05:41:34,3,cscareerquestions,t3_1lgnaly,False,
myy3eoh,"Financially, compare the PTO, 401K, possible bonuses as I know banks give bonuses each year usually, and if there are other benefits. Keep in mind there are intangible things like career growth that come into play in addition to the financial aspect. I’m not sure how you lose flexibility unless you’re a 1099 working your own schedule without much oversight.I would imagine it is most likely a better opportunity if you’re in the US.Edit: also maternity leave etc. if you are planning a family any time soon.",LeetcodeFastEatAss,2025-06-21 06:28:31,3,cscareerquestions,t3_1lgnaly,False,
mz0nuzj,"Yes, it’s 8% lower but it will include (hopefully) PTO, benefits, a 401k plan and sometimes even bonuses or RSUs (rarer). That will probably make up for the 8% difference.When I was looking at contract and FTE roles at the same time, I was told to go for much higher contract salaries since you have to pay for so much other stuff, so a pay cut might not be a TC cut.",JustJustinInTime,2025-06-21 17:34:16,2,cscareerquestions,t3_1lgnaly,False,
myymi92,"If they offer vacation, health and a retirement plan and your contracting company does not, it's probably a net gain. At a director level there's probably yearly bonuses or stock or both.",FlyingRhenquest,2025-06-21 09:41:59,1,cscareerquestions,t3_1lgnaly,False,
mz0aoz9,Yes,supyonamesjosh,2025-06-21 16:25:43,1,cscareerquestions,t3_1lgnaly,False,
mz0ctjd,"Do a side by side of not just base pay, but also bonus, benefits, 401k, etc.",dfphd,2025-06-21 16:37:04,1,cscareerquestions,t3_1lgnaly,False,
mzelsd8,Why quit when you got matched with an actual software engineering role? You gotta start somewhere man especially with 0 internships.,LesbianBear,2025-06-23 21:44:47,37,cscareerquestions,t3_1lispbb,False,
mzehn5n,"Ngl you seem to have 0 experience on paper. That's rough, I hope you've been studying on the side while you did nothing at those jobs",Careless-Ad176,2025-06-23 21:23:33,56,cscareerquestions,t3_1lispbb,False,
mzeov3s,"Your question seemed like you had a master's already.Besides, I don't know why you quit. It's like you were getting free money which you could have used for anything you wanted. Including starting a master's part time. Unless they were making your life miserable and not leaving you with any free time...I would say this is a 'you' problem and specifically not the company or job market problem. Why were you fired ?And quitting on one month....was brash... One month with just bachelor's isn't any time for you get up to speed. Its a huge red flag for anyone hiring.In one of the company I know...a new hire having master's with experience had training plan of6 months before being allowed to contribute to code base. You don't get started on day 1 and start beliting out features and building Instagram level apps...",xploreetng,2025-06-23 22:00:31,14,cscareerquestions,t3_1lispbb,False,
mzekkcf,I have a masters in CS and I work as a trash sorter in a recycle center.Does that count as a job?,Full_Bank_6172,2025-06-23 21:38:26,19,cscareerquestions,t3_1lispbb,False,
mzet89i,Masters degree won’t fix a lack of drive/ambition. You got paid to do nothing and found complacency instead of sharpening your skills and seeking better opportunity. You can’t keep a role that requires any actual work for longer than 2 months,iriveru,2025-06-23 22:23:45,17,cscareerquestions,t3_1lispbb,False,
mzf3oha,"You gotta bring your expectations way down and start climbing the ladder from the bottom. Even if you get a job where you do nothing, use your free time to grind those skills on the side. Perhaps you have a spring java role and you do very little for a year. Then grind java spring in your free time and bend the truth on your resume a little so you can move into a proper job next.You gotta grit your teeth and be willing to suffer for a little while so that you can someday prosper.",koenafyr,2025-06-23 23:20:49,6,cscareerquestions,t3_1lispbb,False,
mzf8wsc,Me.,segorucu,2025-06-23 23:49:45,2,cscareerquestions,t3_1lispbb,False,
mzerlgl,*raises hand*,njit_dude,2025-06-23 22:15:00,1,cscareerquestions,t3_1lispbb,False,
mzexzrf,Did you get a masters at an indian university? I only ask because you worked mainly at indian consulting companies.,Not____007,2025-06-23 22:49:48,1,cscareerquestions,t3_1lispbb,False,
mzfgw6g,I made sure to get internships and research assistantships while in my ms cs (US citizen) and was fine in landing a job by graduation.,sighofthrowaways,2025-06-24 00:36:11,2,cscareerquestions,t3_1lispbb,False,
mzbacxu,"You’re young, yeah? Single, no kids? Take the hard job.You have time to take risks and work hard. The worst possible thing you can do is become complacent early in your career",Tricky-Pie-7582,2025-06-23 11:47:11,31,cscareerquestions,t3_1lidkkk,False,
mzb75le,"Job 2, challenge yourself + if the startup is so well funded it likely has a better name in the market if you want to ever switch",shi1bxd,2025-06-23 11:23:08,13,cscareerquestions,t3_1lidkkk,False,
mzb9wvn,Brand new graduate… #2 easily.,churnchurnchurning,2025-06-23 11:43:57,6,cscareerquestions,t3_1lidkkk,False,
mzboyw3,"Being remote is amazing but being remote as a new grad can absolutely hinder your progress. It’s much much easier to build connections and learn both the processes of the business and general technical ability being in person. Fully remote for mid and senior level is great because you don’t need as much hand holding as you will early on. Take the more established, higher paying startup as the first job. Also, moving away from friends and family is hard but the great thing about your hometown is that it will always be there. Go have a new experience in a cool city, learn and if you hate it, look for a remote job in 2 years and move back. as you get older, it gets much much harder to move away so doing it while you’re young and unattached from major responsibility is the perfect time.",georgiaboy1993,2025-06-23 13:20:30,3,cscareerquestions,t3_1lidkkk,False,
mzbuv52,Being in office is better early in your career and there's no better place to spend your 20s than NYC. Easy decision IMO.,hashtag_hashbrowns,2025-06-23 13:53:08,2,cscareerquestions,t3_1lidkkk,False,
mzc029v,Job 2 bruh wtf. All startups work you like crazy. Young and risk tolerant,soscollege,2025-06-23 14:19:50,2,cscareerquestions,t3_1lidkkk,False,
mze14gk,Why wouldn’t you take job 2,reddit-burner-23,2025-06-23 20:04:33,1,cscareerquestions,t3_1lidkkk,False,
mz9hof8,"Recruiters aren't very technical. The only thing they're going to look at is your resume/CV, so make sure it (1) lists all of the right keywords, and (2) describes your actual accomplishments.The goal is to get past the recruiter and get to an actual technical interview, which will be with the hiring manager or another programmer on the team. One of the interviewers is going to ask about your experience and that's your chance to show off things you've built. If they can follow a link from your resume directly to your GitHub or to a demo website, that would be ideal. But it's also fine to just offer to share your screen and demo what you built for a few minutes.If you have actual work experience, you don't need GitHub. Talk about what company you worked for and what you accomplished.",dmazzoni,2025-06-23 02:40:55,17,cscareerquestions,t3_1li5fbf,False,
mz9l78b,ive never had an interviewer show any interest in any personal project and have not committed any code to my github in several years that wasn't for a take home. which is fine because outside of my 40 hours a week i dont really enjoy coding except for occasionally mentoring newbies and juniors at local meetups,bruceGenerator,2025-06-23 03:02:03,5,cscareerquestions,t3_1li5fbf,False,
mz9iuzh,You can pin projects to your Github profile page. That's what I did,BurritoWithFries,2025-06-23 02:48:05,2,cscareerquestions,t3_1li5fbf,False,
mza3pck,"You don't. Recruiters don't know tech and they don't know Github. And they don't care. You max out on keywords on your resume and don't creep em out when they talk to you, so they push you onto the actual technical interviewers (who will almost also never care abour your GitHub too).",SisyphusAndMyBoulder,2025-06-23 05:16:42,2,cscareerquestions,t3_1li5fbf,False,
mz9hlz2,You mention it on your resume,dayeye2006,2025-06-23 02:40:30,3,cscareerquestions,t3_1li5fbf,False,
mz9o3bj,"It’s not the projects that matter. It’s the skills you gain from these projects.Their biggest value is you talking about them during interviews. You can straight up lie about the projects you’ve done on your resume and no one recruiter will check.However, in a decent amount of my interviews, the technical/engineer I’m interviewing with sometimes does do a basic check.",TheCrowWhisperer3004,2025-06-23 03:20:31,1,cscareerquestions,t3_1li5fbf,False,
mza59gl,Hopes and prayers they click your link on your resume.,Schedule_Left,2025-06-23 05:29:42,1,cscareerquestions,t3_1li5fbf,False,
mz9gk7e,Portfolio website,LGm17,2025-06-23 02:34:09,0,cscareerquestions,t3_1li5fbf,False,
mz9hkyz,"Respectfully, you are in the minority. VERY rarely to recruiters actually look at a candidates GitHub.",Impressive_Yam7957,2025-06-23 02:40:20,3,cscareerquestions,t1_mz9gqnz,False,
myiqopz,"It’s trending towards finance culture for sure, but still probably better on average.",savage_slurpie,2025-06-18 21:11:52,4,cscareerquestions,t3_1leslnk,False,
myirsy9,"It's highly variable.If you're a SWE at a big tech company, under performance management, it probably feels more like working at a large bank or institution compared to a highly innovative start up.The thing with tech, is that we are still figuring out how to organize companies, projects, organizations and teams, so there's always a chance you join a project that is an absolute mess, for reasons well beyond your pay grade to fix, and you're stuck on a broken system. Over a career, that's surprisingly common, and you'll experience it at least once. Even in big tech, the culture is very much to chase impact. For instance, I know the exact figure for our team's impact, and that one line on my review: ""lead team planning, execution, and communication to achieve X/year savings"" matters more than anything else.",justUseAnSvm,2025-06-18 21:17:26,2,cscareerquestions,t3_1leslnk,False,
mykm8tr,"Both can be intense, but tech usually offers more flexibility and a casual culture, while finance tends to be more rigid and hierarchical—so it really comes down to whether you value autonomy or structure more.",LPCourse_Tech,2025-06-19 03:41:35,2,cscareerquestions,t3_1leslnk,False,
mylehj1,They're both really broad industries with more and less demanding employers,doktorhladnjak,2025-06-19 07:34:16,2,cscareerquestions,t3_1leslnk,False,
myj1459,"> For instance, I know the exact figure for our team's impact, and that one line on my review: ""lead team planning, execution, and communication to achieve X/year savings"" matters more than anything elsethis part is pretty similar to finance at least",CooperNettees,2025-06-18 22:04:37,1,cscareerquestions,t1_myirsy9,False,
myj2gb7,"Yea, that's not surprising to me. When you're in such a large organization, the easiest path to making your managers happy is to align yourself with whatever goal exists, then min/max your effort vs output for that.I've realized there's two ways to do good engineering: you actually do great work and build quality products in some absolute and objective sense, or you make your managers happy!",justUseAnSvm,2025-06-18 22:11:41,3,cscareerquestions,t1_myj1459,False,
myj2zg5,two ways to do good engineering but only one way to sleep well at night haha,CooperNettees,2025-06-18 22:14:33,2,cscareerquestions,t1_myj2gb7,False,
myj4zgp,"we all have our price, brother! Keep up the good fight!",justUseAnSvm,2025-06-18 22:25:29,2,cscareerquestions,t1_myj2zg5,False,
mzcu737,"I think you should work on actually learning backend, ideally in a real production context. Try to get some backend tickets. At 3 YOE you should be focused way more on actual professional development rather than minmaxing your resume / interview rhetoric",ub3rh4x0rz,2025-06-23 16:43:38,6,cscareerquestions,t3_1lik21o,False,
mzcl4jw,"Put the backend skills you’re using in your projects as your work experience. Is it lying? Sure, but you gotta play the game in this world. IMO, it would be worth it to build an app using something like Java spring (or whatever language is popular in the area you’re applying, but Java is pretty universal).I’m not sure how well an AWS cert will help if you don’t have actual AWS experience in your current role.",sartorist,2025-06-23 16:00:47,10,cscareerquestions,t3_1lik21o,False,
mzcut9e,"Those meaningless certs are great ways to get that first interview though imo. I think it’s worthwhile to grab some of that low hanging fruit. I just got my MC C# dev cert. Absolutely meaningless to anyone that knows tech, but hiring managers likely don’t know it’s a give-away or don’t have time to think about it too much.",Brazenbillygoat,2025-06-23 16:46:32,6,cscareerquestions,t3_1lik21o,False,
mzcx6yk,"I've been in your shoes.  Usually your only good option is to jump ship, but as you've noted, it's very difficult to do right now in your experience range if you are self taught (or a bootcamper for that matter).In your case, I disagree with others saying to embellish your resume.  If you find another job with those embellishments and it doesn't work out, with your nontraditional background you have a very real chance of getting shut out of the industry.  Unfortunately, I've seen this happen in my network multiple times in the last couple years.There's no good answer, but I think you should try to take any backend work you can find at your current company, while making peace with the idea that you may have to stay put for a few more years until you have more experience.  Years of experience will open more doors for you.",I_Miss_Kate,2025-06-23 16:57:32,2,cscareerquestions,t3_1lik21o,False,
mzd291k,"> Particularly these days because I could literally just have ChatGPT pump out those endpoints in literally seconds.This is not the right attitude if you want to move away from being a React dev. AI is only more useful than you are because you're still learning; once you know what you're doing that will not be the case. AI isn't sufficient to do production-quality work on its own. No matter what skill you decide to add, AI will be better than you at it on day 1. That doesn't mean it's not worth learning.This is a bit like saying ""I don't need to learn spanish to live in Spain, I have a translator app.""",skodinks,2025-06-23 17:20:25,1,cscareerquestions,t3_1lik21o,False,
mzdwrmi,"short of living in a HCOL making > 100k your entire career at a decently solid company is a great place to beit is very difficult to find a new job now. it is getting more difficult to even keep one. so being in a ""too important"" position is at least a sign of stability.sadly i think the way to become more employable in this market is best solved by hoping the market itself improves, which is best done by sticking with a job that wants you there. you're not a senior dev yet and if you aren't seeing mid-level positions available that is a market problem not a you problem.",panthereal,2025-06-23 19:43:37,1,cscareerquestions,t3_1lik21o,False,
mzd9sjy,"I completely agree. That’s what is so frustrating, and causing me to try and find bs side paths…Management literally won’t let me work on backend. In my org we have very distinct separation between backend engineers and frontend engineers. I would essentially be the only fullstack dev my entire section of the org.I’ve been told I have much more value spending time only working efficiently on knocking out frontend tasks. Instead of splitting time as a basically an entry level backend dev.And based on how horrible of a time I have had getting other interviews I’m pretty afraid to push the issue…",Expert_Mycologist_13,2025-06-23 17:54:01,2,cscareerquestions,t1_mzcu737,True,
mzdacx7,Yeah I feel it is seriously downplayed how bad getting laid off early in a self-taught career is. I’ve seen it. It’s a scarlet letter that somebody already took this chance and it didn’t work out…,Expert_Mycologist_13,2025-06-23 17:56:34,2,cscareerquestions,t1_mzcx6yk,True,
mzd8pa8,wdym shut out?,Famous-Composer5628,2025-06-23 17:49:04,1,cscareerquestions,t1_mzcx6yk,False,
mzdbvm4,"I totally agree with your point on Ai. I, like most, use it daily at my job.But in my experience, trying to create “production quality code” in a personal project is sort of a fools errand. I have made plenty of personal projects. And I can confidently say that developing those frontends is literally nothing like what I do at work. Of course I don’t know for a fact that this is the same for the backends I’ve set up. But I have to assume that it is similar for backend…I guess the best thing to do is just force myself to implement personal backends without ai… I just can’t help but feel like it’s a strategy from another era gone by…",Expert_Mycologist_13,2025-06-23 18:03:32,1,cscareerquestions,t1_mzd291k,True,
myxdi8g,"$150k fully remote + however much they may offer in bonuses and possibly RSUs sounds like the move for me if my current role is hybrid/full RTO and I'm only losing \~30k at MOST (assuming no bonuses for the remote job). I'm HCOL, so I'd more than make that up by simply relocating to LCOL + actually being able to afford a house.",EntrepreneurHuge5008,2025-06-21 03:01:05,7,cscareerquestions,t3_1lgm6hi,False,
myxepsj,"base 210, 10% bonus currently. Looking casually for the last month. 10 years exp total (6 at faang). I've reached out to 2 places in my network and have interviews lined up. 1 at faang, 1 fully remote. My first impression of your resume is that it lacks a skills section and lacks measurable improvement/impact in your bullets. Add those and you will get more calls back.",throwaway_1525,2025-06-21 03:09:20,5,cscareerquestions,t3_1lgm6hi,False,
myxkglp,"Your experience looks really good! I think you'd do better with some resume work.It's too long, keep it to one page, you'll find latex formats that can easily fit all this stuff in there.Also, actually lower the amount of stuff. It's hard to read and hard to get immediate points at a glance. A recruiter spends 10 seconds checking if you've got k8s and tfe in there and moves on. Spend some time on tailoring the resume to the job you're applying for, you'll quickly come up with 2-3 archetypes of what you're selling.Also as others said, demonstrate you understand the impact of your work. What did it do for a customer? How'd you measure that? Just don't say you didn't. Some people love seeing a number on every bulletpoint.",FlattestGuitar,2025-06-21 03:50:08,2,cscareerquestions,t3_1lgm6hi,False,
myy9qcy,Resume too long for 6yoe and doesn't scream infra candidate,AtheistAgnostic,2025-06-21 07:29:36,1,cscareerquestions,t3_1lgm6hi,False,
mz0kdg3,"200 base + 5% target bonus TC currently. I’m definitely at the upper end of my range, outside of big tech, and especially for a remote only gig. Most reach out from recruiters that I’m getting, I’m already toward the top of the band, and these jobs want some amount of RTO.",Drauren,2025-06-21 17:16:19,1,cscareerquestions,t3_1lgm6hi,False,
myxf0q7,What's a skills section in the context of your comment? I'm assuming you're not referring to the technology section that I have?,Lady_FunkMaster,2025-06-21 03:11:27,2,cscareerquestions,t1_myxepsj,True,
myxrn7j,Thanks for the feedback! I'm terrible at writing my resume.,Lady_FunkMaster,2025-06-21 04:45:23,1,cscareerquestions,t1_myxkglp,True,
myya4im,Why doesn't it scream infra candidate?,Lady_FunkMaster,2025-06-21 07:33:36,1,cscareerquestions,t1_myy9qcy,True,
myznn26,nevermind - I was viewing it on my phone and somehow that whole section was cropped out by an ad. The skills section is completely fine. I still think you need to display the measurable impact from your experiences.,throwaway_1525,2025-06-21 14:22:26,1,cscareerquestions,t1_myxf0q7,False,
myyaf7c,"Titles. That and company will be ready first generally. ""Swe infra"" or ""swe cloud"" or ""devops"" or ""batch infra"" or something like that is better. Even for cloud it'd be better as ""swe, cloud infra"" or ""cloud infra eng""Make those better, then they'll look at the rest. But you only have 6yoe so keep it to a page if you're in the US or going for US roles.Recruiters review resumes like people swipe on tinder. 10 seconds per resume unless it looks good.",AtheistAgnostic,2025-06-21 07:36:38,1,cscareerquestions,t1_myya4im,False,
myr1t3j,"Fair, I'm down",Redgeraraged,2025-06-20 03:31:17,1,cscareerquestions,t3_1lfj641,False,
myw1ibp,Thank you everyone that messaged the team is formed,notpremiumuser,2025-06-20 22:09:50,1,cscareerquestions,t3_1lfj641,True,
mypaa8m,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-19 21:24:58,1,cscareerquestions,t1_mypaa67,False,moderator
myu82xx,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-20 16:44:51,1,cscareerquestions,t1_myu82u8,False,moderator
myjz43j,"You could. yes.I used to write Haskell, for a few jobs across several start ups, and there's a considerable passion tax to build the type of system you like, or use the specific tools you like. Not always, as I'm sure some PyTorch guys at Meta are making bank, but it's been a theme in my career.When I switched from a Haskell team, to a new team using Typescript, I was so far ahead of everyone else it just made sense for me to lead, and after that experience I continued to find myself in team lead positions for the subsequent two companies. WSo, I really like Haskell, I really like compilers, I really like Databases, but I've decided to go for impact in my career and use the tech as merely a tool, and that's taken me to some interesting (and well rewarded) positions. I might be able to get a job doing any of those things, but those jobs don't put me on pace to retire early.Anyway, you'll be fine if you switch, as you've done very difficult programming in a team environment, and that experience will never leave you. Just focus on an area like web dev, and practice that leetcode!",justUseAnSvm,2025-06-19 01:17:03,5,cscareerquestions,t3_1lexyuj,False,
myk0evp,"Compiler optimization is a very niche area. Extremely well paid but very few roles. Simply because there's very limited scope of application. You need to be working at the lowest level close to hardware and it constitutes a small portion of overall work distribution.On top of that reality is barely any of the manger level folks will understand what you are doing, so you work will never be valued correctly.Add to that, not to bring politics, but it one of those uncool jobs that most managers don't want to deal with. There's little growth in it in terms of products, no direct impact on revenue, a super long time from work being done to it's impact being seen. Most of the work gets anonymised. Whenever you get stuck with a bug , you need crap ton of people working to fix and there's a big downtime when they are not needed. So these roles are moving to places like China, India, Poland, Ireland etc.Also, the stuff you are doing is not strictly at complier level and there's a lot of neural net design itself. The roles you are targeting, ...any company would simply prefer someone from PhD to fill that role.Your best bet is to use personal connections, expand the scope of your work to computer architecture and look for roles where intrinsics needs to developed.It's not going to be easy to get a job simply because of nature of it but if you do find a good spot there's a huge payout.what companies are you applying for?",xploreetng,2025-06-19 01:24:52,4,cscareerquestions,t3_1lexyuj,False,
mykme20,"If compilers are your passion, you can pivot slightly into performance engineering or developer tools where that knowledge still shines—but if the market keeps closing doors, it’s totally okay to regroup, skill up, and shift toward roles with more demand and growth.",LPCourse_Tech,2025-06-19 03:42:36,1,cscareerquestions,t3_1lexyuj,False,
mymwdxq,"If you enjoy working on compilers, maybe you could look into compilers for GPUs, too.While you are looking for jobs, maybe you can consider spending some time to contribute to some open source projects in this field. That could give you some useful experience and something solid you could put in your CV. And if you are lucky it might even get you some job offers.For example, the Mesa project has a compiler stack that is used by the open source graphics drivers for all major GPU vendors. It may be an interesting challenge for you to participate in something like that. The community is very welcoming.",TimurHu,2025-06-19 14:18:40,1,cscareerquestions,t3_1lexyuj,False,
myzf2p9,"learn mlir, llvm, look at open source compilers (like Triton). thats where the future of compilers lie imo",wishiwasaquant,2025-06-21 13:30:50,1,cscareerquestions,t3_1lexyuj,False,
mykir6b,Focus on PyTorch,randomshittalking,2025-06-19 03:17:46,-1,cscareerquestions,t3_1lexyuj,False,
myk1gi5,"> Anyway, you'll be fine if you switch, as you've done very difficult programming in a team environment, and that experience will never leave you. Just focus on an area like web dev, and practice that leetcode!Thanks, that's a very nice way of putting it. It's easy to look at every job posting wanting 8 years of experience with every tool and think I've wasted 3 years on a career path with no prospects, but every skill I've gained is transferable.",Gapmeister,2025-06-19 01:31:12,4,cscareerquestions,t1_myjz43j,True,
myk1250,"I've been applying at AMD, Meta, and anything with LLVM or MLIR in the description. I do worry about the outsourcing thing - a lot of what I was doing early on got moved to the India team after we went on a hiring spree there.",Gapmeister,2025-06-19 01:28:47,1,cscareerquestions,t1_myk0evp,True,
myzivs6,I don't know if MLIR/LLVM are actually the future of compilers. That's what I worked on for 3 years and it looks like maybe 2 or 3 companies are actually using it.,Gapmeister,2025-06-21 13:54:42,1,cscareerquestions,t1_myzf2p9,True,
mz2vjc0,"definitely not true, off the top of my head:google: XLA, also maintains MLIRmeta: glow (LLVM), some teams working on triton (MLIR)amazon: neuron/inferentia compiler is LLVM basedapple: metal compiler is MLIR basedopenai: triton compilernvidia: cutlass migrating to MLIR, cutile, many other projectsamd: has their own backend for tritonintel: also has their own backend for tritonnuro: ftl compilerthis is just 10 off the top of my head. theres so many more",wishiwasaquant,2025-06-22 01:10:32,1,cscareerquestions,t1_myzivs6,False,
myj8ix9,We all are trying to figure it out.Also expect alot of gate keeping on advice.,DepressedDrift,2025-06-18 22:45:11,5,cscareerquestions,t3_1leurmm,False,
myjdcbo,"Until you can get an internship, probably whatever saves you the most money. I saved a lot of money by working for Fedex(Or others) because they paid tuition incentives which translated to pretty good hourly rate plus benefits. You can also consider college jobs that offer stipends, as they are very worthwhile. Additionally, you can pursue adjacent jobs that will look good on your resume for software jobs, such as teaching assistant positions for computer science courses.",Dzone64,2025-06-18 23:11:32,2,cscareerquestions,t3_1leurmm,False,
myjjvif,Your goal in college is like 3 things.A) Get your degreeB) Get an internship or twoC) Make friendsFail at any of the 3 and you missed the point of college.,Drauren,2025-06-18 23:47:27,2,cscareerquestions,t3_1leurmm,False,
myjgm51,[Internships. Look how much they pay already. ](https://www.levels.fyi/internships/)You can only do them while you're in school. Graduate without them and you'll be fucked.,GratedBonito,2025-06-18 23:29:24,1,cscareerquestions,t3_1leurmm,False,
myjvhs6,Do whatever it is that interests you.,Upset-Syllabub3985,2025-06-19 00:55:20,1,cscareerquestions,t3_1leurmm,False,
mykza45,"Fries. Bag. Now. Just kidding. I currently do data entry, but I hate my hours (3pm-11pm). The pay is ok i GUESS (19.80, weekly, but Im a temp), but for someone who has a degree, I hate it and it makes me depressed all the time.",ZaneIsOp,2025-06-19 05:18:58,1,cscareerquestions,t3_1leurmm,False,
mygurce,"Most of us are making shitty spaghetti code crud applications with no unit tests due to project manager pressure. Trust me, you’re doing fine. Just understand that life is boring and sucks for the most part when you’re working. Go outside and find a hobby separate from work.I am also 26 with only an associates degree. There is no threat of AI looming over me because I don’t make this my entire personality and life. Yes, I’m happy to write code and design systems, but if that were to go away I’d just be really good at like plumbing or whatever I find interesting next. Here, use this for perspective : https://www.bryanbraun.com/your-life/weeks.html",Timely_Cockroach_668,2025-06-18 15:50:35,13,cscareerquestions,t3_1lekj5b,False,
mykkmsq,You just need a little luck and dedication ... I graduated from a no-name school for my master. I grinded leetcode and learned side projects. I didn't have a high GPA because I spent most of my time on these extra activities. I sent out a lot of applications for internships. This was about 12 years ago though.You just need to get an interview chance and give your best to pass the interview.,caiteha,2025-06-19 03:30:29,2,cscareerquestions,t3_1lekj5b,False,
mygwq25,I don't think I will be living past the age of 65 lol!,sexyman213,2025-06-18 15:59:44,1,cscareerquestions,t1_mygurce,True,
mygx915,"Ok then even more reason not to give a shit what other people are doing. Enjoy your life, make joy fit within what you currently earn/do.",Timely_Cockroach_668,2025-06-18 16:02:13,3,cscareerquestions,t1_mygwq25,False,
mygy3sp,"yeah, its difficult to do that with all the classical conditioning i received about reaching the ""american dream"", money, fame, prestige. Lot's to unload.",sexyman213,2025-06-18 16:06:17,1,cscareerquestions,t1_mygx915,True,
mygzqaz,"So those people are legitimately coked out of their mind. With enough coke, you can also do that. The problem is you get maybe 5-10 years out of it and then you drop dead from a heart attack. Same with bodybuilders.Also, a lot of this is probably because you want to get laid and feel powerful. The issue is, that women/whatever you’re into really don’t look for that, it’s actually more of a turn on to just be financially stable and emotionally available. So your choice is :1) Cokehead banging hookers who don’t care about you, and having everyone you love look at you as a cokehead. Work at a FAANG and develop an anxiety disorder, and then die early and stressed.2) Live within your means, be stable, be a good and relaxing person to be around, bang a hot chick who loves you, have people in general love you. Live a longer life and die at peace (hopefully).Source : Life",Timely_Cockroach_668,2025-06-18 16:13:57,5,cscareerquestions,t1_mygy3sp,False,
myh0dsc,awww,sexyman213,2025-06-18 16:17:01,2,cscareerquestions,t1_mygzqaz,True,
myoa0cm,"By working a stable job and balancing your life, you’ll still get tons of opportunities to bang",None,2025-06-19 18:22:42,1,cscareerquestions,t1_myh0dsc,False,
mzdow3r,"UT Austin, no question.Lower cost and honestly higher reputation in the CS/AI space.",TRBigStick,2025-06-23 19:05:23,10,cscareerquestions,t3_1lioy4t,False,
mze6dpq,"As a current student in UT MSAI, I’m loving it. There’s been a couple new course revisions and additions to modernize the program. There’s still maybe 2-3 meh filler courses that you’ll have to take, that might not be super relevant for ML Engineering roles but it’s not a big deal.You cannot beat the cost, and you’re getting lectures from some really great researchers in the field that are highly respected. Even being an online program, I’ve found some ways to get involved in research projects.To normies, Penn might look or sound better as it’s an ivy but in this field UT Austin is more respected.I’m not even done with the program yet but I think it has helped me get recruiters from FAANG/adjacent companies to reach out.As far as helping out your career, who knows. I am already kind of a ML Engineer at my company, but it’s a passion for me and I wanted to keep learning more. And I think it will help bolster my resume when applying for ML roles. I think for $10k it’s worth a try if you are interesting in possibly being an MLE",TheBrinksTruck,2025-06-23 20:29:19,3,cscareerquestions,t3_1lioy4t,False,
mzea7as,ut austin defo,Sufficient_Sample125,2025-06-23 20:47:21,2,cscareerquestions,t3_1lioy4t,False,
mzedwyd,"Just curious, are these both in person, or are these online?",SruLunCa,2025-06-23 21:04:59,2,cscareerquestions,t3_1lioy4t,False,
mz96mxr,"Best tip is to remain calm. Learn from your colleagues and encourage good practices! You have 10 yrs of experience... so you will be looked upto as a role model. I cannot stress this enough, become who you wish you wanted your lead to be!I wish you the best! You got this and remember deep breath in and a deep breath out!!",Creepy-Entertainer97,2025-06-23 01:37:18,2,cscareerquestions,t3_1li4589,False,
mz9jdls,"A lot it will depend on how the organization sees team leaders. How much responsibility vs how much authority, how much leeway, etc. I spend about 25% of my time playing team leader, another 25% on technology architecture, and 50% coding.",debugprint,2025-06-23 02:51:10,1,cscareerquestions,t3_1li4589,False,
mzawbe9,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-23 09:50:02,1,cscareerquestions,t1_mzawbcp,False,moderator
mz8opy7,"At your current company, find what is very very hard to replace, but is essential and provides huge ROI for the company, and gain skill in that.Or me personally I just learn everything. Absorb like sponge, eventually you’ll have subject matter expertise in like a whole bunch of random necessary stuff lol",NameThatIsntTaken13,2025-06-22 23:52:54,10,cscareerquestions,t3_1li28gy,False,
mz8own1,"Sounds like your first challenge is to find something you can be passionate about. If you manage to do that, the expertise comes a lot easier because you will simply not stop until you've exhausted any and all sources of information you can find about the subject. This is my personal suggestion base don experience.The second best suggestion I've heard but never tried is to just pick something and then decide that you're going to write a book about it.",Federal_Employee_659,2025-06-22 23:54:00,2,cscareerquestions,t3_1li28gy,False,
mz8rmh0,What's a SME?,Substantial-Elk4531,2025-06-23 00:10:13,1,cscareerquestions,t3_1li28gy,False,
mz8s36l,"Hmm that sounds like an option too, but I guess I am itching for a deep dive into one, at least to get started..",marioagario123,2025-06-23 00:13:04,2,cscareerquestions,t1_mz8opy7,True,
mz8rwh9,"Thanks for your input. I guess if I had to pick, I’d say RAG. But I am worried that it may just be a temporary industry thing, and isn’t worth investing years into, only for it to be replaced by a new approach.",marioagario123,2025-06-23 00:11:55,2,cscareerquestions,t1_mz8own1,True,
mz8ustn,Subject matter expert,Lfaruqui,2025-06-23 00:28:38,2,cscareerquestions,t1_mz8rmh0,False,
mz8xo21,Deep dive everything. Part of being software engineer is the opportunity to learn everything!,NameThatIsntTaken13,2025-06-23 00:45:23,1,cscareerquestions,t1_mz8s36l,False,
mz8wae4,"if it interests you, go for it. Even old, out of fashion things in the industry can still be lucrative for folks who are an expert in them. (See also Chad Fowler's point about being a 'technology hosipicer') COBOL and DB/2 aren't sexy, but most of the experts are dead now, and those mainframes (and their large databases that underpin Banks, Airlines, and other industries) still chug along, so being the 'last one standing' with expert level knowledge can still pay out. not a great comparison to RAG, I know, but once ideas get enough traction, they tend to stick around in software even when they're no longer driving the cool kids wild and generating industry buzz. Part of being a SME is demonstrating to employers that you are capable of mastering something. Amazon, for example (at least when I was still there four years ago) only hired developers who were able to show subject matter expertise in anything, the rationale being that if you have mastered something, you can be expected to master something else that they wanted you to be an expert in so you were a safer bet than somebody who hasn't (because its an open question if they even can).",Federal_Employee_659,2025-06-23 00:37:25,1,cscareerquestions,t1_mz8rwh9,False,
mz8umhu,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-23 00:27:41,1,cscareerquestions,t1_mz8umfp,False,moderator
mz7hwnu,">It's more or less accepted that opportunities aren't ever going back to the so called Golden Ages where ""learn to code"" was seen as a completely foolproof way to guarantee a great and cushy lifestyle to be fair, your ""Golden Ages"" is more like infinite money printer because that's what caused the mass hiring frenzy, so sure US Fed could initiate a ""Golden Ages"" at anytime, would you like to see your bread costing $100000 USD? >In what way will the needed skills be different v the golden age of Computer/Data science? y'know, actually know your shit, ability to demonstrate business impact, rather than doing a 6 month coding bootcamp then expect receive a $150k+ new grad job offer from Google because hey it was 0% interest rate and US Fed said free money for everyone (infinite QE and PPP, paycheck protection program) countless posts back in 2021-era were like ""name and shame on Google for lowballing me with only $200k as new grad! I was expecting $250k!!""",NewChameleon,2025-06-22 19:59:08,11,cscareerquestions,t3_1lhmf2i,False,
mz63bqm,"Nobody knows what the future will hold.Zooming out a bit, it is likely that the AI field is in a hype cycle, that investment in the field is a bit of a bubble, and that things will normalize eventually. AI will definitely change things long-term, but perhaps less so that some enthusiasts think.Personally, I think that software engineering is one of the most difficult white-collar jobs to rationalize away. Many of the layoffs we've seen over the last years are better explained as a correction for pandemic-era overhiring and as adjustment to turbulent markets – but saying you're doubling down on AI productivity sounds better for investors. I see strong parallels to ideas like offshoring.Whatever happens, human problem solving skills will remain valuable. Human software engineering skills will remain valuable, though the bar of what is hireable might become higher (and note that these skills cannot be acquired via vibe-coding). If AI coding agents turn out to be useful in the long-term, then security, QA, code review, and refactoring skills will become increasingly important.",latkde,2025-06-22 15:42:34,11,cscareerquestions,t3_1lhmf2i,False,
mz566s1,"While nobody can predict where the future of technology will take us, if we attempt to use the present technologies to try to forecast it, I think the answer becomes pretty obvious. LLM's are certainly a disruptor and so to succeed in the future you'll need to excel in the skills in which they can't replace.",Winter_Present_4185,2025-06-22 12:33:46,7,cscareerquestions,t3_1lhmf2i,False,
mz7yqg6,I doubt it will change a lot. This contraction is a self own due to tax treatment of software engineer salaries.Having used the ai stuff it just isn’t really hard to use. That’s the point. No special skills required. But not everyone will understand how asymmetric multi processing works and how multi threaded apps must be built to maximize performance. Not even ai. Or computer science fundamentals. Those who are here to make a quick buck but hate the science and the work are gonna have a bad time.The rest of us are rocking it out still.,codemuncher,2025-06-22 21:26:05,3,cscareerquestions,t3_1lhmf2i,False,
mz6d1yl,"Unpopular opinion: the “golden age” was when literally anyone who could spell “computer” could get a cushy tech job, and “learn to code” never meant you actually had to be good at coding. If _that_ golden age is over, then fine. People now have to be able to do the job in order to keep it. We’ve had a few rounds of layoffs, and if there was someone competent who was impacted, they ended up in an equally well-paying gig in a matter of weeks.",Independent-End-2443,2025-06-22 16:32:44,6,cscareerquestions,t3_1lhmf2i,False,
mz72h82,There wont be a rebound so it doesnt matter,Comfortable-Insect-7,2025-06-22 18:39:08,2,cscareerquestions,t3_1lhmf2i,False,
mz886rr,Pass laws that limit offshoring and h1b1s by a lot. Watch demand skyrocket again.,Agreeable_Donut5925,2025-06-22 22:17:49,2,cscareerquestions,t3_1lhmf2i,False,
mz7f7ay,Depends what domain rebounds,ninseicowboy,2025-06-22 19:45:02,1,cscareerquestions,t3_1lhmf2i,False,
mzbv4pb,"I don't think it is accepted the CS jobs will never again be cushy. If you are an AI focused CS PhD, the job market has never been better.Certain subfields of tech may have lost their luster. For how long depends how effective AI actually ends up being at allowing the unskilled to do the same job as a highly skilled engineer.I think there will still be cushy subfield of CS or tech when things cool off. More than just AI. If I could predict what they were I would pivot now. Maybe more architecture focused software dev.",FeralWookie,2025-06-23 13:54:32,1,cscareerquestions,t3_1lhmf2i,False,
myzcsn6,"If you already have a bachelors in computer science, your best shot is working for a well-known company.But I think CS is the better choice for a masters.",servalFactsBot,2025-06-21 13:16:07,2,cscareerquestions,t3_1lguq0d,False,
mz1vozj,"Speak to the advisors of the programs you're looking at. Often they'll have suggestions. Look at what courses each program offers. A lot of institutions offer graduate certificates (especially AI), some of which can be applied towards a degree.In terms of degree value, it depends what your career path is. CS is a safe bet.Keep in mind a master's is not going to magically open doors for you. It is supplementary to your job experience.",CheeseNuke,2025-06-21 21:33:36,1,cscareerquestions,t3_1lguq0d,False,
mz8tq86,"What are you trying to get out of earning a masters? Personal growth? Pivot into professorship when you 'retire'? Knowing that yourself will probably help you more. If its just because you think it will advance your career? Probably not. Most of what you need to know to be better at software development isn't taught in a university, because neither a CS, nor a DS degree (awarded at any level) is a vocational course.",Federal_Employee_659,2025-06-23 00:22:54,1,cscareerquestions,t3_1lguq0d,False,
mz01prr,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-21 15:38:17,2,cscareerquestions,t1_mz01pq0,False,moderator
myucte5,"Which ever you enjoy more or find more interesting. There's a lot of roles where you're doing both.You might see a lot of comments who say SWE because higher salary but for 99% of places they're the same pay scale, this sub has a strong bias towards typical SWE because there's a lot more people who go into SWE",dmoore451,2025-06-20 17:07:06,4,cscareerquestions,t3_1lg8qcu,False,
myuiddd,"My experience is that you are either touching physical networks at a cloud provider, at risk of your employer moving to a cloud provider, or you need a SWE skillset (and NE skillset) to scalibly work on cloud providers",ttwinlakkes,2025-06-20 17:32:58,2,cscareerquestions,t3_1lg8qcu,False,
myuxvi6,"Network eng is IT , so also ask r/ITCareerQuestions",throwaway133731,2025-06-20 18:47:42,1,cscareerquestions,t3_1lg8qcu,False,
myudz0v,"I have a little bit experience in software but I didn't try anything related to network yet even CCNA, I think I love software but when I saw a lot of ppl say that AI and that stuff, I reconsidered my choice. but you can speak in general and advice me.But I think I love linux python that stuff I looking for network field that have programming stuff I don't know where to go, Cloud? Security? Automation, Performance? I don't have subfields in network and roadmaps cuz I was dealing with software only and all my knowledge related to software",Dickeer,2025-06-20 17:12:31,1,cscareerquestions,t1_myucte5,True,
myuu2oa,You mean that's better to combine between SWE and NE ?,Dickeer,2025-06-20 18:28:58,1,cscareerquestions,t1_myuiddd,True,
myuy1nm,"I did it in both, cuz I want to see the both aspects",Dickeer,2025-06-20 18:48:31,2,cscareerquestions,t1_myuxvi6,True,
myueti9,"You can work in python is any of the fields. And you'll most likely be on Linux systems with all of them as well. Honestly with the market just apply to everything don't just go for one, if you want you can always make a switch later.",dmoore451,2025-06-20 17:16:26,2,cscareerquestions,t1_myudz0v,False,
myuujys,"I mean that unless you are touching physical networks, then the network is just data and you will need to know how to automate that data as you would any other data (but with additional niche knowledge of networking).",ttwinlakkes,2025-06-20 18:31:20,1,cscareerquestions,t1_myuu2oa,False,
myux9zb,"Automation and software-defined networking (SDN) are the future—so knowing both programming and networking is a powerful combo.That's what you refer to?, so I will dealing with Data and API and that's things required software to dealing with data. Python, Terraform, Ansible. These languages what you refer to or there's another language?",Dickeer,2025-06-20 18:44:48,1,cscareerquestions,t1_myuujys,True,
myu3hze,"One good strategy is apply everywhere: apply to the game dev position, apply to positions elsewhere, cast a wide net, then when you get offers, then be choosy. If you get multiple offers, you can debate the pros/cons. If you get one or two offers but think more offers are imminent that might be better, then maybe pass on the offers you have. If you get one offer and it's ok, but you have some concerns about stability, but it's the only decent offer you have, it might make sense to take it, and try it out.",Joram2,2025-06-20 16:22:20,4,cscareerquestions,t3_1lg2qx9,False,
myvtfw5,"If you aren't 100% sold on the game dev grindset, just transition to normal corporate crud app/api life. Less competition, far better compensation. I'm friends with people in development/QA in the field and it's insane how much less they make than I do or QA coworkers do. And I have never worked in FAANG or equivalently compensating places.",BellacosePlayer,2025-06-20 21:25:56,1,cscareerquestions,t3_1lg2qx9,False,
myckyjb,"SWE II, especially right as you join, will own features or at best small projects. The expectations aren't that different from SWE I in terms of scope, mostly in terms of autonomy.",Bobby-McBobster,2025-06-17 22:44:23,4,cscareerquestions,t3_1le0zfy,False,
mydp5u7,"Sorry, what does this map to? Mid level? At Google, SWE 2 is junior but at Amazon, SDE 2 is mid level.",TheNewOP,2025-06-18 02:31:42,-1,cscareerquestions,t3_1le0zfy,False,
mycqznk,"Thanks, Any good books that you found helpful?",BA_Knight,2025-06-17 23:16:58,1,cscareerquestions,t1_myckyjb,True,
myecx7s,"They obviously mean the level after new grad. Classic swe post though, being pedantic and making a useless comment while trying to sound smart.",vorg7,2025-06-18 05:15:18,2,cscareerquestions,t1_mydp5u7,False,
myek61l,So it's just learning on the job?,BA_Knight,2025-06-18 06:17:42,2,cscareerquestions,t1_mydx0jh,True,
myemkih,"Yes, but when you're in the company, to get promoted to the next level you already need to perform at that level for 6+ months, so it's not like expectations suddenly change, it's progressive.Obviously it's a bit different coming from outside but you should have also gone through that shift in your previous companies.",Bobby-McBobster,2025-06-18 06:39:48,3,cscareerquestions,t1_myek61l,False,
myeoav7,My exp is mostly freelance,BA_Knight,2025-06-18 06:55:48,1,cscareerquestions,t1_myemkih,True,
mycewrj,"I've seen a lot of debate around ATS in this sub. After reading through tons of posts, I get that it might not be the only thing that matters, but I still don't want to risk it. So I decided to make an ATS-friendly resume just to be safe. I used both Claude and ChatGPT to create it, and according to those tools, I got a near-perfect ATS score.But then I ran the same resume through sites like Rezi, ResumeWorded, Teal, and Simplify, and suddenly the score dropped to less than half. Each of them then suggested fixes, but only if I paid for a subscription, which is usually around $40 a month. That feels kind of ridiculous when you're actively job hunting and not even working yet.I know Rezi is well-liked on this subreddit. Teal gets a lot of praise on LinkedIn. ResumeWorded pops up in a few other places too. Honestly, it feels like some subreddits are just being run by the dev teams of these resume sites.Out of all of them, I actually like Simplify the most for autofilling job applications. It does about 80 to 90 percent of the work, which is great. But again, the ""pro"" features cost $40 a month.So here's my question: **Is there a good resume tool that actually helps with both autofilling job apps and making your resume ATS-friendly without charging a crazy monthly fee?** I'm not too concerned about the resume template itself. Mine is already clean, has no columns, and is pretty much done.Would love to hear what tools are actually working for people here.",sludj5,2025-06-17 22:11:54,2,cscareerquestions,t3_1ldgjul,False,
myiq5fc,"Should I put my software development manager role on my resume if I am looking for a developer role?Seems like a weird question, but i am curious. I am looking for embedded engineering jobs and I am not sure if I should include my management title on my resume. Situation: I have been working for this company for 5 years. 3 years ago my manager left and they decided not to back fill the position. But with that I stepped into more of a leadership role on the team. I went on for about a year and half until I finally discussed it with my boss and he agreed that I had been leading the team better than the previous manager. For the next year I would be dragged along saying my promotion is still with HR and I would follow up ever 2 weeks. Finally at my review in the beginning of the year it went through, but there was no pay increase, just my normal merit increases which I was pissed about because I have been doing the job of a team lead for the past 3 years with no additional compensation. Anyway the promotion was from embedded software engineer to software development manager. But it's more of a team lead / supervisor / product manager role. And I am still performing development tasks.Should I put the software development manager on my resume if I am looking for a developer role? Or should I keep embedded software engineer and just include my leadership responsibilities under that job title?",l_stud,2025-06-18 21:09:14,1,cscareerquestions,t3_1ldgjul,False,
myct81m,dropping my hook for any good information,Spiritouspath_1010,2025-06-17 23:29:09,1,cscareerquestions,t1_mycewrj,False,
mzehdw1,"> but with how oversaturated the field islmao, if you’ve a kid today, it’ll be 20 years before they’re looking for employment so it seems silly to base things on the (very ephemeral and soon-to-be-irrelevant) macro structure of the economy. Even funnier seeing “I wouldn’t, field is oversaturated” as the top comment, what a few years without zero interest rates and some hiring freezes does to a mf. But seriously, this sub should be less “doomers banging their drums all day” if it wants to remain useful or relevant. Anyways, to answer your question: I don’t think it’s necessarily programming languages you’ve to equip your kid with for success in CS. Problem solving and cognitive skills are what you should be optimizing for, esp while their brain neuroplasticity is at its peak, to ensure they’re well equipped regardless of what the world looks like in the future. I would probably do a mix of: solving puzzles, lots of math, teaching them multiple languages (not the programming kind), and build an habit of reading a lot at an early age.Once they’re much older, teach programming more to encourage them to build fun applications out of curiosity, less to give them an head start on leetcode. Maybe competitive sports on top for social skills in a team setting and for discipline. All of these will sharpen their brain and set them up for success, rest will fall in place.",AugusteToulmouche,2025-06-23 21:22:15,25,cscareerquestions,t3_1lis7iq,False,
mzehtx6,If you ask this subreddit it’s the worst job you can get and it’s all doom and gloom. No one will hire you and you will never have a job.,Foxmoto2880,2025-06-23 21:24:29,7,cscareerquestions,t3_1lis7iq,False,
mzefbhb,"I would prob take a different approach and focus on intangible general skills that have been and will always be useful since the startof time and across any domain. Lay the foundation below and let kid experiment and ask for help as needed. Bc tbh if you have the intangible behavioral foundation, consistency, and the right reasons, they will be fine.1. Social skills/persuasion/communication.2. Pattern recognition 3. Imagination/vision4. Self-discipline/delayed gratification/focus",MangoDouble3259,2025-06-23 21:11:56,3,cscareerquestions,t3_1lis7iq,False,
mzeur6d,I’m discouraging my son from doing this as much as possible. Entering the field today is nothing like it was 30 years ago so what worked for me doesn’t apply. I think the future will need radically less labor in this domain and the vast majority will be outside the US. Labor costs will continue to be driven down and jobs shifting to new countries always in that pursuit. I think it’s a huge waste of money and epic mistake to study this as a young person in America right now.,Nofanta,2025-06-23 22:32:03,2,cscareerquestions,t3_1lis7iq,False,
mzefb73,Go to Med School or become a AA,jetx117,2025-06-23 21:11:54,3,cscareerquestions,t3_1lis7iq,False,
mzecvbp,"I wouldn’t, field is oversaturated",SeaworthySamus,2025-06-23 20:59:56,4,cscareerquestions,t3_1lis7iq,False,
mzef9a6,"Get them a CS degree, then get them their first job at the same company I work at. Once you get past being a junior it gets easier. Other than that, start doing programming competition from as young as possible, as those are pretty much Leet Code in other style.",UnluckyAssist9416,2025-06-23 21:11:38,2,cscareerquestions,t3_1lis7iq,False,
mzeni99,"I'd teach them to code in a scripting language like python, and then no matter what projects they do, also teach them to analyze data with python or something. Why? Because if they ever decide to do something other than coding, then knowing scripting and especially data analysis is OP in many office jobs.There's tons of fun stuff you can have someone learn, but I would focus on using something with simple syntax and error traces. Coding should be fun foremost, c++ errors are not fun to work with when first learning.Also the fundamentals shouldn't be taught the same way as courses usually do, after you get past modules/packages, conditionals, loops and I/O, have them build something. They aren't going to be able to properly implement classes without having some intuition on how programs even work. Sure Java people will say well everything is a class, yeah and Java sucks to learn as a first language because you're focusing on syntax and not the magic of building something.",sersherz,2025-06-23 21:53:29,1,cscareerquestions,t3_1lis7iq,False,
mzfjnf4,"We will all be coding in skibidi gyat language or something, you cant predict the next 5 years leave the next 20",itsallfake01,2025-06-24 00:52:24,1,cscareerquestions,t3_1lis7iq,False,
mzeu8gl,"And if the field is dead when they're much older, what do you say...?You're gonna have to make the decision based on market conditions eventually, why act like this isn't true?",No-Employment-5929,2025-06-23 22:29:11,-4,cscareerquestions,t1_mzehdw1,False,
mze89xi,"I did this exact switch many years ago. It can set you up in a valuable niche where you know enough programming to talk to developers about what your government/political users need, and enough about government to help them not get sucked into the latest sales pitch for tech trend de jure. I won't say it's a huge market, it's not, and the top end salaries aren't close to big tech, but the need is real.",CowboyRonin,2025-06-23 20:38:14,11,cscareerquestions,t3_1lir9dc,False,
mze93jr,"Let me ask you this. Did you enjoy the Java class but still struggle with it, or did you not enjoy it at all, and lacked the motivation to study more? If Computer Science isn’t for you, that’s fine, but if this is something you’re actually interested in pursuing I’d say take the class again, or better yet, review the material over the summer before making a decision. Regardless of what path you go down, I feel like I should also add that a Political Science degree isn’t worth much if you don’t plan on going to law school. You can absolutely find work with it or a History degree, but it’s not gonna pay as well as CS related jobs would. I’m not saying stay in it for the money, but it’s something to keep in mind when choosing another major.",Night-Monkey15,2025-06-23 20:42:07,4,cscareerquestions,t3_1lir9dc,False,
mzf7flc,"So right now CS classes is a basic ""intro to programming"". Not too far in the future, your classes will be more mathy, more computer systems, more programming languages, and more of everything. And more and a lot more.If you did poorly in Java, honestly it's probably a sign. If the subject is making you go 'meh' in the first year, then it's hard to say what'll make you go from meh to 'wow yes' in future years.When I took CS, I was super engrossed and enamored by my classes. While not every student will be quite like it, you probably need more than ""I've grown disinterested"". My guess is your use of the online tools let you squeek by without understanding the material, which has done you a massive disservice.This degree isn't for everyone. If your next best option is history or polisci, I'd say you took CS because of the memes, not because of the interest or ability. For example, if I had to drop out of CS, I probably would have taken something in the sciences, like physics, engineering, etc.",codemuncher,2025-06-23 23:41:32,2,cscareerquestions,t3_1lir9dc,False,
mze52je,"Relative to political science or humanities, a CS degree will have a higher ROI in any market....but if you don't enjoy the field, it won't be worth it imo.",polymorphicshade,2025-06-23 20:23:18,1,cscareerquestions,t3_1lir9dc,False,
mzeaw1s,"Could you double major in political science and computer science? That would be a strong combo, and you would have a backup in case one didn't work out.Also it's not uncommon to do poorly in your first year. I myself bombed my first year and ended up transferring. I'd recommend figuring out if you genuinely dislike CS or if there are other factors influencing it. For my my issue was that it was my first time away from home for a long time, and I didn't do well with the large class sizes of my school. Also I did not like living with a roommate.",RadiantHC,2025-06-23 20:50:37,0,cscareerquestions,t3_1lir9dc,False,
mze8sxb,"That’s awesome, I’m happy for you! Makes me feel a little more hopeful. I’ll email my academic advisor next week when I’m home from Newfoundland.",CannedCam,2025-06-23 20:40:43,2,cscareerquestions,t1_mze89xi,True,
mzfptlf,I agree with this. CS just doesn't click with some people. If someone is not at least interested in what they're doing with Java now it probably means they shouldn't pursue it. CS isn't super hard if you like it.,David_Owens,2025-06-24 01:28:38,1,cscareerquestions,t1_mzf7flc,False,
mze5wqr,"I’m aware, but I’ll have a smaller ROI if I continue getting mediocre marks (won’t find decent work; right now the only people in my field getting internships where I’m at have excelling marks) so I want to know if it’s worth switching",CannedCam,2025-06-23 20:27:10,2,cscareerquestions,t1_mze52je,True,
mzesjle,"""higher ROI in any market"" not anymore",amesgaiztoak,2025-06-23 22:20:03,2,cscareerquestions,t1_mze52je,False,
mzebl6u,"As a recent CS graduate, not this market",RadiantHC,2025-06-23 20:53:55,4,cscareerquestions,t1_mze52je,False,
mz8ssie,"Oh, I’ve heard complaints about this same company before. It’s Canonical, right?I’m not filling that crap out. Totally unprofessional environment. Next.",doktorhladnjak,2025-06-23 00:17:18,12,cscareerquestions,t3_1li2hie,False,
mz8r9ws,"I close out of any BS like that immediately. If it's anything more than a single text box of ""why do you want to work here?"" I'm gone.",No-Amoeba-6542,2025-06-23 00:08:06,4,cscareerquestions,t3_1li2hie,False,
mz93cpb,"Canonical is weird. I've seen it a lot for visa fraud too, but Canonical is just weird.",poipoipoi_2016,2025-06-23 01:18:09,2,cscareerquestions,t3_1li2hie,False,
mz9fe6h,"Just use AI. They want to BS, I can BS too",beargambogambo,2025-06-23 02:27:15,5,cscareerquestions,t1_mz8ssie,False,
mz9mhbs,> why do you want to work here?There’s this thing called money. I need it to live. Perhaps you’ve heard of it.,doktorhladnjak,2025-06-23 03:10:07,2,cscareerquestions,t1_mz8vsu3,False,
mz8w4v9,Yes that is a good point. Sometimes I can answer honestly about some aspect of the company or product I am impressed by. But often I am applying because this is a terrible market and I can't afford to not apply,No-Amoeba-6542,2025-06-23 00:36:32,1,cscareerquestions,t1_mz8vsu3,False,
mz514y9,"I managed a team in this space for ~2 years in a public/private partnership on the private side. Ultimately what we were getting out of that relationship wasn't well aligned with our corporate strategy or mission, so we let it slowly die.> what are currently the most common tasks done and how much of the work is centered around creating code vs model deployment, mathematical computation, testing and verification and other aspects?~80% of the work was exploratory data analysis and ""data munging"". Find the data for the problem you're trying to solve, or question you're trying to answer, and shape it into something complementary to well known modeling and analysis approaches. Most of the actual math being in the EDA phase of the project, most of the actual code being in the ""data munging"" phase of the project.> When you create code for data science and/or ML/AI research, how complex is the code typically?On a scale of 1 to 10, with the 10 being stuff our staff+/principal people typically work on, the actual modeling/munging code is closer to a 3. I didn't understand the math of ""why these features, why these hierarchies, why these parameters, etc"" but debugging/optimizing the code was a ""first 6 months"" thing for me when I joined the team as an IC originally. Granted I had a few YOE under my belt at that point, none of it was at all related to ""data science / machine learning"". First time I ever touched R or used pandas in earnest.Complexity is kinda arbitrary -- my measures are ""what did architecture decide was appropriate resiliency, performance, and test coverage"". Our flagship software has some bonkers design docs and ADRs with SPIRITED DISCUSSION IN THE PRs written up on a regular basis. The inference models we deploy are a 2-pizza typical development team endeavor at most without a lot of staff+/principal people weighing in.> Or is it sometimes instead smaller, simpler with emphasis on optimizing using the right ML or other AI models?Unless you're working on the foundational code/models for LLMs, there's not much of a need to get super-duper into the weeds. A couple hundred lines of (pick your favorite linear regression library + pandas/numpy/R/tidyr/etal) can meet an awful lot of business needs.",healydorf,2025-06-22 11:56:39,2,cscareerquestions,t3_1lhlupo,False,
mz59m3s,"It's not as complex as you think it is. I am the lead machine learning / data science engineer for a major company you all have heard of and while my work my impress the average laymen who has no idea what data science and machine learning entails, if I showed you what I was doing you'd say ""that's it?""",ducksflytogether1988,2025-06-22 12:57:02,1,cscareerquestions,t3_1lhlupo,False,
mz5b55d,What do you mean by research? Research in the academic sense typically isn't going to involve deployment. Research code is typically also very messy.,anemisto,2025-06-22 13:07:00,1,cscareerquestions,t3_1lhlupo,False,
mz902ba,"It depends. Some of my coworkers literally just read research papers and try to apply it if they believe it is something that would be useful for us. It takes a lot of time to design, try it out, find good data, and also get it approved (long process due to things like bias, anonymity etc through a board of people).",honey1337,2025-06-23 00:59:16,1,cscareerquestions,t3_1lhlupo,False,
mz5ymdu,"You don't how much a comment like this helps. Also thanks to the all the hot data science chicks on youtube! For some reason I don't follow AI/ML/DS men as much, most of them just end up being boring and not even helpful.",mightythunderman,2025-06-22 15:18:29,1,cscareerquestions,t1_mz59m3s,False,
mz68cf0,I'm an MLE (not in AI research) but the profession really is overhyped by those trying to break in and those in school.,Illustrious-Pound266,2025-06-22 16:08:23,1,cscareerquestions,t1_mz59m3s,False,
mz5etqp,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-06-22 13:29:56,1,cscareerquestions,t1_mz5etoe,False,moderator
