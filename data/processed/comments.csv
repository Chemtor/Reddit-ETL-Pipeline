id,body,author,created_utc,score,subreddit,parent_id,is_submitter,distinguished
mmdn45s,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-10 12:40:02,1,dataengineering,t3_1jvwwcy,False,moderator
mmdnusw,Chatgpt powered pipelines seem more like a nightmare than a dream. You can probably deal with this contacting Microsoft directly.,Demistr,2025-04-10 12:44:37,409,dataengineering,t3_1jvwwcy,False,
mmdo3en,ChatGPT powered pipelines? Yikes...,smartdarts123,2025-04-10 12:46:05,137,dataengineering,t3_1jvwwcy,False,
mmdpt59,That sounds like an inexperienced and rushed implementation. Allowing AI to write your pipelines... Come on. No one believed that story has a happy ending.,El_Guapo_Supreme,2025-04-10 12:56:31,116,dataengineering,t3_1jvwwcy,False,
mmdrb1w,Annual quota? Enterprise Tier? Would love more details because neither of those apply to Fabric.,x_ace_of_spades_x,2025-04-10 13:05:34,59,dataengineering,t3_1jvwwcy,False,
mmdrr9i,Isn't you can only burn the next 24 hours quota at max?We restart the capacity that would reset the excessive usage and add that to the azure bill.,Chou789,2025-04-10 13:08:16,25,dataengineering,t3_1jvwwcy,False,
mmdpvqp,You see that’s your problem. You need to be using Copilot not ChatGPT.,grapegeek,2025-04-10 12:56:57,62,dataengineering,t3_1jvwwcy,False,
mmdr5l4,A lot of people using spark when they shouldn't be (either because it's overkill or they don't know how to use it),DynamicCast,2025-04-10 13:04:39,12,dataengineering,t3_1jvwwcy,False,
mmdw5do,"8K a month sounds like you are running an F64 without a reservation, there is no annual quota, you burned through your 24 hour limit, you can pause and resume your capacity to clear out the burndown table and take the hit as overages. You will also want to look into surge protection to ensure that this cannot happen again. If I was management I would hit the breaks hard on this project until people can get some education and know what they are doing.",SPG2469,2025-04-10 13:33:50,36,dataengineering,t3_1jvwwcy,False,
mmfjb8z,Hey u/embarrassed_war3366 seems like some folks are calling BS on the post. To clarify the situation can you share a screenshot of the front page of the Fabric Capacity Metrics App to show the high-level CU utilization metrics?,Ok-Shop-617,2025-04-10 18:26:48,9,dataengineering,t3_1jvwwcy,False,
mmmudxs,2/30 is great! My last couple jobs I needed 50 apps for an offer 8 yoe. What are you seeing for tech rounds? More or less leetcode?,boboshoes,2025-04-11 21:36:23,112,dataengineering,t3_1jx0xpa,False,
mmn55bq,"The people doing 100+ apps don't have the experience, which carries especially hard in the industry i feel. Like there are recent grads with skills that'll do laps around mine but I've been working for over a decade and I'll have the leg up, fair or unfair. 2 offers from 30 apps is an excellent rate in any situation though, congratulations",talkingspacecoyote,2025-04-11 22:38:09,62,dataengineering,t3_1jx0xpa,False,
mmnfpo9,"yeah, been applying, i've had 6 final rounds, no offers, probably like 300-500 apps (albeit many were linkedin easy apps), got 2 more final rounds coming up and I consider myself lucky. 5 YOE as a DA at a BB bank4 YOE as a DE, fintech + hedge fundI'm in a HCOL city with a lot of competition. I've had something like at least 40 interviews.",uhndeyha,2025-04-11 23:41:18,22,dataengineering,t3_1jx0xpa,False,
mmokqdg,Only 30 applications?Wow,poonman1234,2025-04-12 04:14:18,11,dataengineering,t3_1jx0xpa,False,
mmng2ah,What questions did you practise on Leetocode for Python? Like DSA?,GulabiGovind,2025-04-11 23:43:24,4,dataengineering,t3_1jx0xpa,False,
mmoymw7,That's a cool use of the Sankey chart. :),RegularLoquat429,2025-04-12 06:18:05,3,dataengineering,t3_1jx0xpa,False,
mmq5rm0,30 apps is all you did? I applied to freaking 500 jobs before finding something below my education level. Had to remove my masters to even get my foot in the door,PowerfulMinimum38,2025-04-12 13:00:40,3,dataengineering,t3_1jx0xpa,False,
mmqsnfj,"100+ app, only 1 interview, seems like im not the only one, i was getting sad already lol6+ yoe",ironwaffle452,2025-04-12 15:12:27,3,dataengineering,t3_1jx0xpa,False,
mmriwcq,How much salary increase ?,Bonamoussadi,2025-04-12 17:28:13,2,dataengineering,t3_1jx0xpa,False,
mmryvb1,Congratulations! What does your resume look like (can you share anonymized resume for others). Which area are you looking at northeast/south etc?,hamzalizafar,2025-04-12 18:52:33,2,dataengineering,t3_1jx0xpa,False,
mlxpybo,"I've noticed this trend on all of the software related reddits - they're 99% exactly what you say. I thought this subreddit would be about ""I have this weird data model issue how would you do it"" or ""what's the best way to configure this in spark"" or whatever.",PencilBoy99,2025-04-07 22:04:37,258,dataengineering,t3_1jtxla8,False,
mlxvcde,"Actual Data Engineer here. 90% of what this sub says not to use is exactly what I use in my everyday job.Health Care business heavily rooted in Azure Tech. We use ADF, Azure SQL, Logic Apps, PowerBI. And that solves almost all of our issues.",TCubedGaming,2025-04-07 22:35:46,210,dataengineering,t3_1jtxla8,False,
mlxyqji,hi i’m doing research for my startup. would you be interested in a saas platform that uses ai to detect if a reddit user is a data engineer?,thomasutra,2025-04-07 22:55:13,74,dataengineering,t3_1jtxla8,False,
mlxslcd,"I’m here!Jokes aside - you’re not wrong that is happening and it’s happening across most technical subs.The result is as usual - less signal, more noise. Fewer real engineers posting, more market research. I hope we will not slide into flywheel - fewer good posts -> fewer good engineers, fewer good engineers -> fewer good posts.Maybe stricter tagging helps? At least make it obvious when a post is startup-driven vs. actual discussion.",luminoumen,2025-04-07 22:19:47,32,dataengineering,t3_1jtxla8,False,
mlyuxde,Not as bad as the analytics sub where every post is asking how hard it is to get a job with 0 experience,CHVRM,2025-04-08 02:07:46,13,dataengineering,t3_1jtxla8,False,
mlxwnkp,"It’s certainly more of that than it used to be. This subreddit was a solid little hub of professionals, really not that long ago.",JohnPaulDavyJones,2025-04-07 22:43:24,11,dataengineering,t3_1jtxla8,False,
mlxuxlk,most of the tech conferences are like this as well now - more than half of all the content is just adsat least we still have the neckbeard gatekept communities like fosdem,adappergentlefolk,2025-04-07 22:33:22,33,dataengineering,t3_1jtxla8,False,
mly21o7,"This and other tech subreddits seem infested with thinly-veiled questions about how AI can solve all of your problem, or startups asking ""what gripes do you have?""",Reasonable_Tie_5543,2025-04-07 23:13:56,9,dataengineering,t3_1jtxla8,False,
mly1ufa,"It's a recession, despite what people wanna claim. In a recession you get a lot of people thinking they can just learn to code and enter tech. The hell that is LLMs now has people believing they know more than they do which makes the enshittification of everything so much more obvious. There are still good discussions to be had here, you just have to try and weed out all of the garbage. Mods could do better, but they're probably busy dealing with these same types of people at work.",financialthrowaw2020,2025-04-07 23:12:48,14,dataengineering,t3_1jtxla8,False,
mlzb5br,"It's because Reddit has become a very successful sales channel for early stage startups. It's 0 cost, and has segmented audiences built-in for you. This is likely to happen across almost all sub Reddits in some capacity or another.Btw this isn't just Reddit. This happens with all forms of media. Just think of email, and ads, and Facebook, then Twitter, Instagram, LinkedIn (weirdest of them all), TikTok etc. Once there is a market to be tapped, then people will try to tap it.The only way I could see a way around this would be a private, paid group where there is no solicitation of any kind (think Country club).Just my two cents.",Impressive_Run8512,2025-04-08 03:56:09,6,dataengineering,t3_1jtxla8,False,
mmisno7,"I bomb leetcode just because I straight up can't solve the questions, lol. There always seems to be some specific trick I can't see.If you manage to get the logic to solve the problem correctly, I'm surpised not getting syntax correct has been such an issue though the field is more competitive these days.For leetcode stuff in python, you usually only need to remember arrays, dicts, if and for loops (maybe while).I have an awful memory and stuggle like hell to remember the same data transformation syntax in SQL, polars, pandas, pyspark.",speedisntfree,2025-04-11 06:25:15,87,dataengineering,t3_1jwi3wf,False,
mmj28mu,"I have a question regarding that:As a data engineer you have to know stuff like orchestrators, ETL, ELT, SQL, Lakehouse, data files structures etc.But you get the same treatment as SWE for interviews even if you don't do SWE work.Why is that?Why do I need to know data structure and algorithm if most of my time is being spend in SQL?",Beneficial_Nose1331,2025-04-11 08:04:58,46,dataengineering,t3_1jwi3wf,False,
mmir1hv,You might not want to hear it but learn to do the tests. Start simple do courses refreshing data structures on Udemy. Do 1-2 hours a day. Build a personal project. You have to adapt. There’s no magic pill as shitty as that sounds,hositir,2025-04-11 06:09:30,52,dataengineering,t3_1jwi3wf,False,
mmjsti9,"I feel you on this struggle! Even as a senior who can architect complex data systems, i'd freeze up on those damn coding challenges. The disconnect between real-world engineering and these artificial puzzle questions is frustrating. What helped me was changing my practice approach - instead of trying to solve a ton of problems, I focused on deeply understanding a smaller set of core patterns and writing them from scratch repeatedly until the syntax became muscle memory. I also started narrating my thought process out loud during practice to get comfortable talking through my approach. Have you tried platforms like interview query? They have some DE-specific practice problems that are more relevant than generic LeetCode, plus they offer peer mock interviews where you can practice the communication part. Sometimes just getting comfortable with the interview format is half the battle. Don't beat yourself up - these interviews are rarely representative of the actual job!",tech4throwaway1,2025-04-11 12:08:12,11,dataengineering,t3_1jwi3wf,False,
mmjxcuu,"The only “solution” I’ve come up with over the past several years is just avoiding companies that rely on leetcode. Unfortunately, it’s harder to do under current market conditions.As someone who’s been on both sides of the interview process, I’ve found it far more effective to have conversations about rudimentary database concepts, high level data pipeline design, and *maybe* a coding session where pseudo code is acceptable.For those of us who have written production level code in several languages, memorizing syntax of one language while someone is breathing down your neck is not all that useful imho.",Acceptable-Wasabi429,2025-04-11 12:38:16,9,dataengineering,t3_1jwi3wf,False,
mmiwa7u,> How can I effectively overcome this challenge?By doing what everyone does: grinding Leetcode.,jajatatodobien,2025-04-11 07:02:10,16,dataengineering,t3_1jwi3wf,False,
mmknaof,"I was in your shoes recently. I have around 5 YOE, and they suck but its something I had to come to terms with being able to solve easy leetcode problems and some mediums in python. I definitely had to spend several weeks grinding it out. But don't just grind random leetcode problems. For SQL you should be able to solve most of them no matter what. Basically get really good at linked lists, dictionaries/hash maps, two-pointer, array problems. I haven't seen any other data structures being asked (maybe some chance dynamic programming). A good interviewer will work with you if you get stuck when solving these problems, and on top of that they should understand that you're under pressure and might not be operating at your best. The more rejections you get, the more you learn. Keep your head up and know that all it takes is one yes.P.S. don't forget to focus on behavioral/cultural questions, it's quite easy to tunnel vision on the technical portion and you might get caught off guard.",deal_damage,2025-04-11 14:58:31,6,dataengineering,t3_1jwi3wf,False,
mmip3dn,"Well, I make notes specifically for python syntax and memorize/recall them occasionally, it helps a lot, I also don’t look at the solutions or hints while solving",Severe_Sir_3237,2025-04-11 05:51:06,4,dataengineering,t3_1jwi3wf,False,
mmja87y,"Leetcode doesn’t recognize the world has useful IDE’s to solve having to memorize. However you should know IF and WHILE, assuming Python. Pseudo code and what the pro/con | alternatives within that is sensible. Lazy interviewers won’t buy this, but it should if someone is paying attention",Whipitreelgud,2025-04-11 09:31:00,4,dataengineering,t3_1jwi3wf,False,
mmim4fh,Are there companies in 2025 who are still interviewing with leetcode?,Dangerous-Escape7156,2025-04-11 05:24:06,19,dataengineering,t3_1jwi3wf,False,
mm7v23t,"You have to create standard processes and procedures for your team to follow. Create a documentation section in your wiki that outlines and describes the general expectations for giving situations. Good quality peer reviews pairing seniors and juniors or mods together. Most importantly you have to be ok with people failing. They will fail and when they do you work with them to debug and identify what could have gone better. Then, let them back out into the wild.Lastly, you must hold them accountable for your expectations as you have laid them out in the wiki.",Imaginary-Ad2828,2025-04-09 14:34:39,62,dataengineering,t3_1jv3rgi,False,
mm8gcx0,"I never want to be a manager, precisely because I would be overbearing/micromanaging -- so I'll stick to being an ICAs an IC, I respect managers who:1. Trust in me2. Enable me to be my best selfFor me, this is achieved by me being given autonomy to choose my work (within reason) and to be empowered to make technical decisions. A good manager can support me in this by:* Communicating priorities to me so that I can make the right call on what to work on, and letting me know if/when something more pressing comes up and I need to re-prioritise* Allowing me to lead on POC/investigative work, but still asking for an opportunity to sign off on any significant technical changes* (What should be an obvious one...) Encouraging team members to support each other to lighten the load on the manager, such as delegating PR reviews to senior members of the team (e.g. me)* Being willing to have open and honest discussions with me if my behaviour is misaligned with the company's/team's/manager's expectationsUltimately, just let me do my job :grinning_face_with_smiling_eyes:",Bilbottom,2025-04-09 16:19:43,21,dataengineering,t3_1jv3rgi,False,
mm8cil0,"I'm not really a data engineer (I think I subbed here while looking into Dagster and Prefect a year ago), but from my time as a tech lead at a startup, I was responsible for the work getting done and minimizing disruption, but had little actual hand in working on it (or rather, I only owned some parts of it).In those situations, without supportive or understanding leadership (e.g., any time there's an outage you're on the hook) you start getting paranoid about everything and you make yourself the bottleneck, you know, just to ""sanity check"" everything. It can easily get to micromanagement and now your team feels they need your approval for everything.I put my team in that situation and it took time to dig ourselves out. I had to coach them how to fish and make their own best judgment call, how to hold themselves accountable if something does go wrong, to think through what can happen if things go wrong, what signals to look for, and the proper channels to communicate.Over time, it worked. It took a lot of effort, but in the long run it freed me from being the bottleneck.Good luck!",onefutui2e,2025-04-09 16:00:37,15,dataengineering,t3_1jv3rgi,False,
mm8ia9u,">I used to think great leadership meant knowing *everything* — every ticket, every schema change, every data quality issue, every pull request.>You know... ""being a hands-on lead.""I don't think these are necessarily bad things. In fact in many instances in my career I wished my lead/manager was more knowledgable, more hands on. But it's a matter of identifying when you need to be more hands on, when you need to insert your opinion or knowledge on the task at hand. And with every design decision (that you deem necessary to provide) it's important to include your reasoning, links to documentation, etc. to empower your team to make those same decisions on their own in the future. If you're simply doing their work for them they aren't going to learn to be great engineers.Also if your engineers are constantly asking for your feedback, doesn't that get in the way of your other work? It seems like at a certain point you would've naturally gotten fed up with this and pushed your team to make their own decisions.",x1084,2025-04-09 16:29:12,4,dataengineering,t3_1jv3rgi,False,
mm84pa7,"1. **Automation**. Get testing, style checking, and deployments all automated in CI/CD pipelines so there's no ambiguity about how they are done.2. **Pair programming**. It's a great way to help good practices diffuse through the team, build trust, and makes code reviews faster or even unnecessary. Be sure to rotate pairs though.3. **Build a culture of psychological safety with accountability.** Admit when you're wrong. Make it easy for anyone to admit when they're wrong. Don't focus on blame for mistakes, but instead on learning and working towards a common goal.",Bach4Ants,2025-04-09 15:22:15,5,dataengineering,t3_1jv3rgi,False,
mmal731,"Let go of the idea that everything is going to go right. Get comfortable with the fact that your team will get it wrong, and understand how to coach them on course correction.Also: practice distinguishing between decisions that are Type 1 (high-stakes, irreversible) and Type 2 (reversible, low-stakes). You never need to touch Type 2s, and your team should know how to escalate Type 1s. The rest of your job is paving the road for them, metaphorically speaking.",adastra1930,2025-04-09 22:41:28,2,dataengineering,t3_1jv3rgi,False,
mmav5yl,"Being aware of what is going on with your team is good. Creating a culture where the team has to check in with you on every step is bad.The most important thing for you to learn is to be comfortable with your team members making mistakes, failing. When that happens, your job is to coach them back to success.Teach them how to fish, not fish for them.The measurement of your personal success is how well your team members do their job independently.",lzwzli,2025-04-09 23:38:14,3,dataengineering,t3_1jv3rgi,False,
mmb9ir7,"Sorry to put a biased opinion here, but from my experience it’s often a personal issue that’s the root cause. Obviously I don’t know you, and I am not a medical professional so take this with huge grain of salt. Just speaking from my own personal experiences with every anal retentive manager I have had in the past. A control freak in the home is a control freak in the Job.There are obviously other factors at play here, one being that the market has become more ruthless with layoffs and redundancies that the employees believe they need to know everything to keep their job, some will even lie and cheat for confidence to fake competence. If all that aside you can genuinely assess your control tendencies as an isolated event that pertains only to the workplace, then this reply is not for you and you may proceed gathering feedback on how to improve on your job. Best wishes!",SpecialistQuite1738,2025-04-10 01:03:10,2,dataengineering,t3_1jv3rgi,False,
mm8l1wy,"Yes, this is common. Parts of it include training, confidence, and empowerment.Train your team on the standards to uphold and why theyre important to uphold. Document tribal knowledge.Build the team's confidence that after this training, they are pros! Mistakes are OK, but establish a process to rectify them quickly.Empower/trust your team to make these decisions autonomously. For example, on my team if you made the change, you are responsible for peer and code reviews and the pull request's approval/merge. Theres responsibility to uphold here too. And that lives with you as a leader, but delegated to the team. If they miss, you're in the hot seat with them. That is when you step in and have a focused coaching session to rectify the issue.",DistanceOk1255,2025-04-09 16:42:51,1,dataengineering,t3_1jv3rgi,False,
mm97utn,"Git requests.Anyone wants to merge with prod, create a request and anyone in the team can review and approve/request review etc",umognog,2025-04-09 18:30:54,1,dataengineering,t3_1jv3rgi,False,
mludpma,Well good morning to you too.,wannabe-DE,2025-04-07 10:55:51,59,dataengineering,t3_1jtch3e,False,
mlufb6t,I've never worked with a parquet file that wasn't from a trusted source. Generally it's from another process written by someone at the same company.,One-Salamander9685,2025-04-07 11:09:07,40,dataengineering,t3_1jtch3e,False,
mlum01c,"But according to [https://nvd.nist.gov/vuln/detail/CVE-2025-30065](https://nvd.nist.gov/vuln/detail/CVE-2025-30065) it's just in the parquet-avro schema parsing module. So you should be fine if this dependency is not used anywhere, I think the blog post tries to reach more audience by having a more generic title.",Obvious_Piglet4541,2025-04-07 12:02:17,25,dataengineering,t3_1jtch3e,False,
mlvfy01,"I didn't realize there was a single defacto software package for Parquet files. I always assumed the format was implemented from near-scratch for each system that uses them (eg Pandas, Polars, pg_parquet, etc.)",PurepointDog,2025-04-07 15:00:57,5,dataengineering,t3_1jtch3e,False,
mm0zn1r,It's an Avro RCE from last year with the exact same source copied to Apache Parquet. If you're on Apache Spark through 3.5 you are vulnerable via spark-avro and the packaged dependency on Apache Avro.,mequay,2025-04-08 12:58:39,2,dataengineering,t3_1jtch3e,False,
mlvr8xi,What a great Monday this has been,workingtrot,2025-04-07 15:58:53,5,dataengineering,t1_mludpma,False,
mlvfvsq,"NYC Taxi Trip Record publishes in parquet, which is widely used for demos. It's definitely out there as an option in a few places. https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page",DirkLurker,2025-04-07 15:00:39,12,dataengineering,t1_mlufb6t,False,
mlv266l,"Right so as far as I understand if my processes are the only parquet file originators, I should be good ? I mean we don’t ever ingest data that is already a parquet file from a third party, we make our own from other data formats.",handle348,2025-04-07 13:48:32,5,dataengineering,t1_mlufb6t,False,
mlx84r3,"I think this CVE may affect serverless parquet readers. For example, in Snowflake it is allowed to read an iceberg table that is parquet under the hood. And in theory, an attacker can attack their virtual werehouses. The same about Databricks Serverless, when an attacker can gain a control or DDoS an underlying Spark Connect servers. Etc.",ssinchenko,2025-04-07 20:28:53,1,dataengineering,t1_mlufb6t,False,
mly7r8m,Yes even places like databricks that have parquet all over the place have already communicated they are unaffected by the vulnerability.,hntd,2025-04-07 23:47:04,2,dataengineering,t1_mlum01c,False,
mmma2sk,"That’s way too low level in a discussions for a Director role … like yeah it’s good to have a grasp of the tech stack but like common, you aren’t going to be in the trenches configuring anything.",connoza,2025-04-11 19:50:55,69,dataengineering,t3_1jwyf7d,False,
mmm9frf,"From the sounds of it, you have a very good understanding and objective viewpoint on your approach to the architecture and they perhaps didn't have the same. I think it's unfortunately extremely common for people who were entrenched in a poorly architected and/or a poorly understood architecture to be unable to see how it could be done differently. I also think hiring teams, for various reasons, are sometimes not equipped to relate the core concepts of data engineering over their own, so instead they feel more comfortable talking to candidates who have experience in their specific toolset.The skill I'm trying to build right now in my own interviews is assessing, understanding, and directly addressing any concerns a prospective employer might have about my skillset and my suitability to the job. You have to learn to speak the language they speak.In the future I'd try to give more options during interviews to the interviewers on how they want to proceed. If they want to see a project you are familiar with, pull up your notes. If they want to focus on your experience with their tools, follow up with clarifying questions about your scope and then propose a solution -- or even just relate how your experience applies to solving that particular problem.Hope that helps some. It's definitely difficult not having all the context before going into the room.",syphex,2025-04-11 19:47:44,21,dataengineering,t3_1jwyf7d,False,
mmmcm1s,Montecarlo.. haven’t heard that one in awhile,carlsbadcrush,2025-04-11 20:03:23,15,dataengineering,t3_1jwyf7d,False,
mmmhdwy,Sounds like they are not sure what they want.,theimo92,2025-04-11 20:27:29,16,dataengineering,t3_1jwyf7d,False,
mmm9jdi,Probably looking to purchase new things and what someone with crazy experience. Or incompetent hiring team that chatgptd important data engineering concept and answers and literally asked you them all. Also the market is still shit so they may believe they can find a unicorn.....,Aggravating_Sand352,2025-04-11 19:48:13,9,dataengineering,t3_1jwyf7d,False,
mmmvbwf,"Sounds like they want a one-man band—a bit unrealistic. For a director role, you’d be expected to have oversight, not necessarily hands-on expertise in every tech or architecture. Could just be a scattershot hiring approach or a sign that the team lacks direction. Don’t sweat it—move on to a company with clearer priorities. Sometimes, being rejected is a blessing! Good luck on the rest of your search!",kevinkaburu,2025-04-11 21:41:35,4,dataengineering,t3_1jwyf7d,False,
mmmglv2,"Sounds fair to me.You should be able to speak at a high level about most of those things. It would help me know what kind of engineers and architects you would plan on hiring, what type of infrastructure you'd invest in, and whether or not you can keep up with the needs of the company.The architectures tell me they want you to know about batch, streaming, and the pros and cons of each.Medallion and Fabric hint that they may be a microsoft shop. They want you to talk about Medallion from a databricks perspective and the maturity or lack of maturity of Fabric, as that's the new branding of Synapse and the internal competitor of databricks.Airflow is an orchestration tool. You'll really want to know how to budget for this because it can be a managed service.Everyone is talking about AI. It's annoying, but you'll need to learn enough to stay competitive with executives for a while.All of these topics tell me a lot about how you'll spend their money.",Lower_Sun_7354,2025-04-11 20:23:32,5,dataengineering,t3_1jwyf7d,False,
mmmnoav,how many years of experience do you have?,Electrical_Regret685,2025-04-11 20:59:53,2,dataengineering,t3_1jwyf7d,False,
mmoc4a5,"How do other data directors prepare for interviews in this community ? I have usually prepared for the following 1. Technical architectures 2. Core data engineering concepts 3. Stakeholder management 4. Project Management 5. Revenue Management6. A bit of presales questions7. SQL challenges 8. Data Strategy , Data Governance , MDM, etc 9. People ManagementWhat else do you guys prepare in this job market ? What sources do you use to prepare ? I usually search for topics on YouTube and/or google them . It’s usually unstructured for me . Are there proper structured resources out there for director levels?",Hungry_Resolution421,2025-04-12 03:10:09,2,dataengineering,t3_1jwyf7d,True,
mmve5ib,"The company's approach raises some red flags. Either they're unrealistically expecting a unicorn candidate who's mastered every data concept imaginable, or they're using a scattergun interview technique without a clear understanding of what they actually need. Their quick rejection suggests they might not have a well-defined idea of the role's requirements. In any case, it's probably for the best that you didn't move forward with them. A company with more realistic expectations and a clearer vision for the role would likely be a better fit.By the way, I'm on the team that created [online interview AI helper](http://interviews.chat) to prepare for tricky interview situations like this one. It can provide practice with a wide range of data engineering concepts and technologies, which might come in handy for future interviews that cover such a broad spectrum of topics.",akornato,2025-04-13 09:44:03,1,dataengineering,t3_1jwyf7d,False,
mm9siw8,"8 years as DE, the only nice code you will see will be the one you do for yourself as a hobby. Company code sucks in general, or it will finish sucking at some point.",Complex-Stress373,2025-04-09 20:11:23,104,dataengineering,t3_1jved6i,False,
mm9vise,Being mediocre is the most normal thing you could be,precociousMillenial,2025-04-09 20:25:49,47,dataengineering,t3_1jved6i,False,
mm9pcar,sounds like my day to day lol,norskee406,2025-04-09 19:56:10,31,dataengineering,t3_1jved6i,False,
mma0ylc,"By definition, being mediocre is normal.",EccentricTiger,2025-04-09 20:52:15,11,dataengineering,t3_1jved6i,False,
mm9ysq8,By definition,Firm_Bit,2025-04-09 20:41:49,9,dataengineering,t3_1jved6i,False,
mm9s9af,"The only question you seem to post is, is this normal? Well, I guess nothing is normal. So it's all up to you. What do you want? If you want to be a better data engineer, just build stuff yourself. Start with easy pipelines and grow to more complex ones. Are you already familiar with tools like Airflow (or another orchestrator), dbt/SQL mesh, Spark, Kafka, Snowflake/Databricks? Just a few important ones to know.Learning is a key component of being a data engineer. The data landscape is changing constantly and more and more tools are growing to do similar things. But the industry is also getting more and more professional. It is key to understand cloud computing, auto scaling and being able to build and act upon proper monitoring, if you want to call yourself a senior at some point.",Buxert,2025-04-09 20:10:06,12,dataengineering,t3_1jved6i,False,
mm9xu62,"Well, by definition, being mediocre is very normal",ProSlider,2025-04-09 20:37:09,12,dataengineering,t3_1jved6i,False,
mm9ra8a,I'm in the same boat :(,AppointmentFit5600,2025-04-09 20:05:27,9,dataengineering,t3_1jved6i,False,
mmak8p0,"It sounds kind of normal. More chances than not, you will not have spaces to develop something ground breaking, but rather tweaks on existing code or some fixes. I think one of the keys of professional success is learning to make lemonade with the lemons you're given, and it applies specially to feeling stuck. Most of the times, people that break through are people who learned something new, a new trick, or those who trained themselves on their own time, to learn to cook with better ingredients.It seems to me your best bet would be finding a healthy work place, and then finding self projects. A lot of times you really need to dig deep into what you want to learn, find the path to get there, and walk every step along the way.In other words, it often comes down to never beating yourself up. Instead, it might be from knowing yourself well enough to HAVE to learn on your own pace and with less pressure. My impression is that the pressure comes mostly from being forced to do things on the job that you're not that familiar with. Finding a solid ground comes from finding a place that will take you as you are, give fair compensation, and you show your true self and what you know. It never does well to try and be something/someone you aren't, force it, and set yourself to crash and burn.",hola-mundo,2025-04-09 22:35:54,4,dataengineering,t3_1jved6i,False,
mmb0t8k,You don't read about reality on social media (including reddit). No one is going on insta to post photos of their commute to work. No one is coming on here and talking about the normal work they do keeping things running and tweaking some data sets so some analysts can put an extra point in their reports.,macrocephalic,2025-04-10 00:11:22,3,dataengineering,t3_1jved6i,False,
mmuom2u,"If they did not provide any scaffolding, then this is overkill. It is a mini workshop.To do it properly will likely take 15-20 hours of effort, mainly on the non-coding parts, though you could probably get something running within a day or less if you are an experienced DE.The pay better be worth it.",ogaat,2025-04-13 05:23:17,125,dataengineering,t3_1jy09o8,False,
mmvns2y,"OP, you MUST reject this. It not only shows they'd be a terrible place to work, but it also shows they don't understand what they're asking you to do, which is worse. Reject this mess. Ghost them. Whatever you need to do. Don't let companies get away with this shit. No job is worth it.",financialthrowaw2020,2025-04-13 11:21:24,47,dataengineering,t3_1jy09o8,False,
mmuosk8,"I don't think that's reasonable, it's building and deploying a full pipeline. if you don't already have the cloud environments configured, that alone will take ages. They should only be asking for a local project example in VS code imo.",HG_Redditington,2025-04-13 05:24:52,90,dataengineering,t3_1jy09o8,False,
mmv81dm,They are getting you to do work for free. I have had multiple data engineering jobs and the longest test was an hour anything longer with projects and big design docs I don't bother with. It's fucking disrespectful to your time.,Bootlegcrunch,2025-04-13 08:36:54,38,dataengineering,t3_1jy09o8,False,
mmvegvz,Fair and square too much work for an interview homework. This says a lot about them valuing your time and likely comes from someone did not consider the infra part properly as they likely get all if the cloud stuff by their “infra team” and consider that zero effort :)Keep in mind: job interviews are a two way street. It’s as much you learning something about them as them learning something about you. Tell them what parts of this you find reasonable to do and describe the rest in a high level DoD. If that’s a red flag for them then you likely dodged a bullet here ;),OberstK,2025-04-13 09:47:31,18,dataengineering,t3_1jy09o8,False,
mmux5lc,"Have I assumed correctly that they are expecting you to deploy this on your own cloud account and expose an API?Design and building a fully working and documented solution with API gateway, API docs, CI/CD pipeline etc. is a crazy ask. If you used the easiest to stand up cloud services I bet they'd bitch about your db choice not being able to scale or something.",speedisntfree,2025-04-13 06:44:16,16,dataengineering,t3_1jy09o8,False,
mmv70ci,It seems that they expect a 10x data engineer. The salary should be 10x of the standard one as well.,baby-wall-e,2025-04-13 08:25:42,14,dataengineering,t3_1jy09o8,False,
mmv5hoy,Not reasonable. Up to point 3 is probably the most. The rest should just be an interview question that by right you should be able to articulate clearly if you are experienced,CrowdGoesWildWoooo,2025-04-13 08:09:31,11,dataengineering,t3_1jy09o8,False,
mmuqai4,"I guess it depends. In my country I would laugh them out of the room and offer to walk them through my work process, without actually doing all this. This is easily a days work, I ain’t working for free. But I have learned from this (and others) sub that take homes are a thing in some places. Out of curiosity, what country are you from/is this company from?",djerro6635381,2025-04-13 05:38:19,27,dataengineering,t3_1jy09o8,False,
mmvm246,"No take-home is reasonable, especially those that expect you to spend your own money on cloud resources.",mailed,2025-04-13 11:05:33,23,dataengineering,t3_1jy09o8,False,
mmahqp3,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-09 22:21:08,1,dataengineering,t3_1jviip8,False,moderator
mmaksuv,"Build a data team. Relying on a one man data army is a long shot at best, and even in the best of cases a road to burnout in a few years (ask me how I know and I'll tell you the companies I've left that had to replace me with a small team after I left). Analysts need not only good tools and training but a proper environment where data can be collected, cleaned, ordered etc. If you want to be a data driven company it's going to require an investment. Hiring one guy is lip service to that goal at best. Look into a team that can build out a proper data warehouse and empower that analyst to be the best he can be without carrying the weight of the world. Employees will be less likely to burnout and the business will get far more value.EDIT - Making this more practical (as I assume this is not in the current budget) - get a good understanding of what a proper data team should look like and fight like hell to get the budget to build one. Talk to your new hire and let him know you want to start with him but build a team under / around him in the coming years. Take that promise seriously, and build a vision together. As he adds value to the business it helps justify the business case and he has a path towards career progression.",Cynot88,2025-04-09 22:39:13,96,dataengineering,t3_1jviip8,False,
mmasib8,"The issues I've faced are:1 - Lack of clear direction - businesses think the need a data analyst, but don't know what problems they want to solve.2 - Lack of career development/direction - no one wants to do the same thing forever, the shelf life of positions are about 2-3 years and in that time salaries will grow.3 - Non technical people making decisions - we may not have final say, but we would like to be consulted/have input.4 - Demanding stakeholders who aren't technical - the worst attitude is ""x must be easy, surely it's not that hard"".5 - Cleaning data - it should not be the job of the data team to clean data or fix up errors because users can't be bothered.",iceyone444,2025-04-09 23:22:59,20,dataengineering,t3_1jviip8,False,
mmaii2v,"To me it’s all about the expectation you set and the culture you drive. If you keep an honest line of communication open at all times, and consistently reach out to see if they have questions or needs, that’s about the best you can do.Also, I really try to have everyone they will routinely interact with schedule at least 30 minutes with the new hire and show them what they do over teams. New hires can get intimidated easily by the initial interactions and not wanting to step on toes.",GachaJay,2025-04-09 22:25:29,14,dataengineering,t3_1jviip8,False,
mmaiumj,Tell them that their work is meaningful. Because currently you believe in it but we do not know about the management and his supervisors.,LinasData,2025-04-09 22:27:33,7,dataengineering,t3_1jviip8,False,
mmarln3,"Honestly, I think the fact that you’re writing this to find ways to support the DA means she will be successful. That is a very lucky DA.I wish this was my situation in my previous roles as the only DA. I ended up being the most technical person and go to coder on the IT team, even though I was new in the field, creating documentation, etc.Managing expectations for the non-data people will help a lot, I was asked to do some unrealistic stuff with reports.",blurry_forest,2025-04-09 23:17:45,5,dataengineering,t3_1jviip8,False,
mmak9wq,"Made them read the first 3 chapters of Star Schema, understand/walk through differentiating business logic, use known psuedonyms (ex. They come from an Oracle background and you happen to know Oracle backend, translate your current system using a common ground.",Iridian_Rocky,2025-04-09 22:36:06,5,dataengineering,t3_1jviip8,False,
mmb2dj8,"I've been the ""only"" data analyst for a few companies, including my first job out of university.Everyone's experience is different, so I'll generalize what would have helped me:1. get them the data they need, or permissions they need to get it. Help them get clean data regularly and they will have much less roadblocks. This means paying for tools, or helping them setup stuff they can't do themselves like Airbyte, Airflow, or stuff like Fortran, [Zapier.com](http://Zapier.com), [Make.com](http://Make.com), [n8n.com](http://n8n.com) etc2. give them an experimentation budget - there are always shiny new tools and stuff, allow their curiosity to explore them for your business. You never know something they might find that will help 1 or more people automate something.3. create a data team - or meet with them regularly. I created my own data team using the GitLab handbook in my previous role: [https://handbook.gitlab.com/handbook/enterprise-data/](https://handbook.gitlab.com/handbook/enterprise-data/)",TheGrapez,2025-04-10 00:20:46,4,dataengineering,t3_1jviip8,False,
mmas15x,I wish I was this new hire. Kudos to you.,OwnFun4911,2025-04-09 23:20:13,3,dataengineering,t3_1jviip8,False,
mmb38n3,Give me a data dictionary,Careful-Combination7,2025-04-10 00:25:53,3,dataengineering,t3_1jviip8,False,
mmll609,"There is for sure a use case, but def important to know that many companies that might use this are either okay paying or have their own ones built in house",ReporterNervous6822,2025-04-11 17:44:30,37,dataengineering,t3_1jwvpk6,False,
mmmd0nt,"In my mind, 95% of use cases are batch processing and don’t require streaming…",JaJ_Judy,2025-04-11 20:05:24,12,dataengineering,t3_1jwvpk6,False,
mmmd945,"How is this different than clickhouse, duckdb, pinot, druid? Why would I buy this over postgres(i can just SUM() in the query)....If we want to talk processors, ksql, deltastream, timeplus, and a bunch of others, or just the native Java stream utils...Gotta answer all of these. ""cheaper"" doesn't sell.",gsxr,2025-04-11 20:06:35,13,dataengineering,t3_1jwvpk6,False,
mmll3vc,How do you stack up against feldera?,geoheil,2025-04-11 17:44:13,10,dataengineering,t3_1jwvpk6,False,
mmm4xhc,"I would look at having a hosted paid version out of the gate. So many companies seem to release things as open source, pivot to a paid implementation and then everyone expects parity in the free version. If you want to make a living at it you need to have a plan imho ymmv.That said, I think your competition would be in the log world - splunk, grafana, datadog, new relic, seq, kibana, etc.",-crucible-,2025-04-11 19:24:12,6,dataengineering,t3_1jwvpk6,False,
mmmzq0j,Validate your business case with real world users before quitting your job,dadadawe,2025-04-11 22:06:18,5,dataengineering,t3_1jwvpk6,False,
mmm1ml8,"This seems somewhat like Arroyo, correct? Funnily I just found out they have been acquired by Cloudflare, so I would say there is your prove there is a market for it. I just don’t know if they were already selling to others or if they developed and then got acquired right out of the gate.Arroyo is also open source, based on Datafusion (Apache). Real nice piece of tech, have to say",djerro6635381,2025-04-11 19:07:10,2,dataengineering,t3_1jwvpk6,False,
mmmh5wv,I don't have much feedback to give.. but do you mind explaining a bit what makes Flink inefficient or how does your architecture differ unless that's a secret,ask_can,2025-04-11 20:26:21,2,dataengineering,t3_1jwvpk6,False,
mmmpm3d,"While I worked consulting for a couple of years, one use case for something like this I saw which may be something to consider is air gapped iot processing. The thing we would run into is real time processing while ensuring longevity for the devices battery life. Most of the time we ended up having to do very simple local calculations which would indicate whether it needed to 'wake up' for larger processing. (Wake up in this sense being to connect to a local hub and send data over the whatever protocol was available.) Having something which can run on very lightweight iot devices, processing sensor data in real time while having a small impact on battery life could be a pretty decently marketable thing. Not sure if that fits into your audience at all, but that could be a nifty little niche I think.",drdiage,2025-04-11 21:10:15,2,dataengineering,t3_1jwvpk6,False,
mmmw6h9,Yes you are crazy,FalseStructure,2025-04-11 21:46:18,2,dataengineering,t3_1jwvpk6,False,
mm0jycz,"The problem is not Jira. The problem is how companies/middle managers devolve into ritualistic scrum adopter, to justify that they are “providing value” to the company. In some sense it’s a “problem” where you have an end goal, you define these end goals as quantifiable metrics, and people end up just maximizing these quantifiable metrics without actually advancing the intended purpose. In the context of AI programming it’s called “Reward Hacking”.Most people just want to do actual development, but what actually happens are meetings, meetings, meetings and also when they work need to follow the ticket verbatim. One of my manager at some point of time had told me, “just do what the ticket actually said, if they are wrong, at least show that they are wrong (long story short they are wrong)”",CrowdGoesWildWoooo,2025-04-08 11:08:20,49,dataengineering,t3_1ju81cr,False,
mm01457,"Every team must have some way of controlling the work done and store it in way to see the historical detail of it. You can use Jira, Trello, GitHub, etc.What I am seeing less and less every year is teams leaving SCRUM and using some kind of custom agile methodology based on Kanban board so teams focus on the most important things. The era of Sprints is dead. Fuck yeah !!:rolling_on_the_floor_laughing:",alvsanand,2025-04-08 07:54:59,111,dataengineering,t3_1ju81cr,False,
mm09k8y,"But my burndown chart!! :face_with_tears_of_joy:. My god, just another game to rig to make a pretty chart",bah_nah_nah,2025-04-08 09:29:29,19,dataengineering,t3_1ju81cr,False,
mm0dn5v,"Jira is like that toxic relationship you can't leave. Sure, it tracks stuff, but the amount of time spent configuring workflows and teaching new folks could've been spent actually building stuffLinear or ClickUp might be worth the migration pain",Mikey_Da_Foxx,2025-04-08 10:11:36,13,dataengineering,t3_1ju81cr,False,
mm0w7cc,I’ve been everywhere from old school waterfall to hardcore agile. Jira and its ilk are great for management to keep track of your work not a tool for teams to self organize and deliver software. What I’m seeing is what agile was supposed to be has devolved into an employee monitoring system. We do scrums but it’s only a way to track what we do and use it in performance evaluations. The last three companies I’ve been in started out with high expectations then managers got the bright idea to use it to their advantage to monitor everything,grapegeek,2025-04-08 12:37:14,11,dataengineering,t3_1ju81cr,False,
mm1vvog,"A Tool cannot solve a Social Problem.If you have a healthy business / engineering relationship, then Jira (or any sufficently mature process-management tool) is great. When that relationship is not healthy, then tools, KPIs, approval committees become weights around everyones neck.If you feel that Jira is in your way, it is probably because there is something disfunctional in how the product and technical objectives are being vetted by your leadership. This vetting is fundamentally a value judgment based on how well those people get along and share a common objectives for the business as a whole.I have built software and teams in a variety of industries, lead over a dozen engineering teams from technical lead to executive management. Tools like Jira work well when the leadership (both business *and* technical) have good communication and a respect for each others goals. When either side is instead trying to dominate the other with their agenda, (whether its the Business team trying to chase every shiny new customer regardless of the ROI, or the Technical team trying to chase every new shiny new technology framework regardless of the ROI) a tool like Jira becomes a hammer that one side uses to ""force"" the other into submission or a shield to ""prove"" the other side is out of their mind.I often come into new teams in chaos. They have over-provisioned their Jira workflows in an attempt to track or prove the amount of work being done. The first step is to always get the team to a ""win"". That usually means stripping the process down to its fundamentals: what is the prioritized list and when do we need to get it out. Once you guide everyone through a cycle successfully with simple criteria, then you can do a real retrospective and ask ""how can we do better"" and adjust your tools/process accordingly.That first ""win"" is important, it gives people hope that things can actually get better and gets them to think positively about change instead of rejecting all suggestions out of hand.",jamesdixson3,2025-04-08 15:49:13,5,dataengineering,t3_1ju81cr,False,
mm0yfqq,"Jira is a tool and like any organisation your experience depends on why and how organisations choose to use it, same with burn ups, burn downs, same with scrum or kanban.None are inherently good or bad, part of it depends on the kind of problem you are trying to solve.A good start is the cynefin framework to get a baseline for the kind of problem you are looking to solve, then doing the collective evaluation: are we set up with our tools and ways of working to tackle this problem? Do we need to evolve ? Etc etc etc",ArranWuyin,2025-04-08 12:51:18,5,dataengineering,t3_1ju81cr,False,
mm0hiis,"I've used both JIRA and Azure DevOps and I think they're great for feature/task tracking and having requirements written down somewhere. Anything else you try to get out of them it's a pain and useless, IMO.",ptyws,2025-04-08 10:47:53,3,dataengineering,t3_1ju81cr,False,
mm1j6da,Another marketing research post. Keep them coming.,jajatatodobien,2025-04-08 14:46:27,3,dataengineering,t3_1ju81cr,False,
mm1vbqs,"If you use it well it’s good. You have to track work somewhere IMO. But absolutely you need to be streamlined about using these things. And not fall in love with the tool and its metrics to where you’re forever messing with jira and not doing the work. Good management is key here. Some managers fall too in love with the tool and have devs doing a bunch of work just to keep tickets updated. Some make way too many tasks to where stuff is too granular. And try to literally account for every minute and plan down to the second. Others don’t know how to break up work into tickets that are right sized. Or over think that part of it. I’ve worked on teams with both extremes. My old job, my director was under pressure to show the team was successful by using metrics. So we spent tons of time on jira crap. And the CFO never even looked at it and just made decisions about IT by vibe anyways. Now I’m an independent contractor. And one of my long term engagements has a manager who underestimates the complexity of everything. He actually thinks it’s reasonable to have 1 ticket that’s “build entire warehouse and BI solution for client X” basically. And always tells them “6 weeks” or something ridiculous despite me looking at the requirements and thinking “oh this one is gonna be a pain”. So in short it’s not the size of the ticketing tool it’s how you use it.",reelznfeelz,2025-04-08 15:46:33,3,dataengineering,t3_1ju81cr,False,
mmj740q,i worked on a product at a startup that failed as they had a full stack per demo user. they had 10 demo users each costing 2-3k a month. The demo users had very little interest in the product. ultimately it made me go against the idea of prematurely scaling,adulion,2025-04-11 08:57:36,18,dataengineering,t3_1jwl4w8,False,
mmj6gp3,"1 db, 1 schema per customer.",Qkumbazoo,2025-04-11 08:50:39,44,dataengineering,t3_1jwl4w8,False,
mmjva6b,"Shared database for the ""schema per customer"" advocates \- one schema screwed - all customers schrewed.PS: good luck with backup/restore per schema",IndependentSpend7434,2025-04-11 12:24:49,5,dataengineering,t3_1jwl4w8,False,
mmjrnk5,lol at different schema per tenant being a plus. Very maintainable.,Fitbot5000,2025-04-11 12:00:07,4,dataengineering,t3_1jwl4w8,False,
mml39b8,"I think there is some nuance with this with technology like AWS Aurora now, where you can scale out reads to multiple replicas. Not saying shared database is a good choice in most scenarios, but you can overcome the scaling issue sometimes with this strategy. Microservices can be ok, but damn if they don't increase complexity in other ways.",Big-Antelope-4631,2025-04-11 16:16:50,2,dataengineering,t3_1jwl4w8,False,
mmqwmod,Honestly this comparison remains vague and inconclusive as the base assumptions are not payed out properly.The cons and pros are more or less correct but they need different weighting depending on the given problem. In a situation where multi-tenant means a low number of organizational tenants (not individual humans) and the customer base is not growing significantly over time the shared db but split schema model can work really well as the high ops cost for multi dbs is not justifiable but the separation of concerns and queries via schemas brings lots of values in delivering features especially if different tenants have different demands which lead to asynchronous feature delivery and therefore async schemata to be handled by service versions.Overall the application layer is also not considered at all as schema splitting can help in certain scaling and complexity scenarios way more than splitting dbs or mixing everything in a single schema,OberstK,2025-04-12 15:33:51,2,dataengineering,t3_1jwl4w8,False,
mmj6lfo,Hahahahah,kaskoosek,2025-04-11 08:52:04,1,dataengineering,t3_1jwl4w8,False,
mmn7ecx,[Citus](https://docs.citusdata.com/en/stable/use_cases/multi_tenant.html),Tomaxto_,2025-04-11 22:51:37,1,dataengineering,t3_1jwl4w8,False,
mmsolt4,"do you guys think, that this is ""engineering?"" ...?",DiscussionGrouchy322,2025-04-12 21:16:10,1,dataengineering,t3_1jwl4w8,False,
mmjf1qk,Why have a full stack per demo user?Just have 1 demo to showcase?,IcezMan_,2025-04-11 10:19:00,11,dataengineering,t1_mmj740q,False,
mmewmfd,Why Postgres as a gold layer? Querying vast amounts of data in Postgres will end up costing you more or your queries will time out. I'd say for 500GB just keep it in Redshift or go Snowflake and use dbt-core with MWAA for orchestration. I prefer dbt Cloud but their pricing is growing year by year.It's all depending on the budget. You can send modeled data to S3 buckets from Snowflake and grab it through your backend.,OlimpiqeM,2025-04-10 16:37:21,12,dataengineering,t3_1jvsk3c,False,
mmd1rj3,"I think this is fair… just make sure your users have a good experience with using DuckDB like, are you running it on lambda/ECS/EKS or something?",ghhwer,2025-04-10 09:52:41,5,dataengineering,t3_1jvsk3c,False,
mmenzlg,"Or insert raw data to postgres and run dbt on top of them. All options seem complex for 500gb of data, choose simplicity.",higeorge13,2025-04-10 15:54:53,3,dataengineering,t3_1jvsk3c,False,
mmeknkc,"I think your lake needs an orchestrater for all options. Option 2 lists DBT, which is traditionally more fitting to run in a RDMS in an ELT format. This looks more like ETL to me, so each option you probably want Airflow or equivalents. Your option 3 can really scale well, but if you don't need that, try 2 or 3 to reduce the number of languages in your stack.My advice is to look at more DuckDB alternatives like ScyllaDB, Couchbase, DoltDB, StarRocks and stuff.For lineage you can use Dolt of DVC(Data Version Control)I'm more of an analyst type who dabbles in infrastructure. So you may find inconsistency above.",Tritemare,2025-04-10 15:38:33,2,dataengineering,t3_1jvsk3c,False,
mmg33l9,"What is you goal? Avoid lock-in or fast queries or something else? 500GB in parquet or in database?If lock in isn’t a big issue take aws , Starbucks or snowflake. If you want to keep control on software then deploy dlthub + Lakekeeper + dbt + duckdb",vik-kes,2025-04-10 20:04:14,2,dataengineering,t3_1jvsk3c,False,
mmgc5sq,Can duckdb write to iceberg?,crevicepounder3000,2025-04-10 20:47:53,2,dataengineering,t3_1jvsk3c,False,
mmrwg5k,If you leave out postgres and spark and you got the system that i have. Spinning up EC2 instances and run the ETL job written in SQL using DuckDB is grossly underrated,dev_l1x_be,2025-04-12 18:39:13,2,dataengineering,t3_1jvsk3c,False,
mmxsyfi,I think the architecture is sound. Always wondering why people recommend snowflake for the gold layer here. I get that you want to have something that scales to TBs of data but do you really want to go with consumption based pricing for a gold layer? This would mean you are getting punished for data that is actually consumed which I find prohibitive. I used Exasol and found it to be a scalable version of duckdb with predictable pricing. For small data volumes Postgres is fine too.,wenz0401,2025-04-13 18:47:26,1,dataengineering,t3_1jvsk3c,False,
mmdcy7e,Thanks. I am running it locally using airflow docker. I wanted to run pipeline locally without any cost. Pipeline itself is running. I feel like i can just move the same pipeline to any ec2 instance. Then i ll have to manage instance cost only?,lost_soul1995,2025-04-10 11:30:05,2,dataengineering,t1_mmd1rj3,True,
mmi689t,Can you scale this to 50TB data?,lost_soul1995,2025-04-11 03:17:07,1,dataengineering,t1_mmenzlg,True,
mm2vrhx,"Because Synapse was introduced, everybody onboardex thinking they would finish it. Then they repackaged it again in an unfinished product and now trying to phase out one unfinished product for another even more unfinished product",sorryjohnsorry,2025-04-08 18:42:13,104,dataengineering,t3_1jukwsu,False,
mm2zucn,"The CU cost will balloon fast even with modest usage if your dataset grows. Alot of the features, especially preview ones (like 70%) are an entirely black box whether they are fit for production or even poc usage. Lakehouse sql endpoint has well known up to multi hour latency issues still not fixed. Dataflows is an actual joke in terms of performance. Git/cicd integration is a bit of a mess.I think for what it is, it's a good product if you have one power bi worker tasked to patch together a data lake if you already are paying for premium power bi capacity. But like alot of microsoft solutions it's buggy, and bloated while core elt functionality is inoptimized.",slaincrane,2025-04-08 19:02:21,42,dataengineering,t3_1jukwsu,False,
mm2v77r,"It’s mostly fine but it’s WAY TOO DAMN EASY to delete a lake house. Ask me how I know. Also, tons of features that used to exist in Synapse could make it way better. Like seeing a list of triggers/schedules on one place would be nice.",mr_electric_wizard,2025-04-08 18:39:30,34,dataengineering,t3_1jukwsu,False,
mm3yo6r,I would say it is another way of Microsoft to generate vendor lock-in. Major lakehouse platforms are now opening up their data catalogs so that you can run a best of breed approach and pick your query engine of choice.,wenz0401,2025-04-08 21:53:09,10,dataengineering,t3_1jukwsu,False,
mm2v7ua,I tried it for a while and the front-end was a buggy mess.,Bunkerman91,2025-04-08 18:39:35,15,dataengineering,t3_1jukwsu,False,
mm3ae34,It's too expensive and I'm not allowed to touch it.,Captain_Coffee_III,2025-04-08 19:54:22,5,dataengineering,t3_1jukwsu,False,
mm62293,Because we can't trust the data in our cosmos db mirror. We've had a ticket open with MS forever. A database where we can't trust the data is worse than useless.,loudandclear11,2025-04-09 05:55:20,6,dataengineering,t3_1jukwsu,False,
mm3kh3z,"Engineers strongly dislike it, because it tries to abstract away engineering. Objectively, it might have a valid use case for small companies/user bases/data/margins but is a big no-no in any serious data related endaveuor.",AlterTableUsernames,2025-04-08 20:41:50,16,dataengineering,t3_1jukwsu,False,
mm2ze48,It’s very buggy on simple things.,Mat_FI,2025-04-08 19:00:06,10,dataengineering,t3_1jukwsu,False,
mm3ymqy,The only way to work with it afaik is to use spark. Not dataflows. Extract using copy table and then spark everything including view generation for reports and theb use directlake. I never worked with it myself but this is the common theme i see here. Personally i dont like azure's tendency to abstract away bunch of stuff. It dumbs you down as engineer.,keweixo,2025-04-08 21:52:57,6,dataengineering,t3_1jukwsu,False,
mluogjy,Con: Working with the data science team,ArmyEuphoric2909,2025-04-07 12:20:20,53,dataengineering,t3_1jtixza,False,
mlujess,"The cons are, ..., when data is incorrect and needs deep investigation upstream, it hurts very wellPros, it pays really well, makes you intelligent, you work in the dark",HMZ_PBI,2025-04-07 11:42:42,116,dataengineering,t3_1jtixza,False,
mluorup,"Cons :You don't build a software, a product or an app.You are developing the platform to manage data.You are the back end of the back end.Less opportunities than classic SWE job.",Beneficial_Nose1331,2025-04-07 12:22:32,31,dataengineering,t3_1jtixza,False,
mlur9o8,"For me the biggest con is you're on the front lines of anything incorrect. Even if you simply have a view on a table with no transformation, it's up to you to figure out why the data is wrong or, at the very least, inform the other appropriate teams. And, generally, those other teams will immediately push back on you as well until you can prove your case.That's the only part of the job I don't like, but I *really* don't like it.",CriticalConclusion44,2025-04-07 12:39:57,17,dataengineering,t3_1jtixza,False,
mluod2r,"Pro:From my experience if you're a consultant you will likely work with more modern and cloud-related technologies and don't have to worry about projects related to maintaining or rewriting old applications with old technologies which a lot of developers don't like.Pro: in EUW it's a very in demand job currently.Not so much effort into maintaining development skills as python is the bread and butter.Con: As someone who likes to make hobbyprojects I kind of miss creating something tangible.Probably a consultant problem but projects vary a lot and it's hard to grow specifically in DE skills if I have other general data but non-DE projects.Kind of forced to consistently upskill anything AI like DS, genAI, Agents etc. which is nice sometimes but also stressfull at times when real client projects are by far not at those stages so not really applicable.In general I started as a DE in my first job so I kind of miss real development skills after my studies but I'm satisfied with my choice because it's a balanced combination of a technical role with modern stacks (data/cloud/AI) while not having to spent too much time on pure technical skills like programming etc",Wingedchestnut,2025-04-07 12:19:39,4,dataengineering,t3_1jtixza,False,
mlvoijn,Pros: money.Cons: all data is messy.,2strokes4lyfe,2025-04-07 15:44:56,4,dataengineering,t3_1jtixza,False,
mlux8iw,The biggest con for me is being on call. This has been the case in about 50% of the DE jobs I’ve had. You are responsible for the nightly processing. Some companies have a support group that is first line of defense but many don’t want that luxury and rotate their highly paid engineers into pager duty. Otherwise I love it.,grapegeek,2025-04-07 13:18:34,9,dataengineering,t3_1jtixza,False,
mlwt0wn,"the main con to me is your work isn't very visible at the senior management level for the most part, unless of course your organization IS a data provider.when you are visible, it is usually to fix something that went wrong. so all the visibility you do get tends to be negative and you don't seem to get the credit for building systems that work well the other 95% of the time.",meta_level,2025-04-07 19:10:40,3,dataengineering,t3_1jtixza,False,
mlxb9xe,"Thankless role, and when things are on fire you better fix it immediately and nonstop til it's resolved",saltandsassbeach,2025-04-07 20:44:56,4,dataengineering,t3_1jtixza,False,
mm06sln,My opinion the biggest concern is that it gets a bit repetitive depending on the environment. Data in store as parquet push to power bi. Data in store as parquet push to power bi.Data in join in a column in SQL et al push to power bi. If you have a good meta data driven pipeline with good testing and automation it becomes very disengaging very quick.,BaronVonBlumpkins,2025-04-08 08:58:58,4,dataengineering,t3_1jtixza,False,
mm7a8tr,"I don't think there is a good alternative. But you could try to build it from open source blocks, like Iceberg, Spark, Trino, Superset",sirparsifalPL,2025-04-09 12:40:29,41,dataengineering,t3_1jv4gb5,False,
mm7eio2,"I would look at Exasol. It might be more an industrial-strength tool focused at super high-performance use cases, so maybe out of scope for you, but it is build in Germany and has a long history in Europe.We recently moved to it, with a self-managed cluster replacing our previous Databricks setup, and so far it has been a good experience. We did it for cost and performance reasons, but given the current political climate, the fact that we are now totally independent of US cloud services is a really nice bonus.",elutiony,2025-04-09 13:06:00,17,dataengineering,t3_1jv4gb5,False,
mm7np35,"You can already have your data stored in specific regions already, as I understand snowflake account is region based. A lot of companies already have this requirement that data must be stored within country/region etc etc.",nanksk,2025-04-09 13:57:00,14,dataengineering,t3_1jv4gb5,False,
mm7aorm,"Check out ClickHouse - it's open source and pretty solid for analytics. European-based, good performance. Not exactly Snowflake, but might work depending on your needsCleyrop is another option if you're into French tech, but it's more AI-focused",Mikey_Da_Foxx,2025-04-09 12:43:10,20,dataengineering,t3_1jv4gb5,False,
mm7l4oh,I guess OVH has a cloud data platform but only in beta. I didn’t try it for now …,Iwaj94,2025-04-09 13:43:28,3,dataengineering,t3_1jv4gb5,False,
mm83bjs,"You might want to look at Stackable (www.stackable.tech), can do Data lakehouses.",No_Dragonfruit_2357,2025-04-09 15:15:23,3,dataengineering,t3_1jv4gb5,False,
mm7kx4w,"To answer directly your question:No, there is no other platform as fully featured as Snowflake in Europe. The only other platform that is close is Databricks and well, same problem.That being said, what are the requirements of your data platform? Once you lay that out, you can then map your platform requirements to different services that satisfy those needs.I don’t think in such a short period a “Snowflake” competitor with 1:1 features will pop up in Europe, however if it becomes an issue, there will then be a ton of opportunities for new companies to enter what is currently a saturated market to fill those needs.",teh_zeno,2025-04-09 13:42:19,4,dataengineering,t3_1jv4gb5,False,
mm88k8w,Not a full platform like snowflake but ovh has a spark servicehttps://www.ovhcloud.com/en-ie/public-cloud/data-processing/,Tomfoster1,2025-04-09 15:41:21,2,dataengineering,t3_1jv4gb5,False,
mm89nh2,"If you can self-manage, go with open source solutions like Druid, ClickHouse, etc.If you use Postgres and need something more lightweight, check out BemiDB (a single binary to store data in Iceberg open table format in object storage)",EnvironmentalBox3925,2025-04-09 15:46:38,2,dataengineering,t3_1jv4gb5,False,
mm9m543,Mother duck?,Necessary-Change-414,2025-04-09 19:40:47,2,dataengineering,t3_1jv4gb5,False,
mlz46ay,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-08 03:07:12,1,dataengineering,t3_1ju3tor,False,moderator
mlz5j59,Really appreciated!,LaughWeekly963,2025-04-08 03:16:13,6,dataengineering,t3_1ju3tor,False,
mlzejkf,"Nice, a Quick Look plugin for Parquet would be great! Will there be a full app, too?",kinghuang,2025-04-08 04:22:30,6,dataengineering,t3_1ju3tor,False,
mlzpsav,"I'm curious what data structure you're using internally in the previewer to hold the data. Are you making use of something like arrow to hold batches of rows, and for reading parquet and other formats that have readers that go to avro format, or are you just reading it into a big list/array of datatypes?",azirale,2025-04-08 06:02:01,5,dataengineering,t3_1ju3tor,False,
mm0jbn2,How is this different from parquet viewer,Majestic-Quarter-958,2025-04-08 11:03:06,2,dataengineering,t3_1ju3tor,False,
mm4je9q,Looks really cool. Would love to see an analysis done on internet traffic from this. With sensitive data and not being open source it’s hard to actually use it. Parquet-tools gets the job done but not sexy.,Trigsc,2025-04-08 23:49:34,2,dataengineering,t3_1ju3tor,False,
mm2dqql,"Nice, really something useful. Is this open source?",Difficult-Tree8523,2025-04-08 17:16:55,1,dataengineering,t3_1ju3tor,False,
mm77r1v,I tried opening on macos m3 pro but... **Coco Alemana quit unexpectedly.**,Obvious_Piglet4541,2025-04-09 12:24:40,1,dataengineering,t3_1ju3tor,False,
mm7l2n5,I recently started to use Visidata from the CLI to view my parquet.,graphexTwin,2025-04-09 13:43:09,1,dataengineering,t3_1ju3tor,False,
mm7p45n,"This is very cool. I don’t mean to be disparaging, but why not just use the vscode/intellij plugin?",RangePsychological41,2025-04-09 14:04:22,1,dataengineering,t3_1ju3tor,False,
mlui6q0,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-07 11:32:54,1,dataengineering,t3_1jtj1hm,False,moderator
mlwef5x,"It would just be a combination of Analyst and AdminEDIT: I should add that you absolutely do not need to learn all these tiers to be proficient in data engineering. Learning each keyword in SQL for data engineering is like saying you want to learn carpentry so you’re going to learn what a hammer does, when to use a router and when to use a lathe. Knowing what something is and when to use it is usually easy to pick up as you go. Process is much more important to learn. Pick a problem (How have various presidencies affected various macro-economic KPIs). Then start by determining what data goes into those KPIs. Then find a way to get that data from a government or other API. Process the data into normalized tables. Then finally make a nice dashboard with the data and draw a conclusion. Finally set up some automation to updated your dataset monthly. Make sure new data is getting appended and you’re not overwriting old data. Ensure you’re not duplicating data. You get the idea. Process > Tools. You could probably go years in your career without touching the S or A or even B tier in your chart as a Junior. And that’s ok. Same way a trainee carpenter won’t be using a lathe to shape a table leg. So there’s no need for him to understand what a lathe does from day 1.",Reddit_Account_C-137,2025-04-07 17:56:09,13,dataengineering,t3_1jtj1hm,False,
mlz6vab,"These things are pretty silly. Like, I've used execution plans, hashes, merges, but I have never done ranking or cross apply.",Icy_Clench,2025-04-08 03:25:21,6,dataengineering,t3_1jtj1hm,False,
mlzwo7t,"Tbh I think this misunderstands the point of tier lists, as to me this is just a list of SQL concepts from most to least technical. It also may give the incorrect impression that things like plan cache and query hints are more valuable (given that they’re in higher tiers) than things like JOINs or window functions. In reality, if you’re operating capably at the D tier, you’re good to go for the vast majority of data engineering tasks you’d use SQL for. 95 percent of the power of SQL is in those bottom three tiers. Also, in what universe of data engineering are CTEs not S tier?",contrivedgiraffe,2025-04-08 07:06:31,6,dataengineering,t3_1jtj1hm,False,
mm0g4cj,"My philosophy as a data engineer is to keep things as simple as possible. In relation to the list above - if I find myself using PIVOT or CROSS APPLY, I try to rethink my problem. Because I will be the person debugging whatever I make - and I want future me to have an easy time.Someone mentioned CTEs above. Nothing wrong with CTEs - but if you have multiple CTEs in a view, and an end user try to self-join on that view - you will have a bad time. I would put LAG and LEAD functions in the list, though. (I could not find them)EDIT: also, please do not use Dynamic SQL unless you absolutely need to. They are … messy .. to troubleshoot..",CrazyOneBAM,2025-04-08 10:35:29,4,dataengineering,t3_1jtj1hm,False,
mm1jg55,This makes no sense at all as either lmao. Most of that stuff you would never touch.,jajatatodobien,2025-04-08 14:47:49,3,dataengineering,t3_1jtj1hm,False,
mlzwok3,"Tbh I think this misunderstands the point of tier lists, as to me this is just a list of SQL concepts from most to least technical. It also may give the incorrect impression that things like plan cache and query hints are more valuable (given that they’re in higher tiers) than things like JOINs or window functions. In reality, if you’re operating capably at the D tier, you’re good to go for the vast majority of data engineering tasks you’d use SQL for. 95 percent of the power of SQL is in those bottom three tiers. Also, in what universe of data engineering are CTEs not S tier?",contrivedgiraffe,2025-04-08 07:06:36,1,dataengineering,t3_1jtj1hm,False,
mlzizoy,"Hey, thanks so much for taking the time to share this! definitely something I can work on",myPacketsAreEmpty,2025-04-08 04:59:45,2,dataengineering,t1_mlwef5x,True,
mlzits0,I hear you. They're by no means objective but it does give an idea of the landscape so to speak,myPacketsAreEmpty,2025-04-08 04:58:18,2,dataengineering,t1_mlz6vab,True,
mlzzowm,"I see. Yeah with the other comments and the progress I've been making, I realize it's just ranking how technical these keywords/clauses/concepts are. ""In reality, if you’re operating capably at the D tier, you’re good to go for the vast majority of data engineering tasks you’d use SQL for. 95 percent of the power of SQL is in those bottom three tiers."" — I'll keep this in mindThanks for chiming in!",myPacketsAreEmpty,2025-04-08 07:39:24,1,dataengineering,t1_mlzwo7t,True,
mmk1e0d,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-11 13:03:15,1,dataengineering,t3_1jwpc7l,False,moderator
mmo6rli,"I’d say system design for data engineers is less about load balancers and REST APIs and more about data modeling, orchestration, partitioning strategies, and making trade-offs like batch vs streaming or OLTP vs OLAP.For prep, I’d focus on:- Designing Data-Intensive Applications by Kleppmann is a must-read- Real-life architecture breakdowns from tech blogs (think Uber, Airbnb, Netflix etc)- YouTube channels like Seattle Data Guy for system design walkthroughs. I’m sure there are others, just can’t think of them right now If you’re aiming for FAANG, expect a mix of high-level architecture + digging into bottlenecks or trade-offs. The usual system design stuff still applies, so don’t skip it - just tailor it to data workloads. Hope it helps",luminoumen,2025-04-12 02:33:40,26,dataengineering,t3_1jwpc7l,False,
mmlkegr,I started looking at videos from Jordan has no life. I will also be reading the book Designing data intensive applications by Martin Kleppmann.,IndoSpike,2025-04-11 17:40:47,17,dataengineering,t3_1jwpc7l,False,
mmlwe10,!Remindme,vinayvemula,2025-04-11 18:40:28,3,dataengineering,t3_1jwpc7l,False,
mmnaioc,I would like to know and learn as well.,lonestar_12,2025-04-11 23:09:59,2,dataengineering,t3_1jwpc7l,False,
mmohhpy,System design Data Engineering Remind me in 10 days,Excellent-Level-9626,2025-04-12 03:49:05,1,dataengineering,t3_1jwpc7l,False,
mmp8cbg,Exponent's DE interview prep course has amazing content for ETL pipeline design.,DoomBuzzer,2025-04-12 07:55:59,1,dataengineering,t3_1jwpc7l,False,
mmpwvwe,Hey. Are you based out of India? Can we chat,Jealous_Mood80,2025-04-12 11:56:58,1,dataengineering,t3_1jwpc7l,False,
mmqis15,Remind me,Charming_Athlete_729,2025-04-12 14:18:20,1,dataengineering,t3_1jwpc7l,False,
mmrwb58,Remindme,arunrajan96,2025-04-12 18:38:28,1,dataengineering,t3_1jwpc7l,False,
mmjrmp2,"I think it really depends.For example, when you have to re-do other people’s job I find it kind of difficult, because you have to reverse engineer things. The equivalent of this can be a migration when you have to keep legacy as you migrate.But on the other hand when do everything from scratch, it (usually) is not that difficult.Otherwise the most important one is where does your job ends mixed with what I have mentioned above. If you just have to move data from multiple systems into a landing layer, it’s not same if you have to do that and understand stakeholder needs to model the data, complexity adds up.",idleAndalusian,2025-04-11 11:59:57,61,dataengineering,t3_1jwnwe0,False,
mmjt1b3,Honestly my job would be so fucking easy if there were 30% less incompetent people around.,escargotBleu,2025-04-11 12:09:42,30,dataengineering,t3_1jwnwe0,False,
mmjskoj,"Yeah, a good BE developer should probably find it an easy switch. Most big problems in data engineering have already been solved and abstracted. Now it's mostly plugging components together. I think the value as a DE is more about understanding business context, improving data quality, and cutting costs.",leogodin217,2025-04-11 12:06:31,45,dataengineering,t3_1jwnwe0,False,
mmjqth7,It's mostly quite easy unless systems are created in a bad way or the companies data policies aren't mature. This happens more often than not. Or in niche branches were optimizations are important and/or more streaming data is used.,Zer0designs,2025-04-11 11:54:21,10,dataengineering,t3_1jwnwe0,False,
mmk4jpk,"If you suck it's hard. If you work in a shitty environment and also suck, it's really hard.If you suck and work in a good environment where you're being carried by other people, it's easy.If you're good, it's easy.If you work in a shitty environment and are also good, it's stressful, but not that hard (people will quickly rely on you to get stuff done which then gives you massive leverage to leave as you've accomplished a lot in a short space of time).If you are good and work in a good environment, it's also easy.When I work with somebody who isn't a shithouse, life is completely fine. When I work with somebody who is a complete shithouse, I get why people don't like IT.",MikeDoesEverything,2025-04-11 13:21:45,16,dataengineering,t3_1jwnwe0,False,
mmk6bo8,Every SWE I've seen that started DE on their own ended up building pipelines so inscrutable because they lacked understanding of data fundamentals that they quit in a fit of rage 1-2 years after starting. Maybe you've actually got an easy role here but it's possible you're accruing technical debt without knowing that will hit you like a train down the line when you have multiple pipelines failing or a patchwork schema that's extremely difficult to add to.,sunder_and_flame,2025-04-11 13:31:49,8,dataengineering,t3_1jwnwe0,False,
mmjxbpd,I find it stressful as other people said when things are not mature or when you are not experienced and don’t have much guidance.You can run into playing catch up on things that should’ve been done in the first place (not your fault) but leadership and kind of get rushed to do it.,Mysterious_Control,2025-04-11 12:38:04,3,dataengineering,t3_1jwnwe0,False,
mmk95yg,"If your data sources are well managed upstream and your reporting needs downstream are congruent with the source data, then yes it can be easy. If either of those start to drift it gets challenging fast! I’d say the biggest single challenge is helping business users understand time variation of their data and its impact all the way upstream. Current data - easy. Preserving was true in the past for comparison to today? Very hard!",Simple_Journalist_46,2025-04-11 13:47:22,4,dataengineering,t3_1jwnwe0,False,
mmkegjh,"I mean, every job is easy if you describe it with a simple sentence like that...",Stock-Contribution-6,2025-04-11 14:14:28,3,dataengineering,t3_1jwnwe0,False,
mmkgi7f,"For me the technical skills of plumbing and moving data from A to B is fine. Anyone can do it honestly. But It may get harder if you have to get more involved with modeling the data to accurately reflect the ontology/semantics of the business (dealing with that), actually participating in a proper and mature software development life cycle, and have to deal with high volume/complexity of data. But I’m sure YMMV based on the context of the job. DE is too broad.",muneriver,2025-04-11 14:24:44,3,dataengineering,t3_1jwnwe0,False,
mmt747i,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-12 23:08:20,1,dataengineering,t3_1jxtxqo,False,moderator
mmtca9d,"Don’t use airflow for any etl/ processing jobs, just for your orchestration. Use k8s operators in airflow and use dedicated pods for QA tasks, monitor and configure their resources accordingly.",badrTarek,2025-04-12 23:40:10,67,dataengineering,t3_1jxtxqo,False,
mmum2h6,"am on-prem at my current job, and we've spend a lot of time on brainstorming the ETL and DWH stack. I need your help",Tiny_Web3000,2025-04-13 05:01:28,5,dataengineering,t3_1jxtxqo,False,
mmxwlo0,"In reference to pydantic, You don’t need to split the files into smaller ones necessarily to solve, you can probably batch the process of reading in the data in chunks and then running the in chunks and parallel. Reading it all at once and then running the process is what is sucking up the memory. We validate a billion+ records daily and upload via api using that approach of chunking and batching and don’t use more than 10gbs of RAM on a single node.Small files can be a real pain in the ass for performance if you end up using them in Spark or Trino…",Oct8-Danger,2025-04-13 19:06:48,3,dataengineering,t3_1jxtxqo,False,
mmtsddw,"What’s the common element in this?K8s. One of the limits you have hit is the limits of pods as a processing platform.  Sounds like you are getting close on the usefulness of data frames. Getting out of hobby scale sucks. But, ultimately, I think you’ll end up with a much simpler pipeline that can scale better.",chock-a-block,2025-04-13 01:25:54,2,dataengineering,t3_1jxtxqo,False,
mmuxki6,"First time I am hearing about memory issues in Pydantic schema validation (then again my DE experience comes from working on a research cluster during my MS right now so I'm pretty new in the game). Sounds like an interesting problem, could you tell me more about it? At what point(s) in your pipeline are you performing the validation, and how complex is your schema? A quick Google search doesn't seem to bring up relevant links so if you have links to any blogs/literature about this that would be great too. Appreciate you sharing your experience here :)",theroshogolla,2025-04-13 06:48:24,1,dataengineering,t3_1jxtxqo,False,
mmuvbpo,"This wont help you; thankfully my on premises is essentially a private cloud service. I can scale up and down in code in minutes, edit the existing machines. Need an extra machine with 512GB ram & 96 cores? Done. No questions asked.",umognog,2025-04-13 06:26:03,0,dataengineering,t3_1jxtxqo,False,
mmtd31t,"Yeah, this is where my thinking has been going recently. Unfortunately we all learned the stack from scratch and of course a lot of examples just use the PythonOperator natively. One of a growing list of things to somehow remediate.",Nightwyrm,2025-04-12 23:45:14,15,dataengineering,t1_mmtca9d,True,
mmyg95z,This is what I've done but I really want to know the answer to the dumbarse question of: how is k8s operator pod better than a worker pod? Is it just because you can more easily assign more resources? They have less overhead?,speedisntfree,2025-04-13 20:52:12,1,dataengineering,t1_mmtca9d,False,
mmyathr,"Yeah, the approach taken certainly isn’t the one I’d have advocated. As you say, it does create other issues and chunking would’ve been much smarter.",Nightwyrm,2025-04-13 20:22:58,2,dataengineering,t1_mmxwlo0,True,
mmi0ymz,\-> Sr -> Staff/Principal\-> Lead -> Manager -> Director ->......\-> Data / Solution / Enterprise Architect,nanksk,2025-04-11 02:41:02,59,dataengineering,t3_1jwf5ks,False,
mmhxfr8,"ML Engineer, Data OPs, Architecture, Platform, Tech Lead, Manager, CTO or specialist in a business",Intelligent_Volume74,2025-04-11 02:18:27,20,dataengineering,t3_1jwf5ks,False,
mmi2ne3,"> looking to jump to other domains (ie. Software Engineering)I'm sorry what? Data engineering IS software engineering. Are you telling me you... don't write software?> Are the other ""upwards progressions"" / higher paying positions more around management/leadership positions versus higher leveled individual contributorsArchitect, principal, or whatever bullshit names people come up with these days. Maybe you can even invent one yourself, like Data Engineer Master level 5.",jajatatodobien,2025-04-11 02:52:16,28,dataengineering,t3_1jwf5ks,False,
mml66xz,"There are lots of ways to move up. You can do it via a technical path, a management path, etc. Almost all ways of moving up will move you farther and farther away from day to day coding. In order to be considered for these type of positions, you need to start developing skills for them. Most of them don't come naturally and are often hard for people who are really into the weeds.Want to move up to an architect? Architects only code enough to prove out concepts and ideas that will work on a design. When I have had people come up to me to ask about becoming an architect, the first question to them is, ""Are you ready to give up coding?"" Not because they won't have to, but I am looking to see if their head is in a space for the next steps. Architects have one foot in the business world and one in the tech world. The two worlds are very, very different.Hone your people skills. No matter how you move up, you will need them and they can always be better. You will have to start listening for business requirements (both stated and implied) and figure out not only what they are saying but the right patterns to pass down for the coders to implement. It is hard because the sirens in the weeds will always be there calling you back. You have to fight them. Every time you think, ""I could do this faster myself"" you need to STOP. Next level up is changing your tools. Your tools are no longer software on hardware but the software inside people's head. You need to learn how to communicate what you want done to other people. Unlike the hardware you are used to, sometimes you may need to do it multiple times to get what you want. You also have to make your people (tools) better. I think that is an obligations more senior people have to the newer ones. The trick is how to do it without being a dick.If you have any questions, feel free to ask.",marketlurker,2025-04-11 16:31:27,6,dataengineering,t3_1jwf5ks,False,
mmlk2s4,Appreciate someone pointing out the variety of career paths.,BoringGuy0108,2025-04-11 17:39:13,7,dataengineering,t1_mmi0ymz,False,
mmlbpmx,"I don't see ML engineer as an upward position to Data engineer. I would say it's an adjacent parallel track but I do not see it as a ""progression"" of a data engineering career, which implies data engineering is at a lower level than an ML engineer.",Illustrious-Pound266,2025-04-11 16:58:28,15,dataengineering,t1_mmhxfr8,False,
mmjgm8j,Lieutenant General Data Engineer Level III,Safe-Study-9085,2025-04-11 10:33:41,14,dataengineering,t1_mmi2ne3,False,
mmjs0mn,In my company I’m technically called a data engineer but I have not written a line of code yet.,anonymous_0618615740,2025-04-11 12:02:39,2,dataengineering,t1_mmi2ne3,False,
mmlbshc,"You are right, data engineering is a subset of software engineering. It is very similar how there are lots of doctors but you aren't going to go see a GP if you have cancer. You are going to see an oncologist. I know there are lots of code cutters out there that want you to believe because they can create a pipeline to do ETL, they know data. That just isn't the case.",marketlurker,2025-04-11 16:58:51,1,dataengineering,t1_mmi2ne3,False,
mmi3nn7,"If data engineering IS software engineering, why are SWE paid way more than DE. sure there’s overlap but not the same thing.",eastieLad,2025-04-11 02:59:08,-15,dataengineering,t1_mmi2ne3,True,
mmcq8t8,data engineers are not important until you're a few years into a project with your 10 data scientists and analysts having free will on your dwh and costs skyrocket then you realise maybe i should have got a Data Engineer first,CingKan,2025-04-10 07:48:15,137,dataengineering,t3_1jvs8f1,False,
mmcsgjp,"> Is hiring a dedicated Data Engineer still necessary and important?Currently, yes. When you graduate, who knows? The story I always retell is when I went to university, pharmacists were in huge demand in the UK. So much that universities were desperate to jump on the bandwagon, start up a pharmacy course, and have their first cohort graduate so they can gain accreditation. About 5-6 years later after I went to university (a few years after I graduated), the requirement for pharmacists steeply declined.Opposite story: when I was trying to become a DE, I watched a video from a popular YouTuber who described DEs as ""second class citizens"" and ""SQL monkeys"" in the data space. I chose to not listen to that person and carried on anyway because I really enjoyed DE. In the following 3-6 months after began the massive boom of data engineering and I got lucky.We can't predict the future. We can only pursue what we're interested in and adapt when the time comes.",MikeDoesEverything,2025-04-10 08:12:23,36,dataengineering,t3_1jvs8f1,False,
mmd393k,"having data engineering skills is just useful, just as it is useful to have programming skills.learning data engineering teaches you how to setup data pipelines in a well designed way.many data pipelines used to be (and some still are) constructed in a hodge podge mess of spaghetti infrastructure that has issues every time it is used to ingest new data.if more people in tech knew data engineering best practices the world would be a better place.",meta_level,2025-04-10 10:07:32,11,dataengineering,t3_1jvs8f1,False,
mmcpzr2,No but I imagine other things are going to become necessary e.g. cloud infra/automation/devops type stuff. I'm leaning into those massively. Clickops still won't suffice with everything democratised,mailed,2025-04-10 07:45:33,17,dataengineering,t3_1jvs8f1,False,
mmcyhjo,"Sure there could be some relabelling or blending across roles. But, on the idea that analysts are likely to subsume DE work (vs the converse), because of AI no less, I have doubts. Data analysts/scientists are, I think, the most threatened by AI. LLMs are making much faster progress in mathematical and statistical reasoning than in other areas due to current training paradigms. There is also just much more of a cookie cutter nature to analyst work than DE, which is where LLMs excel. Asking ChatGPT to make you a streamlit dashboard with some “insights” on a dataset, vs asking it to solve complex Spark efficiency issues, you can see the difference already today. My instinct is that AI will enable DEs to plug informative BI modules onto their pipelines far faster than it’ll enable analysts to stand up and maintain large data infrastructures on their own.",omgpop,2025-04-10 09:18:26,8,dataengineering,t3_1jvs8f1,False,
mmcpovk,"In my opinion, currently there is still room for dedicated data engineers. Especially for larger companies with many data sources. The larger the team, the more dedicated roles. However for smaller sized enterprises there will be more general data roles. It depends on maturity of data infrastructure as well.With regards to the future, I think as you are stating the data roles in general may become more intertwined also with the advent of AI where you'll be able to take on more, diverse types of work.However having had a role specific as data engineer will definitely not hurt you at this point. I think it will actually make you more valuable and capable in the end.Starting as a data engineer you can later fan out to the front end more where you take on a role as data analyst and scientist possibly.",janus2527,2025-04-10 07:42:13,5,dataengineering,t3_1jvs8f1,False,
mmcumvk,"> I'm a final-year student with no real work experience yetAnd why are you looking to get into a field that is by nature multidisciplinary, requires years of experience, and domain/business knowledge?> I fully understand that data engineering tasks—such as building ETL pipelines, managing data infrastructure, and ensuring data quality—are critical. But I’ve noticed that data analysts and BI developers are increasingly acquiring ETL skills and taking on parts of the data engineering workflow themselvesAnd you think this is simple? You think a data analyst has any serious knowledge of database administration, networking, web applications, systems administration, cloud operations?> In addition to the rise of AI tools and automationThey don't replace any of the fundamental work of a data engineer: providing end to end data solutions.> Am I making a risky choice by specializing in this areaYou cannot specialize in this area yet because you have no technical skills, no work experience, no domain knowledge of any business kind whether it be finance, healthcare, communications, research, biology, whatever. You are like a kid playing with a BB gun who is asking the grown ups if specializing to get into the covert operations special unit is a good choice. Maybe start by joining the army first.Your questions are fundamentally flawed because you have no knowledge or understanding of what a data engineer does. Thinking that a business or data analyst can replace a data engineer shows how little understanding you hold, and perhaps should start asking experienced engineers what the role consists of and what knowledge is required first, before making assumptions and looking like a fool.",jajatatodobien,2025-04-10 08:36:44,9,dataengineering,t3_1jvs8f1,False,
mmcto3c,"Every data role can have overlapping tasks depending on project or company, it's more about the specialization. My data analyst colleague will make a BI dashboard and I get tasks related to DE/cloud even though both of us can do ETL in our own prefered ways.If you work you just do whatever task you get from higher up, especially if you happen to be consultant.",Wingedchestnut,2025-04-10 08:25:50,2,dataengineering,t3_1jvs8f1,False,
mmcuoql,"Much less than before. Software engineers are doing more and more DE work, and it’s pretty easy to understand why",RangePsychological41,2025-04-10 08:37:20,3,dataengineering,t3_1jvs8f1,False,
mmd3fi9,"Man, I do not want to try and be full stack.",-crucible-,2025-04-10 10:09:15,1,dataengineering,t3_1jvs8f1,False,
mmd2kk2,"If the DE services are available in localstack, why not. They also have Snowflake emulator now",Terrible_Ad_300,2025-04-10 10:00:44,12,dataengineering,t3_1jvu3af,False,
mmdp7hp,Isn't it easier to get a new credit card and register new free trial with $300 USD?,seaborn_as_sns,2025-04-10 12:52:54,1,dataengineering,t3_1jvu3af,False,
mmddm6z,You can install SQL Server Developer Edition completely free and practice your data engineering skills in SSIS. Most of the concepts are applicable.,Nekobul,2025-04-10 11:35:08,-14,dataengineering,t3_1jvu3af,False,
mmd37ui,"I installed Localstack yesterday. I am still exploring it; it has most of the DE services like glue, kinesis, s3 etc. etc. I think the only difference is setting them up, as you don't get the AWS console, so you have to set them up using the command line. I still don't know how to work with AWS Glue without GUI, but I will do some research.",MinisterOfMagic98,2025-04-10 10:07:11,4,dataengineering,t1_mmd2kk2,True,
mmdsf6o,I don't think AWS offers the $300 credit; GCP offers it. And getting a new credit card is more trouble than setting up everything in localstack,MinisterOfMagic98,2025-04-10 13:12:13,3,dataengineering,t1_mmdp7hp,True,
mmdeatg,I want to learn AWS tools and services.,MinisterOfMagic98,2025-04-10 11:40:09,3,dataengineering,t1_mmddm6z,True,
mmdmn5d,"Dude I don’t know what’s in your head.These past few weeks I keep seeing your comment all over the places in DE sub preaching about SSIS.. Bro, today is 2025.. you want to use it, sure.. but don’t push other thousands of DEs when almost everyone moves to either code based pipeline or more modernized cloud platform like databricks, dbt, snowflake, palantir, Azure stack, AWS stack, etc. or even many other open source stacks.. even Microsoft stop talking about ssis dude.",bubzyafk,2025-04-10 12:37:02,3,dataengineering,t1_mmddm6z,False,
mmodtdw,"Good opportunity to learn terraform, imo",paxmlank,2025-04-12 03:22:16,2,dataengineering,t1_mmd37ui,False,
mmd4rfp,I think you can use a jupyter notebook,ArmyEuphoric2909,2025-04-10 10:21:57,2,dataengineering,t1_mmd37ui,False,
mmdwb2f,"It is kind of funny you not only have to waste extra time with these shiny ""modern"" tools but you have to also pay to be a developer. Isn't that the ultimate grift ;) Haha",Nekobul,2025-04-10 13:34:46,-6,dataengineering,t1_mmdmn5d,False,
mm1x6wd,"From the data scientist work that I have seen :Learn to test. Learn to TDD.A function should be 50 lines long at most, and with 5 args max. If it's over, think about how you can factorise it.Learn to name variable.Treat variables as if there were immutable. Each transformation should result in a new variable with a nicely chosen name.Learn type annotations and use them. Use a main function. Those are guidelines, but if you try to enforce them all, you will write better code than most data scientists I have met.",mousedogg,2025-04-08 15:55:38,57,dataengineering,t3_1jugab3,False,
mm5yi8a,"Most of the answers so far are about being a better software engineer; fair, but not exactly what you asked for, and a lot of data engineers are also pretty terrible software engineers TBH.I would say it's learning to work with large-scale data efficiently. A lot of data scientists are biased towards libraries that work in memory—which is fair, because AI/ML workloads are often more efficient in memory, and you can also sample or use other techniques to avoid working with the full data.In data engineering, you're often working with large-scale data, with latency requirements, so it's not a good option to pull data into memory and process it with Polars or whatever. If you're Python-first, this may mean understanding libraries like PySpark, working with a unifying abstraction like Ibis, or potentially database-specific libs like BigFrames.",crossmirage,2025-04-09 05:23:11,9,dataengineering,t3_1jugab3,False,
mm27b4w,"1. Use version control, i.e. git.2. Write unit and end to end tests, with PyTest.3. With very, very few exceptions, Jupyter notebooks do not count as ""production code"".",ambidextrousalpaca,2025-04-08 16:46:01,23,dataengineering,t3_1jugab3,False,
mm2p0gr,"You aren't supposed to be a code cutter. Don't go down that path. As a data scientist, your skill set is very valuable.First, not everything is Python. There are lots of ways to skin a cat. There is a reason that most all of the Python libraries are compiled and not written in an interpreted langugage like Python. Your question indicates you are too narrow in your thinking.A data scientist would be really helpful if they knew the process to get their insights into production. Many really cool ideas die on the vine because they are difficult to implement. It would be very helpful to package what you leaned into a format that can be easily understood by the people who have to productionalize it. Sometimes the insights you learn have a very short shelf life and anything you can do to help the code cutters understand is good.",marketlurker,2025-04-08 18:09:15,3,dataengineering,t3_1jugab3,False,
mm32gjc,add type to variables.....please,Complex-Stress373,2025-04-08 19:15:28,1,dataengineering,t3_1jugab3,False,
mm4agzp,"Yes, please, learn how to code. It’s incredibly surprising and frustrating discover that a lot of data scientists lack even the basic concepts of sw engineering. I spent a lot of time refactoring code that would make throw up even a freshman in CS",KeyIsNull,2025-04-08 22:59:13,9,dataengineering,t1_mm1x6wd,False,
mm5yzqv,"Great answer, thanks!",Pineapple_throw_105,2025-04-09 05:27:30,3,dataengineering,t1_mm5yi8a,True,
mm77ssv,I agree. Most data engineers can throw something together in Polars or Duckdb. The question is how to progress when that is not enough. Learning how to use scalable solutions like Spark is an essential skill when you have to deal with large real-world datasets.,elutiony,2025-04-09 12:25:00,2,dataengineering,t1_mm5yi8a,False,
mm6n850,Can you please expand on what you mean by point 3?,_Riv_,2025-04-09 09:38:06,4,dataengineering,t1_mm27b4w,False,
mm68cr3,"The best data scientists I've ever worked with were mathematicians before they picked up DS. Having a good understanding of maths will help you tremendously when solving any kind of DS problem.You don't need to become a mathematics genius to be a good DS, but a basic understanding of how some of the models you use work is very useful. Regression, nearest mean, clustering, random forests etc. it seems that many people skip this step these days, and just plug their data into xgboost and hope for the best.",No_Two_8549,2025-04-09 06:57:45,2,dataengineering,t1_mm2p0gr,False,
mlyi7fo,"This is a Databricks quirk. dbfs: is a scheme while /dbfs is a posix path. Python & pandas require posix path (which is why you cannot read s3 directly from pandas, without installing additional libraries)See https://docs.databricks.com/aws/en/files/#do-i-need-to-provide-a-uri-scheme-to-access-data",nkvuong,2025-04-08 00:50:15,20,dataengineering,t3_1jtyxp9,False,
mlyxqv3,"The “why” is a little complicated, but it basically comes down to how python works vs Spark. PySpark is just an API for Spark, which is a Java application that runs on clusters of nodes (different computers on the same network). When the cluster saves a file, it splits it up into parts processed on each node, but then the nodes need to know where to send the data. The DBFS isn’t on the node, it’s on some other computer. So each node needs an address (like a url) to know where to send it. It’s all comes down to spark being designed for moving data over a network.Databricks was built off of ipykernal which used classic file system. When classic python code is run, it runs on the driver, which has the DBFS mounted (like how a usb drive or shared drive is mounted) so the reference it, you just need the file location like you’d write if you ran it on your laptop.And fwiw, each node doesn’t mount DBFS because it would be a massive pain for several reasons.",Chuck-Marlow,2025-04-08 02:25:17,11,dataengineering,t3_1jtyxp9,False,
mlzcb8l,"As others have mentioned, but explained perhaps a little differently: The `/dbfs` is a file path on the OS on the driver node that your notebook is running on. Your python session can read that path as it usually can any path on the OS you have access to, and anything running in your python session - like pandas - has to use that path.Using `dbfs:/` with a python library like pandas would be like asking pandas to open `ftp:/` or `http:/` -- it is dependent on the library to know how to use the protocol to go fetch the data. For example with the requests library you can do calls to `http:/`Spark - which you access through the pyspark API - understand `dbfs:/` so it can use that path. More than that though, the `/dbfs` path does not necessarily exist on the workers in your cluster, so sending that path out to the workers is pointless. You can't access it via workers because it isn't a local file path, and exposing it as if it were a local file path to multiple machines may confuse some users into treating it like a local file path.",azirale,2025-04-08 04:05:02,3,dataengineering,t3_1jtyxp9,False,
mlyd3oa,"Try Polars - they got rid of all the ""why does this quirk exist"" that I used to do",PurepointDog,2025-04-08 00:19:13,5,dataengineering,t3_1jtyxp9,False,
mm66e2z,"I'm 100% in on polars, but this question has nothing to do with the problems that polars solves. You can't access sparks filesystem from your cluster with anything other than spark, not even with polars. This question is about spark filepaths VS a clusters local file paths in databricks, and Polars faces the same limitations as pandas or any other python library that isn't spark, as other commenters have explained.",DrMaphuse,2025-04-09 06:37:52,1,dataengineering,t1_mlyd3oa,False,
mm7mp0h,"Hmm haven't really used Spark enough to figure out what this all means. We rolled our own for anything involving filepaths since switching to Polars, and it's all worked out fantastic!",PurepointDog,2025-04-09 13:51:46,1,dataengineering,t1_mm66e2z,False,
mmlit4r,"I would say that shifting left in this case is less about ELT vs. ETL and more about process improvement. If you can put controls into the source application layer to improve data quality then you do that. If you can put governance, literacy and other controls in place to improve user behavior then that's awesome. Trying to engineer solutions after the data has been stored in the source system has diminishing returns, assuming you're already somewhat mature.",seaefjaye,2025-04-11 17:33:03,19,dataengineering,t3_1jwv1wv,False,
mmlg4il,Not how I interpret shift left which is just MBA speech for moving faster by having everyone involved earlier in the process.,4gyt,2025-04-11 17:20:02,36,dataengineering,t3_1jwv1wv,False,
mmlj4j3,"What you are describing is a trend only for organizations of a certain composition and age.At my company we had few dedicated engineers early on who setup the initial warehouse based on requirements from over 10 years ago.The business then threw money at hiring analysts for specific departments. The small number of engineers could not keep up with the volume and variety of requests so the analytics team bought a BI solution that allowed them to maintain their own models (Looker in this case). Based on your definition this was a ‘Shift Right’. The analytics team operated for years without dedicated people to ensure their environment was well organized or resilient to new business processes that require the logic that was locked in that transformation layer.When I took over that position we started to migrate logic out of Looker and into DBT, a process we are still working through today. The pilot project here was to deal with a deviation of a legacy data model in our data engineering environment by cleaning up and replacing it with all the goodies our analytics team extended and prepared in Looker for years. Once the legacy model was replaced we also made sure everything was set to refer to the new models.We are not moving away from having analysts model in Looker/LookML, though we have also set them up with DBT Cloud. Instead we are treating that workflow more like prototyping. Once our analysts have iteratively refined those models and they are stable we find the best way to ‘Shift them to the Left’. Sometimes these prototypes are abandoned by the business or analysts. This is fine, we didn’t put any additional engineering resources into it.",the-strange-ninja,2025-04-11 17:34:35,10,dataengineering,t3_1jwv1wv,False,
mmlolgz,"Hm. ""Shift left"" is more about moving the quality controls and validation earlier in the development process. Running tests locally as you develop and then again before submitting a PR.",WallyMetropolis,2025-04-11 18:01:10,9,dataengineering,t3_1jwv1wv,False,
mmlnfbj,IMO the shift left movement is not really related to ETL/ELT. I think everyone downstream of ingestion is fed up with trash data. There needs to be some accountability from the data providers to ensure that they are aware of what they are collecting and what the business considers valuable.,DenselyRanked,2025-04-11 17:55:28,5,dataengineering,t3_1jwv1wv,False,
mmlkatv,"My short answer: really depends on the business you are in.If you are in charge of the data start to finish, it absolutely could shift upstream.In 25 years though, ive never personally been in that situation. The data creators are other companies, all sorts. I'm collating the data used by my business to create the business knowledge that comes from pulling this all together. Ill always need to perform data quality & transformation downstream from whatever makes the data in this scenario.So in a nutshell, swings and roundabouts, 6 and half a dozen. You do what suits the need.",umognog,2025-04-11 17:40:18,3,dataengineering,t3_1jwv1wv,False,
mmp03ir,its about making product managers actually have to understand their data. in ETL and ELT its the data engineer/analyst who is left to figure out what to do with the data. its time that product owners and software engineers take responsibility for their shitty system and database design.,hamesdelaney,2025-04-12 06:32:41,2,dataengineering,t3_1jwv1wv,False,
mmls1jz,This sounds like a data quality/process improvement. Is this a buzz word? Shouldn't this have always been the case though? I usually push for this stuff all the time. Eg using set list options instead of a free text field. Or having a manager validate transactions before they get into the system. The T layer is always going to exist because of Analytics/ML but it's definitely less burden and governance that needs to happen at that level. I mean this stuff only makes sense. Why would I try to jumble around with Regex all day making some complex formulas when the people entering data in the system chooses from a drop down list? Everyone saves time and effort.,Eze-Wong,2025-04-11 18:18:29,1,dataengineering,t3_1jwv1wv,False,
mmlsrid,"Don't listen to people who tell you the ""Shift Left"" paradigm has nothing to do with ETL. ETL is actually a very good fit to implement ""Shift Left"" because you can potentially develop your data product (from the Shift Left parlance) using Low-Code/No-Code tooling. That is extremely valuable. Now when you consider the fact there is now a trend of decentralization and building the so -called ""data mesh"" architecture, you can easily see how the ""Shift Left"" is the exact paradigm to implement the ""data mesh"". These two concepts are made for each other.In my opinion the above architecture is superior to what is currently being pushed as ""modern"". And ELT is not modern for sure but more of a workaround and very inefficient at that.",Nekobul,2025-04-11 18:22:08,1,dataengineering,t3_1jwv1wv,False,
mmmyy8a,"I don’t think so…To be honest, it sounds just like a rebranding of concepts already advertised/adviced by extreme programming. The whole idea is to provide feedback as fast as possible because it’s difficult to fix things later",NotAToothPaste,2025-04-11 22:01:52,1,dataengineering,t3_1jwv1wv,False,
mma2oi8,"How much data are you working with? If it's not multiple TBs, I would suggest using something like DuckDB or Small pond (DeepSeek's Distributed DuckDB). I used Spark for years, and eventually settled on using Amazon EMR Serverless. Even with this, it's still a total colossal pain to use Spark. I hate it. Development is extremely slow because trying to debug is like pulling teeth. If you need to do performance related improvements, good luck. You basically have to have a PhD in Spark. I hope this falls out of fashion in favor of simpler, more predicable systems.",Impressive_Run8512,2025-04-09 21:00:37,37,dataengineering,t3_1jvgdwr,False,
mmadehi,"If you've already used Polars you might want to see if [daft](https://www.getdaft.io/) has what you need. It has built-in distributed execution using ray, and it is a no-setup one-liner to make a session use a local 'distributed' ray runner that can handle jobs beyond memory limit. However it is currently bit more limited wrt analytics functions, as its primary job has been for moving data around rather than analysis.It uses arrow to format internally, so anything else that uses arrow in the same process - so any python lib for example - can pass batches back and forth without copying.",azirale,2025-04-09 21:57:00,4,dataengineering,t3_1jvgdwr,False,
mmad2ls,"Local dev setup for small datasets is a breeze but configuration on cluster level, debugging and especially performance enhancements are phd level nuisances. Spark is terrible to work with and I am not half bad at it. But I won't take Spark projects if I can't help it",nacho_biznis,2025-04-09 21:55:12,3,dataengineering,t3_1jvgdwr,False,
mmdmrjm,"The company Polars Cloud offers distributed computing now, not sure if it’s GA yet. Are you open to giving them a try?https://pola.rs/posts/polars-cloud-what-we-are-building/",EarthGoddessDude,2025-04-10 12:37:49,2,dataengineering,t3_1jvgdwr,False,
mmqeuws,"For cloud, I would recommend AWS Glue PySpark because it’s serverless (no need to manage the cluster) and the cost is reasonably cheap, especially for small-medium batch job.If you have a bit more money, you should try Databricks serverless solution.On premise Spark is always difficult to manage because you need to craft multiple components to make a good platform for your data pipeline.",baby-wall-e,2025-04-12 13:56:20,1,dataengineering,t3_1jvgdwr,False,
mmxtqc0,For a better spark or duckdb you probably want to go with something distributed. If you not only want to run sql but also Python massively parallel I would suggest Exasol.,wenz0401,2025-04-13 18:51:32,1,dataengineering,t3_1jvgdwr,False,
mmc3hhq,Use databricks. Ofc it’s not cheap but it save you a lot of time which can translate to money. Otherwise you can just do ELT. Most managed DWH solution is robust enough to handle this. There is no shame doing ELT pipeline as long as it achieve your goal.,CrowdGoesWildWoooo,2025-04-10 04:15:13,2,dataengineering,t3_1jvgdwr,False,
mmaaw38,"Hey - I would highly recommend a simpler/better architecture like DuckDB - if you want to process data locally. It can handle 10's of GB datasets on your laptop very well.If you want to run DuckDB as a server - check out GizmoSQL - it is wicked simple to get started: [https://github.com/gizmodata/gizmosql-public](https://github.com/gizmodata/gizmosql-public) \- and your team can all use a single GizmoSQL instance running in the cloud. You can kick the tires for free at [https://app.gizmodata.com](https://app.gizmodata.com) \- where I've loaded a 1TB dataset for folks to query and gauge performance, you just have to register to try it out.Full disclosure - I'm the founder of GizmoData - the maker of GizmoSQL. Base DuckDB can work fine for you if you want to run it locally, or write your own API on top of it (or use dbt, for example)...",Adventurous-Visit161,2025-04-09 21:43:28,1,dataengineering,t3_1jvgdwr,False,
mmazrsp,"The debugging and performance tuning takes years to get good at, but once you figure it out its great. Hopefully something better will come along that is more intuitive and easier to debug/optimize.",TurboSmoothBrain,2025-04-10 00:05:05,9,dataengineering,t1_mma2oi8,False,
mmbqynq,"Just curious, why DuckDB over a regular SQL instance?",sylfy,2025-04-10 02:45:31,2,dataengineering,t1_mma2oi8,False,
mm4t1bk,Can you just materialize the view?,Bach4Ants,2025-04-09 00:45:57,7,dataengineering,t3_1jusby0,False,
mm7aypa,"Storing data indefinitely as JSON in an NVARCHAR(MAX) (or similar LOB/BLOB datatype) in any STRUCTURED database is a massive waste of storage space.We store 30 days ingestion payloads as JSON in an Azure SQL Database (Hyperscale) this way as part of our staging, and just that storage of 30 days history this way is about 12% of our entire database.Basically you are just pushing the modelling problem to the analysts - and yes it is inefficient to flatten data on read every time you query. Also impossible to index on anything except ID/Created_date/Update_DateEdit: I know nothing about Snowflake specifically, so the comments from /u/monchopper appears to explain that it is essentially stored as files in a datalake/object store behind the scenes which makes the storage footprint argument moot",Grovbolle,2025-04-09 12:44:52,6,dataengineering,t3_1jusby0,False,
mm9s8ia,"If your JSON payloads are 1 row per record (not nested) then you're performance loss with a view should be almost none. E.g. SELECT payload:my\_pk: int as my\_pk, payload:col\_1::string as col\_1 from my\_raw\_table.As others have said you could make the view a Materialized View but I've not seen any material advantage to this approach but YMMV.Depending on the query workloads you can also put a Clustering Key on the raw table based on a JSON key, periodically running an Insert Overwrite with an Order By clause can also achieve a similar outcome, again YMMV.",monchopper,2025-04-09 20:10:00,3,dataengineering,t3_1jusby0,False,
mm6q6zu,"That's basically all there is to it. If you have a complex/expensive calculation that makes a view slow to query, then you make that into a table instead.You could simply reload the entire thing once a day by materialising the entire view, or you could have a more efficient procedure that just looks for things where the row was created/updated since the last run and merge that in.",azirale,2025-04-09 10:07:52,4,dataengineering,t1_mm4t1bk,False,
mm7sdfc,"Oh yeah that's true, I think I just avoided in the past due to the extra compute costs associated with them in Snowflake, as Snowflake keeps them up to date automatically. But I guess it would be less than accessing the plain view, not sure",fetus-flipper,2025-04-09 14:21:07,4,dataengineering,t1_mm4t1bk,True,
mm9t9md,That may be true for SQL Server and it's variants but not for Snowflake.,monchopper,2025-04-09 20:14:57,1,dataengineering,t1_mm7aypa,False,
mmaw9oz,Unless you have some kind of CDC requirement what’s the advantage of keeping all of your historical JSON ?,wildjackalope,2025-04-09 23:44:31,1,dataengineering,t1_mm9t9md,False,
mmc14o4,"So storage is free in Snowflake?I do not disagree that storing all payloads as they were with timestamps is a bad idea - I just would not keep them on my database indefinitely. That is what file shares, object stores or data lakes is for",Grovbolle,2025-04-10 03:56:40,1,dataengineering,t1_mm9t9md,False,
mmaxqex,1. Auditability. What did my source system have/say at a particular point in time in history.2. Replayability. I've made breaking changes to my downstream data layers and need to replay all the data through them.,monchopper,2025-04-09 23:53:00,1,dataengineering,t1_mmaw9oz,False,
mmcbgp6,"That's the beauty of Snowflake, Snowflake simply stores it's data in files in garden variety Blob/S3 type storage and charges you the a similar price per Tb as the cloud provider would charge you to store the volume of data in S3/Blob. The cost is no different to what you're suggesting, possibly less as their proprietary compression algorithm is very good, even with JSON data. For example, I have 1 client who has 1.8 billion rows of JSON data in 1 table and it consumes 147 Gb of data storage, that costs them $3.38 per month.",monchopper,2025-04-10 05:21:16,1,dataengineering,t1_mmc14o4,False,
mm50ahj,"I'm currently taking the Fabrics Data Engineering course sponsored by Microsoft, I'm very skeptical about it. It looks like an unfinished product.Also they're really forcing it down our throat especially as they aim to retire the Azure Data Engineering certification",Kwabena_twumasi,2025-04-09 01:28:49,58,dataengineering,t3_1juu00b,False,
mm509zk,What does the cost matter if you're not using it? I suspect that's a big reason nobody is talking about the cost.,azirale,2025-04-09 01:28:44,13,dataengineering,t3_1juu00b,False,
mm6b3fj,"Fabric was - by far - the best and cheapest choice for us in terms of price point combined with price predictability.We're running an F2 for production (24x7) and an F4 for dev (turned on just when we need it - some days we don't). Smallish org of 450 total heads, about 150 Power BI Pro users, and 2 end-to-end BI devs (who also have to spend a little time on non BI things sometimes).The clear pricing of Fabric was what made it possible for me to get senior approval to go ahead. At these low ends, the Fabric RI pricing is vastly lower than the low end of Azure Databricks 1-year pre-purchase plans.I can't say for sure what we'd spend if we just did Azure Databricks PAYG because we'd have needed a POC to test that (and we are very resource-limited). But the fact that the pre-purchase prices start a lot higher than Fabric RI prices suggested it'll probably be pricier. I imagine this flips at the higher end but that's irrelevant to us.",sjcuthbertson,2025-04-09 07:26:29,8,dataengineering,t3_1juu00b,False,
mm527c1,"I was told Fabric costs less than Data bricks, although that might come down to specific agreements between a company and Microsoft. Azure Synapse is essentially a dead product. Azure SQL is a great product imho and you can get a lot done with that and Power BI and Power Apps depending what your use cases are. Security is a whole can of worms with Fabric.",Swimming_Cry_6841,2025-04-09 01:40:07,5,dataengineering,t3_1juu00b,False,
mm59h93,"If you were already paying $5,000/mo for a Power BI Premium P1 SKU, a fabric F64 SKU isn't a huge change (Unless you were in non-profit, education, or negotiated a good deal). Power BI, and Power BI premium, are quite popular, as far as I understand. As for per-operation comparisons, I did some benchmarking within Fabric but it's very tedious to do so. [https://www.sqlgene.com/2024/12/15/fabric-benchmarking-part-1-copying-csv-files-to-onelake/](https://www.sqlgene.com/2024/12/15/fabric-benchmarking-part-1-copying-csv-files-to-onelake/)",SQLGene,2025-04-09 02:22:30,1,dataengineering,t3_1juu00b,False,
mm81dis,"""Unfinished product"" / ""incomplete product"" is exactly what two separate consultants told me, bith being Microsoft MVPS earlier this year when scoping an upgrade to our DWH.",whutchamacallit,2025-04-09 15:05:41,6,dataengineering,t1_mm50ahj,False,
mmaz5es,Retired cert threw a wrench in my plans tbh. Looks like the DP-700 will be an alternative and is fabric centric.,SpecialistQuite1738,2025-04-10 00:01:24,1,dataengineering,t1_mm50ahj,False,
mm7ro9i,I would agree the reserved capacity pricing approach is a great plus for getting budget for a project. Basically you can just slam the pricing for 1year X capacity pricing to management.,gffyhgffh45655,2025-04-09 14:17:31,7,dataengineering,t1_mm6b3fj,False,
mm6ut8e,It would probably be cheaper if setup correctly. That's the issue though. You need some degree of expertise to use it correctly.,slevemcdiachel,2025-04-09 10:50:04,0,dataengineering,t1_mm6b3fj,False,
mm564lq,"In my experience, databricks is vastly cheaper. Though different companies and situations may vary.",BoringGuy0108,2025-04-09 02:03:01,9,dataengineering,t1_mm527c1,False,
mmhhh6g,"Our (renewables company) hiring range for L4 positions (backend, DE, DS) is around 65 to 75k GBP, and even that feels low these days.",samreay,2025-04-11 00:39:08,19,dataengineering,t3_1jwd34l,False,
mmhkh5r,"No clue what Amazon pays specifically, or frankly how many YOE L4 is, but knowing the London market well that is much below expected. I’ll assume L4 is 2-3 years experience, and bottom of range for 2 years of experience would be £40k, more average would be 55ish, top would be 65-75. And then you’d have your more Quant / trading firms that could increase significantly above that as well. Amazon I would assume would be around the base 70+ mark at 2 years of experience.",His-Holiness,2025-04-11 00:57:27,16,dataengineering,t3_1jwd34l,False,
mmjjlz9,FANNG with £44k salary sounds low to me. Even for amazonWhat would be the total compensation?,gffyhgffh45655,2025-04-11 10:59:29,11,dataengineering,t3_1jwd34l,False,
mmisnfu,"My man even double that pay would be low for Amazon in London. Who is giving you this offer and please understand with that Salary you will be barely able to pay rent and buy food in London proper. Unless you have family already living there that you can stay with. But the cost of living is high in London, don’t be mesmerised by the number (a number that should be around 100k btw for a faang at L4 actually higher btw) this is a terrible offer ngl. Unless it will give you the option to go from some country to a country with better options take it. But start looking for another job the moment you got the function :face_with_tears_of_joy: you will make twice maybe even 3 times that money any where else in London if you are actually a bit competent",Relativiteit,2025-04-11 06:25:11,15,dataengineering,t3_1jwd34l,False,
mmhjp5e,I have no clue what it pays in London but no DE should be getting paid like this. Someone confirm,redaloevera,2025-04-11 00:52:43,22,dataengineering,t3_1jwd34l,False,
mmk1pqi,It is very low…,Beautiful-Hotel-3094,2025-04-11 13:05:13,4,dataengineering,t3_1jwd34l,False,
mmiv901,It is low indeed but not crazy low. One of my team mates transfered to L4 DataEng last December from L5 NonTech. His Total comp was 65k between salary and RSUs. I think your offer is actually in band I am afraid. Amazon pays peanuts in London,maratuna,2025-04-11 06:51:32,3,dataengineering,t3_1jwd34l,False,
mmjfmeb,That seems really low. We have data and analytics grads at Sky that are on 44k. Essentially less then 2 YOE.,ASeatedLion,2025-04-11 10:24:21,3,dataengineering,t3_1jwd34l,False,
mmi76yo,Are you applying to amazon directly or through a third party? Because a lot of these third party companies take ~50% oh the salary.,LoaderD,2025-04-11 03:24:03,2,dataengineering,t3_1jwd34l,False,
mmjk4hl,"For London I will say that is low... also I do not know what L4 means there, but as senior at Spain I get more, and the costs are lower",BeneficialSpirit6077,2025-04-11 11:03:43,1,dataengineering,t3_1jwd34l,False,
mm3vf27,We just set a realistic timeout that cancels the job and we respond to that,wallyflops,2025-04-08 21:36:07,16,dataengineering,t3_1jumngl,False,
mm4az85,"The timeout comment is likely your best bet. An alternative could be, depending on what your job actually does, you could have a model monitoring some artifact you bake into the primary job but you'd have to get creative with a macro or python.",Striking-Apple-4955,2025-04-08 23:02:03,8,dataengineering,t3_1jumngl,False,
mm4kyzw,"We have experienced something similar. Dbt orchestrated through fivetran. Every few months, our fivetran transformations start hanging on a relatively innocuous model. A model with no recent changes that normally takes seconds to run will suddenly hang for 10+ minutes or indefinitely until transformation timeout. It's not reproducible because running the model via CKI will still run in seconds. No idea if it's actually an issue with the model. fivetran orchestration, or something in the background in the db.",DarthVassago,2025-04-08 23:58:36,1,dataengineering,t3_1jumngl,False,
mm0nttp,You have to read in parallel if you want to speed up the processing.,Nekobul,2025-04-08 11:38:50,9,dataengineering,t3_1ju6uoo,False,
mm0mvgn,How big are the files and how often are they being created? I'd start by reading this: [https://docs.snowflake.com/en/user-guide/data-load-considerations-prepare#continuous-data-loads-i-e-snowpipe-and-file-sizing](https://docs.snowflake.com/en/user-guide/data-load-considerations-prepare#continuous-data-loads-i-e-snowpipe-and-file-sizing),NW1969,2025-04-08 11:31:37,3,dataengineering,t3_1ju6uoo,False,
mm836fp,"What if you have an intermediary step to combine files using DuckDB into tables and then write those tables as parquet? I'm just thinking writing many many small files is sometimes way slower than writing bigger, combined files. Not sure that this will work for you but it simulates a bronze layer in your typical Medallion architecture without much overhead.",coopopooc,2025-04-09 15:14:40,3,dataengineering,t3_1ju6uoo,False,
mm2udhm,"Why not just make an event based trigger to ingest via cloud function. But it also depends on whether you want your snowflake to be 24/7. Another way is to have an intermediary lakehouse like iceberg with proper partitioning, then tell snowflake to periodically fetch this data based on partition. This should be an easy task and cheap to implement",CrowdGoesWildWoooo,2025-04-08 18:35:30,2,dataengineering,t3_1ju6uoo,False,
mm3xff0,"You're probably better off having something else crawl through all the csv files to create consolidated files, then have snowflake read those. I cannot imagine snowflake was set up to optimise for millions of small files. Even just copying the paths into some database or data file so you can work with them more efficiently would likely help.Something you can do to help with this in the future is to write to event grid instead of blob, then configure event grid to write to blob storage. It can automatically buffer up to 15 minutes|300MB at a time. Or a streaming analytics setup can automatically convert to parquet for you. You could even have the function write to both blob and hub or a while, so you can figure out how to get it to work before cutting off the old feed.",azirale,2025-04-08 21:46:34,2,dataengineering,t3_1ju6uoo,False,
mmy5rut,"Great post!I’ve read the article, thanks for sharing. At some point, I don’t agree with this approach where we identify the data issue and we fix it ourselves. Reason is, what if we pick the wrong rows? What if it should not be NULL in the first place?For me, it could be detect and triage, rather than detect and fix. If bad data flows downstream, it would be more expensive to fix it and revert everything back.",sung-keith,2025-04-13 19:56:15,8,dataengineering,t3_1jyg4ps,False,
mmzf9wo,"Thank you for sharing. I thought the fix would be triggered automatically by the failing test, but it is not, right? The test failed, so you decided to add a model in your DAG to fix the failure, which is a manual operation. Did I understand correctly? Secondly, if you have enough motivation to spend the time to write down a test, why not already include the deduplication logic in your DAG from the beginning? Finally, a little detail, QUALIFY is not standard SQL, Spark or Trino don't support it for example. In your first use, you should be able to replace it with WHERE, since you computed the window aggregation in a CTE before. In the second use, you could use a CTE with a WHERE too.P.S.: I think it should be possible to have an automatic fix when the test fail. Put your test macro as an if condition in your DAG, it triggers the fix CTE when it is true. You can also send an alert when it happens.",sib_n,2025-04-14 00:17:35,2,dataengineering,t3_1jyg4ps,False,
mmy6c0h,"Great point — and I totally agree not every issue should be auto-fixed.**Observe & Fix** is meant for 'fixable' issues If there’s uncertainty or business logic is unclear — I’d go with **Observe & Triage**, just like you said.In practice, both patterns should coexist.Thanks for raising it :raising_hands:",jb_nb,2025-04-13 19:59:13,1,dataengineering,t1_mmy5rut,True,
mmxj190,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-13 17:55:33,1,dataengineering,t3_1jydmqv,False,moderator
mmxy6gd,This is cool. What tech did you use?,geo_will989,2025-04-13 19:15:20,3,dataengineering,t3_1jydmqv,False,
mmzh8ju,Nice work. How does it compare to Google Dataset search?,dmart89,2025-04-14 00:30:00,1,dataengineering,t3_1jydmqv,False,
mmu64jk,"It's ok to write lots of files to open table formats like iceberg *up to a point*, and as long as you're doing blind inserts.The append-only blind-inserts are part of the purpose of a bronze layer. By appending everything you receive without reference to what is already in the table at the time you insert it you can have multiple writers all writing at the same time without conflict. If you start doing merge operations or `where not exists` on the target table then you can start getting write conflicts.Having lots of small files is an issue when you're reading the data back, as it takes longer and longer to make all the individual API calls to grab each object. That can be handled by periodically doing a compaction on the files. A compaction can be run at the same time as blind inserts -- they don't conflict with each other.But this is all fine on a scale up to writing every second or so. If you're *constantly* making tiny writes and inserts then you're crossing more into streaming territory. If you can receive your data through a stream (or queue) then you can buffer up writes for a while then bulk write them to iceberg. AWS Data Firehose and Azure Event Hubs can do some of this for you automatically - each has a capability to automatically write all streamed data out to data files every time a buffer threshold is reached (up to ~15 minutes / ~300MB, whichever is first). If you don't need ultra-low latency queries, then these can work, and generally if you're working off of some open table format your queries have a certain minimum latency anyway.---The post you read may be talking about something like [Databricks autoloader](https://docs.databricks.com/aws/en/ingestion/cloud-object-storage/auto-loader/). If anything else automatically does this for you it will have to be part of the execution & orchestration engine that you're working on. It *needs* some kind of eventing system and metadata-storing db to track everything. Iceberg is just a table format spec, not an ingestion engine of its own.Whatever it is it will basically be catching blob triggers and writing their data into a managed low latency db, then periodically grabbing any unprocessed files and batch loading them. It isn't super difficult to roll your own, but there's a few components and you'll have to reason things out yourself around managing the state for un/processed file metadata.",azirale,2025-04-13 02:59:24,7,dataengineering,t3_1jxun0q,False,
mmu2g0i,"not an expert with iceberg either, but learning it through a work project.batching larger writes is more optimal, especially if you're getting lots of small files.i'm using spark with structured streaming — it reads new files from storage on a cadence, processes them, and writes to iceberg. spark handles checkpointing and takes care of manifest file updates during writes.during off-hours or low activity, i run a compaction job in spark to merge small files and reduce metadata overhead.",lemonfunction,2025-04-13 02:33:56,2,dataengineering,t3_1jxun0q,False,
mmgew4j,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-10 21:01:12,1,dataengineering,t3_1jw8ov7,False,moderator
mmgnoam,"So, it's important to understand if under the hood they are the same thing. As far as PySPark and SparkSQL I can attest it's the same execution plans. Don't know if the other examples you spoke about are the same. This is a matter of personal opinion. My general experience is that anyone can learn SQL, not everyone can learn PySpark. People who know both often prefer PySpark. Personally I would rather deal with shit code written in SQL than shit code written in PySpark. So in enterprise settings, I set SparkSQL as the default as much as possible.",Chinpanze,2025-04-10 21:47:01,32,dataengineering,t3_1jw8ov7,False,
mmgmypm,"I I get the feeling that you think SQL and Spark (or other MapReduce-based tools) are mutually exclusive, however they are not. It all depends on the use-case.If your use-case is that all of the data is already in Snowflake and you just need to apply some „simple“ transformations, SQL is 100% the way to go for this - no need to use Snowpark or similar technologies.If your use-case involves significantly more complex transformations, complex data processing, machine learning or just generally things that would be significantly easier be done in a language like Python, a technology like Spark might be a better fit.There is no one-size-fits-all solution. If currently every use-case can be solved with pure (maintainable) SQL, then stick with it. In the future there might be a different use-case that might not be solved easily with SQL, then you might want to add Snowpark or something else.",YannickAlex07,2025-04-10 21:43:15,14,dataengineering,t3_1jw8ov7,False,
mmhyjax,"> I find a developer easier and if I find him he most probably knows a lot about modellingOnly applies to some organisations. I've been in some where everyone come up through a more traditional analyst pathway on SQL databases, and they had absolutely no concept version control, or version control, or literally anything other than SQL. Sure, you can find these people and grab them if that's all you need.Other organisations however may be more oriented around their own internal technology, and may have more SWE around the place. In that case finding developers that can work in something like Python will be a lot easier, and they'll be a lot more used to writing code that can be run and tested locally, and they'll be more familiar with all of the tooling around all of that and they'll prefer it -- they will be aggravated by the limitations of having to only work on a remote db and not having debugging tools.So this is just about matching up with the type of organisation you're in.> I dont care about scaling because the scaling part is taken over by...Not relevant to a decision between dataframe libraries and SQL. Scaling is handled by the execution platform and is entirely independent of the data transformation and querying code you've written.> I don't care about dependency hell because there are no version changes.This also isn't really about dataframe libraries vs sql.SQL databases do go through version changes and they can change behaviour or syntax and that can break things. As an individual pipeline or procedure writer you might not see that much if you've been relying on a DBA or an ops team to handle all of that for you, or if databases aren't upgraded for years you just may have not have gone through such a process. I have been at an org that spent about a year and a few million dollars desperately trying to update their all their SQL to work on the new DW because it worked *slightly* differently and randomly broke all sorts of things.If you get things working and just stick with a version, you're not going to get dependency hell regardless, because your dependencies aren't changing. Even if you are updating... I can't recall ever having any data issues due to version updates.All software gets updated over time. All changes can potentially break things. You can have frequent changes and small easily fixed issues, or rare big changes that are horrendously painful. These are platform considerations, so they don't directly relate to whether you're using dataframes or sql.> It is quite general and I don't face problems with migrating to another rdms.For the most basic of select statements, sure, you can usually copy+paste things over. For actual pipelines and management though, you're often going to have to change syntax around to fit with whatever server you're running on.* T-SQL uses `TOP` after `SELECT` but other dialects use `LIMIT` at the end* QUALIFY exists in some dialects but not others* Does your DDL have `CREATE TABLE AS SELECT` or only `SELECT INTO`* What options do you have for tables in your DDL -- they are often quite different* Some RDBMS allow partition exchanges, but they don't all work the same way* Some servers allow `CREATE ... IF NOT EXISTS` while others require you check first.* Some servers allow `CREATE OR REPLACE` while others require you `DROP` then `CREATE`* Some dialects have ANTI and SEMI joins, others require you to implement in a subqueryIf you completely swap your dataframe libraries around you'll have to go through a similar process of finding equivalents. Or you could just not - if your pipelines run on their own host then each pipeline can use a different library, allowing you to gradually migrate from one to another. It isn't like when you have a single SQL database you're running on, and when you want to switch you have to move *everything*.> In most cases it look's cleaner to me than f.e. snowparkYou're just used to it (though I can't speak to snowpark specifically). Personally *I* find that the composability of dataframes and transformer functions allows me to better encapsulate certain behaviours and abstract them away. It allows me to run partial transformations rather than having to faff around with reworking subqueries or CTEs, and I don't have to scroll up and down massively long queries even for what ends up being a large and complex transformation.> The development roundtrip is super fast.You're probably just more used to it. What even is the 'roundtrip' to you? What are the development, test, and deployment cycles you're looking at using?> Problems like scd and cdc are already solved million timesAnd they have the same approaches in dataframes. You're still doing the same operations, you're just expressing them differently.---> Unittests are easierThis is significantly underselling it. By integrating the dataframe library into your imperative language, like Python, you can generate synthetic data during the script. Your transformations can be expressed as functions, which means you don't even need to load data into any kind of locally-run database, you can just inject data directly into the transformation function to check for the result. You can do this interactively when developing, chaining your own custom data directly into the functions that you are testing. Everything you write here can then by turned into an automated test.---The biggest aspect you are missing is that dataframes are integrated into another programming language, which allows your pipelines and processes to be much more dynamic and much more capable.For example, I can write a function that takes a dataframe and a list of key columns and it will automatically generate a column expression to generate a hashdiff. I don't have to list out the data columns every single time, it can inspect the dataframe schema and figure that out without running any actual transformations.I could have a function that looks at a struct column and automatically comes up with the column expression that will flatten it out. It can automatically do this recursively as well, making it very easy to flatten out ingested json data.I can write a UDF that can make use of *anything* in my programming language and return the result data back to the execution engine.During a long line of transformation steps I can inspect the data as it goes to change behaviour, including conditionally sending messages or alerts out. I don't have to wait for the end of a procedure to collect a result, I don't need another system to query some logging table to poll for results.I can make use of the fact that the programming language will have an LSP in my IDE to allow me to jump between transformer functions. Every time I see some abstracted behaviour and want to know how it works, I press a single key and jump directly to that code. If I want to rename something in my logic it is a single keypress and typing the new name, and that variable reference is renamed everywhere without error.When building complex transformations I can handle what would otherwise be complex subqueries or CTEs by chaining a single function call. I don't have to re-nest the previous statement in their own `SELECT` statements, I just take the existing dataframe and chain another `.select()` off of it.Overall this gives you more flexibility and expressiveness, but requires a slightly more complex approach. That tradeoff isn't necessarily for everyone, but it doesn't make one option absolutely better or worse than the other, it just depends on what you *want*.---As others have mentioned, they're not inherently exclusive. While using an RDBMS as your execution engine may prevent effective use of dataframes, using a dataframe-based execution engine you can also write SQL. Spark allows you to swap back and forth between SQL and dataframes (https://spark.apache.org/sql/) ; [Polars can also do it](https://docs.pola.rs/api/python/dev/reference/expressions/api/polars.sql.html) ; and [Daft is bringing it in too](https://www.getdaft.io/projects/docs/en/stable/sql/overview/#example)",azirale,2025-04-11 02:25:28,8,dataengineering,t3_1jw8ov7,False,
mmgg5rl,"Performance wise, is the same. The catalyst does the same work - so, it’s really up to each one.I met people that don’t like SQL and prefer the DF API. We can say that if using DF API can be easier if you want to cache between transformations",Apolo_reader,2025-04-10 21:07:39,4,dataengineering,t3_1jw8ov7,False,
mmid1j6,"I think everyone else summarized it well, but I'll put this out there: who are you working with for this system and what is their preference? I'm building a data lake now and I suspect my next hire will have general Python experience but little SQL, so I'm making sure the path is clear for dataframe APIs.",wetfeet2000,2025-04-11 04:07:52,1,dataengineering,t3_1jw8ov7,False,
mmiistq,i like easy things bc I'm a moron. sql is for people like me. why would you complicate things.,vikster1,2025-04-11 04:55:16,1,dataengineering,t3_1jw8ov7,False,
mmizzca,"In my experience, projects done in Spark API (both Scala and Python) are way easier to maintain and understand, given how much flexibility you get when it comes to dividing the logic in more comprehensible ways, using constants and reusable functions, and overall readability of the code. This obviously is heavily based on experience, as someone that has been coding on SQL for 20 years will find that way easier to work around, but IMO those thousands lines long SQL files are way worse to work around if someone that isn't familiarized with the project needs to debug or modify anything.",iwanttest,2025-04-11 07:40:59,1,dataengineering,t3_1jw8ov7,False,
mmjt1ri,"As an engineering leader, I push my data engineers to behave like engineers… code, write tests, test in dev, pull request for code review and deploy to prod. Then Ops deploys and supports code. Benefit: we don’t have untested code running in prod (random sql delete/update anyone???) and date engineers are focused on building, not supporting. You can do this with either SQL or Python. I prefer Python.",Wistephens,2025-04-11 12:09:47,1,dataengineering,t3_1jw8ov7,False,
mmkjqkn,"Sql for a dev team. It’s one of the few ubiquitous pieces in DE. Easier to migrate, more people know it.",boboshoes,2025-04-11 14:40:58,1,dataengineering,t3_1jw8ov7,False,
mm0ds14,Started in Chemistry. Saw people doing DE wrong. Lost job during pando. Taught myself DE and data related stuff. Became a DE.,MikeDoesEverything,2025-04-08 10:12:57,20,dataengineering,t3_1ju9kqo,False,
mm0jte5,"I started as a Systems Analyst where my team did everything in excel. It would take up to 2 weeks to do a regular analysis and it was a nightmare. Being familiar with software development, I knew there were ways to streamline this and by the end of my two years, I got the analysis time down to a few hours and eliminated common manual errors.I built a clumsy C# app (roommate was a C# developer) to structure the data and then loaded it into a MSSQL database where I wrote a series of SQL scripts to produce the report outputs.Needless to say I later discovered this was an actual field and learned the proper tools lol.",teh_zeno,2025-04-08 11:07:12,12,dataengineering,t3_1ju9kqo,False,
mm0bcxx,"I did, was a computer science undergrad and joined a local data hackathon, and was hooked immediately. Did internships and started my career as a data engineer, and the rest was history.",ineednoBELL,2025-04-08 09:48:31,7,dataengineering,t3_1ju9kqo,False,
mm0hbx8,"started as electronic engineer. Navigated to ELV engineer in construction site. Navigated to ERP BA in real estate. Then now, data engineer in aviation.",IshiharaSatomiLover,2025-04-08 10:46:19,4,dataengineering,t3_1ju9kqo,False,
mm0fsbl,"Started as data scientist, realised not my cup of tea . Switched to more technical DE … now am having 3 yoe",chaachans,2025-04-08 10:32:20,3,dataengineering,t3_1ju9kqo,False,
mm2dk47,Started as a data analyst. Got consistently screwed by stakeholders providing bad data and Murphy's law striking when it hurt most. Said fuck it all and switched to data engineering.,git0ffmylawnm8,2025-04-08 17:16:03,3,dataengineering,t3_1ju9kqo,False,
mm0r2o1,"I did CS, loved coding + data science, learning both simultaneously, don't know which I should choose and got the DE opportunity. Now enjoying the best of both.",LaughWeekly963,2025-04-08 12:02:25,2,dataengineering,t3_1ju9kqo,False,
mm2kwnk,"I took the convoluted route.I started as research staff in higher ed, essentially a DA. I ended up as the director for the institutional research team, where I wrote some software for the university library to automatically harvest their usage data. It was just some basic data pipelines, back before that phrase was super commonplace.The librarian I was working with wanted to open-source the tool for libraries across the country to use, which I was happy to do; most libraries would love to have a turnkey solution for getting, cleaning, and storing their usage data. Anyway, that tool kind of blew up a little more than I expected with librarians across the country, and eventually a librarian who was familiar with my work reached out about a job at Deloitte, since he had moved over there as a SM.That was the first place I actually had the ""Data Engineer"" job title. Been a fun ride ever since.",JohnPaulDavyJones,2025-04-08 17:50:09,2,dataengineering,t3_1ju9kqo,False,
mm0pt4h,"Long story. I went to a technical highschool, I started programming at 14 (25 years ago). Got a highschool diploma in Data Processing and immediately got into college on Computers Engineering. I struggled a lot with discreet math and I didn't have a study group, so I decided to radically change my career to Urban Planning instead. I graduated from college and worked in urban planning until I had to leave my home country due to economical and sociopolitical crises. I worked in whatever I could find in order to survive, until I understood that remote jobs that paid in dollars was the way to go. I stumbled upon Data Engineering while doing research on what remote jobs paid well and decided to go back to programming. In 2022, I took a Data Science boot camp and fell I love with it. I got a job as a data engineer in a startup and I've been there since, though tbh it hasn't been what I was expecting. I'm the only data person in the entire company and I lack so much experience that I have no idea how to organize things. I've been doing more machine learning than anything else, and sure, I've learned a lot, but I'd love to have a senior or someone with more experience to kind of show me the way, procedure, good practices, governance, etc. I like data engineering, I like organizing, cleaning, standardizing, and troubleshooting, but it's hard when you don't even know where to begin or how to do things correctly. So yeah, that. Cheers",urbdaniel86,2025-04-08 11:53:25,2,dataengineering,t3_1ju9kqo,False,
mm0s583,Started as a computer science major. Got a job in the federal government which was supposed to be front end development and ended up being your standard IT programmer analyst job working with a front end too and this database called sql server. Once I had sql on my resume I couldn’t get away from those jobs.,grapegeek,2025-04-08 12:09:52,1,dataengineering,t3_1ju9kqo,False,
mlvgfkx,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-07 15:03:24,1,dataengineering,t3_1jtnfa3,False,moderator
mlvtgca,Cloud,ArmyEuphoric2909,2025-04-07 16:10:23,8,dataengineering,t3_1jtnfa3,False,
mlvti3f,"Remove oozie, blockhouse, and jira, move NoSQL up further, and make scala optional and you’re in a pretty good place I think. Can probably substitute Hadoop for spark / databricks as well.",rewindyourmind321,2025-04-07 16:10:38,5,dataengineering,t3_1jtnfa3,False,
mlxrszc,"I would mainly focus on data warehousing, pandas, git and airflow. Start using the basics of git on your data project. Then if pandas seems like it will be helpful learn enough pandas basics for your project. Continuously learn about data warehousing. Learn the basics of airflow at the end of your data pipeline so you can orchestrate it, unless your company wants to use something else. After you’ve built the data pipeline for your company, then you’ll have a better idea on what to learn that will be useful to what you are working on.",SalamanderMan95,2025-04-07 22:15:15,4,dataengineering,t3_1jtnfa3,False,
mm2imn1,"you need to start with data modeling fundamentals, read Kimball's The Data Warehouse Toolkit.If you don't understand that then no matter how fancy or fast are your pipelines, you will produce trash. The next book after Kimball's or you can read it in parallel if you get bored: [Fundamentals of Data Engineering](https://www.amazon.de/-/en/Joe-Reis/dp/1098108302)Here's also a list of books: [https://www.reddit.com/r/dataengineering/comments/1491swe/a\_mustread\_data\_engineering\_collection/](https://www.reddit.com/r/dataengineering/comments/1491swe/a_mustread_data_engineering_collection/)",a-vibe-coder,2025-04-08 17:39:48,2,dataengineering,t3_1jtnfa3,False,
mm3ri7c,"Any cloud, git and frameworks like dbt, prefect, dlt, pyairbyte...",Intelligent_Volume74,2025-04-08 21:15:54,2,dataengineering,t3_1jtnfa3,False,
mlx93ce,"Data modeling, and how to structure a project, how to go about it, and optimize it.A couple of new languages is not that important, being better at what you do regardless of the stack is worth much more.Also, why pandas? Single node, and mostly used for learning not production. Oozie is for Hadoop, which everyone have dumped and if they haven't they are using Ozone anyway. Scala is only used by companies who use it all other places already. PostgreSQL administration? Good/fun to know but if you arrive at a project where it is used, there's DBA's to handle that stuff already.",Gnaskefar,2025-04-07 20:33:45,3,dataengineering,t3_1jtnfa3,False,
mlxgww1,"I find it sometimes help to start from the beginning - set up a DWH and several workflows using the tools you outlined above. If you're interested, Exasol offers a free version of its database which you can install on your machine - could be a good way to work through the process from the beginning! [https://www.exasol.com/free-signup-community-edition/](https://www.exasol.com/free-signup-community-edition/)",exasol_data_nerd,2025-04-07 21:14:51,1,dataengineering,t3_1jtnfa3,False,
mlzuf9c,"Learning cloud tools (Azure/AWS etc) will up your game. Sometimes it may overlap with platform engineering/devops. Just focus on one, i suggest AWS, learn how to integrate their products for data engineering, at the same knowing how the settings/config will affect your costs. So that you will have several design pattern embedded on top of your head. This way, you'll be able to be a consultant or open up own shop one day, who knows.",ppsaoda,2025-04-08 06:45:06,1,dataengineering,t3_1jtnfa3,False,
mm2geyd,RemindMe! 7 days,Fresh_Forever_8634,2025-04-08 17:29:32,1,dataengineering,t3_1jtnfa3,False,
mmboz9m,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-10 02:33:16,1,dataengineering,t3_1jvnir6,False,moderator
mmckt1s,"Edit: Maybe worth looking through the Data team at GitLab's repo[https://gitlab.com/gitlab-data/analytics](https://gitlab.com/gitlab-data/analytics)[https://handbook.gitlab.com/handbook/enterprise-data/platform/dbt-guide/](https://handbook.gitlab.com/handbook/enterprise-data/platform/dbt-guide/)I would imagine those guys probably follow best practices. Original: I'm curious about this as well, especially on the enterprise side when it comes to a production grade ingest script. I would imagine maybe looking at an airflow deployment for some kind of open source data warehouse exists. I forget but some cities like New York have their data engineering team repos on public githubs that could be a start.I'm curious to see what DEs, especially former SWE DE's have to say.I think for what I'd call ""software engineering"" with python, something usually reserved for C# or Java developers and usually only comes into play when we think of the subset of Web + Python developers who make full stack apps with Django or Flask, there's not that much out there maybe for non web developers?Best I can find are:\- [Fluent Python](https://www.fluentpython.com/), usually cited as one of the best for idiomatic python development\- [Effective Python](https://effectivepython.com/), similarly well regarded like Fluent\- [High Performance Python](https://www.oreilly.com/library/view/high-performance-python/9781492055013/)\- [Robust Python](https://www.oreilly.com/library/view/robust-python/9781098100650/), probably the closest for ""SWE"" book\- [Obey the Testing Goat](https://www.obeythetestinggoat.com/) or Python Testing with Pytest depending on which testing framework you want to use\- [Cosmic Python](https://www.cosmicpython.com/), another ""SWE"" book but more focused around web developers\- [Serious Python](https://nostarch.com/seriouspython), another ""SWE"" bookThe only course I've seen is:[https://github.com/dabeaz-course/python-mastery](https://github.com/dabeaz-course/python-mastery) from David Beazley quite well regarded on Reddit from what I can tell.",data4dayz,2025-04-10 06:50:42,9,dataengineering,t3_1jvnir6,False,
mmci7vh,"This might not be what your looking for theres some sensational youtubers out there training python . get a premium youtube account for no ads, then fill your boots.",tbot888,2025-04-10 06:24:54,1,dataengineering,t3_1jvnir6,False,
mmcllc8,Awesome thanks!,casematta,2025-04-10 06:58:38,1,dataengineering,t1_mmckt1s,True,
mmdevt3,Name some sensational good python tutors on YouTube?,silverstar3,2025-04-10 11:44:26,3,dataengineering,t1_mmci7vh,False,
mmcmaoy,"Yeah you're welcome, I'm in the same boat! Unlike other languages which seems like there's software engineering best practice books and courses pouring out of every nook and cranny, with python it's just ""lmao you don't do webdev? Can I interest you in some ML? No? Wtf do you want with me?""",data4dayz,2025-04-10 07:05:51,3,dataengineering,t1_mmcllc8,False,
mmovi23,"Financial services based, so may skew the numbers slightly, but for us the bands roughly look like:Junior DE (aka grad scheme etc.) c.35-40kData Engineer: 45k-55kSr Data Engineer: 60k - 90k (big range as people spend a few years at this level)Lead Data Engineer: 85k - 110k Engineer Mgr type role : (100k + & no technical cap as in youd move off a band at this point)The above is base salaries, so doesnt factor in any pension contributions from the firm, or potential bonuses etc",Some_Grapefruit_2120,2025-04-12 05:47:55,10,dataengineering,t3_1jx3e2c,False,
mmp0y3p,"I’m mid level, just outside london. Started on 55k 4 years ago. On 75k now. A lot of that is just from annual pay reviews 2.5% - 5% every year really stacks up. The salary we advertise for vacancies is 55-60k for 2+ years experience.",Queen_Banana,2025-04-12 06:41:10,11,dataengineering,t3_1jx3e2c,False,
mmpii8e,I can share mine. Hybrid (2 days a week in office) role in consulting. Senior Engineer - 68K base + 20K bonus.,animasapiensi,2025-04-12 09:43:19,6,dataengineering,t3_1jx3e2c,False,
mmqdxmg,"9 YoE, faang, ~£145k total comp",praise-god-bareback,2025-04-12 13:51:03,6,dataengineering,t3_1jx3e2c,False,
mmpp1bz,"I suspect mine is probably going to be a bit of an outlier due to the industry I am in now, so I will include current and former. ​I am a lead data engineer / head of data at a trading firm on £115k +20-30% bonus. Its hybrid but 4 days a week (might be 3 in the future).I used to work at a tech startup (senior data engineer) and my salary there was £85k, and it was basically fully remote.For context, I have 5 years of experience. This is also my 6th job (LMAO - makes me sound terrible, but there is a good reason for all the switching)",Yabakebi,2025-04-12 10:49:52,6,dataengineering,t3_1jx3e2c,False,
mmv8x8t,85k + (10-20% performance based bonus) Mid/Senior DE at financial institution just under 6 YOELondon based hybrid 3 days in office,lvl2311_dumpling,2025-04-13 08:46:37,3,dataengineering,t3_1jx3e2c,False,
mmp6r0g,"I'm a Lead Analytics Engineer for a London start up, currently on £80k (Hybrid 1 day a week in the office).I've recently accepted a £65k offer for a Data Engineer role outside of London, fully remote. Took the paycut to work in a role which is more focused on EL, architecture, engineering rather than T, hoping this will help with future career progression, pay and employability.",handsomeblogs,2025-04-12 07:39:51,4,dataengineering,t3_1jx3e2c,False,
mmqiwh0,"hijacking this thread to ask if any Americans have advice on landing a DE job in London?currently a DE with ~4 YOE in the US but am hoping to move to the UK soon to be closer to family. unfortunately my company doesn’t have any overseas offices I could transfer to, so I’ll have to find a new job but am unsure about the visa sponsorship process",donhuell,2025-04-12 14:19:02,0,dataengineering,t3_1jx3e2c,False,
mmnfu6j,Juniors: 25-35kMid: 40-45kSenior: 50-60kRemote roles are very difficult to get.,Ok-Obligation-7998,2025-04-11 23:42:03,-17,dataengineering,t3_1jx3e2c,False,
mmppcni,"Yep, this sounds about right from what I have seen although at some places you can get 150k+ even as a senior, but the numbers you are showing are what someone can expect more reasonably (doesnt hurt to try for the bigger numbers if by financial services you mean the trading space though)",Yabakebi,2025-04-12 10:52:48,3,dataengineering,t1_mmovi23,False,
mmh0vc0,"There is no such thing as rules. There are “best practices” that are just generally accepted ways of doing things that work well in most cases. If the way you are doing something now doesn’t work, try something else. I promise you Kimball isn’t going to send the Power BI police after you if you try to build your model using one big table.",ThePonderousBear,2025-04-10 23:00:43,26,dataengineering,t3_1jwas79,False,
mmi5lsp,"If it works it should be fine. You know the rules and you know how to apply them, so you should be able to break them when it makes sense.> In theory this could reduce the memory footprint (I'm estimating by maybe 25-30%) at a potential small cost in terms of calculating some measures at the lowest grain. Have you checked the size in DAX studio or any other tool to be sure? Also, have you considered telling management that paying for a better capacity instead of you wasting time on over optimizing Power BI models is cheaper, and they can put you to better use? I know management is retarded, but if you tell them how much time you're spending on over optimizing and research, you may save yourself some dumb work.",jajatatodobien,2025-04-11 03:12:41,8,dataengineering,t3_1jwas79,False,
mmgznww,"What is more work but I think would be a better pattern is to instead of loading the data warehouse into Power BI, instead curate data mart tables where you pre-aggregate to the necessary resolutionand then serve that up.Yes, this approach is a lot more work but you end up with better overall analytics because instead of folks calculating things differently based on your fact and dim tables, those business calculations instead exist in the data mart layer. Also, instead of making them do all of the joins, you do it for them and provide easier to use tables. This leads to significant dashboard performance improvements as well.At that point, your PowerBI folks are just responsible for making dashboards.This should also resolve your minimum capacity issues.",teh_zeno,2025-04-10 22:53:54,6,dataengineering,t3_1jwas79,False,
mmhn8tj,"It sounds like you're creating, in modern parlance, a ""gold layer"" for specific consumption use cases.Keep the two underlying facts in place for good data hygiene and maintenance. Create your consumption view / gold layer / data product over the top and do your reporting off that.",tolkibert,2025-04-11 01:14:45,3,dataengineering,t3_1jwas79,False,
mmi2v2t,"Not sure what your source is, but can you push some back to th database layer by using a composite model? Import the higher grain table and use drill-through to get to detail on the lower grain with DirectQuery.",unpronouncedable,2025-04-11 02:53:42,2,dataengineering,t3_1jwas79,False,
mmi3a9k,Are your keys really taking that much memory? What data type are they?,unpronouncedable,2025-04-11 02:56:36,1,dataengineering,t3_1jwas79,False,
mmj8uff,Make sure to have aggregations at the higher grain as well if possible. Some measures at the lower grain joining is just performance nightmares.,-crucible-,2025-04-11 09:16:16,1,dataengineering,t3_1jwas79,False,
mmlvpg3,"Having header/detail tables is already breaking Kimball rules/recommendations, so undoing that situation would actually be improving your ""compliance"" with Kimball.You should do this by eliminating the header table. As per possibly the most important Kimball modelling rule of all: always model at the lowest granularity.",sjcuthbertson,2025-04-11 18:36:59,1,dataengineering,t3_1jwas79,False,
mmmzwhi,Power BI is just a reporting tool. You should not be using it to process any star or report data preparation logic unless the volumes are trivial.,cosmicangler67,2025-04-11 22:07:21,1,dataengineering,t3_1jwas79,False,
mmhqn6t,"Kimball’s rules went out the window when we got highly efficient map-reduce engines like spark, columnar data storesthat are optimized for wide and deep tables, storage being close to free and the advent of horizontally scalable clusters. There is essentially no reason for domain tables anymore. You can denormalize that stuff directly into fact tables, put some liquid clusters and partitions on it and it will out perform a Kimball style data model every time in modern hardware and data stores.",cosmicangler67,2025-04-11 01:35:58,-2,dataengineering,t3_1jwas79,False,
mmgwpa9,There's an interesting reason in the properties of numbers that's a little technically involved. But the short version is integers can be stored on disk in 1 to N bytes even if they require up to N bytes. Smaller values don't require the full space. That is not the case for a UUID/Blob data so they will always use the 16 bytes allocated to them when stored on disk even if they do in memory.  https://sqlite.org/fileformat2.html#varintTL:DR numbers are smaller than UUIDs on disk when you change to UUID small numbers take up more space. > Any tips on reducing that overhead while still using UUIDs?First suggestion. Don't worry about it for 600MB unless this genuinely matters. *IF* It genuinely is worth the effort. Try splitting the UUID into two 16 bit numbers and decode the UUID into two 16 bit numbers and re-render as a UUID on the way back out.,tdatas,2025-04-10 22:37:06,30,dataengineering,t3_1jw9ukx,False,
mmgr3z9,SQLite is not doing any compression and string is an expensive field implementation wise.,CrowdGoesWildWoooo,2025-04-10 22:05:32,7,dataengineering,t3_1jw9ukx,False,
mmk7r8v,"Not sure how SQLite is storing them, as strings or bytes. At minimum, you have 36 bytes for the UUID. If they just store it as a string, you probably have the dashes, which brings it up to 40. If the string field is double-byte strings to hold Unicode, that's 80 bytes. But, even if it's not a double-byte string, then there is an index because it's a PK?",Captain_Coffee_III,2025-04-11 13:39:53,1,dataengineering,t3_1jw9ukx,False,
mms0vqu,"For anyone looking through this post in the future, this is what I ended up doing:```pyimport uuidimport peeweedef to_signed_64(n):""""""Convert unsigned 64-bit int to signed (SQLite-compatible).""""""return n if n < (1 << 63) else n - (1 << 64)def from_signed_64(n):""""""Convert signed 64-bit int back to unsigned.""""""return n if n >= 0 else n + (1 << 64)class UUIDModel(peewee.Model):uuid_high = peewee.BigIntegerField()uuid_low = peewee.BigIntegerField()def set_uuids(self):if not self.uuid_high or not self.uuid_low:u = uuid.uuid4().inthigh = u >> 64low = u & ((1 << 64) - 1)self.uuid_high = to_signed_64(high)self.uuid_low = to_signed_64(low)@propertydef uuid(self):high = from_signed_64(self.uuid_high)low = from_signed_64(self.uuid_low)u = (high << 64) | lowreturn str(uuid.UUID(int=u))```Now I just use `UUIDModel` instead of `peewee.Model` in all my models. This adds two 8-byte fields to the model, which is exposed as a single `uuid`. The size increase per row is around 19 bytes (8+8+some extra), my db went from 400mb to 450mb, which is quite reasonable. You must call `set_uuids` before trying to save the model to database (can be embedded in save() but I intentionally made it explicit). I am not checking for uniqueness, neither I am making it an index, this works well for my use-case, may not for everyone.",iaseth,2025-04-12 19:03:43,1,dataengineering,t3_1jw9ukx,True,
mmgxmvr,Thanks for the explanation (and the link),iaseth,2025-04-10 22:42:25,4,dataengineering,t1_mmgwpa9,True,
mmh9bz5,"Agree with ""if you need true uuids, it's worth it"".If GENERATE SEQUENCE BY INT64 is not enough (e.g. risk of someone regenerating the ids is high), the UUID is worth being able to sleep soundly knowing it's impossible for someone to generate an ID collision",NortySpock,2025-04-10 23:50:06,4,dataengineering,t1_mmgwpa9,False,
mmgtvp2,"Looks like you are correct. Isn't that pretty bad for something so widely used. For some tables, the full row is just 20-40 bytes, so having the index itself take 80 bytes is terribly inefficient. Do people using sqlite not use uuids at all?",iaseth,2025-04-10 22:21:00,3,dataengineering,t1_mmgr3z9,True,
mmgybu7,SQLite doesn't have a UUID so it's possible but I'd be surprised and disappointed if an ORM did something as amateurish as storing a UUID as a text.,tdatas,2025-04-10 22:46:23,3,dataengineering,t1_mmgr3z9,False,
mmkgjw0,"Uuids are 32 hex digits, so 16 bytes. That's how much should take in postgres/others, some extra for index.",iaseth,2025-04-11 14:24:58,1,dataengineering,t1_mmk7r8v,True,
mmj57dp,"I swapped to true UUID because it started really bothering me that issues would be created then deleted, not soft delete, and sequence numbers would be out of sequence.Absolutely petty, but the extra space has been worth it at night.",umognog,2025-04-11 08:37:07,2,dataengineering,t1_mmh9bz5,False,
mmuxkck,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-13 06:48:21,1,dataengineering,t3_1jy1n56,False,moderator
mmv12ws,"If it feels looks or feels like a shortcut it's probably not worth it. Personally I'd not touch Fabric with a 40 foot pole if I were moving (again) from BI dev/analyst to DE.Get Python, some kinda compute and storage, some files and figure out how to make them go from over there to over here doing some stuff along the way. I for better or worse got to cut my teeth with on-prem, Microsoft products like SQL Server, SSIS, SSAS, SSRS, Power BI and QlikView. Awful really by today's standards, but learned a lot. Fortunately I was SWE before all this so when we shifted toward Databricks + Python it was easy for me to pickup from my coding background added to the DE lessons I'd got from the legacy systems.",domwrap,2025-04-13 07:23:45,43,dataengineering,t3_1jy1n56,False,
mmv6lia,"Fabric has a long list of problems, but if you can solve them there are real opportunities for DEs. An example of a major problem is managing excessive resource utilization. You can address this with intelligent and efficient use of Spark Notebooks, which relatively few people specialize in with fabric. A good engineer can literally save a large company 100s of thousands of dollars. So Fabric is a bit of a shit platform, but opportunities exist.",Ok-Shop-617,2025-04-13 08:21:15,6,dataengineering,t3_1jy1n56,False,
mmv5go1,"The two most commonly used platforms are Snowflake and Databricks. I personally prefer Snowflake over Databricks for someone getting started as it is a little more straightforward when getting started. Both platforms have a lot of depth, but starting with Snowflake you can just set up a trial account, load some data, and then run some SQL queries.That being said, I think time permitting getting a surface level understanding of each service would be good. Both have entry certifications that could be worth going for to both direct your learning as well as bolster your resume.With either platform, it is crucially important you understand how resources + cost work and to shut down resources when you aren’t using them.",teh_zeno,2025-04-13 08:09:14,4,dataengineering,t3_1jy1n56,False,
mmyj82s,"Fabric is just an interface to interact with infrastructure and solve analytical problems. Focus on the fundamentals (sql, python, spark, data modelling principles and best practice patterns), and everything else will fall into place, regardless of the platform. Fabric has a lot of momentum behind it, but deciding on a specific certification should be more about the immediate benefit you would see from doing it. If you're working in a Microsoft-aligned environment, get it, if not, get something else.",FaithlessnessNo7800,2025-04-13 21:08:31,2,dataengineering,t3_1jy1n56,False,
mmymvvb,"Don't learn technologies, learn concepts. Don't see this Fabric challenge thing as a shortcut, see it as an opportunity to take a guided tour through the Fabric platform, _and then do the same thing in AWS_. That way you'll see what's fundamental to Data Engineering _as a practice_ and what unique strengths and weaknesses those platforms have in applying those fundamentals.Remember, it's called Data _Engineering_, and while there's some argument that we picked that term just to sound like a real profession, it's worth taking some notes. Do you think bridge engineers start their career by saying ""oh I'm going to be a suspension bridge engineer, and I'll only work on suspension bridges because they've got the coolest conferences""? No, of course not! They learn about the different types of bridges, their strengths and weaknesses, when they're appropriate, and how they fit into the context of the total project. They might have a preference, they might even build a speciality over time. But I'm guessing the best suspension bridge guy in the world is still going to be pretty good at designing a cantilever (idk, I'm not a bridge guy).Tech changes too fast to hook yourself up to a single pony and ride it into the sunset. Even Microsoft, which used to be like a parallel universe to the rest of the industry, has basically reintegrated into the fold.",fphhotchips,2025-04-13 21:29:01,2,dataengineering,t3_1jy1n56,False,
mmwu2k6,There are no shortcuts. The more reliant you are on proprietary companies stack/s to do work the more likely you are to get rugpulled and/or pigeon-holed into commodity operations jobs.,tdatas,2025-04-13 15:47:11,1,dataengineering,t3_1jy1n56,False,
mmx9sp7,There are no shortcuts.,asevans48,2025-04-13 17:08:43,1,dataengineering,t3_1jy1n56,False,
mme4drc,Data janitor?,Hideo_Anaconda,2025-04-10 14:17:44,26,dataengineering,t3_1jvxw0v,False,
mmdwj8e,Database administrator in my opinion. But there’s quite a bit of title crossover in many orgs. Could be data engineer also.,0uchmyballs,2025-04-10 13:36:04,23,dataengineering,t3_1jvxw0v,False,
mmdyowk,Data analyst or business analyst,Keizojeizo,2025-04-10 13:47:59,16,dataengineering,t3_1jvxw0v,False,
mmfuh5p,1990 you are a programmer2000 sql developer 2010 data analyst2020 data engineer2024 data scientist 2025 President of AI,Middle_Ask_5716,2025-04-10 19:22:08,8,dataengineering,t3_1jvxw0v,False,
mme03dh,Data analyst will be the closest based on what you’ve described.,DJ_Laaal,2025-04-10 13:55:24,6,dataengineering,t3_1jvxw0v,False,
mmef5n1,"Something between a Business intelligence and Data engineer. I am in a similar position. But we also write / design new data pipelines and create reports. Sadly we only use solutions like ""on prem oracle"" and oracle data integrator, some sap Middleware and PowerBI.",conschtructor,2025-04-10 15:11:05,5,dataengineering,t3_1jvxw0v,False,
mme2rb7,Also business intelligence dev,MexCelsior,2025-04-10 14:09:23,3,dataengineering,t3_1jvxw0v,False,
mmfe28b,I do that. Our company calls us data engineers but it's some mixture of analyst/dev/support/consultant.,Impressive_Bed_287,2025-04-10 18:01:19,3,dataengineering,t3_1jvxw0v,False,
mmicj2f,Data Archeologist,tardcore101,2025-04-11 04:03:55,2,dataengineering,t3_1jvxw0v,False,
mmfs9dy,"Thanks everyone! Appreciate all the responses, all of these sound like really relevant roles, honestly. Helped me see the overlap more clearly.",Physical_Musician406,2025-04-10 19:10:58,1,dataengineering,t3_1jvxw0v,True,
mm69v6g,Looks like a partial implementation of [reactive streams](https://www.reactive-streams.org/).,seriousbear,2025-04-09 07:13:23,1,dataengineering,t3_1juz5vj,False,
mmcipch,Cool so its an automatic RAG-er with incremental addition of records? For example if I add plan to my calendar it automatically indexes and embeds it for later Retrieval?,Amonkek,2025-04-10 06:29:47,1,dataengineering,t3_1juz5vj,False,
mm963k0,"Super cool, thanks the comment ! IIUC [reactive streams](https://github.com/reactive-streams/reactive-streams-jvm/blob/v1.0.4/README.md#specification) is at a lower level. It's **stream oriented**, and users need to process these streams. It's more flexible and very powerful. Users will need to manage and keep track of states themselves. This project attempts to simplify the state management - focus specifically on data transformation and dataset oriented - users describe a transformation flow **as if** **they're transforming static data**, and this project makes all source updates applied on target automatically. It works for a subset of scenarios (users always care the transformed result of the latest version of the source), and try to make these scenarios really easy for users.",Whole-Assignment6240,2025-04-09 18:22:24,1,dataengineering,t1_mm69v6g,True,
mmghjh8,"I have similarly heard that it's a huge market, very high in demand. But like many markets, it's not about whether you're capable, your skill, or even the market demand. It's about salesmanship. How are your marketing skills? How are your sales skills? Can you do cold contacting to sell your product? And how are your accounting skills and general business management abilities? When it comes tax time, can you do it? How about your customer service abilities? Those will be significantly more important than any of your actual data skills. It's a lack of those things that actually prevents innumerable amounts of people from being successful in running their own business.",Sir-Shark,2025-04-10 21:14:46,8,dataengineering,t3_1jw8p7l,False,
mmi5x46,"Your technical abilities mean nothing. What's important for this is marketing, networking, selling yourself. If you can't do that, you can be the best and get no clients.Look at platforms like Snowflake. They probably have more psycopathic salesmen than technical people.",jajatatodobien,2025-04-11 03:14:55,2,dataengineering,t3_1jw8p7l,False,
mmj4gbt,"The thing you're going to struggle the most in getting buy-in from all of the other people who are wanting to buy your service. If your only credentials are A-Levels, it's going to be difficult.This is not to say you can't.> Have any of you guys had any experience trying to make a living doing this?Most of this sub will be skewed towards having a stable salary rather than entrepreneurship. I'd say the dream data job is decent pay and low stress.",MikeDoesEverything,2025-04-11 08:28:52,2,dataengineering,t3_1jw8p7l,False,
mmgfsmk,How are you planning on competing against the most popular tools?I feel like you're strongly underestimating this.,Wingedchestnut,2025-04-10 21:05:47,2,dataengineering,t3_1jw8p7l,False,
mmgm3b2,"I’ve been toying around with the same idea. I have a BA and Database Administration. I currently run a team of 10: 2 ETL specialist(one front end and one backend), 1 Network Engineer, 1 Technical Writer, 6 Data Analyst at various levels. Personally I do data analysis with the team at large when necessary. We don’t do many visuals we mostly deal with raw data. Anyway - I have also been thinking about starting a Data Contractor Firm. ETL projects, BI, Database Management, and maybe some true analytics with Classification Model. I wanted someone to talk me out of it.",CalendarReal8997,2025-04-10 21:38:40,1,dataengineering,t3_1jw8p7l,False,
mmgj29d,"This is really insightful, thanks! I'm completely new to the advertising scene, and I guess skills with no clients leads to absolutely nothing.Although I could do all those things, and plan on doing them, I don't have any experience. But I have a few connections which could help me get started. If I seriously could turn this into something, discounting projects for exposure and reviews is something I'm willing to do.",Coldmonkey_,2025-04-10 21:22:40,5,dataengineering,t1_mmghjh8,True,
mmi8q29,Good to know. Thanks!,Coldmonkey_,2025-04-11 03:35:15,1,dataengineering,t1_mmi5x46,True,
mmgghww,Good question,nowshadk07,2025-04-10 21:09:23,2,dataengineering,t1_mmgfsmk,False,
mmgk26a,"Not having experience can make things rough, but on the upside, as long as you have the skills, and can follow through with it, doing business for yourself is one of the few places where having no experience isn't actually that big of a deal. If you're confident, can sell yourself and your product and take care of your customers, you can actually go very far even with a shoddy product. There's plenty of garbage developers and consultants and others in every industry that are absolute trash at the thing the sell. But they're great salespeople, so they make a killing. If you're a great salesperson with a great product, then you'll have longevity.",Sir-Shark,2025-04-10 21:27:55,2,dataengineering,t1_mmgj29d,False,
mmgkz2s,"Really helpful, thank you!",Coldmonkey_,2025-04-10 21:32:46,2,dataengineering,t1_mmgk26a,True,
mmcni9h,why not use spark sql?,loudandclear11,2025-04-10 07:18:36,27,dataengineering,t3_1jvr8my,False,
mmdjule,"Try parsing it with sqlglot first. You'll get an AST which you can navigate seamlessly.You code follows an execution flow of the opearstions say read, filter, aggregate and the limit. You need to find a way to convert the SQL into that operations flow.",jaisukku,2025-04-10 12:18:46,8,dataengineering,t3_1jvr8my,False,
mmdwnas,"I am in the same situation since several months now with over 500 procedures/views with 1000-2000 lines each that need to translate into PySpark, the hardest part is when you have the same code but the data is differentNow i hate my life.",HMZ_PBI,2025-04-10 13:36:43,2,dataengineering,t3_1jvr8my,False,
mmeeszn,Spark.sql() won't work?,workingtrot,2025-04-10 15:09:21,2,dataengineering,t3_1jvr8my,False,
mmi3gxp,"I did the exact same thing last month. First, focus on optimizing the SQL query you have. Nested left joins or deeply nested subqueries can get messy, so try to flatten them using straightforward left joins or CTEs. Once you’ve done that, validate the output by using a hash function to compare results. If the output matches the original, then you can confidently move forward with implementing it in PySpark.While optimizing the query, you’ll naturally get a better understanding of the data flow and business logic, which will help you while writing the PySpark logic. This process can be really time-consuming and you have to explain/convince this to your business, rushing it will feel like you’ve entered an Inception movie!",installing_software,2025-04-11 02:57:51,2,dataengineering,t3_1jvr8my,False,
mmdyitr,"Where i work we hva enested CTEs too, the naming of the CTE plays a role, for example we have 4 nested CTEs the first CTE is a, second is b, third is c, fourth is d, and the names help us to detect which one executes first, try to check the naming of the CTEs you haveAlso divide your SQL code into parts, start translating to PySpark part by part, use AI to translate the code and review the code that will give you, execute the code to check if the data of each part matches with what u have in SQLDo data comparisons as well, for example u re migrating a SQL procedure, but in SQL you have numbers, and in PySpark you have different numbers, to check the rows where there differences, create a PowerBI, or PySpark job that uses the hash key technique, which is another topic, you hash every row, then group, and you can find the rows where there are differences",HMZ_PBI,2025-04-10 13:47:04,1,dataengineering,t3_1jvr8my,False,
mmfsvv6,"Copilot, or probably any other similar llm tool is pretty good at it. Went through some of that and typically it was a good starting point.",bub002,2025-04-10 19:14:08,1,dataengineering,t3_1jvr8my,False,
mme5b24,Yeah this is the best practice.. as long as the source system doesn't have any unsupported functions.,Tiny_Arugula_5648,2025-04-10 14:22:23,5,dataengineering,t1_mmcni9h,False,
mmg7y0l,Cause that's how most of the scripts were already written. If I change to spark SQL it will work but create inconsistency in our code,WiseWeird6306,2025-04-10 20:27:22,1,dataengineering,t1_mmcni9h,True,
mmg7zim,As if you didn't already,Joshpachner,2025-04-10 20:27:35,1,dataengineering,t1_mmdwnas,False,
mmoycet,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-12 06:15:15,1,dataengineering,t3_1jxasop,False,moderator
mmozfxw,"Smash Databricks Academy’s free ETL courses—Python, Spark, best practices. Their docs + DataScienceDojo’s YT for combat training. You know Python/Databricks? ‘Advanced ETL with Databricks’ on Udemy. No time wasted on basics.",EffectiveClient5080,2025-04-12 06:26:07,14,dataengineering,t3_1jxasop,False,
mmp0bgw,"ETL pipeline is literally all the transformations but you make it more automated and remove all adhoc-ness. Also about chaining different scripts.Let’s say you have a notebook, if you can make it run end to end without an issue, that’s like 80-90% of the stuffs already.",CrowdGoesWildWoooo,2025-04-12 06:34:55,7,dataengineering,t3_1jxasop,False,
mmq2d8k,What types of pipelines? What type of sources and sinks? You can create a job and schedule it. You can also use Airflow to schedule it. Eventually you want to automate job creation in certain ways.,levelworm,2025-04-12 12:37:33,1,dataengineering,t3_1jxasop,False,
mmozlm2,"Yes, I do know Python and Databricks.",Sweet-Expert-6356,2025-04-12 06:27:42,3,dataengineering,t1_mmozfxw,True,
mm5pg45,It would be good to know what the actual state is that you need keep for whatever you are computing. Are you making time or sequence windowed aggregations? How much data are you processing? What latency do you need?,azirale,2025-04-09 04:09:29,7,dataengineering,t3_1jux0zt,False,
mm60prv,"What azirale said. Grab a calculator and see how much memory you expect to use. If you can fit your state into RAM, you may not need a framework.",rovertus,2025-04-09 05:42:56,4,dataengineering,t3_1jux0zt,False,
mm5wjla,"you can use https://github.com/feldera/feldera for streaming computations ... it supports various streaming concepts like computing on unbounded streams with bounded state (watermarks, lateness etc.) and you can express all your logic in SQL (which gets evaluated incrementally)",mww09,2025-04-09 05:06:22,3,dataengineering,t3_1jux0zt,False,
mm7e73h,Feldera is probably a bet for you,thatdataguy101,2025-04-09 13:04:05,2,dataengineering,t3_1jux0zt,False,
mm5vmnd,http://materialize.com ?,Operadic,2025-04-09 04:58:39,1,dataengineering,t3_1jux0zt,False,
mm6tbgf,Have you heard about Microsoft StreamInsight ?,Nekobul,2025-04-09 10:37:05,1,dataengineering,t3_1jux0zt,False,
mm8zmde,"Had a similar requirement but with larger scale. Have about 100 million unique keys we aggregate on in near-real time, and store for long periods of time (months+). Ingest rate is around 10k to 100k per second depending on the time of day.We ended up spinning up a local ClickHouse server, and created an EmbeddedRocksDB table with a rudimentary key-value schema. That allows us to do batch gets and puts with very little latency, and since it is all persisted to disk it is extremely durable and cost-efficient (don't need much RAM as opposed to Redis).The great upside to this is you don't really need any specialized streaming platform to do it. We use Spark, but it could just as well be in Flink or really any flavor of service you'd like, even a simple Python lambda.",InsertNickname,2025-04-09 17:51:41,1,dataengineering,t3_1jux0zt,False,
mmj5zra,You can take a look at RisingWave: [https://risingwave.com/](https://risingwave.com/) [https://github.com/risingwavelabs/risingwave](https://github.com/risingwavelabs/risingwave) It performs stateful computation over streaming data using Postgres-compatible SQL. Easy to set up and use. I'm working at this company and happy to answer questions you might have.,Abject-Ranger4363,2025-04-11 08:45:39,1,dataengineering,t3_1jux0zt,False,
mm6vzbp,Just to know if the data is processed or not. I will have same data from multiple kafka topics and making sure the resource is not wasted on processing the duplicated data.,Suspicious_Peanut282,2025-04-09 10:59:49,1,dataengineering,t1_mm5pg45,True,
mm6w20v,I can't :face_with_tears_of_joy:,Suspicious_Peanut282,2025-04-09 11:00:25,1,dataengineering,t1_mm60prv,True,
mmsue5m,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-12 21:49:54,1,dataengineering,t3_1jxsce8,False,moderator
mmsvoi3,How is your current role very stable if they eliminated the DS and DE roles. Any company that short sighted on data is one good sales pitch away from “replacing all your analysts with our AI Analysis platform!”,LoaderD,2025-04-12 21:57:26,12,dataengineering,t3_1jxsce8,False,
mmt2yyb,The new offer is not worth the move.,Ok-Advertising-4471,2025-04-12 22:42:03,6,dataengineering,t3_1jxsce8,False,
mmt23dq,Seems like a lateral move. Are you creating a product/service or supporting the business directly?In either case their go forward AI/ML strategy would be a huge factor for me.,ehartye,2025-04-12 22:36:30,4,dataengineering,t3_1jxsce8,False,
mmt0315,"For me the factor you don't mention is your living expenses. 37k is going to take you years at \~145-150k if you are supporting a family/ living at the edge of your budget. The new job is clearly better from an IC perspective as you're not getting pigeonholed into old tech, the salary is higher (both the rate and lack of commute) and remote. If you have any desire to be in people management, or you support a family, or you're in severe debt I wouldn't move.$0.02",No-Carob4234,2025-04-12 22:24:01,3,dataengineering,t3_1jxsce8,False,
mmtl930,"For what it is worth, the skills of the new job are much more in demand. You could likely pivot to a 'Data Engineer' title with DBT/SQLMesh under you belt. But yeah, that doesn't really sound like that'd be worth paying back $37k for your master's at this stage.",CoolmanWilkins,2025-04-13 00:37:58,3,dataengineering,t3_1jxsce8,False,
mmt8kct,"I will stay put and but keep looking. I honestly don’t think the new company’s stack a big step up assuming you want in more technical depth in your career. And in this economy with the trade war and recession might be coming, might not be a good time leave a stable job and going into volatile industries",Ye-MHGen,2025-04-12 23:17:09,2,dataengineering,t3_1jxsce8,False,
mmueyd7,Have you tried negotiating in the new job? Tell them about the claw back and ask if there’s anything they can do to help out I.e signing bonus/higher salary. At the very least push the start date out a month so you can avoid paying the full amount. You’d be left paying back 25k,kamisama100,2025-04-13 04:04:25,2,dataengineering,t3_1jxsce8,False,
mmupov7,"I can understand wanting to change positions for the growth aspect. I took a pay cut about 5 years ago to go from a small business where I was the only analyst to a university where I'd be on a full BI team. I got a promotion 2 years in and am making far more than I was before and have far more transferability.My gut instinct is - go for it. There are things you dislike about your current position, the new offer would allow you growth. The only thing that seems to be holding you back is the tuition repayment. How good's your relationship with that current manager? How long's it been since you finished that degree? Are there ways you could get 'em down from the full amount? I don't want to say $37k's nothing, but also don't like it make you feel imprisoned.",farm3rb0b,2025-04-13 05:32:53,2,dataengineering,t3_1jxsce8,False,
mmwozi9,"My answer would be, no, don't move. From just a money perspective, you would be losing money. **CURRENT**: 126 + 12.6 (bonus) + 25/2 (tuition payback final years) = \~ 151 per year **PROPOSED**: 130 + 13 (bonus) = \~143 per yearIn addition, payed time off calculation would start over. That's also a hit. The numbers don't make sense yet.When you change jobs, it is for a large increase in pay. These numbers make the opportunity look like a COLA adjustment.If the new job is open to a counter offer,* pay your loan off for you with the previous company, call it a signing bonus* 155 base seems more aligned for a move (still with the 10% bonum)This isn't as much as you might think.Things that don't matter: * The tools stack - there is always another one* Remote vs In Office - unless you are commuting a rediculous amount, it's a wash. You have to be somewhere.* The DS/DE may not have been helping the bottom line enough to warrant the cost. * The title - Not one bank I have ever been involved with was impressed by my title, just my W-2Things that matter more than money* Your current manager - you don't work for a company, you work for your manager. A good one is gold* Benefits - this is especially true if you are thinking of growing your family.",marketlurker,2025-04-13 15:20:26,2,dataengineering,t3_1jxsce8,False,
mlzk0b2,Good luck out there. What was the question if you don’t mind me asking?,EarthGoddessDude,2025-04-08 05:08:38,3,dataengineering,t3_1ju3x6z,False,
mm5wjzd,"Time pressure in live coding is the absolute worst - my brain just freezes sometimes even when I know how to solve the problem. The fact that you could explain your thought process well is actually huge - many companies value that over perfect code.Don't count yourself out yet though! I've been surprised before when I thought I bombed and still moved forward. But if this one doesn't work out, remember each interview makes you better prepared for the next one. For what it's worth, I've found doing timed practice sessions on Interview Query really helped me get more comfortable with the pressure. Keep your head up - the right role is waiting for you!",tech4throwaway1,2025-04-09 05:06:27,3,dataengineering,t3_1ju3x6z,False,
mm5d4pv,The clock and your nerves are really your biggest enemy in coding assessments. It gets easier with more practice but it's tough to get a lot of interviews nowadays.,DenselyRanked,2025-04-09 02:44:17,2,dataengineering,t3_1ju3x6z,False,
mmc0ini,"I straight up noped out of a CVS CoderPad interview last year with both a LeetCode Python and SQL question and I'm pretty sure I'm permanently on a Do Not Hire list, so it could always be worse",10choices,2025-04-10 03:52:00,2,dataengineering,t3_1ju3x6z,False,
mmbq2au,Meta?,champagnepapi069,2025-04-10 02:39:35,1,dataengineering,t3_1ju3x6z,False,
mm86gl3,I signed an NDA and don't want to break it. But was a sliding window question (the python one),Significant_Quit_514,2025-04-09 15:31:00,2,dataengineering,t1_mlzk0b2,True,
mm88ta3,"Thanks. If you don’t mind me asking again, did they expect you to use pure python or a library for that?",EarthGoddessDude,2025-04-09 15:42:34,1,dataengineering,t1_mm86gl3,False,
mm898ll,"Pure python, by doing sliding window questions in LC and being comfortable with it, this particular question would be easy",Significant_Quit_514,2025-04-09 15:44:37,1,dataengineering,t1_mm88ta3,True,
mm93l4u,Seems silly to ask LC questions for data engineering positions. Now one will ever need to do it by hand.,EarthGoddessDude,2025-04-09 18:10:21,1,dataengineering,t1_mm898ll,False,
mluklfm,"Python scripts, notebooks suck for production. Will die on that hill",Oct8-Danger,2025-04-07 11:51:45,24,dataengineering,t3_1jthrez,False,
mlvbyge,"I'd commonly say scripts are better, but tbh it depends on your monitoring structure. For example, if you use something like Databricks Workflows that leverages cells outputs for every run, then having notebooks is great for debugging; you just need to click the failed run and, if you have the necesary prints()/show(), you'll catch the error in a second.Other, more common, option is to just use Exceptions so you wont need to see cell outputs. To this end, it'd be up to you.The only 100% truth is that mantaining notebook code is significantly worst that doing scripts, CICD wise.",i-Legacy,2025-04-07 14:40:54,3,dataengineering,t3_1jthrez,False,
mlwipmn,Use notebooks to test queries then put those queries in a script,MateTheNate,2025-04-07 18:17:47,3,dataengineering,t3_1jthrez,False,
mm4wpxs,"I see notebooks as a sort of sandbox with almost free access to anything, even in Prod. However, I don't think they are ""Productionalizeable"" in the sense that they do not make whole applications that can be used by others. Put Prod Ready code in its own script/program and commit it to git.",davf135,2025-04-09 01:07:38,3,dataengineering,t3_1jthrez,False,
mlumxc1,"For production, I'd avoid multiple notebooks. They're messy to maintain and version controlBetter to create modular .py files with your SQL queries, then import them into a main notebook. Keeps things clean and you can actually review the code properly",Mikey_Da_Foxx,2025-04-07 12:09:12,4,dataengineering,t3_1jthrez,False,
mlw0dm8,"Using databricks, “notebooks” are actually python scripts.",CrowdGoesWildWoooo,2025-04-07 16:46:05,10,dataengineering,t1_mluklfm,False,
mm8xb0d,"Yeah, you probably will",boo_on_you,2025-04-09 17:41:02,1,dataengineering,t1_mluklfm,False,
mlw0w77,"Yea databricks “notebooks” are great! Wish it was the standard!Solves a lot of issues like testing, git diffs, and linting which feels like a struggle with ipynb",Oct8-Danger,2025-04-07 16:48:42,5,dataengineering,t1_mlw0dm8,False,
mlzxwyo,"Ditto for Fabric ""notebooks""_(steels himself to be downvoted for mentioning Fabric without cussing it)_",sjcuthbertson,2025-04-08 07:19:53,0,dataengineering,t1_mlw0dm8,False,
mlw9gq2,"I’ve actually encountered so many people who believe databricks notebook are the same as ipynb, glad you’re not one of them lol.",CrowdGoesWildWoooo,2025-04-07 17:31:48,7,dataengineering,t1_mlw0w77,False,
mlsonht,"JSON logging exists for this purpose, especially if your application ships logs to an aggregator such as Splunk",kenflingnor,2025-04-07 01:47:00,30,dataengineering,t3_1jt9xj7,False,
mlsol58,JSON*,solarpool,2025-04-07 01:46:34,16,dataengineering,t3_1jt9xj7,False,
mlstxpm,"I always write machine parse-able logs, even if I don't need them. Also, no variables in the log text. They are k/v pairs in the log. Makes troubleshooting a lot easier.",buachaill_beorach,2025-04-07 02:22:05,3,dataengineering,t3_1jt9xj7,False,
mlt1uus,"You're right, but I think the reason is that you don't always know a good schema for everything you're logging (short of a trivial timestamp, level, message type deal), so rather than handcuff yourself and future applications engineers, you just log as text. If I'm reading Airflow logs, I'm not going to be happier if the message part is in JSON, particularly if it's a long multiline thing, I just need my error message and I'm on my way.",apoplexiglass,2025-04-07 03:16:26,2,dataengineering,t3_1jt9xj7,False,
mm2ncil,"Structured vs unstructured logging is a fight programmers have been having for at least two decades (extent of my first hand experience). I've found it difficult to convince others to log in a more structured format, so I often tail or stream logs to a message bus and then format to my liking (mainly parquet since dictionary encoding saves a lot of $$$ quickly). The observability community has done a lot to help standardize this space with projects like [OTEL](https://opentelemetry.io/docs/concepts/signals/logs/).",Ok_Time806,2025-04-08 18:01:19,2,dataengineering,t3_1jt9xj7,False,
mm5cjcd,"Not sure where you work, but they are DEFINITELY doing logging wrong. Most likely of the world is doing what you are talking about, except for TSV which is a very strange thing to mention",RangePsychological41,2025-04-09 02:40:38,2,dataengineering,t3_1jt9xj7,False,
mmpgj9g,"We're using structlog (made a custom loglib with specific settings for work), which outputs JSON to some volume handled by K8S, and the elastic stack uses Filebeat to grab the files and Logstash for parsing into Elastic (the DB) so we can create a dashboard In Kibana. We can do summations of runtime, averages, count ingested files, track query timings, etc.It's great, and I can't imagine having to manually do this.And if I see someone use a variable in the event name again, I'll have to get the classic trout out to start slapping people with. (if you add a variable to the event name, I can't do an aggregation with filter - grr)",NostraDavid,2025-04-12 09:22:04,1,dataengineering,t1_mlsonht,False,
mms3s67,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-12 19:20:05,1,dataengineering,t3_1jxp3m5,False,moderator
mms4ey0,Don’t bother learning HDFS. We still use it but are phasing it out.,Trick-Interaction396,2025-04-12 19:23:40,14,dataengineering,t3_1jxp3m5,False,
mmsmg59,"HDFS is mostly replaced with any S3 compatible storage layer. These can come in many forms in cloud or on prem. Within the Hadoop ecosystem Ozone is seen as the replacement for HDFS, solving some of its weak points, mainly small file problems, scalability and redundancy at the cost of a little extra complexity.On replication factors: 3 different replicas in three different racks is very reliable within a datacenter. It still is not geo replication across datacenters which is what most big clouds can offer.Nowadays instead of 3 full replicas which costs 3x the capacity, erasure encoding is more often used in different schema’s. Which is similar to raid stripes with parity. You use less storage space with better redundancy at the cost of extra compute to reads and writes.",robverk,2025-04-12 21:03:49,10,dataengineering,t3_1jxp3m5,False,
mmtwej8,"Other commentors covered erasure coding and modern cloud storage well. Some links if you want to read some more - for Microsoft Azure as that's what I work on and know well, but AWS and GCP etc will have similar. https://learn.microsoft.com/en-us/azure/storage/common/storage-redundancyhttps://learn.microsoft.com/en-us/azure/reliability/availability-zones-overviewAzure Storage is HDFS compatible:https://learn.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-use-blob-storageMost of the storage apis are pretty similar, and it's even possible to build a compatibility layer between them (e.g. OneLake Shortcuts can let you use the ADLS api over AWS S3, S3 compatible, GCP, etc storage). Apache Spark is much more widely used now than Hadoop itself. In many ways it's just the next evolution of the same ideas. Apache Parquet is the de facto standard for column-oriented data, and it came out of the Hadoop ecosystem. The table metadata usually is Delta Lake, Apache Iceberg, or Apache Hudi (in no particular order). These are the modern version of say, the Hive metastore from Hadoop days, but less coupled to one engine. These take advantage of the capabilities of modern cloud storage, such as conditional atomic writes of a file. A lot has changed in the past decade, but the fundamental principles from Hadoop remains highly relevant.",warehouse_goes_vroom,2025-04-13 01:53:15,3,dataengineering,t3_1jxp3m5,False,
mmuvq8n,"Some do, don’t think the specifics from 10 years ago are accurate but a lot of general information still applies.Just curious where would a course about HDFE be offered??",newredditacctj1,2025-04-13 06:30:04,1,dataengineering,t3_1jxp3m5,False,
mms4mpi,What's used in place? Thanks for the heads up.,undercoverlife,2025-04-12 19:24:51,4,dataengineering,t1_mms4ey0,True,
mmscxq7,"Mostly cloud like AWS, Google, Azure, Databricks, or Snowflake.",Trick-Interaction396,2025-04-12 20:10:57,3,dataengineering,t1_mms4mpi,False,
mmsdnlj,"Cloudera has Ozone now, which is a next-gen version of HDFS.",chipstastegood,2025-04-12 20:14:58,2,dataengineering,t1_mms4mpi,False,
mmsdsjj,Good for the cloud but not a solution for on prem which is where HDFS is still used.,chipstastegood,2025-04-12 20:15:44,4,dataengineering,t1_mmscxq7,False,
mmsp8yq,Agreed but on prem is less common,Trick-Interaction396,2025-04-12 21:19:56,4,dataengineering,t1_mmsdsjj,False,
mmt4ssb,Whatever pays more and you’re happy in,Impressive-Regret431,2025-04-12 22:53:40,6,dataengineering,t3_1jxswyj,False,
mmvqufk,since when is DE a niche?,Kobosil,2025-04-13 11:47:44,2,dataengineering,t3_1jxswyj,False,
mmw2dmz,"Ex big tech here. Are you ok with landing on a non-data focused team and building services, doing performance stuff, etc instead of the kind of data pipeline work that you seem excited about? If so, SWE could be a good fit. If not, be careful about signing up for a SWE team match that could put you anywhere in a big company, including on a team that isn't necessarily related to what you most want to be working on.Source: team matched at the rain forest as a SWE, got reassigned to a team that had little to do with my professional interests, tried to make it work but ended up very unhappy and quit very quickly.",KilimAnnejaro,2025-04-13 13:13:04,2,dataengineering,t3_1jxswyj,False,
mmtkucp,SWE is drying up. Go for DE.,undercoverlife,2025-04-13 00:35:13,-8,dataengineering,t3_1jxswyj,False,
mmtml8x,"I hear you. But, thats what I am wondering: whats gonna pay more in the long term…",marioagario123,2025-04-13 00:47:04,1,dataengineering,t1_mmt4ssb,True,
mmtmofx,"Interesting take, thanks!",marioagario123,2025-04-13 00:47:40,0,dataengineering,t1_mmtkucp,True,
mmtlqiz,SWEs can literally do DE job with minimal learning curve. The reverse has much bigger learning curve.,Weary-Weight-5875,2025-04-13 00:41:18,-9,dataengineering,t1_mmtkucp,False,
mmw3tu9,"Historically SWE. But that can change just look at the previous 1-2 years with the massive layoffs. So, no one really knows.",Impressive-Regret431,2025-04-13 13:22:28,5,dataengineering,t1_mmtml8x,False,
mmyn1io,In the long term being good at whatever you do will have more impact than what the job title is. If you're doing anything more than clickops/trivial things then the roles will overlap heavily anyway.,tdatas,2025-04-13 21:29:52,1,dataengineering,t1_mmtml8x,False,
mmtmtsy,"Cool but in terms of what this guy is asking for, have you seen the layoffs going on? The majority of those getting fired are SWEs.",undercoverlife,2025-04-13 00:48:40,0,dataengineering,t1_mmtlqiz,False,
mmd8fje,"Having that first staging layer is actually pretty solid. It gives you a safety net for when things go wrong (and they will). Plus, it's way easier to debug issues and reprocess data when you have that source-identical snapshot",Mikey_Da_Foxx,2025-04-10 10:54:33,5,dataengineering,t3_1jvuwgm,False,
mmdcbtl,When you receive the incremental changes from the source systems they should be written as insert-only to your landing stage tables - so you have a complete record of everything you've received and can re-build from this data.If you then want to create a staging layer from these tables that reflects the current state of your source systems then that's up to you - if you think there is a use case/benefit from doing this.,NW1969,2025-04-10 11:25:21,5,dataengineering,t3_1jvuwgm,False,
mmdk9qu,That's how I've handled my data warehouse for my business unit too. In the last 2 years we've made so many changes to how many fundamental systems work that not having a replica of the prod backend DB would mean that we might possibly have missed things over time.,Ursavusoham,2025-04-10 12:21:35,1,dataengineering,t3_1jvuwgm,False,
mmgg99t,"Hmmm, there are multiple thougts that come to my mind. \- We put our data in our staging layer to reduce cost. Some of our sources are pretty slow. If we would let them write on our db directly it would cost a lot more. \- In my opinion you can only add data to your second layer if you are certain that they are good and clean. Therefore you do the cleansing. In the cleansing you could have a filter like upper lower bound, upper lower expected etc. \- Futhermore we have an anti corruption layer in which we define a schema other the one from the source to be more robust against changes. hope these thoughts helped",Ralf_86,2025-04-10 21:08:09,1,dataengineering,t3_1jvuwgm,False,
mmd9hkw,"Thanks for the response! I agre it definitely makes debugging and analysis easier when you have a source-identical snapshot. But one thing I’m still unsure about: if I ever need to truncate and reload SCD tables, I wouldn’t be able to rebuild the historical changes just from that first staging layer, since it only reflects the current state of the source.",BigProfessional7267,2025-04-10 11:03:07,1,dataengineering,t1_mmd8fje,True,
mmdee6n,"Exactly that's what I was thinking too. The main benefit I see with having a source-identical staging layer is that it makes data analysis a lot easier. With just the incremental changes layer, I’d have to deal with pulling the latest row per business key, and that gets complex when dealing with joining multiple tables. So having that current-state helps simplify analysis, even if it’s not the source of truth for historical rebuilds.",BigProfessional7267,2025-04-10 11:40:50,2,dataengineering,t1_mmdcbtl,True,
mme6sn6,"Unless you’re saving snapshots of your raw data regularly, you don’t want to truncate and rebuild your SCD. And backups are everyone’s best friend.",-crucible-,2025-04-10 14:29:52,2,dataengineering,t1_mmd9hkw,False,
mm6shbu,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-09 10:29:30,1,dataengineering,t3_1jv2id3,False,moderator
mm8x67t,"I think of Batch as great for cost-sensitive, but not time sensitive workloads—one example (from AWS I believe) was the Library of Congress converting billions of .TIFF images into PDFs—they wanted to use spot pricing, but didn’t necessarily care if it took weeks or months to finish—so they used Batch to launch a cluster whenever spot prices dipped below a certain level, then stop if/when they increased. For your (and most DE) workloads, there’s much more time sensitivity, you might as well just use ECS. It sounds like you might be missing an orchestration layer though-I suppose Batch provides aspects of that, but take a look at Dagster or Airflow, and you can decouple compute from orchestration.",davrax,2025-04-09 17:40:25,3,dataengineering,t3_1jv2id3,False,
mm75a31,"For jobs that are straight-forward and relatively short, AWS Batch might be overkill.... doesn't seem like features of dynamic prioritization, GPU scheduling, and multi-container job orchestration would be necessary in your case - and better suited for Machine Learning like you specify.",datamoves,2025-04-09 12:08:23,1,dataengineering,t3_1jv2id3,False,
mm7n2wf,"AWS Batch was created as a wrapper around a handful of AWS services to make doing batch jobs easier.While you clearly can run dbt via AWS Batch, it’s a bit overkill since you could just as easily run an ECS Fargate Task and accomplish the same thing.Since the actual “compute” part of dbt is in the data warehouse database, there isn’t anything you can do in the AWS Batch task that would have any impact.",teh_zeno,2025-04-09 13:53:49,1,dataengineering,t3_1jv2id3,False,
mm78wne,The only benefit with batch in this instance is you only pay for what you use whereas with ECS it would be up 24/7 because it’s meant for running services.EDIT: I didn’t realize you can use ECS without defining a service. You can create tasks directly that will stop when the work is done so this seems a bit simpler than setting up batch.,theporterhaus,2025-04-09 12:32:03,-1,dataengineering,t3_1jv2id3,False,
mmd4q05,"Thanks. We schedule these jobs with a legacy scheduler that coordinates with a zillion onprem processes. That was another ball of wax in that launching batch containers is an async call and we need to put a synchronous behavior so we have a script poll for status. But I don't think ECS tasks would make any difference there. There were some little things about secrets or env vars that seemed more convenient (if only because there were fewer options!) with batch CFN than the ECS counterparts but for what we did it seemed like could have done either. Batch does have a small delay relative to ECS tasks, I think, but it's nothing that matters for us.",levintennine,2025-04-10 10:21:35,1,dataengineering,t1_mm8x67t,True,
mm7m2ex,You can do an ECS Fargate task which is also only pay for what you use.,teh_zeno,2025-04-09 13:48:27,2,dataengineering,t1_mm78wne,False,
mm8h3sn,Sure you can set the ECS Fargate service to have 0 tasks when you’re not using it but that’s essentially what Batch does for you when the job is done.,theporterhaus,2025-04-09 16:23:24,2,dataengineering,t1_mm7m2ex,False,
mm8hb9c,"An ECS Fargate Task is not a service - it is a standalone task that runs 1 time.Edit: Now, it is entirely possible you can run an ECS Fargate Service (I've never done this) but my current setup is I define a ECS Task Definition and then use launch\_type = Fargate to run it one time either on a schedule or I trigger it from something like an AWS Step Function. Edit2: Here are the AWS docs talking about this [https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling\_tasks.html](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html)",teh_zeno,2025-04-09 16:24:25,1,dataengineering,t1_mm8h3sn,False,
mm8j2ud,"So you’re saying you don’t need to define a service in ECS to use a Fargate task? Interesting, did not know that but I see it in the docs now:“Amazon ECS tasks can be categorized as either service tasks or standalone tasks. Service tasks are deployed as part of a service and controlled by the Amazon ECS schedule. For more information, see Amazon ECS services. Standalone tasks are tasks started by the Amazon ECS RunTask API, either directly or by an external scheduler such as scheduled tasks (which are started by Amazon EventBridge), AWS Batch, or AWS Step Functions.”https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.htmlThat’s awesome, thank you! This is why I love this community.",theporterhaus,2025-04-09 16:33:09,2,dataengineering,t1_mm8hb9c,False,
mm3j68k,"Worked on a Data warehouse implemented using clean architecture.If your solution is basic, then it's manageable.If your business logic is complex then clean adds additional complexity on top.It's very segmented so it's better suited to small simple solutions",dataindrift,2025-04-08 20:35:44,3,dataengineering,t3_1jukena,False,
mm9njle,"Software architecture principles are very hard to map to data pipelines. Two big differences I see are: - data pipelines interface with databases and API's, so it's no use trying to make abstractions for use cases like User Registration - data pipelines that use SQL (or other high-level abstractions) for transformations don't benefit from adapters that try to hide low-level implementations, since you are leveraging those implementationsAlso, since pipelines tend to break on the data you didn't expect, it's as important to focus on monitoring production and being able to fix forward with frequent, automated deployments, as it is to write integration tests for all the cases you do expect.",scataco,2025-04-09 19:47:36,3,dataengineering,t3_1jukena,False,
mm4csgq,I wouldn't even use clean architecture for software engineering projects.,mailed,2025-04-08 23:12:12,1,dataengineering,t3_1jukena,False,
mm2ulcn,remindme! 2 days,dada-engineer,2025-04-08 18:36:33,1,dataengineering,t3_1jukena,False,
mm3w0gu,what is clean architecture?,roastmecerebrally,2025-04-08 21:39:12,5,dataengineering,t1_mm3j68k,False,
mm68h10,"But, what if you just take principles of it and implement it for larger solutions, for example, having gateways, dependency injection etc, because companies seem to migrate to different platforms so often these days and migrating your business logic always won't make sense, so much waste of resources? What do you think?",Harshadeep21,2025-04-09 06:58:58,1,dataengineering,t1_mm3j68k,True,
mm9p5tt,"By the way, I find Robert Martin's definition of the Application Layer too vague, which leads to never ending discussions. If you like that sort of thing, take a look at the definition for Silver Layer in the Medallion Architecture!(I like Alistair Cockburn's definition of application core - everything that you can test without annoying runtime dependencies - way better. This leads to another piece of advice: if you want automated tests for PySpark code, make sure the code can be applied to in-memory data frames!)",scataco,2025-04-09 19:55:18,2,dataengineering,t1_mm9njle,False,
mm685iy,Reasons pls?,Harshadeep21,2025-04-09 06:55:44,1,dataengineering,t1_mm4csgq,True,
mm2ur0o,I will be messaging you in 2 days on [**2025-04-10 18:36:33 UTC**](http://www.wolframalpha.com/input/?i=2025-04-10%2018:36:33%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/dataengineering/comments/1jukena/clean_architecture_for_data_engineering/mm2ulcn/?context=3)[**3 OTHERS CLICKED THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fdataengineering%2Fcomments%2F1jukena%2Fclean_architecture_for_data_engineering%2Fmm2ulcn%2F%5D%0A%0ARemindMe%21%202025-04-10%2018%3A36%3A33%20UTC) to send a PM to also be reminded and to reduce spam.^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201jukena)*****|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)||-|-|-|-|,RemindMeBot,2025-04-08 18:37:18,0,dataengineering,t1_mm2ulcn,False,
mm70ptd,it's a ring architecture.... brilliant in theory.implementation is a nightmare unless automated,dataindrift,2025-04-09 11:36:34,2,dataengineering,t1_mm3w0gu,False,
mmqj5mh,If you have work experience the degree doesn't matter anymore.,Wingedchestnut,2025-04-12 14:20:28,22,dataengineering,t3_1jxhtte,False,
mmrgyus,I work with a few finance guys. They know nothing about modelling and software practises. Its just a bloody mess.,Ok-Sentence-8542,2025-04-12 17:18:36,8,dataengineering,t3_1jxhtte,False,
mmqh8rt,No.Do a degree if you want a degree. Experience + not being shit > a degree.,MikeDoesEverything,2025-04-12 14:09:45,10,dataengineering,t3_1jxhtte,False,
mmrfco1,"For the vast majority of Data Engineers, the main thing holding them back in their work is their lack of subject matter knowledge. You've got that, in spades - at least provided you stay in the same industry. Focus on the intersection of knowing what needs to be done with the data rather than just how it can be done (that's usually actually the easy part) and your career should go very well.",ambidextrousalpaca,2025-04-12 17:10:41,5,dataengineering,t3_1jxhtte,False,
mmr5x45,"Skills and experience matters, though some company may ask background even grades but in most if you have x years experience you will be shortlisted for interview.",Intelligent-Mind8510,2025-04-12 16:22:09,3,dataengineering,t3_1jxhtte,False,
mmrh46w,"Most of the courses are available on demand either free or in udemy or Coursera. Recommend you to complete CS50 course first. That is the basics to know while in any IT domain. And then pursue related trainings on the data engineering and data architecture on the cloud platform you are working on. To scale up learn networking, private endpoints and administration of the cloud services like Databricks like setting up workspaces and clusters. A full blown college degree is not required.",drgijoe,2025-04-12 17:19:20,1,dataengineering,t3_1jxhtte,False,
mmqkf2h,Thanks!,Fancy_Arugula5173,2025-04-12 14:27:33,2,dataengineering,t1_mmqj5mh,True,
mmqkcy6,Thank you,Fancy_Arugula5173,2025-04-12 14:27:13,1,dataengineering,t1_mmqh8rt,True,
mlw9eue,"For your Python/SQL-heavy team, dbt + BigQuery is solid - it's battle-tested and GitOps-friendlyIf cost is priority, consider running dbt core on Cloud Run instead of dbt Cloud. Works great, just requires more setup",Mikey_Da_Foxx,2025-04-07 17:31:33,6,dataengineering,t3_1jtq6sv,False,
mlxttyj,"I've been working with GCP for two years. We use the medallion schema, with Dataflow and Cloud Composer for ingesting data into the Bronze layer, and Dataform with Azure DevOps to transform data into the Silver and Gold layers.",Savings-Squirrel-746,2025-04-07 22:26:57,3,dataengineering,t3_1jtq6sv,False,
mlyy4vl,Have you looked into SQLMesh? It’s a dbt competitor. They’re doing some pretty cool stuff,kennethnolanmyers,2025-04-08 02:27:45,2,dataengineering,t3_1jtq6sv,False,
mmhb7hu,dbt + BQ is a common pattern.,Hot_Map_7868,2025-04-11 00:01:11,1,dataengineering,t3_1jtq6sv,False,
mlwh8xr,"My team uses dbt core on cloud run. It's pretty good. Our pipelines are simple enough we just run cloud scheduler jobs to trigger cloud run.It seems like some of your organisation wants to stay away from managing too much infra, so starting with cloud composer then moving to self hosted airflow could be a good way to dip your toes.I've had to do a client migration project and dataform is... okay. I would personally busy go ahead with DBT for the better documentation and community packages. Dataform uses JavaScript for their macro functionalities. It's not the end of the world but it's one additional hiccup for you guys.",adiyo011,2025-04-07 18:10:21,3,dataengineering,t1_mlw9eue,False,
mly9sgd,How do you suggest to schedule pipeline run? Should we use Airflow or dbt scheduling?,ducrua333,2025-04-07 23:59:11,1,dataengineering,t1_mlw9eue,True,
mlyamwy,"Yes, we do not have a dedicated DevOps so our priority now is the off-the-self product to focus on building pipelines asap. What do you thing about Cloud Composer 2 vs self-hosted Airflow? Which one is more cost effective?",ducrua333,2025-04-08 00:04:17,1,dataengineering,t1_mlwh8xr,True,
mlyeled,"Self hosting tends to be the cheapest money wise. However, you have to factor in limited time resource and ease of use and time spent troubleshooting, especially since you guys seem to be under a time crunch.Based on Google's cost calculator, even a small instance of cloud composer is about 350/mo at its low end. This would run you maybe about 5k per year which is peanuts IMO with your current constraints. As mentioned, really worst case, start with cloud composer then a few months down the line, you guys can look into self hosting.Another thing to consider, if your pipeline aren't too complex, just do Cron jobs. That's definitely going to be very cheap if you don't really have a need for airflow.How complex are your pipelines?",adiyo011,2025-04-08 00:28:20,3,dataengineering,t1_mlyamwy,False,
mlyxkfa,"Thanks. I can't really say about the complexity by now. basically we have Medallion pipelines, star schema, 50 facts+dims but to be extended, have lots of join, agg, windowing and many tables are dependency on the others. It's not optimal but we will optimize on the way while migrating to cloud. And yes, we would also want to minimize cost of orchestration and prioritize on the compute. Cloud Composer for Airflow is our 1st choice but need cost-effective. Do you think it is suitable?",ducrua333,2025-04-08 02:24:08,1,dataengineering,t1_mlyeled,True,
mlzgcii,"It seems to be that you are talking about data transformations. DBT can handle all of that, assuming you have the staging layers in place. When I think of a general orchestrator, I'm thinking of the things beforehand, of getting the data to your data warehouse in the first place or where things that isn't inherently in a dataset itself.""Medallion pipelines, star schema, 50 facts+dims but to be extended, have lots of join, agg, windowing and many tables are dependency on the others."" This part itself can all be handled within DBT. Can you tell me more about your pipelines in fetching the data and what can't be done outside of SQL itself?",adiyo011,2025-04-08 04:37:21,1,dataengineering,t1_mlyxkfa,False,
mmw9jlv,"Why do you need the Intermediate Queue ? Why not do Kafka -> Go -> WebSockets ?I believe Kafka have ability to do unlimited message retention. Therefore, even if your analytics is slow at pulling the messages, you will not loose your messages.",Nekobul,2025-04-13 13:56:32,3,dataengineering,t3_1jy7sii,False,
mmyioxf,How does this compare to Apache Pinot? https://pinot.apache.org/I believe stripe and a few other big names use it for real time analytics for there customers,Oct8-Danger,2025-04-13 21:05:35,1,dataengineering,t3_1jy7sii,False,
mmwacqm,"I had the same question, OP.",seriousbear,2025-04-13 14:01:08,2,dataengineering,t1_mmw9jlv,False,
mmweftv,"the use of immediate queue is primarily about optimizing the analytics process. The Go processor acts as a filter, identifying the subset of Kafka data that is actually *valuable* for deeper analysis. Sending *everything* directly to the analytics consumer would be inefficient in terms of resource usage (CPU, memory) and processing time. Additionally, tools like redis streams offer vide range of features beyond basic queuing, such as consumer groups with acknowledgements and pending message lists, which can be beneficial for reliable processing in the analytics stage. moreover, use of this architecture would allow me to scale any service independently.",Opposite_Confusion96,2025-04-13 14:24:20,2,dataengineering,t1_mmw9jlv,True,
mmx9qyg,Or why not do it all in Go - NATS can do literally all of that stuff in one system. Or use [Conduit.io](http://Conduit.io) or Benthos + NATS,nickchomey,2025-04-13 17:08:28,1,dataengineering,t1_mmw9jlv,False,
mmwxg2e,"How about writing the processed/filtered data back into another Kafka topic, rather than adding a separate technology for that second part of your pipeline?",gunnarmorling,2025-04-13 16:04:32,4,dataengineering,t1_mmweftv,False,
mmwmaul,Can you use redis streams only ? What's your volume ? I'm mainly concerned by number of moving parts you'd need to manage.,seriousbear,2025-04-13 15:06:20,1,dataengineering,t1_mmweftv,False,
mmwzeb3,First you say the Go code acts as filter and then you say you want to avoid sending everything directly to the analytics consumer. I don't see a reason to have an intermediate queue based on your description.,Nekobul,2025-04-13 16:14:49,1,dataengineering,t1_mmweftv,False,
mmx0mih,"We landed on Redis Streams precisely because it offers those out-of-the-box features like consumer groups with acknowledgements and pending message lists, which are crucial for ensuring reliable and manageable consumption in the analytics stage, something that would require more manual implementation with a second Kafka topic.",Opposite_Confusion96,2025-04-13 16:21:13,2,dataengineering,t1_mmwxg2e,True,
mmwuips,"It's a valid point to aim for fewer moving parts. While Redis Streams could serve as our sole message broker given its support for persistence and consumer groups. we've chosen to include Kafka at the ingestion layer due to the anticipated high message volume. During peak periods, a single device might generate thousands of messages per second. Although introducing Kafka adds complexity, we believe its high-throughput performance and strong durability make it the right choice for handling raw data ingestion reliably and in order. These factors are central to our decision.",Opposite_Confusion96,2025-04-13 15:49:28,2,dataengineering,t1_mmwmaul,True,
mmpvf5y,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-12 11:45:32,1,dataengineering,t3_1jxffmp,False,moderator
mmlt9x2,100k JSON ? Is it JSON or JSONL?,Nekobul,2025-04-11 18:24:43,3,dataengineering,t3_1jwunbi,False,
mmlcp5l,"Durable functions (polling, instead of keeping the connection active). Also why combine azure functions and fastapi? They serve very similar purposes.",Zer0designs,2025-04-11 17:03:18,2,dataengineering,t3_1jwunbi,False,
mmp2mai,It’s an array of json objects,akjde,2025-04-12 06:57:49,1,dataengineering,t1_mmlt9x2,True,
mmljn1j,"I don’t know maybe it’s one of those days, but couldn’t make the durable function work today. Even the one from azure example didn’t work. Everything i’ve read gave me the impression that i need to query again to see the results of transformation, and this is a bit awkward, since they want to see if the results are stored or not, after posting.",akjde,2025-04-11 17:37:05,1,dataengineering,t1_mmlcp5l,True,
mmr4z8z,Please do an experiment and try to process 1k JSON file. Do you see a difference in the performance?,Nekobul,2025-04-12 16:17:13,1,dataengineering,t1_mmp2mai,False,
mmlnlyi,"Azure examples are garbage and durable functions are a drag to setup. You need storage accounts not on a private network but (ofcourse) with firewall enabled. (Use azurite locally instead) to keep state. You basically need it setup in a container or thenproblems will be even worse. I prefer using uv locally and setup just-rust macros to keep the requirement.txt in check.Here's an example that will actually work and illustrates that it can be easy, once setup properly. https://github.com/Azure/azure-functions-durable-python/blob/dev/samples-v2%2Fblueprint%2Fdurable_blueprints.pyHow it then works:1. Send the request, it immediately responds with a polling url2. Poll the request link (is my task finished?) - wait x seconds -> poll the link again3. When the task is succesful e do something.",Zer0designs,2025-04-11 17:56:22,1,dataengineering,t1_mmljn1j,False,
mmp2nrd,Thank you i will try it,akjde,2025-04-12 06:58:13,1,dataengineering,t1_mmlnlyi,True,
mmddbnk,"If it's performing well and the complexity serves a purpose, you're goodThat being said, have you looked at dbt? It handles dependencies, DAGs, and transformations out of the box. Could simplify your setup while keeping the functionality",Smashing-baby,2025-04-10 11:32:56,9,dataengineering,t3_1jvuiqx,False,
mmf9e4f,"I don’t have time to read through your entire document but my immediate feedback is that you have an extra layer you don’t need. Your SQL database should be ingesting and providing cleaned data. If you’re having to pull it out and clean it, then you’re doing this wrong.If, however, your SQL database is already cleaned, then you need to do all of your mathematical calculations/lags/formatting within your queries. All of the work should be done within your queries because that’s what SQL is good at.",undercoverlife,2025-04-10 17:39:10,3,dataengineering,t3_1jvuiqx,False,
mmeyzgo,"Generally it felt like you tried too hard avoiding any re-calculation and shoehorned everything into SQL. E.g. the bonus example, while CTE1 is clearly a SQL task, 2 and 3 definitely can be done in Python. And it's much easier to re-use some values in Python.Then, can it be config driven? E.g. if I want to add some new metrics tomorrow, how hard would it be?And if performance is really a big concern, maybe MySQL isn't the best for analytical use cases. My company recently started using ClickHouse as a ""speed layer"" for some use cases. But I don't know the scale of your project, so probably not really worth it to introduce a OLAP db",gradient216,2025-04-10 16:48:58,1,dataengineering,t3_1jvuiqx,False,
mmgamie,"Instead of one big query, the cte's can be rewritten as update queries and sequentially (according to dependency) organised in a stored procedure. Build separate tables for different granularity.1. Insert Source->fact table1@retailevents granularity (effectively all the transaction records)2.Sequence of update statements to calculate the transaction level kpi3. Insert aggregated records at workday level to facttable24. Calculate the kpi applicable at this level and update the facttable2And so on.This way each kpi can be decoupled and modified independently. Results at each stage can be seen from the fact table.For related literature look for etl, facts and dimension.If the performance hits due to volume of data, it is time to move the analytical queries to its own server. Ideally a separate server is recommended for analytical queries.",drgijoe,2025-04-10 20:40:27,1,dataengineering,t3_1jvuiqx,False,
mmgz10z,"I’ll be completely honest, I’m not understanding the complexity. What you’re describing is that simple sql generation to compute basic metrics on a normalized database. Unless I’m misunderstanding you’re just looking to calculate common metrics at different levels of aggregation. bonus by employee. Or maybe more generally to region. Seeing your queries it appears your data is already in a normalized format. If that’s the case, it seems like a very simple BI tool is more suitable. There’s not really a need for custom metric aggregations especially considering you’re describing a single dashboard. Is there something I’m missing about your situation?",McNoxey,2025-04-10 22:50:19,1,dataengineering,t3_1jvuiqx,False,
mms787w,Topo sorting dependencies comes up pretty often; it's often the only way to schedule things efficiently.Using CTE's to chain the dependencies apparently works for you but not all DB's handle them well. Query planners often duplicate multiple references into a tree structure that re-executes the CTE for each. Aggregating from raw data in each query sounds bad but I've done it on even very large projects; it saves a lot of ETL headaches and can be fast if the DB can store the data in a format that supports aggregation (eg sorted/partitioned on the grouping keys). Pre-aggregation only works in limited cases.One fun thing to try is to dump the dependencies into graphviz format (dot language iirc) and look at the graph there.,KWillets,2025-04-12 19:39:18,1,dataengineering,t3_1jvuiqx,False,
mmhe4sh,"I want to first let you know that I took about 20 minutes to read and try to understand your post.I think your system is well thought out, and provides an intelligently designed set of tools for far less technical people than yourself to self serve their deepest business intelligence questions, in most normal cases. I would LOVE to see the front end for this thing - it sounds like a hell of a project to maintain on your own.But I do have a question - why did you build this and not use an out-of-the-box solution? Edit: Perhaps you might be interested in a project I documented for my portfolio where I built a self-serve analytics environment but using Google products & DBT: [https://dataseed.ca/2025/02/04/bootstrapping-an-analytics-environment-using-open-source-google-cloud-platform/](https://dataseed.ca/2025/02/04/bootstrapping-an-analytics-environment-using-open-source-google-cloud-platform/)",TheGrapez,2025-04-11 00:18:42,1,dataengineering,t3_1jvuiqx,False,
mmdvs2p,"Just wondering, why would a company move from Python to SQL ? the cases i know they move from SQL to PySpark because PySpark offers lot more (version control, CI/CD, Spark, libraries, less code, loops...)",HMZ_PBI,2025-04-10 13:31:43,-1,dataengineering,t3_1jvuiqx,False,
mmdo8n7,"**Hello!** Thanks so much for pointing me toward DBT — I’ve had a look into it. It’s clearly a powerful tool, but since it’s not built for dynamic, runtime SQL generation, it becomes a bit trickier to apply in my case — especially with the dynamic grouping logic I’m working with.The current system *does* work, but I’m starting to feel like it’s a bit too complex for its own good. As things scale, that complexity becomes harder to manage — and I’ve come to realise that **complexity at scale is unmanageable, while simplicity at scale is complex.**Appreciate the suggestion and open to any further thoughts you have!",Revolutionary_Net_47,2025-04-10 12:46:59,3,dataengineering,t1_mmddbnk,True,
mmh85s1,"Thanks for the feedback — I really appreciate you taking the time to respond!Totally agree that SQL should handle the heavy lifting, and that’s actually what this system has evolved toward. I started with Python doing the calculations, but it quickly became inefficient — so now, all the metric logic and maths is done within dynamically generated SQL.The data is already cleaned and structured — but because this is connected to a dashboard, there’s a lot of real-time metric computation happening. Many of the values are derived from user-defined combinations (e.g. grouped by employee, campaign, workday, etc.), so **pre-aggregating and storing everything in the DB isn’t really viable**. We need to calculate many of these on the fly, based on how the user wants to view the data in that moment.",Revolutionary_Net_47,2025-04-10 23:43:12,1,dataengineering,t1_mmf9e4f,True,
mm80gu4,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-09 15:01:09,1,dataengineering,t3_1jv7wf6,False,moderator
mm956kc,"Why not consider the MIT's CS50 focused on Python:[https://pll.harvard.edu/course/cs50s-introduction-programming-python](https://pll.harvard.edu/course/cs50s-introduction-programming-python), its more focused on programming topics, in the regular one you more topics like web dev and encryption. I encourage you to search in this subreddit interview questions in Python because other people gave great **advice** on the types of exercises that they are looking for in candidates to succeed on the jobs, just to mention some examples off the top of my head:* Essential Data Structures: sorting, search, hashing, time complexity for common operations* Working with Files: Understanding buffering, handling large files.* Knowledge of common modules/packages: csv, itertools, sqlite3, os But before that try to ask someone on the company the stack that they use, you can then focus on studying more specific things like Azure or Databricks. Don't forget that data engineers are SQL masters also!",Danzante,2025-04-09 18:18:00,3,dataengineering,t3_1jv7wf6,False,
mm8r5km,"Pick one, then another. Doesn't matter",mrbartuss,2025-04-09 17:12:18,2,dataengineering,t3_1jv7wf6,False,
mm6mfth,"We self-host Dagster OSS on ECS, and overall, it's been working really well for our use case (around 30 jobs, 1000+ assets including dbt, Fivetran, Sling and custom python assets). The main limitation we've run into is the lack of built-in auth and role-based access control, but that alone hasn't been enough for us to justify upgrading to Dagster+ (the paid version).",pandas_as_pd,2025-04-09 09:29:43,9,dataengineering,t3_1jv1dkw,False,
mm6m988,"Only ever used the community version self hosted on ec2 and its been brilliant so far. The only thing id want but dont have is column level lineage (this would involve a lot of work to setup in the first place given i use dbt-core too). Besides that theres nothing I really need from the Enterprise version. That said i've been using Dagster since v0.14 or something around 4 years ago and watched it grow so by the time the enterprise version came around didnt feel like i was missing anything. Only thing I'd do differently is to pick whatever tool im using for the job then orchestrate it with dagster not the other way round. Dont pick Dagster first then find tools to work with it. An example find yourself a good EL tool then see if theres Dagster integrations not limiting to yourself only to tools with Dagster integrations and missing out on good tools because they dont. In my case i really wanted to try out SQL mesh but it doesnt work with Dagster and dbt does hence the dbt usage but SQL mesh had a lot of good benefits over dbt , same with SDF which has now been bought.",CingKan,2025-04-09 09:27:46,4,dataengineering,t3_1jv1dkw,False,
mm6oy0t,"Community's main limitations are no SSO and RBAC. If you're a small team that's fineThe real pain comes when you scale and need audit trails + access controls. Migration to Enterprise isn't bad, but plan ahead for it",Mikey_Da_Foxx,2025-04-09 09:55:34,3,dataengineering,t3_1jv1dkw,False,
mm6nf80,thanks! how big is your team? how many people have access?,Jobdriaan,2025-04-09 09:40:08,1,dataengineering,t1_mm6mfth,True,
mm6nnd5,"thanks! I've seen a lot about sql mesh. decided to just go with dbt since this is my first time doing something like this and don't want to over complicate it.but the more I see it the more I think i could be missing out on not trying out this cool tool on a greenfield project. say i would go with sqlmesh, what orchestrator would i go with then, airflow?",Jobdriaan,2025-04-09 09:42:28,1,dataengineering,t1_mm6m988,True,
mm6pjom,"thanks. How can i plan ahead for it?and for audit trails and access controlls, do this really need to be handled through the orchestrator? or could we handle it through git ops and auditing in the dwh level?does this price of this weight up against an open source tool like airflow.",Jobdriaan,2025-04-09 10:01:28,1,dataengineering,t1_mm6oy0t,True,
mm6ydai,"3.5 data engineers supporting \~20-30 analytics engineers and data analysts.We use a custom solution to restrict access to certain people in the company, but it's not perfect.Almost forgot: the OSS version has a very basic built-in read-only UI, so you can use that for access control.",pandas_as_pd,2025-04-09 11:18:52,4,dataengineering,t1_mm6nf80,False,
mm7hv3v,"great, thanks!",Jobdriaan,2025-04-09 13:25:16,1,dataengineering,t1_mm6ydai,True,
mmlwv67,"We used datafold in a migration from sql server to snowflake. We had a few hundred objects to move and were rewriting our sql server stored procedure into dbt (which was a huge pain, but definitely worth doing <3 dbt) Before finding datafold we were just writing queries to compare the datasets on each side and some key metrics, which was tedious at best. About 30% of the way through the process we got onto datafold and started data diffing the datasets in both places and found a tonnnnnn of random stuff we missed in migration because sql server and snowflake just work differently, like with case sensitivity and extra spaces and date function quirky-ness. We even found issues with our previous load process in sql server that we had no idea about XD. The team is responsive and during the migration we reached out for them to fix or add a bunch of features and they consistently turned them around to keep us moving. Definitely recommend when migrating out of sql server. I have not worked with databricks, so I don't know how closely it matches sql server functionality, but the biggest things that got us were untrimmed values, case sensitivity and date stuff.",Efficient_Ad_8020,2025-04-11 18:42:55,3,dataengineering,t3_1jwn3gu,False,
mmpaws9,We are working with Datafold on a couple of database and ETL migration projects into Databricks. They are an excellent company to work with and have so far delivered on their promises.,Current-Usual-24,2025-04-12 08:22:22,1,dataengineering,t3_1jwn3gu,False,
mmr26hb,"Is it a one time fee for the migration, like consulting services?",captaintobs,2025-04-12 16:02:31,0,dataengineering,t3_1jwn3gu,False,
mmjj83v,"Your options: * NoSQL: Firestore is very cheap * SQL OLTP: Cloud SQL is really your only option, but the Postgres/MySQL options are probably overly expensive for what you are doing * SQL OLAP: BigQuery's first 10gb of storage is free, first TB of queries is free Since you mention a dashboard, I'd just load into BigQuery. Maybe write a Python script to move all your existing data into the cloud. Run your existing pipeline from Spotify in cloud functions or Cloud Run depending on how complex it is. Kick it off with Cloud Scheduler or Workflows. That should do it.",mailed,2025-04-11 10:56:16,5,dataengineering,t3_1jwlp4n,False,
mmkffhd,"Question: why would it make sense in your situation to use a NoSQL database? You don't have enough data to make the complex joins extremely inefficient in a relational database. It also sounds like your data's schema is relatively fixed, so you should be able to take the sqlite data and transition its schema onto one of GCP's relational products, then upload using the data transfer service: https://cloud.google.com/bigquery/docs/dts-introduction. (Maybe push your sqlite data into MySQL first to make this easier.)Are you intending to add a new feature that receives a lot of variable schema events?",KilimAnnejaro,2025-04-11 14:19:22,1,dataengineering,t3_1jwlp4n,False,
mmjjyg5,Is there a reason BigQuery is more suited to a dashboard? Thanks for the answer,ColdStorage256,2025-04-11 11:02:20,1,dataengineering,t1_mmjj83v,True,
mmkhu6o,"I was mostly curious. I intend to keep it in a structured format, however, Spotify's API response is in JSON format with each song recorded as an event.",ColdStorage256,2025-04-11 14:31:23,2,dataengineering,t1_mmkffhd,True,
mmjkily,"Dashboards usually present aggregated figures sliced by some kind of dimension, and that's BigQuery's specialty. It's not a database that's built for highly normalized information or high amounts of write operations. But if you're inserting records in bulk every so often, it's a great choice.",mailed,2025-04-11 11:06:57,3,dataengineering,t1_mmjjyg5,False,
mmjl7u0,BiqQuery can act as a database. Datasets = schemas where you can create tables and views. I would store your data in BigQuery then you can throw a dashboard over top.,greenazza,2025-04-11 11:12:39,1,dataengineering,t1_mmjjyg5,False,
mmjmsxo,"I mean, sure, but I don't see the need in stringing together that many services for a home project handling 20mb",mailed,2025-04-11 11:24:57,1,dataengineering,t1_mmjlr3w,False,
mmrgk83,Pub/Sub writing to BigQuery with several hundred messages per second works perfectly fine.,Budget-Minimum6040,2025-04-12 17:16:38,1,dataengineering,t1_mmjkily,False,
mmj2jcb,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-11 08:08:13,1,dataengineering,t3_1jwkotf,False,moderator
mmj3krt,I'd just use notebooks. I'd never touch holistic data solutions for small local tests or for personal use. Bring in the big guns when you are looking for medium size company needs to enterprise needs. No need to fly a fighter jet if you are only going on a vacation,BadBouncyBear,2025-04-11 08:19:22,6,dataengineering,t3_1jwkotf,False,
mmjvlio,"The benefit of databricks is that it’s effectively a wrapper for Apache spark, which is a distributed computing framework. This means that if you have very large datasets or compute heavy procedures, they will often be more performant. If you’re just doing local ML development, Jupyter notebooks should be perfectly sufficient. Using databricks would probably be overkill quite frankly.",rewindyourmind321,2025-04-11 12:26:52,2,dataengineering,t3_1jwkotf,False,
mmk0caz,I assume this really depends on where your data is and how adept you are at setting up a local environment. The databricks runtimes include a ton of installed libraries (and effectively do environment management for you) and depending on what you’re doing you may not even have to install anything (on the chosen cluster).If your data is already in delta lake / unity catalog that would also make databricks notebooks easier.but if you have a process that won’t set your computer on fire or have it grind to a halt as it runs out of memory - setting up a local environment (preferably without Conda) would be a good exercise and you can use VSCode’s built in jupyter support (and plugin) vs spawning a browser window. and if your data is in a .csv already … even easier to have that locally.,CesiumSalami,2025-04-11 12:56:54,1,dataengineering,t3_1jwkotf,False,
mmja5t2,"Databricks itself has a notebook, if I remembered correctly? Or it is just to say that there really is no purpose of using Databricks at all (even if i use the free version)?",CountProfessional840,2025-04-11 09:30:17,1,dataengineering,t1_mmj3krt,True,
mmmvri9,"It is a .csv file. I usually run Jupyter notebook using anaconda, and why is using VSCode's built in jupyter support a good exercise?",CountProfessional840,2025-04-11 21:44:01,1,dataengineering,t1_mmk0caz,True,
mmjbf4w,"Mate, if you are gonna use pandas on a small dataset there's no reason to use databricks at all. It's a way to abstract away a lot of complexity regarding spark (distributed processing), cloud infrastructure (VMs, storage), data catalog etc.If it's even an option to run things locally on a jupyter notebook then why are you considering using databricks? You move your code there (and it's easy to do, it's all notebooks in the end), when it makes sense to do so, when you will use cloud infrastructure to store and manage data, when your benefit from parallel execution with spark (not pandas) etc",slevemcdiachel,2025-04-11 09:43:25,3,dataengineering,t1_mmja5t2,False,
mmmwbwv,Just using different tools is good and if you ever move away from Jupyter VSCode is a good IDE to work in. I may be biased but if you can start using virtual environments that don’t leverage anaconda it’s also a good exercise. I’ve never seen those used in production data science pipelines.,CesiumSalami,2025-04-11 21:47:09,1,dataengineering,t1_mmmvri9,False,
mmmzxrq,Your advice is well noted. Thank you for your time and I wish you all the best.,CountProfessional840,2025-04-11 22:07:33,2,dataengineering,t1_mmmwbwv,True,
mmfxl05,hackernews,benkaz,2025-04-10 19:37:33,2,dataengineering,t3_1jvj99c,False,
mmbuehv,Remind me 10 days!,eastieLad,2025-04-10 03:08:36,1,dataengineering,t3_1jvj99c,False,
mmco8ge,"Are you talking about articles, for example? There are a couple cool ones in substack: Data Engineering Central and ByteByteGo.",ptyws,2025-04-10 07:26:27,1,dataengineering,t3_1jvj99c,False,
mmfotyh,Remind me in 10 days!,SaifDragoon,2025-04-10 18:53:50,1,dataengineering,t3_1jvj99c,False,
mmgmya1,Remind me in 5 days,Excellent-Level-9626,2025-04-10 21:43:11,1,dataengineering,t3_1jvj99c,False,
mmijbo3,"Yeah HN for sure and substack depending on who you follow. Have you been reading publications from the field as well? Look into the top conferences in the field you're interested in like VLDB for databases and look at the recent publications. There's also podcasts, like there's multiple in Data Engineering. There's a data science one someone from reddit recommended that interviewed one of the co founders of Spark which was super cool.",data4dayz,2025-04-11 04:59:40,1,dataengineering,t1_mmfxl05,False,
mm88fdh,"Check out bq change history. Appends() function. I use it, it works well. There is also a function like it that handles updates and deletes but my stuff is all appends.",solgul,2025-04-09 15:40:42,2,dataengineering,t3_1jv55e6,False,
mm3oq35,"Aws, python, data modeling & desing, CI/CD, IaC. Environment depends on the team. Been in couple and feels like 2 different companies.Smaller / newer data teams may feel more like a startup - more impact but less engineering excellence. Bigger ones may feel like a beurocratic deadlock, less impact but higher engineering excellence.You have all sorts of managers, but i never had extreme horror stories. You just have to be reasonable and understand how they think and try make their life easier. We're all people in the end.",Likewise231,2025-04-08 21:01:57,14,dataengineering,t3_1juo1uo,False,
mm5trif,"Had a buddy who started as an entry-level DE at Amazon last year. The experience really depends on your team - some are genuinely chill with good WLB, others match the horror stories.Hiring process was typical Amazon: online assessment, then 3-4 rounds focusing on their leadership principles. They grilled him hard on system design and SQL optimization. The ""bar raiser"" interviewer was particularly tough.Skills-wise, focus on strong SQL fundamentals, data modeling concepts, and AWS services (especially Glue, Redshift, and S3). Python is essential too. My friend said knowing the leadership principles inside-out was what clinched his offer.",tech4throwaway1,2025-04-09 04:43:26,5,dataengineering,t3_1juo1uo,False,
mm4qjer,Is there on-call?,krayonkid,2025-04-09 00:31:21,3,dataengineering,t1_mm3oq35,False,
mm5yxve,Do you know if there are certain departments or teams to avoid?,krayonkid,2025-04-09 05:27:03,2,dataengineering,t1_mm5trif,False,
mm6foq8,Where can one read about the leadership principles?,but_a_smoky_mirror,2025-04-09 08:15:59,1,dataengineering,t1_mm5trif,False,
mmc1sjq,https://www.amazon.jobs/content/en/our-workplace/leadership-principles,Illustrious-Key-4695,2025-04-10 04:01:48,1,dataengineering,t1_mm6foq8,False,
mmn2lqz,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-11 22:22:58,1,dataengineering,t3_1jttqd5,False,moderator
mlzzldn,"Airflow and Dagster both support decorated function style authoring and the omission here is pretty bad. In fact, the Dagster code example doesn't even show roughly equivalent code (a workflow), it just shows a sensor triggering a job but none of the underlying definitions.",ZeroSobel,2025-04-08 07:38:21,2,dataengineering,t3_1jt9rib,False,
mmvov0u,"Since you are using Dagster, you may want to consider [https://cube.dev/product/data-apis](https://cube.dev/product/data-apis) as Dagster has a nice integration with [https://dagster.io/integrations/dagster-cube](https://dagster.io/integrations/dagster-cube)If you are looking for just a framework, FastAPI is definitely the leader in both performance as well as it streamlines documenting your API.",teh_zeno,2025-04-13 11:30:57,3,dataengineering,t3_1jxdch4,False,
mmvhgmv,"As a side, don’t forget PostGIS.",DeepFryEverything,2025-04-13 10:19:19,1,dataengineering,t3_1jxdch4,False,
mmgq26o,"I can‘t speak about the visualisation capabilities much because we use PowerBI to build reports, though it fetches the data directly from Databricks. Databricks‘ data access management tools are very useful and IMO quite easy to use thanks to the Unity Catalog. The Unity Catalog is open source since last year, so maybe there‘s a way for you to check that out for cheap or even free somehow.We also process millions to billions of events through Databricks. We had to build a custom solution for configuring and loading them for our use-case, but I think for some use-cases, ready-to-use tools exist as well.Cost may be a bit of a factor, though. I‘m not directly involved with our billing, but from what I hear it‘s not very cheap.",SSttrruupppp11,2025-04-10 21:59:48,5,dataengineering,t3_1jw9im6,False,
mmjsujg,This is a core snowflake use case,sos5544,2025-04-11 12:08:24,4,dataengineering,t3_1jw9im6,False,
mmix7dp,Your needs are literally what snowflake is built for.,Dazzling-Quarter-150,2025-04-11 07:11:33,5,dataengineering,t3_1jw9im6,False,
mmk4b6s,"1. Intuitive for users who are not technical. Then avoid Spark at all costs. 2. Easy, secure Data Sharing: Snowflake wins this hands-down. And it's completely cloud-agnostic (Customer A can be in AWS and Customer B can be in Azure or GCP). 3. Scale to billions/trillions of rows: auto-scaling is built right into Snowflake. Need a bigger cluster? Click one button - boom. Zero downtime. No need to kick anybody off the system, down the cluster, reconfigure... And Snowflake clusters start instantly, unlike Spark clusters. 4. Flexible reporting and viz capabilities: kind of a wash. Pretty much all the decent BI tools can talk to both just as easily. 5. Affordable. YMMV, but at least Snowflake doesn't pile on hidden costs from the cloud providers. No separate bill for S3 or EC2 or VPCs or any of that. Caveat: unless you want customer-managed encryption keys (KMS), external stages (S3, IAM) or PrivateLink (VPC, DNS). Those you get from AWS.",Deep-Comfortable-423,2025-04-11 13:20:24,3,dataengineering,t3_1jw9im6,False,
mmisuxl,They have invested a lot more resources into their AI/BI Dashboards recently. Depending on what your orgs use cases are it could suffice.It's nowhere as powerful/functional as PowerBI or Tableau but I do find it easy to of use. It has enabled rapid prototyping to production for us.,paws07,2025-04-11 06:27:13,1,dataengineering,t3_1jw9im6,False,
mmmqxef,"Databricks might be overkill here. For your use case, I'd lean towards Snowflake - better price point for a smaller company and more straightforward for BI workloads. The cross-workspace data sharing in Snowflake is super clean, and the learning curve is gentler for BI users. Plus, you won't be paying for Databricks features you probably won't use (like their ML stuff).Just watch out for those compute costs with billions of events - you'll want to set up good clustering keys and materialized views.",khaleesi-_-,2025-04-11 21:17:25,1,dataengineering,t3_1jw9im6,False,
mmgrmat,"Thanks for the insight! I had seen that some people prefer to use other tools for their BI capabilities. I'll have to keep that option open. Agreed that costs may be a factor.Unity Catalog seems perfect for this use case. I think there may be some customers that share a workspace and others that have their own dedicated workspace. If I understand correctly, all of these customers could share effectively and maintain control of their data.",TimeBomb006,2025-04-10 22:08:20,1,dataengineering,t1_mmgq26o,True,
mmjxsk8,Thank you. I'll check it out more in depth.,TimeBomb006,2025-04-11 12:41:04,1,dataengineering,t1_mmjsujg,True,
mmjxr21,Thanks! A few people have said this so I'll be sure to check it out.,TimeBomb006,2025-04-11 12:40:48,1,dataengineering,t1_mmix7dp,True,
mmneowt,"In this context, what are the advantages of snowflakes x databeicks?",Old_Tourist_3774,2025-04-11 23:35:09,1,dataengineering,t1_mmix7dp,False,
mmcuhco,[pgvector](https://github.com/pgvector/pgvector) is a well supported Postgres extension that may well do what you need. There are plenty of tutorials online to get you started.,Vhiet,2025-04-10 08:34:59,1,dataengineering,t3_1jvsr6u,False,
mmd2tve,"I am well aware of pgvector, and it exactly doesn't do what I need. It performs much more costly general nearest neighbor search, whereas I have integer vectors and require only set operations, not distances. For scaling, it implements approximate nearest neighbors, whereas I need exact results. Exact similarity search doesn't scale at all above \~100k vectors, and I have much more. I will edit the post to mention this.",qalis,2025-04-10 10:03:18,2,dataengineering,t1_mmcuhco,True,
mmb361b,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-10 00:25:27,1,dataengineering,t3_1jvl2z4,False,moderator
mmbicq1,"Based on your description it appears you are using PBI as your data engineering tool. If you are dealing with few tables and not that much data, it should be fine. However, it appears you have out-grown the PBI toolset based on the troubles you are experiencing. It is time to get serious and design a proper data warehouse for your organization needs. If you are not familiar with Ralph Kimball , I highly recommend you get some of his books. That will give you solid foundational knowledge on the topic of a data warehouse. Once you have good understanding, you will be in a better position to decide how to plan your next steps improving your existing processes and data collection practices.I'm wondering do you have any data processes running on-premises or all your data is hosted in the cloud?",Nekobul,2025-04-10 01:54:47,2,dataengineering,t3_1jvl2z4,False,
mmbo0ij,"Take a deep breath, it helps.What you are describing would require an entire data team to be managed effectively, probably with sub teams managing specific niches (reporting, governance, development, etc.).Now, I had to say that because you are stressing yourself out over something too large for you to manage, but here are my suggestions:1. Communicate with relevant stakeholders - First talk to your boss and explain the situation to see what he thinks. He may be able to direct you to people with more knowledge regarding the entire situation. You say you have databases, so someone is probably managing them and they would be a good place to start the conversation in terms of determining the low hanging fruit. It helps when all the data people are working with each other. Find out who is relevant and talk to them so you can potentially collaborate.2. Prioritize what is most important - Look at all those tasks you have in your backlog, rank them by how much value they would add, while keeping effort in mind. Create a 3 by 3 grid with priority/frequency on one axis (low, medium, high) and effort on another axis (low, medium, high). Your domain knowledge should allow you to quickly assess this. I would have a meeting with your boss and the other relevant people from bullet point 1. if possible. Ideally target the high priority ones first with focus on those perceivied to be the least effort.After this, the steps that are taken depend on what is important to tackle first: data integrity (deal with inconsistencies), data consolidation (centralize where data is located), data automation (automate a way to ingest files), data standardization (ensure data is in a constant format), etc. Just make sure you document anything and everything, it will eventually be a life saver down the line.I think you can start with learning high level concepts related to data governance as it will provide a solid foundation as to how to approach everything else.Hope this helps, let me know if you got any questions.",-_Kaz_-,2025-04-10 02:28:07,1,dataengineering,t3_1jvl2z4,False,
mmdui3s,"We have data that is generated on site: our manufacturing information (info about batches executed, etc) We replicate that to a SQL server on the cloud (ADF).We have another pipeline with sensor information, our equipment status (temp, flow of water, things like that). That data is streamed to ADX.And we also have other SQL server that has data from softwares we use (for example, people can log maintenance issues in a web app, and we access that info through SQL)And also, our SAP system that is currently not linked to cloud, we just download data and store it in share point.So to answer your question, no, our data on-premise is just used as backup, we could probably even omit some unnecessary columns from our ADF pipelines and replicate only the ones we use. I’m trying to setup dataflows and do more data cleaning and processing in SQL, but a proper data warehouse is what we really need. Because yeah, most of the time we are bringing the whole tables to PBI and filtering through power query, and doing calculations for KPIs in DAX.",stop_the_entropy,2025-04-10 13:24:23,1,dataengineering,t1_mmbicq1,True,
mmdyhnf,"Is there a specific reason why you are pushing the data toward the cloud and doing the processing there? Can you do most of the processing locally in a local data warehouse and then push ""well-massaged"" and quality data to the cloud for people to connect and utilize in PBI for analytics?",Nekobul,2025-04-10 13:46:53,1,dataengineering,t1_mmdui3s,False,
mmedzp5,"As far as I understand, we started replicating our whole tables to ADF because we didn’t know this was going to be an issue when data got too big. People just set it up as basic/standard as possible. We could improve our pipelines to replicate better data since we are already using queries in our ADF pipeline, but to push the changes we should study and confirm which columns are not used at all by any PBI. we can also try to move some of the data transformation upstream but then we should fix every PBI to take the info in the new model, right? Also some of our data comes from webapps for which we only have access to the cloud DB (the company has more than one site and these apps are general for all sites), but at that point we don’t manage the DB itself, we just query it.",stop_the_entropy,2025-04-10 15:05:18,1,dataengineering,t1_mmdyhnf,True,
mmef70s,"Hope I understood your question well, just as clarification all of our data comes from some kind of external software, so we have tables/views already set up. I’m not sure we could modify those local tables, but we could just take only what we need to the cloud.",stop_the_entropy,2025-04-10 15:11:16,1,dataengineering,t1_mmedzp5,True,
mm6m6eo,"Oldest problem in the book. The only way to do it is via strict enforcement on the source system side by whoever manages those fields. Not much control on our side over this, completely depends on the leadership in the org.",financialthrowaw2020,2025-04-09 09:26:56,27,dataengineering,t3_1jv1gua,False,
mm6p2ya,"As others have said, this is a constant problem that is very difficult to solve. Forcing compliance is hard and unpopular. The team making the data may not see any value in sticking to a particular structure, and leadership may regard fixing it as part of your job. Particularly if that team is a profit centre, and you are a cost centre. I’ve had good results in the past just feeding bad data back to the originating team- filter it out and push it back upstream. By making it their problem, you incentivise good behaviour- specially where you can present ‘bad records’ to leadership. You can even gamify it a bit- show a trend line with time on one axis, and number of bad records as another. People love it when line go down. This is all an exercise in social engineering, in my experience.",Vhiet,2025-04-09 09:56:55,15,dataengineering,t3_1jv1gua,False,
mm71gv7,"/u/Vhiet gave the best answer here. I can tell you how we fixed this problem recently. Our pipeline runs after midnight and had tons of failures from bad order-management data. Sometimes two or three in a week. The data was manually entered into a complex tool and as we all know, manual=mistakes. Mistakes are expected. The order management team wanted to fix things, but we didn't give them enough time. DQ errors were only caught when our pipeline ran in the middle of the night. To fix that, we created a view that encapsulated the logic of the table where most DQ issues can be caught. Then, the table just did a select * on the view. We moved our DQ tests to the view and ran them each hour. Slack alerts notify the team if something is wrong and they fix it before our pipeline runs. It was a simple solution to a big problem. Most of the work was getting the right teams on board with the solution.",leogodin217,2025-04-09 11:41:59,7,dataengineering,t3_1jv1gua,False,
mm958qr,"I think u/Vhiet gave the best answer here. I will add my two cents here. You can't really force users to care about clean data, but you can set up enough guardrails that garbage never makes it through. What’s worked for my projects in the past:* Schema enforcement everywhere - Avro, JSON, Pydantic, whatever fits your stack. Fail fast if something’s off. Don’t try to fix it later, just reject bad input.* No raw access - Don’t let people dump whatever they want into S3 or a DB. Build upload APIs or controlled ingestion tools with validation and clear error feedback (like ""invoice\_date must be ISO-8601, not 'soon'"").* Alerting + dashboards - If bad data shows up, make it visible. Send Slack alerts, track source systems with the most rejections, build a ""wall of shame"". * Data contracts - This is getting more popular. You define what good data should look like (like no nulls in key columns, specific enums only ...), and you break the pipeline or alert when things go off the rails.Honestly though, I think a big part of the problem is social. You have to make the business care about why it matters - bad data = bad reporting = bad decisions. Similar to what u/Vhiet suggested. Once they see that, they’re usually more willing to work with you.It’s not perfect, but this mix of tech + visibility + a little shame goes a long way.",luminoumen,2025-04-09 18:18:17,3,dataengineering,t3_1jv1gua,False,
mm6n4i6,"I have never seen anyone have success with ""forcing"" users to keep good data quality in source systems. Often, quality depends on both the behaviour of users, the capabilities of the source system, master data architecture etc.Ideally, you would have some data contracts defined in relationship with the business side and use those data contracts to at least be able to report on data quality - or even enforce it (if quality is bad you may need to start with a softer approach).[https://data-contracts.com](https://data-contracts.com)I definitely think that management should be involved as this is a cross-organizational problem. Not easy to solve, though.",larztopia,2025-04-09 09:37:01,2,dataengineering,t3_1jv1gua,False,
mm70tvr,"Never gonna happen. Part of DE is dealing with bad data. Just tell the client 'we only invest perfect data' will drive clients away.If the client has invest IT resources to make the data perfect, they will learn to ingest and use it themselves",NoleMercy05,2025-04-09 11:37:24,2,dataengineering,t3_1jv1gua,False,
mm7nozj,"Formular design is the key. Help peoples to stick on référentiels by using more user friendly formulars, with drop down lists, searchbar and regex validation",Old_Astronaut_1175,2025-04-09 13:56:59,2,dataengineering,t3_1jv1gua,False,
mm8cvzp,If is not enforced on the system UI and application DB then you'll be awarded with infinite work and thus job security.,Qkumbazoo,2025-04-09 16:02:28,2,dataengineering,t3_1jv1gua,False,
mm9xhhk,You just have to keep adding data entry rules as they come up. Sucks,SoggyGrayDuck,2025-04-09 20:35:25,2,dataengineering,t3_1jv1gua,False,
mm6mef9,"Frustrating, but thanks for the answer. I was wondering if it is a good idea to talk with management and push them towards some kind of solution on the input/user side. Did you have any luck with something like this?",MedicalBodybuilder49,2025-04-09 09:29:19,2,dataengineering,t1_mm6m6eo,True,
mm348ef,"Man, this brings back memories of pulling my hair out over slow dashboards. I had similar issues with the overuse of calculated fields and huge datasets in Looker Studio. Moving calculations to BigQuery queries was a game-changer. It felt like lifting a massive weight off our system. Another thing that worked for us was reducing data transfers and relying on scheduled queries. It just makes everything snappier. I also checked out Metabase and Superset, but Pulse for Reddit caught my eye for a completely different reason-its smart engagement tool might help with targeting the right audience for these insights. Always curious to try new tools that enhance performance.",Key-Boat-7519,2025-04-08 19:24:17,2,dataengineering,t3_1jujn9j,False,
mmj8b0i,"Totally feel you on that—slow dashboards can be a nightmare. We went through the same phase of stacking calculated fields and wondering why everything was crawling. Offloading that logic to BigQuery really is like switching from a bicycle to a bullet train.We’ve also leaned into using native connectors smartly—no heavy lifting where it’s not needed. Scheduled queries were a big one for us too, especially when you’re reporting at scale across multiple accounts.And yeah, Pulse is an interesting one—less about visualization, more about surfacing what matters and where. Always cool to see how tools outside the usual stack can give you that edge. Let me know if you find anything else that speeds things up even more!",kodalogic,2025-04-11 09:10:30,1,dataengineering,t1_mm348ef,True,
mm4xb71,I am also interested in this. Following,weepalone,2025-04-09 01:11:07,1,dataengineering,t3_1ju4ksz,False,
mmwa40p,"Okay, so not exactly your case, but we had a requirement to write data from snowflake over to on-prem oracle db. We did it via a lambda function, which is called by snowflake and writes directly into the on-prem db. To connect it all together we were using AWS PrivateLink to allow connections from on-prem to AWS and a Lambda VPC endpoint (and maybe one other, but I don't remember exactly). Lambda itself was connecting via JDBC + SQLAlchemy. This was working fine after we had configured all of the BS required by AWS. At the very least, try to dig into related topics I've mentioned above. Good luck",Kojimba228,2025-04-13 13:59:45,1,dataengineering,t3_1jy79rg,False,
mmux3se,"The delete activity should be inside the If , and it will be executed conditionally",kaaio_0,2025-04-13 06:43:45,3,dataengineering,t3_1jy0zwo,False,
mmuuyr1,You’re going correct only,Beginning-Forever597,2025-04-13 06:22:31,1,dataengineering,t3_1jy0zwo,False,
mmx498d,"you should put the delete activity should me in the condition. also, if you want to optimise you don't need to use all 3 connections(skip, success, fail) when its in a linear chain.",melykath,2025-04-13 16:40:23,1,dataengineering,t3_1jy0zwo,False,
mmvdr75,Like how? There are other activities as well bound to it,Beginning-Forever597,2025-04-13 09:39:46,1,dataengineering,t1_mmux3se,False,
mmvmsut,If I understand the question right... if you click the edit button on the true/false sections it'll bring up another canvas so you can put all your dependent activities in there,mailed,2025-04-13 11:12:30,2,dataengineering,t1_mmvdr75,False,
mmvn8nc,So I have to make the activities separate for true and false right?,wild_data_whore,2025-04-13 11:16:31,1,dataengineering,t1_mmvmsut,True,
mmvnxbi,Yeah. If they follow the same path with different results you could turn it into a callable pipeline with the parameters to use but it's up to you. I don't really know what the best practice is with data factory these days,mailed,2025-04-13 11:22:45,1,dataengineering,t1_mmvn8nc,False,
mmx3saa,"Only the ones that are different depending on the condition. If *only* the delete is dependent on the condition, and everything else works the same regardless, then only the delete needs to be inside it.",azirale,2025-04-13 16:37:48,1,dataengineering,t1_mmvn8nc,False,
mmohjx3,"Microsoft Azure has this repo with many examples that might be handy if you wanted to say run it on AKS:[https://github.com/microsoft/flink-on-azure](https://github.com/microsoft/flink-on-azure)Edit: HDInsight on AKS is also potentially an interesting option:[https://azure.microsoft.com/en-us/blog/manage-your-big-data-needs-with-hdinsight-on-aks/](https://azure.microsoft.com/en-us/blog/manage-your-big-data-needs-with-hdinsight-on-aks/)[https://github.com/Azure-Samples/streaming-at-scale/blob/main/hdinsightkafka-flink-hdinsightkafka/README.md](https://github.com/Azure-Samples/streaming-at-scale/blob/main/hdinsightkafka-flink-hdinsightkafka/README.md)Confluent Cloud seems to have an offering too on top of Azure (partner solution):[https://learn.microsoft.com/en-us/azure/partner-solutions/apache-kafka-confluent-cloud/overview](https://learn.microsoft.com/en-us/azure/partner-solutions/apache-kafka-confluent-cloud/overview)Think they offer it on GCP, AWS, and elsewhere too. But that's outside my wheelhouse and I haven't played with Flink in general either. Good luck!",warehouse_goes_vroom,2025-04-12 03:49:33,2,dataengineering,t3_1jx11ht,False,
mmgynoz,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-10 22:48:14,1,dataengineering,t3_1jwb3z7,False,moderator
mmg3e8x,"I'm the author of a free Python library called Splink which is designed to solve this problemhttps://moj-analytical-services.github.io/splink/You can take a look at the tutorial on how to get started:https://moj-analytical-services.github.io/splink/demos/tutorials/00_Tutorial_Introduction.htmlAnd there's also a bunch of worked examples in the docs A simple fuzzy matching approach may work fine for you, especially if your data quality is high and number of rows is not large. But generally the probabilistic approach used by Splink is capable of higher accuracy as explained here:https://www.robinlinacre.com/fellegi_sunter_accuracy/",RobinL,2025-04-10 20:05:38,6,dataengineering,t3_1jw6m8p,False,
mmi3mku,"Separate table, the SQL logic should be something like this: with cte as ( select *, row_number() over (partition by [column] order by [column]) as row_number from ccs ) insert into ccs_deduped select * from cte where row_number = 1/2/3 (whatever number from the ""order by"" used to sort and qualify the ccs)Then you use that as your dimension table in your report. Simple as.You certainly don't need SSIS or other shitty tools or libraries. Write some SQL. It's fun.Feel free to ask for help.",jajatatodobien,2025-04-11 02:58:56,5,dataengineering,t3_1jw6m8p,False,
mmggfoj,"Yes, a unique cc table would solve the problem. Create it by deduplication of the og cc table. Use the new table in the report.",drgijoe,2025-04-10 21:09:04,1,dataengineering,t3_1jw6m8p,False,
mmfy0wc,The easiest and free option is to use an SSIS package where you already have the Fuzzy Lookup transformation available to get the job done.,Nekobul,2025-04-10 19:39:46,0,dataengineering,t3_1jw6m8p,False,
mmj6ajf,"Thank you Robin, and congrats on the library. It looks like the sort of thing we are looking for. You are right - I need some sort of fuzzy matching due to small discrepancies between the fields. I shall work through the tutorials as you have suggested. Cheers!",Queasy_Teaching_1809,2025-04-11 08:48:50,2,dataengineering,t1_mmg3e8x,True,
mmi45zc,Yay yet another shitty and useless library!,jajatatodobien,2025-04-11 03:02:38,-3,dataengineering,t1_mmg3e8x,False,
mmja8wi,You obviously don't know what Fuzzy Match is doing.,Nekobul,2025-04-11 09:31:12,2,dataengineering,t1_mmi3mku,False,
mmi6kzy,This,lysis_,2025-04-11 03:19:40,1,dataengineering,t1_mmi3mku,False,
mmiva6u,"Thanks. The only issue is I need something to determine all the rows that are from the same person. There may be typos in the name, addresses and phone numbers may differ slightly. Needs some sort of fuzzy matching I think",Queasy_Teaching_1809,2025-04-11 06:51:53,1,dataengineering,t1_mmi3mku,True,
mmj6byh,"Thanks. The only issue is I need something to determine all the rows that are from the same person. There may be typos in the name, addresses and phone numbers may differ slightly. Needs some sort of fuzzy matching I think",Queasy_Teaching_1809,2025-04-11 08:49:15,1,dataengineering,t1_mmggfoj,True,
mmesvrt,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-04-10 16:19:04,1,dataengineering,t3_1jw1vsu,False,moderator
mmiqfiq,You could consider using dlt to autohandle the unnesting https://dlthub.com/docs/dlt-ecosystem/verified-sources/filesystem/advanced#example-read-data-from-xml-filesIt has schema management and evolution and can unpack to flat tables(I work there),Thinker_Assignment,2025-04-11 06:03:40,2,dataengineering,t3_1jw1vsu,False,
mmeqq9c,"Every time I read something about data catalogs I feel like there's a gap for lightweight data catalogs. Not everyone needs a full-blown enterprise solution. Sometimes you just want a simple way to document and search your datasets without spinning up a whole platform, maybe even with markdown support for documentation would go a long way.",bcdata,2025-04-10 16:08:21,3,dataengineering,t3_1jw0jn6,False,
mmehuf9,"https://blog.cloudflare.com/r2-data-catalog-public-beta/#pricing> While R2 Data Catalog is in open beta, there will be no additional charges beyond standard R2 storage and operations costs incurred by query engines accessing data. Storage pricing for buckets with R2 Data Catalog enabled remains the same as standard R2 buckets – $0.015 per GB-month. As always, egress directly from R2 buckets remains $0.> In the future, we plan to introduce pricing for catalog operations (e.g., creating tables, retrieving table metadata, etc.) and data compaction.",saaggy_peneer,2025-04-10 15:24:31,1,dataengineering,t3_1jw0jn6,True,
mmk2dot,Is this similar to Amazon S3 tables ? [https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-s3-tables-apache-iceberg-tables-analytics-workloads/](https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-s3-tables-apache-iceberg-tables-analytics-workloads/),Illustrious_Side_544,2025-04-11 13:09:12,1,dataengineering,t3_1jw0jn6,False,
mmg93hg,I second this!! SQLite is closest we can get right now…,Only_Struggle_,2025-04-10 20:32:58,1,dataengineering,t1_mmeqq9c,False,
mmiiu1o,"dbt docs fulfills some of this (if you use dbt), but beyond that, SMBs have so many different tech stacks, that a catalog vendor would need to build far more integrations (relative to the 6-10 needed to capture most enterprise customers), and couldn’t charge as much.",davrax,2025-04-11 04:55:33,1,dataengineering,t1_mmeqq9c,False,
mme57vf,"Yes what you are asking makes sense. Im going to answer this assuming you will use Iceberg. The most ""open"" way to have a catalog is by self hosting one. [Nessie ](https://www.reddit.com/r/dataengineering/comments/1jvwwcy/tried_to_roll_out_microsoft_fabric_ended_up/?utm_source=share&utm_medium=android_app&utm_name=androidcss&utm_term=1&utm_content=1) and [Polaris](https://github.com/apache/polaris) are some options there. If you are already on AWS and want something managed, I'd just use Glue. Almost all the big warehouse providers already support it. It has [Iceberg REST](https://docs.aws.amazon.com/glue/latest/dg/connect-glu-iceberg-rest.html) support for those that need something more generic, and there are a lot of people who use it, so there will be answers to questions you google. It's by no means my favorite choice, but it's the safe one imo.",pescennius,2025-04-10 14:21:56,3,dataengineering,t3_1jvm7ft,False,
mmk4xtg,Thankyou,tbot888,2025-04-11 13:23:59,1,dataengineering,t1_mme57vf,True,
mmhigxi,"'Daily work', like daily assignments for class or what?Yeah thats why everyone says dont use AI.Especially considering how little self control the average person has.The most prevalent issue IMO is you'll have zero problem solving and debugging skills. Second issue is yeah you cant do anything without it holding your hand.If you know how to program already its not 'as bad', but still removes a lot of learning opportunity and you wont retain as much. People have said the same about blindly following YT turorials forever but for some reason think LLM copy pasta is somehow better.Or for instance I wanted to make an addon for a game and the documentation is spread out across 5 websites and half of it doesnt work.",notislant,2025-04-11 00:45:12,483,learnprogramming,t3_1jwczhk,False,
mmhtx3d,"The way I use AI is somewhat similar to how I use stack overflow when I ask a question. Scrub as much data and use-case specific code from your question as possible. You don't want the code written for you, you want to know, ""How do I solve this specific problem in this language"". Take the examples, understand what they are doing, and THEN write it into your code correctly.No auto-complete. No code being written for you and insert into your app with barely any modifications. you have to know why what the AI wrote works before you can use it.",FluffyNevyn,2025-04-11 01:56:20,104,learnprogramming,t3_1jwczhk,False,
mmhickm,"I can relate to this a bit. I think there are ways it can be used effectively, but most of the time it is a net-negative on learning",Panoramic56,2025-04-11 00:44:27,82,learnprogramming,t3_1jwczhk,False,
mmhir8e,"There's plenty of types of boilerplate code that even with 30 years of experience I can't write off the top of my head. A tool like intellisense or copilot autocomplete will do this better than I could.But that isn't the value that I bring to the table. The value I bring is in things like understanding our end users' needs, or weighing the pros and cons of different possible approaches, or in making code that can be leveraged by other teams to accelerate not just my project but other similar projects as well. I do think you need to understand the code you wrote at a deep level, whether it not you use AI to write faster. But I wouldn't hold ""how well can I code with no feedback or assistance"" as a valuable metric to gauge anyone's understanding.",AssiduousLayabout,2025-04-11 00:46:57,62,learnprogramming,t3_1jwczhk,False,
mmhqqe2,"AI is awesome for people with experience, but it cannot supplement that experience and it doesn’t help you gain it",wizardent420,2025-04-11 01:36:31,13,learnprogramming,t3_1jwczhk,False,
mmimxvt,"There is a correct way to use ai. I wouldn’t label its use as “bad.” It’s a very powerful tool, when used correctly.",BloodMongor,2025-04-11 05:31:25,8,learnprogramming,t3_1jwczhk,False,
mmhysdr,"I think of it kind of like a calculator. If you learn the times tables first, a calculator makes your life so much easier after that. Even though you might notice you aren’t as sharp as before, you can always just check with a calculator. In a few years I think LLMs will be something similar where you learn the basics of coding, but for daily work you’ll rarely be doing that yourself and will just have an LLM to do it. Even though you might not remember specific things, you at least have the skills to figure out how to do it manually if you learned right.",Typical_Occasion7150,2025-04-11 02:27:06,6,learnprogramming,t3_1jwczhk,False,
mmid5ww,"I mean, yes, learning how to do something with a tool is not an effective method for learning how to do it without that tool. That doesn't mean you're not learning, it means you're learning how to work with the tool.",ImportantMoonDuties,2025-04-11 04:08:49,5,learnprogramming,t3_1jwczhk,False,
mmih0bv,"I may get downvoted for this, but I don't think it's AI thats the problem. We will inevitably develop automation for anything, I mean look at our history. Most of the things we have now are automated. And before anyone says AI is different, this is just another way to automate ""thinking process"". I am not defending AI and say succumb to it, but we must look at it at another perspective. It will all fall down to what the person does with it. Some people might feel helpless without it, some might not need it. But as long as we get things across and get job done without hurting others, why are we judging people who have different ways to do things? AI is not taking jobs, who do you thinking regulates AI now, who does research for AI to develop? Maybe the only thing on the top of my head is how unfair it is that the whole world does not develop at the same pace.",kaneko_masa,2025-04-11 04:40:06,5,learnprogramming,t3_1jwczhk,False,
mmjtcpz,it's same debate as with stack overflow. People who vibe code used stack overflow snippets until one worked as intended. Bad habits are bad habits,liproqq,2025-04-11 12:11:52,6,learnprogramming,t3_1jwczhk,False,
mly3jid,Honestly just sounds like you have shitty professors. Pseudocode isn’t standardized and there’s no way it “should” be. It’s just a fancy term for “writing down your thought process”.At least that’s how I (and everyone I’ve ever met) understand it,hellbound171_2,2025-04-07 23:22:32,895,learnprogramming,t3_1jtz96z,False,
mly3q4r,"There is no standard for pseudocode (that's what makes it pseudocode), so what you're really struggling with here is understanding your professor's requirements -- which sound a little too prescriptive to me, honestly, but you'll have to find some way to adhere to their standards as long as you're in their class. Out in the real world, ""good"" pseudocode is literally anything that effectively communicates the intended ideas to your intended audience (which, in some cases, may just be yourself).",ForSpareParts,2025-04-07 23:23:36,127,learnprogramming,t3_1jtz96z,False,
mly3t02,Pseudocode is just the roadmap for what you want to do (and what your program does) in plain terms. It would be a lot easier to give guidance if you provided a snippet of what you've received a 0 on.,Initial-Public-9289,2025-04-07 23:24:03,21,learnprogramming,t3_1jtz96z,False,
mm0ied7,"Pseudo-code has its place, but mostly to help yourself.Many (beginner) courses like to use it, since it (in theory) forces the the students to think about how they want their program to work, before writing the first line of code which comes to mind. Problem is that the idea of ""formalized"" pseudo-code often pops up, which defeats the purpose.I personally often write pseudo-code, it might look something like:- For each entry in the dataset - Fetch it from the database - If it ""looks good"" - Display it to the user - else - Delete it from the database - Tell the user how many good/bad entries there whereI then usually keep the pseudo-code as comments in my real code, and ""fill out"" until I have the real code.",HugoNikanor,2025-04-08 10:55:21,19,learnprogramming,t3_1jtz96z,False,
mly49rm,"It's writing code, but in plain English without worrying about a language specific syntax.",PM_ME_UR_CIRCUIT,2025-04-07 23:26:45,12,learnprogramming,t3_1jtz96z,False,
mm10t4b,Ask him for the syntax rules for pseudocode.,John_B_Clarke,2025-04-08 13:05:46,9,learnprogramming,t3_1jtz96z,False,
mm0hgzg,Agonizing over the syntax of pseudocode completely defeats the point of it.,old-reddit-was-bette,2025-04-08 10:47:31,5,learnprogramming,t3_1jtz96z,False,
mlz4ju1,"How have you done this 6 times without talking to your professor? It's not a book, or an exam. It's a class, with a human teaching it. If you are struggling with some aspect of it, the expectation is that you communicate with the instructor to clarify the requirements, or establish a path to learning the content.Literally just take the post text that you wrote, edit it for politeness, and then go say that to your professor instead of asking the internet.",Vonmule,2025-04-08 03:09:47,4,learnprogramming,t3_1jtz96z,False,
mly4oe2,"Pseudo code's the coding equivalent of an engineers napkin sketch, by formalising it like that they've completely missed the point.You may be being taught by people that have no actual experience.",cfehunter,2025-04-07 23:29:07,12,learnprogramming,t3_1jtz96z,False,
mm4k042,Learn from that “someone else’s” code and understand why and how it’s better than yours. Then look at your code and check if you can integrate/refactor your code in the same way. It’s always nice to look at other people’s code style (whether by sharing or on open source projects) and pick out good habits/patterns to follow.,RagingGods,2025-04-08 23:53:02,274,learnprogramming,t3_1jus2iy,False,
mm4l8gv,"Wtf is ""yanderedev""? Anyways writing good code takes practice and is as much of an art as it is a science. There are a few principles we use though. You should make sure to learn the various programming paradigms. Object oriented, functional, etc. Another thing, don't think you need to know everything right away. Getting code to work is an awesome first step and definitely doesn't doom you to an eternity of writing spaghetti code. Software Engineering takes decades to master and you will always be learning.1. DRY (Don't repeat yourself). If you have to repeat the same code twice, it should be abstracted out into a reusable class or function2. KISS (Keep it simple stupid). Nobody wants to read and maintain a big-ass function. Write your code so that someone in the future (probably future you) can easily understand it. When you think this way you start breaking out each piece of functionality into a simple unit that does one thing. Otherwise known as SRP (Single Responsibility Principle).3. YAGNI (You ain't gonna need it). Don't implement functionality that isn't immediately needed. You can waste your entire life accounting for all future possibilities that most of the time don't come to pass. Write code such that you CAN add those things later if necessary without a major rewrite.",Whatever801,2025-04-09 00:00:07,185,learnprogramming,t3_1jus2iy,False,
mm4k1ve,"yanderedev is an experienced inexperienced coder. Never moved beyond the basics and refused to attempt to. Instead he just kept hammering away, nailing new pieces to the side of his projects. Whenever you get to a point in your code where you think “this is really annoying to deal with”, you should pause and think about a refactor of some kind. If you do this, you’ll likely prevent yourself from the fragile mess of his code. Additionally, investing some time in learning programming patterns will also go a long way to avoiding that hellscape as well.",ozzadar,2025-04-08 23:53:18,58,learnprogramming,t3_1jus2iy,False,
mm4j1zj,"Writing code that works is a great first step. You will naturally get better as you continue writing more code. Also, yanderedev made more money than most people who make fun of their code, so I wouldn’t necessarily call that a bad thing.",speed3_driver,2025-04-08 23:47:37,27,learnprogramming,t3_1jus2iy,False,
mm4k2ea,"Watch this video. I’m assuming you have played or at least know the game and may be interested on a breakdown. The video basically tells you that the mistake with yansim wasn’t only about the coding (at least, not necessarily about yandev’s if else code block myth) but about other efficiency problems like rendering and architecture.https://m.youtube.com/watch?v=LleJbZ3FOPUYou may not understand it fully if you are a beginner but I think you’ll still benefit from the parts where you understand. It’s about an hour, broken into sections appropriately and very informative.I watched it when I was somewhere between a beginner-intermediate. I knew a tiny bit of blender, C and C++ based object oriented programming back then. Having insight on efficiency and architecture helps when it comes to coding.",manicpixiedreamnoob,2025-04-08 23:53:23,12,learnprogramming,t3_1jus2iy,False,
mm58b08,"> So far, I’ve told myself that any code that works is good codeThis is correct> but I think my projects are giving yanderedev energyPeople mostly make fun of Yandere Dev because he's very pretentious and has been acting like the game is just around the corner for nearly a decade now ([among other reasons](https://www.youtube.com/watch?v=752L13UcmsY)). You should look into how Undertale was programmed. All of the dialogue for the game was stored in a single switch statement, and I've heard the code for the rest of the game is also a mess, but nobody cares because it works. Yandere Dev could have exactly the same habits he has now, but if his game wasn't riddled with bugs and ran at an acceptable frame rate (and actually... came out) nobody would care.> I’ll be stuck making stupid looking code for the rest of my time at school. Can anyone give me some advice for this issue?It's not stupid if it works and you understand it",hellbound171_2,2025-04-09 02:15:38,24,learnprogramming,t3_1jus2iy,False,
mm4j8a8,"It's like writing an essay. Write it, then refine it",ChrispyGuy420,2025-04-08 23:48:37,9,learnprogramming,t3_1jus2iy,False,
mm5dg0i,"im gonna tell a little story. it isn't a story about yandev code, but it's a story about very similar code.i make code and asset contributions to a few open source game projects around github. one of these projects is a medieval fantasy game based around old ad&d stuff, both in terms of vibes and in terms of raw mechanics. one of these mechanics is the ability to dodge. it's a very simple one; when you get hit, it makes a quick calculation, and if you win then you negate the damage, spend a little stamina, and move to an adjacent tile, which is all pretty simple. complicating matters ever so slightly is that some classes are expert dodgers and get a better calculation on their dodge roll, but in return they have to be wearing light armor or no armor to do it; heavy or medium armor means they dodge like everyone else, which is poorly.so, a question for the reader: how would you go about determining if the player that got hit has the expert dodge feat and is wearing light armor, allowing them to dodge expertly?a novice solution would be to simply check on hit that the feat and proper armor class are present. after all, you already check on hit to do things like damage and dodge calculations in the first place, so adding a little check right in there isn't a ton of overhead at all. in fact, i think this solution probably works fine for most projects and something similar to it is probably lurking in a lot of video games, even high quality ones.a more advanced solution might be something like checking only when the player equips armor, since we can assume armor doesn't magically change weight classes, and because players will be equipping items far less frequently than they're attacking things, as a general rule. if the player has the feat and equips light armor, it can broadcast an event than then means the player is going to dodge well until their equipment changes again, when we can check once more for what they did. this is probably a little more performant because you're doing the check far less frequently, and during a less critical gameplay moment than when a weapon hits someone, when you can be a little freer with resources. this solution would be a good methodology if you need to wring performance out of the system, though like i said in the last paragraph, the novice solution is probably good enough for most projects.now let's go back to our example game and see how they did it. They chose to have the entity itself check if it was wearing the right kind of armor. In fact, they had every character entity check. A player character with the dodge feat and light armor checks. A player character without the dodge feat still checks anyway. A goblin that cannot have the feat checks. A chicken, which doesn't even really do combat, and doesn't have inventory slots? You better believe that chicken is checking to see what its armor class is.you might be holding your hands on your head and going, ""wow! that's pretty bad!"" But remember up above, how the better solution doesn't just ask how to check, but when to check? this game had every single mob check their armor's weight class-even if they don't wear armor-*every single fucking tick.* Hypothetically this means ten times a second every single player and non player character in the game stops to ask, ""am i wearing light armor?"" except for the part that the ticks weren't actually deciseconds in this game because of sloppy code like this.so, finally coming around to OP's question: \- you probably aren't writing yandev tier code if you have the self awareness to worry about writing yandev tier code. \- you definitely aren't writing yandev tier code if you have even a vague idea of a computer as having a limited amount of math-per-second to crunch your code with, even if you don't understand anything else about computers as objects. \- read your documentation so you don't accidentally cook up a proc that fires every fucking tick, though.",kittysmooch,2025-04-09 02:46:16,6,learnprogramming,t3_1jus2iy,False,
mm4k030,Now this is the advive i need too.,BlueK1tt,2025-04-08 23:53:01,3,learnprogramming,t3_1jus2iy,False,
mm4o0ad,"At least your code works. Start with understanding, you can learn formatting and elegance later. Some of it is just being exposed to good code and studying *good* practices. Can’t do that if you don’t have the logic down. Professional code is abysmal sometimes. If you are at the place where you are comfortable with core concepts, then maybe it’s time to start looking at a *bunch* of code, articles and videos showing coding styles, and learning why people prefer this or that. Also, don’t take any recommendations as gospel. A lot of style stuff is entirely subjective, and serves different goals.",CptMisterNibbles,2025-04-09 00:16:27,3,learnprogramming,t3_1jus2iy,False,
mmlliy5,"That literally is like saying ""I know how to write a sentence, but how do I write a novel?""The extremely simplified answer is: Just repeat it about 10000 times.But everyone knows that that's not true, and the same goes for programs.Building large programs is a separate skill you need to learn. It is impossible to describe how here in a Reddit comment. I suggest Goggle ""How to build large programs in ...."".",Sbsbg,2025-04-11 17:46:14,192,learnprogramming,t3_1jwtvbl,False,
mml5j8q,"Start small and do one thing after another.Create me a website I can visit, log in via Google and/or GitHub and redirect me to a blank page that shows only my username.Once you have it, share the link with us.Viola, you have a production app. I will tell you what to do afterwards.",UnnecessaryLemon,2025-04-11 16:28:08,137,learnprogramming,t3_1jwtvbl,False,
mmlh1e3,"By doing simpler software.Don't know how to build Reddit / Twitter / Instagram? -> Start with a TODO list.Still not enough experience for Instagram? -> Find something in between what you can't do and what you can.Complexity and unmanageability is just a part of the problem that has to be solved, pay attention where things start to get complex and fix it before it's too late, then use that knowledge to prevent future problems in new projects.But it's still better learn on mistakes of others. Here are some resources / concepts I found useful.[https://refactoring.guru/design-patterns](https://refactoring.guru/design-patterns)Model-View patternsComposite patternSingle source of truthSingle level of abstractionOOP",lukkasz323,2025-04-11 17:24:29,29,learnprogramming,t3_1jwtvbl,False,
mmn83ex,"Build it, realise half way through your architecture is shit and that could have done it better.Build a second project and half way through it realise that another design pattern you read about fits soo much better into it, so you design another project around it.Only for you to realise that your code base is a mess and you've overcomplicated it for no reason, and that you know a much better way of doing it in a simpler way. And before you know it, you've created 5-6 banger projects and learned much more than anticipated.Also build without gpt, please",M_krabs,2025-04-11 22:55:41,23,learnprogramming,t3_1jwtvbl,False,
mml6snu,"lots of programming is communication over the internet, learn tools like API's, webhooks, SSE and databases",Nic0_Blast,2025-04-11 16:34:30,10,learnprogramming,t3_1jwtvbl,False,
mmmqiso,"There's a long way between scripting and production-grade application. Start with going from scripts to small applications, to bigger applications. You can at some point scale up to doing multiple applications to achieve a single goal (split backend, frontend, no need to complicate).Production deployment encompasses a bunch of things that it is good to be aware of, but not every software engineer needs to know (depending on the type and size of the project). Like running a simple website, or deploying a small application to public-facing web server you should be familiar with, but dev ops, it ops, hardware management are all fields that people can specialize in instead of writing business application logic.I know a lot of software engineers who never configured production tomcat, never seen nginx configuration, only heard of reverse proxy in meetings, and that's also ok.",The_Sabretooth,2025-04-11 21:15:12,5,learnprogramming,t3_1jwtvbl,False,
mmndgf6,"\> It feels like I'm missing an understanding of design, architecture, modularity, and deployment.You are. Write a design doc. When the scope starts to creep either pare back the scale, or expand the scope. Build something you finish. Start with a simple app. Weather, todo, shopping list, expense tracker, whatever. Get something ABSOLUTELY BAREBONES out there. For a weather app, just display the weather in C or F where you live. Then add in a box to select where to look up the weather. Then add in more facets (humidity, daily high / low). Then style it, then make it automatically update every amount of time, then make it do progressively more and more. Set milestones, when you achieve them, set new milestones. You may know how to code, but you suck at project management.",sarevok9,2025-04-11 23:27:38,4,learnprogramming,t3_1jwtvbl,False,
mml688w,Production software is just a matter of polishing and integrating everything right. Learn backend and frontend and work on it until it's production ready you'll see you know what to do all along once you begin,Designer_Currency455,2025-04-11 16:31:38,5,learnprogramming,t3_1jwtvbl,False,
mmmjnfv,A lot of the advice here is for websites. Does anyone have advice for standalone applications? I’m hitting this same wall rn and I’m not sure what my next step should be,mierecat,2025-04-11 20:39:08,2,learnprogramming,t3_1jwtvbl,False,
mmn0tai,"The Odin project is a great resource.It takes you through full stack development and over the course of the project you build up to creating fully functional web apps. If you're already comfortable with html, css, Javascript you should be able to fly through it.",greenscarfliver,2025-04-11 22:12:35,2,learnprogramming,t3_1jwtvbl,False,
mmt6qzx,Rubber ducks are cheaper than babies for this purpose.,fishfork,2025-04-12 23:06:02,235,learnprogramming,t3_1jxtnkl,False,
mmt5lf3,"This is very cute and good idea aha, and I think I actually begun in programming in this way by osmosis from being with my father as he partake this as his hobby",Kseniya_ns,2025-04-12 22:58:46,27,learnprogramming,t3_1jxtnkl,False,
mmthyvq,"https://en.wikipedia.org/wiki/Rubber_duck_debugging> Many other terms exist for this technique, often involving different (usually) inanimate objects, or pets such as a dog or a cat. Teddy bears are also widely used.It's a useful technique!",rowr,2025-04-13 00:16:28,27,learnprogramming,t3_1jxtnkl,False,
mmu8lb7,"She’s your rubber ducky! So adorable! I wish I could do this with my 2 year old, but she *insists* on constantly being the driver when we pair program, and she just “pop!”s my keyboard and breaks my app :frowning_face: should’ve started training her earlier, damn junior devs!Congrats on your baby :two_hearts:",lolideviruchi,2025-04-13 03:16:36,12,learnprogramming,t3_1jxtnkl,False,
mmtg5o7,"This is a valid technique- it's why coders are sometimes paired up- just having someone there to bounce ideas with, even if they don't know what you're specifically doing, can really improve your performance.",random_troublemaker,2025-04-13 00:04:44,10,learnprogramming,t3_1jxtnkl,False,
mmtdy3i,Being a virgin helped me learn to code.,Narrow_Priority364,2025-04-12 23:50:41,20,learnprogramming,t3_1jxtnkl,False,
mmt7qy6,Me too! I love Java!,FuzzyFaithlessness37,2025-04-12 23:12:12,7,learnprogramming,t3_1jxtnkl,False,
mmtkcl1,I keep my tarantula on my desk to act as my “rubber duck.” My tarantula is as still as a rubber duck so it works!,PostingImpulsively,2025-04-13 00:31:53,7,learnprogramming,t3_1jxtnkl,False,
mmux5yt,Your baby gonna be a tech genius,chihiro_itou,2025-04-13 06:44:22,5,learnprogramming,t3_1jxtnkl,False,
mmu4img,"That's cool, I did & do, is more fun when they can ask ""why?"" or ""what does it do?"" back.I tend to keep something or just talk to the code directly when they are not around.",CarlosSRD,2025-04-13 02:48:07,3,learnprogramming,t3_1jxtnkl,False,
mm5lkqf,Data structures and algorithms. I still think that way to this day,VoiceOfSoftware,2025-04-09 03:41:14,202,learnprogramming,t3_1juwjod,False,
mm5m9jq,"Any kind of ""Programming 101"" type class, primarily because exercises are de facto code reviews",high_throughput,2025-04-09 03:46:12,55,learnprogramming,t3_1juwjod,False,
mm5z7cw,"any course with a big tentpole project/lab milestone in it. computer architecture/design, compilers, OS. some security/networking courses",RiskyChris,2025-04-09 05:29:21,62,learnprogramming,t3_1juwjod,False,
mm6rt2v,"So, it depends. As the top comment says - Data structures and algorithms - you can certainly learn them without college, but you probably won't understand the space vs time complexity, which is going to make you really lacking if you need to work on performant systems. Moving past that, college gives folks a good foundation since there is just SO MUCH shit that you don't even know that you don't know. For instance, a lot of bootcamp grads don't really understand how to get their code running on ANY web platform -- because they have no idea about filesystems, networking, dns, hosting.... none of it. Then when you scale that up to the enterprise they have absolutely no idea about load balancers, replication, traffic shaping, etc. While college grads aren't going to have hands on experience with these things, I've found that they generally have some foundational knowledge to ""how the internet works"" that I can anchor to. And unfortunately, this doesn't just apply to networking, but it's EVERYTHING. Differences in file paths, text encoding, and general code portability that you see commonly aren't really taught in the ""build this project"" monorail of tutorials / bootcamps. The other thing that I see pretty commonly is a complete whiff on generics / abstractions / object polymorphism, for whatever reason a lot of folks don't understand that Type: Shape can contain be the parent to Triangle and Triangle extends shape.... Nor do they understand WHY someone would want to do that.",sarevok9,2025-04-09 10:23:20,27,learnprogramming,t3_1juwjod,False,
mm6cy1o,"I'd flip it around.MOST computer science courses are going to be useful and you're going to pick up things that you wouldn't learn on your own.A good college course beats self-learning in three ways:1. You don't know what you don't know. There are a lot of things taught in college that you'd never think to learn if you just focused on programming.2. Some topics are just plain difficult. C++ is unforgiving. DS&A is really tricky. Theory of Computation will mess with your mind. Learning those in an interactive environment where you can ask questions is far better than trying to self-teach.3. Finally, you'll be surrounded by other students who are learning at the same time. You can help each other. You can compare notes. You'll be exposed to multiple ways to solve the same problem.At some schools, the least useful courses are the ones designed to be practical: ones that teach software engineering principles, project planning, and so on. In my experience they're the most divorced from the real world. They teach things like UML diagrams that are rarely used, and they DON'T teach things like Git and Jira, which are used everywhere.",dmazzoni,2025-04-09 07:46:18,20,learnprogramming,t3_1juwjod,False,
mm65ugs,"Intro to programming, OOP, Data Structures & Algorithms",NabilMx99,2025-04-09 06:32:23,6,learnprogramming,t3_1juwjod,False,
mm7ls30,"I'll go against the popular opinion here and say: programming, data structures and algorithms are easier self-taught. These parts are covered everywhere on the web and if you really want to, nothing stops you from acquiring that knowledge at your own pace with lots of practical application.The programming lectures during my university were a total waste, as were the ones on software patterns. Data structures and algorithms was at least okay. And really, O(n) notation isn't really that hard, complexity theory only gets nasty outside of the stuff you need for a day job. On the other hand the big advantage of university lectures is the mathematicians mind-set of taking the entirety of a problem, reducing to its most fundamental equivalent form and then selecting from all possible solutions the ones with the desired properties. This is something that very few self-taught people can do, and real life project work also favours incrementally approaching a best-effort. But every once in a while you need to have a problem solved for every possible input, and then this is extremely valuable.Also a big plus is a structured introduction to concepts that aren't easily explained or need prerequisite knowledge or even specialised hardware. Stuff like:- Hamming codes only really make sense if you think of them as maximally distant points in high dimensions- Wavelet compression needs Hilbert spaces as prerequisite- Cryptography is tons of esoteric mathematics- chip design, robotics, classical machine learning, applied computer graphics like MRI are all not really doable on a standard notebook- databases are about a lot more than SQL or normalised tables. There's a whole set algebra around safe transactions behind it.",aanzeijar,2025-04-09 13:46:55,5,learnprogramming,t3_1juwjod,False,
mm5zsbv,"Well the benefit that you gain in college itself is being able to grind it out, learn what the best methods are of learning to be able to learn anything in high volume without thinking it's a 'waste' while following general courses to make all the puzzles fit a lot faster in the future.Also communication skills like teamwork and presentations etcAlmost everyone overestimates their discipline of self-studying.",Wingedchestnut,2025-04-09 05:34:33,9,learnprogramming,t3_1juwjod,False,
mm5po6j,Graph theory. Discrete structures.,spacemunkey336,2025-04-09 04:11:10,9,learnprogramming,t3_1juwjod,False,
mm6lqqm,"Relational database normalization. On my own I would have focused on SQL Queries, but our Database lecturer and TA who oversaw exercises/labs were hyper-focused on teaching us how to design tables right, and the consequences of getting it wrong.UML, as a tool to document your project, from business requirements, through analysis, design up to deployment. Two reasons for learning it in college: I wouldn't have bother on my own, as coding is more fun. Unlike coding, there is no compiler to point you to syntax errors, and you can't run UML to check if it returns correct result, therefore TAs feedback is essential.",ksmigrod,2025-04-09 09:22:19,3,learnprogramming,t3_1juwjod,False,
mmijmah,"In an ideal workplace, there should be a dev that's designated as your mentor. Mentoring an intern or a new hire should be planned and officially recognized as a part of somebody's workload. It doesn't has to be hand-holding, just introductions of where is what, who is A B C, standard procedures etc. and a person that you can ask stuff away at anytime without feeling like interrupting their work, because it IS their work too to guide the mentees",ha1zum,2025-04-11 05:02:14,129,learnprogramming,t3_1jwf1z3,False,
mmiwjyx,"If they are setting you up to fail I’d just have fun and fail - you’re an intern, what are they gonna do if you kill their infra xd",Sziszhaq,2025-04-11 07:04:58,75,learnprogramming,t3_1jwf1z3,False,
mmjot0f,"This sounds mostly like the industry to me except for the part where you can't get support and people are telling you you should just be able to do this. Sounds a bit toxic.The unclear expectations, layers of probably pointless complexity and endless migrations though? That's just tech, baby. Lol.",askreet,2025-04-11 11:39:59,21,learnprogramming,t3_1jwf1z3,False,
mmi3cxd,"It sounds like this company has a bad onboarding process for new employees, while also treating their interns like regular employees. Setting interns loose on figuring out a deployment after one week is wild to me. We have mentors assigned to our interns so they always have someone to check in with to help them out and get them up to speed, and they're probably not even committing any code for the first two weeks with all the training thrown at them.Internships aren't just for the company to decide if you're ""good enough"" to hire after graduation, it's also for you to evaluate the company and decide if *they* are good enough for *you*. I would encourage you to try and finish out your internship and make the best of the experience, but wouldn't stress over the position so much that it comes before your classes. Set boundaries and communicate any unrealistic expectations - don't let them take advantage of your student mindset by giving you homework, just put in your hours like any other job then don't give them any more of your mental energy. Don't sacrifice your schooling for a potential job at a company that you know isn't going to treat you well anyway. Just remember to be respectful and don't burn bridges if things come to a head, and accept the possibility of leaving the internship early if you or your employer find the situation becomes untenable in the future.",artibyrd,2025-04-11 02:57:06,59,learnprogramming,t3_1jwf1z3,False,
mmk4f8f,Reading these comments made me depressed,LetTheDarkOut,2025-04-11 13:21:03,13,learnprogramming,t3_1jwf1z3,False,
mmluac6,">Or are they actually just mishandling the whole internship thing?Yes. Sorry, I can't offer better than this, but they are definitely doing a very poor job. The best I can suggest is to make it your goal to learn as much as possible. If this is how they're behaving, you might just do better to focus on your college work instead. Don't let these people cause you to fail at both.",linuxlib,2025-04-11 18:29:50,7,learnprogramming,t3_1jwf1z3,False,
mmm7eqr,"Sorry to hear you're going thru this. No, not all internships are like this. The ""this is an easy task"" and other passive aggressive responses in particular are major indicators of a fairly toxic culture in that team and very likely the company. That's not typical of most teams, but it's also not as rare as one might wish. (And it is more common in teams that are hiring, because those teams have a higher turnover.)Toxicity aside, the overall lack of guidance sounds like what happens when the hiring team is more swamped than they expected when they signed up to have interns. The pattern of having to drop lower priority balls in a crunch is pretty normal, and it's likely ""intern support"" is one of those lower priority balls.In that situation, an attitude of ""interns are both cheap and temporary, let's give them a non-essential nice-to-have and if they get it working, great, if not we'll sort it out later"" is the kind of strategy some people will run with if they have some interns they don't know what to do with. Another possibility is they're attempting a sort of extended interview, where what they wanted wasn't so much to train people as to identify people with the tenacity to get it figured out, with an intent to make a job offer to those already at the ""swim"" level of capabilities (in a complete failure to understand (or probably even comprehend the possibility) that this is a side gig for you while you're mainly trying to graduate, rather than your sole full-time work focus like their jobs are).Either way, your best outcome here is to get it running more or less ok, get a good letter of recommendation, and find a different place for your next paid position. (Tenacity, managing burnout, and finding alternative second-best outcomes under limited support and uncertainty of project success are all important skills in this field, but ideally you'd be sort of eased into them with some decent mentoring along the way, rather than left alone to maybe figure out your burnout damage or not. Also, burnout is a pretty well-studied phenomenon, and it will serve you well into the future if you read up on the literature, as another side project for an hour or 2/week.)For getting your actual task figured out, there's a few decent options under the guidance they've (implicitly) given that they don't want their engineers to be bothered. You're doing the right thing by posting in external forums, this approach can help with your technical questions too. (Plus of course the web searching you're presumably doing about the error messages and unexpected behaviors you're seeing.)You can also try finding a person or 2 in the company (edit: or outside the company) (but not your official team and not the point of contact telling you it should be easy) who you like their vibe, and just ask if they'd be available for an hour each week or so, and if they can, see if you can collect good questions they can help you get thru efficiently, or point you in their idea of the next step, for stuff you don't know what to do with.Also a useful trick is to keep a slide deck open and capture screenshots of useful things to ask about. Later you can trim it into a presentation or a walkthrough of issues you still have that you can show people easily.Anyway, good luck and remember that your most important goal in this arrangement is to impress someone enough they want to work with you and will write you a letter and/or be a good future contact in another job. Getting your ""easy"" project running is a decent means to that end, but you can also potentially achieve it by showing people the hurdles you did overcome on the way to not finishing.(Btw, most sane people doing actual backend work know that nothing in this space is as easy as it sounds, so the people telling you this are probably either lying to put pressure on you or not all that experienced themselves and mistaken about the difficulty of something they haven't attempted. Possibly they just forgot how they learned the things they know now and how hard it was, but probably they don't know how to do it either, and would take at least twice as long as their estimate.)",dosadiexperiment,2025-04-11 19:37:14,6,learnprogramming,t3_1jwf1z3,False,
mmmslpr,"I was in your position before. Just my two cents:What is not ok * No onboarding structure: Being dropped into a codebase on day 4 with minimal context isn’t setting you up for success—it’s just irresponsible.* No dedicated mentor: Saying “this should be easy” to a new hire without offering guidance is lazy management. Interns and entry-level engineers usually need a few weeks to a few months to become productive contributors (reference: The Manager’s Path by Camille Fournier).* Poor leadership: The people supervising you either don’t know how to mentor—or they just don’t care to. That reflects poorly on them, not on you. * If I were mentoring a second-year college student, I’d fully expect them to get stuck and need hands-on guidance at first. That’s normal. Once they’ve merged a few pull requests and built some confidence, then I’d start stepping back and letting them operate more independently. That’s how real growth happens.What you can do * Document everything: Keep track of what you tried, what went wrong, error logs, who you asked for help, what they said, etc. It shows initiative and covers you if anyone questions your effort. Learn as much as you can but do not stress over it after working hours.* Ask for clarification in writing Something like: *“Just to confirm, we’re expected to deploy a live service to EC2 using Docker and environment variables—is that correct?”* This can prompt a reality check or at least put expectations on the record. This sounds like bad internship experience, and that’s OK. Internships are a two-way street: *they* are evaluating you, but *you* are also learning about them. If this is how this team treats interns, I wouldn’t want to work there full time. Don’t let their disorganization hurt your confidence. And like others said—prioritize school. That’ll outlast this internship.Many people have gone through rough starts and still gone on to build great careers. Doing your best in a poorly managed environment speaks volumes about your resilience. Try to take what you can from the experience, learn from it, and keep moving forward. One difficult internship or job won’t define your future—it’s just one chapter, not the whole story.",haitai_,2025-04-11 21:26:33,3,learnprogramming,t3_1jwf1z3,False,
mmihh5z,"I did a dev internship like this but it was for a whole year. There was no training, minor handholding and they had the same mindset of ""learn by doing"" where they treated me like a junior than an intern.The difference was that I was with very supportive people. There was a mentoring program as well where I had 1-1s fortnightly.My advice is to just grind it out. The experiences you will gain are really worth it, not just from a technical standpoint but from a behavioural standpoint as well (like how to be independent, proactive, effective use of time and how to talk to the right people for questions). At the start, I felt overwhelmed, I hated how there was no training or time given to learn some tech (had to learn while working with them). But looking back, I appreciate the experiences because I learned so much and accomplished a lot. It's experience that future employees will appreciate.So just stick with it.",Classymuch,2025-04-11 04:44:02,6,learnprogramming,t3_1jwf1z3,False,
mmio5rp,"Don't despair. Take a deep breath.Use an LLM to discover the unknowns, then after you know what you don't know, you can investigate and build your knowledge.Try to make little experiments and document your findings, so you know what you tried, with which parameters and constraints, and what worked and what didn't.Investigate best practices and try to implement them. You can you the LLM for this too.You can ask ""What's the best way to deploy a containerized app to AWS?""",EasyLowHangingFruit,2025-04-11 05:42:30,6,learnprogramming,t3_1jwf1z3,False,
mmnxwyv,"it's not fun but you'll be grateful for it later, it'll make you a better engineer",invisible_handjob,2025-04-12 01:36:05,98,learnprogramming,t3_1jx64lp,False,
mmo3bgr,"I'm skeptical that the code generation part is particularly important, but you will be parsing stuff throughout your career, and parsing text into an AST is a great way to teach complicated parsing tasks.",POGtastic,2025-04-12 02:10:56,35,learnprogramming,t3_1jx64lp,False,
mmnywly,Compiler design is one of the things that differentiate a computer science curriculum from a computer programming curriculum. It came in handy early in my career when I was hired to write firmware for an audio product and the language in use was a threaded interpretive one. Knowing how to parse language and optimize code or drop into assembler can come in handy even if you never write your own compiler.,dswpro,2025-04-12 01:42:32,140,learnprogramming,t3_1jx64lp,False,
mmo67c2,> Besides it's not fun expereinceThat's too bad. I had a lot of fun writing an interpreter in my Programming Languages class. It's definitely a foundational exercise.,high_throughput,2025-04-12 02:29:54,21,learnprogramming,t3_1jx64lp,False,
mmo18mk,"Its a good study. You get to exercise a lot of things you learned already and get exposure to 4 or 5 topics that you would not see anywhere else. Odds are, you will not be actually writing a real compiler, ever. That isn't the point anyway .. the point is that exposure to language theory, computer theory, optimization, dealing with user errors / interface, and more. You will learn some things in there, and you may even find you want to know more about some of them, which is what college is about, getting you exposed to things that you want to know more about while teaching you something practical to use when you graduate.",Independent_Art_6676,2025-04-12 01:57:29,15,learnprogramming,t3_1jx64lp,False,
mmovkna,"Understanding the underlying machine that *everything* must run on is integral to being an effective software engineer. You can master a language and become capable of creating anything you envision with it - but you'll always be sub-par next to someone who can do the same, and also understands the machine and what's happening underneath their code.That being said, I have seen a lot of CS majors who come out not knowing how to do a dang thing. The only way you can become a skilled proficient coder is by writing code, period. There's no shortcut, there's no easy way. For now, LLMs are still just a tool - not a shortcut or automatic code generator.",deftware,2025-04-12 05:48:36,11,learnprogramming,t3_1jx64lp,False,
mmolbd5,"It's a Computer Science degree, not Basic Programming degree. Nobody said every aspect has to be fun. Very few people say ""I love assembly"" or ""subnets are awesome"", but they're still a necessity in a CS degree.",UtahJarhead,2025-04-12 04:18:59,12,learnprogramming,t3_1jx64lp,False,
mmo1nd0,"You understand languages genericly by looking at them the same way the computer looks at them. A different perspective of something you have been doing all along. You can learn to cook by following a recipe. But if you learn how all the ingredients interact you will know how to substitute missing ingredients, or know what went wrong when the food doesn't come out as expected. Making your own dish makes you a better chef instead of just a cook. Maybe you use these skills in the future, maybe you spend your whole career without ever needing them.",TurtleSandwich0,2025-04-12 02:00:07,3,learnprogramming,t3_1jx64lp,False,
mmo5q6s,Yes. Learning gives you more than just knowledge. It gives you confidence. People that don’t have a CS degree has this fear around compiler. Solutions that can be easily solved by compiler / meta programming methods get instantly rejected.,Logical-Idea-1708,2025-04-12 02:26:45,2,learnprogramming,t3_1jx64lp,False,
mmoaw0c,"That course was a lot of work (especially the practical part), but I learned more from it than four other courses combined.",Careless_Quail_4830,2025-04-12 03:01:32,2,learnprogramming,t3_1jx64lp,False,
mmqw9d4,People saying that it is not real programming are clowns.,thuiop1,2025-04-12 15:31:53,295,learnprogramming,t3_1jxjt0v,False,
mmqx1aa,"I mean, just ask the next person who says it's not ""real programming"" if they're writing in assembly or machine code",re_irze,2025-04-12 15:35:59,98,learnprogramming,t3_1jxjt0v,False,
mmqx3ru,"In high level languages you simply do a different kind of programming. In C, you'll spend days implementing some fast and memory efficient hashing algorithm, worrying about all the little bits that go into it. In Python, you take that hashing algorithm as a black box and build your REST API login mechanism with it in hours.Both are real programming, both are different.",deceze,2025-04-12 15:36:21,71,learnprogramming,t3_1jxjt0v,False,
mmqxuh0,"Python is absolutely a real programming language, don't listen to anyone who tells you otherwise. Now, Python does a lot of things under the hood to help you out, which is why it's good to have knowledge of different data structures. For example, Python doesn't natively have arrays. Instead, it has lists, which handle lots of things for you that you would have to do in other languages. It's good to have a knowledge of how these things work so you can better understand how to program in other languages as well, since Python won't work for all applications. You shouldn't ""choose"" C++, you use the language that is best for your application, especially if you're doing personal projects. At my job, I've automated a ton of my daily work away, using exclusively Python, because it's so easy to do and simple to write, debug, and adapt to new situations. You're exactly right with your analogy of a hatchet vs an axe. There are a lot of people who will tell you that you need an axe, when in reality, you only need the hatchet. But to answer your question, yes, Python is absolutely a real programming language, and no, it doesn't matter that it's simple. It just helps to have a little knowledge of what's really going on. Once you have a good grasp on the language, you should try branching out into a different language to learn a little bit more about programming. I personally learned Java after Python, then C++, then C (since I primarily work on microcontrollers now), and that really helped me understand what's going on, since C++ and C do not hold your hand at all. Java is easier to learn than C++, which is why I recommend it after Python. But you'll have a million people telling you what they think is the best way to do something. In reality, if you aren't doing this for work, then the best advice I can give you is just to have fun. This is a super enjoyable hobby and a great skill to have, but don't let someone suck the life out of it for you by telling you that there's one deterministic way to enjoy your programming journey. There isn't. Have fun, enjoy what you're doing, and the knowledge and skills will come ten times faster than if you were to force yourself to do something you don't want because of some stupid arbitrary rule that someone put forth.",bigmoist469,2025-04-12 15:40:11,21,learnprogramming,t3_1jxjt0v,False,
mmqwizb,"Next time someone tells you that, answer that their wrong and SQL is a real programming language too to piss them off.",able_trouble,2025-04-12 15:33:19,57,learnprogramming,t3_1jxjt0v,False,
mmr4gwe,"No idea why you're being downvoted, it is a real programming language. Hell, it's the primary language powering a lot of the AI work being done currently...Anytime someone critisies the fact you're using something rather than encouraging you, you've likely found an elitist fuckwit and their opinion can be summarily thrown away.I did PHP for many years also, built some amazing things with it, came across haters, I didn't really care though my paycheque and the ability to build things was all I cared about.You keep going dude, great that you love it, you already know to to not listen to these fuckwits given your post, you're all good.I've been programming 20 years too, you'll always encouter elitists, or contrarians, part of the game, just keep your wits about you and use your own judgement, most programmers are not geniuses, just highly opinionated.",snozberryface,2025-04-12 16:14:32,8,learnprogramming,t3_1jxjt0v,False,
mmqxw8j,Programming languages are tools and you just use what is best for the job. In most cases you don't need the more complex and fanciest one. Python is good enough for general purposes. You should still focus in learning computer science and SW development fundamentals since those apply to any language and will transfer whenever you need to learn a new language.,morto00x,2025-04-12 15:40:26,7,learnprogramming,t3_1jxjt0v,False,
mmqxgpp,>Isn’t the goal of a lot of programming to be able to accomplish complex things more easily?This is the premise I would dispute. That may be the goal for some people. But the goal for a lot of people in learning programming is for the sake of understanding programming and computer science.For this goal Python just isn't a good language because it abstracts away just about everything the computer is doing.,Soft-Butterfly7532,2025-04-12 15:38:12,9,learnprogramming,t3_1jxjt0v,False,
mmqyvx8,"The people saying that using Python isn't real programming because it's high-level are probably not coding 100% in assembly. C++ is still high-level, just a tad more complex than Python. C is mid-level. I bet they're not going any lower than that, at least not for the majority of projects. Which is hypocrisy; if they were serious about layers of complexity adding legitimacy to their programming they would program 100% in machine code. Just ignore them.",laundromatspider,2025-04-12 15:45:34,3,learnprogramming,t3_1jxjt0v,False,
mmr23fa,The ironic thing is that the people who say those stuff are most definitely programming noobs that just finished lesson 2 of CS50.,redfishbluesquid,2025-04-12 16:02:04,3,learnprogramming,t3_1jxjt0v,False,
mmdlbkh,Real masochists [build their own](https://www.youtube.com/watch?v=HyznrdDSSGM&list=PLowKtXNTBypGqImE405J2565dvjafglHU),Mortomes,2025-04-10 12:28:29,40,learnprogramming,t3_1jvwhws,False,
mmduq1k,"My Gram used to code in binary. I remember when I was like 10 and had almost no computer experience. I went down to visit her and she took me to work with her. She had this old black and green screen(this was back in the late 80’s/early 90’s) that was taller than it was wide. It had 1’s and 0’s in groups of four in several columns. She tried to explain what she was doing. She was like see here I change this 1 to a 0 and it does or means this. I was very interested but had no idea what she was talking about. She is so smart(phd in physics) that she didn’t understand I didn’t get it. I just had to eventually say I understood and we went and did something else.I’m not sure why exactly she was doing it in Binary, but it was a government system she was working on.",JoeBuyer,2025-04-10 13:25:40,33,learnprogramming,t3_1jvwhws,False,
mmemv0d,"If you are knitting your programs, are you even a programmer?",Aksds,2025-04-10 15:49:24,5,learnprogramming,t3_1jvwhws,False,
mmemais,i had to write a tik tak toe program in assembly in the 90s. it sucked because if it crashed you had to wait for the entire thing to reboot. pcs were slow.,EvidenceBasedSwamp,2025-04-10 15:46:38,7,learnprogramming,t3_1jvwhws,False,
mmdrqcy,"I bought one, but haven't had the motivation to actually try and program something yet.",Archerofyail,2025-04-10 13:08:07,1,learnprogramming,t3_1jvwhws,False,
mmdsall,I got one and it comes with a USB connector so I can upload assembly coded programs in hex. Pretty neat stuff. I got motivated watching the hackathon wizards programming on it: https://www.youtube.com/live/X-XJmlMLx7k,spocek,2025-04-10 13:11:29,1,learnprogramming,t3_1jvwhws,True,
mmeadps,Here is a detailed video presentation:https://youtu.be/ix__enrtYF4,spocek,2025-04-10 14:47:40,1,learnprogramming,t3_1jvwhws,True,
mmf9urh,"I learned assembly on a ""PEP/8"" virtual machine. https://computersystemsbook.com/4th-edition/pep8/",wpm,2025-04-10 17:41:21,1,learnprogramming,t3_1jvwhws,False,
mmggbci,I'm just imagining you trying to force a baby to learn to program in assembly...,ITAdministratorHB,2025-04-10 21:08:27,1,learnprogramming,t3_1jvwhws,False,
mmksh9w,"not the same, but we had a similar thing in our microprocessor class. we would write asm for intel 8085 on paper and hand translate the mnemonics to hex.",z3h3_h3h3_haha_haha,2025-04-11 15:24:02,1,learnprogramming,t3_1jvwhws,False,
mm8cw4t,"Design Patterns, Data Structures, and Algorithms. Study, memorize, understand them.The rest kindof falls in to place over time.",laminam,2025-04-09 16:02:29,47,learnprogramming,t3_1jv86ne,False,
mm8a5k9,"What helped the most improving coding skills?- Coding. Reading others code especially large open-source projects.How did you build consistency without burning out?- From my experience to build consistency you need a work ethic. To develop a work ethic you need to commit to doing the thing you want regardless of whatever happens in your day. Sun, rain, unexpected events etc. See it as a non-negotiable to do practice for self-improvement just like how you’d see working out. Commit to it for three months, then reevaluate taking some days off. 3) Sometimes you can’t balance everything. You’ll need to either sacrifice stuff like sleep, social life etc if you wanna do everything well. My suggestion is have an overview plan of your school work. Then every week/day prioritise 2 ~ 3 main tasks could be school work/leetcode etc. Also try win the morning and don’t waste time scrolling in bed (don’t do it at night either). Good luck my friend",Herb-King,2025-04-09 15:49:05,55,learnprogramming,t3_1jv86ne,False,
mm8gk9r,"For me, it was doing projects but not easy projects. Things like building my own http server implementation in C, building different data structures in C, making my own database, building my own ORM implementation. These projects are really challenging, especially if you are building it to the standard of something you would feel comfortable actually using. The other side of it is that some people struggle more with burning out, procrastination and time management compared to others, and there is no easy fix. Sometimes you just have to force yourself, and sometimes you will fail to do that. Unfortunately some people have it easier than others, but that isn't a bad thing, we can't all be 10x devs, we simply have to be productive, which is a much lower bar and very achievable.",zdxqvr,2025-04-09 16:20:43,11,learnprogramming,t3_1jv86ne,False,
mm8njd1,Honestly talk with your professors and TAs. Especially your TAs they are there to help you understand and assist you.Do come prepared with good questions. That’s really the only way you can functionally improve.,SeattleCoffeeRoast,2025-04-09 16:54:51,7,learnprogramming,t3_1jv86ne,False,
mm8qnvk,Get involved with an open source project. That'll help you learn how to deal with a larger codebase and how to read others' code.,David_Owens,2025-04-09 17:09:57,3,learnprogramming,t3_1jv86ne,False,
mm8glew,It depends a little if you want to sharpen your interview skills or get a better base in programming.For leetcode(interview skills) I would focus on the Leetcode 150 and set a benchmark like being able to solve a \[algorithm\] medium in X minutes.these work almost in chapters by algorithm/data structure. You don't need to grind hours a day you just need to be able to recognize the type of problem a given leetcode question is and apply the patterns you know.In terms of what actually helps real-world Dev skills I would advise to either work on your own project from scratch or try your hand at OSS. the most important thing whatever you do is that you build consistency. you don't need to spend 8 hours a day doing projects/leetcode you just need to commit to whatever goal you have.,AndreasDi,2025-04-09 16:20:53,6,learnprogramming,t3_1jv86ne,False,
mm8tqex,"You're asking for advice, but you have to ask yourself why you're in this situation. Do you find yourself procrastinating? If so, what do you do when you're procrastinating? What do you enjoy more? You might have to tell yourself that this might not be fun.How are you coasting? Do you ask others for help? Do you use ChatGPT when you shouldn't be? I would suggest writing down your plans. Like, pick a small outline. At the very least, just work on an easy LeetCode problem. Also, check out YouTube videos on how to solve these problems. Maybe work with some friends in a group study session. Maybe reward yourself if you accomplish some tasks. Try not to put too much on your plate because it can discourage you from doing the work. Slowly ramp up what you do. Keep a journal of what you've accomplished. You can record how you're feeling as you try to motivate yourself. If you're frustrated, write down why you are. Periodically read what you've written to understand yourself better.For many, they wish they could understand programming better, but they don't enjoy the process. People often say procrastination is due to being a perfectionist, but it's really more about pain avoidance. Not physical pain, but pain from frustration at how difficult everything is. It feels like taking bad-tasting medicine. You know you're supposed to take it, but it's not pleasant.See if you can form a small group and hopefully you can motivate one another.",CodeTinkerer,2025-04-09 17:24:29,3,learnprogramming,t3_1jv86ne,False,
mm9w6zj,"At least for myself I tend to really struggle with motivation. What I found that worked for me at least was to start a project for someone else (basically a toy built using a Raspberry Pi Pico). It had a deadline (Christmas) and it was for someone I cared about, so I really wanted it to be good.It turned out to be great, I learned a new language, learned some basics about embedded systems and learnt some basic soldering + electronics. And I kept working on it because I knew it had to be done.My main takeaway is that nothing compares to just building something beyond your comfort zone, and finding a strategy that allows you to keep at it consistently for a long period of time is essential. In my case it was building something for someone else, but it may be different for you. Try a few things and see what works for you.",Eternity_in_seconds,2025-04-09 20:29:05,2,learnprogramming,t3_1jv86ne,False,
mm99g2g,"How is this the only question that ever gets asked here, the answer is always the same, and yet every day there two dozen more.The answer is always ""just do it"".How do I get better at free throws? Just do it.How do I get better at woodworking? Just do it.How do I become a better coder? Just do it.As you run into things you don't understand, narrow your focus down to just that thing for a few weeks and really drill it into yourself.This is the same for learning everything.You suck, you suck, you suck, you suck less, youre just not very good at it, you're getting better, you're good but still shaky, and I think it honestly stops there.No matter how good you get there will always be more. But you're just going to suck at it for a while. Everyone does at first.",lionseatcake,2025-04-09 18:38:41,3,learnprogramming,t3_1jv86ne,False,
mm9mzoq,Code. Find some projects you can use. And solve the problems.,povlhp,2025-04-09 19:44:54,1,learnprogramming,t3_1jv86ne,False,
mm0y6b9,"I don't know why you believe the cloud providers arent possible, they 100% use one of the big hosting providers to run their services, they just switch do some obscuring to avoid it being too obvious and they just create new accounts and hosts when they get banned. thats at least how i think it is realistically done.",BertoLaDK,2025-04-08 12:49:41,88,learnprogramming,t3_1jucmhc,False,
mm0zdvj,Great question. You should broaden the heading to simply how do pirates broadcasters pirated content and live streams globally.You might get a more broad response. I’ve often thought about this as well. The backend infrastructure’s must be quite robust.,Corvoxcx,2025-04-08 12:57:07,95,learnprogramming,t3_1jucmhc,False,
mm0zwlb,"Why do you assume that geographical redundancy is needed to avoid buffering?Having servers on every continent is useful to reduce **latency**, because latency is fundamentally limited by the speed of light and the number of routing hops between two points. But for video streaming, latency only matters at the very beginning of playback. What matters for video streaming is consistent *bandwidth*, and this typically isn't a bottleneck because ISPs on different continents are connected by multiple high-bandwidth backbone connections.You will only notice ""buffering problems"" if the video data on the client side **runs out**, and that only happens if the bandwidth of the network connection is not sufficient to keep putting data into the buffer as fast as it's being played.As an example, I'm in the USA, and I just did a bandwidth test using a server in Perth, Australia, which is about as close as you can get to the opposite side of the world from me. I got a bandwidth of 60Mbps, which is way more than enough for an HD video stream, and a latency of about 230ms. That latency is not ideal -- it'll add a perceptible delay of a fraction of a second when first loading a page, or when seeking to a different point in the video -- but it doesn't affect smoothness of playback.",teraflop,2025-04-08 13:00:14,51,learnprogramming,t3_1jucmhc,False,
mm10m4d,"Aws, Azure, and GCP are the major cloud providers, but they are not the only ones. There are some in some parts of the world that would not care about any copyright claims unless it is from their own government.The websites are also up because usually they do not host on the same infrastructure the frontend+backend and the media content.On most pirate sites, you can read at the end of a webpage that they do not host any content but are just an index for the content.This may give them *some* protection because if they get a complaint, they can just say they do not host the content.It is all about laws. Most of their infrastructure is hosted in some countries in which is hard to take the content down.Another issue is that companies can take down a website, but tomorrow 10 more websites will spawn. That is why most companies just fill a complaint to their govs and ask to block that website. But you can just change DNS, and the block is gone. But this is good enough for them cause most users do not know how to change DNS and will either go to another pirate website or consider buying the content.",ArgoPanoptes,2025-04-08 13:04:34,15,learnprogramming,t3_1jucmhc,False,
mm1rs6j,"This is not a mystery, it's built into the user interface itself if you pay attention. The piracy websites do not host the content, they are link databases, they have a bunch of links to copies of the content that are uploaded to other providers.The websites that actually deliver the content are generic upload sites like youtube, except they are not as proactive at enforcing takedowns, and there are hundreds of generic versions of these upload sites. The upload sites attempt to comply with all regulations and DMCA requests, but there are two reasons why that they are always behind. For one thing a website like youtube has algorithms that proactively detect infringing content, which these generic sites lack, for another there are dozens or hundreds of these generic upload sites and each of them will get many different copies, or similar copies of the same media. Finally they make their money in many cases primarily or exclusively by hosting specifically for this gray area market.You really need to look into the details of the DMCA to understand how and why the sites are designed like they are. The EU has its own regulations other than the DMCA, which I am less familiar with, but it's the same idea. It's a shell game of who is responsible at the end of the day, which involves taking advantage of legitimate privacy protections.Given I am not a huge fan of copyright law in the first place(a royalty system is better IMO, rather than exclusive distribution rights, especially with the lack of physical media), I don't have a huge problem with this whole system, but it ends up being wasteful and leading to creators getting zero revenue, instead of a healthy revenue share that would happen in a royalty system, without exclusive distribution rights.If we had a royalty system similar to radio, then the website that offers the best service for the lowest cost would win, and content creators would earn a consistent amount on their media that platforms could not control. But as it is, platforms love the power that comes with exclusive distribution rights, so they lobby hard to maintain an antiquated and inefficient ""Intellectual Property"", ie publishing system, that literally goes back to the politics of british monarchy in 1710, a half a century before they even abolished the slave trade:[https://en.wikipedia.org/wiki/Statute\_of\_Anne](https://en.wikipedia.org/wiki/Statute_of_Anne)In programming a lot of the ""architecture"" ends up being designed around these legal issues.Edit: you are also probably right that these sites do not use AWS, at least not exclusively, but there are other services that they can use, which may not be as proactive in their enforcement.",Live-Concert6624,2025-04-08 15:29:02,5,learnprogramming,t3_1jucmhc,False,
mm2jwpo,"i dunno, i'm sure the one piece website would use AWS or some big provider.",Caddy666,2025-04-08 17:45:36,4,learnprogramming,t3_1jucmhc,False,
mm3pady,Most sites provide you with a list of hosting providers on each video.,notislant,2025-04-08 21:04:45,2,learnprogramming,t3_1jucmhc,False,
mm1owjb,Clearly they write it in R on a base of C.,HealyUnit,2025-04-08 15:14:49,4,learnprogramming,t3_1jucmhc,False,
mm11pv6,"That is an overly specific piracy niche...You can expose the computer on your desk to the internet with a static IP or even dynamic DNS. Naturally, that maps directly to you, so not the best idea for questionable activity.Reasonably, anything with illegal content will get taken down eventually. Thus, I imagine sites with such content play VM whack a mole.The domain name would map to an IP that would proxy to some other IP on the fly; basically a routing load balancer. The machines that constitute that load would exist in clouds with the least security or monitoring. You'd want a few mirrors so when one inevitably gets whacked you could keep on chugging. With some VPN work you could potentially hide such servers in larger cloud services.Note, torrents exist in a gray area. The torrent file itself is not illegal, even if the referenced payload is illegal. Thus, hosting torrent files, rather than their contents, can be permissible, depending on local laws. At least, that's a loophole that's been used before.",WystanH,2025-04-08 13:11:13,4,learnprogramming,t3_1jucmhc,False,
mm1c13s,"The web server is hosted in a country where this is allowed to happen for one reason or another. You live in a different country, where this isn't allowed to happen. That's not a problem because your country doesn't have jurisdiction over that other country anyways. So you stream the content. Your country doesn't prevent you from being able to access that website because you don't live in a totalitarian state who would totally control your access to the internet. Like china, for example.",dmfreelance,2025-04-08 14:09:32,1,learnprogramming,t3_1jucmhc,False,
mmptzzb,"Pretty sure you covered the core courses of an undergrad.Arguably there should also be a course on software engineering and software testing in it but given that you are a developer, these might be a bit moot.Discrete math alone might not be enough of a math course to do an algo course properly, it kind of depends on what you include in discrete math. The limit and series stuff is usually not taught in DM.But overall I would say that you got it all.Edit: Ok technically, you would have to include the theory of computation still in it as the major cornerstone of proper CS but given you are a self-taught dev, it might not be the most pressing thing.But if you want to explore CS, ToC is kind of a must in a regular degree for the fundamentals.",Dramatic_Win424,2025-04-12 11:33:51,18,learnprogramming,t3_1jxera8,False,
mmql875,"Most important areas of study / courses by far in order of priority (assuming your goal is industry):1. Procedural programming fundamentals2. Some specific procedural language that's very common, such as Python or Java3. Algorithms and data structures4. The basics of Discrete MathIf your goal is to get a job as a software developer, this is all you actually need.The rest are great skills to have that will serve you well, but they should be lower priority.",drake22,2025-04-12 14:32:06,14,learnprogramming,t3_1jxera8,False,
mmq9vt5,"Have you ever completed a course by yourself? The reason I ask is because there's a reason people go to university and major in computer science. This content isn't easy. Keep in mind, in the US, it takes 4 years to graduate with a CS degree.To be fair, in the US, you have to take a bunch of other courses. Maybe 1/4 of your courses are CS courses, and the rest are some related courses (say, in math and sciences) plus more general education (humanities such as history and English).Even so, there's a linearity to the CS curriculum where certain courses are taken before others. Much of which courses you focus on will depend on your goals. In any case, if you want to master this, you could go back to school. Yes, unrealistic, but as pointed out earlier, it's tough for CS majors to complete this curriculum with decent grades. They have the added benefit of time, friends, teaching assistants, professors, and perhaps even free tutoring (or paid tutoring). CS majors are often under time pressure to learn this material so some feel, even after a semester, that they missed stuff along the way.OK, now to address your question, this is my opinion on what to take.1. Discrete Math * This is a precursor to data structures and algorithms. I would say it's not fully required. Discrete math, in my opinion, should be a course where you learn how to do mathematical proofs. Specifically, direct proofs, proof by contradiction, and the various induction proofs (weak, strong, structural). It should also cover formal logic, in particular, propositional and predicate calculus. The rest of discrete math is a bunch of topics where you can apply your knowledge of proofs. Many self-taught learners tend to skip this and head into DSA, and that can work too.1. Data Structures and Algorithms (DSA) * If you were to take a real courses in DSA, especially algorithms, then you'd do work on solving recurrence relations. This is the math behind big O notation. Otherwise, you could skip that, and just know certain algorithms O(n) or O(lg n) or whatever. It would help to work out book problems, but I think implementing the various data structures and algorithms is educational. For example, I don't use pointers for work (at least, not to build linked data structures).1. Computer Architecture * I taught this a number of times. My current belief is the goal of a computer architecture course is to show you can build a CPU that can run a simple assembly language out of a clock, a flip-flop (a one-bit register), and logic gates. I had envisioned the class building this in software, but never got around to doing that. Personally, I think CS majors learn that the computer isn't completely magic (yes, it does do a lot) and realize, yes, 0's and 1's can make a program do something.Beyond that, I think you can read about the rest (e.g., computer networking and operating systems). I've taken OS before, so building something (again, super simple) is interesting, but you realize that real OSes are extremely complex, but at its core, it's something you can understand if you strip it to its bare essentials.The question, should you choose to study this, is how much time you can devote to this, and how deeply do you want to study it given a lack of resources. If you can find some online courses offered through a reputable university (you wouldn't get credit, but you could follow the content), then that can help structure your learning.At this point, you need to pick an initial starting point, which is probably data structures and algorithms as that's the most pertinent and comes up in job interviews.",CodeTinkerer,2025-04-12 13:26:54,11,learnprogramming,t3_1jxera8,False,
mmqb9hc,Design patterns (e.g. a book by authors who call themselves a Gang of Four),VibrantGypsyDildo,2025-04-12 13:35:22,4,learnprogramming,t3_1jxera8,False,
mmqiwt7,"If you want to cover all your bases, I highly suggest nand2tetris. It was my first formal CS class, and has prepared me very well for every class I've taken since.",vortexofdoom,2025-04-12 14:19:06,3,learnprogramming,t3_1jxera8,False,
mmqoirg,"I found:https://ocw.mit.edu/courses/6-001-structure-and-interpretation-of-computer-programs-spring-2005/andhttps://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/very helpful.The other notable resource which has helped my current project immensely is the book:https://www.goodreads.com/en/book/show/39996759-a-philosophy-of-software-designwhich I read one chapter at a time, then re-wrote my current project applying that chapter's principles.",WillAdams,2025-04-12 14:50:11,3,learnprogramming,t3_1jxera8,False,
mmrd1ns,My curriculum required a computer ethics course. I think absolutely everybody going into this field should take such a course.,vengefulgrapes,2025-04-12 16:59:05,3,learnprogramming,t3_1jxera8,False,
mmq0f3k,"What would you like to do exactly? For example, for a frontend position, you don't need anything taught in computer architecture, operating systems, most kinds of math, compilers & interpreters.",SilenR,2025-04-12 12:23:27,2,learnprogramming,t3_1jxera8,False,
mmqcvtz,Critical Thinking! But I think it's under the liberal arts.,RichWa2,2025-04-12 13:45:02,2,learnprogramming,t3_1jxera8,False,
mmqj7vg,lil bro did in fact read the faq/wiki,Clairvoidance,2025-04-12 14:20:49,2,learnprogramming,t3_1jxera8,False,
mmq3g8j,"When you call a function, you are asking for something. Return is how the function gives you what you ask for.Take some code like:```function timesTwo(int i) int { return i * 2;}```This is a function, which means it can be called from other places. It has an `int` *argument*, `i`; this means that, whenever someone wants to call this function, they will have to supply some int to be used in place of `i`. The final `int` after the right parenthesis denotes the *return type*. In other words, whenever you call this function, you are *asking for an int*. So, in all, the function represents a sort of contract: I give you an int, and you give me an int back.Here's how you might use this function:```int x = 5;int y = timesTwo(x);```What's going on here? You have an `int`, `x`. Then you initialize another `int`, `y`, and assign it to *the result of the function call*. As we said, calling timesTwo means supplying an int, and then receiving one in return. Here we are supplying `x` - that is, `5`.`timesTwo` receives `5` and uses it in place of `i` in the function body, so we can read the return statement as `return 5 * 2` which evaluates to `return 10`.Now, timesTwo promised its caller that it would give it back an int, and that is exactly what `return` does - it gives `10` back as the result of the call and gives control back to the caller, which assigns the returned value to `y`.Essentially, the return type of a function allows you to use a call to that function *as* a value of the return type in most places in your code, because the return type is essentially a promise that the function will give you a value to use there. `Return` is how functions actually make good on that promise.",Technologenesis,2025-04-12 12:45:07,175,learnprogramming,t3_1jxg1zu,False,
mmq0f15,it returns data or a value (or nothing) from a function back to its caller.,OldSailor742,2025-04-12 12:23:26,11,learnprogramming,t3_1jxg1zu,False,
mmq0zjw,"What OldSailor said but in an example. At a restaurant you might use an Order function where you specify a menu item, the function runs the logic needed to get/cook that item, and the return statement is the finished item it's returning back to you.",Mystic11,2025-04-12 12:27:37,34,learnprogramming,t3_1jxg1zu,False,
mmtcwwh,Think of a function like thisInput -> function -> outputThe return is the output,Anvillain,2025-04-12 23:44:10,5,learnprogramming,t3_1jxg1zu,False,
mmq53tn,"it might be easier in the context of assembly return puts the return value in a specific register (eax in x86, rax in x86-64), which is one of the main memory registers for stuff like basic i/o this makes the value immediately accessible without needing to specify a certain part or pointer in memory, so when your function tries to read that value after the return it’s at the top of the stack and the first that the register presents",subboyjoey,2025-04-12 12:56:17,21,learnprogramming,t3_1jxg1zu,False,
mmql1ld,"Haha, that word confused me too when I started.If the parameters are the input, return is the output. Don’t over think it.",Logical-Idea-1708,2025-04-12 14:31:03,3,learnprogramming,t3_1jxg1zu,False,
mmqfqg0,"`return` both terminates the function call and sets a value for that function call. If `f(x)` executes `return y`, then `f(x) == y`. In languages (Haskell, etc) and constructs (Python lambda expressions) where the body of a function is restricted to a single expression, no return is necessary; the value of the expression using the argument(s) is the value of the function call.",Temporary_Pie2733,2025-04-12 14:01:17,2,learnprogramming,t3_1jxg1zu,False,
mmq49h3,"It stores the function’s return value, if there is one, and exits the function. The calling function receives the value and continues execution.",iOSCaleb,2025-04-12 12:50:36,3,learnprogramming,t3_1jxg1zu,False,
mmqhlqy,"Return functions are functions that gives back a value when you call it. Values could be numbers, words, true/false, arithmetic operation (return x + y), or even nil/none",Ok-Huckleberry7624,2025-04-12 14:11:47,1,learnprogramming,t3_1jxg1zu,False,
mmqkd0r,It returns stuff back,pornthrowaway42069l,2025-04-12 14:27:14,1,learnprogramming,t3_1jxg1zu,False,
mmac9mc,"If it's on use it by definition isn't dead.If you're looking for programing languages that are older and have more folks retiring than learning them, cobol would be a prime candidate.",Digital-Chupacabra,2025-04-09 21:50:47,103,learnprogramming,t3_1jvhmai,False,
mmanirq,Look into ms dos shell scripting.  Be warned though.  Some things are better left buried! :skull_and_crossbones::headstone:,UntrustedProcess,2025-04-09 22:54:38,13,learnprogramming,t3_1jvhmai,False,
mmb064e,Is anyone still using Perl?,t3xm3xr3x,2025-04-10 00:07:30,8,learnprogramming,t3_1jvhmai,False,
mmahone,COBOL has entered the chat,QuantumDreamer41,2025-04-09 22:20:48,9,learnprogramming,t3_1jvhmai,False,
mmb7ho3,MUMPS Forth Algol-W TECO Bliss,Aggressive_Ad_5454,2025-04-10 00:51:07,4,learnprogramming,t3_1jvhmai,False,
mmaxay2,Met a recruiter sitting next to me on a plane who’s company exclusively recruiters for SmallTalk. Some biomedical company. She was amazed I’d never heard of smalltalk and was like oh can’t help you with a job then.,Rare_Environment_227,2025-04-09 23:50:31,7,learnprogramming,t3_1jvhmai,False,
mmaquq1,"If you want to learn a dated scripting language you can try to use AutoIt to automate a lot of Windows tasks. It has a simple but weird Basic-like syntax, mostly superseded by Autohotkey and Python since last decade but there is still some people using it. Although you should probably expect half of what you write to be false flagged as a virus honestly",_TheNoobPolice_,2025-04-09 23:13:27,3,learnprogramming,t3_1jvhmai,False,
mmaub9v,"Honestly, the issue with ""dead"" languages is if you hire someone that has experience programming at all they could probably work their way around it. Unless its like legacy C++ which god be with you on that journey.",Narrow_Priority364,2025-04-09 23:33:17,2,learnprogramming,t3_1jvhmai,False,
mmbhe8y,"Visual Basic 6.0 (and earlier). Not to be confused with Visual Basic .NET (which is on its way to dying tbh). There are tons of enterprise desktop apps that are written in it, as it was *the* killer app of the 90s. To a lesser degree and occupying the same niche is Delphi and PowerBuilder.On the web side of things, you've got Perl, which was the *original* P in the acronym LAMP and used to run the whole web. Also, ColdFusion and ASP (not to be confused with ASP.NET), which used to be fairly popular PHP competitors.",plastikmissile,2025-04-10 01:49:28,2,learnprogramming,t3_1jvhmai,False,
mmbuska,"Pascal (fpc) is a great example of this. It's used a lot in the enterprise but never discussed as widely as other languages, even on Stackoverflow.",pyeri,2025-04-10 03:11:17,1,learnprogramming,t3_1jvhmai,False,
mm4bekx,"I can relate. I assume this is why the 'make it work first, then make it better' adage came about.Better to do a first pass at every component and get them working together, than never build the whole thing, because you're endlessly perfecting the first part.",Glyndwr-to-the-flwr,2025-04-08 23:04:26,28,learnprogramming,t3_1juqyug,False,
mm4ddiu,"In the beginning you want to learn how *everything* works out of curiosity, however, this is impractical once you start actually working as the libraries you work with are *huge* and have touched *hundreds if not thousands of hands*.Once you get the fundamentals down after a few hundred or thousands of hours under your belt you can look at most things and quickly ascertain *how* it's done. You don't need to know the exact code, but you can quickly identify how something is working in the black box.",SeattleCoffeeRoast,2025-04-08 23:15:33,19,learnprogramming,t3_1juqyug,False,
mm4djun,"I let the tooling do the obsessing.I acdtually do have OCD and I was concerned the coding would be problematic. Quite the opposite it makes me a lot better at producing quality code. On the one hand, I have periodically lost touch with reality. On the other, I'm very good at learning things in meticulous detail quickly and producing detailed work, which makes software perfect for me. I'm sort of known for my ability to just learn new things quickly among family and friends.The desire to know it thoroughly is good you just have to unplug at the end of the day. When I started coding, the amount of stuff I didn't know was overwhelming. Still is an insane amount, I have just gotten used to it.",exploradorobservador,2025-04-08 23:16:34,6,learnprogramming,t3_1juqyug,False,
mm4c0pd,"Damn, first time I've seen somebody else express this. I've felt this way my entire life about everything. I did turn out to have mild-moderate OCD though, lol. I've found this trait to mostly be a hindrance, but the silver lining is that you end up understanding things a lot better than others",mikeballs,2025-04-08 23:07:53,3,learnprogramming,t3_1juqyug,False,
mm4nz8g,"1. Reading through code is a good way to learn2. However, not all libraries out there are written well or using good standards or patterns so don’t just blindly mold yourself after to any library code arbitrarily. For example, I’ve read through tons of very **heavily** utilized and popular JavaScript libraries out there and nearly vomited at how absolutely awful the code is written despite the fact that, sure, it works and gets the job done. 3. My recommendation is to read through the “Clean Code” principles. HOWEVER - and this applies very generally to all things in software and in life more broadly - don’t make it some rigid religious dogma; moderation is the key to most things. There are purists who take the Clean Code initiative to the extreme and it’s gross, please don’t do that.4. Time-box your exploration. You want to dive in and learn and understand things which is great, but if it’s a complete rabbit hole that reduces your actual productivity then you’re doing yourself a disservice. Instead, aim to apply what you’re learning into your project and you can always commit and then iteratively refactor your own code to improve it. Try to set goals on what things you hope to achieve or learn each time you do your deep dives. Also, maybe you’re doing this already, use a debugger and step through the code as you call into library functions/methods as it will expose you to the inner workings but in perhaps a more directed and isolated path (with a beginning and end).",lilB0bbyTables,2025-04-09 00:16:16,3,learnprogramming,t3_1juqyug,False,
mm4bbji,Same here as a somewhat beginner (6 months) and its exhauasting sometimes.,vMbraY,2025-04-08 23:03:57,2,learnprogramming,t3_1juqyug,False,
mm4j8j6,"I'd say if it's nothing to worry too much about until you mention 'And honestly, it’s exhausting.'I'm no psychologist here but if it's causing you dysfunction or getting in the way of you being able to do your work, get on with your life, then it's perhaps it may be worth seeking some professional help to address it, if you're in a position to get some help.A high level of persistence and curiosity and grit is a great thing. But ideally it shouldn't become an obsessive or overriding impulse. You may be able to learn to control it better and apply it more judiciously so that you can achieve the bigger goals you have in life rather than getting snagged by the little things. From my reading (not my experience) there are ways and methods of learning new approaches to things, and you may not be aware of them.Good luck with it.",plasterdog,2025-04-08 23:48:40,2,learnprogramming,t3_1juqyug,False,
mm4oyu9,Time box the dig and then accept it as a black box.,backfire10z,2025-04-09 00:22:04,2,learnprogramming,t3_1juqyug,False,
mm5036v,"I'm kind of like this conceptually, but when I'm coding, I am a mess.Like, I will read documentation, watch numerous videos on a programming language, practice, and then do whatever I want to do with that language.But when I'm actually coding, I miss basic fucking syntaxes or mistyped some random shit, which makes me spend like 15 minutes trying to find the issue.",nakata_03,2025-04-09 01:27:37,1,learnprogramming,t3_1juqyug,False,
mm50gm0,Yes. I'm currently stalling on my current project because I can't decide on architectural flow.,imtryingmybes,2025-04-09 01:29:49,1,learnprogramming,t3_1juqyug,False,
mmwrqzl,"They do. One of those tricks, carelessly implemented in the processor itself, was responsible for the infamous Pentium FDIV bug.Also, a useful read: https://chadnauseam.com/coding/random/calculator-app",kitsnet,2025-04-13 15:35:06,123,learnprogramming,t3_1jya33j,False,
mmwqzk3,"Computers usually don't do much along those lines. You tell the ALU to multiply two numbers and it's going to grind out the base-2 math.*Compilers* sometimes do stuff like this, though. If you write `x * y` the compiler will generate a multiplication instruction; if you write `x * 2` a good compiler will usually generate a bitshift instead. Or `x + y - x` might have x optimized away. But these sorts of optimizations tend not to get *too* deep into number theory; they try to grab some low-hanging fruit and then devote most of their effort more into other, less arithmetical analyses that tend to have a bigger impact on program runtime. Program flow stuff, usually.",OpsikionThemed,2025-04-13 15:31:04,68,learnprogramming,t3_1jya33j,False,
mmwt0d7,"There's a good book of bit hacks, Hacker's Delight, if you're interested. Mostly at the software level, assuming the specified hardware.Yes, both hardware and software up and down the ""stack"" (for want of a better word) will try to implement things so that they do the most amount of work with the simplest/least amount digital logic circuitry etc. What often comes first is production cost, though. They'll happily introduce propagation delay to make only NAND gates, for example. Chip makers don't always release diagrams that detail how the hardware implements microcoded instructions etc, so you often don't know the implementation details, just the interface (e.g. `add r1 r2 r3` will add r2 and r3 and place the result in r1 is the interface over the hardware that does that) It gets very hardware specific.Cancelling like terms is usually the job of the optimising assembler/compiler. Whole books have been written but generally they work by looking at the relationship between memory reads and writes and try to produce code with the same result but either optimised for space or time.The Python and C compilers would be where most of the optimisation to your source code happens. Once machine code is produced, it's usually just ran as is, but pipelined and not necessarily in order. It depends on data dependencies etc.",HashDefTrueFalse,2025-04-13 15:41:42,16,learnprogramming,t3_1jya33j,False,
mmwvpnr,"This is a great question.The short answer is that they do easy tricks, like replacing a multiplication by 0. They don't do many for complex tricks because analyzing the number to see if the trick applies would take longer than just computing the answer.So how fast can a modern processor ""grind everything out"" for something like an integer multiplication?The important thing to understand is that it's hard-coded in circuitry. It doesn't have to execute a bunch of steps to multiply, one at a time - the circuits are right there in the chip and they parallelize as much as possible.That said, multiplication is not instantaneous. On a modern processor you can expect it to take 3 - 5 clock cycles, whereas something like addition can be done in 1 clock cycle.So, it is worth checking for some really easy tricks like multiplying by 1 or 0. Maybe multiplying by 2 even. Those checks are simple enough that the processor can detect them when decoding the instruction and shift it to another instruction, and that's exactly what's done.But, there are a lot of ""tricks"" that humans use to save time that wouldn't make sense for computer processors, because they can just ""grind out"" the answer faster than checking it.In general when you write code in a language like C or Python, the compiler/interpreter does some easy optimizations, and then your processor does some easy optimizations. Neither of them are likely to do tricky optimizations - they're usually just not worth the cost.There are specialized mathematical programming environments, like Mathematica, where using number theory and other advanced tricks are possible.",dmazzoni,2025-04-13 15:55:37,6,learnprogramming,t3_1jya33j,False,
mmwuwza,"Truthfully at it's most basic they are not doing ""math"" they are just changing electrical state.Someone figured out what logic needed to be applied to produce the sum of two binary numbers. So if you add 01 and 01 you get 10, if you add 10 and 01 you get 11. So you can look at this as a truth table. For the first bit if you have:0 + 0 = 0 1 + 0 = 1 0 + 1 = 1 1 + 1 = 0 (with a carry)Electrically this is a xor circuit. If they are both 0 or 1 the first bit of the sum is 0, if the are different values then the first bit of the sum is 1. Now for the second bit of the sum you have the logic:If there is no carry from the first bit, xor the second bits. If there is a carry then you now have the truth table:0 + 0 = 1 0 + 1 = 0 (with a carry) 1 + 0 = 0 (with a carry) 1 + 1 = 1 (with a carry)Remember that there is carry you have an additional 1 coming it. This truth table is a xor and a not. Now you can add in the logic for the 3rd bit and so on.You might want to read: [https://www.electronics-tutorials.ws/combination/comb\_7.html](https://www.electronics-tutorials.ws/combination/comb_7.html) which appears to give a good description of a binary adder.As for shifting instead of multiplications all I can answer is probably not. This is because it would increase the time to do most of the multiplications, because now you have a first step of checking if only 1 bit is set on one of the numbers then do a shift, otherwise continue with the multiplication. That check is only going to help rarely, and the check does take time.Now with a computer the compiler might notice that you are always multiplying a number by a constant like 16 and insert a shift instruction into the output rather than doing a multiplication. But that means you are always multiplying some number not known at compile time by a constant that is a power of 2. Most compilers will actually do all the math it can during compile time so if you have it calculate x \* (1 + 3) / 2 then the compiler might look at that say oh, you want really want to just multiple by 2, oh that is a power of 16, you just want to shift by one, rather than making the computer always add 1 + 3 multiple that by the input value then divide by 2.",pixel293,2025-04-13 15:51:29,8,learnprogramming,t3_1jya33j,False,
mmwx5qh,"I would call floating point arithmatic by itself a 'trick'. By limiting the amount of data a number can have your precision is always limited, but almost always sufficient for a lot of cases. If you want things more precise you have to throw more memory and cpu at it. Depending on the amount of bytes you throw at it you get accuracy to around 3, 7, 15 or 34 significant numbers.But my favorite is the square root trick in a games: The distance between two points is Square root of (dX\^2+dY\^2+dZ\^2) (according to some greek guy).But square roots are very expensive. So when trying to sort by distance developers will just skip the square root and find the smallest dX\^2+dY\^2+dZ\^2.Other than that: compilers will do all kinds to tricks to reduce complexity, which is done with optimisation loops.e.g. constant folding. If you write const a = 10+20, the compiler will just make it const a = 30. Other tricks are loop unrolling (make a for loop into seperate statements if it's a known low number of iterations), and algebraic simplication.",keesbeemsterkaas,2025-04-13 16:03:03,2,learnprogramming,t3_1jya33j,False,
mmx8hj7,"Old guy here. Compilers absolutely do this sort of stuff -- depending on the platform. Strength reduction is common: https://en.wikipedia.org/wiki/Strength_reductionThere's a lot of constant folding as well. https://en.wikipedia.org/wiki/Constant_foldingOnce you start getting into numbers that don't fit into a machine word, then you get into tricks like https://en.wikipedia.org/wiki/Karatsuba_algorithmSo lots of tricks at many different levels of abstraction. Some at compilers some at the code level. Others have provided hardware examples.",revonrat,2025-04-13 17:02:06,2,learnprogramming,t3_1jya33j,False,
mmxcun5,"Early calculators, especially wristwatch calculators, didn't actually do a lot of calculcations, but a lot of ROM lookups. [https://www.allaboutcircuits.com/textbook/digital/chpt-16/look-up-tables/](https://www.allaboutcircuits.com/textbook/digital/chpt-16/look-up-tables/)[http://www.datamath.org/EarlyArchitecture.htm](http://www.datamath.org/EarlyArchitecture.htm)[http://www.vintagecalculators.com/html/the\_calculator-on-a-chip.html](http://www.vintagecalculators.com/html/the_calculator-on-a-chip.html)",3May,2025-04-13 17:24:08,2,learnprogramming,t3_1jya33j,False,
mmwsb15,"For most basic math operations it's actually decided by the hardware. x86 includes just a multiplication instruction etc that can be implemented differently by different processors. A 64 bit adder, dadda multiplier etc physically are pretty efficient. if you're dealing with numbers bigger than 64 bit then there might be some funky stuff going on. Computing 64bit addition/subtraction/multiplication is done in a single digit number of clock cycles already so there isn't much time that could be saved with more complicated approaches at least for a general workload.",smeegleborg,2025-04-13 15:38:01,1,learnprogramming,t3_1jya33j,False,
mmx0fju,"Not sure if this is entirely what you mean but there is a funny one you see when reading x86 assembly out of a compiler. If your code contains multiplications by say 5 you might find the assembly not containing the `mul` instruction you expected but `lea` instead which stands for ""load effective address"".That instruction is mostly meant to do address calculations which often take the shape of multiplying by a power of two and then adding an offset. So it's basically a ""fused shift add"". So by shifting x by two (multiplying by 4) and adding x to the result you get 5\*x.",regular_lamp,2025-04-13 16:20:13,1,learnprogramming,t3_1jya33j,False,
mmwwzl7,"First of all, how did you get this e-mail?",MajesticRuler7,2025-04-13 16:02:11,14,learnprogramming,t3_1jyask7,False,
mmzm0ci,"I emailed Bjarne when I worked for Morgan Stanley back in 2017. He was a technical director there for a few years. We had some interesting discussions regarding C and its ability to remain relevant in the very large shadow that C++ casts on the landscape. One of my C programs was touted for a rewite in C++ (some unfounded security concern). Bjarne gave my C code his stamp of approval. As far as I'm aware, it still runs today unchanged :)",TheBaldBuzzard,2025-04-14 01:00:21,1,learnprogramming,t3_1jyask7,False,
mmz9aci,Richard Stallman is also very easy to reach over email,hellbound171_2,2025-04-13 23:39:52,1,learnprogramming,t3_1jyask7,False,
mmwzjuo,"He's a professor at Columbia University, I went to their page and got his mail from there.",Shahi_FF,2025-04-13 16:15:37,18,learnprogramming,t1_mmwwzl7,True,
mmwy0v7,Just called on the phone and asked him about it /s,SV-97,2025-04-13 16:07:37,1,learnprogramming,t1_mmwwzl7,False,
mmyjwv6,That's pretty cool. Are you a student there? Or anyone from the public can email him?,polmeeee,2025-04-13 21:12:20,1,learnprogramming,t1_mmwzjuo,False,
mmwypmb,Just being curious man :rolling_on_the_floor_laughing:,MajesticRuler7,2025-04-13 16:11:12,1,learnprogramming,t1_mmwy0v7,False,
mmys4no,You can email almost any professor and they will rely. I had one astrophysicist explain to me how the universe was expanding faster than the speed of light.,azaza34,2025-04-13 21:58:12,1,learnprogramming,t1_mmyjwv6,False,
mmc031q,"The real industry standard is to use whatever linting tool and ruleset that your organization has agreed to use. Something like Go has tool that is extremely opinionated because they value everything looking similar. Something like C++ can be more varied.That said, check out clang-tidy. That's probably the most standed one. Find a good default list of settings for it. If you're feeling up for it, get it working on github as part of your CI/CD and have it prevent merging code that fails.",DrShocker,2025-04-10 03:48:50,55,learnprogramming,t3_1jvopj4,False,
mmc06fq,https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelineshttps://google.github.io/styleguide/cppguide.htmlhttps://llvm.org/docs/CodingStandards.htmletc,strcspn,2025-04-10 03:49:31,12,learnprogramming,t3_1jvopj4,False,
mmc13x8,"Of all those things, the most legit criticism is regarding memory management. That is where you can go very very wrong in C++. The other stuff (like using namespace std) shouldn't be looked down on, especially in an educational setting. It's better practice to not declare ""using namespace std"" in any files (generally stay away from that, as it just makes your code less easy to read and can lead to naming clashes if different libraries implement the same class)If you're making mistakes with how you're using pointers, that is a core part of C++ so for me that would determine how a homework assignment was evaluated.",rosshoytmusic,2025-04-10 03:56:29,10,learnprogramming,t3_1jvopj4,False,
mmd78lm,"I think this all boils down to:You need to follow the program requirements.There is no one industry standard. You will however, when working in the industry, have to follow whatever standards your company follows.If your teacher taught you to not use a using directive, then you need to follow the standards set",VALTIELENTINE,2025-04-10 10:44:20,4,learnprogramming,t3_1jvopj4,False,
mmc9r88,"“using namespace std,” is a big pet peeve of mine, no idea who busted his balls but I have never used std namespace for production code I’ve written. It may be a bit more verbose, but ultimately we want to mitigate future problems as much as possible",EyesOfTheConcord,2025-04-10 05:06:14,4,learnprogramming,t3_1jvopj4,False,
mmcdqe0,">The specific example was including \`using namespace std\` which I know full well has issues, but it made me question what ""industry standards"" even entail.The real issue is using that directive in a header file, because then you force any client who wants to ""include"" your header file, to also be ""using namespace std"", which she may not want to do.As for ""industry standards"", though, the only ""real"" industry standard is ""to follow the rules of the team leader"", as it were. In a University course, your prof. is the ""team leader"" position so if he/she says ""thou shalt not use 'using namespace std'"" then that is The Rule and you must follow it.For my own C++ code I like to use 'using namespace std' because personally it makes my code easier to read for ""me"". But I can see the arguments against it for ""production code"" (e.g. what if the future C++35 adds a new word to the std:: namespace, a word which you're already using in your local code). A better in-between solution is to use ""individual using"" directives like ""using std::cout"", ""using std::cin"", etc. However, that's a bunch of stuff to type out -- so to use it in practice you should either put them all in a header file, or use some smart IDE that inserts them all for you at the top (some IDEs can automatically insert all of them for you as needed).Most C++ programmers I have seen online just tend to avoid using directives and just write a bunch of std::cout, std::cin blah blah everywhere, which personally I think contributes to the impression that C++ is very difficult to read. It's a subtle style issue balanced on an issue of future-proofing the code. Sometimes we cannot have it both ways, unfortunately. Try to find a style which is readable for you, but also respect the local standards if they are in place. That's the best we can do for this.A commonly cited example is that ""using namespace std"" imports names which you may want to use for your own variables, like ""max"". OK, you got me there. However, how you resolve this is up to you. You can name your local variable something else, for example, ""max\_value"", or you can even resolve it by adding a trailing underscore, like ""max\_"", since the likelihood of a name ending in an \_ being declared in a Standard or in an external library is extremely slim. Personally I got used to that style from programming in Python. I know it looks kind of ugly at first, but it seems like Python has a lot of reserved words that I often want to use as local variable names, so I ended up seeing a programmer using that convention when porting code from C++ to Python (to append \_ to a name which we would 'obviously' use in the C++ code but which was 'conflicting' in the Python code), and it stuck for me.However, I would hesitate to use this style in ""production team code"" unless I saw explicitly that it were already being employed there. Stick to the local conventions, is rule 1.Same goes for prefixing ""m\_"" to member names in C++ class designs. Personally I think that's weird in C++, but \*a bunch\* of programmers do it for various reasons. So, if that convention is being used currently in the code you're working on, then by all means, continue to do so in that codebase when you add code to that class, for the sanity of your co-workers. It's kind of a weird style rule which seems to only apply for the unique situation to make naming the parameters of a constructor initiazer list less confusing. OTOH, once the convention is in place, something in your brain associates seeing the the ""m\_"" before a name as a hint that it's a member name, and vice versa (that an absence of the m\_ means it's \*not\*). So this makes it kind of hard to ""quit"" using this convention once you start using it.The other benefit of m\_ is that it makes ""naive autocomplete"" more convenient. By ""naive autocomplete"" I mean autocomplete which is not actually understanding your code, and which is just memorizing the symbols that you typed previously in the document or in other documents. So that's another convenience of that. Personally nowadays though I always try to use ""C++-aware"" environments for this language. Their availability nowadays is widespread enough.",chaotic_thought,2025-04-10 05:42:02,5,learnprogramming,t3_1jvopj4,False,
mmcejrj,"That’s school for you. In a few years you’ll deal with some new persons opinions, and the a different one, and then maybe ten years from now you’ll be the one with the opinions",shifty_lifty_doodah,2025-04-10 05:49:37,1,learnprogramming,t3_1jvopj4,False,
mmct68o,"We ban any file scope using namespace, function scope only.Same line braces would have me reject your code review, but that's not an agreed universal standard. When it comes to formatting more generally the correct answer is to add auto formatting (like clang format) to your pipeline and stop worrying about it.Memory management, yeah you can potentially screw that up. As long as something calls delete/free (once) after new/malloc though everything else is debatable.",cfehunter,2025-04-10 08:20:22,1,learnprogramming,t3_1jvopj4,False,
mmd2gp8,"You do what the project or company you work for demands; there are no industry standards for style though there are a half dozen major styles (where little details vary, but overall it follows one of those patterns). Curly braces, if they are not aligned or on the same line, they are flat out wrong to me. I know there are big camps on this, but that one is where I sit. Good editors mark the matched brace when you mouse over or click it, so its not the problem it used to be. memory management is something you avoid unless you can't for some reason. Most of the time, you don't need to do anything special other than make sure you don't take big performance losses from doing it wrong like trigger a page fault every iteration of a loop (this sort of thing is almost always a localized code problem, not a program wide management problem). If you know how this stuff works, you just naturally avoid the problems after a while. industry does not code to the bleeding edge if the people involved are wise. You pick something and stick with it, for example one of the last projects I worked on used c++ 17 because 20 wasn't out yet when the project started. (You can flag the compiler to use the version you want in c++). A few years back we were using kafka for database work and the manager insisted we upgrade every time a new version came out and yea, we rewrote the code repeatedly for a while. It all pays the same...But at the end of the day what I said up front is what you will see: you do what the company you work for wants.",Independent_Art_6676,2025-04-10 09:59:40,1,learnprogramming,t3_1jvopj4,False,
mmdgp4g,"> I had an assignment recently where I lost points due to not following what my teacher considered to be ""industry standards"" for code.Did they teach these industry standards and say ""ayo, do the things I taught you""? If not, they're dumb. You see /u/strcspn provided links to things, did your professor do that? If so, then it's on you, if not...back to them being dumb :face_with_tears_of_joy:",NormalSteakDinner,2025-04-10 11:57:15,1,learnprogramming,t3_1jvopj4,False,
mmdwut9,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-04-10 13:37:53,1,learnprogramming,t3_1jvy41r,False,moderator
mmdy7ri,"Play with tree and graph structures enough and you should get it.Make an ordered tree, traverse it in order.Make an ordered tree, write a function to find a given number in log(n) timeMake a graph, find the shortest route from A to B",Even_Research_3441,2025-04-10 13:45:24,49,learnprogramming,t3_1jvy41r,False,
mmdybo2,I haven’t had to actually use recursion in a while :skull: but the whole “how can I reach the base case” question was drilled into our heads when I was learning it. Focusing on that really helped me solve recursion problems.,lolideviruchi,2025-04-10 13:45:59,17,learnprogramming,t3_1jvy41r,False,
mmdyyvt,"I’ve found from my experience in mathematics and some theory courses in computer science in UNI made it easier for me to understand recursion. For example, Fibonacci, recurrence relations, even stuff like Context Free grammars in compiler course or theoretical computer science course have examples.My suggestion would be to look up some intuitive examples of things which are easier to define recursively (one such example is define an arithmetic expression). Then come up with basic problems like write a function to iterate over an array using for-loops, while-loops and then recursion. If you have previous problems you solved try write it recursively.Good luck my friend",Herb-King,2025-04-10 13:49:27,11,learnprogramming,t3_1jvy41r,False,
mmecikm,"See [this article](https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/) for why this question isn't as helpful as you'd think (about monads but applies to recursion):>After struggling to understand them for a week, looking at examples, writing code, reading things other people have written, he finally has an “aha!” moment: everything is suddenly clear, and Joe Understands Monads! What has really happened, of course, is that Joe’s brain has fit all the details together into a higher-level abstraction, a metaphor which Joe can use to get an intuitive grasp of monads; let us suppose that Joe’s metaphor is that Monads are Like Burritos. >>Here is where Joe badly misinterprets his own thought process: “Of course!” Joe thinks. “It’s all so simple now. The key to understanding monads is that they are Like Burritos. If only I had thought of this before!” >>The problem, of course, is that if Joe HAD thought of this before, it wouldn’t have helped: the week of struggling through details was a necessary and integral part of forming Joe’s Burrito intuition, not a sad consequence of his failure to hit upon the idea sooner.",high_throughput,2025-04-10 14:58:01,6,learnprogramming,t3_1jvy41r,False,
mmdzjux,It all clicked for me years ago when I had a task to convert a flat CSV file into a hierarchical tree structure. Recursive functions are great for tree building and tree traversal,zeocrash,2025-04-10 13:52:32,3,learnprogramming,t3_1jvy41r,False,
mme0oa1,Pick a problem.* Solve it via iteration.* Solve it via recursion.For recursion:* What is the base case?* What is the recursive part?Add memoization.* How would you cache previous results?Example of [memoization from Code Clinic 2015](https://github.com/Michaelangel007/write_code_compiler_can_optimize),mysticreddit,2025-04-10 13:58:27,2,learnprogramming,t3_1jvy41r,False,
mmkxg5s,"tower of Hanoi, for me:face_screaming_in_fear:",oihv,2025-04-11 15:48:08,2,learnprogramming,t3_1jvy41r,False,
mme1s8o,Learned Clojure/Haskell. Recursion is kinda baked into those languages (particularly Haskell). Haskell doesn't have imperative looping (no while or for). Had to learn how recursion works to get anything done,YOLO_Ma,2025-04-10 14:04:19,1,learnprogramming,t3_1jvy41r,False,
mm97gyo,"Windows often considers your own code to be malicious... To the OS, its unsigned code of unknown origin. Get used to unblocking it, learn what's required to let Windows run it.",VerbiageBarrage,2025-04-09 18:29:01,74,learnprogramming,t3_1jvbzls,False,
mm932ft,"There is a lot of information missing here. What operating system, what error message did you get exactly, issued by which programm?",DaHorst,2025-04-09 18:07:50,14,learnprogramming,t3_1jvbzls,False,
mmaiq2t,"There's a lot of reasons that could happen, but the main thing is just that windows doesn't know what's going on with that code, it's just a random file from some guy (you), so it's somewhat prone to false positives. As long as you didn't intentionally write malware, didn't copy any code you didn't understand, and are running the code you wrote and not something else by accident, there's no danger.",AlexanderEllis_,2025-04-09 22:26:47,5,learnprogramming,t3_1jvbzls,False,
mmbf6ty,"Scanf can be dangerous for various reasons. It’s easy to accidentally attempt to write to arbitrary memory addresses. You might have written somewhere which matches a typical pattern for well known memory addresses which can be exploited on older OSes. In actuality your actual OS probably has ASLR and virtual memory isolation at least per process, so the actual danger was probably low to nonexistent unless you put your code into production.Nevertheless antivirus software continues to just be a huge creeping morass of detection of old things that don’t even work anymore which in the worst cases slows everything down.",xilvar,2025-04-10 01:36:27,5,learnprogramming,t3_1jvbzls,False,
mmajs4s,"Because you’re using Windows, which ranges from somewhat to actively hostile against systems programmers.",nerd4code,2025-04-09 22:33:06,2,learnprogramming,t3_1jvbzls,False,
mmekxnw,Don't use Windows,Hradcany,2025-04-10 15:39:56,2,learnprogramming,t3_1jvbzls,False,
mm94alv,"Trojan? Did you copy the code from somewhere, or did you write it all yourself?Investigate the safety of using Scanf, especially when reading input from a user.",gdb7,2025-04-09 18:13:44,1,learnprogramming,t3_1jvbzls,False,
mmbdf9g,You were probably writing with network sockets. Happens all the time. Whitelist your dev folder.,brokensyntax,2025-04-10 01:26:06,1,learnprogramming,t3_1jvbzls,False,
mmcfx9v,It’s annoying but happens.I usually work in Linux so I don’t have this issue.,Rinuko,2025-04-10 06:02:35,1,learnprogramming,t3_1jvbzls,False,
mmcxtg9,When I was a kid and was learning things I freaked out the first time I got this message thinking my code had messed up the computer,Raioc2436,2025-04-10 09:11:17,1,learnprogramming,t3_1jvbzls,False,
mm6b5wg,"If you want a real objective advice it is to make passing your classes in college and getting your degree the priority.I know many people who forced themselves programming as a hobby but then coming short in courses they don't like, dropping out college and then hovering between jobhopping non-IT jobs not being able to get into technology sector without the degree.Studying is a privillege, if you don't get your degree you might lose many years of your life struggling with searching what you want to do.This is the reality, you choose your destiny.",Wingedchestnut,2025-04-09 07:27:13,28,learnprogramming,t3_1juzv2o,False,
mm6aq94,"If you really want to be a programmer you have to learn how to dig yourself out of problems. Consider this your first obstacle. Do what you have to. If that means starting from zero again, the sooner you do that the better.",mierecat,2025-04-09 07:22:34,5,learnprogramming,t3_1juzv2o,False,
mm6bjbp,"You sound lost af. Basically, if I ain't wrong, you started learning programming with no proper goal in mind. Basically learning for the sake of it and no future plans. Idk what languages you have learnt but the thing is doing courses only won't take you far. You need to make something yourself to be actually professional in this field. You need to have a proper goal in mind what you actually want to do. For example if you want to be a game dev, then you need to learn a language depending on the game engine you wish to use (ex- c++ for unreal and c# for unity). Even after learning them, when coding for your first game you will face several hindrances no matter what course u did, you will be required to debug it yourself, search online, maybe ask others for help online. This is how you learn programming by working on projects that interests you. If you like web development, then study JavaScript and make your first website (idk much bout web dev not my expertise). Don't be dependent on courses, learn only that what interests you and try to work on projects to improve your skills. Maybe you can share what made you be interested in programming and what your future career plan is?",Diorexo,2025-04-09 07:31:12,6,learnprogramming,t3_1juzv2o,False,
mm6vvgm,"Since you know the fundamental and main concepts , then you can build your own project . Observe the community and what all new features they provided and so on. Observe your surroundings and find a solution to daily problems . Reasearch more , then you will study during the path. Also a degree is important if you are looking for a job .",East_Competition6818,2025-04-09 10:58:55,2,learnprogramming,t3_1juzv2o,False,
mm6b48p,"I am kinda in a similar situation. I have everything I need. I have time, equipments, resources but I just cant start. Probably mindset issue.",1tzRustyBoy,2025-04-09 07:26:44,1,learnprogramming,t3_1juzv2o,False,
mm6eg00,"Focus on college, but code a bit daily. Also there's no shame with returning to the basics. You can breeze through those, if you're good, if you can't you still need to (re)build them up properly.Either way, they are the foundation and if you want to be a good programmer the foundation needs to be strong. Reinforcing it never hurts.",pandafriend42,2025-04-09 08:02:18,1,learnprogramming,t3_1juzv2o,False,
mme45t9,Try a Language that has lots of good projects to follow. Keyboard is more important than view time.,BlueMoodDark,2025-04-10 14:16:37,1,learnprogramming,t3_1juzv2o,False,
mm6apai,Install Cursor. Start prompting.,No_Count2837,2025-04-09 07:22:17,-12,learnprogramming,t3_1juzv2o,False,
mmm3v6w,"This. I was super lost for about 7 years after dropping out of college in my early 20s. Now, after going back and sticking with it to get my BS, I'm working in my preferred field with a good trajectory. College, in my case, was the golden ticket.",StrongMarsupial4875,2025-04-11 19:18:45,2,learnprogramming,t1_mm6b5wg,False,
mm6isci,>forced themselves programming as a hobbyBut without making stuff yourself past courses you dont learn to start things yourself as i have seen plenty of university students in these subs not being able to do basic programs but do good in their courses.I dont work as a programmer or anything close nor do i really have a degree that matters so just speaking out of what i have seen happening here.,atom12354,2025-04-09 08:50:17,2,learnprogramming,t1_mm6b5wg,False,
mmfdiwv,"Get old.And....... experience... so really, just get old, stay in the job, learn, do, make mistakes, learn from them, learn from others, rinse repeat, wait ten years. Bingo. You are now hopefully thinking like a senior engineer.",bravopapa99,2025-04-10 17:58:44,47,learnprogramming,t3_1jw3wun,False,
mmg1ll3,"It took me decades to finally understand separation of concerns:https://en.m.wikipedia.org/wiki/Separation_of_concernsThat was the turning point where I felt like I became a senior engineer. Part of that journey was embedding unit tests everywhere:https://docs.python.org/3/library/unittest.htmlUsing pylint before every commit:https://www.pylint.org/Subclassing my classes from dict:https://realpython.com/inherit-python-dict/And using setters, getters, and properties:https://realpython.com/python-property/Essentially once I started using pylint and unit tests I could immediately tell when a change introduced a bug or broke code. It became obvious after fixing bugs multiple times how different behaviors could be better separated into classes, helpers, and using properties, etc. Once I did this for a while then I could approach new code knowing that a certain pattern or architecture was a good (or bad) implementation. Re-implementing logging to add global log level, log file, and log rotation was a bad idea, but creating a helper class that did it for you was super trivial and made writing tests and adding features a lot easier. The code was the same, but the implementation was flat and didn’t change the behaviors of the logger. Essentially I had seen the different patterns and could recognize them. https://www.geeksforgeeks.org/python-design-patterns/",No-Let-6057,2025-04-10 19:57:15,27,learnprogramming,t3_1jw3wun,False,
mmfg3a8,Tuck about 30 years experience under your belt. You need to make all the mistakes before you learn how to avoid them because you'll never listen to somebody who already has.,Soft-Escape8734,2025-04-10 18:11:10,20,learnprogramming,t3_1jw3wun,False,
mmhyqtr,"IMO what separates a junior engineer from a senior engineer is the difference between solving a problem and architecting a solution. A lot of that just comes down to time and experience as others have already pointed out. I do think there are some things you can do to fast track your way to a more senior level though. * Pair program with other more senior engineers, especially early in a project so you can understand how they balance architecting a robust solution vs solving the immediate problem. If you can coax one into being your mentor, even better. Most employers encourage this sort of interaction to foster growth in their engineering departments, it's just a lot of devs can be solitary creatures and choose not to exercise this muscle.* Review PR's from other more senior engineers. Sounds like you're already doing this to an extent, but don't be afraid to leave non-blocking comments on the PR and ask questions about how or why they did something. If anything this will make them feel good for being so smart and getting to explain the cool thing they did to someone else. A lot of people are afraid to ask questions because they think it will make them look dumb, but the opposite is almost always true with software development - in fact you will find senior engineers are often the most inquisitive.* Check your assumptions always. Senior engineers ask lots of questions because they assume nothing. Senior engineers don't learn to do something one way then always do things that way just because that's the way they already know. They try to consider every angle in every circumstance before those circumstances are encountered, which may mean exploring a different solution instead.* RTFM more. Go through all the docs for everything in your organization's tech stack and familiarize yourself with the basics, focusing on a breadth of understanding rather than a depth of knowledge. You want to know what possibilities and capabilities exist in your environment, so you can consider all those options in your project planning. You can then return to the docs for a deep dive into the specific features that prove relevant to your current project.Hope this helps. At the end of the day the answer is still ""put in the time"", but I think these are some ways you can put in that time more efficiently.",artibyrd,2025-04-11 02:26:50,8,learnprogramming,t3_1jw3wun,False,
mmfhxqy,"I lost my taste for ""move fast and break things"" after I helped send the Suicide Hotline to voicemail.I stopped learning the latest cool language after Haskell and Ruby.I got much better at evaluating project requirements after building a few things no one used, and the whole blockchain thing passed right on by without me doing much beyond reading a couple articles. (Side note, learn to use LLMs like an engineer, not like a chat UI. That's not a blockchain fad.)I developed an appreciation for bureaucratic build safety after leftpad.I stopped proposing prod systems be built on things we haven't *at least* done a POC with after getting burned probably five times by AWS product descriptions, and even that is sketchy.So, basically, you learn to think like a senior engineer by thinking like the best engineer you can be and getting kicked in the face for it.",AlexFromOmaha,2025-04-10 18:20:08,5,learnprogramming,t3_1jw3wun,False,
mmg000y,"Understand the whole project, not just the dev portion of it. Understand how people think and get better at communication. Understand requirements and why you are writing the code ie what problem does it solve, what value does it create? If you can do all that, you can be a senior dev even if you don't write the most efficient code.",Majestic_Plankton921,2025-04-10 19:49:39,3,learnprogramming,t3_1jw3wun,False,
mmg3xvx,"Get the experience of a senior engineer.Really, that's all that is to it.Senior engineers think the way they think because they have done so for most of their careers/lives. They have the *experience*",aqua_regis,2025-04-10 20:08:09,3,learnprogramming,t3_1jw3wun,False,
mmg53g6,"Some of it just comes with time. Some of it is understanding the big picture of how software systems work, and practicing using your imagination to solve problems in high level design concepts that fit into your system, instead of just jumping right to code and trying to hack any minimum thing together that happens to work.I would also add that writing a super generic solution to a specific problem is not always a good thing. YAGNI",silly_bet_3454,2025-04-10 20:13:34,3,learnprogramming,t3_1jw3wun,False,
mmgbb3w,"You'll reach a point where you're sufficiently jaded and cynical, you can communicate with eye brow raises, grunts and sighs And your pull requests contain one or two lines of code",3E871FC393308CFD0599,2025-04-10 20:43:46,3,learnprogramming,t3_1jw3wun,False,
mmi4o8p,"Build shit, build alot of shit. Fuck up building stuff and fix it. Just build something and fuck up while you're doing it.",tits_mage,2025-04-11 03:06:11,3,learnprogramming,t3_1jw3wun,False,
mlwm1h6,"You can reinvent the wheel if you want, but someone already invented it, you can use existing tools instead of doing it over again.",Internal_Outcome_182,2025-04-07 18:34:53,85,learnprogramming,t3_1jtsb04,False,
mlwxrdg,"You can and should, as an educational exercise, build something entirely from scratch._In theory_ frameworks exist to take care of all the boilerplate and platform layer calls so that you're only left writing application logic. How close the real world is to theory depends on the application.I've build stuff fully from scratch but like frameworks because they tend to make my code easier to write and less bug prone.",sessamekesh,2025-04-07 19:35:22,36,learnprogramming,t3_1jtsb04,False,
mlwme2j,Why don’t you create your own new programming language every time you want to make an application?,robdogg37,2025-04-07 18:36:45,23,learnprogramming,t3_1jtsb04,False,
mlwm1oy,"At their best, a framework is a set of code extending a programming language, a set of guidelines, tools, and a general design philosophy geared towards supporting one specific thing particularly well (even if it may be a relatively broad thing), in terms of making it easier to do complex things, making doing such things safer/less error-prone, or simply taking some guesswork and boilerplate out of the equation to focus on what the framework considers the important matters.At their worst, they provide pre-made legacy code (in the form of 'legacy code is any architectural decision of one's code that was made by someone else before one's own input', which is a rather broad definition) that constrains things in unexpected and unwanted ways while not making clear what assumptions the design as a whole is making, all while requiring a fair amount of additional learning to use.You can absolutely do everything without them, but that's not necessarily advisable in the same way that you could, technically, do all your programming in assembly or C (well, traditionally/outside of front-end, which is where frameworks are most common) - which is sometimes also the right choice. If you know well what you're doing without one, you may be better off continuing as you are. Keep in mind that a lot of larger stuff is done as a team, and frameworks (I think) tend facilitate that sort of work.A framework may be worth learning if it seems to support the sort of result you're after, if it's an industry standard in an industry you're looking to enter/work in, or even just if you're interested in exposure to more/varying design principles and ideas regarding certain topics.Edit: It can also be useful to *not* use a framework, then once you know the bits that a framework is taking over for you use a framework for future work rather than re-solving things that not only have been solved, by solved by *you*, again. 'Course, this is time and effort that could also be used on other matters. It comes down to what you want to know, and what you think you need to know.",madisander,2025-04-07 18:34:55,11,learnprogramming,t3_1jtsb04,False,
mlwwup6,">but can't I just do everything without them?Sure you can. Do you know how to write a rendering engine? Can you implement standards-compliant authentication? Build a user interface from scratch? Correctly implement common encryption standards? Efficiently encode and decode video streams? Do you know how to read input from and write output to the hardware on your machine? Are you ready to build your own network stack and file system?There are libraries and frameworks that do all kinds of tasks. Using them instead of implementing them yourself means that you can implement a feature in minutes or hours instead of months, and get the benefit of code that has often been reviewed by experts and used by thousands of other people. Using a framework may be the only supported way to access certain features on a particular system. And the magic of dynamic linking means that your code can automatically get the benefits of improvements that weren't even available when you built the program.",iOSCaleb,2025-04-07 19:30:39,4,learnprogramming,t3_1jtsb04,False,
mlwp6hz,"When you work in bigger projects, and ny bigger I mean everithing that is more than just a coding exercise, you will see that many of them share the same technical problems. And if you use a framework that is build by people that have solved this problem already, you can use all your time and power to solve the problmes that are unique to your project.",rocco_storm,2025-04-07 18:50:54,3,learnprogramming,t3_1jtsb04,False,
mlx7tty,"Let's say your client wants you to develop a prototype website for their business. They expect the first working demo in 2 weeks.Option 1: you begin writing a custom framework for rendering a modern website that works on a phone and doesn't look like Geocities. You are fired after 2 weeks because you're only 10% complete with nothing to show but some CSS files.Option 2: you copy/paste bootstrap into your project and have a fully working website ready in a few days.Time is not unlimited or free and even on personal projects, you won't succeed if you waste it all trying to solve foundational problems on your own which *entire companies* standardized and solved for you many years ago.You also seem to think that frameworks/libraries are some sort of magical training wheels Windows installer that prevents you from learning or understanding technology. Absolutely the opposite. You can learn *a lot* by reading the source code, implementing and customizing a library that was written by experts using bleeding edge best practices.",Own_Shallot7926,2025-04-07 20:27:20,2,learnprogramming,t3_1jtsb04,False,
mlwmdia,"A lot you do is built on libraries/frameworks others have built. For example if you’re using Reddit on your phone that App is built on code which depends on iOS/android mobile frameworks. There’s stuff like rendering of the UI, text, colors, animation, networking etc. And all of this is non-trivial.In theory you could write your own code to solve any problem you’d like, but the amount of time investment would be ALOT. And for specialised problems many many people contribute to code which is hard to get right.TLDR: You can reinvent the wheel. It might be hard and complex to get right. Have a good reason to reinvent the wheel, otherwise stand on the shoulders of other people’s work with gratitude and awe",Herb-King,2025-04-07 18:36:40,1,learnprogramming,t3_1jtsb04,False,
mlxca6z,Because you get paid to not re invent the wheel,VariousAssistance116,2025-04-07 20:50:12,1,learnprogramming,t3_1jtsb04,False,
mlxdl6q,"Depending on the language a programming language is to an application what steel, glass, timber and concrete are to buildings.Let's say you want to make a door for your building:You'll need* Steel hinges* Timber door* Steel locking mechanism* Door frame* Possibly some glazing.Can you make all of this yourself? Probably..Will you learn a lot if you do this? Of course.Will the quality be better? Mayyybeee...Will the people that come after you be able to reproduce the same process? Meh.. maybe not..",keesbeemsterkaas,2025-04-07 20:57:00,1,learnprogramming,t3_1jtsb04,False,
mm4mwf9,"If it looks like he's going to get around your internet controls, you and whatever other parental / support people need to make sure he's comfortable coming to talk to you about the stuff he's going to find out there, and maybe prepare him for it. Dealing with the internet is one of those comprehensive-parenting situations, and it's only getting weirder because the relationship between people and the internet is still evolving.Your alternative is to lock him down completely (which doesn't sound like it's going to work) and will both make him resent you, and not want to come talk to you about the things he sees out there.",headhouse,2025-04-09 00:09:52,113,learnprogramming,t3_1jus7k2,False,
mm4r9ha,"Considering that programming languages are made by computer nerds, and computer nerds love the Internet, most of the documentation for learning programming is on the Internet. Your options are either to buy him a bunch of physical books and install Python on a computer with no Internet access (which will work, but he'll likely get frustrated by the lack of information and/or flexibility and be mad at you for it), or give him ""the talk"" about the Internet and what's out there and let him have access, with reasonable restrictions (and what's reasonable is likely going to feel like ~~too much~~ too much freedom to any good parent).If he's as smart as you say, he will find out whatever information he wants whenever he wants whether you want him to or not. The goal isn't to try and stop him, the goal is to make sure he trusts you enough to come to you when he find something confusing, concerning, or otherwise significant to him learning what the world is like. The world happens at its own pace. You can't control when and what he learns, but you can help tech him how to learn.Edit: clarified a part",bafben10,2025-04-09 00:35:36,38,learnprogramming,t3_1jus7k2,False,
mm4k0nn,Code with him. Also once he has python he doesn’t need internet access to use it. He can learn offline through his terminal or something easy like vscode.Edit: Offline usage supplemented by physical books,speed3_driver,2025-04-08 23:53:07,31,learnprogramming,t3_1jus7k2,False,
mm4pp4d,"Boot.dev, I’ve started learning using it and it’s a very “makes you think through the problem/question” I’m 30 YO and it’s very enjoyable. I think a young kid like him would be hooked on it instantly. The way they do it is it’ll give a short couple paragraph explanation on the left hand side. It’ll say okay so this function is used to do this thing. Here’s an example of what it looks like. Now here’s your goal “create a function using the above example and use these variables to satisfy the function”. On the right side there is a console where you type in the code. It’s free (has options to pay) from what I’ve seen the entire python course is free and they have a slew of other options. They say by the end of it you will be coding a game. The website is very game oriented if that makes sense. It rewards xp and you can see your level go up and get rewards like xp boosters and some items that will keep your streak alive. You get bonus xp for doing multiple days in a row so if you miss a day your streak resets to 0. As far as how to lock him down to a certain area that’s just going to be parental control. Depending on what router you have you might be able to lock stuff down that way. We have an EERO router. I can create a profile on it and tell it to block certain websites or certain content.",soupeyman,2025-04-09 00:26:24,8,learnprogramming,t3_1jus7k2,False,
mm4wb8j,Why do you have to lock everything down?Porn?,Seaguard5,2025-04-09 01:05:14,15,learnprogramming,t3_1jus7k2,False,
mm4scnn,You could lock his PC down to only be able to access a Python playground site such as [Online Python](https://programiz.pro/ide/python).,David_Owens,2025-04-09 00:41:57,4,learnprogramming,t3_1jus7k2,False,
mm4qi9k,"if he likes books, download / buy him booksif he prefers videos buy and download courses/ buy YT premium and download whatever you want him to watch, turn off the internet.But still, i cannot imagine learning programming without the internet.",Relevant-Ad9432,2025-04-09 00:31:10,6,learnprogramming,t3_1jus7k2,False,
mm4t2n7,"Well, if you really wanna go down this road, then I'll point out that you don't need Internet access to program. Install a Python interpreter and whatever libraries you need, then unplug the computer's ethernet cable.",captainAwesomePants,2025-04-09 00:46:10,3,learnprogramming,t3_1jus7k2,False,
mm53ltd,"It sounds like your son is what they call in cybersecurity an ""intelligent adversary"": he's TRYING to get to websites that you don't want him to visit, and if you block one avenue, he's going to try another, and another, and so on.I was the same way, although in the 1980s, when I was at ""that age,"" unless you could access a BBS, you were using services like Prodigy or Compuserve, and there just wasn't any porn to be had. The only other way I'm familiar with from back then is to go to a computer swap meet and buy a floppy disk--they were 5 /14"" when I was doing this, which tells you something--that had it: typically image scans from Playboy or some other adult magazine.One option would be to get your Internet access through a proxy: there are companies that do this. You connect to the Internet through the proxy, and any web sites it deems undesirable it simply doesn't serve. Nowhere near enough if your son is as sneaky as you say, but hey, any port in a storm.",welcomeOhm,2025-04-09 01:48:19,4,learnprogramming,t3_1jus7k2,False,
mm5hsju,Why not code alongside him? That way you can keep an eye on his computer usage and he has you to learn with,Quantum-Bot,2025-04-09 03:14:45,3,learnprogramming,t3_1jus7k2,False,
mm96zr9,"That feeling is totally normal. I struggled with it myself the first few years of my career. We call it ""imposter syndrome"". It goes away after a while. Made me miserable but also work really hard so I advanced quickly. In terms of the beurocracy and not writing code, that's a bit unusual and concerning. Companies usually try to keep that to a minimum. Generally the larger the company is the more beurocracy, but it's generally process around security compliance, testing, documentation, etc. Stuff that's frustrating but still generally useful and understandable",Whatever801,2025-04-09 18:26:41,26,learnprogramming,t3_1jvcab0,False,
mm9jq4v,"That feeling is normal at the low and high ends. But those on the high end tend to underestimate their impact while those on the low end are actually flailing without knowing it. Which side of the curve are you on? One thing that caught my eye:> but most of my time is spent trying to find something to doI don't think that's normal for high performing developers. If you can feel it then your colleagues and managers can feel it, too. They may not tell you explicitly, but my guess is that they can feel that you're floudering. There's a saying that goes something like ""the reward for good work is more work"". That sounds like some sort of sysphean dystopia, but there's some truth here. If people aren't giving you work, it's most likely because people don't know what you can do. Or worse, they know your abilities and don't trust it. Couple of things I'd do:1. be more pro-active in sharing your accomplishments2. be more pro-active in asking for work3. learn to ""manage up"". A lot of people assume managers are there to parent employees, but they are just colleagues tasked with delgating work to and reporting on you. Help them in that work.",cglee,2025-04-09 19:29:03,6,learnprogramming,t3_1jvcab0,False,
mmagb4h,Almost every other non-CS engineer in India switches to software dev.,wobblingTower,2025-04-09 22:13:03,2,learnprogramming,t3_1jvcab0,False,
mmawjhk,the consequences of vibe coding :thinking_face:,DemoteMeDaddy,2025-04-09 23:46:05,2,learnprogramming,t3_1jvcab0,False,
mmbtty3,i feel like imposter syndrome goes hand in hand with any CS job atleast early on,WarlanceLP,2025-04-10 03:04:44,2,learnprogramming,t3_1jvcab0,False,
mm94c61,same boat brother But I'm still under 2 years of experience After getting out of uniStraight to full stack developer course After 11 months of hustle I got job as java seIn product based company (Small)Need your suggestions,Rich_Papaya_8057,2025-04-09 18:13:56,1,learnprogramming,t3_1jvcab0,False,
mm95izk,Ritmo no CA eh diferente do ritmo no BR. Aqui o povo eh beeeeeem menos preocupado mesmo,Ancient_Bar8571,2025-04-09 18:19:40,1,learnprogramming,t3_1jvcab0,False,
mma7lhu,Completely normal.Fake it till you make it.,wggn,2025-04-09 21:25:59,1,learnprogramming,t3_1jvcab0,False,
mmblwar,"yes it's super normal. try to work on it by positive reinforcement, doing off site projects, training with online resources like youtube, claude, gpteach and others. it will go away. but don't let it go and forget about it",brightside100,2025-04-10 02:16:14,1,learnprogramming,t3_1jvcab0,False,
mmp8ris,"First off, huge respect to you for everything you’ve done. Seriously. Switching careers, putting in the work during your lunch breaks, quitting to study full-time, picking up a completely new tech stack—all of that shows drive and resilience. You’re not lazy, and you’re definitely not a fraud.What you’re feeling is totally normal. I think a lot of us in tech, even people who’ve been doing this for years, go through periods where we question if we really know what we’re doing. Especially when you’re self-taught or leaned on tools like AI, it’s easy to downplay all the work you actually *did* put in. But tools are there to help us—using them smartly doesn’t take away from what you’ve learned.It also sounds like part of what’s getting to you is the environment itself. Being stuck in a process-heavy, bureaucratic setup where you barely get to touch code would make *anyone* start doubting themselves. It’s not about you being incapable—it’s about the situation not giving you a chance to actually do the work you know how to do.It’s still early days at your new job, and sometimes it takes a while to settle in. But even if this place doesn’t turn out to be the right long-term fit, it doesn’t erase everything you’ve achieved up to this point.You belong in tech. You earned your spot through hard work, persistence, and pushing through a lot of self-doubt already. Give yourself some grace. You’ve come a long way, and honestly, you’re just getting started.Keep going—you’re doing way better than you think.",Critical-Wish5819,2025-04-12 08:00:17,1,learnprogramming,t3_1jvcab0,False,
mltjhd4,"i just made a tcp to http server and it can start a server, parse requests n stuff. I had the same issue as you, before I made that tho, I made this whole back end for a web app and then I bailed bc I didn't want to learn front end yet so I made the tcp thing. (took me a while and im still confused, learned a lot tho)Think I will do some code crafter projects now.Point is, if you just wanna code, find some lower level stuff to do. Look up how to make packet listeners, and code a packet listener on a network to detect suspect activity. Make your own tcp server and learn how to parse http requests.Really take anything you like, go one level lower and ask, ""well how does that work?"" then learn and work on that. That is what I do now after much of what ur feeling.its also useful to build stuff that you will use, but for me I can never thing of stuff i want/use so yeah...",Hkiggity,2025-04-07 05:42:40,6,learnprogramming,t3_1jtdu9n,False,
mltmqrv,"Like any endeavor worth doing , developing software is ""10% inspiration and 90% perspiration"". You have to be willing to grind it out all the way to on the road to completion. sometimes that includes lots of testing and bug fixing. it's not always ""fun"", but it can be rewarding. Pick a project (even a simple one) and stick with it until you complete it to a level that you are satisfied with.",964racer,2025-04-07 06:14:49,3,learnprogramming,t3_1jtdu9n,False,
mltixgs,There is no such thing as “purely code”. But you can start with Java and creating desktop programs.,niehle,2025-04-07 05:37:21,2,learnprogramming,t3_1jtdu9n,False,
mltmib4,"Honestly, I feel like most people I know in the industry can relate, new projects always feel fresh and exciting. Starting something new lets you forget the hiccups in your current scope. I get it. I’ve started way more projects than I’ve finished—they’ve fallen to the wayside. But the real answer is mindset, discipline, and focusing on progress over perfection.Just aim to complete it. Aesthetics can wait. Once the hard part is done, you can enjoy polishing it up or not. Who cares? It’s done. Finishing projects creates a positive feedback loop. Knowing you completed something and uploaded it to your portfolio is the best feeling. Plus, now you get to start something new without the guilt of quitting the last one.As for HTML and CSS, use UI components. For game dev, just grab free or cheap assets. I’m a programmer, too. I never make 3D models because I’m not an artist. I’ve got another post on goal setting I’d recommend checking out. And if you really just want to finish a project, I’d suggest freelancing it gives you a driving force and a reason to complete the work.Good luck :thumbs_up:",the10xfreelancer,2025-04-07 06:12:25,2,learnprogramming,t3_1jtdu9n,False,
mltzmfy,"Let's just be real here. You are NOT going to get a job where they never ask to do something boring, using technologies you are not excited about. And even then the excitement will fade once you learn topic enough - you would be happy if you have ANY opportunity to learn at some point. Shit just need to get done out there - on time and on budget - for most part nobody gives a crap which technologies you will use to make it happen and whether you will be excited in the process. Having COMPLETED projects (even if for hobby) of any kind of your resume is MUCH better than having bunch of random attempts at any tech with no final results.",nila247,2025-04-07 08:28:27,2,learnprogramming,t3_1jtdu9n,False,
mltj1ih,You might just be overextending yourself. You're already doing 2 classes. Too much of anything is a bad thing,Whatever801,2025-04-07 05:38:25,1,learnprogramming,t3_1jtdu9n,False,
mltk5ux,For fun it’s easy to extend your own scope. When you get to pro it’s easiest to build what you know works for most of it. You argue with the people who need it to limit scope to something that can be finished. Then it’s easier to finish. Most of my personal projects over more than 20 years were never finished but i learned a lot. Then i made projects with those concepts that i knew i could finish and people pay you. Your fine.,iduzinternet,2025-04-07 05:49:16,1,learnprogramming,t3_1jtdu9n,False,
mlu9e8q,"First of all - it doesn't matter that much if you don't finish projects - if you are doing a project just to try or learn something, and find that now you have learned enough, and don't want the ""fun hobby project"" to turn into ""work"", then by all means, leave it be.However, it is extremely rewarding to actually finish something, and for most of us, also to get some form of feedback from users or other programmers - but if you are just ""playing around"", it is okay.Also, it sounds a bit like you might be more into ""programming for programming's own sake"" - like, you don't want to create a game similar to something you have seen, but you'd like to try to program something similar, or at least understand how it works. Maybe take a look into **Datastructures and Algorithms** \- not the leetcode way, but actually digging into understanding linked lists and such, it is fun and rewarding, projects won't take weeks, and you'll learn something along the way, and you can focus entirely on code, without bothering with ui, graphics, and all that.",peterlinddk,2025-04-07 10:15:32,1,learnprogramming,t3_1jtdu9n,False,
mluczy9,"You can grind LeetCode for a while to recover. It's pure code and likely the easiest way to ""finish a project"".After that, maybe https://www.shadertoy.com/ . GLSL is pretty easy to pick up and shaders are fun.And that would open you up to procedural graphics. With a little OpenGL ES2 (or modern Vulkan if you want to learn more), this would let you make playable games without much non-coding work.",BibianaAudris,2025-04-07 10:49:50,1,learnprogramming,t3_1jtdu9n,False,
mludbcr,"Backend development might be your thing. Zero design, pure logic. Start with a CLI app that solves a real problem - maybe automate file organizing or build a small database system.Stick to what you actually enjoy coding, drop the rest.",aequitas_terga_9263,2025-04-07 10:52:33,1,learnprogramming,t3_1jtdu9n,False,
mmdh0sv,Read “Code: The Hidden Language of Computer Hardware and Software” by Charles Petzold. It’s a history of computers from the earliest simple logic gates to microprocessors.,Roguewind,2025-04-10 11:59:30,21,learnprogramming,t3_1jvvuga,False,
mme78cb,Just want to say great question. Thanks for asking I’ll get alot out of theses resources too!,Character-Ad2346,2025-04-10 14:32:00,6,learnprogramming,t3_1jvvuga,False,
mmdfzn9,Pick up a book on computer architecture and operating systems.CS:APP is a good option if you want it from a software perspective although I prefer Harris and Harris for a deeper dive.OS:TEP for OS That should fill the most of the gap between NAND gates and user space.,MonochromeDinosaur,2025-04-10 11:52:21,3,learnprogramming,t3_1jvvuga,False,
mmdeyfr,read the CSAPP book and do the exercises,swiftguy1,2025-04-10 11:44:57,6,learnprogramming,t3_1jvvuga,False,
mmdkxfo,"Ben Eaters two ""courses"" - build a 6502 computer from scratch: [https://www.youtube.com/playlist?list=PLowKtXNTBypFbtuVMUVXNR0z1mu7dp7eH](https://www.youtube.com/playlist?list=PLowKtXNTBypFbtuVMUVXNR0z1mu7dp7eH) and building an 8-bit breadboard computer: [https://www.youtube.com/playlist?list=PLowKtXNTBypGqImE405J2565dvjafglHU](https://www.youtube.com/playlist?list=PLowKtXNTBypGqImE405J2565dvjafglHU) are excellent ressources - and he even sells physical kits so you can try to build along with the videos.If you aren't that much into building hardware, try getting started with Arduino, and programming that in C++ is a good start, where you can always dive deeper and write everything yourself, rather than relying on libraries.",peterlinddk,2025-04-10 12:25:55,2,learnprogramming,t3_1jvvuga,False,
mmdlxrs,"One of may favourite Youtube series: James Sharman's 8bit computer build with a CPU, Audio and VGA all designed with low level TTL logic. Well over 100 videos.[https://www.youtube.com/watch?v=3iHag4k4yEg&list=PLFhc0MFC8MiCDOh3cGFji3qQfXziB9yOw](https://www.youtube.com/watch?v=3iHag4k4yEg&list=PLFhc0MFC8MiCDOh3cGFji3qQfXziB9yOw)",healeyd,2025-04-10 12:32:31,2,learnprogramming,t3_1jvvuga,False,
mmdnaih,"Emulation development is a good way to start , start with a chip8 , you'd get a understanding of opcodes and other stuff",muffin_5799,2025-04-10 12:41:08,2,learnprogramming,t3_1jvvuga,False,
mmejda0,"there is this video series that is pretty good at connecting the dots, it starts from simple and buld a pc: [https://www.youtube.com/playlist?list=PLFt\_AvWsXl0dPhqVsKt1Ni\_46ARyiCGSq](https://www.youtube.com/playlist?list=PLFt_AvWsXl0dPhqVsKt1Ni_46ARyiCGSq)",randomjapaneselearn,2025-04-10 15:32:07,2,learnprogramming,t3_1jvvuga,False,
mme8r9p,On the job if you use c++ is to just switch to assembly view to debug stuff. Or you learn though crash dumps with symbols working or what's going on with registers etc,tcpukl,2025-04-10 14:39:38,1,learnprogramming,t3_1jvvuga,False,
mmftbes,"I would say learn FORTH, it's an eye opener, you have the raw tools to do things like allocating memory etc.One video I would say to watch is this one, even if you don;t know FORTH yet, this will show you the how and what you can etc. It's a good watch, when I started to (re)learn FORTH (last used around 1992!) I found it a source of much usefulness:[https://www.youtube.com/watch?v=mvrE2ZGe-rs&t=843s](https://www.youtube.com/watch?v=mvrE2ZGe-rs&t=843s)",bravopapa99,2025-04-10 19:16:19,1,learnprogramming,t3_1jvvuga,False,
mm14g0l,"You can't really, you need practice for which you will need a computer",VoidRippah,2025-04-08 13:27:16,36,learnprogramming,t3_1jud9q7,False,
mm15jvy,You'd be limited to reading articles and watching videos on the topic,NatoBoram,2025-04-08 13:33:43,14,learnprogramming,t3_1jud9q7,False,
mm16o2j,"Most programming languages have a web app that lets you do basic programming, such as [The Go Playground](https://go.dev/play/) and [Rust Playground](https://play.rust-lang.org/).",David_Owens,2025-04-08 13:40:13,6,learnprogramming,t3_1jud9q7,False,
mm1exqa,"*Human Resource Machine* is a phone game that reinforces programmer-like thinking. The “language” you’re using isn’t applicable irl, but it is optimized for touch screens and its challenges are perfect for working on in spare moments and thinking about after the fact. There’s even optimization challenges. It’s also got a sequel in *7 Billion Humans* that is more about programming robots with decision making logic.",stowrag,2025-04-08 14:24:49,6,learnprogramming,t3_1jud9q7,False,
mm197jj,"Unwrap is nice phone app if you would like to learn iOS Development. Used it for a while when I was learning, you can solve code questions there by filling up blanks or by writing all from scratch.",Mobile-Information-8,2025-04-08 13:54:21,2,learnprogramming,t3_1jud9q7,False,
mm1fbz5,I mean YouTube? Udemy? Documentation? I’m kinda confused by this question.,jaibhavaya,2025-04-08 14:26:52,2,learnprogramming,t3_1jud9q7,False,
mm1fxho,"I have built basic python apps using termux for development (I still do use termux for small logging scripts and apps where I need to monitor things for production/testing), you can install python, and have a full linux gui interface in it along with browser and everything. I'm using an old Google Pixel 3A XL for this which I purchased in the refurb market for 12000 INR ($140). I'd recommend a small bluetooth keyboard and a phone stand with it for ease of use.Not sure about any other languages/frameworks, you can check it out.",SugarBeta,2025-04-08 14:29:57,2,learnprogramming,t3_1jud9q7,False,
mm1cwm3,"Sololearn would help in phone , but I wouldn’t recommend it normally as you won’t learn much",blazkoblaz,2025-04-08 14:14:07,1,learnprogramming,t3_1jud9q7,False,
mm1e663,I think all you can really do is watch/listen to YouTube videos,Major_Fang,2025-04-08 14:20:45,1,learnprogramming,t3_1jud9q7,False,
mm1g2mh,you can put GitHub on your phone and read code that way.,IllustriousNinja8564,2025-04-08 14:30:41,1,learnprogramming,t3_1jud9q7,False,
mlvjhgs,"The fundamental algorithms and structures computers use are all math (e.g, searching, sorting, lists, binary trees).Matrices and quaternions are used heavily in displaying/transforming 3D graphics.Physics engines use physics pretty heavily (for obvious reasons).Graph theory is used quite a lot in pathfinding.The thing to note is that most of the crunchy, math-heavy stuff has already been implemented. For example, you don't need to roll your own sorting algorithms because they're usually built into whatever language you're using.",CatatonicMan,2025-04-07 15:18:57,51,learnprogramming,t3_1jtnd75,False,
mlvheka,"I’m probably ignorant to the actual application of math and physics in computer science. However, I think the main purpose of learning these subjects is learning how to think. You’re learning how to problem solve.",Fluffy-Ad-9847,2025-04-07 15:08:22,21,learnprogramming,t3_1jtnd75,False,
mlvpnyc,"Also to add, the earliest programmers were mathematicians. I bet they didn't expect non mathematicians to be programmers.",Snoo_88123,2025-04-07 15:50:49,10,learnprogramming,t3_1jtnd75,False,
mlvjlq9,"It depends on what kind of programming you want to do whether or not physics involved and how much of it is utilized.Math is going to be unavoidable. Programming requires logic, and logic is a branch of mathematics. Beyond that, there are entire branches of mathematics dedicated to computation, algorithms, and languages that will make you a better programmer if you understand them.Physics is probably only going to be used if you do programming in fields like engineering, game dev, etc",thecodedog,2025-04-07 15:19:34,8,learnprogramming,t3_1jtnd75,False,
mlvxc8q,"This is an extremely broad question, and you're likely to get a wealth of different answers to it. I think it might be difficult to point out any programming context that doesn't intersect with mathematics - computer science is a mathematical field, after all. As for physics, it really depends on what exactly you're trying to do. A whole lot of different physical phenomena can be modeled on a computer using programming. Some programs aim broadly. A [physics engine](https://en.wikipedia.org/wiki/Physics_engine?wprov=sfla1) might implement rigid body dynamics, inverse kinematics, collision detection, fluid dynamics, and softbody dynamics. Maybe even all of them at the same time. A [CFD](https://en.wikipedia.org/wiki/CFD-DEM?wprov=sfla1) solver, on the other hand, is more specialized.I think one term you should take a look at is [computational physics](https://en.wikipedia.org/wiki/Computational_physics?wprov=sfla1). See especially the part about applications. See also [numerical analysis](https://en.wikipedia.org/wiki/Numerical_analysis?wprov=sfla1), a topic that physical simulation heavily relies on. You may also find [discrete mathematics ](https://en.wikipedia.org/wiki/Discrete_mathematics?wprov=sfla1) illuminating. As a final point, some physical phenomena are best modeled with [statistical mechanics](https://en.wikipedia.org/wiki/Statistical_mechanics?wprov=sfla1)",monapinkest,2025-04-07 16:30:12,6,learnprogramming,t3_1jtnd75,False,
mlvzv3a,"Here is a concrete example from the other day.I have a line on the screen (really a piece of a line, connecting two points). All I really have from that line is the co-ordinates of those two points.The user clicks on the screen (I have the co-ordinates where they have clicked). If they have clicked on my piece of line, *or sufficiently close to it,* then I need to select the line.I needed to work out how to tell, based just on the co-ordinates they'd clicked on, whether to select the line or not.",tb5841,2025-04-07 16:43:25,5,learnprogramming,t3_1jtnd75,False,
mlx1e67,"Once you understand enough math and physics you discover that EVERYTHING is math and physics.Also, physics is not about ""laws"". It is about models of reality. Worth noting that software is also a model....",PoeT8r,2025-04-07 19:54:05,4,learnprogramming,t3_1jtnd75,False,
mlvkq3j,"There's another aspect as well, which is that it uses the same part of your brain",doesnt_use_reddit,2025-04-07 15:25:22,3,learnprogramming,t3_1jtnd75,False,
mlvulfd,"It's been a long time since I touched computer graphics back in school, but think about how 3D space in games works. How is it represented? How do things move in that 3D space? How does the camera actually work, and do you determine if two things collide in that space?Hell if I know, but it's got some shet to do with vectors and matrix transformations.",anime_waifu_lover69,2025-04-07 16:16:10,3,learnprogramming,t3_1jtnd75,False,
mlw2x19,"In linear algebra you study linear transormations, they are basically the way you represent any perspective shift of a physical object. So they are absolutely necessary in anything featuring 3D stuff",Sgrinfio,2025-04-07 16:58:52,2,learnprogramming,t3_1jtnd75,False,
mm4uunh,"This triggered me. I once worked with a guy like this. Literally the only meeting I’ve ever gotten up and walked out of right in the middle of it in my decade of SW engineering was when this dude told me to send him what I had done outside of source control (which I had already merged) and he would add it to his branch and release it from there (or merge it - it was unclear). I told him I wouldn’t do that and would help him pull the changes. He basically said no, I don’t want to do that and send them via email or he’d just reimplement the feature himself. What I learned from that experience is that PhDs very often don’t learn how to work in teams or the importance of source control and processes. Long story short, he lasted less than a year at my org, partially because no one liked working with him, including our PO, who actively kept him at arms length from important projects because of it and gave him independent side projects.You *may* run into people like this in your career, but hopefully the org you work for will manage them out quickly.",iForgotTheSemicolon,2025-04-09 00:56:36,23,learnprogramming,t3_1jusgdw,False,
mm4npyh,"It sounds like you need to set permissions, and some boundaries. Part of group projects is taking a leadership role and working with people to get them to do what you need or want. You need to set it up so one of you handles Pull Requests.Your group mate *should* be creating a branch for a feature, doing a pull request. Whoever has good acumen for coding will accept and merge it into your main branch.",SeattleCoffeeRoast,2025-04-09 00:14:44,38,learnprogramming,t3_1jusgdw,False,
mm5g7qo,If he did that at Netflix he’d be walked out the door that day. That’s a definite keeper test failure.,Impossible_Box3898,2025-04-09 03:04:12,8,learnprogramming,t3_1jusgdw,False,
mm4wf1e,"If he's not in the repo, he's NOT getting on group credits. And this reminded me...I swear I ran into multiple bad partners during my webdev bootcamp. First guy was supposedly sick with COVID, and didn't check in his code until 48 hours before due date. His code doesn't mesh with ours at all (designed something else) and I had to rewrite almost all of his code. I left him in the credits mostly as pity. His design wasn't bad, just not what we asked. Then the next one... ARGH... she has ambitious goals, then spent the entire assignment period on... ""drag and drop"", and she never did accomplish it! I told her to cut down the UI, just use sliders or simple UI, but no, she won't do it. She FAKED her portion of the assignment presentation, and asked us to go along. No idea she passed or not, but f- me. And guess what when I asked the professor for advice? He told me that I am the common factor, so I must be the problem!F- me. Good thing the bootcamp is ""pass-fail"" and I did pass. But it was NOT a pleasant experience.My advice to you: do what's fair, give pity where it's deserved, but no mercy when none's given. If he merged no code into the group depo, he gets NO MENTION in the repo write-up. If the guy wants to do his own thing on a group assignment, that's up to the professor. You don't help the guy, you just give him enough rope to hang himself.",kschang,2025-04-09 01:05:51,5,learnprogramming,t3_1jusgdw,False,
mm5d3bk,"This is not common, this is literally fireable behavior in a real job. I'm sure stuff like this does happen from time to time, but you're not going to have to learn to deal with this beyond ""ignore it and do the work like they aren't there until the problem person is solved by management"".",AlexanderEllis_,2025-04-09 02:44:02,4,learnprogramming,t3_1jusgdw,False,
mm74m53,"Make what ever repo you are using require pull requests and reviews to merge. And when you see his PR that has remade work of yours tell him no, he can't merge it.",moonluck,2025-04-09 12:03:50,6,learnprogramming,t3_1jusgdw,False,
mm6kmva,"If he is not merging, he isn't part of the group, he just ""steals"" your work.I've seen similar, and even worse, but more amongst students than professionals - sometimes it is pure arrogance, they think their code is better than yours - sometimes it is the inability to read and understand code written by others - and sometimes it is simply a social defect, they are unable to be part of a team.The first two kinds often learn to become better - because nobody likes them, they tend to switch groups a lot, but it sometimes helps, because they experience several different ways of working, and learn to adapt. And once they graduate they actually become team-players.The third kind is the worst, unless they somehow see their own short-comings - and they rarely do, after all being unable to function in a social setting, often also makes you unable to read social cues - they often drop out of school, or if they are good enough, they graduate, and shift from job to job, becoming sort of a ""cowboy-coder"", working as a consultant that ""rides into town, shoots at a few bugs, refactors the code to their liking, and leaves.""The good thing is that you'll rarely experience them for long in professional teams - usually only as new hires.A lot of the tools of software development: encapsulation, abstraction layers, microservices, more or less help teams isolate these rogue-coders, so they at least don't do damage. But it is a pain to experience them as a student focused on learning tech ... Good that you've already discussed it with your professor - next step could be to protect main branches, and set up the repository to only accept pull requests rather than merges, and they set a procedure for accepting and merging those pull requests - but it is something that should usually be done at the beginning of a project!",peterlinddk,2025-04-09 09:10:24,4,learnprogramming,t3_1jusgdw,False,
mm4ujg9,"In production settings it is solved by a simple procedure called ""code review"".\> is this a common issue I might have to deal with going into my career?During my career I had to change countries of residence due to external and cultural factors.But in your case it is a bad team member and you already used an equivalent of code review.Your career is not questioned just because of a clumsy colleague.",VibrantGypsyDildo,2025-04-09 00:54:46,6,learnprogramming,t3_1jusgdw,False,
mm5uqwy,"I really hate how group project classes go. Instead of actually teaching how to work in a team, they throw you in the deep end.You have both a people problem and a technical problem. The people problem is needing to work via consensus. In a real job, management deals with people who fail to do that.Your technical problem is you don't have clear enough interfaces between everyone's part of the project. I don't know if schools teach this differently now, but they used to suffer under the delusion that you can define all the tasks up front, go off separately and implement them, then come together to integrate your work. This is very difficult to do, especially for people with no group project experience.What works a lot better is to code together at first, taking turns ""driving."" This sort of forces you to do the integration first. You figure out the overall structure together, making sure everyone's concerns are addressed. Suddenly you realize you have started working on some code that can clearly be split off to work independently, because the disagreements have waned. Only then do you split it off. At this point everyone understands all sides of the interface better, so you know when you need to communicate again.In fact, I'd give good odds that the part of your team that is meshing well did something similar, where your problematic team mate went to independent mode ASAP.",kbielefe,2025-04-09 04:51:25,3,learnprogramming,t3_1jusgdw,False,
mm6qb5b,"It should not be evaluated. Because he steals your code. But I am against group work. Because sometimes you can find yourself between dumbs. Leadership does not mean managing dumbs. If someone wants to work alone; it should be accepted. Because I saw too many groups that rely on only 1 or 2 members, the others are just acting like dummy. They are trying to prepare you for life, yes. But in real life, if an employee is definitely useless, he/she would find himself/herself at home as unemployed. Nepotism? It would bother even the best ""leader.""",PureTruther,2025-04-09 10:09:00,1,learnprogramming,t3_1jusgdw,False,
mmabye9,"Sounds like it wasn't an environment file in usage, or your comment was inside of a parens/brackets for a multi-line/object variable. Would really need a lot more context for it.Outside of that any library that will parse a `.env` file to being environment variables for the running application/script, versus just being set in the environment it's running in, should drop commented lines. Generally as long as the line starts with `#` and not a whitespace _before_ the `#` you should be golden... But again, if a variable defined for the environment is an array, it might not do so.If you're ever unsure how it'll parse, and you're using bash/Linux (not powershell or CMD) try `. .env` to see how Bash etc would interpret it. If you get an error, it's probably syntactic.",rinyre,2025-04-09 21:49:05,4,learnprogramming,t3_1jv268c,False,
mmvcie5,Pretty easy but python is not a language for that. You can either do it with raw html+css or with js/ts. There are frameworks that allow you to build a website in python so maybe you can try them,g13n4,2025-04-13 09:26:03,51,learnprogramming,t3_1jy3r07,False,
mmvg19c,"Websites are made up of a few things:1) HTML. I want a heading that says this, a paragraph that says this, a link that says this and takes me to this address. Really easy.2) CSS. What fonts do I want to use, what text colours and background colours, where on the page do I want these things to be. This is quite easy for a simple site.3) Javascript. Anything interactive, ranging from very simple (this button will hide something when I click it) to absurdly complicated. You can make a simple site without any javascript at all, but learning javascript will take a bit of time if you're a beginner.4) Backend. If you want to store any information securely -, so that the user can't access or change it, or so you can share it between users - you need to send it to a backend (usually via an http request). This requires learning quite lot.",tb5841,2025-04-13 10:04:15,14,learnprogramming,t3_1jy3r07,False,
mmvevwk,"The devil is in the detail here.The simplest website is no more than an HTML page which you could learn to do in an afternoon. It would look like shit, and just be some simple pages to read. But it’s trivial to put together. As you add more features, make it look nicer, and otherwise spice things up the complexity goes up too.So the answer really depends on the specifics of what you are after. What kind of ‘interactive features’ are we talking. Do users need to log into the website? Do you need to store use-submitted data. Are you needing to access external API services.",Naetharu,2025-04-13 09:52:01,4,learnprogramming,t3_1jy3r07,False,
mmw81jc,"It can range from half an hour to many many weeks depending on what you want to do, just like the complexity can go from none to a lot Here's one of the best starting resource for all the bits you will need- https://www.w3schools.com/A website consists of- HTML for the static text content, this is called a Mark-up Language, with things like headings, paragraphs, lists, tables, forms, and buttons- Static content like videos, pictures, icons, and sound files that you reference in the HTML.- CSS to make things look pretty, fonts, text colors, page layouts, etc- JavaScript to make the website dynamic, and have smart interactions beyond the basics provided by HTML, like clicking a button to hide or show a paragraph.- Zero or more backends that could be in almost any programming language, you mentioned Python, perfectly suitable. This is used for storing things, and looking things up that need to be retained longer than the page is open. Frequently used to serve login systems, provide details about something pulled from a data source like a database and many more things.Those are all the bits you need to create a website you can run and test locally and covers the majority of things you'll want to learn if it is new to you.If you wanted to learn to build all the things for the website and understand how they work then that's all you need.If you are more interested in getting something up and running quickly without learning the basics then these options below exist. But these involve a bit more understanding of the operational side of websites and servers.There are also lots of tools available that can do what is called ""code generation"", like hugo, and they simplify and automate a bunch of the above to get you going without having to learn all the things, but the price you pay for using those tools is that it limits what you can change and do.Another thing used by a lot of websites is a thing called a Content Management System (CMS), a commonly used example of that is WordPress, this gives you a drag and drop visual editor to create fully fledged websites, again at the cost of limiting what you can do The last bit is putting the website onto a network or the Internet and that's a whole other kettle of fish with lots of options depending on what you built, so I'd advise you to not worry about this yet, just build it first.",dariusbiggs,2025-04-13 13:47:58,4,learnprogramming,t3_1jy3r07,False,
mmvg6mc,Anyone can do it with a help of YouTube video or udemy,Left_Huckleberry5320,2025-04-13 10:05:48,3,learnprogramming,t3_1jy3r07,False,
mmvhf4c,"Learn HTML + CSS + basic JavaScript (2–3 weeks with YouTube or freeCodeCamp)Use Streamlit or Flask (Python) if you want to integrate Python logicOr try no-code builders like Wix or Webflow, then slowly add your own code",PartySignature6883,2025-04-13 10:18:51,2,learnprogramming,t3_1jy3r07,False,
mmw8cdo,"For a basic site you use HTML/CSS or use Wix or another ""What You See Is What You Get"" WYSIWYG editor like Dreamweaver. This of this option as a ""single tool"", like a hammer.The Python solution is Django. However, Django is like a ""toolbox full of tools"". It allows you to create interactive and complicated websites that can take user input and then ""do stuff"". It has the same HTML/CSS webpages but twins it with ""code behind"" that is written in Python that makes the webpage interactive. Usually Django connects the website to a backend database like SQLite etc.I'd start by learning some HTML/CSS, build a basic site then do a Django tutorial.That's if you want to use python. The other option is HTML/CSS/JavaScript",Python_Puzzles,2025-04-13 13:49:40,2,learnprogramming,t3_1jy3r07,False,
mmx1wa7,"I am not trying to be rude, but rather helpful. I think you're putting the carriage before the cart or whatever idiom you might want to use. Your question indicates that you don't have base even knowledge but you want to get a result, that's common and a lot of people do that.I would recommend you spend a few days learning the absolute basics of web development either on the MDN docs, freecodecamp or elsewhere. If you put in the time, you will have thr answer to this question",ghostwilliz,2025-04-13 16:27:53,2,learnprogramming,t3_1jy3r07,False,
mmvw7gd,"It's pretty simple to write something that accepts a request for a URL and spits out HTML for that page. Honestly if you ask an AI for code for this, you'll get petty good responses. If this is what you're interested in learning, start with The Odin Project. You'll learn about HTML through that and how to hand roll out yourself to make a page. Then you can build a server that outputs that HTML in response to an HTTP GET request.",Paxtian,2025-04-13 12:29:44,1,learnprogramming,t3_1jy3r07,False,
mlytx1p,"What kind of Software Development do you want to do? It's still pretty broad, the answer to that would narrow down what you should learn. If it's more frontend focused I'd do JavaScript. If it's more backend try both Java and C# a little and choose the one you like more, I know both and they're kinda similar or rather feel similar. Both are in high demand in most places from a business perspective.If you wanna go outside the box and learn something interesting you could do Ruby (front) or Crystal (back).If you wanna challenge yourself or are going towards embedded, systems or performance critical you could do C, C++ or Rust. Even Lua if you want something light.If you're in love with Apple there's Swift or with Android Kotlin (Java is still the go to here but Android supports Kotlin).Noteworthy mentions: You might find Go-lang to be nice, haven't tried it myself but have heard it's pretty close to Python from a syntax perspective but with low level performance. If you use a Linux machine you can extend your Python knowledge and try Mojo it's nice. Nim and Zig are gaining ground but idk if they'll have staying power.",Vallereya,2025-04-08 02:01:32,6,learnprogramming,t3_1ju1u5a,False,
mlys2pk,"I would say C#, it's useful for web servers and financial systems as well as being used a lot in Game Development like Unity, Godot, the game/engine S&box by the creators of G-mod uses C# too for scripting.Plenty of other projects to work from as well, I personally find it a lot more pleasant to work with than Java even though it isn't considered as ""mature"". It has a lot more syntactical sugar that makes development less tedious and repetitive for boilerplate without the need for extra packages and dependenciesMy learning order was Python, C++, PHP/Html/Css, C#, JavaScript, Java. A lot of overlap though between the middle 3 (PHP to JavaScript)",FrostWyrm98,2025-04-08 01:50:25,8,learnprogramming,t3_1ju1u5a,False,
mlyoxki,"Please consider adding JavaScript and / or Typescript to your candidates for languages to learn. Java and C# are server-software languages. So is php. But JavaScript runs in browsers and in nodejs or deno servers, and is capable of doing really good stuff at scale like the others.",Aggressive_Ad_5454,2025-04-08 01:31:18,7,learnprogramming,t3_1ju1u5a,False,
mlz3onq,Picking up a frontend stack is never a wrong answer. You'll always get use out of it. Include SQL in that.,xDannyS_,2025-04-08 03:03:55,2,learnprogramming,t3_1ju1u5a,False,
mlzcat5,what are the key topics that I should master in python to do the things you said above? I am also pursuing python but kinda stuck after OOPs concept. I wants to grow more in python but seems I can't figure out what are the things to do. Can you please help me.,Sohamgon2001,2025-04-08 04:04:56,2,learnprogramming,t3_1ju1u5a,False,
mlzcglo,"Unless you specifically want to learn a language for interest or academic reasons, I would suggest identifying a field that you are interested in exploring (e.g. AI, embedded, web, backend, big data etc) and then learn the tools (including programming languages) commonly used in that space. Rather than the other way around.",gm310509,2025-04-08 04:06:11,2,learnprogramming,t3_1ju1u5a,False,
mlzigls,"Between the choices you mentioned, my vote goes to c#.",engineerFWSWHW,2025-04-08 04:55:07,2,learnprogramming,t3_1ju1u5a,False,
mlypl9i,"Go lang, if you want to learn new concepts",Special_Lettuce_4412,2025-04-08 01:35:20,1,learnprogramming,t3_1ju1u5a,False,
mlyt540,"Python's a good one to have under your belt, and those skills should transfer pretty well to other popular scripting languages. I'd say there are three ways you could go from here depending on what you want to do and learn.Becoming very familiar with the OOP paradigm would be a good next step if you're interested in enterprise software development. Java's not as prevalent as it used to be, but it's a good learning tool and plenty of people are still using it. There are several other modern languages that use the JVM, so you might take a look at those too.My biased recommendation would be to pick up C. Becoming familiar with how software /actually/ works without layers of abstraction will make you a better developer no matter what you end up doing in the end. There are competitors in the low-level sphere these days, but C is still dominant. It's old, but K&R's ""The C Programming Language"" is still a good introduction.Lastly, if you want to do any web stuff, learning HTML/CSS/JavaScript is a must. IIRC Mozilla's dev site has some good resources for learning the basics.",CruelNoise,2025-04-08 01:56:49,1,learnprogramming,t3_1ju1u5a,False,
mlyvmcp,the one you know,hatedByyTheMods,2025-04-08 02:11:59,1,learnprogramming,t3_1ju1u5a,False,
mms7l2d,"I started with this guide, would recommend https://beej.us/guide/bgc/",yoyo1yoyo2,2025-04-12 19:41:17,6,learnprogramming,t3_1jxmzho,False,
mmrwd0h,"You don’t need any knowledge of operating system, start learning C right away, you will understand memory management. But writing a good program in C usually requires a good understanding how computers work, how operating system works",Special_Lettuce_4412,2025-04-12 18:38:45,5,learnprogramming,t3_1jxmzho,False,
mmrn5o4,Actually I wanted to ask how to learn C and where to start. any useful resources ?,spectre007_soprano,2025-04-12 17:49:50,3,learnprogramming,t3_1jxmzho,True,
mmsph34,"Get K. N. King’s C Programming: A Modern Approach, 2. edition and work it through. It is amazing.",DataPastor,2025-04-12 21:21:14,3,learnprogramming,t3_1jxmzho,False,
mmv41ul,"I don’t know why anyone would think learning how operating systems work is relevant to learning C, or any programming language. They are completely different.If you already know JavaScript you should be able to learn C over a weekend. JavaScript is a C derivative language, like most languages today. The main difference between them is that C has no classes, so you’ll be using structs to store data like a class does, and you have to malloc/free your memory and keep track of it for everything. C is very easy to learn. The Kernighan & Richie book is the best place to start. https://colorcomputerarchive.com/repo/Documents/Books/The%20C%20Programming%20Language%20%28Kernighan%20Ritchie%29.pdf",Theromero,2025-04-13 07:54:28,3,learnprogramming,t3_1jxmzho,False,
mmsdbzw,Go to your local or school library and check out a book on C.  Try to get a book that’s under 5 years old.,inbetween-genders,2025-04-12 20:13:11,2,learnprogramming,t3_1jxmzho,False,
mmt7g2a,I think microcontrollers are a better place to start learning about C. If you are specifically interested in operating systems you can move to an rtos or linux from there.,tomqmasters,2025-04-12 23:10:21,1,learnprogramming,t3_1jxmzho,False,
mmvf6ky,"C Programming the modern approach is a fantastic book to get your hands on if you want to learn C. I would suggest you learn about OS after you have a foundation in some coding and CS concepts like architecture and DSA, but basically the Bible of OS is OS: three easy pieces. UW-Madison has an archived version of the course this book was made for called CS 537 which would be fantastic to go through while you read it to get hands on projects, but you need to know C for the course which is why you should learn C first before just trying to jump into OS.",LittleGreen3lf,2025-04-13 09:55:10,1,learnprogramming,t3_1jxmzho,False,
mmw4zxs,Read K & R C Programming [https://www.amazon.com/Programming-Language-2nd-Brian-Kernighan/dp/0131103628](https://www.amazon.com/Programming-Language-2nd-Brian-Kernighan/dp/0131103628),Crazy-Willingness951,2025-04-13 13:29:49,1,learnprogramming,t3_1jxmzho,False,
mmxxtqz,"Start with A, then go to B. When you feel comfortable, move on to C.",miscsb,2025-04-13 19:13:25,1,learnprogramming,t3_1jxmzho,False,
mmkumez,"Os, Compiler, Game Engine and Web Browser ;)",Beregolas,2025-04-11 15:34:28,9,learnprogramming,t3_1jwnu2p,False,
mmk0ouh,"our final group project as part of Bachelor of IT degree is to build a game engine, I reckon that probably qualifies in terms of complexity and scope",Due_Independent_4485,2025-04-11 12:59:00,6,learnprogramming,t3_1jwnu2p,False,
mmk317z,"There are both an OS and a compiler in IOCCC written in <4k bytes of C. OS can be quite small if the design were modest. Adding to the horsemen:- A high-performance emulator, which usually involves a JIT compiler and device emulation which are essentially inverted OS drivers- A complete game: not hard per se, but really challenging to *actually finish* since games are infinitely expandable",BibianaAudris,2025-04-11 13:13:02,3,learnprogramming,t3_1jwnu2p,False,
mmk4g3d,"OS, a Programming language, Game engine. Cannot think of the fourth but each of these you could literally spend a decade on.",Narrow_Priority364,2025-04-11 13:21:11,2,learnprogramming,t3_1jwnu2p,False,
mmpntds,I actually have no real idea what building a web browser entails at really. Maybe this is a sign that I should do some research on how web browsers work.,He0x7D1,2025-04-12 10:38:10,1,learnprogramming,t1_mmkumez,True,
mmk5e7w,I completely forgot about game engines! If I had any interest in game development I would probably have started by creating a simple game engine before moving on to actual game development.,He0x7D1,2025-04-11 13:26:33,3,learnprogramming,t1_mmk0ouh,True,
mmk6z0k,I might add the emulator to my log of things I want to build in my life. It sounds like it can have some real educational value maybe even before I put everything into building an OS I can try to do this. Also thanks for bringing IOCCC to my attention!,He0x7D1,2025-04-11 13:35:31,1,learnprogramming,t1_mmk317z,True,
mmo0i9i,Browser??,CardiologistNew8644,2025-04-12 01:52:47,2,learnprogramming,t1_mmk4g3d,False,
mmpo8yy,"It’s fucking hard ^^ the main components will be the renderer (which needs to handle html, css, multiple image formats and probably should include PDF), the interpreter (which needs to handle both JS and WASM efficiently) and a shitton of security features like sandboxing, cookie management, etc. I would even say it’s probably harder than building a game engine by quite a bit, also harder than a compiler (since it basically includes an interpreter) probably slightly easier than an OS from scratch, but that is unclear",Beregolas,2025-04-12 10:42:24,4,learnprogramming,t1_mmpntds,False,
mmpzofz,">probably slightly easier than an OS from scratch, but that is unclearEeeh, I wouldn't think so. I would probably say Browsers > Compilers > OS > game engine.",thewrench56,2025-04-12 12:18:02,3,learnprogramming,t1_mmpo8yy,False,
mltrh50,Discord.  Lots around discord.,inbetween-genders,2025-04-07 06:59:27,3,learnprogramming,t3_1jtezgl,False,
mlud8or,"Everyone starts somewhere. Been there, felt stupid asking basic questions. r/learnprogramming Discord is pretty chill - lots of beginners there. No one judges you for asking ""dumb"" questions.Most experienced devs actually love helping newbies, trust me.",aequitas_terga_9263,2025-04-07 10:51:55,3,learnprogramming,t3_1jtezgl,False,
mlttt6x,"> It should be easy to just find a community online and insert myself into it and make some friends with people who have made/are making these mistakes and can help guide me but it isn’t. Finding a community is hard enough but finding one where I don’t feel so immensely out of place and stupid compared to everyone else has been impossible. I cringe at the thought of even attempting to articulate my issues to these people who seem like they’re so advanced that it makes no sense that they had to spend any significant time making stupid mistakes at the start.I recommend joining https://discord.gg/pythonWe've made an effort to create a culture where even the newest of beginners feel welcome and like they can join in any discussions. You won't have to feel stupid or out-of-place here. There are incredibly experienced and talented people here, and you can talk to them and see that they're happy to talk to you. They'll tell you that they did make mistakes, at the start and even now, and that it's nothing to be ashamed of.> Now I have a lot of motivation and am able to pick what seems like a reasonable project and start. Unfortunately i haven’t had anyone in my life that even cares about technology, much less knows about it, to talk to. This has led to me making what is likely huge time wasting mistakes but i cant pick out which of my decisions are those mistakes.Personally... I would say don't worry so much about making mistakes. It's good to make them, it's how you learn. Don't let this fear hold you back from experimenting. One of the great things about programming is that mistakes aren't costly.",throwaway6560192,2025-04-07 07:23:59,2,learnprogramming,t3_1jtezgl,False,
mltu3sj,"I just read/comment on Reddit. I understand how much being self guided really sucks in the beginning. Your first language will have the most growing pains for sure. After that each language becomes easier and easier to pick up and learn.You can gain a lot from YouTube. Idk how much can be gained with 1:1 talking with someone you haven't found an equal skillset with yet. If you're lucky you can find someone at your skill level, that's when I at least could share my projects with someone and also learn something off them. Problem for me is I haven't had someone like that in a long time. Feels like I'm always one step ahead or two steps behind, so I just revert to learning and working on projects alone. I've been mentoring trying to help the newbies but it's not like I can share everything I read on a technical reference.",MrDoritos_,2025-04-07 07:27:12,2,learnprogramming,t3_1jtezgl,False,
mlwkqsu,"My advice would be to search for ‘build your own X’ type of tutorials/resources. Maybe try android development or something.I find the a lot of tutorials are dry, and definitely boring. But if you see it in action and build things you can see or touch you feel more motivated from that sort of accomplishment or feedback.Failure is part of the process. Don’t lose hope.Good luck my friend",Herb-King,2025-04-07 18:28:11,1,learnprogramming,t3_1jtezgl,False,
mltt6tp,+1 i found a really good cyber/cs community recently via ytb,Puzzled-End421,2025-04-07 07:17:16,1,learnprogramming,t1_mltrh50,False,
mlxe3xo,"> r/learnprogramming Discord is pretty chill - lots of beginners there. No one judges you for asking ""dumb"" questions.do you have a link to this? or could you clarify which discord you're referring to? I didn't see one in the sidebar or stickied posts, and the FAQ just says> Where can I get real-time help? (e.g. via discord, IRC)For a list of affiliated communities, see Posting guidelines > Related communities -- and in particular, the ""Real-time help"" section.> Please note that /r/learnprogramming is not officially affiliated with any of the communities listed on that page. The moderation teams of all of the listed communities are distinct and independent from this one.",arkvesper,2025-04-07 20:59:44,1,learnprogramming,t1_mlud8or,False,
mmv96ln,"Hashing on the client side is insecure, you really need to do it on the server.The point of hashing is that if I have the hashed password I can't derive the original password from it. So if user data is leaked I still can't use it.If the client hashes the password then I would be able to login with a leaked hash so hashing is pointless.With regards to your own staff, you should segregate access so that people can see only the data they need to do their job. Some people will be admins that can see the password hashes but again they can't get the passwords from those, and they have the power to change the password anyway.Side note, hashing is not encryption, it's one way only.",ConfidentCollege5653,2025-04-13 08:49:29,20,learnprogramming,t3_1jy2cla,False,
mmv95mw,"Here are some good answers about hashing client side vs server side: [https://superuser.com/questions/1675013/for-websites-is-your-passwords-hash-computed-on-the-client-or-the-server-side](https://superuser.com/questions/1675013/for-websites-is-your-passwords-hash-computed-on-the-client-or-the-server-side)It is generally seen as *less* secure to hash client side. It's absolutely easy to modify data sent by a client. If an attacker gets access to a database with the hashed passwords, they could just make a dummy client just directly send each hashed password and get access to every single account. If the hashing is done server-side and an attacker gets access to the database, the hashed passwords are useless since they don't know people's original passwords which will be put through the hash. If you really really are worried you can hash both client side and server side using two completely separate cryptographically secure hashing systems. However this doesn't add very much security - if a hacker compromises an individual's password they can still run the hash, or if they compromise the hash they can just send it directly as a dummy client. The only thing you're protecting is a potential client trust (e.g. what if they're storing the passwords in plaintext?). However regulations state that you can't store or print the passwords anywhere and any trustworthy company does not do this, just receiving the password as regular text, hashing to store/check, and immediately forgetting the text.",Spare-Plum,2025-04-13 08:49:10,7,learnprogramming,t3_1jy2cla,False,
mmyu9f7,"Thank you all for clarifying this for me! I'm hashing server side then, as many of you pointed out it's safer. Few things, though: \- The system I have in place in my schematics has three parts: Clients, Private Nodes (Personal servers), and a Supernode (Global server). \- Each server has a global identifier (to report to supernode and truly identify each user) and a local identifier to keep each user's identity hidden. Only time an admin gets to access serverside data is when a user is banned/suspended (because in this enviroment it means you either put the server's security at risk or repeatedly violated TOS/Server TOS) and the data is needed for the administrators (namely the owner of the server, for other purposes there is a separate security role called moderators, whom get lots less info for the exact reasons some of you pointed out) to debug what exactly did you break. My best guess was to save the password as the hash to prevent the server from knowing the exact password. \- I'm not in the US, so my laws aren't the same, but this was a big oversight in my part and I'd like to apologize for it. Still, all shared info in that regard has been useful, so for that I thank you all.For one final question, though: If the server does not know the password, how do I actually check password veracity? Do I take the password, hash it again and check against the hash?",Luningor,2025-04-13 22:10:22,2,learnprogramming,t3_1jy2cla,True,
mmv5vh7,"The common practice is to hash the password in the server, since you can't trust the client. As for the server not touching the password, as long as you don't actually store the plain text password, then you're OK.",plastikmissile,2025-04-13 08:13:32,3,learnprogramming,t3_1jy2cla,False,
mmv77e8,"There are two challenges in this problem, technical and legal.Let's tackle the technical first, but at the same time, we have to discern passwords and ""sensitive data"", because they need to be treated separately.You shouldn't hash passwords on client side as it raises several security concerns like: \- not being able to enforce password policies (your users may be setting unsafe passwords like ""qwe"" or ""123"") \- opening up a way for malicious clients to create (or reset) password with weak or no encryption (imagine someone makes a fake copy of your app and sends in plaintext or md5 hashed passwords)Now the more legal part: \- access to password data (hashes, salts) etc. should be restricted and audited, I see no reason for every admin to have access to this. Role Based Access Control is your friend here. Passwords could also be stored in a separate database with very restricted access. \- access to sensitive data - this highly depends on what kind of data we're talking about and where you are operating since local laws and regulations apply. But I'd stick to the same rules, restricted, pre need basis access, audited and logged. You need to know who, when and for what purpose accessed someone's private data",Bbonzo,2025-04-13 08:27:50,2,learnprogramming,t3_1jy2cla,False,
mmvcb8i,"Client-side in addition to server can protect users that use weak passwords or reuse passwords from themselves. If they're already using best practices then it's worthless, yes, but a lot of them aren't. If OP's scenario was something like completely self-hosted servers they could protect the users of their official client software from bad servers trying to steal credentials for password stuffing attacks.The way OP is describing it though sounds like they are giving admins access to info they really don't need regardless.",ithinkitslupis,2025-04-13 09:23:50,2,learnprogramming,t1_mmv95mw,False,
mmzperq,"Yes. This is how basically every website determines if you've entered the correct password. It's also why using TLS (HTTPS) is critical, so that the password is encrypted in transit.",askreet,2025-04-14 01:22:33,1,learnprogramming,t1_mmyu9f7,False,
mmyukqz,I'll have this in mind when making the admin system! An access log sounds just like the last thing I needed for this to be functional,Luningor,2025-04-13 22:12:12,1,learnprogramming,t1_mmv77e8,True,
mmveo0w,"Server-side hashed passwords aren't going to reveal any information as long as the password isn't stored. For ""who can see data they don't need to"", it's largely industry based and based on legal restrictions on who can see what data. Though it's ideal that developers only get access to the information they need to test and debug their code, this isn't always necessary. Adding a bunch of restrictions will make it harder for the developers for a slight amount of added trust.For HIPAA compliance developers may see patient records and information to debug stuff and work on code and features, but the data that they see cannot contain personally identifiable information like name/email address/phone number/home address. Since there are also people working on the login portion and might need to see this information, there's a separation or ""iron curtain"" in place where the people who work with systems that handle personally identifiable information cannot have access to medical records or information. Other industries just make you ""promise really really hard"" under the consequence of huge lawsuits and financial repercussions. Like if you're working at a bank you might get information that Apple is executing an order to sell $1 billion of USD over the course of 3 days, or even non-public information about acquisitions and mergers. Not everyone has access to this information at the bank however, just the people working on the computer systems or on the deals. A person could potentially abuse this and frontrun their own trades or hand the information off to a relative. However IMO the stakes are too high to do this in nearly every case, and everyone that has access to this non-public information has a restriction on buying individual stocks, commodities contracts, or large amounts of any currency without explicit approval from compliance.I don't know about the realm of modern laws for social media, but I do know at one point in time there was a creepy Facebook employee that was using their position and access to data stalk a user. Since then Facebook has added additional restrictions on the amount of information granted to developers, and getting more information about someone specific had to be run through a compliance team to ensure it was for debugging/programming reasons.The one place where this material non-public information restriction does not exist, unfortunately, is for the US congress. They are given zero restrictions on stocks or products they can purchase or sell, and a huge ass 45 day window to report trades. It's concerning especially considering the amount of non-public information they deal with. Like if a congressperson knows that there is a huge deal in the works for a car manufacturer, they may buy the stock with no restriction, and only have to report the trade way after the deal has gone through and the stock has made significant gains.",Spare-Plum,2025-04-13 09:49:40,2,learnprogramming,t1_mmvcb8i,False,
mmzprxx,"Ohhh, thanks! So then I have to save the salt in server too. Good to know!",Luningor,2025-04-14 01:24:58,1,learnprogramming,t1_mmzperq,True,
mmgdcrn,"I'm probably not the best one to answer, but I'm definitely up there as far as ability to relate. YMMV based on work culture, but don't be afraid to ask those questions. Speed comes with practice, and generally speaking most people are happy to help. Think of it this way - how does it feel when someone asks \*you\* for help with it? It's a nice feeling that someone values your experience enough to ask in the first place. As for the impostor syndrome, I can't really advise there. I did two years of work with a small company doing everything from development to support & implementations, and now three years & counting as an SWE with a larger company, and I \*still\* routinely feel like I'm just making it up as I go along, and everyone around is more competent than I.",florvas,2025-04-10 20:53:42,6,learnprogramming,t3_1jw8es3,False,
mmgubo5,"It will never go away. Software became far too big for one person to know it all a long time ago. And every project has layers of things that are unique to that code base.Your teammates were all in your shoes before, so any of them who start bristling at you for asking questions are hypocrites. Or they're embarassed that you're being victimized by their unmaintanable code and lack of documentation.Just try to do your best and meet the requirements, and keep asking questions when you're stuck or the choices look too broad. And don't feel embarassed to ask the AI or online about things that aren't proprietary.",userhwon,2025-04-10 22:23:30,6,learnprogramming,t3_1jw8es3,False,
mmgdx7g,"I think this is misusing the term imposter. You’re a junior, you should lack confidence. Once you gain experience, and overcome challenges and exceeds expectations, if you still feel inadequate then I’d start reflecting on where your insecurities are stemming from",TheGrind96,2025-04-10 20:56:30,7,learnprogramming,t3_1jw8es3,False,
mmgsj9x,"You’re a junior dev that just started working 2 weeks ago… of course you’re going to feel this way. What else do you expect? That you’re just going to be some genius coder right out the gate?This is all normal. As a junior, I would expect you not really know what you’re doing, but that you have the ability and determination to figure it out. Imposter syndrome goes away as you gain experience. Just keep on. Trust the process.",Maleficent-Order9936,2025-04-10 22:13:29,3,learnprogramming,t3_1jw8es3,False,
mmhqqst,"Hey, welcome to our great trade. Here’s the secret. We’re all imposters. :smiling_face_with_halo: seriously, we all experience this kind of confusion and self-doubt as we learn and come up to speed. One of the benefits of experience in this trade is that we know what to expect from this phase of learning. Think of yourself as a first-time runner in the Boston Marathon. You’ve heard The Wall, the steep Heartbreak Hill after mile 20, is there. Now you’re hitting that wall for the first time, and you’re like, WTF? I have to be crazy. Look at it this way. You made it to the Wall after only a few days on the job. You got this. And next time you’ll be better equipped to power through it.Again, welcome.",Aggressive_Ad_5454,2025-04-11 01:36:36,2,learnprogramming,t3_1jw8es3,False,
mmydbao,"Ask questions. There are no stupid questions just dumb answers. Better to ask then be wrong but don't be afraid to try to figure things out on your own otherwise you will never learn. Once you get a few bigger projects under your belt you will be a lot more confident.I work for a financial institution with a specialized language. I'm the single programmer on the team that covers multiple branches / locations and was hired out of college, only having done a few internships. 5 years later I'm now one of the most essential employees there and am single handily in charge of all programming task and the core system. I've handled the coding for all large projects as well as a merger.You will get there. It takes time. If you feel like you need to program outside of work do that, but don't burn yourself out. Personally, I have a hard time programming outside of work.",Dead-Rizky,2025-04-13 20:36:21,2,learnprogramming,t3_1jw8es3,False,
mmgcsh2,Meth,KahnHatesEverything,2025-04-10 20:50:56,2,learnprogramming,t3_1jw8es3,False,
mmhyk32,"I'm in the same boat. I pick one thing and learn it well. One concept, one definition, one best practice or one resource. Every day i have questions. But i take the first one unless there's something obviously more important that comes along, and when i have time ..i submit to the backlog lol. Every week i know 5-7 more things. Being dumb is excusable... STAYING dumb is where people get the ick. It doesn't always feel like it, but this is how anything is learned. We have knacks and gifts, but most people i meet had to brute-force their coding skills. You can do it. Or not... But you will surely be smarter on the other side. That's a win-win",Glad-Situation703,2025-04-11 02:25:37,1,learnprogramming,t3_1jw8es3,False,
mmizfdl,"Imposter syndrome is normal, and a good sign. It means you recognize you have a lot more to learn. Do the hard things, and ask questions by sharing what you’ve researched and tried yourself so far. Senior devs will respect that, and will be happy to help. Learn to interpret error messages, and read the official documentation of what you’re working with. Over time, you’ll get better and better. At first, it will be very hard and you’ll encounter things you don’t know how to solve often. We’ve all been through it, keep at it!",burntjamb,2025-04-11 07:34:57,1,learnprogramming,t3_1jw8es3,False,
mlvn4l7,"Speaking as a c++ swe, C# with unity is a great option with great tooling",frostednuts,2025-04-07 15:37:46,38,learnprogramming,t3_1jto61y,False,
mlvoh51,"python is generally not good for games at all, also games being AAA az mostly a scope and not a language question",VoidRippah,2025-04-07 15:44:43,7,learnprogramming,t3_1jto61y,False,
mlvqnx0,"3D free roam python games are *possible*, but not common. [https://www.pygame.org/wiki/about](https://www.pygame.org/wiki/about)Theres definitely better options if those types of games are your goal.",Usual_Ice636,2025-04-07 15:55:54,4,learnprogramming,t3_1jto61y,False,
mlvq6we,"Most high-end AAA games are written using pre-made, heavyweight game engines like Unreal or Unity (or Godot if you want something open source), in which case you will be using whatever language the engine supports.But a lot of indie games use alternative engines or write their own, and the language you use doesn't impose any kind of restrictions on what type of graphics you can use. You can certainly render 3D graphics with Python if you want.Python is popular for indie games because it's generally considered to be an easy language to learn, and it generally takes less effort to write something in Python than it does in C++. You don't see Python used a lot outside of the indie scene because, for one, it's much slower than C++, and also because it's an interpreted language, and commercial game developers generally do not want people to be able to easily open up and read through their source code.If you want to write a visual novel, I'd consider looking into [Ren'Py](https://www.renpy.org/), an incredibly popular and well-developed Python engine for visual novels. But otherwise? Honestly, consider looking into C# instead. There's a huge community of indie devs that use it, it's faster than Python, and it doesn't have the memory management issues that cause a lot of problems for people using C++.",minneyar,2025-04-07 15:53:30,6,learnprogramming,t3_1jto61y,False,
mlvv6xz,"I currently make a training simulator based on the DoD sims so I am more or less in that industry.It's more about the engine much less about the language. Your big two right now are: Godot engine using GD script is a mix between python and Java. Then you have Unity with C#. Godot is very simple and user friendly with good support for 2d,3d,and even can handle VR. Great licensing rules as well.Unity is a bit tricky to learn I didn't just intuitively know how to use it like Godot. It can handle VR better due to C# but with a much higher skill celling and not as good licensing rules. Hop over to YouTube and check out ""Brackeys"" channel if you'd like to see both engines to gage what you like more. I currently work in Unreal(C++) since nether above system can keep up with the IR/Imu/ Lazer loads gracefully. However Godot was used to make the earlier prototypes for demos so I'm very partial to it.If you're really caught up in languages that makes the choice easier.",Axino11,2025-04-07 16:19:16,2,learnprogramming,t3_1jto61y,False,
mlw0rcq,"From your post and some comments it seems to me you're putting the horse ahead of the cart. Don't worry about the language or implementation details because, honestly, you probably won't make a stellar job where any of that matters.Put your game idea on hold for a couple of months and do a basic pong clone. Then make something a bit more complex, like Tetris. Since you seem to be interested in a 3d game then make some basic 3d shooter.Do iteratively more complex projects so that in a few months you can answer a couple of the questions you just raised. At that point consider doing a more ambitious project where implementation details like language are more relevant but, I suspect, at that point you'll already have all your answers.",BroaxXx,2025-04-07 16:48:01,2,learnprogramming,t3_1jto61y,False,
mlwqk82,Unity is a way better option and c# is way more performant than python and way easier to understand than c++,Mighty_McBosh,2025-04-07 18:57:53,2,learnprogramming,t3_1jto61y,False,
mlw18su,"You almost certainly want to use a pre-existing engine. So choose your language based on what that engine needs. Building your own game engine is almost never something you should do, and will simply waste a vast amount of time and resource only to give you results worse than using an off the shelf one would.The VERY narrow exception to this is in the event that you have a peculiar game that really falls outside the remit of existing engines. Fez is always the example given, which when it was originally made, would not have worked in Unity or Unreal given the 2D/3D hybrid and rotation. Or at least not without enormous mounts of modifications.For you, however, choose an engine. And then simply learn what you need for that engine.For small indie games Godot is a solid option. It's free. Well supported. And has a wealth of great features.",Naetharu,2025-04-07 16:50:28,1,learnprogramming,t3_1jto61y,False,
mlw1vng,"For making indie game, using an engine is the best option, and then you pick the language(s) of the engine. So for Unity it'd be C#, for Unreal it would be C++, and for Godot it would be C++ and GDScript (which is a sort of python).You should work on finding which engine would suit your needs more than, finding out which language will fit your needs, IMO.",LuccDev,2025-04-07 16:53:40,1,learnprogramming,t3_1jto61y,False,
mlw8ojr,C++ is way more better and helpful,Hefty_Click_6640,2025-04-07 17:27:58,1,learnprogramming,t3_1jto61y,False,
mm2uy58,"This is super impressive. Unfortunately, the combination of math, ""race against time,"" and spiders is almost the worst thing I can imagine (it's just missing Celine Dion music to be 100% my worst nightmare). So, I haven't actually played it. But I can appreciate the work that went into it and send encouragement for him to keep creating.",MushroomAdjacent,2025-04-08 18:38:16,3,learnprogramming,t3_1jug6mo,False,
mm3jzoo,This is awesome and I may have the ¨soundtrack¨stuck in my head for the rest of the day.,floin,2025-04-08 20:39:31,3,learnprogramming,t3_1jug6mo,False,
mms9531,"MOOC [Python Programming 2025](https://programming-25.mooc.fi) from the University of Helsinki. Free, textual, extremely practice oriented and a proper first semester of ""Introduction to Computer Science"" course.",aqua_regis,2025-04-12 19:49:52,8,learnprogramming,t3_1jxor7l,False,
mms70vb,"It's never a bad idea to upskill, especially never a bad idea to know Python as scripting in Python is extremely easy and powerful. But honestly, cybersecurity is one of fastest growing industries, and the AI advances are only going to increase amount of work for cybersec. In EU job report, Cybersec was at 28% growth YoY and is probably the only ""very safe"" career to pursue in SWE right now outside of AI/ML. If I were you, and had some cybersec expertise already under my belt, I would say: Go all in and don't look back.",Alphazz,2025-04-12 19:38:09,2,learnprogramming,t3_1jxor7l,False,
mms94uf,The Google Career Certificate in Cybersecurity on Coursera is a very good and well structured program. It teaches Python and how to apply it in the cybersecurity field.,Stock-Chemistry-351,2025-04-12 19:49:50,2,learnprogramming,t3_1jxor7l,False,
mmvxyaj,"For Python: ""Complete Python Bootcamp by Jose Portilla"" on Udemy — beginner to advanced.For Software Engineering: ""Clean Code"" by Robert C. Martin (not on Udemy, but worth it).Backup plan smart — Python gives flexibility (automation, scripting, web, ML). Stick with it 6 months.",PartySignature6883,2025-04-13 12:42:31,2,learnprogramming,t3_1jxor7l,False,
mms4xsf,try this one thats 30 bucks right now [https://www.udemy.com/course/complete-python-bootcamp/?couponCode=25BBPMXACCAGE1](https://www.udemy.com/course/complete-python-bootcamp/?couponCode=25BBPMXACCAGE1) . Can you come back to me and let me know how this goes? I'm taking a udemy course from there for javascript because my school didn't have it during undergrad,Major_Fang,2025-04-12 19:26:34,2,learnprogramming,t3_1jxor7l,False,
mms6u5v,"I would do these 3 if you wanna get into the ""python world""[https://www.edx.org/cs50](https://www.edx.org/cs50)[https://pll.harvard.edu/course/cs50s-introduction-programming-python](https://pll.harvard.edu/course/cs50s-introduction-programming-python)[https://pll.harvard.edu/course/cs50s-web-programming-python-and-javascript](https://pll.harvard.edu/course/cs50s-web-programming-python-and-javascript)I would do them in that order as well",boomer1204,2025-04-12 19:37:07,2,learnprogramming,t3_1jxor7l,False,
mmscnmt,"Python is good. But, if you want to do information security work, you would be wise to do enough C or C++ work to understand buffer overrun vulnerabilities from the programmer's point of view.",Aggressive_Ad_5454,2025-04-12 20:09:22,1,learnprogramming,t3_1jxor7l,False,
mms77la,"I can’t even get an entry level IT role at this point, and I have my A+ and Network+. I’m also 27, mind you, so the clock is ticking.",ProAmara,2025-04-12 19:39:12,1,learnprogramming,t1_mms70vb,True,
mmvz8i2,"Why Jose over, say, Angela Yu?",ProAmara,2025-04-13 12:51:38,1,learnprogramming,t1_mmvxyaj,True,
mms8sph,"Relax. I'm 28 and soon 29 in July, and I am switching careers now and starting fresh. You're not behind, and clock is in fact not ticking. Grinding is important, but that kind of mindset will burn you out in the long run. We both have long careers ahead of us and it's only the beginning. As for not being able to get a job... I can't land one either, not even an internship. But in both of our cases, that's the job market situation and not our lack of qualifications. I'm overqualified for Junior positions, but not getting any responses as laid off Mid devs are applying for these too. Job market is quite bad right now, and not just in tech, but especially in tech. In the end though, it's a numbers game, you'll probably take 6-7 months to land a job, but it gets easier from the moment you get your foot into the door.",Alphazz,2025-04-12 19:48:00,2,learnprogramming,t1_mms77la,False,
mlvzsls,Use the Wiki feature on GitHub to better organize and connect your content together. As it stands browsing it is a bit cumbersome since there are no links between pages.,pat_trick,2025-04-07 16:43:03,1,learnprogramming,t3_1jtj2au,False,
mmx27bc,"Not sure about sys and cybersecurity but junior cloud and devops positions are quite rare compared to development jobs, majority of people will switch to these positions after having work experience.Also no matter the path you take finding fully remote jobs are rare in general. Often it will be 3 days remote a week.",Wingedchestnut,2025-04-13 16:29:31,3,learnprogramming,t3_1jybea5,False,
mmx30u5,"Junior jobs in everything are thin on the ground at the moment. The economy sucks, the big companies have been cutting the workforce, and the political landscape looks to bring more instability before things get better. So people are not hiring, and right now the market is saturated with experienced people looking for work.All that being said, I would recommend you learn the thing you actually want to do. Figure out what appeals, and focus on developing yourself in that line of work. While it is not easy to find work, it is possible. And what matters a lot is that you actually like the work you get to do once you find something.Times will get better again. But it may take a while.",Naetharu,2025-04-13 16:33:49,3,learnprogramming,t3_1jybea5,False,
mmzmke7,"The things you've listed are not, for the most part, entry-level positions. They're things you transition to later in your career. Most people start out in either SWE, IT, or even in testing/QA. Also getting a junior remote job is extremely difficult. I would not really aim for that as a realistic goal. Although admittedly I'm not sure familiar with what the Irish job market is like, if that's where you'll be looking. Working a remote job as a junior is also often not the best move career-wise. You need to be learning a lot as a junior, and it's much easier to learn when you can just quickly ask the guy next to you instead of having to ping random team members on Slack and hope they make some time for you. It's a lot easier for them to brush you off on Slack than in-person.",Clueless_Otter,2025-04-14 01:04:01,1,learnprogramming,t3_1jybea5,False,
mmim6bt,"I was about to write a long paragraph trying to explain tests, but you've probably read a lot like that.Let's try it interactively instead. How about you tell us about a program you wrote. Ideally something you just finished or are in the middle of working on right now. What does it do? What are some of its features? What makes it interesting or tricky?Give us a few sentences about it. We'll help you figure how to write some tests for it, and why it might be useful for you to do so.",dmazzoni,2025-04-11 05:24:33,7,learnprogramming,t3_1jwhnym,False,
mmiluy5,"I think it is really hard for a lot of people to understand why unit tests are useful, what unit tests you should write, and how to write them until you've been stung by bugs that unit tests would have caught.One can try to pass on that knowledge to beginners who haven't spent hours of their life (while taking years off their lifepsan) tracking down bugs that made it to production because of a lack of tests, but until you've been in the trenches it is really hard to internalize.So - learn how to write them, get used to writing them so they are not scary to you, but trust that as you work on bigger and more complicated projects life will teach you the final lessons on why we write automated tests.",PoMoAnachro,2025-04-11 05:21:46,5,learnprogramming,t3_1jwhnym,False,
mminaen,"Unit testing, as the name suggests, is the testing of small pieces of code, lets say just a function. Imagine you have a function that is called calcUserData ehich gets a user and does some processing. In this case you would only care about the processing part, as that is the main functionality of this function. Problen is now that this function calls the db to get the user data, and wr of course dont want to include that in the unit test as we ONLY want to test the function.This is were you use testing doubles as you mentioned, mocks, fakes and stubs. Mocks tell you if an interaction happened, for example you can check if the database function getUserData was actually called by calcUserData.Fakes are working implementations but simplified. Lets say that instead of mocking away the database, you want to use an in memory db, or you could even store values into a list if all you want is something to put in and retrieve data from.Stubs are when you want to pre-define a response. Imagine you have a function called isAdmin, which simply checks the db if the user is an admin or not, instead of actually calling the db we can simply stub it to return True or False. This is useful when you want to force an interaction. Imagine you want to test if you correctly throw an error to the user if they are not an admin, you can do that with stubbing.The mindset you need for unit testing is using these 3 tools to force yourself to ONLY test what a small piece of code does. The mistake people make is including dependencies into unit tests which makes them closer to integration tests.Hope this helped a bit, in a rush need to go to work now but if you have any more questions just comment Ill get back to you.",FenrirBestDoggo,2025-04-11 05:34:32,2,learnprogramming,t3_1jwhnym,False,
mmip70f,"> Also mocks, stubs and fakes are things I have tried to grasp but still they confuse me.You need to get the basics down first.  Mocks are useful, but you need to understand the problem they solve to get why people use them. What language are you using? Here are some C# unit tests in MSTest that make sure I'm calculating averages properly.  I'm trying to make a CSV out of data that isn't 1:1, so I have an object to calculate averages for parts of a column of numbers to normalize the data, and these tests will tell me if I break this functionality.  I have these run every time I start changing the code.https://github.com/CascadePass/CPAP-Exporter/blob/main/CPAP-Exporter.Core.Tests/StreamingAverageTests.cs",ColoRadBro69,2025-04-11 05:52:02,1,learnprogramming,t3_1jwhnym,False,
mmipxw6,"Just keep reading / watching tutorials and play around with your own code. I am guessing you have written at least one hobby app by now (you've probably written more). Try and do some unit tests on them.You will probably learn the ways it's easier to write code to be unit tested. You don't want to test a module with 15 different services in it, it's easier to unit test 5 different modules with 3 services in them, or even smaller units...",Python_Puzzles,2025-04-11 05:59:03,1,learnprogramming,t3_1jwhnym,False,
mmirkd6,"In my mind, the purpose of a unit test is to _confirm_ that a function does what it is supposed to do. This way, if something changes and the function no longer performs its intended function, the unit test should fail. For example:```def add_one(x): return x + 1def test_add_one(): # Standard use assert add_one(10) == 11 # Common edge cases assert add_one(0) == 1 assert add_one(-45) == -44```Now, if someone comes along and modifies the function like so (for one reason or another):```def add_one(x): return abs(x + 1)```Our unit test will fail and inform them that no, that is not what we intended the function to do.",backfire10z,2025-04-11 06:14:34,1,learnprogramming,t3_1jwhnym,False,
mmk8tg3,"I recommend Test Driven Development*. Write a failing test. Change the code to make all tests pass. Refactor as needed. Guarantees testable code.The mindset when writing a test is as if you're wishing to a genie. ""I wish that...Given a user who just created 3 things in the list, When they click undo, Then the list would contain just the first 2 things"". That Given-When-Then* pattern naturally highlights the test setup/preconditions, the action and the expected outcome (assertions).Test at the lowest level that doesn't feel awkward. Ideally Unit Tests*, but if you can't think of a way to write a test that is simple and obviously correct, consider Test Helper Functions* to hide the complexity, or to instead write an Integration* or End-To-End Test*.Mocks* can be helpful to test tricky things. E.g. simulate an external API* response. You'll be tempted to abuse them and use them everywhere. Try to resist the temptation whenever possible as you risk ending up with Tautological Tests* (that verify that the code is written the way that the code is written), giving you a false sense of security and making refactors a pain in the butt.*: Googleable terms",WebMaxF0x,2025-04-11 13:45:34,1,learnprogramming,t3_1jwhnym,False,
mml93qi,"It will really help if you start off by writing tests for pure functions, so that you don't need to worry about mocks/stubs/etc.It comes down to knowing what should be output for given inputs, and **stating** that in a small piece of code that does nothing but pass those inputs and verify the output value.From there you need to think about what inputs are ""worth"" testing... it might be all of them! Exhaustively testing a function that takes a single uint8 or some enum value is often trivial. When that's not the case, we usually test a few ""normal"" values, and then all the edge cases we can think of (null, zero, empty list, stuff like that).Testing stateful things is harder. Thats one reason to prefer stateless whenever possible.",angrynoah,2025-04-11 16:45:52,1,learnprogramming,t3_1jwhnym,False,
mmlo6w8,"Try to decouple your thinking about \`Business logic\` and \`Implementation details\`. I would say that UnitTests is best used when you\`re testing an ""Implementation of a feature"" and not the ""feature itself/business logic"".I\`ve been a dev for 20+ years - and I still have some issues with UnitTests, mostly because the code that needs to be tested is written like overcooked pasta/spaghetti. It\`s really-really hard to even do UnitTests when the codebase isn\`t even written in small units/chunks without no Abstractions, Interfaces, Implementations etc etc. At that point it\`s really pointless - a waste of time to even test anything that will break during the next release.",OperationLittle,2025-04-11 17:59:12,1,learnprogramming,t3_1jwhnym,False,
mmnahl8,"Without reading every other answer, I'll add. IMO ""all' scenarios should be tested. But also take this with a grain of salt and experience. BUT...when writing tests if you are not experienced, I found the general rules of BDD (behavioural driven development) is an extremely valuable toolset even if you don't follow BDD The general flow of BDD is* given X* when Y * then Zin unit teats this equates to```def my_test(): setup scenario # given X call tested function # when Y assert things happen # then Z```I find there is often multiple Xs, if there is more than 1 Y thats a red flag, and Z should == 1 but can be multiple depending on the scenario. but 1 Z per test is ideal.",BluesFiend,2025-04-11 23:09:48,1,learnprogramming,t3_1jwhnym,False,
mmg822y,This channel helps me stay up to date : [https://www.youtube.com/@Fireship](https://www.youtube.com/@Fireship),PeckaPuncher,2025-04-10 20:27:55,9,learnprogramming,t3_1jw7omo,False,
mmgyj9m,"I don't really anymore, it's mostly just noise and or ai. It's just not interesting anymore. Oh, another company has a shitty llm? Great",ghostwilliz,2025-04-10 22:47:33,4,learnprogramming,t3_1jw7omo,False,
mmg846s,"I don't, just use what ever works on the machines the code needs to run on.",Past-File3933,2025-04-10 20:28:12,5,learnprogramming,t3_1jw7omo,False,
mmips9a,Casually with YouTube or hearing from others. I don’t really keep up to much since I work in enterprise.,Rinuko,2025-04-11 05:57:35,1,learnprogramming,t3_1jw7omo,False,
mmgxl1c,"Every time a new tech trend comes along, I just wait for fireship to tell me about it.",Prestig33,2025-04-10 22:42:08,2,learnprogramming,t1_mmg822y,False,
mm4r7vk,"Yeah I mean if you struggle with arithmetic like percentages, it wouldn't hurt to study. Bring proficient in algebra is pretty useful for programming. Other math like geometry and trig is useful for specific types of programming, like games and graphics programming",grantrules,2025-04-09 00:35:20,10,learnprogramming,t3_1jut04u,False,
mm4sku9,"You've chosen one of the few specialities within programming that requires strong skills in mathematics. You'll probably want to study the actual mathematics separately because understanding the concepts will be valuable in understanding how to solve problems within that domain. You won't always be plugging numbers into formulas, you'll be responsible for figuring out how to solve problems using tools from your mathematics toolkit.Most programming requires absolutely no mathematics at all. Anything involving graphics does.",Own_Attention_3392,2025-04-09 00:43:17,11,learnprogramming,t3_1jut04u,False,
mm53dg9,"Sorry. But you chose a side of graphics programming, and this discipline of programming requires strong mathematics understanding. While you're learning Python, add mathematics to your studies if you're serious about the craft of VFX programming.",Blissextus,2025-04-09 01:46:59,4,learnprogramming,t3_1jut04u,False,
mm4s1lo,"You won’t really have a good understanding of what to use, when, if you try to just learn random things as you go. The pc can do the math for you, what you need to know is when/what to use and why. If you really want to get better, you can easily go through pre-cal, calculus and discrete math through YouTube channels. Could probably with through all 3 topics in 3-4 months if you wanted to. 6 months if you wanted to take your time Then again, you may never come that much math again, depending on what you do.",Gawd_Awful,2025-04-09 00:40:10,3,learnprogramming,t3_1jut04u,False,
mm57s4o,"I dont know enough about compositing to know what kinds if math are necessary, but I will say that its never too late to learn math. Khan Academy’s math curriculum is really awesome. Do it first and hour a day and youll skill up quickly",armahillo,2025-04-09 02:12:33,2,learnprogramming,t3_1jut04u,False,
mm7a3fw,"Think about it this way: **If you managed to (finally) understand the math when you had to build an application that used it, then you are okay!**Programming a tip-calculator is about applied math - using your ""**domain knowledge**"" of how to calculate tips out in the real world, and transfer that knowledge into making the computer do the same. If you knew exactly how to do the calculation, the job would only be to write the program - but as you didn't, you had to truly understand the solution, understand how to solve the problem outside of a program, before writing the code. A lot of programming is exactly that: first understanding how to do something, and then making the computer do it for you. And if you like that kind of thing, you'll do great!I suck at math, but mostly the kind I've never had to use actively. Calculus is like a complete mystery to me - although I understand derivatives and slope calculations just fine, I've never gotten the hang of integrals. Also have never had to use them in any applications. I've written quite a bit of 2D games, and are really good at trigonometry and simple vector calculations - but I've never worked in 3D, and still don't quite get matrices.I would like to learn the math before I have to use it - but I've always found that I can't. If I'm not going to use it in a program right now, I can't learn it. The moment I have to use it, I struggle for a while with learning it, and ask myself why I didn't just learn it before ... and the cycle goes ever on :)",peterlinddk,2025-04-09 12:39:33,2,learnprogramming,t3_1jut04u,False,
mm50pwn,"you need a lot less math for most programming than you might think. But basic stuff you really do need... middleschool / age 12ish stuff like percentages, remainders, arithmetic and so on... the ability to count from zero, etc. Remainders are a big deal in programming. Basic logic, which is more or less the same as the english words ... do you understand the difference between ""and"" vs ""or"" in english? And a little more, like exclusive or (this, or that, but not both. in programming, the normal OR accepts both as true, exclusive ore both means false). Past that, you use less and less unless you are writing math heavy software...",Independent_Art_6676,2025-04-09 01:31:21,1,learnprogramming,t3_1jut04u,False,
mm51wk9,"I learned to program in the 1980s, in C and 80x86 assembler: in those environments, you actually do need a fair bit of mathematical knowledge, because you are working with memory address, bit masks, and other mathematical concepts.For example, to add two numbers, unless each number is between 0 and 255, and so is the total, you will be using multiple registers, and you'll need to handle the rollover using the carry flag.Its even trickier when you are working with signed numbers--numbers that can be plus or minus--because there are multiple flags you use to determine whether the sum is positive or negative, and therefore that (say) it is greater than a value, less than a value, less than or equal to it, and so forth.It sounds like the best course of action is to watch videos or take a brief course geared toward middle school algebra, where you work with equations.",welcomeOhm,2025-04-09 01:38:22,1,learnprogramming,t3_1jut04u,False,
mm5k2iw,"I’ve found algebra to be very useful for basic programming. Both for building abstraction and being able to reason why certain things work. Calculus is needed for computer science, which isn’t strictly software engineering. Game development can involve physics, which is applied mathematics. I’d encourage single variable calculus, discrete mathematics and linear algebra, which will carry you pretty far and there’s some amazing online resources. These aren’t prerequisites, but I truly think they’ll help build a foundation of logic over time. Nor do you need to master the subjects. I’m biased as I studied history, then learned to code, learned mathematics, then went to grad school for statistics and ended up in “data science”",varwave,2025-04-09 03:30:31,1,learnprogramming,t3_1jut04u,False,
mm5t85a,"If you reapproach math and give yourself good basics you might find you are not bad at math, you are underconfident because your education missed or glossed over steps you needed for a complete understanding.I don't think it's an accident that you are drawn to some mathy stuff. I think you might be genuinely passionate in fact. If you'd like some tutoring I'd love to work with you for a modest fee. I have experience tutoring a variety of math including discrete math, algebra, statistics. I could even brush up my calc and linear algebra.",whisperABQ,2025-04-09 04:39:05,1,learnprogramming,t3_1jut04u,False,
mmvn2qk,I create libraries and publish them as packages (usually just locally instead of making them publicly available) or use git submodules,ConfidentCollege5653,2025-04-13 11:15:00,23,learnprogramming,t3_1jy58ha,False,
mmvn5pp,"For work stuff, we have libraries with reusable stuff, for example we have server software that runs in most of our installations, and we have a client library for communicating with the server that's used by multiple different projects that have to communicate with that server. It's reasonably disciplined.For my personal stuff it's often just Ctrl-C, Ctrl-V.",ToThePillory,2025-04-13 11:15:46,4,learnprogramming,t3_1jy58ha,False,
mmvs0vy,"first two times, I copy paste. If it's more than that, I'd extract to a library.As to your point about having difficulty finding your code, think about ways to organise your code such that you split the algorithms into separate files. One file (class) should be responsible for one concern. Remember to name your files / classes / function / components / ... in an intuitive manner!",Rhyze,2025-04-13 11:57:24,4,learnprogramming,t3_1jy58ha,False,
mmvxcs4,"As other say, I create libraries too. I keep all code on a remote I can always get at. Nothing wrong with copying source code from one project to another, e.g. when writing native software it's often preferable to lots of different builds etc. I like repos to contain as much of what they need as possible. I try not to use git submodules, preferring monorepos or separate repos, but there's no technical reason for that. The specifics of creating and consuming a ""library"" depend on how the language/environment handles modularity.",HashDefTrueFalse,2025-04-13 12:38:13,2,learnprogramming,t3_1jy58ha,False,
mmw26tx,"Libraries for stuff that really reusable, and i want to work in the same systematic way and will not change a lot.Templates for stuff that's sort of the same but not really.For some code I also accept that it's evolving over time. Downside to using libraries is that you ideally need some sort of testing to make sure it will not break other projects should you decide to change/add code.",keesbeemsterkaas,2025-04-13 13:11:50,2,learnprogramming,t3_1jy58ha,False,
mmypcd8,"I dont tend to formally package up code into reusable libs because generalizing it well takes time.However I definitely will remember “oh yeah I solved this before” ripgrep through the app for the method or whatever, and then copy paste it and adapt it to fit.",armahillo,2025-04-13 21:42:39,1,learnprogramming,t3_1jy58ha,False,
mlygcpt,You’d be better off staying in medicine lol the market is in shambles,Certain_Truth6536,2025-04-08 00:39:03,24,learnprogramming,t3_1jtv4hu,False,
mlxuvuc,big mitake lmao especially with how the market is,Dangerous-Role1669,2025-04-07 22:33:05,23,learnprogramming,t3_1jtv4hu,False,
mlx7a98,"It is challenging but it is not impossible. Unlike medicine, your are not beholden to institutions and colleagues with more experience, you don't have to wait for professional exams and years to pass to move from A to B. It is just how much you code and build things. The downside is that you don't have a lot of structure.I would start with a solid certificate or program where you learn to build things. Don't pay a lot for that.A degree program can help, but if you are exceptional and get a job, you may not need one.I was premed, got accepted to PhD programs because I wanted to do medical research, realized I wasn't cut out for that, studied and completed math & CS courses, then applied for and completed a Master's in Computer Science. I make good money and work from home at the moment, total freedom. However that can end at any moment.I started off too slow, I did a bunch of MOOCs and math I didn't need to. I taught kids programming in Silicon Valley for a year after doing a cert, then I applied to Master's so I could get a degree. Now I Have 6+ YOE and I have skills. Started about 10 years ago. It was painful for my ego to go from being treated as excpetional because I had a precocious undergrad CV that I threw away to hit CC and struggling. But well worth it.",exploradorobservador,2025-04-07 20:24:32,10,learnprogramming,t3_1jtv4hu,False,
mlyql3w,"Finish your MD. Do your residency. Use your interest in software to do something really useful at the intersection of software / AI and caring for people. Cognitive prostheses? Restoring function to injured people? Vision or hearing improvement? Radical new medical imaging? This whole are is about to blow up right as your career is taking off.Oh, and the electronic medical records field can fuck right off. ‘Nuf people doing stupid payer tricks trying to cheat each other.",Aggressive_Ad_5454,2025-04-08 01:41:20,4,learnprogramming,t3_1jtv4hu,False,
mlxqd4w,"In Australia we have a ""college"" institute called TAFE, it offers courses like certificates I-IV and then diplomas and advanced diplomas that count towards uni degrees.They offer courses in cybersecurity, networking, programming etcI'd expect the UK has something similar that you could get into and gain qualifications.That said, if you want to do it without going to an institute, look at stuff like the University of helsinky / mooc courses, boot.dev, odin project and CS50 online courses.See the wiki's learning resources >>>> on the right for more infoBest of luck!",Goodname2,2025-04-07 22:06:59,2,learnprogramming,t3_1jtv4hu,False,
mlxqmhn,"Don’t.Your education is hard now but your career will be a lot more fulfilling interacting with people and making a tangible positive change in their lives. In tech, it’s extremely difficult to work on anything worthwhile and make a positive difference. That aside, tech is getting hit really hard by AI, something that hands-on healthcare professionals will be immune from, for a while.",TisTheParticles,2025-04-07 22:08:28,6,learnprogramming,t3_1jtv4hu,False,
mlxekoa,"I've seen a few physicians transition from medicine to Informatics/Healthcare IT. With you having a lot of medical background you might be able to transition yourself into a similar role. A lot of our application (Cerner) analysts are nurses and with you having such a background, I could see that being a huge value add to an organization. Another option would be to look at Healthcare Tech companies, ones that operate heavily with clinical data, but use technology to tie it all together. I understand that you may not want to work in Medicine as a physician/clinician. But it might be an easier ask on yourself to build onto the foundation of knowledge you already have rather than move to another field completely, just my two cents.",Duncanbullet,2025-04-07 21:02:11,2,learnprogramming,t3_1jtv4hu,False,
mlzlag7,>  I can barely even finish the degreeDo it anyway! You'd be a fool to drop out right now while you're in the home stretch and almost finished,MathmoKiwi,2025-04-08 05:19:58,2,learnprogramming,t3_1jtv4hu,False,
mm0w0k6,I'm doing the same thing tho after 2 years in uni. I've just finished a course with Northcoders and I'm now doing a bunch of interviews for apprenticeshipsI recommend having a couple of projects you've worked on so you have things to talk about at interview tho tbf a lot of questions are 'give me an example when...' style questions so I found that it was very easy to use med school scenarios to answer them. Especially with stuff like adaptability and teamwork,at_69_420,2025-04-08 12:36:01,1,learnprogramming,t3_1jtv4hu,False,
mm0yzkh,"If you trust someone (dad, uncle, best friend etc) to put you in a job, do it.",PureTruther,2025-04-08 12:54:42,1,learnprogramming,t3_1jtv4hu,False,
mmwqyjj,"Hi, a fellow flutter dev here, would love to be on your team, can we make it happen?",__donnubzy,2025-04-13 15:30:55,1,learnprogramming,t3_1jy30nc,False,
mmr2ocq,"Once you know ""how"" to program, learning a new language is largely learning the syntax and language specific idioms. It's just reviewing documentation and googling when you can't figure out how to do the thing you know you want to do.It's different if you're learning a completely different programming style -- like learning functional programming vs object oriented. But it's still largely googling concepts.",Own_Attention_3392,2025-04-12 16:05:08,13,learnprogramming,t3_1jxkgfu,False,
mmr1i4e,Practice.  Practice the problem solving part.,inbetween-genders,2025-04-12 15:58:59,5,learnprogramming,t3_1jxkgfu,False,
mmr2u0f,Practice and experience. You learn patterns and problem solving. Lots of languages are similar with slight differences in syntax.,liamsorsby,2025-04-12 16:05:56,1,learnprogramming,t3_1jxkgfu,False,
mmr3s2o,"There are *a lot* of similarities across languages, they all steal the best bits from each other where they can, so the more languages you learn the easier it is to learn new languages.These days if I want to learn a new language I just go to ""getting started"" get a hello world going, and start reading the docs.With AI it's even easier because you can ask a question like, ""In I would do like so, how do I do in "" and generally it's good to get you going.You folks who are learning to program now are really in a golden age.",faintdeception,2025-04-12 16:10:52,1,learnprogramming,t3_1jxkgfu,False,
mmr60hg,"It really is as simple as what you describe- go through the tutorials to familiarize yourself with the language and identify anything new/interesting/odd/novel.- build something using the language for hands on experienceFor a command line tool I really recommend replicating the functionality of something like the md5sum, base64, or sha256sum command line tools and add in suitable unit tests, build pipelines, any packaging, and documentation.For a network server, a simple echo server and client that can handle multiple concurrent connectionsFor a web server, anything simple that includes structured logging, a Prometheus metrics endpoint, and a ready/live/health check endpoints.Once you know the basic constructs of programming, new languages are easy. They're all based around the below with maybe a few extra bits here and there.- arithmetic- simple data types (int, bool, float)- complex data types (struct, object, dict, map, list, slice, array, set)- looping constructs (for, do, while, repeat, loop)- conditionals (if, else, ternary, case, switch, select, and, or)- function calls- error and exception handlingExtra bits like operator overloading, channels, deferred execution, constructors, destructors, etc.",dariusbiggs,2025-04-12 16:22:38,1,learnprogramming,t3_1jxkgfu,False,
mmr6q3b,You need to know how it works and the syntax. You learn both at the same time. It’s impossible not to. It’s like learning the formula for addition. It’s impossible not to know what it’s for when you learn about the formula.My answer is based on what I think your question is. Correct me if my interpretation of your question is wrong.,Ok-Huckleberry7624,2025-04-12 16:26:22,1,learnprogramming,t3_1jxkgfu,False,
mmr6rfo,"When I learned Python, I started with a textbook that assumed programming experience in some other language. That way it could focus on ""Python"", rather than ""learning to program"" (with Python).",Gnaxe,2025-04-12 16:26:34,1,learnprogramming,t3_1jxkgfu,False,
mmrjh8f,"**1)** I write myself a basic curriculum. Something like this:-General approach-Data types-Input/Output-Variables-Functions-Arrays-Strings-Classses-Map/Sort/Filter/Anonymous functions etc-Error handling-Importing-File input/outputEtc. I then research each of these in turn, making detailed notes that I can refer back to.**2)** Once I'm haply with my notes, I go to Codewars.com, select my new language, and practice a ton of problems. Starting at 8kyu, and working up to 4kyu problems.**3)** Then I download and install the language and libraries/frameworks I want to try out, and I build stuff. I refer to/add to my notes as I do.",tb5841,2025-04-12 17:31:09,1,learnprogramming,t3_1jxkgfu,False,
mmrjvse,You should sit down and do the beginner shit anyway. Today I'm learning JavaScript and to compare variables it looks like they use '==='. So they use 3 equals signs to compare vs python which uses '=='.I think there is value of learning small nuances at the beginning of a course like that in my opinion,Major_Fang,2025-04-12 17:33:11,1,learnprogramming,t3_1jxkgfu,False,
mmrlx2w,You're going to have to work with several languages in your career as a developer.,ColoRadBro69,2025-04-12 17:43:31,1,learnprogramming,t3_1jxkgfu,False,
mmlmr16,"JavaScript will translate more directly into a job in the short term. It's one of the most widely used languages - not just for web frontend, but also for backend (Node.js) and mobile (React Native).AI/ML is a fast growing field, but just learning Python in a short time is not going to be close to enough. You'll need statistics, linear algebra, and other math. You'll need to learn all about AI/ML algorithms. Python is just one tiny piece of it.",dmazzoni,2025-04-11 17:52:11,2,learnprogramming,t3_1jwvunt,False,
mmlyyaj,"What do you prefer? Thats what matters. AI/ML has a lot of focus today, but if you dont enjoy it, do something else.",Theprof86,2025-04-11 18:53:31,2,learnprogramming,t3_1jwvunt,False,
mmlvj97,"For now, follow your talent or what comes easy to you",ixe109,2025-04-11 18:36:08,1,learnprogramming,t3_1jwvunt,False,
mmm0nfr,"Web Dev is quite saturated right now, in my country there's an average of 374 applications per junior position in frontend right now. Backend is like 140, AI is only around 70\~. If i were you I'd go for AI/ML. Just be prepared, the job is completely different than standard Software Engineering, at least if you're on the scientific part of it and evaluating models. You can find a good middle ground though by pursuing Data around ML teams, it's increasingly common now for Data Engineers to work around MLOps and feeding data to ML teams. Salary is quite high due to that, and it's becoming the ""new norm"" and will likely continue to grow.",Alphazz,2025-04-11 19:02:10,1,learnprogramming,t3_1jwvunt,False,
mmouy04,"I would say second is a bit more flexible, mainly you can not do ML in js, but you can do apps with python. But that’s every different fields, hence, listen to yourself, what you like more.",denysov_kos,2025-04-12 05:42:39,1,learnprogramming,t3_1jwvunt,False,
mmpv042,"If you have a choice of internships, pick the one that is most committed to helping you learn the practicalities of doing the work they do. The people you meet and relationships you develop during an internship are far more important to your career than the precise tech you work on.",Aggressive_Ad_5454,2025-04-12 11:42:10,1,learnprogramming,t3_1jwvunt,False,
mmq6s1l,"If you choose Webdev, you’ll be focusing on building interactive, user-friendly websites and applications. Key skills would be understanding JavaScript (you already have that) along with popular frameworks like React and Node.js. This path is great for building user interfaces or working with web applications. You can check out The Net Ninja and Traversy Media for structured tutorials on JavaScript and full-stack development. They break things down into digestible pieces for all levels.Python is definitely the better language for AI/ML development. Since you’re already familiar with C++ and are working on the AI project, this could be an exciting path for you. Key skills would involve Python libraries like TensorFlow, Keras, PyTorch, and scikit-learn. For projects, you could build predictive models, or generative algorithms.For Python learning, there are good resources from YT like Programming with Harry, Indently, Tech with Tim, Code with Josh (Zero to Knowing paid course) would be great if you’re looking for structured Python knowledge.",Hipst3rbeaver,2025-04-12 13:07:17,1,learnprogramming,t3_1jwvunt,False,
mmlo9pk,I think AI/ML would be more fun than CRUD.,Narrow_Priority364,2025-04-11 17:59:35,0,learnprogramming,t3_1jwvunt,False,
mm99bst,"This may or may not be relevant. I was fairly convinced in my sophomore year of undergrad (studying CS) that I wasn't going to be a professional coder (I decided I'd go to law school after graduation, with the intent of going into patent law, which is what I do now). I did it for a number of reasons, some of which included that I didn't love programming all that much and I wasn't naturally good at it. Being around people who were absolutely brilliant at programming and building things really made me feel pretty bad about where I was at. I could do my courses just fine and ended up graduating with honors, but I never built my own projects or anything, I just did my course work. Anyway, I have no idea if the additional two years for you would look anything like my last two years, but I did them just fine. I learned a lot, and a lot of it was both interesting and relevant to my ultimate career. I also build things now as hobby projects occasionally, even though I don't do it professionally. Anyway, all this to say, I was able to do my junior and senior years in CS just fine, even knowing that I wasn't going to be programming professionally and also believing I was just bad at it compared to some of my brilliant peers. I guess I'd encourage the BS instead of the associate's, because it will probably open more doors to you. As far as discipline and motivation, could you maybe talk to a few of your friends at school and say, hey I'd really like to build something but I'm having trouble on my own. Could we form a small group and build something together? That would keep you accountable not just to yourself, but your friends as well.On the, ""I want to learn but I suck at this,"" piece, I think you need to break your problem down into smaller, more manageable chunks. If one task is just too overwhelming, break it up into smaller, easier to understand pieces, and solve them one by one. Ask for help from a friend, a professor, a TA, Reddit, Discord, or even AI for things you just really cannot solve. Also, sucking at something you haven't learned yet is, in fact, the normal, natural state. That's how you get better: you start with sucking at it, you work on it, you get better, you work some more, you get better, and so on. I don't know what projects you've done for your classes, but start with those. Which ones did you do well on? Take what you did and do it again, but a little different, a little better. Add a feature. Maybe you did a sorting algorithm, like Quicksort, on integers. Do it again, but on floats or doubles. Do it again with individual characters, then character strings. Do it so that the sort is by length of the string rather than its actual value. Do it with templates so you can generically sort any type. Try building a visualization for it. Then whatever language you originally learned it in, try it in a different language. Try it in seven different languages, then pick the one you end up liking the most and try something new in that language.Do the same thing but for a project you didn't do well on. Make it better. Force yourself to take those two projects, and build something that uses both of them to do a third thing. Challenge your creativity. Just a bunch of thoughts on things you could do. Another thing you can try, get on ChatGPT or Gemini or something, tell it what concepts you know, and ask it to give you an idea for a project you can build with those concepts. Then go build it. Give yourself a deadline and stick to it. Tell your friends and family, ""I'm building this thing, I'm going to have it done by this date, I would love to show it to you that day so you can see what I'm working on."" Now you're accountable to them to get the thing done.",Paxtian,2025-04-09 18:38:06,3,learnprogramming,t3_1jvb8a3,False,
mm9hd23,"I think there's no substitute for motivation like, well, *motivation*.Here's a question: What did you do for work before starting this program? Did you like doing it? If you did, well, why aren't you still doing it? If you didn't...consider that the alternative to learning this stuff is to go back to it.(if you weren't working before doing this because you were a teenager living at home, often the only cure for motivation problems is ""drop out of school, work construction or as a line cook for a few years, realize how much that sucks and then come back to school more motivated to learn"")Learning any new skill that's hard enough to be worth getting paid for is going to require some motivation and some mental fortitude. This is a far more general problem than just programming, and you probably need to examine the rest of your life to look for how to fix it - maybe you need to be getting up earlier and going to the gym, maybe you need to eat better, maybe you need to detox from social media or tiktok or video games. You know your life, I don't.There are definitely some things you can do to make it more fun. Absolutely find a passion project like a Minecraft mod to work on. But you also need to build up your ability to tough it out doing things you don't want to do, otherwise everything else will be for naught.",PoMoAnachro,2025-04-09 19:17:26,3,learnprogramming,t3_1jvb8a3,False,
mm9dmbq,">How would you approach learning to program properly when tutorials alone don’t work anymore? notice how you said anymore, you are already at the point where tutorials aren't helping you which is an important step in the learning process. Now I find myself running through documentation and also reading others peoples code on github. >How do you build discipline when you often lose motivation or feel stuck early on?Motivation is a tricky thing because its what initially drives you to pursue the thing and then discipline is what keeps you going, all I can say is as things get easier and clearer you will be more likely to continue it is a struggle at first for sure. When you get stuck and you feel like you cant continue take a break and come back there have been so many times where I struggled on something then randomly during my day I figure it out.>Would you still recommend finishing the last 2 years of a CS bachelor if programming doesn't come naturally to you?Absolutely. I am a firm believer that programming doesnt come naturally to anyone for the most part its really just about practice and lots of it.>Are there any beginner-friendly project ideas that helped *you* break the tutorial cycle?Start with something simple like rock paper scissors and progressively move up in difficulty, AI is actually pretty good at giving you ideas on this so you can use that.>Do you think making a Minecraft mod (or something similar I personally enjoy) is a good way to get into coding?Yea tons of people start off doing game modding as an introduction whatever will make you keep doing it the very next day. Take a step back write a bunch of small programs and then move up slowly in difficulty understand the language you are using so you dont add additional struggle by needing to think of syntax when you are programming.",Narrow_Priority364,2025-04-09 18:58:55,2,learnprogramming,t3_1jvb8a3,False,
mmadn0p,"Honestly, I’ve been through this exact same phase. Feeling like I “should” be further along, but constantly second-guessing if I’m actually learning or just going through the motions. What helped me was getting out of the mindset that everything had to be hard to count.Instead of focusing on the big picture or what I *should* know, I started building small things I found interesting, even if they were kind of silly. That actually made me want to show up and code more often.Also, you're not alone in feeling like you're behind. Everyone learns differently, and sometimes just finding a rhythm that works for *you* (not the “ideal” one) is the key to sticking with it.",Dependent_Month_1415,2025-04-09 21:58:17,2,learnprogramming,t3_1jvb8a3,False,
mmcfoyi,"Practice writing small programs, then practice writing bigger ones. Do it a little bit everyday. As you get better at it, you will get more creative, faster, and it will be more fun, like playing a video game on expert mode. If you don’t like it after a while it might not be your thinf",shifty_lifty_doodah,2025-04-10 06:00:23,2,learnprogramming,t3_1jvb8a3,False,
mm8uao4,"It's important to know / deal with being demotivated and so on. It's ok to quit projects and so on. The important thing is you do the thing...Steve Martin on getting good when he worked at Disney doing magic:https://youtu.be/H-Qsrbacgrk?t=251TL;DR Doing a thing matters. Even if you don't finish a project, try things, **do thing often** (in this case code).",CantaloupeCamper,2025-04-09 17:27:06,1,learnprogramming,t3_1jvb8a3,False,
mm8uwf8,Just use different resources to learn about things you want to know. And yes using java for a minecraft mod would be a great practice if you want to work with java in the future,g13n4,2025-04-09 17:29:55,1,learnprogramming,t3_1jvb8a3,False,
mm8z9mf,"Exactly. Why did you get into the field in the first place? Was it because you were truly interested? Or was it because social media or modern tv/movies told you it was cool to program? It's definitely not for everyone. Start with something small. Even a ToDo list app can be complicated. Make it. See if you can publish it somewhere. If/when you do get a job, the programming position is more than just programming so this experience will be helpful. If you can even use your app, even better. I created a Todo app 6 years ago to test a concept and ended up publishing it online and use it for my grocery list. You can add, edit, and delete todo items. If you click an item it colors the background to blue. You click it again and it toggles it again. [http://e-applist.azurewebsites.net/](http://e-applist.azurewebsites.net/)It saves the data locally using localStorage. No API calls. Nothing special, but I've found it very useful. Create your own. The more you use it. The more you use it, the more that anyone uses it, the more likely you will come back to do bug fixes and updates. If you are interested in addons/extensions for games, this is fun as well. Create something simple, even if it already exists and publish it so others can use it. I did this for World of Warcraft. When you see 1,000 downloads it's really exciting to get back in there to do bug fixes or add more. When a new expansion comes out, I have more updates to do. When you have a valid reason to program, it becomes easier to stick with it. Nothing so deflating as a developer as a throw away program that you learn nothing from or no one has any desire to use.",esaith,2025-04-09 17:50:04,2,learnprogramming,t1_mm8uao4,False,
mlu25m3,"I personally like cs50 from Harvard. It's not school, it's one course but it really makes you actually do stuff and learn concepts if you do it honestly.",MissPandaSloth,2025-04-07 08:57:23,4,learnprogramming,t3_1jtgor0,False,
mlu3nfw,"Dr. Angela Yu's 100 Days of Python is pretty great - cheap, goes through everything you need and is all project based. It will definitely take longer than 100 days to do though, the projects at the end from day 80 onwards would take several days to complete alone.",Sanguinius666264,2025-04-07 09:14:15,4,learnprogramming,t3_1jtgor0,False,
mlu71gq,"You're young, why not just go to college/university?Official degrees will always be the most valuable Bootcamps are very risky currently, especially if you don't have any related work experience, you will probably not be able to compete in the job market.",Wingedchestnut,2025-04-07 09:51:26,1,learnprogramming,t3_1jtgor0,False,
mlva24v,"Programming, for many, is hard. Even the best teachers can only do so much. It's not like one teacher will suddenly make programming really easy. While not completely accurate, ask yourself what's the best way to learn math? Some people who are math-phobic have given up.This isn't to say that there aren't courses that might be better than others, but they're likely to fall short of what you expect. You just have to work hard and deal with whatever is out there. It's procrastination when you look for a perfect course because it likely doesn't exist for you.",CodeTinkerer,2025-04-07 14:30:58,1,learnprogramming,t3_1jtgor0,False,
mmeezuj,"To preface, I don't have a need for one outside of my work mentors, but the following will be general thoughts on this.I personally think that most good mentors (or at least people that are qualified to mentor) wouldn't want to do this for free. The ones that do it out of passion for free will be in high demand and thus can't really do that many 1:1 clients without cutting into their work/personal life too much. In regards to actually paying for a 1:1 mentor, I am open to the idea but this is coming from someone who is already employed and making pretty good money. Beginners that want to break into the industry likely don't have the funds to hire mentors and mentors that offer free services might not be that good or are more selective (i.e. higher demand).Just some random thoughts on the subject",kewlviet59,2025-04-10 15:10:16,11,learnprogramming,t3_1jvzohr,False,
mmf6yus,I see programming as a similar activity to learning a musical instrument (violin in my case) or learning carpentry. It’s a craft and so learning from a mentor/ master/ teacher seems optimal though I haven’t found the right fit so far. Growing up I had paid weekly violin lessons and think learning programming could benefit from a similar structure. Any suggestions on where to find and connect with mentors? Also been thinking I should show up to programmer hangouts IRL to meet people much better than me.,Delicious_Village_46,2025-04-10 17:27:34,4,learnprogramming,t3_1jvzohr,False,
mmeo649,Most people don't need a mentor,Proper-You-1262,2025-04-10 15:55:45,4,learnprogramming,t3_1jvzohr,False,
mmetyb2,"I've seen people offer to mentor/tutor for free, but what those people are willing to do and what the person wants from a tutor can be completely different.For example, a mentor might say ""Watch this video, and work on this exercise, and get back to me in a few days and show me your progress"". The student might want a custom lecture, want it recorded or transcribed, then be hand-held through solving the problems, and, one more thing, they have to be available when the student is available. I'm exaggerating, of course.When you see posters looking for help, they want someone to motivate them, figure out stuff when they get stuck, keep it interesting. Some students are given assignments, but then come back and said ""things got busy"" and they didn't have time to do what was being asked, so the mentor decides the student wants too much, but isn't serious about doing stuff on their own.One key is to level-set between mentor and student. The mentor should ask the student what they expect, i.e., how much time per week, what they expect the interaction to look like, etc. A potential mentor would express their expectations. Hopefully, they could find an agreement.From the student perspective, I'm sure they'd prefer free over paying, and they would be concerned, if they did pay, that the mentor was any good (presumably, they could quit if it wasn't working well).It's also a challenge to mentor well. A mentor needs to be aware of what the student needs and what they can provide. Some people over-explain going on and on with a concept not realizing the student has tuned out. They don't get the student to do some tasks during their meetings to keep things active.Intermediate programmers might fare better because they already know some programming. The student has to know what they want from a mentor and the mentor has to know what they want to offer.Look at the topics in this subreddit. Many are looking for a first language to learn, or they're worried about AI, or they need motivation to do something. I doubt the creators of this subreddit expected those kinds of posts to dominate the subreddit.",CodeTinkerer,2025-04-10 16:24:12,2,learnprogramming,t3_1jvzohr,False,
mmf866c,I can mentor you for one-fiddy,TONYBOY0924,2025-04-10 17:33:19,2,learnprogramming,t3_1jvzohr,False,
mmfbpfe,"This concept tried and failed many times, I was approached several years ago by some site, and they basically wanted me to work for free, make videos etc etc so I politely told them to shove it, seeing as they cold called me via email. Their whole schtick was allegedly connecting mentors and pupils but I just smelled a rat somewhere in their approach.I have mentored maybe 20 people over the years, I have 40+ years on the job, I love doing it as when you see somebody ""get it"" and pennies drop, it feels really good for both of you, plus, it keeps you sharp because there's nothing like an awkward curveball question to keep you on your toes.If you think you can make it work, bloody well go for it, you might be the one to fine ""The Way"" for it but, bloody good luck with it!",bravopapa99,2025-04-10 17:50:10,2,learnprogramming,t3_1jvzohr,False,
mmfc5db,"I love helping out juniors at my job, or volunteering at hackathons or on subs when I have time and opportunity to.It would not be economically viable to pay me to be available for this service on demand. Even if sites like exercism put a bounty on code review / mentoring, and I could do this at my convenience, it still probably would be too much to not be a hurdle for a junior to get the frequency and depth of reviews that would benefit them.If you’re a junior and want a mentor, ask a friend or go to a class. Mentorship is special kind of persistent engagement, not a one-off here and there.If youre a junior and are stuck on a problem, explain the problem to a rubber duck (NOT THE HARVARD LLM), if it still doesnt make sense, post on one of the coding subs and explain what youre trying to solve, what youve tried already, and what you think your hurdle is; any number of randos (including me) will chime in with suggestions",armahillo,2025-04-10 17:52:14,2,learnprogramming,t3_1jvzohr,False,
mmfhe0z,"As someone who had a mentor and now co runs a local mentor group i'll share what I see on both sides.Looking for a mentorIt sucks because it's like learning, you don't really know how to find one or what you don't know about mentors, what they are looking for, you might live in an area with a small dev seen. In my experience the mentor finds you not the other way around which sucks cuz it can take time As a mentorEVERYONE wants a mentor. There just isn't enough time and enough mentors. Most ppl are unwilling to actually do the work or things suggested. I'm not saying this is you or everyone but a lot of ppl don't truly understand what a mentor does and just expects us to hold their hand and give them a job from out connections. This is also why I think the mentor finds you not the other way around because we wait until we see someone showing the signs of someone that can actually benefit from a mentor \- Would you pay for a 1:1 mentorThis is really up to you and I ""personally"" don't like charging but I could completely see why someone would and have charged in the past for ppl that aren't local to me. I tried doing a discord server/meetup online and ppl just weren't as serious in my experience like they are when we do it locally and I think it's cuz of the low cost of entry to just click ""join server/meeting"". You are paying for this whether you have a mentor or not. You are either paying financial to move forward in time with their help OR you are paying in time having to figure it all out yourself. I know their are sites out there (I have not used them so I can't say if they are good or bad just know they exist) [mentorcruise.com](http://mentorcruise.com) and [codingcouch.io](http://codingcouch.io)",boomer1204,2025-04-10 18:17:26,2,learnprogramming,t3_1jvzohr,False,
mmgvvsr,"I’ll throw this out there: I’m a hobbyist programmer. I desperately wish I had a group in a similar boat, but almost all the stuff I find is for people with grindset mindset. Nothing wrong with that, but I def have trouble fitting in with my slow growth and lack of purpose. I’m just having fun putting lines of code down and hitting run.",boscobeginnings,2025-04-10 22:32:25,2,learnprogramming,t3_1jvzohr,False,
mmemukn,"I'm a mentor. I work with a few people. I do it in my free time, and I don't charge for it. Not many people would sacrifice their free time for others, and it's understandable. Family time and proper rest are needed",Any_Sense_2263,2025-04-10 15:49:20,3,learnprogramming,t3_1jvzohr,False,
mmdpe68,Have you tried using MonoGame? It may interest you.,Advanced-Mail-4407,2025-04-10 12:54:02,7,learnprogramming,t3_1jvw420,False,
mme2mws,Can you send me a link to YouTube tutorial?,Extreme-Text-6769,2025-04-10 14:08:45,-5,learnprogramming,t1_mmdpe68,True,
mme3ch5,Nvm find it,Extreme-Text-6769,2025-04-10 14:12:25,-3,learnprogramming,t1_mme2mws,True,
mm69ypt,"Static analysis, internal test cases (both manual and automated), occasional internal reviews (ie. whenever we have free time or notice something odd), third-party pentesting, and finally regular compliance audits with our local equivalent of FedRAMP",GlobalWatts,2025-04-09 07:14:27,2,learnprogramming,t3_1juxflo,False,
mm3hkr7,"Can you cite a currently produced game platform that is not little-endian? (because from the top of my head, I can't)",corpsmoderne,2025-04-08 20:28:29,7,learnprogramming,t3_1juni23,False,
mm3kvzh,"I can't stand the guy but I remember an article/blog post by Jonathan Blow a long time ago where he explains that when the source code of Doom was released by Id Software, he was very disappointed to see that all the loading / startup part was not optimized at all. But at the end of the article he comes to realize that optimizing a piece of code that will be executed once and is already fast enough is a waste of time. Spend that time on your hot loops. Can't find the article now but while even if the root of you question may have technical interest, in real life it's premature / bad placed optimization. Use known file formats with battle tested loaders, don't re-invent the wheel.",corpsmoderne,2025-04-08 20:43:48,6,learnprogramming,t3_1juni23,False,
mm3lx7l,"Ooh this is a nuanced question! So for one, your game engine is only going to need to care about endian-ness when it's reading or writing bytes external to the machine. Usually this is just for very low level networking code, but you'll want to at least consider it for save files if you transfer those between machines.As for unions... They're kind of an outdated way to solve a problem you shouldn't have very often in a weird way, if you're using strictly C you'll probably still need them here and there but for modern C++ you should consider `std::variant` in most cases you'd reach for a union, maybe `std::any` for some niche cases. One big problem with unions is that they occupy as much memory as their largest member - so over-using them for primitives will definitely mess up your memory usage and alignment. Another issue is that they're riddled with undefined behavior - writing to one union member and then reading from another is not technically allowed, but your program will compile anyways. UB is something to be rightfully scared of.TL;DR - you'd be better served by keeping a consistent internal float representation and only caring about endian-ness at communication boundaries than relying on a feature that comes with footguns.",sessamekesh,2025-04-08 20:48:40,4,learnprogramming,t3_1juni23,False,
mm3h1uv,"> Again, for portability, the author brings up endianess and suggests, due to asset making being tedious, to create a methodology for converting things to and from big and little endianI don't understand anything about this. What does endianess has to do with assets?",strcspn,2025-04-08 20:26:01,0,learnprogramming,t3_1juni23,False,
mm3k1i2,"Not RIGHT NOW, but PS3, XBox360 and Wii-U were all big-endian, and I wouldn't call them ancient. Endianness-independent code is still a good idea.",TheReservedList,2025-04-08 20:39:46,6,learnprogramming,t1_mm3hkr7,False,
mm3khez,"Very fair point.The books copywrite is 2015. And that was a little while ago. So it could be much less of a problem now. Even at the time, the processors that were used aledgedly were able to be configured as little or big endian but by default were set to big? Not sure, just something I just read. But, I am more curious at the moment whats going on with unions ""for realizes"" to better understand why I shouldn't just use them whenever I feel like it.",AbyssalRemark,2025-04-08 20:41:52,3,learnprogramming,t1_mm3hkr7,True,
mm3ng5v,I completely and utterly agree. Fantastic anecdote to boot. Id say something how thats kinda not my question but I dont want to cheapen just how much I agree.,AbyssalRemark,2025-04-08 20:55:55,2,learnprogramming,t1_mm3kvzh,True,
mm3nqos,"> writing to one union member and then reading from another is not technically allowedIt is allowed in C, not in C++. Agree with everything else.",strcspn,2025-04-08 20:57:17,3,learnprogramming,t1_mm3lx7l,False,
mm3us0r,"Thank you thank you, I am sure there is plenty more where that came from. But let's get to the fun part. If union members are the same size anyways, it's not an issue. But, your bring up a fassinating thing, does varient expressly NOT do that? I am only familiar in that I read that it exist sometime today. If its spessified in the standard to not do that and doesn't conflict with the whole strict aliasing which I assume it would be useless otherwise... then how the heck does it work? Isn't the express use of a union to be able to interpret data a segment of memory as one thing or another? Like.. thats the whole thing, what do you mean I can't do that? Thats.. its job? If it will *be* readable isn't defined.. obviously, you don't know how every data structure is structured. Like if you needed information in the thing about how to read the thing, that would be a problem. But is there something more then that I dont know about?So far. It seems my answer to ""why should I not put unions everywhere"" is ""I dont think the compiler would be happy about"". I guess unions are just fancy type casting and therefor have all the strings attached type casting does. Null terminated or otherwise.",AbyssalRemark,2025-04-08 21:32:50,1,learnprogramming,t1_mm3lx7l,True,
mm3icp1,"if you store in a custom binary file format your images, textures, sounds or 3d model, and those assets must be loaded on platforms with different endianness, you will have to make some conversion for the ones which are not of the endianness you have chosen. I believe this was very relevant in the good old days, today? I'm not sure.",corpsmoderne,2025-04-08 20:32:00,5,learnprogramming,t1_mm3h1uv,False,
mmxo34u,"It depends on the rules, but if you can just use models out there, and just feed them the image. There is not much complexity there. It would actually be quite basic, which is a bit weird.",mnelemos,2025-04-13 18:21:42,27,learnprogramming,t3_1jydivv,False,
mmy5t6k,"Well, this takes a rudimentary understanding of generative AI, especially image generation. Unless you have a reasonably powerful Nvidia GPU it can be a bit challenging but I can sum it up for you. Get comfy ui and watch a few quick tutorials about it. Then learn about something called ""IP adapter"". Basically, it allows you to take an image and upload it to comfy UI to create images based on the likeness of the uploaded image.The models you use are open free to download from within the comfy UI GUI. Most people use stable diffusion, but if you have a really powerful GPUs like 4090/3090 you can use Flux. Or, if you're looking for something specific (stylistic artistic styles) you can check out civitai.com (huggingface for image generation). You can find a wide variety of LoRAs (sort of like really fine tuned mini models) for exactly what you're looking for. After typing this out, I would probably avoid going too deep down this rabbit hole if you only have 15 days. As for the video generation, I don't have a lot of experience with video generation models, but diffusion generative AI (video generation) is very similar to image generation as far as I know. So, I imagine there are models that exist that can operate with IP adapter etc. However, image generation is very computationally expensive and video generation just takes it to another level. If you don't have access to powerful GPUs, look into some of the virtual machine services. They are fairly cheap, maybe a couple dollars per hour or find a way to use a free Google Collab for compute. Then, just spool up python and create a gradio web UI for the user to do all of this connected through API. It sounds like a lot, and it kind of is, but you could definitely pull it off in 15 days.This is a weird way to do a hackathon, IMO. Mostly because they're giving you what they want the result to be. I think a better approach would be ""Build a whimsical app that leverages generative AI (image and or video)""",talk_nerdy_to_m3,2025-04-13 19:56:27,8,learnprogramming,t3_1jydivv,False,
mmycmpy,">the task we've been assigned I have *never* been assigned a task in a hack-a-thon. Everywhere I've been, they encourage us to come up with our own ideas or join a team whose idea interests you",Dparse,2025-04-13 20:32:43,9,learnprogramming,t3_1jydivv,False,
mmyc9h8,"Idk it seems feasible, you have a team right? Different people tackle each task? 15 days is long for a hackathon too. And you can find ways to reduce the scope and get a feasibleMVP. You don’t need the AI pet to be fully animated or whatever, it’s just a small chatbot. It mostly looks like spinning up a python layer to work with the files and prompts, maybe a cloud service and database and a frontend. You can def do it in 15 days I think, especially if you plan ahead. Anecdotally, I recently did a 24hr hackathon; my team built a web app that takes a group of academic papers, analyses the citations common between them via LLM and suggests other pertinent literature based on that analysis. We got that basic functionality done within the 24hr timeframe with a team of 4",mancinis_blessed_bat,2025-04-13 20:30:46,2,learnprogramming,t3_1jydivv,False,
mmy1quf,"I could do all of this in one small python script (minus the ui) if external models are allowed. They do give you money/credits for gpu’s or access to gpu’s right? If so this is incredibly easy and the hard part would be designing the frontend for the web app. If not you’d likely not be able to do this, for example the “video ai” would likely be impossible to run on your hardware unless you have a pretty beefy gpu yourself.",The_GSingh,2025-04-13 19:34:35,1,learnprogramming,t3_1jydivv,False,
mmzi9it,> the task we've been assigned Sounds like the sponsor laid off their dev team and are crowd-sourcing feature requests.,GraspingGolgoth,2025-04-14 00:36:33,1,learnprogramming,t3_1jydivv,False,
mmxon3s,There is a bit more to it 1. you can only use free models and you cant get a paid model ( but you can use free tiers )2. i dont think its easy to find a free video generating ai. it may be easy to answer questions and to generate images but the video and lip syncing part i dont know about that,Opposite_Control553,2025-04-13 18:24:37,1,learnprogramming,t1_mmxo34u,True,
mmyzykw,"Many AI models are paid but their API is free in limited usage. You just need to research various platforms. The companies keep their APIs open to encourage developers to build their own apps/websites with integration and it's easier to build with free API access before. Everything stated by OP I believe is definitely doable with free API, but almost all of them will eventually be limited. Video gen, lip sync, etc is all too easy to abuse and drain company resources to be truly unlimited. Example, Suno API for song generation is free, but a daily limit requests that is very reasonable.My question is, is this a legit sponsored hackathon or some company or startup trying to get free work as most hackathons have better guidelines that are skill building than just finding the best AI model with free API. I've seen a lot of bogus online hackathon scams.I say this because, having done legit hackathons, I don't ever remembered being given a specific task, just guidelines, and you built your own thing. The fact they were given a very specific nuanced task and asked to only use free models is kind of sketch, imo.",GeneticsGuy,2025-04-13 22:43:30,4,learnprogramming,t1_mmxon3s,False,
mmzkjb5,wav2lip for lip syncing. Hunyuan/Wan/LXTV/Mochi for high quality free video models.,Kasyx709,2025-04-14 00:50:57,1,learnprogramming,t1_mmxon3s,False,
mmtny8t,app for what?,Natural-Tune-2141,2025-04-13 00:56:12,5,learnprogramming,t3_1jxvpb2,False,
mmtvzfp,Solo learn,mongolian_monke,2025-04-13 01:50:27,2,learnprogramming,t3_1jxvpb2,False,
mmuxl3s,Coding on an iOS device absolutely sucks. I hear some people have some luck using VSCode in a browser. But you’d be far better off on a regular computer.,_-Kr4t0s-_,2025-04-13 06:48:34,2,learnprogramming,t3_1jxvpb2,False,
mmv5a88,Learning coding on a phone? Eeehhhh....,Illustrious_Fall4887,2025-04-13 08:07:24,2,learnprogramming,t3_1jxvpb2,False,
mmu8gu6,Try uninstalling and reinstalling it. But honestly it’s better open a browser and use The Odin Project for learning instead.,i-Blondie,2025-04-13 03:15:42,1,learnprogramming,t3_1jxvpb2,False,
mmwffpi,If you don’t have access to a desktop or laptop a raspberry pi and cheap monitor (or hooked up to your tv) would be sooooooo much better.,djmagicio,2025-04-13 14:29:49,1,learnprogramming,t3_1jxvpb2,False,
mmnv8zl,"Learning stuff you're missing - greatGrinding leetcode for its own sake -maybe not the best use of your time unless your only goal is gaming interviewsAlso note; front-end in general and React specifically have their own design patterns that are different from the ones in classic design-pattern books, which are focused more on object-oriented languages and the backend domain. If it were me I'd start delving into the domain you're currently working in, because, well, it's right there and you can apply stuff immediately.",ValentineBlacker,2025-04-12 01:18:58,2,learnprogramming,t3_1jx4ywi,False,
mmnw7gb,"you seem to be fairly intelligent, so you can bypass a lot of crap that is taught in school. Its like drawing rectangles under a curve for the first 2 weeks of calc 1 ... if you got the concept 30 min into it, the next 2 weeks are blah blah.Take data structures: almost all modern languages have either these built into the language or libraries where they are done for you. It serves you no purpose to build a linked list out of pointers in C; first, its inefficient (page faults), second its error prone (pointers and inexperience don't mix), and thirdly as I said, its already there to be used in a library or language innate. What you need to know is when to use what data structures, and that isn't even well explained in the courses (they focus on reinventing them, not how to use them!). So go review a web site (not AI generated, find a human written one) on when to use what data structures.Big-O is just a jargon notation. Its like the math class on convergence of sequences (if you had that one?) where you examine the dominating term to see if it converges on infinity... except here we look for it to converge on an exponent. So bubble sort, where you go over the whole list of say numbers, find the smallest one, move it one location at a time until it gets to the top, repeat for the list except ignore the top item, then next time ignore the top 2 items... converges on N\*N amount of work being done to sort the data, which you can review online how to get there but its 2 nested loops effectively over N each, so its not too hard to see (this one). Proving an algorithm takes however many operations is helpful to know if its good at its job. The good news is that studying algorithms will include an explanation of how to do big-O & use it.Which leads me to algorithms. While a LOT of algorithms are included in languages and libraries, you still need to study them and to be able to solve your own problems using either the known common ones strung together or a totally new thing. I advise you to then do a quick overview of datastructures as I said above, and after that, do a pretty solid study of intro to algorithms and keep on digging into it as deep as you think is useful. I recommend not getting trapped/bogged down in graphs or graph theory unless you think you will be using that stuff (its pretty rare in most fields).after those, study object oriented programming if you have not gone deep into it. The last thing to do is design patterns, which require an in depth understanding of OOP & other basics or much of what these are doing will not make sense.avoid leet code. Its like tricky word problems in a math class more than practical programming. It can be fun, but in real life, no one will actively try to confuse you with the requirements and if they do, you can ask questions. Hit it up SOME, but don't ""grind"" it. The most useful thing it will teach you is how unexpected inputs and edge cases can really mess up something you thought you had working. THAT is useful and practical!",Independent_Art_6676,2025-04-12 01:25:08,2,learnprogramming,t3_1jx4ywi,False,
mmpr2te,You’re not in limbo. Having all the knowledge you lack + the degree without the job is limbo. Read Knuth.,pillmunchingape,2025-04-12 11:08:37,1,learnprogramming,t3_1jx4ywi,False,
mmqhe9i,"Don't feel like less of a coder because you don't have a degree. There are loads of us in the industry who have no relevant degree or even no formal qualifications at all. Yeah we've had to work a bit harder sometimes, but we can be just as good coders as anyone elseMy career started in a similar way to yours, I finished high school, dropped out of university in my first year and became a junior web dev. I'm now a senior developer with 20 years experience.",zeocrash,2025-04-12 14:10:37,1,learnprogramming,t3_1jx4ywi,False,
mmnx02q,"Thank you for your reply!I don't work with React much as it isn't in my companies tech stack. React was what I learnt after getting an idea of basic web development and JavaScript. I haven't really touched it too much for a while. A friend and I are working, slowly, on a side project and we're using NextJs for it so other then that not using React at all. The domain I currently work in is full stack web and mobile application development using ASP .NET Core, Python, and Flutter for mobile (and some web). So design patterns sometimes do come up since these domains use OOP languages. I've learnt a few design patterns along the way, but have never sat down with a book on it for something like that. As far as learning the stuff I'm missing, what would you prioritize? Should I go full speed ahead into DS+Algo?",soelsome,2025-04-12 01:30:13,2,learnprogramming,t1_mmnv8zl,True,
mmnz07e,"Oh, I'm sorry, I saw React in your post and didn't realize it wasn't what you currently using. Looking into OOP design patterns probably WOULD be good, then. Getting a jump on DS and algo probably isn't a bad idea. At least the basics. Don't burn yourself out or anything though, this is a marathon and not a sprint.",ValentineBlacker,2025-04-12 01:43:10,1,learnprogramming,t1_mmnx02q,False,
mmoi07g,"I think that's the best advice at the end there, and it's REALLY easy to forget.A few months in, when you have at least a couple hundred hours in practicing, and you FEEL like you should be further along, or feel like you should know what you're doing without looking it up or getting a hint, remember it's not a sprint. Just stay the course, keep practicing. Programming is like learning carpentry, where you have to learn how to cut things, how to put things together, different ways of cutting things to find different ways of putting them together, building jigs, learning the tools, but also...you're learning an entirely new language at the same time.Just get the hours in. 20 hours a week for one year is 1000 hours. People talk about it taking 10000 hours to excel at something, so just get your hours in. If you get to 5000 and don't know how to do anything, THEN you can start tripping.",lionseatcake,2025-04-12 03:53:00,1,learnprogramming,t1_mmnz07e,False,
mmkl8ql,"It really depends on you. The good news is you have some experience with other web stuff (React/Angular). I've seen people who want to learn a new programming language, and a new web framework, and work on some project they have no idea how to get started. They don't budget the time it takes to learn all of that. They justify it by saying they'll learn new things, but have no contingency if they run out of time.My suggestion is to find out who has more experience, your friend with React or you with Angular or if one of you can pick stuff up quickly. Or do both. Plan out a rough idea of what needs to get done, and how it would be done with Angular and React.In the meanwhile, give yourself about a week or two to learn Django (or use Flask, which is allegedly lighter weight and might be easier to learn). Build out a super simple web app (to-do) just to see the steps needed. If you're still mired in Django and Flask after two weeks and realize it's too much to learn, then go back to the technology you already know.If you can start learning Django and Flash right now, you can see how fast you can learn it. I would suggest regular meetings (every day) and perhaps in person if you can manage it during this process. Essentially, you are waiting for a go or no go scenario (go meaning yes, do it in Django/Flask, and no go meaning go back to something familiar).",CodeTinkerer,2025-04-11 14:48:25,1,learnprogramming,t3_1jwqhce,False,
mml2tlz,You can try Flask or Fastapi too!,Reasonable_Tone2466,2025-04-11 16:14:40,1,learnprogramming,t3_1jwqhce,False,
mmjjzcz,Accumulate total yaw and pitch and apply both to the clear state (e.g. zero transform). Do not apply small incremental updates to the current state.,buzzon,2025-04-11 11:02:32,5,learnprogramming,t3_1jwmzvu,False,
mmjkq1n,"You're experiencing nontrivial [holonomy](https://en.wikipedia.org/wiki/Holonomy): moving in a loop can (in general) change where what direction you're looking in.You can account for this by not accumulating changes on the camera side (i.e. applying a rotation matrix that transforms the current camera position to the new one) but rather on your own side, i.e. keeping track of what the total orientation should be (in a robust way), and then \*setting\* the camera transform accordingly. EDIT: maybe to make it explicit: there is no actual bug here or anything, this is just how the math works and what one should expect given the current setup.",SV-97,2025-04-11 11:08:40,3,learnprogramming,t3_1jwmzvu,False,
mmjxxy8,"You ideally want to keep your camera on the surface of the sphere and to use hyperbolic geometry for your camera motion. Your camera is always aimed at the center of the sphere, so correcting any inaccuracies becomes very easy. And because your camera's location is tied to its orientation, it means that you can represent any rotational orientation as a relativistic three-dimensional point with x, y, z coordinates.As for roll correction, since this is hyperbolic geometry, you would need to apply the relativistic Thomas Precession, and you would apply this frame by frame.",EsShayuki,2025-04-11 12:42:02,2,learnprogramming,t3_1jwmzvu,False,
mmjl1qa,"That fixed it, thank you boss!",Freddewtf,2025-04-11 11:11:18,1,learnprogramming,t1_mmjjzcz,True,
mmjkzgp,"The reason why is because it’s actually floating point math that’s annoying. The values are essentially an approximation so each calculation is close to the right answer but not always exactly correct. That’s usually fine, because the error is so tiny that you’ll not be able to notice it.However, if you use that result for the next calculation then you’ll get results which get more and more inaccurate as you go along.",Miserable_Double2432,2025-04-11 11:10:47,1,learnprogramming,t1_mmjjzcz,False,
mmpjoxx,I experience a similar problem when I try to extrude a mesh along a 3D curve. See paragraphs 8.3 and 8.4 in maniFEM's manual[https://maniFEM.rd.ciencias.ulisboa.pt/](https://maniFEM.rd.ciencias.ulisboa.pt/),CristianBarbarosie,2025-04-12 09:55:48,2,learnprogramming,t1_mmjkq1n,False,
mmjls3b,"That's not the problem here (even though it's generally true of course that you want to avoid accumulation like that with floats), see my comment below. Moving in circles on a sphere (which is what OP is doing by applying these rotations one after another time after time) actually \*does\* incur a roll, even with exact computations.",SV-97,2025-04-11 11:17:04,6,learnprogramming,t1_mmjkzgp,False,
mmpmc4k,"I hadn't heard of maniFEM before, seems like an interesting project. Thanks for the pointer :D There's also some other things (e.g. the `MetricTree`) in the manual that I'll give a read",SV-97,2025-04-12 10:23:09,1,learnprogramming,t1_mmpjoxx,False,
mmjm12i,"Ah, guess that’s why it’s r/learnprogramming, I learned something :grinning_face_with_smiling_eyes:",Miserable_Double2432,2025-04-11 11:18:59,2,learnprogramming,t1_mmjls3b,False,
mmupp12,This sounds like differential geometry,TheJodiety,2025-04-13 05:32:56,1,learnprogramming,t1_mmjls3b,False,
mmhyf1c,Check YouTube for quick crash course,Top_Water_20,2025-04-11 02:24:43,1,learnprogramming,t3_1jwe8ls,False,
mm3nzdz,How long is a piece of string?,naasei,2025-04-08 20:58:24,29,learnprogramming,t3_1juoaua,False,
mm3oe63,"5 minutes or 5 yearshere's a 5 second example -> create index.html, run itthat's a simple static website, what exactly do you expect of your website?",lukkasz323,2025-04-08 21:00:20,12,learnprogramming,t3_1juoaua,False,
mm3p4ya,"a ""static"" website doesn't refer to how elements move on the page. It means that the data shown on the page is static, doesn't change. Picture facebook: it's not static because there's data that changes all the time: what your friend post etc. Now picture your hairdresser website: it could show just his phone number, a nice design and that's it, it's staticNow, for your main question... It's actually pretty easy to make a static website, especially if you know figma, because if I'm not mistaken you can export figma to static website right away. You only need to learn how to do that + put it online, and this could be done in one afternoon.This requires almost no programming knowledge. However if you don't want it static, then it's gonna be tougher.",LuccDev,2025-04-08 21:03:59,9,learnprogramming,t3_1juoaua,False,
mm3u60x,"* Frontendmentor.io* Kevin Powell videos on YouTube * The ODIN ProjectThe biggest hurdle you're going to face with being able to RELIABLY build web pages that do what you want them to is going to be CSS. HTML is not terribly complicated, the most complicated thing you'll run into is ""Semantic"" HTML which you don't need to worry about. The rest comes down to parent child relationships that are relatively easy to grasp once you've built a dozen or so easy pages. Not saying html doesn't get complex, but in the beginning, the real battle is CSS.Kevin Powell is the guy to watch for CSS. Frontendmentor gives you designs to build. The ODIN Project is it's own thing with theory and practice. Combine all three for 3 months and you'll be building websites.Also don't forget MDN docs. Invaluable.",lionseatcake,2025-04-08 21:29:37,3,learnprogramming,t3_1juoaua,False,
mm3qx2j,"With cursor you can do it in 10 minutes these days. If you actually want to learn it, start with only html & css, get familiar with vsc, git & GitHub. It will probably take 1-3 months to get comfortable.",Informal_Curve_563,2025-04-08 21:12:55,4,learnprogramming,t3_1juoaua,False,
mm3wofi,"Simple little page with some words and maybe pictures? A weekend, maybe two if you're completely new to everything web (which you aren't if you've been using Figma!)Making things pretty requires some knowledge of semantic elements, CSS, layouts, and component libraries go a long way. A month or two will get you a long way, but I've been in frontend web development for years now and I'm still learning important things.",sessamekesh,2025-04-08 21:42:39,1,learnprogramming,t3_1juoaua,False,
mm3wu5h,"You can do a simple site with Wordpress in a couple days with zero coding or design experience. It will look nice, but you won't have very much control over the exact layout.If you want to code it yourself, you can learn enough code to make simple functional pages consisting of text, images, links, font styles, colors, and a simple page layout, all in a few days, but without design experience, it won't look like much. Design is harder than code, unless you are making some sort of web application or writing code that runs on the actual server, such as logins, profiles, messages/posting, or accessing a database.",JacobStyle,2025-04-08 21:43:28,1,learnprogramming,t3_1juoaua,False,
mm419w4,"Well, since you specified ""Static"" instead of ""Dynamic"" and you were quite clear about that--- it should take you about 15 minutes. Maybe an hour or two, all told, but no more than the better part of an afternoon.You can just go to neocities or some such free website place and code in about an hour's worth of HTML, and voila, instant simple static website. Edit: the Pinterest landing page is not by any definition static, so please clarify if you do mean 'static' or if you mean 'dynamic.' Though if you're specifically just referring to the dribble box, yes you can do that in an afternoon, it's just some ""a href"" keywords using image links.",Aglet_Green,2025-04-08 22:07:17,1,learnprogramming,t3_1juoaua,False,
mm44abp,If you gave me a server that was already running I could spin up a static site in about 2-3 hours depending on what the simple static site needs to do,bestjakeisbest,2025-04-08 22:24:02,1,learnprogramming,t3_1juoaua,False,
mm4rkqg,You can put a blank file on the web.,userhwon,2025-04-09 00:37:28,1,learnprogramming,t3_1juoaua,False,
mm0q6cm,"I assume you mean 'in a single server'. Afaik, it depends on the traffic and server.Instead of thinking about subdomains, turn it around and think if one website would slow down if 10M users tried to access it in your avg server. I will probably be slow.Now, instead of having 1 website, you have 10 websites/subdomains in the same server but each one is accessed by 1M users. The result will be the same.",fireball787b,2025-04-08 11:56:02,5,learnprogramming,t3_1jubbiy,False,
mm0qfi3,"If you're trying to run more on a single machine than you have hardware to support, you can absolutely see performance issues - it doesn't have anything to do with domains though, that's all happening up in DNS-land.",ehr1c,2025-04-08 11:57:51,3,learnprogramming,t3_1jubbiy,False,
mm0qqel,"There is likely a lot more information needed but to answer the question i believe you are asking. No adding multiple subdomains does not impact performance of a webserver. If you are chaining CNAME records to each other this would mean that you then have to perform multiple DNS looks ups to resolve the underlying IP then that could add a minor performance issues but likely nothing noticeable on your scale.Do you have any observability set up for your applications? Without and logs, metrics or traces it can be quite difficult to pin down what area of the application is impacting system performance degradation.",Scottyskid,2025-04-08 12:00:01,1,learnprogramming,t3_1jubbiy,False,
mm0quwj,Having multiple subdomains by itself isn't the problem. Subdomains are just a point to an IP.Is it possible that you are running all your apps/websites in a single server? If yes then this could explain the bad performance. You need a descent amount of computing resources depending on the demands of the website.If not the above then the optimization is bad.Consider upgrading your compute resources.Use maybe a Load Balancer.Use CDN.Check if queries on the Database are slow. In general check every log.Find misconfiguration in your applications.,RopeChairKicked,2025-04-08 12:00:54,1,learnprogramming,t3_1jubbiy,False,
mm0whes,"I'm pretty sure GoDaddy has a platform option available for you that will perform faster, but you might consider adding timing metrics and logging to your application layers to determine where time is actually spent before throwing dollars at apparent performance issues. I once had a site that seemed to be performing slowly but after adding metrics logging I found that it was the JavaScript in the browser that was the issue, the site was responding quite rapidly. The page rendering at the client browser was shite. Still our fault but we had the smoking gun pointing to the actual performance issue.",dswpro,2025-04-08 12:39:01,1,learnprogramming,t3_1jubbiy,False,
mm234da,"Splitting is not the problem. The server should not care about the URL passed to it as long as it's valid. You need to do profiling for each web app to determine the slowpoke. You can't just ""guess"" like that.",kschang,2025-04-08 16:25:12,1,learnprogramming,t3_1jubbiy,False,
mm2c5fk,"There is no inherent performance difference between hosting 1 domain with N endpoints, and N domains with 1 endpoint.",high_throughput,2025-04-08 17:09:19,1,learnprogramming,t3_1jubbiy,False,
mm3roux,"ok so first off: this is learn programming, not learn hosting. I mean this in a nice way. Someone else should be worrying about this if you are still learning. Also this place is for asking programming questions and your question isn't really about programming. It sounds like you are being put in a situation where you are made responsible for much more than you should be responsible for. But that's nothing new. as is pointed out, the same traffic split over multiple applications would act very similar (if not better) than the same traffic in one application. However you mentioned asp / old technology. Most modern webpages run mostly in the frontend (webbrowser) with only occasional calls being made to the backend to fetch data. this makes it much easier on the webserver since it only needs to put out data rather than generate html.old style applications would do a new request for each click (next page, sort, submit) and that request would generate the entire html page that the end-user sees. if this is the case for you then there definitely is going to be load on the server when there is sufficient traffic. Additionally it is possible that if you maintain session state at the server side there are inefficiencies there (too much state is kept, using up all the memory)from the documentation about web forms: https://learn.microsoft.com/en-us/aspnet/web-forms/what-is-web-forms> When users request a page, it is compiled and executed on the server by the framework, and then the framework generates the HTML markup that the browser can render. An ASP.NET Web Forms page presents information to the user in any browser or client device.so yes, web forms likely does serverside rendering of the page. which means it can be slow because the server has to do (relatively speaking) a lot of work for each request and it can be slow because all the html the client wants to display has to be loaded for each page request. Modern frameworks tend to load a website as a single page application (well not all but plenty) which then needs minimal callbacks to the server.so yes I suspect in your case it is possible that switching to another framework can speed things uphowever it's not as simple as saying: you use x, that is why it is slow. it may be a resource problem, a bottleneck in the database or other resources, it could be any number of things. It's important to start measuring. look at the server cpu usage when your websites are under load. look at the memory usage. if possible, see if you can attach a profiler to you server and see where the cpu cycles and such go. However if you're a junior (this is learn programming after all) you shouldn't be doing any of these things.",josephblade,2025-04-08 21:16:51,1,learnprogramming,t3_1jubbiy,False,
mm0qxxf,"Thank you very much fireball787b, I get it now. I guess the problem boils down to how poorly optimized the pages are and the web application. Thank you very much. Even if we got 2 web apps deployed and it's unoptimized, it will literally slow down the server?",Lucky_Bell_7874,2025-04-08 12:01:29,1,learnprogramming,t1_mm0q6cm,True,
mm0rjmh,"Thank you , I guess domains and sub domains are more likely just identifiers like a house address. It really boils down to the architecture and development of the website. Thank you again, have a very nice day.",Lucky_Bell_7874,2025-04-08 12:05:42,1,learnprogramming,t1_mm0qfi3,True,
mm0nhrh,There is simply too much to know. It’s a little too much to expect to be able to understand everything or recreate things from scratch.Focus on high-level intuition and principles. For most problems you only need to have on overall understanding to solve your problem. Only start worrying about the micro details if you’re specialising in something.And remember the knowledge we have is built on hundreds of years of collective human intellect. Even the smartest of us would not go far if it weren’t for the many before them.Good luck my friend,Herb-King,2025-04-08 11:36:21,2,learnprogramming,t3_1juba7x,False,
mm1bma3,"I took a course many years ago with another grad student. He was tasked with providing some type information when linking two C object files (one of C's capabilities is to compile a program like `foo.c` into an object file called `foo.o`. There's also a `foo.h` which is a header file that other C programs can reference if they want to call functions defined in `foo.c`. However, the standard C linker which combines .o files doesn't really check the types in the header file to see if they matched).The idea was to produce a better checker prior to linking object files. Instead, the guy got fascinated with parsing challenging C structures. He didn't know how to do that. Despite that, it was a solved problem. The goal of the project was to do some kind of research project on something new.The prof. said he needed ""taste"", that is, to pick problems that need to be solved and not to spend time on problems that have been solved, even if you didn't know how to solve it.Of course, *someone* has to learn it. Some people, like you, have a need to know, even if that rabbit hole is tremendous. It probably feels like a more well-defined problem than the one you're working on? Are you currently employed as a programmer or is it still a hobby of some sort?",CodeTinkerer,2025-04-08 14:07:20,2,learnprogramming,t3_1juba7x,False,
mm0ppnq,Reason to be on reddit:slightly_smiling_face:,Shot-Calligrapher-99,2025-04-08 11:52:44,1,learnprogramming,t3_1juba7x,False,
mm2ps1m,"YOU'RE GOING TO WASTE SOO MUCH TIME doing this, ask me how I know.Better to just learn enough to do what you want to do, go back and fix it later with notes on why you're doing it a certain way ( e.g. compared to doing it another way ), because you can spend years trying to figure how all the little parts fit together.",dialbox,2025-04-08 18:12:55,1,learnprogramming,t3_1juba7x,False,
mm4xg7k,"Maybe it's weird, I don't know, or maybe everyone does it, but eventually you'll hit the bottom of the stack. Ask how I know...",zoharel,2025-04-09 01:11:57,1,learnprogramming,t3_1juba7x,False,
mm4a5ck,"Not employed as a programmer specifically, but I work in the industry. Ive been thinking lately of brushing back up on Python and getting into the data science world, because these skills could provide value to my company. Trouble is, this way of thinking always gets in my way - and then i often feel discouraged because of the knowledge others have. Its surprising that people out there still to this day graduate, and find themselves working in these lower level complex areas. The challenge would be incredible and I definitely respect them for that.I wonder if this feeling comes from a weird idea I have that unless you know how to do the foundations, the world can change you’re more likely to be irrelevant. Its more likely high level concepts and languages vanish, before the need for a compiler does",ImARedditSmurf,2025-04-08 22:57:25,1,learnprogramming,t1_mm1bma3,True,
mm7in0p,"People used to know how to fix their cars. Now, cars have computers for everything and while some basics can still be done, no one is fixing those computers. Sure, if you want to dig deep because you want to know more, that's great, but I've not had to really use it. I know the theory behind the basics, but then I don't know the practical stuff (which keeps changing) that have come from that.For example, I have taken a compiler course. I know what it basically does. But, do I know how garbage collection really works? I know some high-level details. The same with just in time compilation. I don't regret knowing it, but it doesn't help me practically day to day.",CodeTinkerer,2025-04-09 13:29:39,1,learnprogramming,t1_mm4a5ck,False,
mm0lw2l,"Since you’re doing this specifically for a job, focus first on researching the job market in your area to see which languages and stacks are in demand. Usually it’s something like C# or Java for backend, React or Angular for frontend, and a form of SQL for databases.Once you’ve picked a stack, start building a project. The idea itself doesn’t matter that much, just pick something you’d actually enjoy working on. Start small with just the basic functionalities, focus on clean code and good practices, and build on top of it over time.Good features to include:* CRUD operations* Authentication* Form handling & validation* Database integration (querying, filtering, sorting)* Responsive frontendOnce it’s done, deploy it with something like Vercel, and host the code on GitHub so you can link it directly in your resume. That way, when interviews come, you’ll have something real to talk about and that always stands out.If you really don't know what to build, just pick a random idea, maybe something you can actually use at the same time, like a job tracker app, or a blog platform.",RockstarDev2077,2025-04-08 11:23:54,3,learnprogramming,t3_1ju88qu,False,
mm2rtyw,"The flutter docs are awesome along with their YT channel, especially if you already have some programming experience.",boomer1204,2025-04-08 18:22:55,1,learnprogramming,t3_1ju85nb,False,
mm2vi1q,thank you for suggestion,StatementThis5502,2025-04-08 18:40:57,1,learnprogramming,t1_mm2rtyw,True,
mlwgl98,"I suspect that your time may be better spent early on just looking at the solution, implementing, and then going to the next problem if you are really stuck. Sure, thinking over a problem is good practice, but there is a point where the sheer amount of time spent on one problem is not worth it when you haven't built the foundations of your knowledge yet.",anime_waifu_lover69,2025-04-07 18:07:01,9,learnprogramming,t3_1jtre3w,False,
mlwhvgq,"It's hard to say. How much experience do you have solving problems? They really shouldn't call it easy, because it's not easy.",CodeTinkerer,2025-04-07 18:13:32,7,learnprogramming,t3_1jtre3w,False,
mlwdrz8,"Yeah, i started learning python earlier this year and ive been itching to practice. Created a leetcode account today and went to the 'easiest'? Idk problem, and read it...read it again and thought what the fuck.Im not sure if im still too much of a newb or if this is a bad sign of things to come.",TheBlegh,2025-04-07 17:52:59,3,learnprogramming,t3_1jtre3w,False,
mlwekj5,It's all about practice.,_jetrun,2025-04-07 17:56:53,3,learnprogramming,t3_1jtre3w,False,
mlzfqil,"The answer to that is... experience. Experienced programmers have seen all sorts of situations, and thus, recognize certain elements the problem, and thus, start with certain advantage. Interviews often don't expect you to completely solve the problem, but want to hear you ""work out"" the problem verbally. Okay, the output is a sequence of numbers... So that's the algorithm, is there a shortcut? Hmmm... Checking edge cases... (blah blah blah)https://kcwebdev.blogspot.com/2020/07/problem-solving-for-programmers.html",kschang,2025-04-08 04:32:15,2,learnprogramming,t3_1jtre3w,False,
mlwk2cv,Umm as a senior software dev who is on the hiring committees I’d say yeah you need to get FASTER. My guess is you are way overthinking the problem. A lot of those coding interviews are timed and they analyze how you think in addition to how efficient you are with the time you have. Spending hours just to think about a problem is a major red flag. Here’s a suggestion: tell your brain you have 30 mins to figure out this problem and 15 mins to code the solution…this is typically the time I give my prospective candidates. That should be PLENTY of time to get things done. If you can’t get it done in this time find the solution look at it then redo the problem with the solution you’ve already seen,alliegula,2025-04-07 18:24:44,1,learnprogramming,t3_1jtre3w,False,
mly47yl,Some easy problems on LeetCode are not so easy. I also sometimes get stuck on easy problems,Special_Lettuce_4412,2025-04-07 23:26:28,1,learnprogramming,t3_1jtre3w,False,
mlwxa0a,Can past participants give advice at least? Is it for juniors? I don't think event category easy is easy for junior. I think this is mostly for seniors?,erebrosolsin,2025-04-07 19:32:51,0,learnprogramming,t3_1jtqcu4,True,
mmxxr0z,"Well, go ahead. Have fun.",niehle,2025-04-13 19:13:00,6,learnprogramming,t3_1jyeqsy,False,
mmymvi5,"Collect some data from one source.Collect the same data from another source.Do some dashboard with the collected data.Add more data sources, more data, more dashboards.",Ormek_II,2025-04-13 21:28:57,2,learnprogramming,t3_1jyeqsy,False,
mmy0s1v,"....touche. Updated the OP with an actual question: ""My actual question is, **where and how should I begin?** I have never before actually done anything with APIs in this way.""",anus-georg,2025-04-13 19:29:23,2,learnprogramming,t1_mmxxr0z,True,
mmy5kxq,Figure out what languages you want to use then learn the API. I built a GOG database a few years ago (no longer online). I built it with HTML 5 and jQuery on the front end and PHP on the backend. I just started learning the API. There is a community site out there that tries to document the API. You can find a link on the forum I believe.,Dead-Rizky,2025-04-13 19:55:12,2,learnprogramming,t1_mmy0s1v,False,
mmy6q2m,Here you go for GOG: [GOG API Documentation — GOG-API 0.1 documentation](https://gogapidocs.readthedocs.io/en/latest/),Dead-Rizky,2025-04-13 20:01:18,2,learnprogramming,t1_mmy0s1v,False,
mmy8065,Thanks a ton!,anus-georg,2025-04-13 20:08:04,1,learnprogramming,t1_mmy6q2m,True,
mmyykpe,Why not,MisterNzo,2025-04-13 22:35:20,1,learnprogramming,t3_1jybhyu,False,
mmvhvch,"YouTube Channels:CodeBeauty – great for beginners.The Cherno – detailed, fun C++ series.freeCodeCamp – full C++ course (4+ hrs).Textbook:""Programming: Principles and Practice Using C++"" by Bjarne Stroustrup (creator of C++).Focus on: syntax, OOP, STL, pointers, memory.Code daily to reinforce concepts.",PartySignature6883,2025-04-13 10:23:36,6,learnprogramming,t3_1jy3x4l,False,
mmwgkxh,go on udemy,Major_Fang,2025-04-13 14:36:07,1,learnprogramming,t3_1jy3x4l,False,
mmyczfd,learncpp.comIs all you need,ShadowRL7666,2025-04-13 20:34:37,1,learnprogramming,t3_1jy3x4l,False,
mmvgvc8,!Remind me,Val_6843,2025-04-13 10:13:09,1,learnprogramming,t3_1jy3x4l,False,
mmwbfo8,Thanks!,BeeAggravating4072,2025-04-13 14:07:24,1,learnprogramming,t1_mmvhvch,True,
mmwc2u8,Yup! Follow Me For More Suggestions.,PartySignature6883,2025-04-13 14:11:07,1,learnprogramming,t1_mmwbfo8,False,
mmvkvp7,"I really admire that you're diving into HTML, JavaScript, CSS, and Python at 54—your passion and diverse background are definite strengths. That said, I want to be as candid as possible:Freelancing in programming typically comes after years of experience in the industry. While there's no formal barrier to entry beyond setting up a profile on a freelancing platform, this low threshold means you're competing against a vast pool of skilled coders—many with years of experience, advanced degrees, and robust portfolios filled with positive client reviews. Back in the mid-2010s, there was a surplus of tech needs, and companies were more willing to take on individuals with bootcamp training or certifications in lieu of real experience because the talent pool was scarce. In today's market, the situation has reversed—tech is high-paying and attractive, leading to a surplus of highly experienced, often laid-off programmers. Most companies have their pick of talent, whether hiring full-time employees or freelancers, so they have little incentive to take a chance on entry-level coders or invest time and money into training someone without a proven track record. It's not impossible by any means, but it will take several people willing to ""give you a chance."" Until you build up those client experience reviews, finding freelance gigs will be especially challenging. It's the classic chicken-and-egg scenario: you need a job to gain experience, but you need experience to get the job.The alternative—landing an entry-level programmer role remotely—is almost completely out of the picture. Remote positions nowadays are typically reserved for those who already have a strong background because the market for remote roles is fiercely competitive. The COVID era, where remote work was the norm, is rapidly fading; everyone wants to work from home, but few get to. In many parts of the world, especially in regions like the U.S. (at least where I'm writing), remote experienced freelance or full-time programmers are still a thing—but entry-level remote roles are virtually non-existent. Even on-site roles face fierce competition. I'm not sure how things shake out in places like Albania or wider Europe, but the trend is similar: only highly experienced folks, often bolstered by a flood of laid-off talent, get those remote opportunities.On top of that, generative AI tools like ChatGPT and GitHub Copilot are changing the game. These tools can handle many of the routine tasks that junior developers used to do—completing boilerplate code and similar work much faster than a human. As a result, the real value in programming today isn't just about writing code; it's about leveraging it to solve complex, real-world problems. The true edge lies in depth and creativity, where your ability to draw on years of industry-specific experience can help you harness generative AI efficiently—something AI by itself can't do. This shift leaves even less room for entry-level programmers, as companies lean on the efficiency of AI and the expertise of veterans.My advice? Keep learning the basics and enjoy the process, but once you have a solid foundation, jump into advanced tools like Google Gemini Canvas. This isn't just about using fancy new software—it's a reality check that shows how far generative AI has come and how it can outperform entry-level folks on routine tasks. It also reminds you that real value comes from using code to solve meaningful problems, something that only someone with experience and creative problem-solving skills can do. In other words, don't just aim to be a freelance coder; consider positioning yourself as a consultant who can merge your decades of industry expertise with your growing tech skills to solve niche, real-world challenges.Bottom line: You haven't missed the boat yet, but today's boat is more like a high-speed ferry crammed with highly experienced, AI-enhanced pros. Your journey will be challenging, but by being realistic and strategic—focusing on niche projects, learning the basics, and quickly adopting advanced AI tools—you can carve out your own path in this highly competitive, ever-changing market.Good luck, and keep enjoying the learning process!",mintplantdaddy,2025-04-13 10:54:15,6,learnprogramming,t3_1jy3gap,False,
mmwi771,"Thanks everyone for the feedback. I don't know where this will lead, it all started as a way to produce my own website, but that's the way of it, right? I appreciate the reality check, and regardless, i will continue learning, its web development for now, but data analytics is something I do find fascinating. I've been a lurker here for a few months getting tips passively and learning from you all. Great community, Happy coding everyone.",Devious_Volpe,2025-04-13 14:44:50,2,learnprogramming,t3_1jy3gap,True,
mmvb56x,"Age isn't the issue here. With the exception of a degree, certifications don't really count for much in the eyes of employers. Some specific ones may look good in addition to a degree but not as a substitute.Regarding freelancing, put yourself in an employer's position. Would you trust a project to someone with no relevant experience or qualifications? Some people might but they're going to be bad customers.If you want to get into the industry you can by all means get a degree and start as a junior developer, but this isn't going to be a quick way to make money.",ConfidentCollege5653,2025-04-13 09:10:55,2,learnprogramming,t3_1jy3gap,False,
mmvv0ac,"Data analytics is not the same as what you are doing (development) these are 2 distinct fields and jobs. But what I can say is that freelancing in IT requires related work experience , and very few junior development jobs are fully remote (in west europe in my country it would be 3 days remote majority of IT jobs)But to break into technology you probably need a degree , we don't know the jobmarket in Albania so it's also important to research that.",Wingedchestnut,2025-04-13 12:20:42,1,learnprogramming,t3_1jy3gap,False,
mmw5g98,"The best thing you can do is make some contacts and network a bit while you learn. I suspect that the reality is things may be challenging if you're trying to get a first jr dev role. In theory they should not be - age should not matter - but the world is as the world is.Maybe look for some Meetup groups, join some hackathons, and otherwise make an effort to speak to people and get a bit of a network going. That will vastly increase your chance of finding some paid work down the line.",Naetharu,2025-04-13 13:32:40,1,learnprogramming,t3_1jy3gap,False,
mmvbaqr,"I suggest researching average pay for entry level in your country, and how long does it take to find the first job. Then you decide if that is what you want. I won't say it's impossible though, sometimes there are opportunities that don't work for others but work for you. I personally, when interview people, don't care about their age, and believe sometimes older candidates have more wisdom that might be helpful",imihnevich,2025-04-13 09:12:37,0,learnprogramming,t3_1jy3gap,False,
mmvf4oz,"thanks, these are all points I've been considering and I agree that most clients would not want to hand a project to someone with my background. I appreciate your candor.",Devious_Volpe,2025-04-13 09:54:37,2,learnprogramming,t1_mmvb56x,True,
mmuu3gw,"Can you clarify if you mean you want to build any of those ""from scratch"", like learn to parse one format and write another?Or do you want to use existing libraries to read one format and write another?JPG to PNG, using existing JPG and PNG libraries, should be relatively easy. Just look and see if there are libraries to read JPG files and write PNG files for Go - there almost certainly are. Hook them up, try it out and debug.Word to PDF is a fair bit harder if you don't care about formatting, but doable. If you want it to be accurate, that's going to take a team of 10 people multiple years.",dmazzoni,2025-04-13 06:13:58,5,learnprogramming,t3_1jy10f2,False,
mmuuk8o,Isn't Aspose open source?,AlsoInteresting,2025-04-13 06:18:33,1,learnprogramming,t3_1jy10f2,False,
mmv525a,$ a2ping [path/to/image.ext] [path/to/output.pdf] The path/to/output is optional.,doxx-o-matic,2025-04-13 08:05:03,1,learnprogramming,t3_1jy10f2,False,
mmyylyo,"Why don't you use what already exists?Pandoc or ImageMagic (""convert"" command in this case) for example?",divad1196,2025-04-13 22:35:32,1,learnprogramming,t3_1jy10f2,False,
mmuvhih,Yeah I would like to build them from scratch like build libraries that would parse one format and write another.,RoyalChallengers,2025-04-13 06:27:41,1,learnprogramming,t1_mmuu3gw,True,
mmuwlhi,Then you'll need to go read the specifications of each format (Google is your friend) to understand what the file structure is like and what it means. But just to let you know that this is a *huge* undertaking. PDF and Word alone are gigantic specs. It's why people just use libraries for them.,plastikmissile,2025-04-13 06:38:42,9,learnprogramming,t1_mmuvhih,False,
mmuvw58,I think you dont know what that means. No offense.,os_nesty,2025-04-13 06:31:41,3,learnprogramming,t1_mmuvhih,False,
mmw2qko,"You may need to learn C or at least understand it, you would need to write decoders/encoders for each that's a crazy amount of work, there's likley not even native GO implementations for each yet.",ndreamer,2025-04-13 13:15:26,1,learnprogramming,t1_mmuvhih,False,
mmuwoji,Ohh okay. First I'll make one for jpg to pdf.,RoyalChallengers,2025-04-13 06:39:32,1,learnprogramming,t1_mmuwlhi,True,
mmuw4zi,Then I'll learn it. No problem.,RoyalChallengers,2025-04-13 06:34:07,1,learnprogramming,t1_mmuvw58,True,
mmotn7t,"Hi there!Not a recruiter or a hiring manager, just a senior Java Dev.Something that would make a junior stand out in my eyes is if they deeply understood how their main programming language works, and how to use it idiomatically.For example, how classes are loaded, how does the garbage collector works, how the multi threading paradigm works, etc.And if they had a strong grasp of version control i.e. Git, GitHub, branching strategies, etc.Also if the had a strong grasp of containers i.e. Docker, Docker Compose.",EasyLowHangingFruit,2025-04-12 05:30:37,3,learnprogramming,t3_1jx4ycj,False,
mmqkdh7,"""they deeply understood how their main programming language works ""A junior?""Also if the had a strong grasp of containers i.e. Docker, Docker Compose.  ""A junior?""how classes are loaded, how does the garbage collector works, how the multi threading paradigm works, etc.""A junior? Dude. Sure that would be impressing, but that aint junior imo.",Illustrious_Fall4887,2025-04-12 14:27:18,0,learnprogramming,t1_mmotn7t,False,
mmr0uh1,"Yeah, of course!Entry level and Junior aren't the same. A Junior has maybe 1.5 to 2 YOE.A Junior is basically a PR Machine (some people use the term coding monkey which I very much dislike).What I expect from them is to basically output a lot of code of questionable quality, from which upon feedback, they will learn and improve their quality.Knowing how a language works is not that complicated really, and it's a very foundational skill. I don't want certification like level of knowledge, but I want some dexterity.For example, if it's a Java position I expect them to know:1. What's the string pool.2. String vs StringBuilder.3. A general understanding of how the GC categorizes tags objects it'll reap.4. In which order the elements of a class are invoked and initialized 5. What's a thread and a thread pool.6. How the collections framework works and its main interfaces.",EasyLowHangingFruit,2025-04-12 15:55:36,1,learnprogramming,t1_mmqkdh7,False,
mmr234d,"We have very different views for junior. ""What I expect from them is to basically output a lot of code of questionable quality, from which upon feedback, they will learn and improve their quality.  ""This is a junior yes, but this has nothing to do with the rest you listed. Excpept for ""Entry level and Junior aren't the same. A Junior has maybe 1.5 to 2 YOE.""This is true.For ex:""A general understanding of how the GC categorizes tags objects it'll reap ""Wtf junior does with this info? The point of gc is that it is somewhat automatic.",Illustrious_Fall4887,2025-04-12 16:02:02,1,learnprogramming,t1_mmr0uh1,False,
mmhonjb,"All software is portable with enough effort, and that doesn't look too complicated.There will absolutely be bulk renamer apps for Windows, Google will reveal them.If you want to build something like this yourself, it's a great learning project, the fact that it already exists certainly shouldn't put you off.",ToThePillory,2025-04-11 01:23:35,1,learnprogramming,t3_1jwe37g,False,
mmhpo55,"Looks like it's build using Qt, which is a cross-platform GUI framework.So yeah, it'd probably be relatively easy to build for Windows.The first step would be to get and install Qt, maybe try to build a sample hello world project.",dmazzoni,2025-04-11 01:29:54,1,learnprogramming,t3_1jwe37g,False,
mmk8e9z,"KDE libraries are based on Qt which definitely builds and works on Windows. But KDE adds on additional libraries which you may have to build as well.In principle, once you have the Qt and KDE libraries built in a particular environment (whether it be Windows or Linux), then most simple apps like this should build without problems, unless they make use of system-specific features (that's always possible, but the whole point of having KDE and Qt is mostly to abstract most of the system-specific stuff away, so I imagine most app devs would have just used those functions rather than bypassing them to go to do something Linuxy-specific).As a specific example, I glanced in the code you linked to, and the header file krenamefile.h makes reference to which is probably a KDE-specific file dialog box. Now, if it turns out that KDE didn't make that thing cross-platform enough to work on Windows, then perhaps this would be a point of incompatibility, for example.",chaotic_thought,2025-04-11 13:43:20,1,learnprogramming,t3_1jwe37g,False,
mmhpduf,"It doesn't! I'm just wondering if it'll be hard or something. I just don't know if it'll be simple. I don't know if I can just run the make file and try making it into an executable file. Or, do I need to add something like .NET stuff or something like that.",RedLintu16,2025-04-11 01:28:07,1,learnprogramming,t1_mmhonjb,True,
mmhpxfi,"Makes sense. Do you think I could build it for Windows on Linux? If so, do you think I can install the Qt framework on Linux to do this stuff?",RedLintu16,2025-04-11 01:31:30,1,learnprogramming,t1_mmhpo55,True,
mmhsrdh,"Easy for me, hard for you :)Only joking, but all programming is hard to begin with.You can use .NET if you want, or many other options. Personally for Windows, I'd use .NET with C# and WPF.",ToThePillory,2025-04-11 01:49:09,1,learnprogramming,t1_mmhpduf,False,
mmhselx,"Personally, I would recommend building it on Windows, cross-compilation makes things more difficult than they need to be.",Grouchy_Local_4213,2025-04-11 01:46:55,1,learnprogramming,t1_mmhpxfi,False,
mmi5u53,"It's not impossible but it's much more difficult.Even if you get everything set up, think about how much longer the cycle time will be trying to geti it to work: compile it, then copy to Windows, then try it out. It doesn't work. Switch back to Linux, fix something, then go back.If you just build it on Windows from the start, then when you get an error you can just fix it and try again.",dmazzoni,2025-04-11 03:14:20,1,learnprogramming,t1_mmhpxfi,False,
mmht9bq,I get that. Someone else in the comments section here said that they used Qt for this. So maybe that makes it easier?,RedLintu16,2025-04-11 01:52:14,1,learnprogramming,t1_mmhsrdh,True,
mmhsjwm,That's fair. I guess I was just trying to do it on Linux if possible.,RedLintu16,2025-04-11 01:47:51,1,learnprogramming,t1_mmhselx,True,
mmhe6vv,"There are tons of free resources to get started. Just Google it. You can also just think of a simple project and just begin researching how to implement it. You can also buy books or look into Udemy and many other sources for training courses, etc. Just jump in and get started.",Malthammer,2025-04-11 00:19:02,2,learnprogramming,t3_1jwct2z,False,
mmhh1ek,"From scratch? The odin project would be what I do from scratch. Though I personally just use windows primarily instead of wsl/or linux.The job market is absolutely fucked in North America. If your goal is a job then you should do some serious research into how difficult it is to get into a web dev entry level job in Germany, TODAY. Not 10 years ago, 4 years ago.Maybe Germany has a better job market?",notislant,2025-04-11 00:36:30,2,learnprogramming,t3_1jwct2z,False,
mmiq9l9,Thank you,Outrageous_Nail_3031,2025-04-11 06:02:05,1,learnprogramming,t1_mmhe6vv,True,
mma7jyg,"The whole point of Docker is that if you're using it correctly, you can take the exact same image you built for local testing and run it in production.So, push your image to a registry, pull it on your server, and run it (with appropriate environment variables, storage volumes, port forwarding, etc.)If the idea logging into a Linux server and typing ""docker pull; docker run"" isn't appealing to you, there are other tools that can manage containers for you (Kubernetes, ECS, Google Cloud Run, etc.) but they all come with their own extra quirks and complexities.",teraflop,2025-04-09 21:25:46,5,learnprogramming,t3_1jvh6mz,False,
mmacb6r,"I'm in the process of building my first firebase web app, but what you are talking about I think is currently what I do (though mine might be slightly more complicated).I am using AWS lightsail which is basically just an ec2 instance from my understanding. When I set it up I used a basic Ubuntu setup. So my deployment is just like deploying to a Linux machine.I have a static website, a couple of apps, and I am learning Jenkins, so I have a few subdomains. Each subdomain has it's own docker container and I use nginx as a reverse proxy. I use a docker-compose file to manage my containers. My static site doesn't use a docker image, just a location on my server, but my web apps have docker images that are hosted on ghcr.io (GitHub container registry). The docker-compose file pulls the image for those apps and starts the container with the configs I need.I think a lot of this is separate from programming, but I think they are useful skills to have (and it has worked out for me as learning this info has helped me transition to a swe role from a non-swe position).",Kit_Adams,2025-04-09 21:51:01,2,learnprogramming,t3_1jvh6mz,False,
mmafxyu,"Take a look at Google Cloud Run (which is where we deploy many of our production applications), along with [fly.io](http://fly.io) and railway.com. That should be more than enough to get started, and can go up from there",sevenadrian,2025-04-09 22:11:00,2,learnprogramming,t3_1jvh6mz,False,
mmacmep,"For the first option, do we need to redeploy every time the codebase is updated? Or setup CI/CD linking with github or something?",novicepersonN90,2025-04-09 21:52:43,1,learnprogramming,t1_mma7jyg,True,
mmapucg,"ok, i created ec2 instance. and found how to run the app on this. But, how do you handle the codebse updates and re-deployment process that protects ongoing data transfer?",novicepersonN90,2025-04-09 23:07:38,1,learnprogramming,t1_mmacb6r,True,
mmaf48g,"Entirely up to you, based on whether you want deployment to be automatic or manual. That's another example of how you can trade off simplicity against convenience. Automated deploys can save you a bit of time, and can make things more reproducible and auditable. But then the deployment workflow and configuration are extra things that you have to maintain.",teraflop,2025-04-09 22:06:27,2,learnprogramming,t1_mmacmep,False,
mmas4q3,So for my apps that I create as docker images I am currently using GitHub actions for continuous deployment.Basically it looks like this:1) I make changes to my code and commit those changes2) Push those commits to GitHub3) I have a GitHub Action that does the following on a push to main: - Builds the docker image - pushes the image to ghcr - logs into my AWS instance - pulls the new docker image to my AWS instance - downs the current containers - starts the updates containers,Kit_Adams,2025-04-09 23:20:48,2,learnprogramming,t1_mmapucg,False,
mm28gd9,"You’ve been taught getters and setters but not constructors? Do you know what an instance of an object is?An instance of an object can have properties. You can “get” them (return the value) or “set” them (modify the value). Say i instantiate a cat object. I want to know it’s fur color, so i use the getter and it returns brown. If i want to set it to something else, i can use the setter.Constructors are a way to instantiate an object with or without predetermined properties. Instead of making a cat, and then manually setting the fur color after its instantiated, I can create a cat object and set the fur color in one go. Cat cat_1 = new Cat() < no parameter constructorCat cat_2 = new Cat(eyecolor = brown) < 1 parameter constructor Does that make sense?",deMiauri,2025-04-08 16:51:34,21,learnprogramming,t3_1jui7uw,False,
mm29vm4,"It’s just a method that is called when you create a new instance of a class. You can have multiple constructors if you want, or one, or noneGenerally you use it to set up the class with everything it’s going to need to be used (like passing in services) or you’ll use it to force someone to add data that’s required.",CodeToManagement,2025-04-08 16:58:20,4,learnprogramming,t3_1jui7uw,False,
mm2yr3a,"You have probably seen a variable like: int a; Where it doesn't have a defined value, we call these uninitialized variables. For simple primitive types this is easy to fix you just do: int a = 0; Ok now what if I wanted to make a class called color that holds an rgb value, now what if I had: Color c; This is an uninitialized variable of type color, but if you tried to do anything to it like print it out you would get a compile time error, ok so we have an uninitialized color variable what do we need to do? We need to give it a value, but we can't just do: Color c = r:254 g:50 b:10; we need to first construct a color object using its constructor: Color c = new Color(); lets assume that we have the following constructor for color: Color(){ this.r = 0; this.g = 0; this.b = 0; } Now we can initialize a color to black. But what if we wanted to set the color in the constructor? We could just make a new constructor with the call signature of: Color(int r, int g, int b) Where it sets the members in one line instead of setting them to black in the default constructor and then changing them with getters and setters. Constructors are kind of basic in java, in other languages like c or c++ a constructor can be paired with a destructor and then you can employ a programming technique called RAII which stands for resource acquisition is initialization. But you can also do this with java using the try with resources paradigm.",bestjakeisbest,2025-04-08 18:56:57,5,learnprogramming,t3_1jui7uw,False,
mm28bwo,Good summary here: [https://www.digitalocean.com/community/tutorials/constructor-in-java](https://www.digitalocean.com/community/tutorials/constructor-in-java) Basically just a specialized method which helps create the instance of the class.,alytle,2025-04-08 16:50:59,1,learnprogramming,t3_1jui7uw,False,
mm2orgj,"A constructor is a method which is called when creating an object.For example when you write```javaMyClass myObject = new MyClass();```a constructor is called.The most basic constructor has an empty body. It's a public method with no return type and the name of the class. So it looks like this```javapublic MyClass(){}```This constructor is included automatically, if you don't write your own. If you do write your own it's replaced.But a constructor can also take arguments. Usually you're using it to initialize variables or for calling methods which are required.```javapublic MyClass(String mystring){this.mystring = mystring;requiredMethod();}```This code assumes that a private variable called ""mystring"" exists.Creating an object of this class would look like this```javaString mystring = ""my string"";MyClass myObject = new MyClass(mystring);```And like any other method constructors can also be overloaded. That means you can add multiple constructors and when creating the object the one with the matching datatypes is used.You can also put whatever code you want into a constructor, but you should stick to initializations and method calls.",pandafriend42,2025-04-08 18:08:02,1,learnprogramming,t3_1jui7uw,False,
mm4mvak,"Every time you create an object, you are calling a constructor. Like, when you write `Point point = new Point()` the `Point()` is the constructor call.You can only call constructors that actually exist for that class. If you don't write any constructors for a class, it will have a default empty constructor equivalent to public Point() { }However, if you do explicitly define any constructors, the default one won't exist.For example, if I write a constructor like this public Point(double x, double y) { this.x = x; this.y = y; }and it's the only constructor I write for the class, then this will be the only way to create instances of Point. You won't be able to call `new Point()`, only `new Point(0, 0)`. You can use this, for example, to guarantee that you can't create instances of Point without providing values. There are also more niche implications of this. For example, if you make make the only constructor private, it will mean that code outside of this class can't create instances because it can't access the constructor. Basically constructors serve two main purposes, specifying how new instances of a class can be created, and more commonly, simply running some logic when a new object is created.",Dissentient,2025-04-09 00:09:41,1,learnprogramming,t3_1jui7uw,False,
mm5sitr,Simply put the constructor initialises the object being created (typically using values that you supply as parameters) that you can later get or change (via a settler or other methods if the object is muteable).,gm310509,2025-04-09 04:33:24,1,learnprogramming,t3_1jui7uw,False,
mm28gfn,A class describes what a thing looks like. The constructor makes the thing.Class: There is such a thing as a linked listConstructor: I want one,lurgi,2025-04-08 16:51:35,1,learnprogramming,t3_1jui7uw,False,
mm293yp,"So if im reading this right constructors allow what getters and setters do but im able to manually create and set whatever im creating or setting? So if i had a constructor vehicle. I would be able to set the make, model, and color all in one go?",mmhale90,2025-04-08 16:54:42,3,learnprogramming,t1_mm28gd9,True,
mm3g4vq,"Just to nitpick: it's not a method. It's extremely similar to a method, but per the Java spec, it is not one. There are some differences between constructors and methods. For example, constructors have no return type. And while methods are either static or have a callee you can reference with ""this,"" constructors have no callee but do have a valid ""this"" reference.I think it's very reasonable to describe it as a method to someone who's learning, but I also think that can be confusing because when we explain methods, we describe return types, but constructors don't have them.",captainAwesomePants,2025-04-08 20:21:34,3,learnprogramming,t1_mm29vm4,False,
mlz0orx,"Make sure the contract is VERY clear. The first couple of clients I had I was more laid back, but then scope creep comes in, you think you are done but the client doesn't and the client always wins if you wanna keep freelancing. Make sure everything you agree to has no wiggle room and you agree what ""complete"" or ""done"" is",boomer1204,2025-04-08 02:44:03,10,learnprogramming,t3_1ju37av,False,
mlzeebs,"Indian client? DEFINE THE SCOPE AS THOROUGHLY AS YOU CAN!Mention that only upto 2\~3 revisions are free then you will start charging for revisions. Scope creep is the worst part about indian clients.And interaction wise- just be normal and dont think too much, define the requirements - timeline, what you will need from them (Testing, feedbacks, etc) and yea you should be good to go!Also if possible just make a normal invoice from something like pandadocs with payment terms on it (i.e when you want the payment - how you want it, full or in partial amounts) and also send it to him so theres an official record of that deal",ur_average_nerd,2025-04-08 04:21:21,11,learnprogramming,t3_1ju37av,False,
mm0f2j8,"Don't do any work until you have a contract signed that goes over the scope of the work (what you will do), how you will get paid (half after contract signing? Payments based on milestones? ) and expected time.",darthirule,2025-04-08 10:25:31,5,learnprogramming,t3_1ju37av,False,
mlz721e,This whole tipping thing has gotten out of control.,wiriux,2025-04-08 03:26:39,7,learnprogramming,t3_1ju37av,False,
mlzunby,"Always think that the clients don't know what they actually want. So, communicate them frequently, and ask them if you don't know. Don't guess.",Reasonable-Moose9882,2025-04-08 06:47:13,1,learnprogramming,t3_1ju37av,False,
mlz72yz,"Can u suggest genuine websites from I get freelance work as a freshman, also any tips if u want",imo_dez,2025-04-08 03:26:50,2,learnprogramming,t1_mlz0orx,False,
mlzs9aa,"I'm sorry bro, my first language is Spanish :loudly_crying_face:",eljuan_93,2025-04-08 06:25:19,3,learnprogramming,t1_mlz721e,True,
mlz7fmh,"Just the standard ones. Freelancer, upwork and the like",boomer1204,2025-04-08 03:29:19,0,learnprogramming,t1_mlz72yz,False,
mlvaxd7,"The normal ""gold standard"" for class/method design is to use vocabulary that the 'domain expert' would understand.In this case, the domain expert is the UI/UX designer. Does he/she use terms like ""not no""?? I've never heard of that.For your ""is\_yes"" and ""is\_no"" situation, I think you want you are actually describing is a yes/no dialog box, but that the default is ""yes"" or ""no"" respectively. As for the return value, that is up to you (the domain expert would not care in that case). But the idea of a default button being selected (as either 'yes' or 'no') is definitely in the domain of the UI/UX.For example, when you click ""close"" and the document is not yet saved, you may get a box like ""do you want to save your changes - yes/no"" and the default should definitely be ""yes"" for that.On the other hand, if you are about to perform an action which is hard/impossible to undo (like ""empty recycle bin""), then for that the default should be ""no"". I.e. it should be hard to accidentally do it.>`is_si` – amazing, short, clever, my preferred option – but as an English speaker, would you understand the `si`>Most people in the U.S. know what ""si"" means from Spanish, but the confusing part here, is why you would use this instead of ""yes"" (or in addition). Like, do you have all of ""yes"", ""no"", and ""si"" in your API? If so, why? That would be the confusing part for me as a programmer using your API. If you have a good reason for that, then OK. If you are doing it just because ""si"" is 2 characters (1 character shorter than ""yes""), then that's not a good reason.OTOH if you are using it for localization purposes (e.g. in standard French, ""si"" is used only for responding ""no/yes"" to negative questions, and perhaps in other languages too, like in Dutch/German how toch/doch is used to contradict), then that might be interesting or important. So if you have a compelling reason to put this in the API (e.g. to help localization), then that would be OK but you should make it intuitive for the programmer and explain it in the docs or in the header or wherever the programmer normally reads up on how to use your code.",chaotic_thought,2025-04-07 14:35:32,2,learnprogramming,t3_1jtktv0,False,
mlwualj,Why not just `confirm`?,throwaway6560192,2025-04-07 19:17:17,1,learnprogramming,t3_1jtktv0,False,
mlvmwxq,"Thanks a lot for the elaborate response!Thanks for saying \`is\_si\` would be confusing for you. I really meant \`si\` for a positive response to negative questions from french.I wondered whether it is a known word in the English world, similarly to 'déjà vu' or 'cliché'. I hoped English speaking person would know \`si\` to be yes-to-no (as in French) or at least to be yes (as in Spanish), this would be sufficient. Nothing to do with localisation. But as you say it's confusing, this might not be a good idea.",the-e2rd,2025-04-07 15:36:40,1,learnprogramming,t1_mlvaxd7,True,
mm1drma,"I wanted it to conform with the custom that \`is\_\` returns bool. But \`confirm\` might be the way to go, too! What about the \`choice\` thing? Would the triad \`.select()\` (instead of \`.choice()\`), \`Select(value, ...)\` (instead of \`Choices(value, ...)\`) and \`SelectTag\` instead of \`EnumTag\` sound you well?",the-e2rd,2025-04-08 14:18:40,1,learnprogramming,t1_mlwualj,True,
mlzvs5v,"In APIs it's best to say keep to the ""domain standard"" language as much as possible. Yes, cliché is a commonly used word in the anglosphere, as it were, in conversations. But ""conversations"" are different from ""domain standard"" language -- for GUIs I would recommend looking at a book about this and see what different GUI toolkits call things.Some terms are just like they are -- For example there is the ""radio button"" in GUIs which derives from an old type of pushbuttons on radios where pressing one button pops out all the other ones. As far as I know, this term is no longer used in modern English, but the term ""radiobutton"" or ""radio button"" will probably persist for a long time in the GUI domain standard language to describe this kind of button where one choice is exclusive among a set.For this situation I might even label them something super-technical like ""acknowledge"" and ""reject"" if I wanted to 'divorce myself' from the idea of standard words like yes/no in the API. That is more wordy, but it may make it clearer that ""acknowledge"" could be another word (like ""yes"" or ""oui"" or ""si"" or whatever is appropriate for the locale/situation).For dialog boxes that ask ""yes"" or ""no"", or ""yes, no or cancel"" I would personally just call them ""yes-no-dialogs"" or ""yes-no-cancel-dialogs"" or ""confirmation-dialogs"" if you needn't be specific about the difference between yes/no and yes/no/cancel, and the idea of the ""default"" button should be some kind of parameter to the class constructor, for example.",chaotic_thought,2025-04-08 06:58:04,1,learnprogramming,t1_mlvmwxq,False,
mlzw4ij,"In APIs it's best to say keep to the ""domain standard"" language as much as possible. For GUIs I would recommend looking at a book about this and see what different GUI toolkits call things.Some terms are just like they are for historical reasons -- For example there is the ""radio button"" in GUIs which derives from an old type of pushbuttons on radios where pressing one button pops out all the other ones. As far as I know, this term is no longer used in modern English, but the term ""radiobutton"" or ""radio button"" will probably persist for a long time in the GUI domain standard language to describe this kind of button where one choice is exclusive among a set.For dialog boxes that ask ""yes"" or ""no"", or ""yes, no or cancel"" I would personally just call them ""yes-no-dialogs"" or ""yes-no-cancel-dialogs"" or ""confirmation-dialogs"" if you needn't be specific about the difference between yes/no and yes/no/cancel, and the idea of the ""default"" button should be some kind of parameter to the class constructor, for example.",chaotic_thought,2025-04-08 07:01:21,1,learnprogramming,t1_mlvmwxq,False,
mm1fyv6,"That very interesting with the radio button! I am thankful about the commonly used words vs domain standard explanation.What about the \`.confirm(text, default\_yes=True/False, cancel=False)\` method name then? The usage \`.confirm(""text"", False)\` instead of the yes-no-dialog having the default focus on No seems pretty intuitive to me!",the-e2rd,2025-04-08 14:30:09,1,learnprogramming,t1_mlzvs5v,True,
mmc82nq,"I don't know in which language you're programming, but for this situation, using an enum would be better. I.e. ...def blah\_method(default=BUTTON\_YES) or def blah\_method2(default=BUTTON\_CANCEL).Name the enums according to your programming language's rules/conventions, but having a bool for this would be inferior than the enum. Even a ""stringy"" option would be better (e.g. default='yes') than bools for this, but we should avoid this kind of ""stringy"" option in favor of Enumerated Types when they are available, to clarify the API and to avoid typos (e.g. what if you accidentally type ""Yes"" to mean the yes-button, but your code expects only ""yes"" in all lowercase).",chaotic_thought,2025-04-10 04:51:53,1,learnprogramming,t1_mm1fyv6,False,
mmcwxiv,"The language is Python. I agree with the strings, apart from typos, string is something that can hardly be auto-suggested by the IDE. I think too enums are much better but I didn't want to impose further contants so that the user does not have to import anything. Why do you think the default bools are inferior to strings?",the-e2rd,2025-04-10 09:01:48,1,learnprogramming,t1_mmc82nq,True,
mluk952,"It might. You can easily have more than one partition on a given server. Or you can separate them out if you need to. Chances are you don't need to if you're asking this question, as your projects are unlikely to get to a size and scale that this matters any time soon.",Naetharu,2025-04-07 11:49:10,3,learnprogramming,t3_1jtj5un,False,
mluo7nd,"the fast answer is no. partitioning data is used to lower the memory usage, time and money. more in a sense like you have a storage(your db server) and every dataset is a box, so when you need august register you take that whole box with 15 years of data, put it on the table and select the folder you need, the you put the whole box in its original place (you can see how much muscle you need to do this and how will hurt you back). when you partition the data, inside the dataset box, there are asmaller box, lets say one for every year, so you get only the box with the year you need. (a lot less back pain here and even a skinny teenager can lift the small box).Maybe makes sense use different server to store the data, something like we rarely use data after 10 years so we should move it to another storage(this is usually called data cooling and is another thing) or maybe instead of using a single giant storage, the matrix hq thinks its better to split the data by country and send the box to each country for faster and simplier operations sinse rarely countries need data from storages in another country.Also don't confuse db server with data lake.cloud archtecture like databricks take lots of db servers and shows them in a single data lake, so maybe what you think as partitioned data is actually distincts db servers from different sectors(it, marketing, accounts) from the same company",leitondelamuerte,2025-04-07 12:18:34,1,learnprogramming,t3_1jtj5un,False,
mlul9ih,"It is a just a theoretical question for removing confusion.So if I have partitioned on userid ( odd go to one server, even to another), then I am configuring and maintaining two databases?Ensuring replication of both?",lllrnr101,2025-04-07 11:56:45,1,learnprogramming,t1_mluk952,True,
mluonzh,so in case of split by country....i will have as many database server processes as many countries. and i will be responsible for their maintenance/replication etc?,lllrnr101,2025-04-07 12:21:46,1,learnprogramming,t1_mluo7nd,True,
mlvlk2u,"Yes, that's correct. You might have 20 or even 200 databases.Generally the assumption is that if you got to that point, you've got more data, or more traffic, than a single database can handle.",dmazzoni,2025-04-07 15:29:40,1,learnprogramming,t1_mlul9ih,False,
mlvr2ec,"Also if you split by country, there is no direct need to replicate.",Ormek_II,2025-04-07 15:57:57,1,learnprogramming,t1_mluonzh,False,
mluq2hu,"1 - depends of the architecture, like, usa is a big country with lots of costumers so you can have even more than a server(east coast, west coast, great lakes), brazil will have one(são paulo), the whole african continent 2 (north africa and south africa), it really depens of what is cheaper and aceptable, usa has a great number of consumers, the deliver ysystem is fast and people are anoying complaing about everything so processing a shipment data must be fast, in brazil mail delivery systems are a mess, so even if you process real quick a shipment data, it will still get stuck in mail service so you don't need to worry to much about it.2 - if you are asking then no, this is decided by the big heads of the company and whole teams are responsible for this, some companies have dozen of thousands of employes working on this worldwide.In your case mostly will be something like, in this db, partitione the users data by birth year, name's first letters or id's first numbers.",leitondelamuerte,2025-04-07 12:31:38,0,learnprogramming,t1_mluonzh,False,
mltxmdn,"if the way improves your coding , then it is a good way.if not , it is a bad way.",ninhaomah,2025-04-07 08:05:50,2,learnprogramming,t3_1jtfyep,False,
mlty4y6,"You can ask the AI ​​to explain how to solve the problem instead of asking for the solution. However, I think that a good video tutorial with a demonstration is much more powerful to learn, it will all depend on your preferences.",Plane_Turn_6474,2025-04-07 08:11:35,2,learnprogramming,t3_1jtfyep,False,
mltz7e7,"Allow me to paraphrase; you seem to be using the following procedure when you get stuck:1. Try to get unstuck by looking at W3Schools (I.e. the primary source you are learning from; for a C++ programmer this could be [cppreference.com](http://cppreference.com), for example, instead).2. Try to get unstuck by Googling in general.3. Try to get unstuck by posting a question on Reddit.4. Try to get unstuck by asking AI.So, this list is not bad on its face, but I think you're missing a ""step 0"" that should come first (or ""zeroth"" in programmer-speak) -- that is, to try to get unstuck by using your own brain ""first of all"" and using what you already know in your brain and with your 'hands' (e.g. by launching your own debugger or using your own preferred debugging techniques like adding assert's, printf-debugging, etc.). That is, try to first ""do it yourself"" for at least a good 5-10 minutes, or some amount that you determine. If things get frustrating, then you'll feel when it's time to throw in the towel. But if you develop the habit of ""throwing in the towel"" immediately when you encounter a gotcha, and if you're always rushing off somewhere else all the time, then to me this sounds like it's going to weaken your mental muscles of problem solving.By the way, solving the problem yourself (during the imaginary ""step 0"" of the above), this is the part that feels pretty good to our brains. It's the part that makes programming 'addictive' in a positive way. Sure, maybe your solution won't be as nice or pretty as what you found on the Top Result of Google/StackOverflow/Reddit/whatever; it won't have all the nice textbook-style comments that AI-generated code tends to have (personally I hate those, and usually ask AI-generators to exclude them) but 99% of the time in real programming, you don't \*need\* the ""prettiest"" solution, you just need a solution that works.So, let's assume for a moment that you can most likely find a solution yourself (a skill which you'll get better at if you practice), and let's assume that your solution doesn't need to be ""top-StackOverflow-post-worthy"" in terms of beauty and super-correctness (99% of the time, real solutions in the real world don't need to be that). Then it seems to me that it behooves us as programmers to spend most of our initial effort in the ""step 0"" part of the above problem-solving/issue-resolution 'algorithm'. Your brain will feel better for it.",chaotic_thought,2025-04-07 08:23:42,2,learnprogramming,t3_1jtfyep,False,
mltxlh6,"or you can also use AI to dumb down the approach of the problem in bits so you can think for yourself and try the problem. If still you can't code. Then try more easier problems related to your problem. Fir example, you don't how to fetch data by values from dictionary, so try to understand or solve first, then jump onto the main problem. But don't let AI do the coding for you, as it will be harmful for your learning.",Sohamgon2001,2025-04-07 08:05:34,1,learnprogramming,t3_1jtfyep,False,
mmzp2xg,"You can try using the app Meetup to find other groups in your area. I was able to find a bunch of different groups ranging from data science, cloud platform groups, to program language specific groups (ex. java user group). It’s a great way to find people in your local area to network with!",Odd_Front_1314,2025-04-14 01:20:23,1,learnprogramming,t3_1jygf56,False,
mmwuc6b,"The way I think this might work is start by drawing up some high level plans of what the end result is supposed to be like. So that might be: \- An interactive website\- It has a dashboard that does x\- Users can log into it and have views attached to their accounts\- I must pull data from y source to show in the dashboard And then you can start your project. But with a clear view that you are going to use it more as a roadmap for learning. Each time you hit a block as to how to get the next bit done that is what can guide you to head off and learn how to do something of that kind.So first of all, it may be a simple question of 'what kind of code would I even need to make this dashboard page' which means you now have your question, and a focused thing to investigate and learn. You'll head off, figure out that you're going to need to create an HTML page, and style it with some CSS. You can learn the basics of those, and practice how to do it. Then you can come back and put that into your project.The downside is you will need to re-do things a LOT. Because chances are the choices you make early on will be sub optimal. But if you do it this way I think it can offer a sensible means of helping you focus your learning. I did something quite similar with a stock controller application for my work when I was learning, and it worked ok.",Naetharu,2025-04-13 15:48:33,5,learnprogramming,t3_1jya1ai,False,
mmwpyq5,"You can try, but probably you will find a lot of problems, and you will learn about it. I would not recommend doing so, but the best way to learn is making mistakes.",devdruxorey,2025-04-13 15:25:38,1,learnprogramming,t3_1jya1ai,False,
mmwt4lm,"This is just from my perspective as someone who tried to do the same thing, start small seriously. Except my project was gonna be a game engine. You have to build up to that type of complexity, by slowly ramping up. If you dont want to become reliant on ai tooling then dont use it. If you use it now you are basically forming your foundation for programming around AI.",Narrow_Priority364,2025-04-13 15:42:18,1,learnprogramming,t3_1jya1ai,False,
mmwzejc,"Big programs are just small programs broken down. Work on small parts at a time and it's definitely doable. That's how I started, I'd a window cleaners app in mind that took payments and recorded cleans. I got my database sorted and then just worked on one part at a time. Bells and whistles came later like the Bluetooth Printer I added for receipts.Get your basics (which you might already) but find the tools you need because it's using the right tools for the right jobs. I hard coded SQLite for instance and didn't know about Room. I've now coded the app as a Room database but now I understand relationships I need to manipulate my app again. You'll make plenty of mistakes but that's part of the fun! My biggest faux pas was updating the customer with the next id up! This meant the wrong payments were attributed to the wrong customer! That was fun, took me a month to sort lol.Get your core logic sorted and then work on each part individually.I use a LLM (Gemini) but learned the hard way by creating my own code. If you do use a LLM ask it what each part means. It's important to understand your code, not just create it.",Ovalman,2025-04-13 16:14:51,1,learnprogramming,t3_1jya1ai,False,
mmxsvc4,Tip: try coding the gui in penguin mod (https://penguinmod.com/) and uses their js extension to run the backend in javascript,The_Man_On_Pi,2025-04-13 18:46:59,1,learnprogramming,t3_1jya1ai,False,
mmz6kpe,"Yes, I think you can, lots of people do.If you're comfortable with hard work and can deal with frustration, then just starting off with a hard project suits some people.Some people benefit from baby steps, learning the basics and slowly working their way up. Some people don't need that are are happy just to jump in the deep end.If you're the latter, go for it. Worst thing that happens is that you fuck it up, and that's not so bad really, we all do.",ToThePillory,2025-04-13 23:23:05,1,learnprogramming,t3_1jya1ai,False,
mmxch5k,"Thanks for answering. Would you recommend I use ai to map out what I need to do and then only use what I need to. Or should I just start from scratch, just using google to search what needs to be built. Like building the html from scratch then adding the css etc.",Dills777,2025-04-13 17:22:16,1,learnprogramming,t1_mmwuc6b,True,
mmx01hg,"Ok cool thanks,yes I’ll be honest for projects I have already done I have been heavily reliant on ai and have not learnt as much as I would have liked. Could ai be used to accelerate the learning though, or should I just search everything up like how it used to be?",Dills777,2025-04-13 16:18:11,1,learnprogramming,t1_mmwt4lm,True,
mmxcyoh,"Thanks for answering. Yes I have no clue about what I would have to use where. When you were creating your dashboard did you have any idea about what to use where, or did it just come from using the internet?",Dills777,2025-04-13 17:24:41,1,learnprogramming,t1_mmwzejc,True,
mmxtfij,"And use their packager to put it in to HTML, also expand the stage size in settings",The_Man_On_Pi,2025-04-13 18:49:56,1,learnprogramming,t1_mmxsvc4,False,
mmsvh4j,Starting with [PEP8](https://peps.python.org/pep-0008/) helps.,mopslik,2025-04-12 21:56:13,6,learnprogramming,t3_1jxs98f,False,
mmsxm8b,"Since someone else has already given you the PEP8 guide on how to write _good_ code, [here's the guide on how to write _bad_ code.](https://github.com/Droogans/unmaintainable-code?tab=readme-ov-file) Do the things in PEP8 and don't do the things in this, and you're set.This is mostly just for humor, but it does have quite a few things that are legitimate mistakes I've seen people make, so there's at least a little to learn from it :P",AlexanderEllis_,2025-04-12 22:09:00,3,learnprogramming,t3_1jxs98f,False,
mmswxi6,I mean… it’s python,Roguewind,2025-04-12 22:04:52,2,learnprogramming,t3_1jxs98f,False,
mmt074l,"Using `enumerate`, dictionary `items` and `zip`?I was unable to find the video that introduced those things to me, but a good way to write readable Python is to actually know that certain things exist in the language.`itertools` and `functools` modules also provided nice solutions in some niche situations.There are some interesting annotations that eliminate extra code, e.g. `@ lru` (""last recently used"") that eliminate the need to manually write a cache, but I've never used them.\--------You may also want to learn design patterns, so that you could use ""simple"" words to describe your code in the comments or class/method names.",VibrantGypsyDildo,2025-04-12 22:24:43,1,learnprogramming,t3_1jxs98f,False,
mmtif7v,"First, a line of solid stars when entering a sub-task in your code.Then, a succinct explanation of what is to follow. (e.g., ""Here we read the line from the ldif file, and strip out the phone number.""Then, an inline comment for MOST of the lines.Then, a line of solid stars to introduce the next subtask",maxthed0g,2025-04-13 00:19:22,1,learnprogramming,t3_1jxs98f,False,
mmv1p2q,Read code. Find a small library or module and use it a little then go read the source code.,rogusflamma,2025-04-13 07:30:03,1,learnprogramming,t3_1jxs98f,False,
mmulnom,I just say copilot to clean up my code and learn from improvements it does. Im a practical learner and that feels to be working quite well.,Henrik2k00,2025-04-13 04:57:55,0,learnprogramming,t3_1jxs98f,False,
mmsvp1b,Thank you so much :smiling_face_with_smiling_eyes:,None,2025-04-12 21:57:31,3,learnprogramming,t1_mmsvh4j,False,
mmsw5rn,Then go [Beyond PEP 8.](https://www.youtube.com/watch?v=wf-BqAjZb8M),Gnaxe,2025-04-12 22:00:16,2,learnprogramming,t1_mmsvh4j,False,
mmsxta5,"Thank you so much, this really helps :folded_hands:",None,2025-04-12 22:10:12,2,learnprogramming,t1_mmsxm8b,False,
mmrz5z8,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-04-12 18:54:09,1,learnprogramming,t3_1jxoi5x,False,moderator
mms0ynf,"Just start applying now, you have some experience just not professional experience. You can look at any rejections as either a rejection or an opportunity to get constructive feedback on what you need to improve on. Whilst you get feedback you may also land an opportunity.",liamsorsby,2025-04-12 19:04:10,5,learnprogramming,t3_1jxoi5x,False,
mms0tma,??? Real devs know when ai is wrong and only use it as a tool....,VariousAssistance116,2025-04-12 19:03:23,1,learnprogramming,t3_1jxoi5x,False,
mmskq4n,"software development isnt going away, with or without ai.learn to write code with the best tools you have, and debug it when things go wrong. that will be timeless",hemlocket,2025-04-12 20:54:07,1,learnprogramming,t3_1jxoi5x,False,
mmqzh07,"Learn *Visual Basic for Applications* (VBA) - /r/vba, /r/vbaexcelIt is extremely powerful despite getting much flak for being quite old-fashioned. It is easy to learn.Work with the *Macro Recorder* of Excel and then analyze what it records, tune it, change it. The Macro Recorder is your best friend.",aqua_regis,2025-04-12 15:48:35,1,learnprogramming,t3_1jxjskt,False,
mmraorv,"In addition to learning Macros, look into Office Scripts. They're the new model and are in many ways more versatile and easy to use than Macros + VBA. (But you should still learn those, too.)",amp108,2025-04-12 16:47:07,1,learnprogramming,t3_1jxjskt,False,
mms9o9v,Learn python and pandas. I automated crunching reports at my job to produce key risk indicators,Major_Fang,2025-04-12 19:52:50,1,learnprogramming,t3_1jxjskt,False,
mmu1yw0,"You can do it within excel using macros and vba.Outside excel, you can use python to do it. Check out courses on xlwings",Gullible-Access-2276,2025-04-13 02:30:41,1,learnprogramming,t3_1jxjskt,False,
mmqzqd2,This is the second time I am seeing this post. Are you spamming subreddits my guy **lmao**. Just ask a senior how it worked for them and they will be able to guide you. Is it internship season or placement one?,Desperate-Gift7297,2025-04-12 15:49:55,1,learnprogramming,t3_1jxjq4k,False,
mmr191c,I dont think coursera has any legible or structured DSA courses,Potential_Corner_268,2025-04-12 15:57:41,1,learnprogramming,t3_1jxjq4k,False,
mmr18dv,"No man,i posted this on r/webdev and this.I study in tier 3 university so Bad teacher+Bad seniors(most of them dont care about dsa,they will say focus only on development).I wanna give next 3 month to dsa and next 8-9months on project+dsa practice+Development and then off-campus placement",Global_Many4693,2025-04-12 15:57:35,0,learnprogramming,t1_mmqzqd2,True,
mmr1el4,Any other free resource?,Global_Many4693,2025-04-12 15:58:29,1,learnprogramming,t1_mmr191c,True,
mmrlkwd,Try [this](https://runestone.academy/ns/books/published/pythonds3/index.html)?,mopslik,2025-04-12 17:41:47,1,learnprogramming,t1_mmr1el4,False,
mmrmat5,Thanks,Global_Many4693,2025-04-12 17:45:28,1,learnprogramming,t1_mmrlkwd,True,
mmp1iaj,Reading documentation is a skill itself lol,Familiar_Bill_786,2025-04-12 06:46:46,5,learnprogramming,t3_1jx9cj1,False,
mmp6zcp,i would highly recommend watch mitchkoko he the myth and the legend specifically watch the 3 hour course on flutter for beginners,Far_Management2188,2025-04-12 07:42:13,1,learnprogramming,t3_1jx9cj1,False,
mmphisk,"Using an LLM to fill in the gaps and provide assumed knowledge is quite effective in my experience. I give it the part of the documentation I don't really understand or where I miss some context and ask it to explain it. I don't know flutter, but I generally learn most from (quality, highly regarded) books, IMHO they have the best return on investment, tho with libraries like flutter, they would get outdated rather quickly I suppose.",Frydac,2025-04-12 09:32:44,1,learnprogramming,t3_1jx9cj1,False,
mmke5zj,Using the operating system keyring would probably be saferBut if you wanted to use the filesystem use encryption and save your private key somewhere safe,N0Zzel,2025-04-11 14:12:59,7,learnprogramming,t3_1jwqpnv,False,
mmkhike,This article has a good overview:https://dev.java/learn/security/intro/The section on symmetric encryption is what you need.,dmazzoni,2025-04-11 14:29:47,3,learnprogramming,t3_1jwqpnv,False,
mmm65mf,"create a pin or key, either memorize it or store it in a keyring. Create a random string for IV and store it. Then use the key as input to AES 256 Galois Counter Mode encryption and encrypt your text file. Here's a guide from a google search. https://mkyong.com/java/java-aes-encryption-and-decryption/",Fiskepudding,2025-04-11 19:30:36,2,learnprogramming,t3_1jwqpnv,False,
mmke7c1,You'll wanna use some sort of symmetric encryption algorithm where you provide a key/password that decrypts the contexts of the file.,LucidTA,2025-04-11 14:13:10,1,learnprogramming,t3_1jwqpnv,False,
mmm4mwp,Jumble it with base64. Not secure at all but isnt plain text.,Illustrious_Fall4887,2025-04-11 19:22:41,0,learnprogramming,t3_1jwqpnv,False,
mmm9hzv,"Depends on what secure means and if you need the passwords to be decrypted. If it's in ASCII than you're only tricking anyone who doesn't know ASCii.Key shifting with the printable ASCII range will at least obscure it enough for anyone who isn't a script kiddy or a hacker. But if this is professional or handles personal information than you have to be looking into how to implement RSA, AES, or SHA.",Mountain_Sound7432,2025-04-11 19:48:02,-1,learnprogramming,t3_1jwqpnv,False,
mmm5cb8,even less secure than just typing it backwards,Fiskepudding,2025-04-11 19:26:21,2,learnprogramming,t1_mmm4mwp,False,
mmo6ln8,"Base64 is instantly recognisable by any technology savvy person, you don't even need to be a programmer. It's not in any sense encryption.",Pale_Height_1251,2025-04-12 02:32:34,2,learnprogramming,t1_mmm4mwp,False,
mmmdet0,"How so?The first would be obfuscation rather than security because both ways provide no security at all. And in terms of obscurity, or brain is probably figuring out it's backwards text by looking at it and can then read it, I doubt that's happening with base64.",bloodhound83,2025-04-11 20:07:23,1,learnprogramming,t1_mmm5cb8,False,
mmmyvqy,"base64 is well known and easy to decode. if its backwards you wouldn't know unless you have full words in it.anyways, never treat base64 as a security mechanism. it is actually just an encoding to represent anything including binary data as ascii text.",Fiskepudding,2025-04-11 22:01:29,2,learnprogramming,t1_mmmdet0,False,
mml6gxf,"Ask Grok, it is the best AI I have found for C++, HTML, PHP, and Python.Just be careful about making the question too general. Good luck.",DropExcellent9337,2025-04-11 16:32:50,0,learnprogramming,t3_1jwjc1e,False,
mmlclnv,Thank you for your response dear.i will go for it for sure,NeoProgrammer0911,2025-04-11 17:02:49,1,learnprogramming,t1_mml6gxf,True,
mmha8tb,"`RPC` in `gRPC` stands for **Remote Procedure Call**. Essentially the idea behind it is to expose API as a set of arbitrary *functions* and let the API clients call those functions.The idea behind **REST** is to not expose functions per se, but to expose *resources* to let client directly manipulate them (read, make changes, make new ones, etc.). You can think of RPC functions as *verbs*. Meanwhile resources are *nouns*, and there's a limited set of verbs representing actions on those nouns. Specifically, the verbs are different HTTP request methods: GET, POST, DELETE, etc.**With REST APIs** you often can get the idea what you can or cannot do with it by looking at the available resources. Like, for an imaginary Reddit API you would see the resource `comment` and would assume that:`GET /api/comments?post_id=xyz`would give you all comments for a specific Reddit post.**With RPC** this can be something like `getCommentsForPost(xyz)`, and gRPC would convert it to a protobuf on the way to and from the server.Both approaches have **pros and cons**. REST became popular when many people started building APIs for web apps and mobile apps and used many different languages to make them. At the time the primary RPC technology was SOAP and XML-WebServices (essentially the same thing as gRPC except with XML and not protobuf), and not many languages had libraries for SOAP. With REST if your language could speak HTTP you were ready to use it.Even today, like you said gRPC is faster and theoretically should replace REST for everything, except that outside of about top 5 / top 10 most popular languages support for it is almost non-existent. Last time I worked with gRPC was about 5-6 years ago, and at the time there was no convenient way to make RPC calls from a web page, so the largest proportion of potential clients couldn't use it at all. I haven't looked at it since, to be honest.In practice, REST can be fast enough for many / most situations, so people keep using it because it's convenient.",andreicodes,2025-04-10 23:55:28,18,learnprogramming,t3_1jwc490,False,
mmhl5gk,"Biggest problem with gRPC right now is that you can't make calls out of a browser because browsers don't support HTTP 2.0. So if you're building an API that's going to be called out of a browser you have to use gRPC-web which is nowhere near as performant as gRPC over HTTP 2.0 (and in some cases potentially less performant than ""standard"" HTTP 1.1 calls). In my experience it's also more fiddly to get working correctly and more difficult to test.If you're talking about gRPC for service-to-service communication, that's definitely on the rise because if it's set up properly it can be significantly more performant and secure.",ehr1c,2025-04-11 01:01:38,4,learnprogramming,t3_1jwc490,False,
mmhp5cs,"**TL;DR - gRPC takes a bit of extra work and solves problems that REST users may not have.**gRPC's performance advantages over REST come primarily in two flavors:1. Protocol buffers are more space + time efficient for message passing than JSON.2. gRPC is set up over HTTP 2, which means you can send many messages with less TCP/HTTP connection overhead (in a nutshell, many requests can share connections)Advantage #1 doesn't require gRPC, you *could* protocol buffer encode your messages and send around binary payloads if you wanted to. This advantage doesn't actually apply very much to strings or small integers, so jumping through the hoops of defining and distributing protocol buffer definition files isn't really worth the effort usually.As for advantage #2, this is actually something REST *can* have as well with HTTP 3, and depending on your network topology you can get the main benefits here without having to re-write any of your application code.gRPC is a godsend if you have internal services that are quite chatty with each other and are paying all the network/CPU bills for all of them, since the serialization cost and wire size is strictly better and sometimes better by a noticeable (double-digit percentage) margin. Protocol buffers are also quite nice because they allow you to generate message passing logic for multiple languages, meaning you don't have to write a lot of overhead to translate to/from JSON when your C++ data chugging service is talking to your NodeJS client-facing websocket server - but that only saves you effort if distributing/consuming that generated code is easy.",sessamekesh,2025-04-11 01:26:39,2,learnprogramming,t3_1jwc490,False,
mmhb0jb,Grpc is a pain in the ass. Requires tons of code to get working.,fuddlesworth,2025-04-11 00:00:02,5,learnprogramming,t3_1jwc490,False,
mmi5jia,"IMO gRPC + protobuf is pretty nice, but it does require some up-front effort to set up and make seamless. For example:- To use protobuf you need a code generation step where you transform your proto files into the actual interfaces you implement + objects you use. It may not always be easy to integrate this into your build system in a seamless way, depending on your setup.- You'll also probably want to write some sort of wrapper to smooth out some of the tedium of launching your server and creating your clients.- Sharing protobuf definitions between different repos is a bit of a PITA, last I checked.These factors mean that:1. For smaller companies or projects, you'll probably see negligible overhead from using plain-old HTTP + JSON. So, it's often not worth the effort of setting up gRPC + protobuf: the speed boost isn't big enough to justify switching for many.2. Using gRPC + protobuf _can_ be worth it for larger companies. However, you'll most likely use it purely internally and continue using HTTP + JSON for your externally-facing API -- the browser support for gRPC is not quite there. If your API is something designed for others to use, you'll also have to take into account that most users of your public API will (statistically speaking) be smaller companies or hobbyists that cannot or do not want to use gRPC + protobuf. So if you want to maximize adoption, you'll have to stick with the least common denominator, which is HTTP + JSON.",michael0x2a,2025-04-11 03:12:15,1,learnprogramming,t3_1jwc490,False,
mmjm47w,"""Since speed is important"" is a pretty big claim. For most types of webservices I've built serialization was orders of magnitude less expensive than other work being done (like talking to a database).Some situations where the cost of ""rest"" (or probably just JSON over http) are worth it:- your staff are familiar with it, and skew more junior- you're providing a service consumed by customers who may be more junior or using tools catered to consuming json- your api is consumed by front-end code in the browserDon't get me wrong, gRPC is great and I think should see more use within distributed systems vs. Json/http, but there are legitimate reasons to avoid it.",askreet,2025-04-11 11:19:39,1,learnprogramming,t3_1jwc490,False,
mmkvfm2,Was soap a pita? A few times in my career I almost had to write SOAP code. Thankfully I always got tasked with something else. I don't know maybe it's just because I was still very Jr but it scared me for some reason.  Maybe it wouldn't have been too bad. Rest however  always just seemed natural and obvious when I had to work with it.,maxximillian,2025-04-11 15:38:26,1,learnprogramming,t1_mmha8tb,False,
mmlgoqw,"I was lucky to use it at a later stage (late 2000s), and by that time most glaring problems with SOAP were generally ""solved"".All these WS-* standards were not pedantically defined, and in practice Java tools were doing whatever .NET tools were doing and vice versa. Both Microsoft, and Sun-Oracle and IBM were working really hard to make sure that the two sides of the ecosystem had seamless experience. But if you were ""outside"" of those two stacks you were in for subtle bugs.However, I worked on projects that were Java and .NET, and for us it was pretty awesome. When you needed to connect two services the two teams would sit down, design a WSDL file, and then our tools would generate both client and server code *and test stubs* so we could test (or run) the rest of the application without having the other service running. Both languages had top tier IDEs, so if, say you wanted to load patient appointments you'd fire up the autocomplete, and it would find types for requests and response messages, data validators, etc.If you find something missing you'd ring up the other team, you would agree to changes to WSDL, and then both teams would regenerate code and the IDE would instantly highlight all places where the code was broken. I worked on a medical project like this at some point, and the teams of dozens of developers (both Java and .NET) worked on individual services for months without actually running the full system ever (That was the time before CI was widespread). We finally had a demo scheduled, we connected the real endpoints, and you would think it all would brow up spectacularly. But no! The stuff actually worked! Our WSDLs had thousands of lines in them, and we had, like, 5 functions where things didn't work as expected (people passing wrong IDs or assuming different time zones, you know the drill.).So, all things considered, it was a pretty cool set of tech. The devil was in a details. Despite everything, XML was annoying to work with, the generated types may have fields with stupid names (`field1`, `field2`, or `meaningfulName0` or something). If you wanted to debug this code you'd have to send XMLs with a tool called SOAP UI (it's like Postman, but much worse and in Java). Messages had a lot of wrapper tags with XML namespaces in them and tons of unnecessary meta-info. Both Sun and Microsoft insisted that the best way to make some classes in your favorite language, and then let *them* generate WSDL, all the tutorials showed that, and not how to work with WSDL-first approach. So people who were excited about how simple it looked in the examples were in for a very rude awakening. All in all, it was a very strong tech on a ""strategic"" level, but day-to-day as a single engineer on one of those projects you didn't really enjoyed it, and I can easily see how people would say it was PITA! Especially, those who worked with it in its earlier years when half of things it promised didn't really work. I remember at the time I was not a fan of WS and SOAP at all, but over the years and looking back I started to appreciate it more.With gRPC Google took the main idea: have a protocol defined in a spec file (new WSDL), and use code gen for every language. They improved a lot of stuff: the new spec file format - proto - is much nicer, it works with a lot more languages, there's a lot less ceremony and special tools involved. But they also made a few decisions to make the whole thing annoying in its own way. Like, making it binary only which is bad for observability, require an exotic transport, having web browser support as an afterthought, etc. So, while objectively I liked my time with SOAP *somewhat* I'm not really rushing to try gRPC.Funny thing: SOAP was not the first either, before that we had CORBA and DCOM in the 90s and some proprietary stuff from Unix vendors in the 80s. And like every other thing in our profession RPC, too, was invented at Xerox. [The guy who coined the term](https://en.wikipedia.org/wiki/Bruce_Jay_Nelson) even came up with the general design: have a file for interface definition, use it to generate stubs, all messages and RPC calls are type-checked to prevent bugs.",andreicodes,2025-04-11 17:22:46,1,learnprogramming,t1_mmkvfm2,False,
mmg9mzn,Job listings,ItzRaphZ,2025-04-10 20:35:36,3,learnprogramming,t3_1jw7oal,False,
mmgtkhl,Don't forget to build software.,ToThePillory,2025-04-10 22:19:15,2,learnprogramming,t3_1jw7oal,False,
mmh8as5,Fuck off bot.,Coldmode,2025-04-10 23:44:02,1,learnprogramming,t3_1jw7oal,False,
mmax9s7,"I just left big tech for a career break and mostly agree, but sometimes I also wonder, is it really just big tech? I hear stories at other companies and it doesn’t sound all that great either.",FunPomegranate5,2025-04-09 23:50:20,802,cscareerquestions,t3_1jvk5td,False,
mmb292a,Fffffffuck. As someone who has burnt out in tech in the past you nailed it in a way that tells me this is genuine. (Or just a very good story),According_Jeweler404,2025-04-10 00:20:02,62,cscareerquestions,t3_1jvk5td,False,
mmayye5,Yup congratulations on graduating big tech. FANG has an insulation layer for new joiners and the young. But once you’re a high performer who is aiming for the next level you’ll really feel the burn for what made them big in the first place.,react_dev,2025-04-10 00:00:14,301,cscareerquestions,t3_1jvk5td,False,
mmawt89,I feel you OP. I felt exactly the same. No amount of money justifies that ever. For me it also soured big tech’s products for good. Turns out i don’t need most crap they are selling.,cr0w8ar,2025-04-09 23:47:38,127,cscareerquestions,t3_1jvk5td,False,
mmazaw3,Mo' money mo' problems. A lot of people saw those day-in-the-life videos of FAANG people working 2 hours a day while making doctor money and thought that was real and going to last lol.,YakPuzzleheaded1957,2025-04-10 00:02:17,178,cscareerquestions,t3_1jvk5td,False,
mmawwi0,Was it Amazon…?,FalseReddit,2025-04-09 23:48:10,150,cscareerquestions,t3_1jvk5td,False,
mmax8im,"FWIW nothing you describe is *inherent* of big tech.In the same vein, everything you describe absolutely exists at many no-name/unprestigious/non-tech/small companies.Every team you're considering joining needs to be evaluated on its culture. Don't make assumptions one way or the other because of the type of company it's at, or the industry it's in.Even Amazon, the company that has one of the worst reputations for WLB, has teams within it that have a great WLB. Even government, the industry that has a reputation for being very slow paced, boring, and layoff/firing-proof, absolutely has some teams within it that have insanely high expectations and a terrible WLB.Generalizations can only get you into trouble.",SouredRamen,2025-04-09 23:50:07,250,cscareerquestions,t3_1jvk5td,False,
mmbbs0v,I crashed out today after a 30 minute standup turned into a 4 hour endless rabbit hole and finally when I got shit on track and settled some dip shit opened an entirely separate can of worms that if he had any social or work etiquette at all he would have shut the fuck up and said something on the next mornings call. Someone needs to teach Indian tech workers to fucking have a backbone for Christ sake. They are smart. They work hard. I am friends with many of them. But they absolutely have no semblance of work life balance or ability to communicate confusion or issues. The last 2 years have severely degraded my mental health simply because of dragging entire teams into calls that can be 1 on 1s. It's absolutely fucked that this is becoming normalized in development. It isn't an issue about visas either. My boss actively begs the team to communicate problems and meet 1 on 1 to hash out issues in their code ANY TIME. I also have an open door policy for assisting junior devs!,frozenandstoned,2025-04-10 01:16:24,27,cscareerquestions,t3_1jvk5td,False,
mmb7pyt,"Any company, any industry, that attracts achievers and opportunists, mostly because of pay and prestige, is a hellscape like this. It’s because everyone is out for themselves and doesn’t actually care about the work.",QandA_monster,2025-04-10 00:52:27,25,cscareerquestions,t3_1jvk5td,False,
mmaz3no,Visibility and politics being most important is par for course in the corporate world - at almost any size or level of prestige company.,SuhDudeGoBlue,2025-04-10 00:01:05,42,cscareerquestions,t3_1jvk5td,False,
mly2ren,"> I'm probably never gonna break into big tech, FAANG, etcTONS of people never do, yet continue on to have successful, fulfilling careers.",BinghamL,2025-04-07 23:18:01,1546,cscareerquestions,t3_1jtz4sq,False,
mly3bgo,It could have gone to some dumbass who knows the CEO. You almost never know the reason why.,abluecolor,2025-04-07 23:21:16,547,cscareerquestions,t3_1jtz4sq,False,
mly2o81,"rejections suck but they don’t define you. the more you think about them the more power you’re giving to the rejection. i have over a decade of work experience, not all in tech, and i’ve been rejected more times than i can count.so don’t give it power. don’t waste time and energy thinking about it and focus on doing well on the role you did land.",jcl274,2025-04-07 23:17:31,356,cscareerquestions,t3_1jtz4sq,False,
mly4f6e,"You recognize it’s a numbers game. Companies like Meta or Google who have pretty much unlimited headcount, sure, if you get rejected it most likely is a skill issue. But for the vast majority of companies where they hire for a specific role, you have to realize that even if you do it perfectly, it is likely someone else did too, and then it’s just a dice roll on who they select.My first big tech job, I searched my name internally a couple days after joining and found the hiring channel they used to discuss me. There were 3 people ahead of me. Fortunately all 3 took offers from other companies. If they hadn’t I would’ve not gotten that job. It was purely based on when they had completed their interviews. There was no mention of “this person is a better fit” or anything. They extended offers in order of final on-site date. But even so, if they hadn’t, still a lot of luck involved. You can be the best interviewer ever, but at the end of the day so much of getting a job is just a dice roll.",PapaRL,2025-04-07 23:27:38,148,cscareerquestions,t3_1jtz4sq,False,
mly6650,"Yea Software engineer contrary to popular belief is also challenging. The bar is def high, i feel sad for juniors. I was planning on job hopping and the thought of interviewing again is already giving me anxiety lol",Jbentansan,2025-04-07 23:37:48,42,cscareerquestions,t3_1jtz4sq,False,
mly96rx,"I used to work with an ex Meta employee and he was among the worst developers I have ever worked with, both in terms of system design knowledge and coding. If you think these people are geniuses or exceptional in any way you are mistaken. They are just like every other company where half the employees do all of the work.",nocrimps,2025-04-07 23:55:34,119,cscareerquestions,t3_1jtz4sq,False,
mlyojqz,> how do you handle rejections like these?Personally I remind myself that climate change is likely going to destroy modern civilization and none of this dumb shit will matter in about 15 years,token_internet_girl,2025-04-08 01:28:58,26,cscareerquestions,t3_1jtz4sq,False,
mly3tzi,I think you are beating yourself too hard. Interviews can be a crapshoot and so many things can go wrong. You think you did poorly/well but maybe the interviewer didn’t think so. The interviewer wanted a different answer from the one you gave no matter how correct your answer was. The company could no longer fund the position. And so on…The point being that you just have to keep trying and that goes for FAANG and other companies as well. Also working at FAANG doesn’t define your career. You can work at other places and still have a successful career. I’ve gotten everything “right” on an interview and still didn’t get the job. I’ve also gone out of interviews crying thinking I failed and got an offer before. Please don’t beat yourself up over it. That’s just how interviewing is sometimes.,Aggressive_Top_1380,2025-04-07 23:24:13,23,cscareerquestions,t3_1jtz4sq,False,
mly5ndw,Apply and interview with non tech companies. Any Fortune 500 that isn’t “tech” still hires tech to create and maintain their systems. Their hiring bar is a lot lower.,DynamicHunter,2025-04-07 23:34:47,18,cscareerquestions,t3_1jtz4sq,False,
mly8qel,"I think one thing that is not emphasized enough here is that the interview is more than technical skills. And I'm not saying you lack it, but when I evaluate interviewees, I also look for things like, would I enjoy working with this person, do they seem flexible to adapt to the way we do things or are they set in their ways, can they communicate well, are they going to handle ambiguity well. Obviously there is a minimum threshold for technical skills, but being a generally pleasant person goes way further than I think this sub generally acknowledges.In any case, there's no need to give up on faang, many people transition there from other companies early in their career. And you seem motivated and confident, so there's no reason to settle early, friend.",Touvejs,2025-04-07 23:52:52,38,cscareerquestions,t3_1jtz4sq,False,
mmouwyn,They are cutting Pixel team again? Wasn't it cut a few months ago?,LingALingLingLing,2025-04-12 05:42:22,721,cscareerquestions,t3_1jxa3cv,False,
mmpy90s,Google has been laying off continuously since the big layoffs in 2023. It has destroyed the culture because it’s so unpredictable.,TheOceanicDissonance,2025-04-12 12:07:23,137,cscareerquestions,t3_1jxa3cv,False,
mmovn0f,"CS jobs are extremely unstable. Nowadays any time that companies struggle a bit CEOs make the decision to lay developers off. How can somebody make a career out of this? The older you are, the harder it becomes to jump back on track after these events. Either you save up money like crazy and retire early living from your investments or you are screwed.",HarnessingThePower,2025-04-12 05:49:14,879,cscareerquestions,t3_1jxa3cv,False,
mmou5zk,Can we stop this timeline yet? Getting real sick of it.,Easy_Aioli9376,2025-04-12 05:35:26,315,cscareerquestions,t3_1jxa3cv,False,
mmouunc,"Still don’t understand how layoffs can be a normal thing inside a massive insanely profitable company. Like genuinely baffling, always used to assume layoffs were struggling companies trying to stay alive",abb2532,2025-04-12 05:41:46,569,cscareerquestions,t3_1jxa3cv,False,
mmplbwa,"I know it's a minor thing next to hundreds of people losing their jobs, but that headline is annoying.Being *fired* means the company is trying to get rid of you, specifically. There's usually a cause, even if they don't officially want to say what it is. They'll be hiring a replacement as soon as they can.Being *laid off* means the company is eliminating your position, probably alongside a ton of others, because either they literally can't afford you, or they're making some big, strategic decision about where they want to invest. And there's a better chance you get some kind of severance package.It's not as clean a difference as I'm painting -- sometimes companies use layoffs to get rid of people they wanted to fire anyway, and not everyone gets a good severance. But it's a difference that can matter to companies hiring, or to lawyers if it comes to it. Very few people ever got *fired* from Google. Thousands have been *laid off.*",SanityInAnarchy,2025-04-12 10:12:55,44,cscareerquestions,t3_1jxa3cv,False,
mmpcbjb,"Google's 70% revenue comes from Ad org which is like 300-400B$. People have started using Chatgpt etc for searches. Even assuming 5% traffic dip, it amount to 20B inrevenue shortage and 400B in valuation. The typical growth as well which might hide these stats but the execs know.Imo google had a golden goose and any hit to it impacts the whole ship exponentially. So it's especially vulnerable to AI.",wyltsomfaiceyo,2025-04-12 08:37:25,76,cscareerquestions,t3_1jxa3cv,False,
mmoydsm,"Did they open the same positions in India at the same time? I mean, they are on their way to becoming an Indian company, aren't they?",TheRealSooMSooM,2025-04-12 06:15:37,155,cscareerquestions,t3_1jxa3cv,False,
mmprinm,"""they've become more nimble"" lmao what a way to say it",Kaiju-daddy,2025-04-12 11:12:29,15,cscareerquestions,t3_1jxa3cv,False,
mmouele,Bless alphabet leadership…. They need it,zoltan99,2025-04-12 05:37:38,30,cscareerquestions,t3_1jxa3cv,False,
mmss69m,"Make a full stack CRUD app that uses a REST API, database, and one of the JS frameworks. Doesn’t really matter what tech because the principals are more important than learning the latest trend, but Java and Python are bread and butter If you have the appetite, host your app on AWS to learn cloud fundamentalsDo that a couple times in different tech stacks and you’ll be qualified for 90% of the jobs out there for SWE",m3t4lf0x,2025-04-12 21:37:06,157,cscareerquestions,t3_1jxn9et,False,
mmrwevp,"This might be controversial but full stack roles are in more demand than ML roles. It depends if you want to go to the startup route or big tech route. Big tech it's still legacy systems using Java and they are looking for ML engineers for the new departments. For startups it's applied AI + full stack engineering that is highly valued. using this information I would build projects depending if you want to go to startups or big tech \^ I would also apply to a fuck ton of roles, the job market is brutal for SWEs. use something like applyhero ai to automatically apply you to the roles or Simplify to automatically fill in the forms. But you need to be applying to hundreds if not thousands of roles. Good luck OP",SnooTigers1510,2025-04-12 18:39:02,124,cscareerquestions,t3_1jxn9et,False,
mmux5ny,"Good systems chops should get you interest. Nothing says “cracked” like writing a compiler, text editor, web server, graphics engine, etc. from scratch. And really they’re not that hard, just requires some learning and thinking.",hardwaregeek,2025-04-13 06:44:17,11,cscareerquestions,t3_1jxn9et,False,
mmrrtzl,None,RapidRoastingHam,2025-04-12 18:14:11,39,cscareerquestions,t3_1jxn9et,False,
mmsa3rj,Stack doesn't matter at good companies. It never did.,WagwanKenobi,2025-04-12 19:55:10,44,cscareerquestions,t3_1jxn9et,False,
mmu47th,The only projects that matter are ones with real users. Try to work on student led open source projects or volunteering gigs.,SmartTelephone01,2025-04-13 02:46:05,6,cscareerquestions,t3_1jxn9et,False,
mmrtic2,"I would suggest to do projects that you actually enjoy, get good in any, if you actually like it, there won't be much problem in getting a role as you will be different from those that do what the market dictates at the moment, without any actual passion.Cs like any other field always need good people, and in most cases good people are those who enjoy their work.That's just my two cents ofcourse.",Wrong-Ladder9258,2025-04-12 18:23:13,12,cscareerquestions,t3_1jxn9et,False,
mmta9pi,"Specialize fast. Cloud Security and platform engineering is pretty in-demandEven if you’re a generic SWE, more companies will likely invest in your growth (aka try to keep you for cheaper than externally hiring)",sugarsnuff,2025-04-12 23:27:36,7,cscareerquestions,t3_1jxn9et,False,
mmu0o4q,"Integrations is sort of niche but rewarding. I would recommend learning one of the big platforms like Mulesoft. Also helpful to learn python, React, Java as those are common for small scale integration work.",TheJordLord,2025-04-13 02:21:48,4,cscareerquestions,t3_1jxn9et,False,
mms7it5,"I’d recommend a modern frontend framework like react with typescript, some sort of oop language (I’d recommend either Java or python) for the backend, and some sort or cloud provider (I’d recommend AWS) for your database and hosting. That should be enough for basic CRUD apps to help you pad your resume. However, that will only be helpful if you can find jobs to apply to. The truth is that entry level software developers are not in demand right now. Apply to any entry level role you see. You are in for a rough and emotionally taxing ride (for likely many months or even years). Good luck",arg_I_be_a_pirate,2025-04-12 19:40:56,71,cscareerquestions,t3_1jxn9et,False,
mm1nju2,"On average, probably. But the best engineers at “average” companies are probably significantly better than the average engineers at Big Tech.",carti-fan,2025-04-08 15:08:06,2183,cscareerquestions,t3_1jufkpv,False,
mm1mt6i,"Firstly, sucks that you're getting downvoted OP. I think it's an interesting discussion. Secondly, as an average joe at an insurance company...Yes.I think they work on things with much higher impact and scale than I do. Most of my work is maintaining legacy applications with spaghetti business logic.I think the work itself is also more difficult. I can quite easily get away with 10-20 hour work weeks, and on the rare occasion I do work 40 hours, it's not the same kind of 40 hours I've seen my friends do at FAANG.There's also a big part of actually ***getting in*** to the company. My company does mostly behavioural-type interviews with a few basic technical questions. I've been prepping for FAANG and the process is brutal. LeetCode + System Design + OOD + Behavioural is a lot of different topics, it takes a lot of time and perseverance to do it all, especially when you already have a job. It's really taught me to not give up on things so easily and continue pushing no matter how many times I fail. I didn't have that kind of skill set before I started the prep to be honest, at least not to the same level.",Easy_Aioli9376,2025-04-08 15:04:24,417,cscareerquestions,t3_1jufkpv,False,
mm1q77c,"I've found that the top engineers at any given company are usually really really good. The difference I've noticed is that at FAANG companies, the average engineer is significantly better at engineering - or at the very least, has a higher intelligence that allows them to problem solve more effectively. I've worked at a ton of ""normal"" insurance type of companies, and there are always a ton of devs that genuinely seem like they have no clue wtf is going on. I've worked at one FAANG and one other FAANG - adjacent (same pay level, just didn't find itself in the acronym) company, and I genuinely felt like every single person I encountered was a good developer and knew how to do their job effectively.",PhysiologyIsPhun,2025-04-08 15:21:12,298,cscareerquestions,t3_1jufkpv,False,
mm1stei,"In general, yes: first I don’t think people realize just how good the very best engineers are. You might be an NBA level coder, but that Michael Jordan software engineer is something else entirely. I have worked with a few of these over the years and their productivity and ability to have impact is almost unimaginable until you see it.Second, the average caliber of coder is just higher. In my experience before big Tech, there would usually be a few good coders and then some so-so ones that required a lot of handholding, at the big tech companies. Everyone is strong, even if they might be an experienced. This lets me focus more on my own work and not have to worry so much that things are going to get done. So, yes, in my experience they are",abrady,2025-04-08 15:34:12,31,cscareerquestions,t3_1jufkpv,False,
mm1wl9m,"I managed teams at Google. Yes, the engineers were very good. I've worked with great engineers at many places. Google's engineers were good, but not magical. Google expects different things from their engineers than other companies do. They're expected to run projects, including a lot of work that would normally be done by product/project management. I had L6 engineers spending hours every week writing status reports. They're expected to operate much more independently and figure things out. An L3 will be expected to write designs and go toe-to-toe with L7s. Product requirements are sketchy, cross-team dependencies are not well defined. It's up to you to figure out what you need to succeed.Coding isn't just about writing code. Google's engineers aren't that much better at writing code. They excel at system design, systems thinking, self promotion, project organization, etc. If I want someone to do what they're told, I would never hire a Google engineer. If I want to hand a complex, poorly defined project to someone and have it get done, I'll poach from Google.",denverdave23,2025-04-08 15:52:40,88,cscareerquestions,t3_1jufkpv,False,
mm2fnex,My experience is bad engineers get weeded out more efficiently in big tech. They have systems in place to catch that,Special_Rice9539,2025-04-08 17:25:58,18,cscareerquestions,t3_1jufkpv,False,
mm1v8uf,"Imo this is sort of an extension of ""are those kids who go to extracurricular classes/sat/ap prep better than average kids"", and then ""are the students at Ivy League/top schools better than average college kids"".Imo the biggest difference is that the average engineer at FAANG learns more quickly and understands complex concepts more easily. It's kind of like how people always say, what's the point of learning advanced physics and chemistry and math when you aren't ever going to use it at work. Well in this case it does help and it makes it easier to understand other complex and abstract concepts.At big tech it's a pretty normal expectation for you to immediately be able to pick up and use new languages, tools, and frameworks. Even if you've never written C++ before it's expected that you can still make contributions in that language with the help of documentation. Even if you've never done front end work or have never used a certain database or deployment tool, it's expected that you can learn it on the fly.",mythe00,2025-04-08 15:46:08,45,cscareerquestions,t3_1jufkpv,False,
mm1n807,"Between companies there are higher and lower concentrations of talent. But, there are great engineers at most companies and same for low quality engineers.",davidellis23,2025-04-08 15:06:28,13,cscareerquestions,t3_1jufkpv,False,
mm1oxbc,"As an engineer who has worked in and out of big tech, I don’t think so. What I have seen so far in my experience is the best engineers are naturally curious and take feedback seriously. The worst engineers are the ones that make the samemistakes again and again and don’t care about doing better.You’ll find both kinds of engineers at these companies and everything in between. There are also plenty of engineers outside of big tech who actually like building things and not grinding leetcode for a “dream” career which usually isn’t that exciting. They could definitely be successful at big tech.",Aggressive_Top_1380,2025-04-08 15:14:55,62,cscareerquestions,t3_1jufkpv,False,
mm1p609,"As someone who has spent their career (including internships) at multiple Big Tech companies, the aptitude of a Big Tech employee applies to Big Tech company issues (large scale engineering).An engineer that's worked primarily in startups is likely to be more effective than a Big Tech engineer at a startup and vice versa.",Toasted_FlapJacks,2025-04-08 15:16:06,41,cscareerquestions,t3_1jufkpv,False,
mlvhtet,"Eat your pride for a bit. Go back and get your old position to survive. Then when you get it back actively search on the market. remove anything that your company can see. I hope it all goes well for you. If you can do it once, you can do it again. nowadays it's a waiting game for interviews.",NeedleArm,2025-04-07 15:10:25,634,cscareerquestions,t3_1jtnfta,False,
mlvje4m,"If you're in the US, you may have legal recourse against the new employer. Consult a labour attorney.Also, take heed at other commenters that best practice is not to leave your old job till you have actually started the new one.Edit: the phrase to research is promissory estoppel, where you relied on the job offer to quit your current job. I don't know what the realistic recourse is though, which is why you should talk to a labour lawyer",Roticap,2025-04-07 15:18:28,286,cscareerquestions,t3_1jtnfta,False,
mlvh4gz,It's pretty common. The best practice now is to start the new job prior to quitting the old one. Companies don't give a flying f#&$. CYOA. I'm sorry you got burned this way OP. Try talking to the old job if you still can and tell them you can still work.,UnworthySyntax,2025-04-07 15:06:58,220,cscareerquestions,t3_1jtnfta,False,
mlvi6l2,I’m starting to wonder if these things are beginning to happen intentionally. Seems like it’s way more common these days. Just seems odd to screw someone over like that,cabbage-soup,2025-04-07 15:12:15,53,cscareerquestions,t3_1jtnfta,False,
mlvo3v6,"Now, I always wait until I start the new job for a few days before quitting the old one. Just use some sick days for the old job.The times when employers respected employees and did right them is long gone. So you treat them the same.Bonus: If they really want you to do a bit of work before leaving, you can give them a contractor rate of 250/hr to get it on the weekend.",CheapChallenge,2025-04-07 15:42:50,84,cscareerquestions,t3_1jtnfta,False,
mlvq4kx,"For what it's worth, you are not alone. I unfortunately know several people this has happened to, just since January. Everything looks great until the client goes ""whoops turns out we aren't actually able to grabbing new people right now,"" so the agency and the new hire are both sitting there lost and confused.",spazure,2025-04-07 15:53:10,19,cscareerquestions,t3_1jtnfta,False,
mlvq8fx,Same thing happened to me with Hays,Murky-Sun9552,2025-04-07 15:53:44,16,cscareerquestions,t3_1jtnfta,False,
mlvz1sv,"Ask for your old position back. I disagree that most companies will seek to replace you ASAP especially after one day, but you definitely will be on thin ice. When i've seen it, in my experience you will be cautiously forgiven, but the next time you leave will definitely be the last.If that fails, get a consultation with an attorney. This could be a promissory estoppel type of situation, and has nothing to do with at will employment.",I_Miss_Kate,2025-04-07 16:39:10,16,cscareerquestions,t3_1jtnfta,False,
mlx9ekc,Thanks for naming them (both the contracting/staffing company and the client). This is definitely name-and-shame worthy. Looks like at least one other commenter is saying they experienced something similar with what seems to have been your prospective end client (Hays).,SuhDudeGoBlue,2025-04-07 20:35:20,13,cscareerquestions,t3_1jtnfta,False,
mlx9niy,I had a friend that this exact thing happened to. Get a lawyer asap. My friend is in the final court cases of winning almost 50K in damages,Labbdogg,2025-04-07 20:36:36,10,cscareerquestions,t3_1jtnfta,False,
mmgfjta,"If it weren't for my golden handcuffs, I'd be running back to the completely unexciting insurance industry outfit I last left. Twenty years of tech debt, inept management, and a sprinkling of office politics and bureaucracy. But it was all so understandable and predictable and you could absolutely leave work at work at the end of a normal-length day. If you want a great WLB, avoid sexy things like start-ups and FAANG. Find the most boring outfit you can and become indispensable there.",StolenStutz,2025-04-10 21:04:33,991,cscareerquestions,t3_1jw7yh1,False,
mmgazw0,"NASA. great work/life balance, great people, usually offers stability",xeron72548,2025-04-10 20:42:15,501,cscareerquestions,t3_1jw7yh1,False,
mmggz84,"90% of comments here seem to have missed the ""high barrier of entry"" part lol",AniviaKid32,2025-04-10 21:11:52,267,cscareerquestions,t3_1jw7yh1,False,
mmgn00c,"Chevron was the pinnacle of that - hardly any promotions since nobody leaves (only retires), 4 day work week, no layoffs even during down turns.Things have changed recently though so I dont know if this is still true.",Stubbby,2025-04-10 21:43:26,67,cscareerquestions,t3_1jw7yh1,False,
mmh0t3k,Bloomberg for sure,Frostwizard7987,2025-04-10 23:00:22,63,cscareerquestions,t3_1jw7yh1,False,
mmg95vw,Easily Jane Street. You don’t get fired unless you do no work at all and you are allowed to coast but it’l show on your bonus.,coinbase-discrd-rddt,2025-04-10 20:33:16,363,cscareerquestions,t3_1jw7yh1,False,
mmgl6xt,"Any company whose main product sells by itself...I've worked on large sport orgs ( think of MLB, NFL, MLS and individual teams) and it's easy from a technical standpoint, maybe on special dates is rush hour but offseason is offseason for you as well. The marketing and sales guys were always working overtime hehe",cacahuatez,2025-04-10 21:33:55,80,cscareerquestions,t3_1jw7yh1,False,
mmh2cm3,"One person’s chill is another person’s stress. At Netflix they are well-known for being a high-expectations environment and I’d wager many folks on this sub wouldn’t survive there. But for those who do end up at Netflix, they’re leaving at 5PM just like anywhere else. Same thing with other large companies with high expectations. The difference is their baseline for performance is different.",kevinossia,2025-04-10 23:09:13,66,cscareerquestions,t3_1jw7yh1,False,
mmgbhjb,My buddy just joined HubSpot and it's sleeper ideal for anyone who wants to coast. Remote friendly and turnover is some of the lowest in the industry,Theras,2025-04-10 20:44:38,127,cscareerquestions,t3_1jw7yh1,False,
mmdnm4z,Manager: did you see the new requirements?Dev: yes but ...(List reasons why it's not possible rn)Manager: great let's get it doneDev: ???In my experience non technical managers only understand yes or no answers. You're wasting both of your time if you go into details.,cashdeficiency,2025-04-10 12:43:08,556,cscareerquestions,t3_1jvw3oc,False,
mmdhp9e,"Depends on the individual, company, experience etc. I've seen this behavior because of the reason you mentioned, the developer has said too much in the past and has been burned so they only do exactly what's asked. It's a form of malicious compliance to protect themselves. I've also seen this when the dev is just an ass or is on the spectrum. That also happens.",dkode80,2025-04-10 12:04:10,191,cscareerquestions,t3_1jvw3oc,False,
mmdy3n1,In the first case I sympathize with the dev a bit because you didnt ask the actual question until after he answered. Ive been guilty of this and Ive tried working on it because these leading questions just add a bump in the road of communication. Just ask the question you actually have without asking something that implies it.,Bruce_Millis,2025-04-10 13:44:46,67,cscareerquestions,t3_1jvw3oc,False,
mmdhoda,In my experience answering more of the question than you were asked(especially with non technical people) tends to cause problems,budding_gardener_1,2025-04-10 12:04:00,389,cscareerquestions,t3_1jvw3oc,False,
mmdhqqg,To me it sounds like these people are replying like that to try to avoid doing any extra work that might surface from the answers to these questions. Or they have soft skills issues.,silenceredirectshere,2025-04-10 12:04:28,248,cscareerquestions,t3_1jvw3oc,False,
mmdjcnr,"I can relate to both sides lol. It's so annoying when people don't give the response we're obviously asking for. I try to give my boss clear responses always.That said, I'm paid horribly at my job and whenever I expand too much in my answer, suggest alternatives, explain things I'm suddenly given five new tasks to do which aren't even treated as real work (billable hours). So to avoid being assigned busywork that upper management won't respect anyway, I give minimal but clear and helpful answers. I let my boss decide if he wants me to look into alternatives",baneadu,2025-04-10 12:15:26,30,cscareerquestions,t3_1jvw3oc,False,
mmdhria,"Its usually because they are used to being asked many questions from many different people so they try to answer everyone quickly but correctly and end up being curt.Your first question could have instead been ""Hey the new API isn't working have you already deployed?"" and you would've gotten your answer in one go.The requirement question is hard to say, depends if the developer is even familiar with infrastructure side of things or was told what the scope of the change was.",Laurence-,2025-04-10 12:04:37,62,cscareerquestions,t3_1jvw3oc,False,
mmesd9q,"Good time to point out for juniors that communication skills are just as important as your development skills.I say this as someone who is ND, you're not going to win any battles trying to ""gotcha!"" people by playing word games with them. If you're a pain in the ass to work with nobody's going to want to work with you regardless of how good the work you do is.So everyone saying ""heh, you didn't ask about that"" and feeling smug about it, really take some time to think about your communication skills. The more people have to work to pry information out of you the less reliable you'll come off because it's not going to inspire a lot of confidence from people to know you'll just purposely omit critical information because someone didn't ask about it directly. ESPECIALLY if you're supposed to be the subject matter expert, which assuming you want to move up in seniority at some point you will becomeIn the first example imagine if the guy would've brought up the issue himself and even further if he would have already been taking care of the next steps to fix the issue (even if it's just writing out a story). That's the difference between being a dev people want to work with and someone people don't.",WhompWump,2025-04-10 16:16:31,13,cscareerquestions,t3_1jvw3oc,False,
mmethij,"Why don't they ask better questions? This reminds me of...""Hello""....5 minutes later ""How are you doing today?""...5 minutes later ""I have an issue.""10 minutes later ""There's an active solar flare that just took down all our cloud services""",Schedule_Left,2025-04-10 16:21:57,35,cscareerquestions,t3_1jvw3oc,False,
mme5ptj,"Ask better questions, get better answers",scorb1,2025-04-10 14:24:27,27,cscareerquestions,t3_1jvw3oc,False,
mmtgn0h,Honestly dude? Just start interview prepping right now. Leave that place ASAP.,Easy_Aioli9376,2025-04-13 00:07:49,1086,cscareerquestions,t3_1jxv1dg,False,
mmtjqlk,"Having _rollover_ is what he defines as a failed sprint?In 20 some odd years of doing scrum / agile there has almost always been rollover, on every team.Or you play the stupid game where you take 50% of what you really think you can take, then on the last 2-3 days when you’ve finished everything, start on next sprints work without telling anyone.The _meta_ meta game in scrum is: _It’s all made up and the points don’t matter_. When people are too interested in the *points* meta game it might be time to leave.",rwilcox,2025-04-13 00:27:52,417,cscareerquestions,t3_1jxv1dg,False,
mmthig6,"They are creating a paper trail to avoid legal trouble when they let you go pretty soon. ""Failing a sprint"" is exactly that.Start looking and don't waste additional time/effort trying to ""improve performance"".Obviously, don't quit, and keep working until you are ready to move somewhere else or they let you go.If you want to take your manager out with you, document their failures to support and accommodate your work. Then email it to hr and skip.",robben1234,2025-04-13 00:13:28,161,cscareerquestions,t3_1jxv1dg,False,
mmthccc,I was once told I wasn’t closing enough story points about 3 months into a new job. I immediately started looking for something else.,Eric848448,2025-04-13 00:12:22,112,cscareerquestions,t3_1jxv1dg,False,
mmtjj9s,He’s full of shit. Ain’t no way he didn’t miss the sprint before.,Empty_Geologist9645,2025-04-13 00:26:32,88,cscareerquestions,t3_1jxv1dg,False,
mmtjc3n,"This is a short enough stint that you can easily omit it from a resume, and you’ll get to collect unemployment when they fire you. Don’t fuck it up. This is a gift. They’re not playing any formal PIP fuck-fuck games. They’re just gonna let you go at the end of the next sprint. You really can’t ask for a better way of getting canned these days. Don’t try to save this job. You’ve been there six weeks lmao. No one’s performance is satisfactory six weeks in. All new hires are a net negative at first. They don’t want you to succeed. I guarantee it. The economy is circling the drain. They need to reduce headcount. That’s all this is.Update the resume, apply to jobs now, and blow off any work responsibilities if you have interviews scheduled. This job is cooked. Don’t waste another minute worrying about it.",Unfair_Abalone_2822,2025-04-13 00:25:16,65,cscareerquestions,t3_1jxv1dg,False,
mmtinc3,No life scumbags like this are the worst. I suppose they justify it to themselves by believing that they will receive a massive payout if the startup succeeds? Do y'all have a big equity stake or something?,abluecolor,2025-04-13 00:20:48,50,cscareerquestions,t3_1jxv1dg,False,
mmtmzdy,"Go work at a place where your manager and team sets its developers up for success* Manager lies to you and creates unrealistic deadlines* Code can't be run locally* A 10 year old start up with like 3 engineers and no signs of exit opportunities * No ramp up periodYeah dude, life is too short to deal with this bullshit.",Fun_Highway_8733,2025-04-13 00:49:42,43,cscareerquestions,t3_1jxv1dg,False,
mmtmhjm,"Yes, this is equivalent to a PIP at a startup.No, a 15% pay increase isn't worth working in this environment. I'd start interviewing.",ownhigh,2025-04-13 00:46:22,17,cscareerquestions,t3_1jxv1dg,False,
mmtkgtl,"The concept falling a sprint as a developer is wild. Nah, the management failed to match the planned work to the available resources. They know what you’re capable of, presumably, so it’s on them for assigning tasks to you that you cannot finish within a sprint. The fact that you’re not matching up to the expectations is another matter though. It ain’t gonna be a good relationships for both sides.",trele_morele,2025-04-13 00:32:41,15,cscareerquestions,t3_1jxv1dg,False,
mm0nki5,Time to prove an AI can do his job then.,Kaiju-daddy,2025-04-08 11:36:54,329,cscareerquestions,t3_1ju7asp,False,
mm10k59,"Classic Tobias Lutke. For the past five years, he has been trying to copy everything Facebook does (and for the worse, too) and poisoning the culture of his own company. Bootcamp, stack ranking, AI replacing mid-level developers, and mass layoffs on top from rank and yank are all copied from Facebook, you also get bad culture AND bad pay.",jawohlmeinherr,2025-04-08 13:04:14,85,cscareerquestions,t3_1ju7asp,False,
mlzuoiv,"Shopify was always a scumbag company, so I guess nothing has changed",skwyckl,2025-04-08 06:47:33,373,cscareerquestions,t3_1ju7asp,False,
mm0h8yu,VibeOps. That’s the new buzz word…,SpareIntroduction721,2025-04-08 10:45:35,110,cscareerquestions,t3_1ju7asp,False,
mlzyui2,First companies used AI as an excuse for layoffs now they will use it for overworking people and teams. Expecting AI in the current state to even add momentum to a team like a couple of Senior SDEs is madness. Shopify SDEs need to routinely give excuses that AI generated code is not compiling throwing errors etc. The abstraction we do from just boiler plate code which we could do in 1 day from documentation has made product and CXOs think we are just using AI. They need to do the job of developer for one sprint and then answer.,goonermvp,2025-04-08 07:30:07,145,cscareerquestions,t3_1ju7asp,False,
mlzwjfk,"The onus is on the one declaring tge existence of AI god, not the reverse.",lorefolk,2025-04-08 07:05:17,61,cscareerquestions,t3_1ju7asp,False,
mm00sk9,translation: I guess no more headcounts which means... hiring freeze and probably layoffs soon and a quick Google search on their stock performance for the past year should tell you why,NewChameleon,2025-04-08 07:51:30,51,cscareerquestions,t3_1ju7asp,False,
mm03dya,"At a certain point, I think we need a list of big companies whose leaders have commented on AI performing highly-skilled work in place of human workers, so we know to avoid them like the plague.",EnderMB,2025-04-08 08:20:31,35,cscareerquestions,t3_1ju7asp,False,
mm179v8,"1: we don't have enough people to do our tasks2: allocate some of our people to test the effectiveness of AI to prove to (mis)management's satisfaction that AI cannot do this.2a: note that it may require allocating people who are expert in both the needed task AND AI to determine this3: report to management that AI does not work, AND we are even further beyind than before.",SinsOfTheFether,2025-04-08 13:43:39,7,cscareerquestions,t3_1ju7asp,False,
mm0vtc1,"AI spits out garbage code, it’s not exactly increasing productivity. Sometimes it even lowers productivity. I predominantly ask AI to give me a write up, add a summary to this method, or take a paragraph I wrote and fix my grammatical errors. Half the time I can ask it questions that I would typically google, but then again, reading the docs has proven to be more useful. I could see an AI trained on well written docs to be useful, but half the documentation I’ve seen at companies for internal tooling is far from what I would consider the “professional standard”. They’ll still use AI as an excuse to cut jobs though, guaranteed.",BitSorcerer,2025-04-08 12:34:42,13,cscareerquestions,t3_1ju7asp,False,
mmwjh08,"Unless it's a fortune 500 company, then it shouldn't be too hard to wow the hiring manager *if you can get your foot in the door*. It's like oh my god they're actually human and I can talk to them. Had you just applied online theyd never hear of you.",VigilThicc,2025-04-13 14:51:29,145,cscareerquestions,t3_1jy901d,False,
mmwhnri,Did you ask your friend first whether you could name-drop him?,Kyrthis,2025-04-13 14:41:58,101,cscareerquestions,t3_1jy901d,False,
mmwkjcb,First job is the hardest to get. Almost all my other jobs have been because I knew someone.,IWTLEverything,2025-04-13 14:57:04,41,cscareerquestions,t3_1jy901d,False,
mmx8v2o,In many decades of experience in the private sector my experience has been that employees' kids have a huge leg up on random applicants for securing internships.,debugprint,2025-04-13 17:04:02,14,cscareerquestions,t3_1jy901d,False,
mmwmlci,"yea my dad is a developer, got me my first job. I think this is the reason why in other countries you generally just do the same job as your parents did, so that they can help you. Sucks that it can't work that way in the US because everyone is immigrants starting from nothing. (my dad is first gen developer, so no one helped him. Dunno how he got his first job, should ask some day)",thelastthrowawayleft,2025-04-13 15:07:53,23,cscareerquestions,t3_1jy901d,False,
mmwi3hk,Yeah. It's not what you know but who you know these days.,budding_gardener_1,2025-04-13 14:44:18,12,cscareerquestions,t3_1jy901d,False,
mmwuh4y,This is probably true for everyone in this market right now. The job boards are being flooded by bots and hiring staff aren't super helpful in sorting out resumes using their tools. I wasted 3 weeks just posting to jobs. Recruiters and referrals are where things have been moving for me.,both-shoes-off,2025-04-13 15:49:14,5,cscareerquestions,t3_1jy901d,False,
mmxg6ho,Referrals are where it is at. Our department needs developers at nearly every level and we were told they pulled all outside links. Too much AI spam and candidates from places like North Korea. They would put in a role for a mid level developer and get over 2k applicants in like 5 hours. Nearly all of it was BS. Companies need people but the hiring process is broken on both ends.,danintexas,2025-04-13 17:41:04,4,cscareerquestions,t3_1jy901d,False,
mmwi248,"So your childhood friend is a close friend of the CTO somehow just from being an intern, and you reached out to him directly as opposed to asking your childhood friend to facilitate the connection, and he just accepted it no questions asked that you two are friends?",Jyonnyp,2025-04-13 14:44:06,7,cscareerquestions,t3_1jy901d,False,
mmwr567,Yep. I got my first job at a career fair. Bunch of applications sent out. But the only one I even got a call back on was the one where I met with the hiring managers in-person.,WordWithinTheWord,2025-04-13 15:31:53,2,cscareerquestions,t3_1jy901d,False,
mmfpp0i,Are all of your offers remote? I've been cold applying for months with capital one on my resume and getting very very few callbacks. Maybe I need to add the banner to my LinkedIn too :thinking_face:,AniviaKid32,2025-04-10 18:58:07,20,cscareerquestions,t3_1jw55rp,False,
mmftalj,"Thanks, I'm starting to prep for the job hunt and this is encouraging to read! I have a similar background and experience to yours.",cryptocasual,2025-04-10 19:16:13,11,cscareerquestions,t3_1jw55rp,False,
mmgffbc,Can I get an idea on your stack? It helps to know which stack has the demand to offer you multiple job offers,Independent-Peak-709,2025-04-10 21:03:55,7,cscareerquestions,t3_1jw55rp,False,
mmgpmxh,Nice but that is in no way a long career gap lol,Yehorivka,2025-04-10 21:57:31,13,cscareerquestions,t3_1jw55rp,False,
mmhrc18,"This inspired me and renewed my hope! I hate leetcode questions & also get overly nervous about coding on the spot, and I’ve let that keep me at the same job for perhaps too long. Thank you for sharing!",aboredzillennial,2025-04-11 01:40:15,7,cscareerquestions,t3_1jw55rp,False,
mmh4l3g,145-160k salary at 5YOE is the right attitude. I took a career break at 2.5YOE. and had a base like that in 2016.,Remote-Blackberry-97,2025-04-10 23:22:08,9,cscareerquestions,t3_1jw55rp,False,
mmflmvq,Mind posting an anonymized version of your resume?,Bromoblue,2025-04-10 18:38:10,3,cscareerquestions,t3_1jw55rp,False,
mmih3sq,saving,KarenTheCockpitPilot,2025-04-11 04:40:53,3,cscareerquestions,t3_1jw55rp,False,
mmg9hc9,Congrats on your offers :fire::fire::fire:,Shower_Handel,2025-04-10 20:34:49,5,cscareerquestions,t3_1jw55rp,False,
mmi73vv,Thanks for sharing this!,martabakTelor6250,2025-04-11 03:23:26,2,cscareerquestions,t3_1jw55rp,False,
mltcp9c,"Charitably, because every couple years, I look back at past me and go ""Oh that fool"". Always be learning. Less charitably, because you work at the PIP Factory and so your seniors are trying to save their skins by throwing you under the bus.",poipoipoi_2016,2025-04-07 04:41:28,197,cscareerquestions,t3_1jtd2yt,False,
mltcowz,"One of my friends is a SWE at Amazon right now, and they honestly can’t stand it. They say it’s just constant pressure, unrealistic deadlines, and barely any room to breathe. Like, yeah the pay is good, but it feels like they’re trading their sanity for a paycheck. They’ve been thinking about leaving, but it’s tough with the golden handcuffs situation",AstronautCautious46,2025-04-07 04:41:23,197,cscareerquestions,t3_1jtd2yt,False,
mltqmeg,"Is the nitpicking technically well grounded? Is it making the code or the service or how it operates better? Is it being treated as a sign of poor performance and not as an opportunity for your growth as an engineer? Do you understand the reasoning behind their comments? Do your seniors explain it if you ask? Is it presented professionally? What happens when you deliver questions or feedback on the senior's output? I get that CR comments can be curt and can be nitpicky. That can be part of making the code better. Ours is a world that requires a fair degree of technical precision in our language and in our execution. In of itself, I'd try to be less bothered by CR comments, even the most nitpicky things *so long as they are making the code better*. But ours is also a world of automation. There are technical solutions to make things faster and more objective. I'd suggest If it's simple things that a linter could catch, then perhaps suggest modifying your team's linters to catch that issue. This will make everything more accurate, tighten up CR schedules and whatnot. If these are not things a linter could catch, are they things that can be defined in a coding standard? Is that coding standard documented? If not, you could be the person who writes it down. Are these issues that can be caught in a dryrun? If so, look into your packages' build targets and CRUX rules so that the necessary dryruns run the necessary checks.The other question is to make sure we have a meeting of the minds on the question of design and what each task is actually implementing. Insist on better tickets as input and ask for clarification on requirements early if you're confused. *This is a perfectly valid way to push back earlier in the dev cycle*. Now, if these things are being seen as a sign of poor performance and not an opportunity for you to develop as an engineer, than yeah... This might just be an issue with your team. Or perhaps even your org as a whole. On my team, I'm being measured on the number of revisions each CR takes, and yeah, I'm being driven a bit nuts by that because it destroys a big chunk of the utility of the CR tool to solicit feedback.This is both on you and on your team/org. You have to accept that receiving feedback, even critical feedback, is part of the job. They have to provide that feedback professionally and keep it focused on delivering a better final result rather than stoking someone's ego or gaming CR metrics. Sadly, you can't do all that much about someone in the org thinking that the number of code review revisions says how productive an engineer is and there's only so much you can do about someone who treats the review process as an excuse to go on an ego trip. But you can control how you act. You can ask questions to deepen your understanding of the technical issues at play, you can be the change you want to see on the team when you're the one writing technical comments about other's code or designs, you can seek process improvement about how your deliver code changes.",username_6916,2025-04-07 06:51:57,32,cscareerquestions,t3_1jtd2yt,False,
mltekl3,"I view it like you are training for a road bike race.Every time you ride, you're going to get your ass kicked. The only difference between your first ride, and the later ones, is that you'll be a lot faster on your bike. The feeling, though, is exactly the same.Therefore, figure out ways to handle the stress, invest in hobbies, go to therapy, get a pet, whatever you have to do. Avoiding stress shouldn't be the goal, but when you can learn to deal with it, then you really start to fly.It's okay to be wrong and get called out for it. It's just part of job. Don't beat yourself up for having a bad day: becoming a good dev takes years, and it's not about only being brilliant on your best days, but showing up everyday even when you're at your worst.",justUseAnSvm,2025-04-07 04:57:30,54,cscareerquestions,t3_1jtd2yt,False,
mltk03c,This is so vague it's hard to tell if you're taking reasonable feedback poorly or have a bad dynamic.,Whitchorence,2025-04-07 05:47:44,15,cscareerquestions,t3_1jtd2yt,False,
mltfhcm,"Confidence and feeling picked apart is tricky. It could be a you problem, it could be a them problem, it's probably a bit of both. Is the feedback accurate? Like are they spotting real things to improve? Or are they just being contrary for the sake of being contrary? In either case it doesn't need to bother you. You either accept that you have things to learn and do it, and/or you accept that they suck and ignore them.I'm pretty thorough, and even still, pretty much every PR gets at least a couple nits; that's kind of the whole point. Same with design meetings and such, I expect ideas I present to get challenged, even if just to play devils advocate and think it through. None of that bothers me though, I think my team is great. Confidence has to be internal, or it's very brittle. If you rely on outside markers for confidence, it doesn't matter where you go, you'll feel at least partially the same way because feedback is part of the career.So yeah, Amazon is known for culture issues, and I'm sure there are some problems, there's no harm in applying around to see what happens. But I would also consider therapy for help working on self-confidence and not worrying so much about what people think. You can't outrun self-doubt.",TravelDev,2025-04-07 05:05:32,23,cscareerquestions,t3_1jtd2yt,False,
mlvmnba,Why are people who work at Amazon so weird about just saying they work at Amazon?,messick,2025-04-07 15:35:18,7,cscareerquestions,t3_1jtd2yt,False,
mlve53a,"Take 3 PRs from the last 3 months (1/month) and tally the type of comments you receive.- Comments that could have been linted- True nitpicks like comments and variable names- Mechanical consideration of language features- Logical considerations- Architectural considerations- User Functional considerationsDon't even sweat the first two. I care about variable names and the like for readability, searchability, and needing _others_ to understand what your code is for -- not because I think it's meaningful for your changes to improve the product.If you have a linter you can modify, consider updating it for the Category 1 comments -- link the comment and @ the author to show you're taking them seriously and expanding their influence! They'll love not needing to make that comment again and that you're buying what they're selling.Separate the last 4 groups into ""Meaningful, required follow-up"" and ""More arbitrary/opinionated/resolved-with-discussion"" categories.The second category can usually be pre-worked by writing better PR descriptions, structuring your PRs for readability, writing more/better comments and READMEs, and smaller PRs.Mechanical and Architectural considerations are knowledge gaps. It's an opportunity to learn, don't sweat them -- but do learn from them.Logical and User Functional considerations that required follow-up are the ones worth sweating a little. If you have logical issues, did you have corresponding tests? Did you add test cases after? If you have User Functional issues, were the requirements poorly articulated? Learn from these so you can resolve requirements issues before coding, when you can. Learn from the rest in what's required to enhance your product with a maintainable pattern.For your next PR, take a walk and then pre-review it before publishing. Look for anything worth commenting on in that's familiar from other comments you've received, and fix-up before pushing. Sometimes when a change is a slog we get stuck in ""just trying to finish"" and it ends up taking more iterations than if we step back and give the code a good massage before pushing it.Bonus option: Tally using reviewer initials and take stock in who's leaving you the best comments -- hit them up and thank them! Being taken seriously when I'm reviewing code for others makes me more willing to jump in on other comment threads for them.",PPatBoyd,2025-04-07 14:52:07,7,cscareerquestions,t3_1jtd2yt,False,
mltmp3b,it has been blood bath at rain forest ever since stack ranking has been a feature. they're just trying to cull the new competition.,Qkumbazoo,2025-04-07 06:14:21,8,cscareerquestions,t3_1jtd2yt,False,
mltgzmh,"It's likely mostly a combination of company culture, team culture, and you just genuinely being more junior and having a lot to learn.I will say, though, that if you're a woman, there's a chance that your gender is a part of it too. There are plenty of men who have similar experiences to you (especially at companies like the one you're working for) and plenty of women in tech who don't experience this, but I will say that as a woman in tech myself, your experiences sound similar to what I've been through at multiple companies, and it's been vastly different from a lot of my male friends in tech. I don't really have a solution for that, but it's something to consider.",RepulsiveFish,2025-04-07 05:19:11,12,cscareerquestions,t3_1jtd2yt,False,
mlwxg1o,Can you apply to Pizza Hut instead and fix their god awful website/app?,ZolaThaGod,2025-04-07 19:33:43,542,cscareerquestions,t3_1jttxst,False,
mlx6zz8,"Serious answer: I applied and they rejected me. The interview questions were not bad, mostly easy-medium for onsite, and there was one behavioral round (though the interviewer actually asked me a system design question). The role would've been in Chicago I believe. I think there was a phone screen also but I can't remember 100%, it's been a while.All I'm gonna say is I've had multiple big tech offers and yet McDonald's is the only company that's rejected me 3 times. Is big tech really that prestigious compared to big M? Food for thought.",ImSoRude,2025-04-07 20:23:03,122,cscareerquestions,t3_1jttxst,False,
mlx032h,Just put the fries in the bag bro,blackiechan99,2025-04-07 19:47:23,293,cscareerquestions,t3_1jttxst,False,
mlwzngg,"Take this with a grain of salt, but a friend of mine worked corporate HR for McDonald's, and she said they post corporate positions constantly, but aren't actively interviewing for most of them. They're basically collecting resumes for whenever they do decide to start hiring. If I were you, I would branch out to more than just McDonald's, just in case.",The_Crownless_King,2025-04-07 19:45:09,149,cscareerquestions,t3_1jttxst,False,
mlwx2n4,medium,asapberry,2025-04-07 19:31:47,73,cscareerquestions,t3_1jttxst,False,
mlx4t7m,Never set your sights on a specific company that’s dumb and unlikely it will even work out.,Prize_Response6300,2025-04-07 20:11:54,15,cscareerquestions,t3_1jttxst,False,
mlx0lfj,"I've heard that the interview process for SWE and other roles at corporate are actually kind of difficult. Probably not FAANG levels, but no walk in the park either.",thenewladhere,2025-04-07 19:50:00,14,cscareerquestions,t3_1jttxst,False,
mlx3tyq,"sir, this is a wendy’s.",jcl274,2025-04-07 20:06:51,35,cscareerquestions,t3_1jttxst,False,
mlwzrf2,"Why McDonalds, out of all companies in the world?",skwyckl,2025-04-07 19:45:43,19,cscareerquestions,t3_1jttxst,False,
mlxeg8n,You can always start flipping burgers and work your way up the career ladder.,Great_Attitude_8985,2025-04-07 21:01:31,9,cscareerquestions,t3_1jttxst,False,
mm6sey3,"L3 at Google is entry level right? Manager is equivalent to l6, so it going to be quite hard for you to transition to manager as you will need three promotions first.Google is known for slow promotions.—-Unless you mean L4= SWE III?Then you’d need two promotions.",IllegalGrapefruit,2025-04-09 10:28:54,249,cscareerquestions,t3_1jv2d9b,False,
mm6s7aw,"Not about Google, but I down leveled from management to high level IC for a company that I thought would be worth it,  with what I believed were strong assurances that I would be back in leadership soon after, and it didn't work out that way. I strongly regret doing that. It isn't just in the IC time itself, it's in the time that would have counted as experience towards your seniority as a manager and future leadership roles. The setback compounds in ways that you can still count years later.Google is Google. If you have an actual offer, I would say least consider it. But today-me would warn back then me that you should not voluntarily downlevel from manager to IC unless you're prepared to be an IC for the rest of your career.",Thoguth,2025-04-09 10:26:58,64,cscareerquestions,t3_1jv2d9b,False,
mm7ctl3,"I've been at Google for a decade.L3 -> L4 remains pretty straightforward, especially if you have prior experience. Write some design docs and work independently on a few projects that last for more than a quarter that meaningfully land and you've basically hit all the requirements. You could get delayed by six months because of budget stuff but in general it's not bad. Promotions to L5 and especially L6+ have become *way* messier in the past two years. Strict budgets and a requirement for ""business need"" means that a lot of qualified people are being rejected for these promos, creating a glut in the next cycle and ultimately stalling a lot of careers. One piece of good news is that you can stay at L4 forever at Google without a problem, so getting over this hurdle isn't mandatory.A lot of managers at Google were originally engineers first. Usually the path is getting promoted to L5 or L6 first, demonstrating effective leadership and communication skills, and then having a nearby opening for a manager position that you can fill. In the past this used to be easier because headcount growth meant that ""we need a new manager to deal with the five new people we are hiring"" was pretty common. Now the most likely path is that a nearby manager quits and you are available to replace them.This could conceivably change in the future, but from the inside the cultural change at Google feels permanent (at least while Sundar is CEO). 10 years of experience and getting a L3 offer seems odd. I'd expect 10YOE to get interviewed for L5 and potentially downleveled to L4, but it sounds like maybe you were interviewed at L4 and did so-so on the interviews so you got downleveled to L3.",UncleMeat11,2025-04-09 12:55:58,56,cscareerquestions,t3_1jv2d9b,False,
mm7x2cs,"SW3 (L4) or L3?I’m a manager at Google so here are my two cents. Generally I’m almost always against mode leveling (especially senior to non-senior or staff to senior) because it’s so hard to make it up.However, I think in this case if you can make up the money difference, your current company isn’t high prestige, job stability isn’t great there etc, It might be worth at least considering though it sounds like they’re trying to drop you two levels rather than one. Sounds a bit crazy to me but then again Google is barely interviewing or hiring so if you get an offer these days it’s so rare it may be difficult to pass up.Specifically to your question:The L3 level is really entry level or a couple years at a small company. Again, I’m really surprised that’s what they’re offering but I guess it’s due to low hiring. As a result, the expectation to make it to L4 is there and it can be done fairly fast. Essentially L3 separated the new employees who are really struggling and need supervision from folks that can get a task that could take a couple months within a larger project, plan and document, launch it. Etc. it’s about independence. Doubt you’d have a problem thereL4 to L5 (senior) is much more tricky due to needing the right project, having leadership, quotas, etc, but I’ve seen it done in as low as 2-3 years from L3. As long as you show you can lead a project managers will give you a chance as soon as they can. These promotions are in org so if leadership perceives you as a lead that got downleveled you’d get more opportunitiesFeel free to PM if you have questions",slpgh,2025-04-09 14:44:36,12,cscareerquestions,t3_1jv2d9b,False,
mm6tjxa,"If it fits your goals (more money, more hands-on work), then don't get caught on vanity aspects like title. Some companies offer higher title for lower money than this L3. Management at Google often opens up at L6, in exceptional cases in L5. But the general trends point towards more focus on IC work, so it could take some years to get a manager role there.",LogicRaven_,2025-04-09 10:39:10,19,cscareerquestions,t3_1jv2d9b,False,
mm6u1hj,"Changing lanes from manager to IC is a different job role, so that's significant: I would be reluctant to do that unless it's specifically what you want. In general, I say you should follow the money: if it's a big enough raise, take the downlevel. But this isn't a downlevel: it's a different role. Be prepared to spend \~3 years (I made that up but it's probably about right) working back to the manager side of the fence, if that's where you want to be.",olddev-jobhunt,2025-04-09 10:43:26,8,cscareerquestions,t3_1jv2d9b,False,
mm8c615,"How long have you been a manager? I know you don't instantly lose your tech skills, but they do dull. I've been a manager for 5 years and I know if I had to suddenly perform like I did at my peak as a dev (was a dev for 15 years before becoming a manager), I would struggle. Probably even more so in a FAANG environment with lots of pressure.",Smurph269,2025-04-09 15:58:54,3,cscareerquestions,t3_1jv2d9b,False,
mm77oqa,"Do NOT take this offer if you're concerned with getting to a managerial position any time soon!I'm an L5 at G, and from my experience, L4 and L3 SWE work almost interchangeable. You may feel out of place with near fresh college grads operating at the same level as you. Considering your listed reasons for leaving, I'd suggest grinding for at least L5 positions or higher.I think with 10 years of experience, putting L4 at G on your resume would be setting it back quite a bit. Promotions can be challenging depending on your manager and org politics.",Toasted_FlapJacks,2025-04-09 12:24:15,4,cscareerquestions,t3_1jv2d9b,False,
mm7pzh4,"I wouldn't necessarily call that a downlevel. A downlevel is staying within the same role.The reason downleveling isn't normally a big deal is because all companies treat titles differently. So going from a Senior SWE at Company A to a SWE 2 at Company B isn't some sort of demotion, it's just Company B saying according to their internal titles you fall under a SWE 2. You're still a SWE at the end of the day, doing the same SWE stuff, just with a different arbitrary title next to your name. Sure there's traditionally some difference between a Senior SWE and a non-Senior SWE, but what Company B is communicating is you don't meet that difference at *their* company, so still no change.But what you're describing is a full on role change. You are going from being a manager, to being a SWE. The roles are inherently different.I don't know anything about Google's internal processes so can't comment on that, but if your career goal is to be a manager, changing from a manager role down to a SWE role is not going to be beneficial, and if anything it'll look bad on your resume. Sure Google has massive hiring prestige, but they hired you as a SWE, not a manager. Who knows how long it'll take before Google puts you into a management role. Who knows if they'll *ever* put you into a management role.If being a manager is your goal, I would continue looking until I found a manager role.Just like if being a SWE was my goal, and a company offered me an IT position, I would keep looking until I found a SWE role.",SouredRamen,2025-04-09 14:08:53,3,cscareerquestions,t3_1jv2d9b,False,
mm7imfb,10 YOE for L4?Yeah…Expect L5 in around 5 years. Unless you are really lucky and got a really good promo project.That being said L4 can be terminal. You don’t need to get promoted.,juwxso,2025-04-09 13:29:33,2,cscareerquestions,t3_1jv2d9b,False,
mmhfw4w,"I work at a boring tech company. It’s slow paced, not much context switching, lenient deadlines, nice coworkers, and stable employment. I’m stressed from the boredom.",xlb250,2025-04-11 00:29:24,225,cscareerquestions,t3_1jwcsjv,False,
mmhj7jf,"Boring government job here, trying to get a boring government tech job.",Shnkleesh,2025-04-11 00:49:43,32,cscareerquestions,t3_1jwcsjv,False,
mmhgexg,"I would agree with your anecdotal data as well.The people I know at FAANG / Big Tech in general are putting in 40-50+ hours a week and constantly stressed.I'm currently at an insurance company, things are very slow and stable here. I can quite easily get away with putting in 5-10 hours per week and no one bats an eye.That being said, there is still value in FAANG.. it pays higher, is more prestigious and can open up more doors for you.I can almost guarantee I will be more stressed and way less happy at FAANG than my current company, but despite that, I am still aiming for it soon... just so I can cross it off my list and I don't regret it later on when I'm 80 or something lol. Of course it's not as easy as saying ""I want to join FAANG"", tons of preparation and luck involved too.. but I'm gonna keep trying until I hopefully get it.I think at the end of the day, there is no right or wrong. You just have to figure out what you want.. and a good way to figure it out is to try different kinds of companies and see what you enjoy.",Easy_Aioli9376,2025-04-11 00:32:38,97,cscareerquestions,t3_1jwcsjv,False,
mmhjwul,Boring WFH real estate company Tomorrow I’m hosting the team bonding meeting where we play skribble.io for an hour and shoot the shit,cmockett,2025-04-11 00:54:01,20,cscareerquestions,t3_1jwcsjv,False,
mmhtbx0,"I worked in one company like that before going into tech startups. If you try to build your career through those companies, the lack of progress in pay and promotion will demoralize you. Plus the slowness will eat a young person alive when they believe they were going to ""make a difference."" My experience, after several years of dealing with VC tech startup culture, that demoralizing slow pace looked pretty good.",LivingCourage4329,2025-04-11 01:52:42,18,cscareerquestions,t3_1jwcsjv,False,
mmhjnr2,"I posted this in another thread, but it rings true here.Believe it or not, working for an insurance company has been a wonderful change of pace for me. Sure, I could definitely make more elsewhere, but the work/life balance promoted from the top on down has just been blissful. Full work from home too.No long hours, no horribly tight deadlines, good benefits, hell, even a pension on top of a 401k. I'm at a point in my life where I don't need to prove myself to my psyche or the world anymore, I'm simply trusted to get the job done. My burnout is gone, and I get to spend time with my family, which to me, is everything.",OBI_WAN_TECHNOBI,2025-04-11 00:52:28,44,cscareerquestions,t3_1jwcsjv,False,
mmhdfgz,Boring non-FAANG Fortune 25 here. Shhhhhhhhhh... Don't let the secret out.,TRPSenpai,2025-04-11 00:14:25,53,cscareerquestions,t3_1jwcsjv,False,
mmhhoji,Insurance . I enjoy development and SDLC in general - in doesn’t mean I don’t turn it off when I leave the office though.,MonotoneTanner,2025-04-11 00:40:23,9,cscareerquestions,t3_1jwcsjv,False,
mmhmvmg,"Yes. Its a name anyone reading this knows but it's not ""tech"" and i absolutely love it. I get treated like royalty, I work remote wherever I want (6 locations and counting!), I can get anything expensed, i love my coworkers, I stop working at 5pm pst sharp and have an amazing work life balance. We also can use the latest technology and I'm often given time and resources for refactors and upgrades. It's a dream. And I'm paid very very close to my colleagues that are in faang. I've lost coworkers to faang and have seem them come back. We get all the same benefits without the stress and deadlines.",FoxyBrotha,2025-04-11 01:12:25,8,cscareerquestions,t3_1jwcsjv,False,
mmhjf2p,I mean… yes? It’s definitely a trade off. Money now vs relaxing life and getting by.,iPissVelvet,2025-04-11 00:51:01,7,cscareerquestions,t3_1jwcsjv,False,
mm6i03q,Proud of you dude.,_nightgoat,2025-04-09 08:41:45,16,cscareerquestions,t3_1juzevp,False,
mm6aidq,What made the difference ? Portfolio or leet code ? Trying to sew what to give more time too.,Plat_A_Puss,2025-04-09 07:20:13,20,cscareerquestions,t3_1juzevp,False,
mm6ut5l,Sometimes the longest journeys lead to the most rewarding destinations—your persistence just paid off big time.,QuantumTechie,2025-04-09 10:50:03,7,cscareerquestions,t3_1juzevp,False,
mm77g6w,Massive respect. Two years of pushing through that kind of weight takes real grit. Thanks for sharing this—gives hope to folks still in the grind,BizznectApp,2025-04-09 12:22:43,7,cscareerquestions,t3_1juzevp,False,
mm6bhvo,"Great one mate congrats, Even I graduated in May 2023 done courses related to software development then moved on with data analytics due to high volume of applications for SDE roles been applying since two years not even getting interview calls, Its so frustrating!",Spiritual-Lie-8618,2025-04-09 07:30:47,2,cscareerquestions,t3_1juzevp,False,
mm78dnv,Congratulations dude and all the best in your new position!,Weed_xxx_Blazer,2025-04-09 12:28:43,2,cscareerquestions,t3_1juzevp,False,
mm6ab2q,So happy for you. It’s a great feeling and only wish you the best,Pringles_242,2025-04-09 07:18:03,1,cscareerquestions,t3_1juzevp,False,
mm7gsys,Congrats! Happy for you and I'm proud of your perseverance. Share what made the difference please.,Klinging-on,2025-04-09 13:19:15,1,cscareerquestions,t3_1juzevp,False,
mm7vv6g,What languages are you needing for the position? What was the technical like? Backend/frontend or fullstack? Feels like I can't get any interviews,KaneSpectreDraken,2025-04-09 14:38:42,1,cscareerquestions,t3_1juzevp,False,
mmhorlj,"I was like you, kind of freaking out because didn’t have the best publication record and just 1 lousy internship and got my PhD in CS from like a T100 school. Still was able to land a senior role at a big tech company (FAANG adjacent). I’m sure you’ll be fine. Took less than 2 months of serious job hunting to land the offer.",NeedingMorePoints,2025-04-11 01:24:17,67,cscareerquestions,t3_1jwddf8,False,
mmhjki3,"1 year should still give you enough time to do at least one internship, no?",lhorie,2025-04-11 00:51:56,123,cscareerquestions,t3_1jwddf8,False,
mmhrlwj,You have a PHD always remember that,ZainFa4,2025-04-11 01:41:57,37,cscareerquestions,t3_1jwddf8,False,
mmhpw0i,Yooo why are some of y’all hostile towards OP! if you can’t help just keep quiet,blazkoblaz,2025-04-11 01:31:15,70,cscareerquestions,t3_1jwddf8,False,
mmi3yl3,Entry level PhD roles exist just harder to come by. Don’t feel bad about applying to junior engineer roles to get your foot in the door.,posthubris,2025-04-11 03:01:13,17,cscareerquestions,t3_1jwddf8,False,
mmhj3gt,200 applications across two summers? You need to pump those numbers x5.,cashfile,2025-04-11 00:49:02,45,cscareerquestions,t3_1jwddf8,False,
mmhv1x0,"Apply to USPTO, maybe as a patent examiner?",Ok_Course_1701,2025-04-11 02:03:26,8,cscareerquestions,t3_1jwddf8,False,
mmhu456,"See if your professors have connections. At my company one of the SVP was also a cs professor at a well known university. Everyone who was in his lab doing a PhD was offered senior engineering roles within the company because he vouched for all of them (seeing them work, they do deserve it).",honey1337,2025-04-11 01:57:33,9,cscareerquestions,t3_1jwddf8,False,
mmi46qn,"Try to leverage your connection with previous members of your lab. Connections are a huge part of job hunting unfortunately. Sorta disagree with the “you don’t need this if you got a phd” sentiment tho. I do think getting an internship would be very valuable for you to get developer skills, even if you end up in a more research role. When we hire, we see way too many new phd grads who don’t have proper engineering skills, so we have to reject them. I had the same problem coming out of my program. Ended up doing pure software development for a few years and tested the market again, found myself to be much more competitive, even though I was looking for a research role.",klzzzzzzzzz,2025-04-11 03:02:47,5,cscareerquestions,t3_1jwddf8,False,
mmk777r,"Teaching professors in computer science are actually in pretty high demand right now. If industry doesn’t work out, becoming a teaching professor is a solid option, imo. Sure, the pay isn’t amazing, but the hours are pretty very reasonable — and you get the whole summer off if that’s something you’re into.",hangryforpeace_,2025-04-11 13:36:48,5,cscareerquestions,t3_1jwddf8,False,
mm46d57,"I was at Amazon and was put on the Focus plan which is right before getting PIP'd. I hopped to Google across the street and life has been infinitely better in every single way regarding work: pay, WLB, culture etc. I still have the ""trauma"" from going through that process, so whenever I'm given negative feedback my brain goes into overdrive, but I got promoted while at Google so I guess I'm not actually as bad as I once thought.",TonyTheEvil,2025-04-08 22:35:54,238,cscareerquestions,t3_1jupr7r,False,
mm4b5tk,"My dipshit CTO fucked my team over by moving every person who was new to my company to the same team, including my micro managing manager. None of the 6 of us had been there for more than 6 months.I ended up getting a PIP in March of 2024 then studied my ass off for 2.5 weeks and got a new offer for the same pay and a 30k sign on bonus. The next 4 weeks was just me promising to do work and then not doing anything and playing video games.The two months pip severance and the 30k sign on bonus hit my bank account in the same week.This is all to say sometimes you get pip'd because the people above you need to save face or they don't know how to build engineering teams. Fuck all that, move into the next thing.",Fun_Highway_8733,2025-04-08 23:03:05,79,cscareerquestions,t3_1jupr7r,False,
mm43fr1,"Well I got pipped, crushed the pip, and then my manager got fired afterwards. It's been better after my manager got fired, because the manager was a total power tripping ass. But unfortunately my reputation at the company has been tarnished due to it so I'm currently on the job hunt. Also, once you've been pipped (regardless of if it was justified/beaten/etc), the company doesn't have to pip you again to get rid of you - they can simply cut you off at any time and you likely have a target on your back for layoffs. So it's best to start looking around.",MrMoonrocks,2025-04-08 22:19:16,191,cscareerquestions,t3_1jupr7r,False,
mm4egpv,"Your manager may not be acting in good faith. Generally, getting the lowest rating in a cycle will get you terminated within a few weeks. They usually won't tell you that you will be let go until a surprise 1:1 pops up.Prepare for the worst.",jawohlmeinherr,2025-04-08 23:21:43,19,cscareerquestions,t3_1jupr7r,False,
mm42xni,"Maybe I’m struggling with something but why are you worried about out getting piped? The global economy is in the shitter and most companies aren’t really giving much more money right now. Have you already been pipped? You say you’re a new grad and you have 2.5 yoe so that doesn’t really add up. Most people don’t get promoted in their first year or two on the job, it’s not something to worry about and you shouldn’t feel pressure comparing yourself to others yet.",HauntingAd5380,2025-04-08 22:16:29,43,cscareerquestions,t3_1jupr7r,False,
mm4hrxv,The first few times sucks - then you can just laugh in their face the next time it happens after you get over the initial trauma - people are assholes and truly good managers are rare - most companies like to hire crackers to manage people out rather than strengthen their weak links like true leaders,Exotic_eminence,2025-04-08 23:40:23,17,cscareerquestions,t3_1jupr7r,False,
mm50di0,"My manager tried to PIP me, but I keep transcripts and notes from all our conversations so I demanded a retraction and sent a complaint to the ethics department with all my evidence and testimonials from coworkers. They ended up having to apologize and give me a raise & bonus at year end review (which my manager was not allowed to provide). Once that check cleared I made all my documents public on the company share drive, quit via a short email (HR only, no two week notice), and bounced to a new job with a promoted title and 25k/year bump. PIPs are bullshit and I was very lucky to have great relationships across the company with people more than willing to send actual copies of their year end feedback, provide quant metrics around my performance, and morally support me.",gloopthereitis,2025-04-09 01:29:19,16,cscareerquestions,t3_1jupr7r,False,
mm44um7,Pip means not welcome https://imgur.com/a/CE7vTqQ,Few-Conversation7144,2025-04-08 22:27:12,10,cscareerquestions,t3_1jupr7r,False,
mm61u8z,"I got a formal email from my manager that he has concerns about my output. A week later I got a mail from Kaiser that my health insurance was coming to an end. Two weeks later I go put on PIP (HR ambush the Zoom call). Reading on Reddit everyone said it was a uphill battle. So I took the severance and started interviewing. This was around the early 20s so everyone was hiring and I actually got a new gig right after 3 weeks. I've been interviewing lately and I had one recruiter asking me about my short stay. I just lied and said my current company was offering me something else. That being said, it's hard for me to trust my co-workers and I get anxious at work, easily. Getting PIP was a nightmare because I didn't really know how I was going to pay for my apartment.",qrcode23,2025-04-09 05:53:13,9,cscareerquestions,t3_1jupr7r,False,
mm48bro,"Listen to ""Move Along"" by All-American Rejects and ""Drive"" by Incubus.",jfcarr,2025-04-08 22:47:10,8,cscareerquestions,t3_1jupr7r,False,
mm5v7l8,I would (and do on my spare time) but not on making ads more efficient ;),WebMaxF0x,2025-04-09 04:55:12,375,cscareerquestions,t3_1juxs4y,False,
mm617jm,"If it wasn't for money?I would have done it because I had a legitimate interest in it at first, but I also would have quit somewhere around year 2/3. Academically CS is fun, but in corporate world software is a soul sucking shit show.",LivingCourage4329,2025-04-09 05:47:24,277,cscareerquestions,t3_1juxs4y,False,
mm5vnbr,My biggest issue is corporate culture. I live in Europe so I earn peanuts anyway lol,swollen_foreskin,2025-04-09 04:58:49,242,cscareerquestions,t3_1juxs4y,False,
mm5vfr2,"Yes, being a SWE is fun overall. I made 110K with 15 YOE at my last job working on safety critical medical devices. I'm not here for the money, lol.",diablo1128,2025-04-09 04:57:05,103,cscareerquestions,t3_1juxs4y,False,
mm5wp32,Re-frame the question. What is the minimum pay you need to continue as a software engineer ?,pacman2081,2025-04-09 05:07:40,58,cscareerquestions,t3_1juxs4y,False,
mm5zr72,"If money were no issue, I would work part time in something music related. Probably events, own a music venue, maybe a label, but hey. Reality says I have to Stanley Parable this life.",IEnumerable661,2025-04-09 05:34:16,16,cscareerquestions,t3_1juxs4y,False,
mm5vbmj,depends on what are my alternatives,NewChameleon,2025-04-09 04:56:09,32,cscareerquestions,t3_1juxs4y,False,
mm5xvxq,When I first started coding in highschool like 15 years ago I learned it just tickles a part of my brain that gives me joy. I like puzzles. Money is just a bonus.,OishiiBoba,2025-04-09 05:17:48,23,cscareerquestions,t3_1juxs4y,False,
mm61zpp,"I fucking love it, and I feel very lucky to truly love my job as well. I used to be a concert violinist, and during the pandemic I switched careers to software. I will never look back, and I’m excited to see where this life takes me. I hope everyone out there that feels sad doing software either finds a way to transition out, or is able to have a job that feels rewarding.",CHEESE_SCENTED_BAWLS,2025-04-09 05:54:39,23,cscareerquestions,t3_1juxs4y,False,
mm5ya9s,I love the field. I would never recommend anybody who dislikes it to do it.,Fragrant_Stuff_9714,2025-04-09 05:21:14,16,cscareerquestions,t3_1juxs4y,False,
mmpesjm,"Last time I checked I was a top 1% contributor still on SO. It's very misleading, as I joined during the beta, asked some popular/stupid questions, and got in early doors on some of the easier answers for popular stacks.This had been called out from the start. Many suggested that to follow Jeff Atwood's initial vision for SO the site would need to reduce duplication not through closing, but through merging content, and producing canonical content across multiple questions. These problems had dragged on for over a decade, and ultimately SO never learned from them. They focused more on power users over the overall vision.Alongside this, internal changes mean that Jeff left, eventually Joel left (IIRC?), the dev days died, and the reputation the site had kept dying out.I don't think it'll die, but it needs very strong leadership to become relevant again.",EnderMB,2025-04-12 09:03:32,165,cscareerquestions,t3_1jxczax,False,
mmpfstf,"Yes.They refuse to address the problems with the community and they were acquired by Private Equity some time ago - which generally means they don’t see room for growth anymore, just to squeeze as much as possible while going down.If they improved their scoring system, reduced toxic moderation and invested in the  community aspect, maybe they would stay afloat, but I doubt it’ll happen",iamgrzegorz,2025-04-12 09:14:14,120,cscareerquestions,t3_1jxczax,False,
mmpem6l,"StackOverflow has been declining for a while, but it seems like the rise of LLMs is what will make it disappear as a question-and-answer board. It's going to remain a valuable resource for a long time, but it will become read-onlyTheir guidelines on asking questions make it so that almost no new questions are allowed. Almost every meaningful question has already been asked, so any new questions just get referred to a previous question and closed as duplicate. The only questions that don't get closed are typically about niche technologies that not a lot of people engage withPeople still have questions and even if it wasn't allowed they could often get some kind of answer from StackOverflow. However, this has changed too. With LLMs, people have a better alternative to get answers to their programming questions, so they will use that instead",Loves_Poetry,2025-04-12 09:01:40,73,cscareerquestions,t3_1jxczax,False,
mmqcwrk,"If you ask questions related to newer versions of software they are going LLM going to spit out lies and follow up questions make them to go round and round. This happened to me related to nextjs questions.These days I would much prefer something like Stackoverflow than LLMs who spits land mines (sophisticated lies) in their texts for us to figure out. Yes, indeed there is community problem at SO, which could be fixed easily with updates.",nerdy_adventurer,2025-04-12 13:45:12,15,cscareerquestions,t3_1jxczax,False,
mmqfuc3,"Over the past month or two I've had a ChatGPT tab open the entire time I'm at work. I can ask it basic language questions, to library questions like ""How do I set up dependency injection with this library"", and ChatGPT will not only answer my question, but give me simple coding examples. I was even able to ask it, ""why is it bad to use dependency injection in this scenario"" and ChatGPT gave me an explanation of why it's frowned upon in my current situation.If I were to ask those questions on StackOverflow, I'd either have someone say ""read this long document"", have a mod close my question and point to another question that kinda answers my question but doesn't really, or, in the best case scenario, have to wait for someone to answer. ChatGPT is a better tool for me as a developer and I cannot see myself going back to StackOverflow, aside from the fact that I still need to retrain myself to go to ChatGPT instead of going to Google and clicking on the first StackOverflow link.",a_masculine_squirrel,2025-04-12 14:01:53,20,cscareerquestions,t3_1jxczax,False,
mmrf661,"I have come across legitimate problems that have no answers on SO. When I found a solution to these, my attempts to share the knowledge by opening a question and answering it get shut off immediately. This is providing SO free high quality data and service but the mods are so incomprehensible and anti-social you can’t get anywhere as a new comer. They then are like “so what if you solved this problem, nobody cares”. I think I have a few warnings for immediate bans for my very first questions or comments in some of the substacks (this was years ago). Now I rarely ever use SO since we have LLMs. LLM ain’t going to ban or threaten you if you don’t word your question perfectly etc. I hope SO goes down in flames.",jacquesroland,2025-04-12 17:09:46,10,cscareerquestions,t3_1jxczax,False,
mmpofrn,"SO needs to be alive, we need it. But they really have to think of something to become relevant again.And in my opinion they need to remove the downvotes. Posts are getting downvoted because they are ""duplicate"". Duplication shouldn't be an issue.People are making an effort to mark something as duplicate but they don't answer the question. It's such a waste of time.Duplication should be replaced with a ""related to"" functionality.SO feels the same as it did the first time I visited in 2010.",valkon_gr,2025-04-12 10:44:10,22,cscareerquestions,t3_1jxczax,False,
mmpph1g,"SO has been like this for 15 years. It's a good resource, but the community sucks, particularly the top users. I've found friendlier communities for programming help.",myevillaugh,2025-04-12 10:53:56,14,cscareerquestions,t3_1jxczax,False,
mmpuo35,U need to put female pics to avoid getting flamed when asking a potentially duplicate qns,alpha_epsilion,2025-04-12 11:39:28,9,cscareerquestions,t3_1jxczax,False,
mmqjhch,ChatGPT never says “I’m not going to do your homework for you. What have you tried?”,nsxwolf,2025-04-12 14:22:16,8,cscareerquestions,t3_1jxczax,False,
mm18r5f,> We,wubrgess,2025-04-08 13:51:54,93,cscareerquestions,t3_1jue1xp,False,
mm1sm5d,Yassss grl,monkeycycling,2025-04-08 15:33:11,36,cscareerquestions,t3_1jue1xp,False,
mm7i97p,Ayo! So glad for your girl :heart_hands_light_skin_tone:,Gunpla_Goddess,2025-04-09 13:27:28,7,cscareerquestions,t3_1jue1xp,False,
mm1ch72,Hell yeah! Now refer me plz :skull:,CeramicDrip,2025-04-08 14:11:54,18,cscareerquestions,t3_1jue1xp,False,
mm5b6q2,Good job bro!!!,Substantial-Elk4531,2025-04-09 02:32:32,7,cscareerquestions,t3_1jue1xp,False,
mmb5slo,Yay! Makes me so happy to see women success stories in this sub! Congrats :partying_face:,sctrlk,2025-04-10 00:41:14,2,cscareerquestions,t3_1jue1xp,False,
mm1plkz,Congrats!,MissyxAlli,2025-04-08 15:18:15,3,cscareerquestions,t3_1jue1xp,False,
mm3zgs2,TC?,anythingall,2025-04-08 21:57:25,3,cscareerquestions,t3_1jue1xp,False,
mm5oyvp,Congratulations!,Mysterious-Essay-860,2025-04-09 04:05:53,1,cscareerquestions,t3_1jue1xp,False,
mmmqz7k,Great job man!,BobbyShmurdarIsInnoc,2025-04-11 21:17:42,1,cscareerquestions,t3_1jue1xp,False,
mlzt0pp,"I spent the majority of the first 12 years of my career at a pretty small company working a dead end job for not a lot of money. My main role was that I built the installation for a really complex app. You know, the Next >, Next >, Next > app you use when you install something on Windows? That was me. In 2011 a FAANG company reached out to me and said they were going to be my town and asked if I wanted to interview. We were starting to hire at my company and I had no idea how to run a tech interview, so I said yes assuming I could steal their ideas. To my surprise, they offered me a job. It was a mid level SDE position. In my role at my company I was a team lead, but the pay was so much more that I decided to take it and try to stay for 2 years. It involved a relocation I wasn't interested in, but again. Way more money. Well, I'm still here 13 years later. I've moved through the ranks well and now lead an organization. I've now interviewed for other companies and almost always get turned down or get offered a role way below my abilities or comp that isn't anywhere close.The difference? I think largely luck. There's so many things that can go right or wrong in this silly process that we use. And unfortunately, right this instant, luck is not on your side. There are fewer jobs than there are new grads who want them. It'll likely turn around, but right now your best bet is to study hard, leet code, and get as many at bats as you can manage. Take interviews, big and small. Get better at it. Remember: You don't necessarily need to be a great engineer, you need to be a good interview. The venn diagram of those two things often overlap, but its certainly not 1 to 1.Dive into your current job. You'll get good examples that you can use for the behavioral assessments. Also: If you didn't get a return offer, what was the reason? Focus on that area as much as you can.",Lotan,2025-04-08 06:32:00,177,cscareerquestions,t3_1ju6vb5,False,
mlzrloa,90% LuckI know brilliant people who are unemployed or at mediocre companies,bravelogitex,2025-04-08 06:19:40,177,cscareerquestions,t3_1ju6vb5,False,
mlzrncm,"This is your first job and you are already talking about ""getting stuck?""The difference is to keep trying. A lot of people get discouraged when they face rejection and it feels like their effort was for nothing.",D4ngerD4nger,2025-04-08 06:20:04,50,cscareerquestions,t3_1ju6vb5,False,
mlzrlsh,"Man I don't know which big tech firm has people full of hope, these days everyone is just depressed.",xxgetrektxx2,2025-04-08 06:19:42,35,cscareerquestions,t3_1ju6vb5,False,
mm1glb8,"You have to really want it.The abusive interviewing practices of the ""top"" companies exist to select for people who _want to work there_ the most. Forcing you to practice leetcode is the point. Forcing you to memorize whatever their goofy non-code interview format is (Amazon's leadership principles etc) is the point.Plus those companies are, to a growing extent, abandoning remote work. So now you also need to be willing to move to the Bay or Seattle or whatever.And then once you're there, the hoop-jumping doesn't stop. You have to ""show your impact"". You have to optimize everything you do for that promotion you want so bad.And all of this has to be placed above any ethical objections you might have (_cough_ Facebook).So if you want it, go get it. The formula is pretty well known at this point.",angrynoah,2025-04-08 14:33:21,7,cscareerquestions,t3_1ju6vb5,False,
mm08a1a,"what you complain is the culture. sure, banks are not the most innovative places. I have been in several type of companies. Unicorn, bank, defense, telco... Each has a different culture and because of that different people too. Life's different for someone-  in 20s from 3rd world country who's after citizenship of EU or USA-  in 30s who has to look after parents or take care of them because of illness etc-  who pays mortgage with a wife and children-  who wants to take care of their children and spend their time with them-  who values WLB and likes to spend time on hobbies-  who does a side hustle like a mobile game etc.Essentially, it all boils down to your savings and what kind of risks you re willing to take. There is no nobility in making Mark Zuckerberg or Jeff Bezos richer than they already are. The people you see are probably valuing security over risks and challenges. Staying somewhere for 10 years is another risk, but they are probably not worried about that when they see those old timers with 25+ years.When you experience a bad job, or a layoff, or some health or family issues, you value a stable but boring place like a bank unless you have other income.Staying somewhere for 10 years will probably not be that good if you worked with the same stack and did same things every day. Spending 3-5 years on a first job is fine. The market is good for seniors but not so much for juniors. you gotta pay your dues first no matter where and make a move when you no longer take the bullshit in your current place, be it you getting underpaid, bad management, workload, or soulless teammates",2pakalypse,2025-04-08 09:15:27,14,cscareerquestions,t3_1ju6vb5,False,
mlzry7o,"Tje strength of your network and how many people you can quickly get on the phone with, are influential and who can vouch for you. I think that's all.",designgirl001,2025-04-08 06:22:40,36,cscareerquestions,t3_1ju6vb5,False,
mm1ljzu,"As other say mix of luck this and thatHowever, on average across all the people I have met in teams over 10 companies, I'd say current FAANG teammates are much sharper on average and much more detailed, helpful, positive, speedy",fostadosta,2025-04-08 14:58:14,6,cscareerquestions,t3_1ju6vb5,False,
mm0wo3h,"Location. ""Better"" companies have offices in tech hubs, with 49% of big tech positions in the San Francisco Bay Area.There are a few high paying companies with a lot of remote positions like Atlassian and MongoDB although they're the exception.",drew_eckhardt2,2025-04-08 12:40:10,8,cscareerquestions,t3_1ju6vb5,False,
mlzt31u,"I'd say competitiveness real life example: if you see a job application already have 1000 candidates, do you think ""wow 1000 people how can I compete"", or ""wow 1000 people is such a low number, so I just need to beat out all of you huh? bring it on!"" another example is leetcode is widely hated, although somewhat a necessary evil at this point to eliminate shitty candidates, do you think ""ah my brain can't take it"" or do you think ""oh ok so I just need to do 2 or 3 LC a day? no problem"" the latter is also where people talks about ageism and self-selection comes from, think: if you're let's say in your 40s married with kids and own homes you probably don't have time for any of that, or uproot yourself and fly to USA, but you totally can in your 20s",NewChameleon,2025-04-08 06:32:36,15,cscareerquestions,t3_1ju6vb5,False,
mmhvrko,"Agreed with beastkara that this is totally unreasonable. I have seen interview loops being conducted entirely over chat for hard-of-hearing/deaf candidates. So there’s no reason why they wouldn’t be able to accommodate you. Someone dropped the ball here and it wasn’t you. I’d suggest maybe talking to a few employment lawyers because you might have a case here. At the very least you may be able to scare Amazon enough into giving you a do-over. Also re Discord, fuck that noise. That’s some bullshit. You wouldn’t be too hard to work with in a team. Drop those weirdos and don’t look back.",eeaxoe,2025-04-11 02:07:54,164,cscareerquestions,t3_1jwbfm2,False,
mmjb0s2,> I tried asking about this in a Discord but really only got messages saying that I'd be too difficult to work with in a teamJesus christ I fucking hate people,mailed,2025-04-11 09:39:20,37,cscareerquestions,t3_1jwbfm2,False,
mmlf9dp,"Speak to a lawyer. Them not accommodating a disability, let alone for a veteran, is unconscionable.",EveryQuantityEver,2025-04-11 17:15:51,9,cscareerquestions,t3_1jwbfm2,False,
mmhhvdz,"When you asked the interviewer if they can type the questions in text format, what did they say?It is totally unreasonable if you asked him this and he said no. But your post does not make it clear if you asked this. When he said, he does not see that accommodation, did you explain what you needed? If you explained, and he refused to type the questions, that's discrimination.Also, zoom has a closed captions feature, though Amazon might not use zoom. Was that enabled? There are also are apps you can download that do closed captioning regardless of who is speaking. Ideally, you should get your own app to do CC just in case there is any technical glitch with interviews. Some things like hearing aids are still your responsibility to cover, the company just has to provide anything necessary to support you outside of that. Amazon requires in office work, so you'd be expected to have a working hearing aid.",beastkara,2025-04-11 00:41:31,37,cscareerquestions,t3_1jwbfm2,False,
mmj2xp3,Have you considered a lawsuit?,FatChunLi,2025-04-11 08:12:29,19,cscareerquestions,t3_1jwbfm2,False,
mmjm573,DIscord is full of losers who are too lazy to do any other job. They want to break you like the interviewer here.,Sparta_19,2025-04-11 11:19:51,10,cscareerquestions,t3_1jwbfm2,False,
mmlis5e,I filed a discrimination charge with the EEOC against Amazon too. I think you should do the same.,joseflopez,2025-04-11 17:32:55,9,cscareerquestions,t3_1jwbfm2,False,
mmjd7i9,"Yeah, sucks that someone didn’t do their job, but move on. Hiring a lawyer would be a waste of time, but go ahead if you so wish. Amazon will argue a 100 different ways how lack of time wasn’t the issue here.",obelix_dogmatix,2025-04-11 10:01:11,9,cscareerquestions,t3_1jwbfm2,False,
mmoi2io,"> my interviewer says he does not see that accommodationThe EEOC is very clear on this...prior notification and arrangements are entirely irrelevant. If you show up with a disability and require a reasonable accommodation, they have to provide it to you whether you'd previously disclosed it or not. The only legal ""out"" to an accommodation request would be a claim by the employer that your accommodation was ""unreasonable"". I've certainly seen some unreasonable accommodation requests during my career, but asking for questions to be written and a small amount of extra time to accommodate that request would pass the reasonableness test in any court in the U.S. That interviewer screwed up. You're probably not going to get a job at Amazon, but I'd contact the EEOC to lodge a complaint anyway. Might even be worth talking to a lawyer. Amazon should be training their recruiters better than this, and they won't fix the problem if they aren't called out for it.",codefyre,2025-04-12 03:53:29,3,cscareerquestions,t3_1jwbfm2,False,
mmp343v,"Definitely speak to a lawyer (of course before hiring) or file something. They sometimes have these interviews recorded (especially if on a zoom or leetcode session), so if you asked there is a record of them denying the request… Honestly, as someone who conducts interviews, I would have never said no. Didn’t see a special request? Doesn’t make a difference. I might roll my eyes (likely at the disorganized recruiter) because I would have been more prepared if I had seen the request (i.e. typed out the prompt more, maybe follow up questions, etc to copy paste in to have it go smoothly) … but I would never say no!! Hugely inappropriate… some people just don’t appreciate veterans the same way. If you have any recent experience or projects, I’d recommend also trying to find things to talk about in those, just to handle those types of questions / people. The interviewer was probably just trying to drill down into technical experience, and that’s why they were asking about non service related experiences? That’s my guess, giving the benefit of the doubtSeriously, best of luck! Ignore the haters, we all have our own stuff.",Necessary_Plant_5222,2025-04-12 07:02:41,3,cscareerquestions,t3_1jwbfm2,False,
mlw5cq3,"Startups / founders have to project as if they are ""the best in the world"" to convince investors to throw $$$ at them [and especially these days when there is vastly less funding available overall as well](https://www.reddit.com/r/cscareerquestions/comments/1jqu0pz/comment/mlcby3w/).",maz20,2025-04-07 17:11:20,149,cscareerquestions,t3_1jtqab2,False,
mlwjp98,The entire SV startup ecosystem is powered by delusions of grandeur. You kinda need some of that to face the 99.9% chance of failure.,angrynoah,2025-04-07 18:22:54,47,cscareerquestions,t3_1jtqab2,False,
mlwf9an,"Tech lead at a startup**The startup is going to be very, VERY dependent on the personality of the cofounders** (especially the early ones). And a lot of cofounders are pretty libertarian (right-wing libertarian, not left-wing) and have a super ""lifted myself by my bootstraps"" mentality. In differing degrees.That CAN project into overconfidence, and sometimes into haughtiness, and punching above their weight class in terms of what they can do, who they can hire, etc.A LOT of times they are dicks.It's one (but not THE reason) why many startups fail (product-market fit is bigger, but this is non-negligible)That being said, I personally (anecdoteally) am in a startup where the cofounders are actually pretty empathetic and a bit more human centered. I still see the cofounder-mentality, but it's not as toxic as I've seen in other startups I've been in.",Groove-Theory,2025-04-07 18:00:15,63,cscareerquestions,t3_1jtqab2,False,
mlw7lmp,"I wouldn't call that 'attitude', more as a pride/ego thing and it is because those that don't, won't survive >I know I could just move on, but I just wanted to rant about their behaviour. They feel so entitled with their VC funding and later wonder why they have 0 revenue coming in. have you thought that they are receiving their VC fundings **BECAUSE** of their behavior? why would VC want to invest in companies that doesn't think they're the best",NewChameleon,2025-04-07 17:22:37,44,cscareerquestions,t3_1jtqab2,False,
mly6vfy,"A lot of startups are actually incredibly risk-averse in the sense that they believe if they hire a single engineer who can't immediately be productive day one, they're burning runway. Maybe they're right, but it sucks because startups used to be a place where you could break into the industry without a ton of experience, and they'd look for undervalued talent that they could ""Moneyball"" into a good engineering team. Saying that you allow fear and uncertainty to dominate your hiring practices doesn't sound very cool tho",Shogger,2025-04-07 23:41:53,10,cscareerquestions,t3_1jtqab2,False,
mlyqg4u,"I had a friend who spent close to 10 years bouncing between startups in SF every 6 months. He said that a startup’s ability to get funding had nothing to do with their pitch or their competence and everything to do with their connections. The goal of these startups was never to make something useful that people need, but instead to generate enough hype that a larger company would buy them out. They don’t want competent, hardworking engineers. They need people that can make a cardboard cutout of an application look really good for a few select people.",dring157,2025-04-08 01:40:31,12,cscareerquestions,t3_1jtqab2,False,
mlym2mu,"There is SO much ego in startup culture. They have so much pressure to succeed on time, so they act like dicks and bully their employees to compensate. Incredibly toxic and rare to find a good work life balance at one.",gringogidget,2025-04-08 01:13:58,5,cscareerquestions,t3_1jtqab2,False,
mlxe0c3,Because most of them don't make any money and have no competitive advantage.,CanYouPleaseChill,2025-04-07 20:59:12,7,cscareerquestions,t3_1jtqab2,False,
mlzc4v9,Yeah they've been rude to me too. It almost feels like they are in their 20s and have no social skills with normal people,sarnobat,2025-04-08 04:03:41,3,cscareerquestions,t3_1jtqab2,False,
mlzvavi,"They’re all trying to Ponzi scheme a FAANG into buying them off, and they now realize that ship has sailed TDLR; hoes mad",Logical-Ask7299,2025-04-08 06:53:38,2,cscareerquestions,t3_1jtqab2,False,
mlxfrhe,Every junior role I (≈3 YoE) have applied for and made it to the final interview I was told they accepted a candidate with more experience.Seems like Mid level candidates are settling for junior roles.,Longjumping-End-3017,2025-04-07 21:08:37,130,cscareerquestions,t3_1jtw6k1,False,
mlxfnue,"Because 20+ years of experience people are hard to find and always in demand, surprised junior's in demand tho. Think there was like 800k+ people laid off in the last year or two. That's what happened.",CarinXO,2025-04-07 21:08:04,161,cscareerquestions,t3_1jtw6k1,False,
mlxjhme,Two recruiters don't make an industry trend.,Pale_Height_1251,2025-04-07 21:28:50,28,cscareerquestions,t3_1jtw6k1,False,
mlxfp3i,"I was told a lot of mid-level engineers are ready to join at entry/ Associate level roles, so my (4 years) profile will not get picked for interviews.",Parvashah51,2025-04-07 21:08:16,14,cscareerquestions,t3_1jtw6k1,False,
mlxfh8t,Maybe that's something unique to your city...? I job searched in early 2024 with 11 YOE and didn't have any trouble finding roles that fit me both locally and remote.,SouredRamen,2025-04-07 21:07:05,23,cscareerquestions,t3_1jtw6k1,False,
mlxfhr0,">locally in my city found the problem >this leaves someone like me basically out of the running currently. ""this leaves someone like me **who refuse to look at other companies, and refuses to relocate** basically out of the running currently."" the 2 emphasis was added by me if a company says they don't want me then no worries, I'll simply go to another company that do wants me, it's just called ""not a good fit""",NewChameleon,2025-04-07 21:07:10,38,cscareerquestions,t3_1jtw6k1,False,
mm28bec,"OP, I'm not sure what these recruiters think they mean by heavy senior, but that's not a title. 12 years of experience vs 20 years of experience should not matter at senior or staff level. It is an arbitrary number they are pulling. The skill level does matter though.",beastkara,2025-04-08 16:50:55,2,cscareerquestions,t3_1jtw6k1,False,
mm4a6ub,"The jobs went overseas, that's what happened. There are no surprises here",uwkillemprod,2025-04-08 22:57:39,2,cscareerquestions,t3_1jtw6k1,False,
mlxfyct,It's just one company and one recruiter.,TRPSenpai,2025-04-07 21:09:38,5,cscareerquestions,t3_1jtw6k1,False,
mly5bqm,I call bullshit on that lol,fake-bird-123,2025-04-07 23:32:54,1,cscareerquestions,t3_1jtw6k1,False,
mlz9jz3,"Go for it. You’re never “ready” to join FAANG. I have >15 years of experience with other companies and when I started at Amazon it was a grind. So many internal tools and undocumented history surrounding the codebase. Just figure that you will have an easy first week or two, 2-4 months of hell, then it will start to click and become easier.",EddieJones6,2025-04-08 03:44:28,121,cscareerquestions,t3_1ju3uw0,False,
mlz56up,Do or die mate. There is no try,techtariq,2025-04-08 03:13:57,167,cscareerquestions,t3_1ju3uw0,False,
mlzbib2,Do it and then after a year starting looking for something else,hotglue0303,2025-04-08 03:58:55,24,cscareerquestions,t3_1ju3uw0,False,
mm115gj,"Also, watch out for 'coaching'; it's often thinly veiled as a tool for improvement and used by managers to justify terminations and pips. Do not document stuff you need to improve and send it to your manager. They will literally re-use it for your pip doc. Welcome to Amazon. Good luck.",jawohlmeinherr,2025-04-08 13:07:51,15,cscareerquestions,t3_1ju3uw0,False,
mlzskrv,"You are putting yourself into a tough spot for sure. The standards at the job are very high. I will say I know a friend who went in without much coding experience but learned a lot and are still there 4 years later with a promotion to sde 3. I know he is the exception and not the rule but I want to tell you there is hope. I wouldn’t give up a stable good job where you are happy for this opportunity. But if you have nothing to lose you can make a lot of money and learn some skills :man_shrugging:, you might just have to find your new gig this time next year.",SincSohum,2025-04-08 06:28:07,12,cscareerquestions,t3_1ju3uw0,False,
mm193sn,Sounds like pip fodder to me. HM is literally telling you he has a “performance improvement plan” waiting for you,cantfindagf,2025-04-08 13:53:48,4,cscareerquestions,t3_1ju3uw0,False,
mlztmr4,"When I worked at Amazon, code quality was actually pretty mediocre at best. Consistently better than terrible, but nothing special. I taught my team git as a junior. More of a political game.I'll always remember it because it's the only job where my manager was actually completely clueless about the process of software development.You might get fired if you don't make enough friends.",Key-Alternative5387,2025-04-08 06:37:44,10,cscareerquestions,t3_1ju3uw0,False,
mlzpvlz,"You can learn on the job and build good relationship with your manager. Your survival is based on stack ranking of your team, the weakest member will get pipped end of the year.",ChadFullStack,2025-04-08 06:02:55,3,cscareerquestions,t3_1ju3uw0,False,
mlzvcef,"Congratulations on your offer! Since you did not have a lot of SDE experience previously and still interviewed for SDE2, how difficult was it to handle the behavorial/Leadership Principles based questions in your interview? I assume that's the part where they try to quiz you on your earlier work experiences. So I would really like to know how one can give convincing answers/create credible stories if your previous job was not similar to the work done by an Amazon SDE1. Are there any resources to prepare for this?",floydfan311,2025-04-08 06:54:02,2,cscareerquestions,t3_1ju3uw0,False,
mmk4kav,Zero. 12 YOE,Celcius_87,2025-04-11 13:21:51,222,cscareerquestions,t3_1jwohyy,False,
mmjzs2i,I only study system design if I have an interview lined up. Then i study it maybe half an hour a day.,TonyTheEvil,2025-04-11 12:53:31,74,cscareerquestions,t3_1jwohyy,False,
mmkbg6s,"0, I study on company time, unless I'm in a period where I have to grind (e.g. important interviews lined up)",kp0507ch,2025-04-11 13:59:05,110,cscareerquestions,t3_1jwohyy,False,
mmk2ih9,"I'm not actively interviewing so I don't study outside of work. I do watch youtube channels that keep me up to date though like Primeagen, T3 and fireship but that's just entertainment i watch over dinner",YupSuprise,2025-04-11 13:09:59,25,cscareerquestions,t3_1jwohyy,False,
mmjyf9j,5 years experience. Basically zero. But I am looking for new roles now so I do stuff for a few hours every day now.,zombawombacomba,2025-04-11 12:45:06,71,cscareerquestions,t3_1jwohyy,False,
mmkdd9g,Zero lol fuck that,Full_Bank_6172,2025-04-11 14:08:55,79,cscareerquestions,t3_1jwohyy,False,
mml8trl,"0, 8 YOEWhat’s the point of working your ass off to get where you are. If you don’t actually enjoy the ride when you’re there? When I’m off, it’s beer and Netflix time. Maybe some live sporting events. I want to enjoy my time You’re right. The hiring bar has changed. To the point people with your experience level probably need 2 to 6 months. Hundreds of resume applications. Assuming you’re a leet code genius, you’ll probably make it through 3 to 5 interviews before anything happens over that timeThis is not the time to be upending your life just because. Pretty much every major financial institution is predicting a recession this year. As a new hire you’re going to be the first to get laid off.Just enjoy the ride right now.",AccomplishedMeow,2025-04-11 16:44:30,30,cscareerquestions,t3_1jwohyy,False,
mmkej04,"I study on the clock. I used to grind after hours, not anymore. My time is too precious",Pale_Sun8898,2025-04-11 14:14:49,22,cscareerquestions,t3_1jwohyy,False,
mml0ooy,AFTER work?!?! Lmao,musclecard54,2025-04-11 16:03:56,26,cscareerquestions,t3_1jwohyy,False,
mmjvi8r,"I study LC/SD at least 1h per day after work/during commute, and I’m not even looking for a new job.I just do this to be ready when I feel like changing jobs4YOE",skyyper,2025-04-11 12:26:16,12,cscareerquestions,t3_1jwohyy,False,
mmdhgr2,"You’re doing great man. Low code sucks if you’re a dev and you think in code. But use this position to pad you till you find a job you like. You’re doing everything right. As a Canuck that has seen people been laid off / not get ROs due to the tariffs, I think dev jobs have been mostly safe (as far as dev jobs go in this economy). Plus, if you get the proper dev job the job hunt would be easier in the future if something were to happen. Good luck!",ProfessionalShop9137,2025-04-10 12:02:33,117,cscareerquestions,t3_1jvvzaq,False,
mmdh2ca,"money and remote is great but home can reliable. money and location arent much if the company wont be operating next year. always be looking for the better opportunity though. if anyone asks about a short stint: ""the place was visibly chaotic on day 1""as far as for your career goes, experience with low code and all other forms of chaos can be great for problem solvers who are properly supported and have good communication skills. find the biggest problems, pick one and solve it. if you're inexperienced, well, that's why you're not in a cushy job right now but chaotic environments can be great for rapid personal growth. the difference is whether you play victim or attack problems. the SECOND you become blocked it's time to check in with teammates and work through the blocker together. half an hour of a senior's time may be valuable but they'll be happy you came to them early not after 3 frantic days of spinning your wheels or slacking off.",jackstraw21212,2025-04-10 11:59:48,19,cscareerquestions,t3_1jvvzaq,False,
mmg9oa4,">Every new tasks is a fight to gather information and do tasks.This is almost universally true about every programming job ever.>I'm wondering how bad that job would be for my carreer.Believe it or not, big tech companies love to hear your stories about how you solved problems of this type in interviews (unclear instructions, prioritizing conflicting tasks). This part of the job is counterintuitively GOOD career-wise",Comprehensive-Pin667,2025-04-10 20:35:46,12,cscareerquestions,t3_1jvvzaq,False,
mmdhpgr,"It gets a few weeks to settle down and finish with all the on boarding training so I would suggest to give it some time and see how things going forward once you get more experience on your daily basis tasks. Thing is that you have been told that you will work with python and now it looks like you are working on something else. If that's something that brings you discomfort best thing is to address it with your line manager with all the concerns and thoughts that you may have.Keep interviewing until you find something better is the best bet and don't worry how it will look to your current employer, there is always a chance that things won't work as expected for either party.Also, important note. If all things are urgent, then nothing really is.",frank3nT,2025-04-10 12:04:13,9,cscareerquestions,t3_1jvvzaq,False,
mme55an,"Take the paycheck for now and keep looking.Low code is pretty much trash in my opinion.However, you've got to eat and put a roof over your head, so it is better than nothing right now.",terjon,2025-04-10 14:21:35,24,cscareerquestions,t3_1jvvzaq,False,
mme4g7a,I've encountered this high context switching and fights to get information at every job I've had. I'm not convinced any place exists without it.,primeight1,2025-04-10 14:18:05,5,cscareerquestions,t3_1jvvzaq,False,
mmet9e2,Sounds stressful good luck to you brother. Regarding anxiety I’m still a student btw but Muay Thai has been amazing for my mental health + confidence,BreezieBoy,2025-04-10 16:20:53,4,cscareerquestions,t3_1jvvzaq,False,
mmgvgqs,"It's remote, high pay, you like the team and you were unemployed for 2 years.Leave for another job if you want, but nobody really gives a shit in terms of your career, future employers care far less than you think.Where I work exports to the USA too, it's a worry, but so far, we've not lost any contracts, but it's early days.",ToThePillory,2025-04-10 22:30:00,4,cscareerquestions,t3_1jvvzaq,False,
mmex27h,just lie on ur resume and say u did python,ForgotMyNameeee,2025-04-10 16:39:31,4,cscareerquestions,t3_1jvvzaq,False,
mmfjh19,"My job is to develop with low code (Outsystems and Mendix) and it's definitely not like that, we follow the proper processes. Sounds like a culture issue.",barricaspt,2025-04-10 18:27:35,2,cscareerquestions,t3_1jvvzaq,False,
mmxryp9,"If you're going to quit anyway, how about taking work-life balance into your own hands? Phone and work computer off at 5 PM. Completely stop working weekends. Miss deadlines. Disappoint your tryhard coworkers. One of two things will happen:* You'll get fired. Bullet dodged, this company is clearly toxic. You're going to quit anyway so no big deal.* Nothing. Your stress and long hours were self-imposed. You now have a job with decent work life balance.In both cases you're better off than you are now.",eliminate1337,2025-04-13 18:42:13,468,cscareerquestions,t3_1jye6gb,False,
mmxpc13,Have you talked to your boss?  If you’re a high performer then you have the reputation capital to spend to make your situation better.,PresentationSome2427,2025-04-13 18:28:17,40,cscareerquestions,t3_1jye6gb,False,
mmxu0ga,"Habib I was in a similar situation a few years ago and I quit and it was the biggest regret of my life. But I didn't have familiar support or means to financially sustain myself super long.I recommend NOT QUITTING, but prioritizing your mental health with an idgaf attitude. You wake up at 9 and do your job till 5pm, and then you shut your laptop PERIOD. No exceptions unless your boss agrees to let you off early the next day. During work, you do what you can and you clearly communicate that you are busy when you have work, and instead of stating that you don't have enough time, state that you're actively working on certain things and are open to hearing which of the many tasks they want you to currently prioritize. Don't let them walk over you.I currently have a shit dev/tech job but I always hold my ground and make it extremely clear that I will not work extra hours, I will not take on tons of work, I will not attend 3 hour cameras-on meetings and that they can send me summaries of action items after, etc. I'm always blunt about it and they deal with it. They have to, since they pay me shit.I know it's not easy to destress when you feel like there's tons of expectations but for the love of god please stand up for yourself. Even passively, just by not overworking yourself. Remember also that quitting means NO severance or unemployment. I didn't understand that at the time.",baneadu,2025-04-13 18:53:02,22,cscareerquestions,t3_1jye6gb,False,
mmxpcnl,"It's uncommon in the US, but could you request a sabbatical from your employer instead of quitting?Maybe you think you need 6 months off, but in reality, find that 4-8 weeks is all you really needed.Edit for clarity:Your sabbatical can be for longer than 4-8 weeks.I meant if you got a 6-month sabbatical approved but found out after 4-8 weeks that you were actually just deeply tired and now well-rested... well, it'd be a shame to have quit your job when all you needed was a bit of time off.And if after 2 months you still loathe the idea of going back to work, you can always start the job hunt then while still having a job you can return to if the job hunt doesn't work out.Of course, all depends on sabbatical approval.",Won-Ton-Wonton,2025-04-13 18:28:23,27,cscareerquestions,t3_1jye6gb,False,
mmxwmcy,"oh buddy.... you really need to go browse r/layoffs for a good hour over a cup of coffee, then hop over to [bls.gov](http://bls.gov) to observe the nearly **half million** IT professionals laid off in the US since 2023, or the recent (link supported) post in that sub stating **3.4 million** IT and IT-adjacent jobs in the US have been offshored. IT in the US as a viable career track is being burned to the ground by a 3-pronged assault of Layoffs, Offshoring and AI, all being driven by corporate greed and America's C-Suites wanting to quash the massive IT cost center on their bottom lines once and for all. Don't leave ***any*** IT job you *have* unless you've *signed papers* to start another IT job in 2 weeks or less, your desk has been prepared and your new laminate is already in hand. There are several hundred thousand unemployed, degreed, certified, credentialed expereiencedAmerican IT professionals out of work right now that would *step over your body* to feed their families.",scots,2025-04-13 19:06:54,26,cscareerquestions,t3_1jye6gb,False,
mmxqwvq,"In this climate, stepping away without something already in place would be a bad idea. Since you're financially stable, if you need the extra bandwidth to make space and prep for / do interviews id suggest using all of your available PTO to do that. Then once you get a new position, set the start date out by more than what you'd give notice for. Just a little built in vacation because you deserve it. If you do decide to step away, you should consider getting a Master's degree in that time. That way you have an actual tangible outcome to point to when an employer asks about the gap.",ABadLocalCommercial,2025-04-13 18:36:38,16,cscareerquestions,t3_1jye6gb,False,
mmy1j7o,"I did this last year. Quit a FANG job and after a 6+ month break I'm at a FANG adjacent company. What I'd recommend is putting out feelers while you still have a job. See how the market is for you. I did this by setting myself as open to opportunities on LinkedIn (without the badge added to my picture). I got a bunch of recruiter reach outs. Knowing I'll at least get some interviews I quit without a job on hand. After a couple of months of screwing around doing nothing I started scheduling phone screens while practicing problems for a couple of hours a day. I had a steady stream of interviews for 3 months. After the first couple it became really fun as I got a bit relaxed. And after the first offer it became even more so. Once I had an offer or two I stopped practising leetcode and just used my interviews as coding practice. So yes it's possible with your yoe. I had similar. But it entirely depends on the kind of opportunities you're looking for, your background, location etc.",enigma_x,2025-04-13 19:33:26,6,cscareerquestions,t3_1jye6gb,False,
mmxt25n,"I left industry in 2022 with 10 years of experience to get a MS at a t-20 university, graduated in 2024, and it took me 8 months to find a job. Unless you are one of the top 2-3% of engineers nationally, taking a break feels incredibly irresponsible. Just start doing about 50% of the work you’re doing now and coast.",PedroTheNoun,2025-04-13 18:47:59,13,cscareerquestions,t3_1jye6gb,False,
mmxql1u,I got hired a year and a half ago after a 2 year career gap. You just have to find 1 company that'll offer you a job. You might have trouble getting through HR. It took me 7 months to get a job. Won employee of the half within a year of working at the new company..I had 3 years of experience beforehand.,TitusBjarni,2025-04-13 18:34:55,3,cscareerquestions,t3_1jye6gb,False,
mmxr8c2,"4 YOE here, i would just ask you to understand exactly your leverage on the market. as senior+ with 9YOE, it sounds like you can get a new job with little to no effort. But perhaps you’re overestimating your skills or the market health. If I were in your shoes and wanted to resolve any doubt or fear, test your worth in the market. Apply to X jobs, identify your callback rate. Go through an interview loop or 2 and identify your success rate. If you have hard data to go off of then I would feel very comfortable instead of posturing. With a 2 year gap, you’ll have a decline in your leverage on the market but it shouldn’t be too different.I think if you come into the interview after your gap and explain that you had burn out, wanted to take a temp step back, a lot of hiring managers will respect that. As long as you can clearly communicate your motives and show that you’re ready to hit the ground running.",g-unit2,2025-04-13 18:38:20,7,cscareerquestions,t3_1jye6gb,False,
mmbopvr,Make sure you wear a mustache if you have to go on cam,ripndipp,2025-04-10 02:31:51,363,cscareerquestions,t3_1jvn5i4,False,
mmc31fu,Amazon has systems internally to automatically attempt to match profiles across various emails. It’s pretty decent. I don’t know if you’d get banned. You could play stupid. “I thought the period was over”.,Ok-Butterscotch-6955,2025-04-10 04:11:39,70,cscareerquestions,t3_1jvn5i4,False,
mmbmoh7,">any other consequenceBelieve it or not, jail. Immediately.",xAtlas5,2025-04-10 02:21:05,196,cscareerquestions,t3_1jvn5i4,False,
mmckxbb,"Isn’t Amazon cool down 6 months? Why not wait a month or two, prepare more and have an even better chance of clearing the bar? 2 or 3 months (worst case) in the grand scheme of things is minuscule compared to the chance of getting permanently banned :face_with_tears_of_joy:Also this is assuming your friend is still going to be there in a few months. I’m almost certain they will be no?",karnnivore,2025-04-10 06:51:52,44,cscareerquestions,t3_1jvn5i4,False,
mmbughy,"I mean, if they figure out you're intentionally skirting their policies, they're not going to like that.Wouldn't it be a bummer if you got a referral, and HR's software did a fuzzy-merge between your rejected email and your fake email, and you got flagged?Why don't you just apply to one of the other million companies in the US? Why is it Amazon-or-bust?Just wait another 2-3 months, and you can apply to Amazon anyways, and then you'll be able to use your referral without intentionally misleading the Amazon recruiters.",SouredRamen,2025-04-10 03:08:59,108,cscareerquestions,t3_1jvn5i4,False,
mmbx0jb,Anecdotally I tried the same thing in the past at a different fang and they linked my two emails together,AyyLahmao,2025-04-10 03:26:39,49,cscareerquestions,t3_1jvn5i4,False,
mmbnn9p,"They are going to know it's you based on your past work experience, company names, dates, etc. on your resume.",Easy_Aioli9376,2025-04-10 02:26:09,32,cscareerquestions,t3_1jvn5i4,False,
mmd1typ,"I have a friend that did this with Google with different Gmail accounts. Failed 3 times, got in the 4th, has been there for like 3 years now",AdSecret219,2025-04-10 09:53:23,9,cscareerquestions,t3_1jvn5i4,False,
mme8gqb,Bro jumping through hoops to get into hell,Beneficial-Garage729,2025-04-10 14:38:09,4,cscareerquestions,t3_1jvn5i4,False,
mmc2cae,Can you do a British accent?,monkeycycling,2025-04-10 04:06:06,8,cscareerquestions,t3_1jvn5i4,False,
mm5cylr,"i think aws will be much safer considering it’s a service… shopify being e-commerce will likely suffer greatly from the tariffsalso, Tobi posted a memo on no new hires unless it is demonstrated that AI can’t do the job. this sounds like a hiring freeze so not good news",mymycloudz,2025-04-09 02:43:12,206,cscareerquestions,t3_1juvd3t,False,
mm5ec9x,"I think shopify is about the last place I'd want to work. Look up some of the CEOs hot takes and see how safe you think your job will be. As for tariffs specifically, one job is working on compute/infrastructure for businesses across multiple sectors, the other caters almost exclusively to retailers. If spending drops because of tariffs shopify is going to feel the heat quickly. Neither one is going to be 100% safe, but one feels distinctly more at risk than the other.",TravelDev,2025-04-09 02:52:00,241,cscareerquestions,t3_1juvd3t,False,
mm5g3ca,Have you seen the leaked Shopify memo? They're leaning heavily into AI and replacing workers.,FoxlyKei,2025-04-09 03:03:24,53,cscareerquestions,t3_1juvd3t,False,
mm5uhj1,Go with AWS even without the tariffs. CEO is kinda fucking nuts,Prize_Response6300,2025-04-09 04:49:16,12,cscareerquestions,t3_1juvd3t,False,
mm5j64o,"AWS is safer for keeping your job. There are some additional things coming out about the tariffs that's are targeting clients of Shopify. Congrats on both offers, but if i was in your shoes, I'd choose AWS. I would also plan on working there for about 3 years because of all of the negatives that come with working for Amazon.",fake-bird-123,2025-04-09 03:24:11,7,cscareerquestions,t3_1juvd3t,False,
mm6mti5,"Worked at Shopify. The culture is soul sucking. Do not join Shopify no matter what, you will regret it",Icy_Dragonfly_1224,2025-04-09 09:33:44,8,cscareerquestions,t3_1juvd3t,False,
mm5c6e1,"Shopify by far. Stack ranking at AWS, their overall culture, and the WFH all outweigh the impact of tariffs on either role imo",LargeHandsBigGloves,2025-04-09 02:38:29,30,cscareerquestions,t3_1juvd3t,False,
mm62vt0,Trying to predict anything with Trump is a fool's errand.,dti85,2025-04-09 06:03:10,7,cscareerquestions,t3_1juvd3t,False,
mm6g7yc,"I went to school in Ottawa, where Shopify was headquartered before becoming fully remote during the pandemic. I’ve never heard of a single positive thing about working at Shopify.",ThunderChaser,2025-04-09 08:21:55,3,cscareerquestions,t3_1juvd3t,False,
mm66bj8,Both terrible companies that I would never work for.,Main-Eagle-26,2025-04-09 06:37:10,6,cscareerquestions,t3_1juvd3t,False,
mme3nio,"Don’t join this field if you don’t have a natural aptitude for it and also don’t at least slightly enjoy it.Realistically most people who have studied this degree in the last 5-6 years should not be in this field. They aren’t naturally suited to it, they don’t like it, they’re just here for ‘easy money’.The easy money is gone. If you are talented and passionate you will still be successful. If you are not, find some other field to over saturate.",savage_slurpie,2025-04-10 14:13:59,262,cscareerquestions,t3_1jvyhma,False,
mme4jzi,"I have 20 years of experience and delivered my last app on time but since my last contract ended in 2023 I have not been able to get a job with a living wage in IT, only nights and weekends jobs and substitute teaching and all these jobs put together don’t pay the bills so I am a stay at homeDad on sabbatical until I get a proper job - I don’t expect to get a forever home job till 2026 until then I will be forever homeAnd to be honest this is a blessing that I don’t have to deal with the trauma I put up with over the last 20 years - this is way easier than dealing with crackers",Exotic_eminence,2025-04-10 14:18:36,56,cscareerquestions,t3_1jvyhma,False,
mme24ft,This same questions gets asked a million times lmao. Yes you can do everything right and still not get a job.Yes there’s data to indicate this. Check how SWE job postings from 2022 have decreased by more than 100% since. Yes if you go to a top school you’ll still probably be fine.Yes it’s also anecdotal experience & social media experience but that just proves the overall sentiment of the industry rn.If you’re looking for money there’s better options. If you genuinely love this field than you should continue.,Scoopity_scoopp,2025-04-10 14:06:05,52,cscareerquestions,t3_1jvyhma,False,
mmf53x0,"Turn on the news and watch it for about a week straight without having any other context of anything.Then go outside and just walk around for a week straight without any news at all.Tell me the difference you encounter and you will have your answer.Most people come here to post based on a stimulus response, it's usually a bad one so the overall posts you're going to get are people frustrated and fed up with the market.It's up to you to decide if that's true or not and make your own assessment. Usually this is just by trying to get into the market and form your own analysis of it not from what other people in a subreddit say.",Adept_Ocelot_1898,2025-04-10 17:18:43,44,cscareerquestions,t3_1jvyhma,False,
mme7i1b,"Yes job search/outcome will largely luck based. you can do everything right and still not get a job due to dumb bad luck. (Like your applications keep overlooked simply due to too much other candidates) Also so much external factors that hold back you get job that's outside of your control. Also, hiring process is broken.Yes there’s data to indicate this. Check how SWE job postings from 2022 have decreased by more than 100% since. If you’re looking for money or stability there’s better options unless you are going to exceptional software engineer or insanely lucky.",Still-University-419,2025-04-10 14:33:21,11,cscareerquestions,t3_1jvyhma,False,
mmegixg,As someone who's conducting interviews currently I'm seeing a lot of people who have like 10-15 yoe and have been laid off for 4 months+ so the market is indeed pretty bad right now.,Vyrill,2025-04-10 15:17:55,23,cscareerquestions,t3_1jvyhma,False,
mmeevx3,"Yes, we’re full. Go nursing",Banned_LUL,2025-04-10 15:09:44,21,cscareerquestions,t3_1jvyhma,False,
mme2w6w,"Yes, the market is very rough right now. I expect this to get worse.",LongDistRid3r,2025-04-10 14:10:05,23,cscareerquestions,t3_1jvyhma,False,
mmeav1g,"I started looking for a job about 6 weeks ago. I was under the impression that it would be an absolute grind to get an interview anywhere. My search has been a lot easier than I had been prepared for it to be, and I am now more than confident I will land a good position.That said, the interviews I have gone through have been much harder than I have ever seen. The bar is high right now, but the war will always be for talent. Any candidate who has their LinkedIn, resume, and website dialed in to attract recruiters and can do LC mediums in ~20 mins, will get a job.",single-duality,2025-04-10 14:50:00,13,cscareerquestions,t3_1jvyhma,False,
mmgh0yi,"I don’t think people are exaggerating, the job market is very fucked. I’m having a hard time getting interviews with almost a decade of experience, current employment at a well known tech company, and no black marks on my resume.The market will likely recover in 1-3 years and more jobs will open up but then most of the applicants are going to be the experienced folks who are currently having trouble finding a job.Do you really want to be a fresh grad trying to break into the field in that environment? I sure wouldn’t",BH_Gobuchul,2025-04-10 21:12:08,3,cscareerquestions,t3_1jvyhma,False,
mmb5ade,"I guess if the other option is being unemployed, yeah.",d13vs13,2025-04-10 00:38:11,564,cscareerquestions,t3_1jvl9hl,False,
mmb558c,Yes I would rather do that than be homeless but I would try to get new job ASAP.,Trick-Interaction396,2025-04-10 00:37:20,201,cscareerquestions,t3_1jvl9hl,False,
mmb5um7,"I want to say no, but the reality is that people do what they gotta do. If it’s the only option I’d rather do that than working at a fast food (or not working at all)…..But I’d be sending resumes, actively interviewing, looking for a place in town if the commute is due to you living far, etc…",DangerousPurpose5661,2025-04-10 00:41:34,57,cscareerquestions,t3_1jvl9hl,False,
mmbh6h9,"It's insane to me, but somehow makes perfect sense, how so many people on this subreddit are so spoiled with their fully remote or hybrid 300k Senior Engineer/Director position, that they cannot acknowledge the reality that there are many people in this world that would take this opportunity even if it meant they had to \_walk\_ 1 1/2 hours to and from work every day. If you have better options, or if you simply prefer not to drive so much, by all means I would advise taking them. In any case, OP, do what you must do to put food on your table and make progress in your career, it is yours after all.",Yojimitsu,2025-04-10 01:48:12,23,cscareerquestions,t3_1jvl9hl,False,
mmb7usz,I had 1 hour 45 minutes on the train each way and eventually just moved closer.,wh7y,2025-04-10 00:53:14,21,cscareerquestions,t3_1jvl9hl,False,
mmb820f,I'd do it and it's a no brainer for me.,NiKOmniWrench,2025-04-10 00:54:24,19,cscareerquestions,t3_1jvl9hl,False,
mmb7f03,"I did this for almost 2 years. I highly don’t recommend this. If you do it though you need to put money aside for your car maintenance. Consider the cost to commute as well tolls, gas, insurance, etc. It’s too much time of your life spent getting to and from work and created a hard work life balance in my opinion.",Thinkdeep555,2025-04-10 00:50:41,16,cscareerquestions,t3_1jvl9hl,False,
mmbb3lw,"No. My time on this earth is more valuable to me.You gotta do what you gotta do, though. Especially in this economy.",VG_Crimson,2025-04-10 01:12:27,23,cscareerquestions,t3_1jvl9hl,False,
mmbbbn0,"I've been doing this for a month and buddy it fucking blows. I have to get gas twice a week now. Got a new job thats 40 miles away but with traffic the 50 minute drive easily gets 1hr20 to 1hr45 territory. Yesterday I was stopped on the interstate because a car caught on fire and had to wait in line till the fire department put it out. Lease ends soon and I can't fucking wait to move, get into podcasts and audio books if this is all you can take. Enjoy a snack or something to make it a little more bearable. Put linkedin open to work on or move",SpyDiego,2025-04-10 01:13:46,7,cscareerquestions,t3_1jvl9hl,False,
mmbfm97,I did it for 50k so…,andhausen,2025-04-10 01:39:00,6,cscareerquestions,t3_1jvl9hl,False,
mltvisb,You still get paid right? Just do some upskilling in the meantime and also try to help out in other tasks if possible/allowed.,Spitfire_ex,2025-04-07 07:42:56,184,cscareerquestions,t3_1jtfp4h,False,
mltxsgm,Cant you create your own work? Find what you can improve on existing processes or try to help other people.,noblepickle,2025-04-07 08:07:42,50,cscareerquestions,t3_1jtfp4h,False,
mlty9i9,I don't do any work for 5+ weeks every year. It is the weeks from Thansgiving until after New Years.You should be concerned if this period is abnormal.,itoddicus,2025-04-07 08:13:01,26,cscareerquestions,t3_1jtfp4h,False,
mluozo9,"This is the time for documentation, long-standing bug fixes, clearing the backlog, etc",Ok_Opportunity2693,2025-04-07 12:24:05,12,cscareerquestions,t3_1jtfp4h,False,
mlvhpt6,"That's super weird. If you don't have space to really initiative directly, maybe you could work on some proposals for me tools, new hardware, solving new problems etc.Try to think about what the business needs at a higher level than just task in solution out... Does that give you any possible options?",Thoguth,2025-04-07 15:09:55,4,cscareerquestions,t3_1jtfp4h,False,
mlu1z0y,You need to find something relevant to do if you want to fill out your resume.,SmartCustard9944,2025-04-07 08:55:22,3,cscareerquestions,t3_1jtfp4h,False,
mlv6die,"Interview. At some point someone is going to realize that they don’t have enough work for you to do and they will find a solution that doesn’t involve you. This might be a few years or weeks away, but at least you can find a place where you can keep growing.",masterskolar,2025-04-07 14:11:47,3,cscareerquestions,t3_1jtfp4h,False,
mlulchl,"Yes, especially these older companies like yours sounds like. They over-hire or hire someone with a fancy sounding role and everyone expects other people to be giving that person work, but nobody does. Just coast and upskill.",TopNo6605,2025-04-07 11:57:22,4,cscareerquestions,t3_1jtfp4h,False,
mlw0a0a,"It is normal to be idle sometimes, but 5 weeks is a bit much. Did you talk to your boss about it?Suppose the workload demand is uneven, very high in September very low in April. It doesn't make sense to fire people in April and hire them back in September. Instead, they just accept that people aren't 100% utilized in April.",fsk,2025-04-07 16:45:33,2,cscareerquestions,t3_1jtfp4h,False,
mluxa64,"Study, research, housekeeping... document everything.Don't give anyone a reason to let you go.",Fluid_Economics,2025-04-07 13:18:51,1,cscareerquestions,t3_1jtfp4h,False,
mmz80m4,Nobody can tell you if you will be happy. -Fellow banana land L6,Doombuggie41,2025-04-13 23:31:58,169,cscareerquestions,t3_1jyl2p9,False,
mmzaohu,"That money is too good to say no to, even if just short term.",elverange766,2025-04-13 23:48:35,35,cscareerquestions,t3_1jyl2p9,False,
mmz88c1,Take the job but keep your options open in case you get fucked at the airport,Dr_CSS,2025-04-13 23:33:18,100,cscareerquestions,t3_1jyl2p9,False,
mmz7w4a,"Honestly if your family situation allows for it, it’s an absolute no-brainer, come on over to the US.",ZanePlaneTrainCrane,2025-04-13 23:31:12,97,cscareerquestions,t3_1jyl2p9,False,
mmzc6g9,"I would do it, but the biggest advice I would give you is to prepare yourself financially (and by that I mean save as much money as humanly possible) for the possibility of having to hightail it out of here at some point. Like, I wouldn't come here with a x salary and immediately start living an x salary life. Put away as much money as you can, and the biggest choice there is the house that you rent/buy and the car that you intend to drive. I would avoid thinking that you make X and therefore you should buy a house that corresponds to X. Now it may turn out that things in the US stabilize, especially if some court cases start going against Trump and we make it to the midterms. But I just wouldn't assume that things are going to get better. Having said that, you already mentioned that you are a white heterosexual male and that really limits a lot of the risks. The other big thing - I would keep any opinions about this administration to yourself. You'll be in a much more vulnerable position as an immigrant",dfphd,2025-04-13 23:57:56,10,cscareerquestions,t3_1jyl2p9,False,
mmz93w3,"Seattle and Washington State are basically Australia with lower taxes and (comparatively) shit weather.   It's warmer than the interior, but there's basically 4+ months of no sunlight.   In October buy a Seasonal Lamp which mimics sunlight, and Vitamin D; and you'll be okay.Assuming you don't have kids, you'd be a total dummy to not move. Try to get Amazon's legal team to handle the immigration paperwork but otherwise yeah, do it.Just save as much as you can, and return home in like 4 or 5 years, with a million plus in the bank.   Best of luck, Welcome to the neighborhood, and the obligatory American, GFY ya ""kiwi"" bastard.",TheMathelm,2025-04-13 23:38:44,40,cscareerquestions,t3_1jyl2p9,False,
mmz9lih,Move immediately no frickin brainer. Your quality of life with that salary will be immense.,alex114323,2025-04-13 23:41:47,13,cscareerquestions,t3_1jyl2p9,False,
mmzdf7b,"of course, money is one of the biggest reason why I moved to USA",NewChameleon,2025-04-14 00:05:46,4,cscareerquestions,t3_1jyl2p9,False,
mmzk2gx,"As an expat in the US who wishes they could move their family out, not until we see civil rights prevail. Also, not a great time economically for engineers.",uriejejejdjbejxijehd,2025-04-14 00:47:58,5,cscareerquestions,t3_1jyl2p9,False,
mmzko8a,Idk about coming to the US right now lol.,allahakbau,2025-04-14 00:51:49,4,cscareerquestions,t3_1jyl2p9,False,
mmnfxac,Incorrect.Made it to the final round.If it can happen once it can happen again.,Timotron,2025-04-11 23:42:34,70,cscareerquestions,t3_1jx3ohm,False,
mmnk16t,"if you did it perfect, someone else probably did as well. it’s a crapshoot from there.",Successful-World9978,2025-04-12 00:07:43,23,cscareerquestions,t3_1jx3ohm,False,
mmne16s,"I feel you, I got dream company, dream role, dream problem space. I got rejected at the very final round (7th round).",Real_nutty,2025-04-11 23:31:08,27,cscareerquestions,t3_1jx3ohm,False,
mmnsw5r,"Graduated 5 months ago, been interviewing for full time jobs close to a year now. I’ve made it to the final interview several times but no cigar :loudly_crying_face: got a resume with experience about as good as a graduate from my state school can be. I try not thinking about it and it’s rly hard. Especially since I’m working for basically min wage rn to get by and my internships used to pay 2-3x as much per hour",Terascale,2025-04-12 01:03:53,8,cscareerquestions,t3_1jx3ohm,False,
mmntjhu,"It's likely you did well but they liked someone else better.I would encourage you to also reflect and think about anywhere in the interviews that might've gone wrong. For sure, there are things out of your power but try to think about anything in the conversations that might've not gone that well.Without feedback it's really hard to say if you did things well, I think you just need to do some reflection. Some things to think about, not saying it happened:Maybe your solution wasn't as optimal as you thought it was?Did you find that you were disagreeing a lot with your interviewer when they were trying to start a conversation about something?I've been in interviewer, the shadower in an interview, where the interview on paper went well. Gave great answers etc, but the candidate gave a terrible impression. One question was to ask about a scenario where how they wanted to handle flagging a certain feature and instead of a typical ""brought it to my manager, gathered some metrics to validate my point, etc"" the candidate said ""I would push it without flagging it to anyone and when it worked I would say I did it""...which got the candidate disqualified even when they had great system design and coding rounds.Please review how your interview went! Or maybe talk out your answers to someone. Also ask for feedback if possible.",drugsbowed,2025-04-12 01:08:01,7,cscareerquestions,t3_1jx3ohm,False,
mmosb35,"Got three candidates at the end of the 5th round of interviews. All three of them are, essentially, identical on the quals and performance front.One dropped a memorable anecdote about his/her work in (insert previous employment), and it stuck with the interviewers. That's the tiebreaker.Nothing wrong with the other two, just luck/chemistry.You got to the final round and did well. On another day, it'll be you who gets the ""Yeah, let's just pick this guy, I'm still laughing about how he went Cow Tipping!"" nod.",RockMech,2025-04-12 05:18:25,4,cscareerquestions,t3_1jx3ohm,False,
mmniupn,"It's an unfortunate reality of our industry. I've failed 4 different on-site rounds and more than a handful of resume screens, technical screens, etc. since I've started looking out. At the end of the day, as long as you've done your best to perform the best you can at these interviews it's not in your control.I've been literally grinding 2-4 hours each day after work studying and preparing, and even then I know that nothing is really guaranteed. Not to sound so doomer, but I've also been upskilling and learning so much more since I've started grinding outside of work, so it's been worth it regardless of my current rejections.",Shushiii,2025-04-12 00:00:26,4,cscareerquestions,t3_1jx3ohm,False,
mmnr4k2,"Keep in mind that ""not getting hired"" is **not** synonymous with ""rejected"". Rejected would be turning you down when they don't have a better option. It sounds like you did pretty good, but unfortunately, there was someone just a little bit better. Some of this is completely down to random chance. The person who got the job just happened to be looking for a job at the same time as you due to their own unique circumstances. Had they not been applying for the job, you probably would have gotten it.Having been on the other end of hiring, sometimes, it's not an easy choice when you have multiple people who would be a really great fit in the position. If they really liked you (which it sounds like they did), they might reach out if they have an opening that they think you'd do well in.Don't walk away looking at this as a failure. You did your best and made some connections that might pay off later.",ChrisC1234,2025-04-12 00:52:40,5,cscareerquestions,t3_1jx3ohm,False,
mmnkmes,Just keep applying. There are not enough jobs for all candidates. Each company can only fill one opening with thousands of candidates.Don't stop applying until you start your first day of work.,siammang,2025-04-12 00:11:22,3,cscareerquestions,t3_1jx3ohm,False,
mmonjuk,"This is the problem with SWE. No other industry, not banking, not consulting, has these types of leetcode/system design interviews where you need to study for months after work, in addition to your normal job, to pass. One mistake and it’s no offer. SWE interviews are bullshit, plain and simple. Been in the industry for 6 years and am looking for a new job and LC is killing me.",comthrowaway21,2025-04-12 04:37:13,3,cscareerquestions,t3_1jx3ohm,False,
mmn7cvm,"It does exist... LinkedIn. But my company needs this other thing, so lets add a feature. That other company needs to assess for other skills, so lets add a feature... The thing you're missing is, when organizations are wanting your money, they will streamline real quick. When you want them to give you money, they will have you dance the sluttiest of corporate dances to see what they can make you do.",LivingCourage4329,2025-04-11 22:51:23,131,cscareerquestions,t3_1jx2tn7,False,
mmnm6bu,Would you be ok with the paying upwards of $100 per job application? Because that’s how the common app works,shmeebz,2025-04-12 00:21:07,21,cscareerquestions,t3_1jx2tn7,False,
mmn8r9x,Because when you get 300+ applications of absolute garbage candidates you have to make them put in some effort to filter people out. Making it so you need to spend 10 minutes on an application makes the average candidate quality much better.,yeastyboi,2025-04-11 22:59:32,20,cscareerquestions,t3_1jx2tn7,False,
mmner4a,the application process itself is a test,StackOwOFlow,2025-04-11 23:35:31,10,cscareerquestions,t3_1jx2tn7,False,
mmn87ua,"No because every company and every position is different. Firing off thousands of applications without taking any time to curate the resume to the position is why we have so many ""I applied to 1000 positions and still haven't gotten a job"" posts. Some job boards like LinkedIn do this, but it's rare that you'll hear back from that method over applying directly",IBJON,2025-04-11 22:56:23,32,cscareerquestions,t3_1jx2tn7,False,
mmn9es8,"Yes, they're called job boards (LinkedIn, Indeed, ZipRecruiter, etc)The problem is that by making it easier for you to apply, that also opens the flood gates for everyone else and their mothers and their bots, so the signal to noise ratio is terrible, aka you rarely ever hear back and if you do, your resume is sitting on a pile of thousands of others, meaning you might get ghosted at whichever point in the pipeline where automation hands things off to humans.",lhorie,2025-04-11 23:03:25,8,cscareerquestions,t3_1jx2tn7,False,
mmn9hys,"I believe the reason platforms like workday don’t do this is because making you manually fill out applications every time discourages bots auto applying to everything, because it’s a lot harder to automate",None,2025-04-11 23:03:57,4,cscareerquestions,t3_1jx2tn7,False,
mmonugg,"Applying to college is very different. Most student apply to probably 3-10 schools. Job searching can easily be 200-1000 applications. There is already a problem with spam applications, why make the problem worse.",honey1337,2025-04-12 04:39:39,3,cscareerquestions,t3_1jx2tn7,False,
mmof9ps,You can apply to multiple startups via YC: https://www.ycombinator.com/jobs,Significant-Chest-28,2025-04-12 03:32:45,2,cscareerquestions,t3_1jx2tn7,False,
mmoqk9d,Use a browser extension to autofill the applications.https://www.reddit.com/r/jobhunttips/comments/1bzs1e0/the_7_best_chrome_extensions_for_your_job_search/,papa-hare,2025-04-12 05:02:47,2,cscareerquestions,t3_1jx2tn7,False,
mma4rk6,What positions are you applying for?First thing is education. Too much going on. Just keep the degree major and grad date. No courseworkSecond don’t use AI to write your bullet points its very obvious and recruiters throw those in the trash. I had the same problem and when I rewrote everything with my own style I got more callbacks,hotglue0303,2025-04-09 21:11:12,43,cscareerquestions,t3_1jvg7zk,False,
mma7zi9,"same, i graduated last spring and I'm trying everything in my power to land a role",inthebinsoon,2025-04-09 21:28:03,17,cscareerquestions,t3_1jvg7zk,False,
mmcpmru,"(im still in school so take with a grain of salt!) but i'd personally take out the chemistry stuff and replace it with more projects. the one project you have already is decent enough imo, but i think adding more relevant work would do a lot more for you",throoooowawayyyy123,2025-04-10 07:41:35,3,cscareerquestions,t3_1jvg7zk,False,
mmfps70,"You have experience, so put it over education.Also, add more skills for sure in that skill section. You mention C/C++ etc in the summary. Put that also in the skills section.",WeatherSufficient566,2025-04-10 18:58:33,2,cscareerquestions,t3_1jvg7zk,False,
mmc2yco,"God I’m tired too, I was 1 of 3 in one in which I came second, and then 1 of 7 in the last and which I lost, getting ghosted after screenings, getting my hopes up, and then repeat",SuperPotato1,2025-04-10 04:10:57,1,cscareerquestions,t3_1jvg7zk,False,
mmf3hy8,I would remove the professional summary and add more skills,wow-wow-wow-wow,2025-04-10 17:10:59,1,cscareerquestions,t3_1jvg7zk,False,
mmfsvzg,"Your resume should go in this order: Contact Info, Summary, Skills, Work History, Projects, Education and Certifications. Your resume should include the keywords of the positions you’re applying for. Your skillset should include all relevant proficient skills and tools you use.",ThrowRADisgruntledF,2025-04-10 19:14:09,1,cscareerquestions,t3_1jvg7zk,False,
mmno6d6,"Too much useless text. Change format, add more spacing",ForgotMyNameeee,2025-04-12 00:33:48,1,cscareerquestions,t3_1jvg7zk,False,
mm974a5,4 YoE is the new entry level,dbootywarrior,2025-04-09 18:27:18,176,cscareerquestions,t3_1jvcv4b,False,
mm9bsn3,"Dude what just do the interview. You have four years of experience. You got this. Don’t sell yourself short, that’s what the man:trade_mark: wants you to do. You can do it",pocketsonshrek,2025-04-09 18:50:02,70,cscareerquestions,t3_1jvcv4b,False,
mm993m7,"I had a similar situation when younger, I was a mid-level developer at a big named company but because I got the job out of school and stayed for 6 years I was making less than SWE2s at similar companies around me. I took an offer for a SWE2 position at a competitor and it worked out great",Beautiful_Job6250,2025-04-09 18:36:59,17,cscareerquestions,t3_1jvcv4b,False,
mm9qx0t,I mean just take the interview and they’ll level you however.But 4YOE isn’t entry level man,epicfail1994,2025-04-09 20:03:40,12,cscareerquestions,t3_1jvcv4b,False,
mm9hnnu,Most entry level wants 5 yoe but you might be fine with 4,Comfortable-Insect-7,2025-04-09 19:18:54,17,cscareerquestions,t3_1jvcv4b,False,
mma0i2c,You asked about Stripe yesterday too and I think you should stop doubting yourself and go into it with the mindset that they picked you because you were qualified. You're spending valuable time right now worrying and asking on Reddit when you could be prepping. Asking for an entry level role instead won't help but relying on your 4 years of experience and grinding interview prep will!Good luck! You got this,Feisty_Kale_2057,2025-04-09 20:50:03,5,cscareerquestions,t3_1jvcv4b,False,
mmb7l47,"I'm kinda at the same situation as you, but I wish I had made these years more useful and meaningful career wise. I graduated by the end of 2020 and I had a different kind of experience - 1/5 year as customer success manager, been a cloud engineer for almost 1 year now, but due to some personal problems (hey, alcoholism) I feel like I've only really put on the effort into learning and dedicating to my profession for the last six months now - been sober for a year now. Those years in my resume seems like a big lie that I tell over and over, because substancially I don't feel like the experience ""I have"" translates into what I know.I feel very lost and I wish I had the opportunity to experiment a bit more with engineering before jumping into cloud roles since I feel like I have not enough foundation knowledge to be working with infrastructure.(sorry for misspelling or any confusing sentences, EN is not my first language)",notoriouslyoverrated,2025-04-10 00:51:39,2,cscareerquestions,t3_1jvcv4b,False,
mmc39wr,I was a senior at my last company with 5 years of experience and I applied to an entry level role at another company and I took the offer. I didn’t know it was entry level because it was just called “software engineer” lol. They ended up giving me a mid level title instead.Just apply! Titles are just titles.,jackfruitbestfruit,2025-04-10 04:13:33,2,cscareerquestions,t3_1jvcv4b,False,
mmchfhf,"I'm always under the impression entry level interviews are harder than mid level interviews, where one already has the YOE to back them up.",polmeeee,2025-04-10 06:17:10,2,cscareerquestions,t3_1jvcv4b,False,
mmcyjav,"Don't overthink it, apply for the jobs you want.4 years isn't that much really, applying for entry level positions isn't that crazy.",ToThePillory,2025-04-10 09:18:58,2,cscareerquestions,t3_1jvcv4b,False,
mm4go3v,congrats,YakFull8300,2025-04-08 23:34:09,16,cscareerquestions,t3_1jurawh,False,
mm55fbf,Congrats on your offer :fire::fire::fire:,Shower_Handel,2025-04-09 01:58:55,5,cscareerquestions,t3_1jurawh,False,
mm5czer,So do you think the secret is to reach recruiters rather than just applying and praying?,NahiyanAlamgir,2025-04-09 02:43:21,3,cscareerquestions,t3_1jurawh,False,
mm5r3fd,How much experience and salary range?,startup_sr,2025-04-09 04:22:08,2,cscareerquestions,t3_1jurawh,False,
mm5w3qm,did you attend a prestigious uni?,Safe-Resolution1629,2025-04-09 05:02:36,2,cscareerquestions,t3_1jurawh,False,
mm7jzax,"All the referrals were ‘no response’. What are referrals good for then? I got referred by a friend three times, 2016, 2018 and 2022, every time the interview felt superfluous, I basically had the job before interviewing. I guess referrals have lost their “power” nowadays.",meet-your-daddy,2025-04-09 13:37:11,2,cscareerquestions,t3_1jurawh,False,
mmeipac,Congrats on offer!!,welchroll45,2025-04-10 15:28:47,2,cscareerquestions,t3_1jurawh,False,
mmu1hyr,I have a good job but I'm saving around 35% of my income. It seems the world is entering some serious turbulence and I am being cautious.,JonnyBGoodF,2025-04-13 02:27:26,46,cscareerquestions,t3_1jxwjzl,False,
mmtt609,Definitely pay your loans first unless they're at a low rate.,Particular_Base3390,2025-04-13 01:31:19,106,cscareerquestions,t3_1jxwjzl,False,
mmtzd5a,"For me, I am not saving any more or any less aggressively because of Trump or the current economic conditions. I started saving nearly as much as possible ever since I had my first cashier job back in 2018. Always a great idea to be proactive and not reactive - neither the good times nor the bad times last forever.",big_clout,2025-04-13 02:12:54,23,cscareerquestions,t3_1jxwjzl,False,
mmttm14,All of 2024 rsu went to cash on vest that year. Pretty clear trump was going to win and do some stupid shit.,perestroika12,2025-04-13 01:34:18,19,cscareerquestions,t3_1jxwjzl,False,
mmtz37q,I save as much as I can. I have one years gross salary in a HYSA. I only spend on improving career with certs and study materials. If I donde see buying a house anytime soon I might take savings and dip set.,Matatan_Tactical,2025-04-13 02:11:02,4,cscareerquestions,t3_1jxwjzl,False,
mmtzkhi,"Pay your loans off. The longer those stay open, the more you pay in interest. As for me: I don't have any debt, and any debt I incur, I immediately pay off. I'm sitting on enough cash to last a year, but I could go a lot longer if I start liquidating other assets. One things I recommend, is getting a credit card, or two, and calling them every couple of months to ask for a raise in your limit. If push comes to shove and you need money, that gives you access to cash well you sell investments to cover.The biggest hit so far with the economy is that I'm paid a lot less (-20% so far), so it's not that I'm saving more, it's just I earn considerably less because I get paid in stock. I have some plans to buy more nice watches, but the next equity allocation will probably go entirely into the market.",justUseAnSvm,2025-04-13 02:14:17,3,cscareerquestions,t3_1jxwjzl,False,
mmuosxv,After going through two layoffs one of which had me unemployed for 5-6 months needless to say I'm trying to stock pile my emergency savings. I'm getting down to the bare minimums. The thing is we won't feel the effects of Trumps tariffs debacle for a while but when it does happen it's gonna suck. Like inflation is a lagging economy Indicator. We had inflation in 2023 and 2024 due to COVID supply chain issue that affected us then. Worldwide inflation was insane but the US handled it better than others. Unfortunately it just wasn't enough for American voters to vote for Kamala and instead vote for a crazy person whose economic agenda was widely criticized by economist everywhere. So we haven't really faced the fallout of the tariff war yet. So even darker days are ahead for the tech industry so everyone strap in,downtimeredditor,2025-04-13 05:24:58,4,cscareerquestions,t3_1jxwjzl,False,
mmtz0vu,"Yup I have two years of emergency savings ready to go, I'm not saving to my 401k currently lol",Fun_Highway_8733,2025-04-13 02:10:36,6,cscareerquestions,t3_1jxwjzl,False,
mmw2sx4,"Seeing how we're going into a recession thanks to the orange pumpkin, and saving more than spending can propagate a recession, yes I'm absolutely saving more. That being said - always focus on paying high-interest debt first, then debt second, then savings.",WanderingMind2432,2025-04-13 13:15:52,2,cscareerquestions,t3_1jxwjzl,False,
mmw4b5t,"Saving will only last you so far, learn a skill on the side.",csammy2611,2025-04-13 13:25:31,2,cscareerquestions,t3_1jxwjzl,False,
mlvqsr8,"Is the work you're doing rewarding? It's not just about the amount of work you're doing, but the sense of satisfaction and self-worth that comes with a job well done. If you're just grinding through the motions doing work you don't see value in, of course you're going to feel that way. Find something compelling to work on and stretch a little bit to get it done. Let yourself feel successful.",serial_crusher,2025-04-07 15:56:35,47,cscareerquestions,t3_1jtohmd,False,
mlwcdq7,"Search for “Boreout” on this sub. Should get plenty of hits.I feel in a similar spot. Haven’t done much about it. Started doing LC to try to prep for interviews, but got away from it recently. I’m just not sure I want to go somewhere new and work my ass off just so that I can feel “fulfilled”. I tell myself that there has to be something I can do on my own time to fulfill myself, while keeping my easy peasy job. I’d feel like a real bozo if I switched companies just to start pulling 50+ hour weeks and still feel similar to how I do now.",ZolaThaGod,2025-04-07 17:46:08,15,cscareerquestions,t3_1jtohmd,False,
mlvye63,Same position after getting laid off from a great job last year. Job pays the bills but does little to engage.I don't feel like this is the right time to go find something either due to market and coming recession.,Remarkable_Hope989,2025-04-07 16:35:45,9,cscareerquestions,t3_1jtohmd,False,
mlvre4h,"In my experience, being in a job where the expectations are low can be just as tiring as one where the expectations are high. If your work is mostly maintaining the system and putting out fires, you probably are experiencing skill atrophy and don't get to flex your brain in a way that feels satisfying. You should try to find places where you can break down problems and do actual engineering work, which will be much more rewarding than fixing bugs and doing basic CRUD operations.",HayatoKongo,2025-04-07 15:59:36,16,cscareerquestions,t3_1jtohmd,False,
mlwkjw4,"> I thought burnout only comes from being overworked, but in my case, it feels like I’m burned out from the lack of engagement.Burnout doesn't come from overwork, it comes from putting a lot in and getting not enough back.Paradoxically, you might feel better if you did _more_ work, if that resulted in more pride from within or appreciation from others.",angrynoah,2025-04-07 18:27:13,7,cscareerquestions,t3_1jtohmd,False,
mlvslwo,"I was basically in the exact same spot for the last couple of years. I had a pretty light workload and was generally just left to pick and complete tasks at my own pace. A few months ago I switched to a different team at the same company and so far it’s really helped me. The workload is higher and deadlines are tighter, but there’s more collaboration with the team and I feel much more satisfied when I complete something. It may be worth talking to your manager to see if that’s an option, even just as a trial to see if it helps you.",Likab-Auss,2025-04-07 16:05:56,5,cscareerquestions,t3_1jtohmd,False,
mlvrgn6,">I thought burnout only comes from being overworked, but in my case, it feels like I’m burned out from the lack of engagement. So, burnout is not a clinial term. So, burnout *is* normally defined as what happens when you're overworked. However, what can happen is that you develop *depression* from not being engaged. Now, this might not be depression in the sense of needing to take meds or seeing a therapist, but it might be ""you're in a situation that is making you depressed and you should change it"", i.e., get a new job.But it might not just be related to the job - it might be that you're depressed which is making it difficult for your job to be engaging.So I would advice you to see a psychiatrist and at least rule that out before you start making major life changes like quitting your job.",dfphd,2025-04-07 15:59:57,6,cscareerquestions,t3_1jtohmd,False,
mlw11i4,"""Burnout"" is typically the name for and effect of being overworked for too long. But being directly overworked isnt the only way to get the same symptoms, same as any other injury.Take a burn for example - if you touch too hot of water are you any less burned than from touching flames? Its the same injury, same pain, same effect, etc. Just a different cause for the same symptoms.",SFWins,2025-04-07 16:49:27,3,cscareerquestions,t3_1jtohmd,False,
mlwfrbf,Why do you think that doing bare minimum would prevent burnout? I think it even could be burn out inducing if all you do is a little work and meetings,Ok-Entrepreneur1487,2025-04-07 18:02:47,2,cscareerquestions,t3_1jtohmd,False,
mlwjdfi,"I had the same thing, and found some other field in IT which will take me a long time to learn, but I'm genuinely interested and motivated by it to move there. And I have to actually since I was fired due to my company failling financially lol. But man am I relieved to at least not live that dreadful existance of pretending. Some people are fine with just doing the work and letting be just that, but we're just not those type of people. Number one is to find what you genuinely like, and then do whatever you need to get there. Or you can just stay there and ""rot"" but ain't no way I'm going back there hoss.",mean_king17,2025-04-07 18:21:13,1,cscareerquestions,t3_1jtohmd,False,
mmocg93,"Before you take these answers as Absolute, look up how many engineers work at Amazon",zninjamonkey,2025-04-12 03:12:32,115,cscareerquestions,t3_1jx7urh,False,
mmof6pn,Amazon is a huge place. There are tons of ORGs with different experiences. That being said I currently like it. However it’s not a place where you can just coast really. It’s also very important to set boundaries and expectations because they’ll take all you give. It’s a great place to learn a lot with opportunities to move internally should you want to learn something new.,Jason_Was_Here,2025-04-12 03:32:09,81,cscareerquestions,t3_1jx7urh,False,
mmotf8j,Amazon almost made me quit tech. YMMV,Everyday_sisyphus,2025-04-12 05:28:36,15,cscareerquestions,t3_1jx7urh,False,
mmok58m,Just my subjective: avoiding alexa and amazon devices :dotted_line_face:,kelontongan,2025-04-12 04:09:34,24,cscareerquestions,t3_1jx7urh,False,
mmofsvm,"If you’ve been following anything in tech news for the past, idk, 7 years or so, you’d know that no matter how much anyone glazes Amazon, it’s not gonna be a great place to work at. Sure, it is team dependent, but most teams, anecdotally or otherwise, end up crushing your dreams and spirits. I think at this point there is a clear distinction between people who are absolutely oblivious to what Amazon is like and people who just don’t understand what cognitive dissonance means.",dankem,2025-04-12 03:36:38,27,cscareerquestions,t3_1jx7urh,False,
mmp22dy,"I've worked for Amazon for the last 7 years, and have never had a better experience in terms of work life balance and compensation. But like others said I'm sure it's very different in different parts of the company. Personally I would never decide based on the company, but on the product I would be working on. An interesting product will attract interesting colleagues. Product that is successful makes everything easier, from getting promoted, to having better work life balance, to management supporting what you're doing.I think a big mistake many engineers make is to work on products that are going nowhere, still becoming passionate about them after putting in a lot of effort, and then to be surprised they're getting reassigned with unfinished work still on the table.",k3yboardDrummer,2025-04-12 06:52:21,15,cscareerquestions,t3_1jx7urh,False,
mmodau2,Ask on Team Blind.,metalreflectslime,2025-04-12 03:18:34,23,cscareerquestions,t3_1jx7urh,False,
mmpgnv7,It all comes down to your manager at Amazon. If they are an indian on h1b run tf away,hotglue0303,2025-04-12 09:23:26,23,cscareerquestions,t3_1jx7urh,False,
mmon2eg,If you can get in amazon retail or ads I think it's not terrible (of course still team dependent).  Devices and AWS are terrible working environments for different reasons,Additional_City6635,2025-04-12 04:33:13,7,cscareerquestions,t3_1jx7urh,False,
mmoteac,"> but I would love to know what the real day-to-day looks like at these placesI've been at amazon for 10 years. Amazon day to day is pretty standard tech company stuff. You roll in around 10 am and do standup. Work for an hour then lunch for an hour. You'll stand in line for 30 minutes at a food truck if you don't go before 12. At 1 you'll work for a few hours then go home. Maybe ping pong or something once a week if you have coworkers who are into that and you want to play. That's your day. Somewhere in there you'll go get your free coffee and a banana and think about working at a company that isn't so cheap.As you get promoted, there are more and more meetings with every promotion and you get involved in all kinds of random email/slack threads but you're also expected to get as much coding done as the L4s.Most everything depends on your team and manager. Your manager has a very large role in your happiness and how horrible your deadlines are and your team will make it fun + help you... or they won't and you'll cry yourself to sleep because you can't figure anything out. Difficult to tell you if it will be good or not.You should pick waymo tbh. Amazon's mandatory firing bucket and current layoff outlook has had a corrosive effect on the culture and if you have a good option, you should go there.",termd,2025-04-12 05:28:22,13,cscareerquestions,t3_1jx7urh,False,
mmqph9s,WLB at big tech is highly team dependent. I average about 9 hours a day but it can go from 4 hours to 11 hours depending on if I'm grinding for a promotion.,volvogiff7kmmr,2025-04-12 14:55:22,109,cscareerquestions,t3_1jxj0n5,False,
mmqsu10,As others have said it's org and team dependent and varies wildly. FWIW my manager at a FAANG will immediately reach out and check in if it appears I've logged in outside of my 9-5 hours. It's actively discouraged.,johnnyy5ive,2025-04-12 15:13:28,63,cscareerquestions,t3_1jxj0n5,False,
mmqvne8,"Totally depends on the team.I’m my experience, nobody’s watching the clock and counting how many hours you work. They care about results, not hours.But, big tech companies have offices all around the world and it’s not uncommon to need to meet with people in different time zones, especially if your position is more senior.At various times I’ve had regular meetings at 6am or 10pm (from home) and sometimes worked long days, but on the flip side I felt no guilt about only working 4 hours other days when I had other things to do or needed a break.",dmazzoni,2025-04-12 15:28:38,24,cscareerquestions,t3_1jxj0n5,False,
mmqpd2l,"Everyone I know at big tech works at least 10-12 hours a day under a lot of stress.Even if it's just a normal 40 hours, I would imagine it's different than 40 hours at a non-tech company.For reference, I'm in a non-tech company and generally do anywhere from 1-4 hours of work per day.",Easy_Aioli9376,2025-04-12 14:54:44,28,cscareerquestions,t3_1jxj0n5,False,
mmqwfqi,"Companies like MSFT accommodate a pretty wide range. You have some clock punchers and you have some people putting in 60 hour weeks looking to speed run the promotion ladder. That said it highly depends on the management and culture of each individual team, and cloud/gaming sectors more so normalize long hours.",ClittoryHinton,2025-04-12 15:32:51,6,cscareerquestions,t3_1jxj0n5,False,
mmrwcf8,Im basically working a 10 to 4:30 at big G most days,AverageUnited3237,2025-04-12 18:38:40,9,cscareerquestions,t3_1jxj0n5,False,
mmqw1fh,"I work average 8h with 30min-1h lunch in the middle (sometimes more if I have a project to deliver, sometimes less when no deadlines are coming up). My team is split between east and west coast so most my meetings are between 10am and 2pm. This makes my actual hors quite flexible. I’ve done 9-5, 7-3 and this winter there were a lot of times where I worked like 7-12 when I didn’t have afternoon meetings, skipped lunch and went snowboarding in the afternoon, then worked another 1-2h in the evening, when I travel home I usually work at local timezone (+5h) 9-5 so 4-12 California hours",toiavalle,2025-04-12 15:30:44,3,cscareerquestions,t3_1jxj0n5,False,
mmr7q7w,"I work in big tech. My work hours are 10 to 5. I'll take meetings as early as 9 if necessary, and that happens maybe 2 times a month.",Fun_Acanthisitta_206,2025-04-12 16:31:40,3,cscareerquestions,t3_1jxj0n5,False,
mmrtjh6,"Big tech is highly team dependent. On average though, Amazon/Meta work more than Google but even for Google, GCP on average is worse than Amazon/Meta on average.> Do some people have such work hours depending on their ambition and goals ?Yes but sometimes it's also for survival.> If someone works 10 to 5, is it frowned upon or is that the culture?Highly depends on team",VersaillesViii,2025-04-12 18:23:23,3,cscareerquestions,t3_1jxj0n5,False,
mmrxbq8,"When my husband worked a multiple time zones job, had on call hours that went late, he “took time off” in middle of day to balance it out. So he’d make a 9 am meeting and do 2 hours of busy work like answer slacks or emails, log off and nap or do errands til 4. Then log back on from 4 to 9 pm. Then wake up at 2 am for a system upgrade monitoring and go back to bed at 4.  Can only do that with wfh/remote of course. I actually preferred when he was in person and when everyone left the office at 5-6 pm no one was expected to log in at odd hours.",Red-is-suspicious,2025-04-12 18:44:01,3,cscareerquestions,t3_1jxj0n5,False,
mmd5z6w,I'm in the same boat. SWE in everything but title and paid about $62k @ 3 YoE. Everyone on my team was laid off so it's just myself and my manager and it's way too much for this pay. Been looking for a proper SWE role and having no luck.,Longjumping-End-3017,2025-04-10 10:33:07,60,cscareerquestions,t3_1jvuhrt,False,
mme50hl,"tech recruiter here; it takes time and the market is trash. take an honest look at your resume and the roles you’re applying to. consider contract jobs to get foot in the door and a F500 name on your resume. Move to an area with more opportunity. Network more. Tailor your resume to each role. Follow up aggressively. I worked with a candidate once who had a Bachelor’s and 5 yoe, but was stuck making $80k in the Bay Area doing a job he hated. He and I had some long honest conversations and he left that FTE role to do a contract I got him at NVIDIA, where he nearly doubled his income and loves the work. Neither job is perfect, but it was a sacrifice that was worth it to him in the long term.",Lonely_Chest_4201,2025-04-10 14:20:54,21,cscareerquestions,t3_1jvuhrt,False,
mmd7lt4,"Your plan failed, keep trying",NeedleworkerWhich350,2025-04-10 10:47:29,9,cscareerquestions,t3_1jvuhrt,False,
mmfeccq,Guess the 6 figure SWE I see on YouTube is not the norm…,Prior_Accountant7043,2025-04-10 18:02:40,4,cscareerquestions,t3_1jvuhrt,False,
mmd8mo9,Can you lower your cost of living somehow? And continue looking.,cerealmonogamiss,2025-04-10 10:56:11,3,cscareerquestions,t3_1jvuhrt,False,
mmd94hd,Have you been mass applying to other SWE roles like your life depends on it?,No_Safe6200,2025-04-10 11:00:11,2,cscareerquestions,t3_1jvuhrt,False,
mmdtsdw,"I started as a developer in 2022 on £20k/year, left at the end of the year and spent over 2 years applying trying to get another job and never even came close, so I've just given up on ever getting back into the career now.",Maximum-Event-2562,2025-04-10 13:20:15,1,cscareerquestions,t3_1jvuhrt,False,
mmeirqf,"Somewhat similar situation here. I graduated in 2023 with an internship that would have transitioned to a full time job making $64,200. I ended up quitting before I went full time because there was no outlook and I was not doing anything that would have improved my chances of moving up the ladder in terms of knowing more advanced software skills. In reality I was more of a Database Administrator working with Content Manager On Demand (CMOD) and using Mainframe. It was demoralizing and NOT what I had envisioned working as a Software Engineer. In fact this company was handing the software projects to Chinese interns who would end up leaving and just go back to China. Huge shame. At the turn of Spring that year I worked at Miller Knoll on the line which was exhausting and difficult. I quit that and then picked up a Gas Station job at Speedway and worked there for 6 months. Remind you this is all while having a Computer Science degree with 4 internships under my belt. I applied to just above 450 or so jobs and would get from those around 12 call backs and only 1 offer. It was demoralizing. By some miracle a company only 5 minutes away from my home called me for an interview through a recruiter and I ended up acquiring the job! I couldn’t be blessed enough. I am learning so much about the ASP.NET ecosystem . The major downside of this job whoever is the pay. I make around $57,000 in Michigan which is considered on the super low side of things. But I feel you in terms of wanting that pay raise and moving up : ( the ladder. I want to gain some more experience after a year or two and try to negotiate a pay raise but if my employer won’t budge then I will probably look around for another position that will pay me more. Don’t give up!",scub_101,2025-04-10 15:29:08,1,cscareerquestions,t3_1jvuhrt,False,
mmgv87r,"When all else fails, your about as valuable as the money you bring in.Thats why I started working with small local businesses, developing website and driving sales for cash",GoonsAndGoblins,2025-04-10 22:28:39,1,cscareerquestions,t3_1jvuhrt,False,
mmnbgqk,The market is absolutely saturated with supply because for the last 20 years everyone and their uncle thought it would be a good career. Unless you have extensive or specialist experience or some other USP you are going to struggle. If your area is web dev you're going to struggle five times as much. Sorry but that's just the state of things. Keep trying but it might be time to start looking at other directions just in case.,RavkanGleawmann,2025-04-11 23:15:36,1,cscareerquestions,t3_1jvuhrt,False,
mmriq7r,"You can try faang adjacent companies (robinhood, uber, doordash, snap, airbnb), but make sure you’re interviewing for mid level. I hopped with around 1.5 yoe for 280k tc in the bay. The role is technically fully remote so NYC would prob also work.",Wblegend,2025-04-12 17:27:21,47,cscareerquestions,t3_1jxkza0,False,
mmr7q1s,Quant firm and some startups You will get better lucky if you wait to 3+,zninjamonkey,2025-04-12 16:31:39,43,cscareerquestions,t3_1jxkza0,False,
mmrc7wg,"You can beat that at a quite a few places in NYC. Lot of Fintech unicorns/post unicorns like Ramp, Brex, Robinhood, Stripe etc. Not sure if you’re counting big tech as faang as well but there are a lot here. Bloomberg and Datadog are also quite large in NYC and could beat that too. Leetcode bar at all of these is relatively high though so you’ll have to grind a bit.",KruppJ,2025-04-12 16:54:54,20,cscareerquestions,t3_1jxkza0,False,
mmse80d,Stripe would probably be a better paying situation if you can stick around for the IPO. EDIT: According to [levels](https://www.levels.fyi/companies/stripe/salaries/software-engineer?dma=501&yoeChoice=mid) even the base pay can be higher than your current TC.,kidfood,2025-04-12 20:18:07,7,cscareerquestions,t3_1jxkza0,False,
mmrirsn,"The biggest hesitant of grabbing opportunity in NYC is where to live. The living situation is just so bad in NYC and surrounding area. Anything decent is $3500+.Wife and a kid, where would you guys live there?",LanguageLoose157,2025-04-12 17:27:35,7,cscareerquestions,t3_1jxkza0,False,
mmusrgv,What platforms are you using to apply for jobs? I’ve been mostly using LinkedIn but i feel like the amount of relevant jobs is kinda shit,Gainszz,2025-04-13 06:01:11,2,cscareerquestions,t3_1jxkza0,False,
mmvms4p,Lol I remember you from the NU sub. I’m happy that you made it bro,Professional_Crow151,2025-04-13 11:12:18,2,cscareerquestions,t3_1jxkza0,False,
mmsqjhq,I have same yoe and been having decent luck at high tc companies. Currently in loop for Google and a startup (startup pay for L3-L3.5 is around 220-240k but 185 is liquid). Are you stuck on staying in NYC?,honey1337,2025-04-12 21:27:28,1,cscareerquestions,t3_1jxkza0,False,
mms8y37,"Mid to top tier hedge funds and trading firms will easily offer more than this in NYC.Top funds usually pay 300k+ for entry level but are unlikely to interview you without an exceptional background (top school, specialized experience, or poaching from competitors)The tier below should easily clear 200k and is more open to hiring backgrounds. Not sure how interviews compare to FAANG but they’re all going to be fairly rigorous",sushislapper2,2025-04-12 19:48:49,-2,cscareerquestions,t3_1jxkza0,False,
mm25lca,"Go on a 3 month vacation, you only live once.",Tacos314,2025-04-08 16:37:36,248,cscareerquestions,t3_1juhdrb,False,
mm29t9o,"Get some exercise. Look good for the girls in college.Senior engineer that's worked at MAANG and trust me. Do well in school, but be healthy and live a good life.",Key-Alternative5387,2025-04-08 16:58:01,105,cscareerquestions,t3_1juhdrb,False,
mm27svv,"Rest, my guy, CS is a slog and you don’t want to burn yourself out before you even start. If you reallllyyyy want to start…Read “C How To Program” if your classes are going to be in C/C++, which is pretty standard. Adjust accordingly based on the language you all start in. When you’re done with a base level book in whatever language your courses are in, get a good book on object oriented programming. Having a good knowledge foundation will make projects and your classes ten times easier. If you want that CS internship then you need to be ready to stand out for your school’s career fair. Try doing a project that actually interests you. Maybe try your hand at doing some free work for some family and friends. Above all else it needs to be a tangible thing recruiters can use (Website, App, Twitter Bot, Game, or a physical arduino/raspberry pi project) Most of all, find something you find interesting outside of programming this summer that you can do at school to meet people. Not only will this help you get balance, but you’ll also meet people which can turn into a job. Rock climbing tends to be pretty popular among us CS nerds because it’s basically the same as programming. Suffering through lots of small painful moves to achieve a big thing. :p",Suspicious_Quarter68,2025-04-08 16:48:26,10,cscareerquestions,t3_1juhdrb,False,
mm2i3hj,You are about to be in school for 4 years. Fuck studying go do something fun.,MCFRESH01,2025-04-08 17:37:20,11,cscareerquestions,t3_1juhdrb,False,
mm22xwq,Do software maintenance. Find one or two active open source projects to contribute fixes too.,LongDistRid3r,2025-04-08 16:24:19,19,cscareerquestions,t3_1juhdrb,False,
mm29dmq,Try CS50,HeavySigh14,2025-04-08 16:55:57,3,cscareerquestions,t3_1juhdrb,False,
mm25y6f,build a home lab,proveddamage,2025-04-08 16:39:22,2,cscareerquestions,t3_1juhdrb,False,
mm29bbo,I’m in a similar scenario to you. I’m currently teaching myself Rust because it lets me play with systems programming and web development at the same time.I’ve made an insanely wide range of projects in Rust alone which has allowed me to explore nearly all of my CS interests. AI & CV are two things I wish Rust had a lil more of but that’s alright. I have NO idea if this is the best route for you but it’s working pretty well for me. You might want to learn another language which aligns with your interests more and just see if it’s fun. Now is the time to relax and explore :folded_hands:,NotWakes,2025-04-08 16:55:39,2,cscareerquestions,t3_1juhdrb,False,
mm2i93e,"Do Codeforces, a lot of it, see if it matches your taste. If you get good at it, and you do well in your degree, cracking roles would be easy. I can't emphasise more how easy these screenings become when you are a competitive programming pro! You can make projects anytime, but logic building is a slow process that demands consistency.",zoombaClinic,2025-04-08 17:38:03,2,cscareerquestions,t3_1juhdrb,False,
mm27nvk,Split your time:1. Spend 1 week a month doing something you love (vacation).2. Spend 3-5 hours on leetcode (aim for 4-5 problems)3. Learn AI especially generative AI4. Spend a couple of hours everyday doing what ever you love.5. Workout,raging-water,2025-04-08 16:47:45,4,cscareerquestions,t3_1juhdrb,False,
mm2hjm6,"""I've decided to move on, my last day will be x""Why do you think this is so complicated? Leaving a job doesn't burn a bridge.",eliminate1337,2025-04-08 17:34:47,147,cscareerquestions,t3_1jujdj5,False,
mm2hvtf,"I gave two weeks notice when I left American Express for Amazon. I had an exit interview with my skip level who told me if I ever wanted to come back, they’d always have a job for me. If a company was mad at me for leaving, I wouldn’t want to work for them again anyway. They don’t own me.",ooter37,2025-04-08 17:36:21,124,cscareerquestions,t3_1jujdj5,False,
mm2mig7,"Honestly, this sounds like a total distorted view of how leaving a company works.Unless you intentionally go out of your way to do something negative, like 95% of the time there should be no burning bridges and no hard feelings.You're probably leaving because:1) You're unhappy in your current role2) You're seeking a promotion / raise which was not offered by your current role3) You're looking to do a different scope/role than your current job.None of these are reasons for someone to feel upset you're leaving the company. If anyone IS upset, that's a reflection of their toxic viewpoint and not something inherent in the process of switching jobs.Any of these stories where the boss is pissed that you're leaving them high and dry are 100% indications of a toxic work environment, especially if you've raised your career concerns with your boss already (which you should do).",snkscore,2025-04-08 17:57:30,33,cscareerquestions,t3_1jujdj5,False,
mm2k1vr,"Are you in the US/Canada or somewhere else? If it’s the US/Canada it’s perfectly acceptable to just say that you’ve accepted an offer from somewhere else and want to work out what a good last day would be to ensure your work is in a good state to hand if off. If pressed for a reason you can generally be truthful though it’s helpful to put a positive spin on things. “I’ve really enjoyed working at X but feel I’ve reached a ceiling. I believe Y will give me room to grow”. If it’s about pay you can be honest about that -> “company y is offering $$$ and I felt I couldn’t pass up that opportunity”.Common reasons you might give that don’t suggest something negative about your experience are: growth opportunities, chance to learn a new domain/technology, compensation. Beyond that don’t worry about it. It’s just business and you can stress how much you enjoyed working at your current place and how you want to keep in touch with your manager.",DeliriousPrecarious,2025-04-08 17:46:16,13,cscareerquestions,t3_1jujdj5,False,
mm2t7mx,"If you give in the courtesy 2 weeks notice, you're not going to burn the bridge.If simply leaving a company with 2 weeks notice for another job ""burns the bridge"", then that bridge never really existed to begin with.A good manager will usually say the 2 same things when someone puts in their 2 weeks notice, in this order:1. Is there anything we can do to keep you?2. We're sorry to lose you, but I'm really excited for you and the new adventure!If your management tries to gaslight you and act like you moving on for a different opportunity is some sort of personal attack against them, that's a pretty clear sign that you were in a toxic environment. And like I said, that bridge never existed to begin with, it was just an illusion of a bridge.Every manager I've left has been very adamant about the fact that the door is open if I ever want to come back, or if things don't work out at my next company. It's very much business as usual.",SouredRamen,2025-04-08 18:29:44,15,cscareerquestions,t3_1jujdj5,False,
mm2lmc7,This isn't the mafia buddy,StackOwOFlow,2025-04-08 17:53:25,14,cscareerquestions,t3_1jujdj5,False,
mm2lnv5,"Why do you think you owe your employer your future?They owe you for the time you spent there, not the other way around.",drunkondata,2025-04-08 17:53:37,13,cscareerquestions,t3_1jujdj5,False,
mm2luoc,I don’t really see any issue with saying that you’ve gotten a new opportunity that aligns more closely with your long term career goals.,CheesyWalnut,2025-04-08 17:54:28,3,cscareerquestions,t3_1jujdj5,False,
mm2nltc,"This is not difficult and you don't really explain what makes you think it is - you just state its impossible.Why would you need to lie?I've given notice and as a manager had notice given to me. Give me two weeks, if you want to tell my why your leaving I'd love to know and likely be your biggest supporter (e.g. better offer, going to AI bootcamp, whatever it is). After you give notice talk to your manager about what is best way to leave documentation and hand off tasks. Don't flake. Do whatever the fuck you want on linked in I couldn't care less.",ramzafl,2025-04-08 18:02:32,2,cscareerquestions,t3_1jujdj5,False,
mm2siat,"Some people are reasonable and understand you should do what is best for you. Other people will be resentful, etc. You can't control how other people view your actions. I admit, I was resentful about one person who was leaving, but it's because he was a terrible coworker through most of out time working together. But it's his right to try to make the best life possible for himself. Give your employer a proper two weeks notice. If there is some type of crunch or deadline, you can be open-minded about maybe giving them more time. I gave my last employer three weeks notice to help finish off what I was working on. It was a contract position. I don't think the client really cared at the end of the day. The contracting company claims they wanted to stay on good terms, but it might be just because I was staffable, and some of the people at the client liked me. You don't have to tell a company where you are going to, but don't lie and say you're going to stop working. Also, try not to check out during your notice period. Genuinely do knowledge transfer and make things easier for those who will take over your work. There are people who just coast and make things harder for people. It's up to you if you want to be open to them reaching out. I've helped previous employers, but it probably didn't do me much good in the long-term. Some people actually do consulting work for previous employers. Relationships and work relationships are really unpredictable. It can be hard to tell if something will be genuine or not, but maybe that's just me. Don't overthink leaving a job. Yeah, there are times you leaving will put a company in a tough spot, but most companies can work around that. And if they can't, it might be their fault for not planning/staffing to cover those types of situations.",Chili-Lime-Chihuahua,2025-04-08 18:26:14,1,cscareerquestions,t3_1jujdj5,False,
mms1vfu,"Sys admin is usually a career move from IT, not an entry level role. Similar to like software architect I would not be entry level.",Known_Turn_8737,2025-04-12 19:09:23,152,cscareerquestions,t3_1jxotbp,False,
mms2llu,Software engineers have way less responsibility than a sysadmin does. You don't want a fresh grad in a position where they can fuck a lot of things up for many people if they don't know what they're doing.,fanglesscyclone,2025-04-12 19:13:29,87,cscareerquestions,t3_1jxotbp,False,
mms2cmf,"Honestly, a big part of this is title selection bias.Companies that label their roles ""Software Engineer"" tend to already be operating with higher pay bands and tech salary expectations then a place that calls it ""Programmer"" or ""Developer"". Same thing happens inside infra roles. If the job is called ""SysAdmin,"" it's often an older-school org that treats it as support-heavy and lower tier. But slap ""Systems Engineer,"" ""Infrastructure Engineer,"" or ""Network Engineer"" on the same role, and magically you’re in a higher-paying, more strategic band, even if the work is 80% identical.It’s the corporate equivalent of ordering ""artisanal toast"" at brunch instead of just ""toast."" Same bread, higher markup.Also, Software Engineering gets the ""entry level"" treatment because the career ladder is longer and often starts right at graduation, while SysAdmin roles usually assume you’ve put in your time climbing out of helpdesk or tech support.TL;DR: Job title inflation is real, and it’s sneakily baked into compensation structures too. Always read past the title.",ramzafl,2025-04-12 19:12:05,27,cscareerquestions,t3_1jxotbp,False,
mms1wik,"I honestly have no idea. But my guess is that because being an administrator at all is not entry level. Like if you are manager 1, clearly that’s also not an entry level job.",FightOnForUsc,2025-04-12 19:09:33,11,cscareerquestions,t3_1jxotbp,False,
mms3007,Why is Vice President 1 a late career advancement and software engineer 1 an entry level job?,SoulCycle_,2025-04-12 19:15:44,22,cscareerquestions,t3_1jxotbp,False,
mms5pcr,"Depends what you mean.Are you asking ""why is SWE 1 entry level while SysAd 1 mid career?"" Or are you asking ""why does Software Engineering pay better than System Administration"". Cause those are two very seperate questions.Basically imagine two different tracks within an industry. Like imagine the construction industry. You have the people who do the construction work, electricians, masons, foremen, etc. And you have the architect who designs the building. The architect gets paid more than the laborers. Even an entry level architect might get paid more than a foreman with a decade of skill and experience in construction labor.Software Engineering and Systems Administration are similar in that divide.",vi_sucks,2025-04-12 19:30:51,8,cscareerquestions,t3_1jxotbp,False,
mmscp98,"IMO, SysAdmin as a role has been dying and their responsibilities have been folded into roles like DevOps, SRE, and Systems Engineering. If the company has a “SysAdmin” title, there’s a good chance it’s old school or tech isn’t their main focus. The lower salary band is very telling since they tend to get paid a lot more at true tech companies. The upper salary for SRE, DevOps, and Systems Engineering can easily be in the $200k+ range It’s considered mid-level because the responsibilities are generally critical and not something you want a junior to touch. They can easily take down your production infrastructure, create security vulnerabilities, halt operations, and all sorts of nasty things. It can (and often does) involve system design and other skills that take years to develop",m3t4lf0x,2025-04-12 20:09:38,4,cscareerquestions,t3_1jxotbp,False,
mmscrv5,The levels are completely made up and system admin is a considerably less complicated career,chloro9001,2025-04-12 20:10:02,3,cscareerquestions,t3_1jxotbp,False,
mmsb9hd,Remember all tittles are bs,Tovar42,2025-04-12 20:01:36,2,cscareerquestions,t3_1jxotbp,False,
mmtpaxn,"It's just titles.The world didn't get together and work out a system of titles that apply to everybody in the world in every type of job.Shit is just invented on the fly in a meeting. On a lazy Friday afternoon someone in a meeting said ""What shall we call the job we're advertising"", someone on the way out the door said ""Dunno, ""System Administrator Level 1?"" people grunt in agreement, and that's it.It's titles, nobody gives a shit.",ToThePillory,2025-04-13 01:05:14,1,cscareerquestions,t3_1jxotbp,False,
mmeq1u3,That's the neat part. They aren't.,ForsookComparison,2025-04-10 16:04:57,114,cscareerquestions,t3_1jw1jdx,False,
mmerq1d,"this isn't even a SWE position, this is IT lol",ArmorAbsMrKrabs,2025-04-10 16:13:18,114,cscareerquestions,t3_1jw1jdx,False,
mmf8t3g,"That's not an entry level job. Level 1 in IT doesn't really have the same meaning as what ""junior"" traditionally means in SWE.It's more akin to small companies where every SWE role has the same title, but effectively everyone in those roles are expected to be senior-ish level in scope.",lhorie,2025-04-10 17:36:22,9,cscareerquestions,t3_1jw1jdx,False,
mmespkz,You don’t. This job is for an applicant in need of an H1B or a desperate mid who is willing to take a title drop in order to get an income again.,Pristine-Item680,2025-04-10 16:18:13,20,cscareerquestions,t3_1jw1jdx,False,
mmfv2iw,"Setting aside the IT isn't CS debate for a second, these requirements look pretty reasonable?I worked part-time at a helpdesk for about a year in university and most of this was expected knowledge to get the job. If you've ever done any IT work you should have all these skills already.",Randromeda2172,2025-04-10 19:25:03,9,cscareerquestions,t3_1jw1jdx,False,
mmfkcr7,"The observed behavior is that Junior at a random company doesn't mean Junior at Amazon.However, it's also obviously a way to hire experienced people for less since Amazon is popular enough to never need to hire Juniors.",FSNovask,2025-04-10 18:31:52,8,cscareerquestions,t3_1jw1jdx,False,
mmfqsbn,Not an entry-level job despite the title. Something ive come to realize,Safe-Resolution1629,2025-04-10 19:03:36,6,cscareerquestions,t3_1jw1jdx,False,
mmfz5s2,Pretty standard for anyone whose been a junior sysadmin.,ShoulderChip4254,2025-04-10 19:45:31,4,cscareerquestions,t3_1jw1jdx,False,
mmewt9h,"Amazon is at this point a pure immigration fraud shop.They are some of the better immigrants committing fraud, but they cheap out by hiring 8 billion H1Bs and doing extreme churn.The job isn't for you, it's for the random (possibly qualified tbh, India is big) Indian they're going to ship over.",poipoipoi_2016,2025-04-10 16:38:17,8,cscareerquestions,t3_1jw1jdx,False,
mmf1c9k,the cs majors are really pissed because of an IT job posting huh,fcsar,2025-04-10 17:00:28,12,cscareerquestions,t3_1jw1jdx,False,
mmssopu,What kind of companies were you interviewing for? None of them asked leetcode and you say your design is not important at all for system design interviews? Seems like not my experience at all,rapsonravish,2025-04-12 21:40:04,69,cscareerquestions,t3_1jxldo8,False,
mmtgxjr,"This seems pretty different in some major ways from the senior level loops I am currently in, particularly in the coding section",ecethrowaway01,2025-04-13 00:09:42,26,cscareerquestions,t3_1jxldo8,False,
mms6xac,"Thanks for not giving any actual useful info including: YOE, company, location, offered compensation package, what they actually asked you in the interview.",OneAppropriate6885,2025-04-12 19:37:36,95,cscareerquestions,t3_1jxldo8,False,
mmxbh7j,"Anecdotally I had an interviewer recently who liked me (+ moved me onto the next round) and actually paused the interview to say that I should always emphasize what *I* did in behavioral/project stories and less of what the team did. Start more sentances with ""I"" and less with ""we"" or ""the team"". His explanation was that obviously everyone knows you work within a team but it's downplaying your own accomplishments and responsibilities to lean too heavily on the ""we"" in addition to not giving the interviewer an accurate assessment of your abilities as an individual.",69Cobalt,2025-04-13 17:17:13,6,cscareerquestions,t3_1jxldo8,False,
mmv4gh0,Not helpful without TC,xlb250,2025-04-13 07:58:44,6,cscareerquestions,t3_1jxldo8,False,
mmy36tb,Yeah I don't know how much I agree with this post. I also just finished interviewing for a new senior level position and the experience varies greatly between companies and expected compensation levels,TomMiller95,2025-04-13 19:42:24,1,cscareerquestions,t3_1jxldo8,False,
mmyb64v,"Thanks for this OP. But we’ve got to stop sharing the following. If you’re junior, don’t listen too much to this:> Document your code: *do not comment it, code should be self explanatory*, if its not rework it, write actual Doxygen/XML documentation or whatever is the standard for the targeted langageCommenting with what or why things are the way they are, are sometimes _crucial information_, especially in legacy systems. Code in legacy systems are seldom self explanatory if not being simple parsers, http endpoints or similar.",xkcd_friend,2025-04-13 20:24:53,1,cscareerquestions,t3_1jxldo8,False,
mmsivfr,"This is perfect, thank you. I’ll be considering these tips during my job hunt. Could you give more information about what outreach entails and your current experience level that led to these offers?",TrueLiterature6,2025-04-12 20:43:52,-18,cscareerquestions,t3_1jxldo8,False,
mmtgj5o,This is the real question,_my_reddit_user_,2025-04-13 00:07:07,7,cscareerquestions,t1_mmssopu,False,
mmwvkjh,This isn't what I said. I pointed out what was actually important in those interviews/assignements,Idiot_Pianist,2025-04-13 15:54:53,-8,cscareerquestions,t1_mmssopu,True,
mlxstbt,"Work your way down market -- a big tech company probably won't bit on 10 months exp with a 15 month gap, but smaller companies and start ups will.My general approach to hiring: if you aren't getting any callbacks, fix the resume. If you aren't passing screens, work on LC. If you aren't getting offers, work on system design/behavioral.You're not getting callbacks, so that's resume + application strategy. It might not make sense to spend 5 hours a day on LC, but instead work on your resume and network. This is a difficult time in the market, but you can probably find something, somewhere, especially if you are willing to move and don't mind working for a small start up.",justUseAnSvm,2025-04-07 22:21:03,45,cscareerquestions,t3_1jtxwnt,False,
mlxvahm,"It matters much less than your brain is trying to convince you. You're not broken homie. As for tips, the systematic steps recommended by others are the way to go. No notes.",According_Jeweler404,2025-04-07 22:35:28,8,cscareerquestions,t3_1jtxwnt,False,
mlypfi2,No advice but congrats on getting sober. Took me far longer than you.,137thaccount,2025-04-08 01:34:20,7,cscareerquestions,t3_1jtxwnt,False,
mlxuvgq,"Spend a day or two doing market research, in my country there's 200-300 applications for Python/JS positions, but you scroll to Rust/Go and there's 4 applications on Entry roles with postings from 3-4 days ago on Linkedin. Learn something that's not ""super popular"" or you risk fighting over one job posting with 500 people.",Alphazz,2025-04-07 22:33:02,12,cscareerquestions,t3_1jtxwnt,False,
mlxzze4,I just picked up a contract with big tech after quitting my last role in May 2023. Is the pay great? Nope. Is it 100% in person 5 days a week? Yep. Is it a paying software gig I can live comfortably on? Yes it is. 5 YoE Seattle. Good luckEdit: just realized you don’t have much experience. It might not be easy for you. Good luck though,Common-Pitch5136,2025-04-07 23:02:12,4,cscareerquestions,t3_1jtxwnt,False,
mm0ixlv,"You’re not screwed—just be consistent, keep building, and own your comeback story because redemption with proof of growth is way more powerful than a perfect résumé.",QuantumTechie,2025-04-08 10:59:50,2,cscareerquestions,t3_1jtxwnt,False,
mlyvsel,Post your resume,RapidRoastingHam,2025-04-08 02:13:00,1,cscareerquestions,t3_1jtxwnt,False,
mlzhg22,"Stay strong mann... I am exactly in the same boat as you. Graduated in December 2023, received a couple interviews here and there, but no offer everytime. I'm kind of pivoting to IT support, though that's not where my passion lies. My passion lies in software dev. I'm hoping I can somehow weave myself in and grow with a company to the point where I can pivot from help desk to software dev. That might be to much to ask for too so idk. That is, if I even get a help desk role to begin with...",Tall-Ingenuity-8020,2025-04-08 04:46:28,1,cscareerquestions,t3_1jtxwnt,False,
mlztckp,"If you can post quality projects on Github that gain a lot of stars, it would probably help a lot with getting interviews. It can also help bridge the unemployment gap.",Null_Note,2025-04-08 06:35:04,1,cscareerquestions,t3_1jtxwnt,False,
mmkz8oo,"notebook with 16gb ramThat's the problem, dont use a pile of trash laptop if you are needing to run VPN, Docker and multiple apps",Whisky-Toad,2025-04-11 15:56:47,100,cscareerquestions,t3_1jwsuts,False,
mmkx314,"It's quite common on large projects. My solution is to use mono repo with Aspire so I don't have to open multiple IDEs, one per each micro service that I'm working on. Also the docker containers are scheduled by the Aspire. Also upgrading the .NET to the latest version can speed up the build time. (I'm not sure if you're still on the 4.x framework version or newer)",Rikarin,2025-04-11 15:46:24,17,cscareerquestions,t3_1jwsuts,False,
mml0wdu,You need more RAM,fluffysalads,2025-04-11 16:05:00,16,cscareerquestions,t3_1jwsuts,False,
mml273g,"At my company my dev machine is hosted in the cloud and has like 80 cores + 120gb of ram. Our builds would obliterate any normal computer but development is pretty smooth with our setup.I work at a very big company with a lot of dev infrastructure, so my experience is not the norm by any stretch, just adding a data point.",ProgrammersAreSexy,2025-04-11 16:11:32,25,cscareerquestions,t3_1jwsuts,False,
mml3l86,"Hardware issue. Can you ask for better hardware?For reference, my Mac is M4 Pro (48GB RAM) ... my remote machine is 72 cores, 228GB RAM. Everything is butter smooth.I used to have an Intel Mac and an M1 Pro. I felt Chrome and IntelliJ were eating up everything and running hella slow.",caiteha,2025-04-11 16:18:28,9,cscareerquestions,t3_1jwsuts,False,
mml5rvs,I work in cloud networking. Our main software takes 45 minutes to build. With a VM developer workspace with 1500+ gb ram and 192 cpu cores. Your thing sounds pretty tame you just need better hardware.,Behold_Always_Oncall,2025-04-11 16:29:20,3,cscareerquestions,t3_1jwsuts,False,
mmo7jbq,"That is highly unusual. Definitely not the norm. I work on a number of .net projects and they're all speedy.First of all, what version of .net? .net framework 4.8 and older projects can be very slow in Docker, yes, especially with a really heavy CMS like Sitecore. Even then, it shouldn't take hours.Is every developer at your company working on a machine like this?I've seen projects that are just a complete and utter mess with thousands of lines of code, and even they weren't as bad as what you're describing.",Brainvillage,2025-04-12 02:38:52,2,cscareerquestions,t3_1jwsuts,False,
mmmigt0,"no issues with my HP zbook g8 with 64gb ram, I9, and a TB SSD. Typical open one or two SSMS sessions, a visual studio or two, and visual studio code. 16gb is not sufficient.",debugprint,2025-04-11 20:33:01,1,cscareerquestions,t3_1jwsuts,False,
mmn7eey,Sounds like you need a better laptop.,Pale_Height_1251,2025-04-11 22:51:38,1,cscareerquestions,t3_1jwsuts,False,
mmp42kq,My condolences. Even a 32GB Macbook pro is struggling and people are requesting 64GB. Rip 16GB Notebook.,Deadshot_TJ,2025-04-12 07:12:02,1,cscareerquestions,t3_1jwsuts,False,
mmyovmu,That’s a huge red flag. Polish your resume…,liuamder,2025-04-13 21:40:03,44,cscareerquestions,t3_1jyirbk,False,
mmypa9h,Always be prepared. Get your resume reviewed. And when asked simply say that there is a pending layoff,HackVT,2025-04-13 21:42:19,8,cscareerquestions,t3_1jyirbk,False,
mmz4p86,"Let me guess, south asian only hiring south asians?",Imnotneeded,2025-04-13 23:11:41,6,cscareerquestions,t3_1jyirbk,False,
mmyq81i,"Start looking just in case, yeah. Maybe you find a better job",LookAtYourEyes,2025-04-13 21:47:31,4,cscareerquestions,t3_1jyirbk,False,
mmz7qyr,Indian hiring only Indians?,CheapChallenge,2025-04-13 23:30:19,4,cscareerquestions,t3_1jyirbk,False,
mmzba71,"My 2 cents, look but remember that a lot of this is because they are cutting costs. A jr dev with less than 1 year isn't costing that much compared to what I presume to be seniors. Keep a look out but you might be ok, just don't rock the boat too much while you are looking,",TKInstinct,2025-04-13 23:52:21,1,cscareerquestions,t3_1jyirbk,False,
mmzfs4n,">couple months ago the company hired a new CTO and since then I’ve seen engineers being let go, company is still hiring new engineers but almost all of them are from the same place same backgroundAnyone else remember that thing they did in China where they'd hold up a blank piece of paper because they knew they weren't supposed to say something and the joke was that it didn't matter if the paper was blank because everyone already knew what the paper actually said anyway?",Souseisekigun,2025-04-14 00:20:46,1,cscareerquestions,t3_1jyirbk,False,
mmyqc8w,"I’m tired bruh, took months to find this job I just want stable employment. I don’t wanna be unemployed for months again :loudly_crying_face:",meidhdosksbdidks3281,2025-04-13 21:48:10,23,cscareerquestions,t1_mmyovmu,True,
mmyreq0,Where to get resume reviewed?,Exotic_Avocado6164,2025-04-13 21:54:09,3,cscareerquestions,t1_mmypa9h,False,
mmyto7t,"I’m in a similar boat as you, I’ve been applying but getting nothing. No crumbs. Not even rejections lmao. My employer told me my speed was lacking (these guys are crazy they just expect an insane amount of work done weekly), but a combination of family problems, personal mental health decline, and work load, all at once is what affected me otherwise I would’ve been okay I think. I have more than a few expenses and little savings so if I get thrown, I’m screwed. 2.5YOE but it doesn’t feel like that’s helping me",NotHim40,2025-04-13 22:06:54,8,cscareerquestions,t1_mmyqc8w,False,
mmnu3yw,"Getting pushed to the ground and stomped in the face repeatedly by life right now. Hopefully can come back and give advice at the other end. Life rn is just applying, bombing interviews, stuff down negative feelings, fix what I did wrong, pick head up, repeat. I’m interested in the intersection of AIxHealth and AIxClimate so I’m going to a lot of climate networking events too. Hackathon and a mixer in a week. Just got to put our heads down and put in the work. We’ll get through this",Bright-Salamander689,2025-04-12 01:11:37,44,cscareerquestions,t3_1jx5fsn,False,
mmrz54r,"Been unemployed for about a year since I got laid off, but I’m going back to work in few weeks. Since I was laid off, I was applying to a few jobs each week and taking it easy. At first I needed to do a bit of Leetcode to refresh my interviewing skills, but after a bunch of interviews I started getting pretty good at it. I was getting feedback pretty regularly that I did well and they decided to go with another candidate whose experience was a better fit. Being a senior engineer, there isn’t a ton of roles available, but I finally passed an interview with a company that has team match, so I was able to wait to find a team for a couple of months. Turns out the wait was worth it because the offer was a bit north of $500k. Good luck u guys !",hellishcharm,2025-04-12 18:54:02,5,cscareerquestions,t3_1jx5fsn,False,
mmo59te,"As an unemployed person, job hunting becomes your job, but for me it didn't pay anything so naturally I eventually broke down when I did this unpaid job for 2 years with zero results.",TalesOfSymposia,2025-04-12 02:23:45,3,cscareerquestions,t3_1jx5fsn,False,
mmo4cnb,"last year when I was unemployed, job hunting is my job, so I'd wake up at like 830am and I don't stop ""working"" aka job hunting until like 11pm and I'd do that 7 days a week, lining up on average 3-4 interviews a day or 15-20 interviews a week I don't do temp jobs as I'm not even sure about the legality of it since I'm on a visa and I don't do contract jobs, it's legal, but my policy is I didn't come to USA to be treated like a 2nd class citizen, I'm unemployed but not desperate, worst case I was fully prepared to return back to my home country, ended up with multiple competing offers (lowest was around $230k TC fully remote vs. highest was around $320k TC in-office)",NewChameleon,2025-04-12 02:17:40,14,cscareerquestions,t3_1jx5fsn,False,
mmptmb8,Been unemployed for almost two years. The first year was kinda by choice - I saw the market was bad and I had plenty saved so I enjoyed life “while waiting for things to improve” LOL. Now I’m fully committed to finding work. I’m working on personal projects to sharpen my dulled skills and applying. As a mid mid-level dev I find I’m bombing technical rounds so I’m trying to learn from those mistakes. I have an interview this coming week for a job that pays half what I made at my last job and is likely in-office. If that doesn’t work out I need to seriously consider pivoting. But Ug.,NicoleEastbourne,2025-04-12 11:30:40,2,cscareerquestions,t3_1jx5fsn,False,
mmouh28,Drive semi trucks,Due_Change6730,2025-04-12 05:38:15,1,cscareerquestions,t3_1jx5fsn,False,
mmr764h,"""Member service representative""",PaynusInTheAnus,2025-04-12 16:28:43,1,cscareerquestions,t3_1jx5fsn,False,
mmzadet,"Practice leetcode until you can do mediums. Practice system design. Being ready for the interview when it comes is a good step. No better feeling in the world than smashing the technical interview. And in the future if you find yourself unemployed again, it won’t be nearly as hard to relearn the leetcode/system design concepts you’ve forgotten. That, or start a project and treat it as full time",phollowingcats,2025-04-13 23:46:41,1,cscareerquestions,t3_1jx5fsn,False,
mmsk4om,How many YOE did you have?,goro-n,2025-04-12 20:50:50,1,cscareerquestions,t1_mmrz54r,False,
mmobpqo,1. what months did you do this exactly? 2. what did you study?3. how much yoe 4. what roles did you target?5. what startegy worked the best?,bravelogitex,2025-04-12 03:07:18,5,cscareerquestions,t1_mmo4cnb,False,
mmihh8o,imo there's more job security in more niche fields. web dev is probably one of the fields that gets hit the hardest by both AI and layoffs as theres more competition,machinegod420,2025-04-11 04:44:03,107,cscareerquestions,t3_1jwhqda,False,
mmii0qa,"I hate web dev, have boycotted JavaScript my entire career. Yes there are less jobs, but I’d argue they are higher quality jobs. Also no offense to people who went to bootcamps, but I’m happy knowing none of them are going for the same jobs as me and asking for 1/4th less pay.",Optimus_Primeme,2025-04-11 04:48:38,65,cscareerquestions,t3_1jwhqda,False,
mmihh0k,"Lots of embedded system engineers in defense. Tons of openings right now, too. Probably similar in robotics, commercial space, etc. (It might be harder work for less money than web dev though.)",Prudent_Candidate566,2025-04-11 04:43:59,29,cscareerquestions,t3_1jwhqda,False,
mmin788,I think Embedded is much more secure. Web development is too saturated.,ash893,2025-04-11 05:33:45,28,cscareerquestions,t3_1jwhqda,False,
mmiius7,Everyone flooding into computer science is what caused all the bullshit going on in the tech labor market right now. The fact that you're one of few going into a field that will still very much exist for years to come means you might have the most stability of all.,LivingCourage4329,2025-04-11 04:55:43,26,cscareerquestions,t3_1jwhqda,False,
mmihd5x,"There are way more web dev jobs than embedded. It's only a risk pursuing embedded if your measure of success is how quickly or easily you find a job. Embedded engineers aren't going to be needed less as time goes on, I'll just say that.",luvsads,2025-04-11 04:43:03,17,cscareerquestions,t3_1jwhqda,False,
mmiow6d,"It's not a risk at all. There is a severe shortage of embedded engineers because everyone for the last 20 years has been more into web dev, which is now heavily over saturated. Whenever I try to hire an embedded engineer, 95% of the applicants are web developers with zero relevant knowledge or experience. Presumably they can't get a job elsewhere so apply to whatever they can find. You'll end up near the top of lists of people like me just by default.",RavkanGleawmann,2025-04-11 05:49:16,7,cscareerquestions,t3_1jwhqda,False,
mmiho7v,"They are right, the majority of software jobs are in web dev, because we use so many websites and apps each day, but just do what you enjoy. If it turns out that you cannot get a job after studying embedded, will you be upset? If you really enjoy it and don't care about job outcomes, then stick with it",uwkillemprod,2025-04-11 04:45:41,16,cscareerquestions,t3_1jwhqda,False,
mmipsvu,"No, most anything is better than Web Dev. Embedded has jobs and not 100+ applicants per job of qualified candidates, as in, actual microprocessor coursework. That they're all doing the easy at intro level thing, is some evidence not to copy them. Cloud isn't a specialization. Either you know AWS or Azure or GCP or you don't. Can pick that up if you want to be more well-rounded. Don't put all your hopes and dreams into one bucket.Even if you don't go into Embedded, passion in any form looks good. Do what you like but not 100% of the time. Avoid Web Dev. Fullstack and Backend are fine too.",NewSchoolBoxer,2025-04-11 05:57:45,8,cscareerquestions,t3_1jwhqda,False,
mmj2axy,Go into flight software (especially satellites) or finance as an fpga engineer. You will make good money and have good job security,WeastBeast69,2025-04-11 08:05:40,6,cscareerquestions,t3_1jwhqda,False,
mm72nor,I don’t understand why you can’t accept the new contract AND apply for new roles during it? Much rather be a contractor than jobless,iLiveoffWelfare,2025-04-09 11:50:23,130,cscareerquestions,t3_1jv3i0z,False,
mm73am4,take the extension and apply for different jobs,Seantwist9,2025-04-09 11:54:46,15,cscareerquestions,t3_1jv3i0z,False,
mm7vxya,"Take the extension and think to yourself you have approximately 6 months to find a new job. Only use that mindset if you think it will reduce stress for you. Realistically, it's possible they offer you another 6 month extension at the end of that.Make sure to confirm there's nothing in the contract saying you need to give anything beyond standard notice, although you may just be stuck with that.",Chili-Lime-Chihuahua,2025-04-09 14:39:04,5,cscareerquestions,t3_1jv3i0z,False,
mm782fx,"How are you so awesome and effective at this job, but they don't let you touch production?Also, it is really common for companies to not be able to ""afford"" to promote people to full time. It's not that they literally have no money, but a lot of the time some upper management toolbox has explicitly stated the team is not allowed.",PhysiologyIsPhun,2025-04-09 12:26:42,10,cscareerquestions,t3_1jv3i0z,False,
mm735hl,Sounds like they barely talked to you BECAUSE they don't like you lol.,Fun-Meringue-732,2025-04-09 11:53:47,5,cscareerquestions,t3_1jv3i0z,False,
mm736b9,"Are you an actual contractor being paid on a 1099, or a W-2 employee through a different company providing services to the client that does a temp-to-perm arrangement where the client will hire you after x periof of time if they wan too?Either way don't worry about being hired just re-negotiate your contract for a higher rate, and use the client as a past performance history customer. If you don't like the work, you are a contractor, you work on expliclty what is in the contract, nothing more, no additional duties as assigned, nothing less. Get a new contract and move on to it.If you are a 1099, you are you own business, you should be setting the rates you charge, when you work, etc. and have your customer agree to the terms and statement of work. Then invoice them for your time, milestone, project based work upfront or at certain timeframes in accordance with your contract.I've done temp-to-perm, sometimes you get hired on and sometimes you don't no big deal as your still getting work and they just extend out the contract.",Helpjuice,2025-04-09 11:53:56,2,cscareerquestions,t3_1jv3i0z,False,
mm7db65,"Hey man, i was in the same situation in feb when I was having the discussions about converting to a full time position and it was exactly the same what you went through. My contract got extended but i kept applying to other companies and finally landed an offer in April. It really sucks and I can relate. Keep your contract but start applying to new roles dont even waste a single moment and you will get an offer sooner than you expect.",Chukundar,2025-04-09 12:58:50,1,cscareerquestions,t3_1jv3i0z,False,
mmc843p,>They did offer me to extend 6 month more but it is very unlikely that I'll get hired perm position. What should I do here? Do I take the extension or leave and find a better opportunity? You take it and continue to apply. Taking a contract and expecting to convert is the wrong mindset when contracting.,tnerb253,2025-04-10 04:52:13,1,cscareerquestions,t3_1jv3i0z,False,
mmhnqdv,"Take the extension and explore or apply to a full time job opening at the company in the meantime. Focus on yourself first, especially during this climate.",pexavc,2025-04-11 01:17:48,1,cscareerquestions,t3_1jv3i0z,False,
mm96ptm,*Googles Idempotency*,Beautiful_Job6250,2025-04-09 18:25:21,43,cscareerquestions,t3_1jvcq0x,False,
mm9b5rb,"If they failed you because you didn't know the definition of a word, that's a shit interview. Missing a lot of core concepts, though, would likely make an interviewer hesitant.If they tried to guide you to explain using the *concept* of idempotency in your work...yeah, it's something you should know. It's a bit like asking OOP or SOLID principles. I don't care if you know the acronym or can say the word encapsulation. I do care if I think your code will reflect understanding.That said, with 5 candidates in the final round, 4 of you were going to get a rejection no matter how well any individual did. It sucks it was you this time, but getting to that stage is still a good sign for next time.",skodinks,2025-04-09 18:46:56,16,cscareerquestions,t3_1jvcq0x,False,
mm9a47u,Someone once asked me what the difference between .NET and .NET Framework was. I thought it was a trick question.,Late_Cow_1008,2025-04-09 18:41:54,12,cscareerquestions,t3_1jvcq0x,False,
mm96q3m,"Did they even try to reword it to help you? But I hear you, it’s frustrating that the whole process can come down to one bad interviewer?",NachoBombo,2025-04-09 18:25:24,5,cscareerquestions,t3_1jvcq0x,False,
mm9ccoi,"That same manager would get eaten alive on Wall Street, no room for smart asses",NeedleworkerWhich350,2025-04-09 18:52:43,3,cscareerquestions,t3_1jvcq0x,False,
mma8f7j,"This sounds like a soft-skills question that addresses how you act when presented with information that you do not know, but are ""expected"" to know. Do you ask someone? Do you admit a lack of knowledge? Are you graceful when accepting new knowledge?",Varkoth,2025-04-09 21:30:22,2,cscareerquestions,t3_1jvcq0x,False,
mmabcys,"For future interviews, read through system design primer on GitHub. Ime anything from there is fair game for a lot of interviews",ChiDeveloperML,2025-04-09 21:45:55,1,cscareerquestions,t3_1jvcq0x,False,
mm9q4jg,"It's tough, and I suppose they need some way (even if it's not a great way) to pick between tons of candidates. It sucks and I've been there but you just have to stick it out and hope you get lucky :) don't get disheartened. The fact you got to the final 5 means you are close. Even though I know that's annoying to hear.",notgreatusername,2025-04-09 19:59:53,1,cscareerquestions,t3_1jvcq0x,False,
mm9rct2,"I've gotten rejected because I didn't have experience with a specific type of data, so chin up my guy! It happens and it sucks.",Bangoga,2025-04-09 20:05:48,1,cscareerquestions,t3_1jvcq0x,False,
mmb6ic6,"Let me remind you that interviewers often use questions made to make you fail. Tech is a universe of terms and tools so complex and diverse that a person with experience can find one obscure term that they know you won’t easily know and ask you about it. Maybe they didn’t like something about you, or are biased, or looking for something else, and they may be pricks using this technique to pass on to the next. I often use this with candidates that lie over and over, because this allows me to see how far can they lie about something, thus having a non-opinionated reason to fail them; when people are honest and say “I don’t know” it puts them way higher in my approval.",WorstRegardsBye,2025-04-10 00:45:21,1,cscareerquestions,t3_1jvcq0x,False,
mmyjqe3,"$110,000, hybrid in Seattle, healthcare, 5 YOE",Winter_Essay3971,2025-04-13 21:11:20,36,cscareerquestions,t3_1jyhueb,False,
mmyk285,"I was making 144k base salary with 2-3 YOE at some no name company. Now I make 165k base salary at a small tech company with 3.5 YOE. Located in Philly and working remote.Edit: other benefits included in my current role are fully paid insurance, 401k match (not the best), and 150k RSU package disbursed over 4 years w/ a 1 year cliff.",IndoorCloud25,2025-04-13 21:13:10,37,cscareerquestions,t3_1jyhueb,False,
mmyo9ic,"150k tc in Chicago, 5.5 yoe",AniviaKid32,2025-04-13 21:36:37,10,cscareerquestions,t3_1jyhueb,False,
mmyllot,7yoe in Defense.$125k base + ~$5k bonus + ~$12.5k 401k match. Fully remote.,ZolaThaGod,2025-04-13 21:21:50,14,cscareerquestions,t3_1jyhueb,False,
mmyukzs,50k remote. 4 YOE Midwest. Frontend dev for a small startup,Successful_Camel_136,2025-04-13 22:12:14,6,cscareerquestions,t3_1jyhueb,False,
mmyklzp,"5yoe 115k base salary fully remote. The “extra” is some stock options in a non-public company plus my insurance benefits and a tiny 401k match. Total comp is probably in neighborhood of 120, 125 if you count insuranceThough I’m getting a raise at the end of the month supposedly",Joey101937,2025-04-13 21:16:15,4,cscareerquestions,t3_1jyhueb,False,
mmyk6c9,"When I was a mid level at a smaller company, I was making about 180k total comp.",Fun_Acanthisitta_206,2025-04-13 21:13:48,7,cscareerquestions,t3_1jyhueb,False,
mmynw61,Where are those high paying jobs listed?Not in Chicago I will tell you,Chicagoan2016,2025-04-13 21:34:33,3,cscareerquestions,t3_1jyhueb,False,
mmyn1uc,"10 YOE MCOL, ~150 remote",chris_nore,2025-04-13 21:29:55,5,cscareerquestions,t3_1jyhueb,False,
mmyqgjx,Ambitious of you to assume anyone here is employed.,csanon212,2025-04-13 21:48:51,3,cscareerquestions,t3_1jyhueb,False,
mmkbjnp,I’m 7 years into a company and feel the same way. I need to switch companies.,OkMacaron493,2025-04-11 13:59:35,24,cscareerquestions,t3_1jwqd0j,False,
mmkdjfi,"Yes, after 36 years in this industry, I'd say it's normal. In fact, I'm kind of in one now brought on by a severe case of SAFe Agile. I guess the trick is to find a company where a longer smooth and happy run is possible, they're out there. But, there's almost always a management change, mergers, private equity buyouts and such lurking around, waiting to destroy your morale.From my perspective, the best thing to do is to find something outside of work, maybe even outside of tech, to give you balance. As I heard a guy say once about corporate work, ""Don't sweat the small stuff, and it's all small stuff.""",jfcarr,2025-04-11 14:09:47,17,cscareerquestions,t3_1jwqd0j,False,
mmkejxh,I think there is a lifecycle within most jobs/roles. Familiarity breeds contempt.,abluecolor,2025-04-11 14:14:57,7,cscareerquestions,t3_1jwqd0j,False,
mmkh9ps,You need a change of environment.You don’t quit the job but you quit the manager/company is 100% true.,jrdeveloper1,2025-04-11 14:28:34,3,cscareerquestions,t3_1jwqd0j,False,
mmncx9b,"Nearly everyone I know with a 15+ year career has had at least one ""dark night of the soul"" moment where they questioned everything. The most successful ones used it as a catalyst for meaningful change.A few patterns I've observed from those who navigated similar situations well:1. Some found renewal by changing environments rather than paths—same role but at a company with better culture fit2. Others discovered they'd outgrown their current role and needed to pivot toward management, architecture, or specialized consulting 3. Many realized they'd been running on external validation rather than intrinsic motivation, and needed to redefine success on their own termsThe fact you're sending out CVs for roles that excite you is a great sign. That spark of interest is exactly what you should follow right now. If your job search skills are rusty, a service like Applyre might help. This isn't the end of your growth curve—it's the dip before the next rise. Ten years in is actually the perfect time to reassess and redirect your energy. The skills and perspective you've gained won't disappear; they'll just find new expression in whatever comes next.",Significant_Soup2558,2025-04-11 23:24:23,3,cscareerquestions,t3_1jwqd0j,False,
mmkbjia,"Low points happen, it's real! It can because of a good role that changes context, or that you lose interest in that role's niche, both are valid.You may need a change in some way. But 100%, restarts are normal. I'd ask you to think about,1. What gives you energy in your current role2. What drains you of energy3. What of 1 and 2 align with what you want longtermSounds silly, but time for a path/alignment check. What do you want out of a job?For context, I'm 10-15 years in, I've had 2-3 of these. I've jumped industries, IC to leadership and back. You carry your skills forward wherever you go!",RedRelics,2025-04-11 13:59:33,2,cscareerquestions,t3_1jwqd0j,False,
mmkk8d5,"Thank you all for the overwhelmingly positive comments. It's good to find familiarity, and to know I'm not alone. Does this sound trivial? Perhaps. I WFH, have very little face-to-face contact with colleagues and other professionals (this is something I wish to change by also getting a new job, local to me). Good to know this is not just a me problem, but that's how life is.",Intelligent-Rub4566,2025-04-11 14:43:26,2,cscareerquestions,t3_1jwqd0j,True,
mml6qlb,"Obviously, normal careers have ups and downs.> I've started sending out a few CVs for jobs which really made me feel excited and happy from reading the job description.Smart idea. That is a strong sign it's time to get another job. Often another job will make your work day feel a lot better.",Joram2,2025-04-11 16:34:12,2,cscareerquestions,t3_1jwqd0j,False,
mmlv6lk,"I think it's normal to look at your career and life, in general, to have ups and downs. Sometimes it's the team at your company, but it's probably easier to move to a different company to find what you're looking for. Ideally, you'd have some former coworkers you enjoyed working with who can vouch for a new place.Anyway, good luck. Hope you can find something you enjoy more. I know I'm going through a bit of a rut myself.",Chili-Lime-Chihuahua,2025-04-11 18:34:21,2,cscareerquestions,t3_1jwqd0j,False,
mmqjida,"Could be a company/environment thing rather than a job sector issue. Me personally I was fully remote for a while and loved it, now I’m doing a pretty long commute 2x a week. It’s definitely affected my enjoyment of the position even though I objectively think the work is decent. I’d recommend changing the environment but with this market maybe staying there and grinding it out is better for the time being.",Brilliant_Camera4537,2025-04-12 14:22:25,2,cscareerquestions,t3_1jwqd0j,False,
mm34taa,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-04-08 19:27:12,1,cscareerquestions,t3_1jum7s8,False,moderator
mm358un,"Bro, we all have social anxiety disorder. Especially as interns. But what you will see in the following years of your career is that the people with the best social skills rise to the top. So don’t be ashamed of your starting point, and also don’t be ashamed of making mistakes when taking social risks. There’s only 1 way to improve your social skills and that is practice.",ninseicowboy,2025-04-08 19:29:21,69,cscareerquestions,t3_1jum7s8,False,
mm35xui,"Lol —- I have a diagnosed mental health disorderTbh answer depends, if it bad enough you can’t achieve goals or work with people then you probably won’t fit any job Sorry but true answer sucks",NeedleworkerWhich350,2025-04-08 19:32:52,22,cscareerquestions,t3_1jum7s8,False,
mm3hzaz,"As a PM, I see this as part of my job. I've met lots of engineers who come across socially anxious, and it's my job to gain their trust and get them to feel comfortable sharing ideas and concerns with me. As long as I feel I have that relationship with them it's fine if they're mostly quiet otherwise.",OpenConference3,2025-04-08 20:30:23,8,cscareerquestions,t3_1jum7s8,False,
mm35rjq,People will say yes but In my opinion you will be kept at a low level. No one wants to work with 0 social skill developers,throwaway534566732,2025-04-08 19:32:00,14,cscareerquestions,t3_1jum7s8,False,
mm37lng,Lots of devs have this issue. A lot grow out of it on the job.,West-Code4642,2025-04-08 19:41:09,10,cscareerquestions,t3_1jum7s8,False,
mm384is,I’ve worked in an office and remotely. I have similar anxieties and working remotely 100% helps that for me.,breakarobot,2025-04-08 19:43:43,5,cscareerquestions,t3_1jum7s8,False,
mm5nps3,"Yes, but get on meds. I had social anxiety and it was a huge damper to my career. I started on lexapro and I’m basically a totally different person(in a positive way).",Varrianda,2025-04-09 03:56:39,3,cscareerquestions,t3_1jum7s8,False,
mm4mj0f,"I have been diagnosed with social anxiety disorder and I have been a software developer for about 10 years now.So yes, it is possible. But I'm not going to lie, it's been hard. Really hard. Am I surviving? Yes. But it is just that, surviving and not thriving. The social aspects of the job always hold me back, 10x more than the technical or mental aspects. And the more senior you get, the more you are expected to focus on the social aspects over the technical.But of course everyone is different. For some people it can get better with exposure. For others it doesn't, but therapy and/or medication can make a difference. You should try difference approaches and focus on finding something that helps you.",Mysterious_Income,2025-04-09 00:07:40,4,cscareerquestions,t3_1jum7s8,False,
mm39vwt,"The person with the worst social skills in my coding program got a job, he was so terrible he almost cost me my certificate since he bulldozed every piece of work I did.",hotviolets,2025-04-08 19:52:02,2,cscareerquestions,t3_1jum7s8,False,
mmzf780,"I feel bad for younger devs, this shit is ridiculous. There should be at least a 1:1 ratio for candidate time to company time. OAs and ridiculous take-homes that take candidates hours shouldn't be allowed.",shinglee,2025-04-14 00:17:06,41,cscareerquestions,t3_1jylp5t,False,
mmzffyo,"If it’s not a FAANG company, I’d probably withdraw. Because that sounds super sus.",VoiceOfReason777,2025-04-14 00:18:38,27,cscareerquestions,t3_1jylp5t,False,
mmzhf8f,">...with very specific return values and status codes...Sounds like the startup was creating a product via candidate homework. It's all fun and games until the sexually frustrated, socially isolated, outcasts realize their career choice isn't paying off and they lose the last bit of hope in life. I'm sure nothing bad will happen.",LivingCourage4329,2025-04-14 00:31:10,12,cscareerquestions,t3_1jylp5t,False,
mmzeeos,Yeah unfortunately a lot of the OAs are ridiculous and you need to jump through many hoops have a chance. It sucks to grind something that won’t be super helpful for the job. It feels like a waste of time,BaconSpinachPancakes,2025-04-14 00:12:00,7,cscareerquestions,t3_1jylp5t,False,
mmzkl31,"Companies have seriously lost the plot. When I am looking for work I turn down that type of bullshit and will leave the industry before I tolerate being treated like a fucking monkey putting on a show, code monkey code! Put on a 3 hour unpaid show! Our industry has put itself on a high horse and everyone needs to get real. It’s a job, it’s computer code, relax.",JavaScriptGirlie,2025-04-14 00:51:15,6,cscareerquestions,t3_1jylp5t,False,
mmzmoo9,I literally withdraw my application if there's an online assessment. I work for money not for peanuts!,leastproestgrammer,2025-04-14 01:04:48,3,cscareerquestions,t3_1jylp5t,False,
mmzd9as,Probably giving actual work disguised as questions. Especially the 2nd and 4th question,Latter-Guitar6380,2025-04-14 00:04:43,5,cscareerquestions,t3_1jylp5t,False,
mmzfoij,I had a company once make me make a website for them as an OA. Never again,Sparta_19,2025-04-14 00:20:08,1,cscareerquestions,t3_1jylp5t,False,
mmzihxv,"Startup asks wild and uncalibrated OA, more at 7",ecethrowaway01,2025-04-14 00:38:01,1,cscareerquestions,t3_1jylp5t,False,
mmfcytb,I mean he's probably simply doing office work or something in Montana or something.,squirlz333,2025-04-10 17:56:05,54,cscareerquestions,t3_1jw450d,False,
mmfoh80,He became a night gardener,Onebadmuthajama,2025-04-10 18:52:06,19,cscareerquestions,t3_1jw450d,False,
mmfszuu,"Ideally he's now a goat farmer in Indonesia, living the simple life",AdForeign5362,2025-04-10 19:14:42,5,cscareerquestions,t3_1jw450d,False,
mmmhee0,Have you read my latest post ?,East_Indication_7816,2025-04-11 20:27:33,1,cscareerquestions,t3_1jw450d,False,
mmfw2w0,How is this a cs career question?,maikuxblade,2025-04-10 19:29:57,-4,cscareerquestions,t3_1jw450d,False,
mmgxuof,"Kinda weird to pose this question, almost as if you take pleasure in them being brave and walking away from the safest option available to them in life, and eschewing pleasures you consider essential. Take a look at yourself and worry about your own life.",FurriedCavor,2025-04-10 22:43:40,-4,cscareerquestions,t3_1jw450d,False,
mmfe86k,Or is he working at a garden center in a small town or something,Eli5678,2025-04-10 18:02:06,11,cscareerquestions,t1_mmfcytb,False,
mmfdirj,The part-time outdoor job didn't last?,Cheetah3051,2025-04-10 17:58:43,2,cscareerquestions,t1_mmfcytb,True,
mmggyun,“A night gardener?”,Mediaright,2025-04-10 21:11:49,4,cscareerquestions,t1_mmfoh80,False,
mmg3ykp,"The post I replied to isn't even a question either, and it's in the top 20 on this sub: https://old.reddit.com/r/cscareerquestions/comments/kfcmbj/ive_walked_away_from_software_development/",Cheetah3051,2025-04-10 20:08:15,7,cscareerquestions,t1_mmfw2w0,True,
mlxmm2i,"Very common. You mention Epic Systems though, so maybe you're thinking more about companies that hire fresh grads and actually train them and develop them? That's a lot less common lol.",WhatNo_YT,2025-04-07 21:45:58,19,cscareerquestions,t3_1jtnqpb,False,
mlwlom6,all the big techs,NewChameleon,2025-04-07 18:33:01,17,cscareerquestions,t3_1jtnqpb,False,
mlwi1gg,Every big company? Pretty sure there’s a new hire orientation every twice a month at every FAANG.,eliminate1337,2025-04-07 18:14:23,21,cscareerquestions,t3_1jtnqpb,False,
mlx9789,Basically any big company that has any decently sized engineering base,Prize_Response6300,2025-04-07 20:34:17,2,cscareerquestions,t3_1jtnqpb,False,
mlz070m,A whole lot of companies hire in cohorts,zninjamonkey,2025-04-08 02:40:51,1,cscareerquestions,t3_1jtnqpb,False,
mlzp44w,FYI Epic has a terrible reputation of terrible work life balance and having to use a proprietary language so your skills are not as transferable to other companies,WeastBeast69,2025-04-08 05:55:33,1,cscareerquestions,t3_1jtnqpb,False,
mlxnlv1,Yea that’s what I meant. I probably should have clarified,MixCommercial999,2025-04-07 21:51:27,0,cscareerquestions,t1_mlxmm2i,True,
mlxsumh,"Both companies I've worked at have this - Liberty Mutual last I was there did a 1 year rotational program where you're on two different teams, Capital One has a 2 year development program as well with two teams",AniviaKid32,2025-04-07 22:21:16,7,cscareerquestions,t1_mlxnlv1,False,
mmdpwtn,When I worked on class 2 slot machines :slot_machine: for Native American gaming Best Christmas parties ever - lots of swag - and I got to work 4*10 so three day weekends every weekThe single share holder is a billionaire now and that bamma could have paid me more,Exotic_eminence,2025-04-10 12:57:08,20,cscareerquestions,t3_1jvv98u,False,
mmdetl2,"Ironically, the one that folded.It was a start-up, sort of. The engineering team had really come together. Best Agile/Scrum experience of my career. Liked most of my coworkers. We were having fun building stuff.But the business side couldn't sell it. I don't know if we were building the wrong thing or what, but it just didn't happen.It collapsed about four years ago. I still meet once a week with three of those coworkers for a virtual TTRPG game we play, and loosely stay in touch with a couple of others, including the EM.",StolenStutz,2025-04-10 11:44:00,13,cscareerquestions,t3_1jvv98u,False,
mmdqua7,"Government is my favorite. So far largely unaffected by DOGE. Previously worked in a tech consulting company. In consulting company we often work with governments especially state governments. Every time I go on site, I am jealous of the work and office environment compared to what we had. Finally got to be on the other side and I was much happier. Chill office and work environment. No pressure to do anything more than your job. When there are events outside of it, it's not some company wide curated event in disguise to make you work longer hours. I feel the barrier between office life and personal life is much more respected.The other thing I like is the lax dress code. The previous company was very strict about dress code even on casual Fridays which just means you can wear jeans. I can wear anything as long as it's fine in public.Work isn't stressful and as mentally exhausting. Tech may not be the most cutting edge. As I get older, I prefer to work things that won't make me mentally exhausted when I get home. Things did heat up a bit during and after the pandemic, but still comparatively less stressful.Work in many different domains that can be transferable to even non tech jobs.Job security, S tier health benefits, and pension. Pay bit below market, but all things considered, it is fair. The pay can be found in the handbook. Everyone paid consistently by role plus experience.",dustingibson,2025-04-10 13:02:44,8,cscareerquestions,t3_1jvv98u,False,
mmee45r,"Google which is where I am right now. My favorite part is the pay and the friends I've made at work. Next is the amenities are great (I'm typing this while sitting in between sets at the on-site gym). The last thing I can think of is that I've found the people to be extremely helpful. Like, I can go to basically anyone with an honest question and they'll help me answer it or guide me in the right direction to get an answer. I don't feel scared to ask for help.",TonyTheEvil,2025-04-10 15:05:54,17,cscareerquestions,t3_1jvv98u,False,
mmdtjb8,"Believe it or not, working for an insurance company has been a wonderful change of pace. Sure, I could definitely make more elsewhere, but the work/life balance promoted from the top on down has just been blissful. Full work from home too.No long hours, no horribly tight deadlines, good benefits, hell, even a pension on top of a 401k. I'm at a point in my life where I don't need to prove myself to my psyche or the world anymore, I'm simply trusted to get the job done. My burnout is gone, and I get to spend time with my family, which to me, is everything.",OBI_WAN_TECHNOBI,2025-04-10 13:18:45,6,cscareerquestions,t3_1jvv98u,False,
mmdxtlt,"No name start up that eventually closed down. It was a pretty basic SaaS application, but i joined when there were less than 30 employees. The joke people say about how companies spew ""we're a family"" crap , the closest thing you'll find to that being true is at small startups. We did everything as a group together, and they would help out under performers a lot. It felt like i was invested in seeing the product succeed and I learned a ton due to the number of hats i had to wear.",lewlkewl,2025-04-10 13:43:15,2,cscareerquestions,t3_1jvv98u,False,
mmhl5mk,"A major grocery store chain. Fantastic WLB, technically hybrid schedule but I almost never go in, quarterly bonuses, easy work, largely unaffected by the economy, and pretty decent pay. I’ll probably stay here until I retire.",csworldfan,2025-04-11 01:01:40,2,cscareerquestions,t3_1jvv98u,False,
mmddp0y,"I interned at a company in 2020 on a platform team and the team was extremely, extremely friendly and nice. They were based in Austin and perhaps the culture was a bit different because COVID-19 had just happened.",None,2025-04-10 11:35:43,1,cscareerquestions,t3_1jvv98u,False,
mmhxzfy,How do you think he became a billionaire? /s,FurriedCavor,2025-04-11 02:21:57,3,cscareerquestions,t1_mmdpwtn,False,
mmdxati,I currently work for a consulting company that has contracts for government work. Sounds like the pay cut is worth it. Do they actually do dev work on that side tho? Seems like us contractors are the main ones doing the dev work,modeezy23,2025-04-10 13:40:21,3,cscareerquestions,t1_mmdqua7,False,
mm5dt7q,"You're not alone. Many feel hopeless at times, myself included. I keep looking for tech work, though I've widened my search and will be dipping into the trades until I find something better. Don't need to give up on CSC forever, but it might be prudent to look for other work simultaneously.Try not to beat yourself up too much or take it personally. It's hard to find work out there for many, and not just in tech.",NewcDukem,2025-04-09 02:48:36,11,cscareerquestions,t3_1jupggk,False,
mm5tzge,you might have to start at helldesk. I cant find a job either and im considering going back to school for a masters even though everyone ive spoken to has gone against that idea,Safe-Resolution1629,2025-04-09 04:45:14,2,cscareerquestions,t3_1jupggk,False,
mmr6nde,i cant even land a contractor job :(,Only-Golf-6534,2025-04-12 16:25:57,1,cscareerquestions,t3_1jupggk,False,
mm4f3m3,Then quit. Maybe you have other problems/priorities in life that you need to solve.,Sparta_19,2025-04-08 23:25:19,-21,cscareerquestions,t3_1jupggk,False,
mmeltmf,Thanks! I appreciate that.,LivingWeather8991,2025-04-10 15:44:18,3,cscareerquestions,t1_mm5dt7q,True,
mmelq00,I have tried to apply but haven’t found anything yet.,LivingWeather8991,2025-04-10 15:43:48,1,cscareerquestions,t1_mm5tzge,True,
mm4kr00,"Ah yes, all those chill problems and priorities we can solve without money.",GlassSomewhere3649,2025-04-08 23:57:18,20,cscareerquestions,t1_mm4f3m3,False,
mm4nsw9,I don't know why I'm being downvoted for telling the truth. I'm not saying he should quit right now unless he really has to and adjust his life plan. Idk why so many of you are socially dumb at times,Sparta_19,2025-04-09 00:15:12,-15,cscareerquestions,t1_mm4f3m3,False,
mm4n4ij,"yes, there are more jobs than CS ones. You're too irrational right now. If OP needs money and people are gettiing replaced/fired/rejected easily then it's time to switch the plan",Sparta_19,2025-04-09 00:11:13,-11,cscareerquestions,t1_mm4kr00,False,
mm5d7ni,>socially dumbThe irony,NewcDukem,2025-04-09 02:44:48,7,cscareerquestions,t1_mm4nsw9,False,
mm2ymdg,"Negotiations almost always boil down to “do you have another offer that is as good or better.” Hard to get more without one, hard to not get more with one.",OkCluejay172,2025-04-08 18:56:18,80,cscareerquestions,t3_1jukzfa,False,
mm34fft,"Removing professionalism and being polite elements, in the end every negotiation essentially becomes me saying pay me $X or I walk away and the company saying okay sure or go fuck yourself.",KeeperOfTheChips,2025-04-08 19:25:16,21,cscareerquestions,t3_1jukzfa,False,
mm3m678,Are you Canadian? I can't imagine $44k on either coast in the US. You'd make more packing boxes in a warehouse.,iknowsomeguy,2025-04-08 20:49:51,14,cscareerquestions,t3_1jukzfa,False,
mm34pjk,"I’ve always asked them for the range for the position and tried to push towards the top of the range. I don’t give a number by myself. You don’t have much negotiating power without another offer. Even then, be ready for the offer to be rescinded from negotiation.",Wblegend,2025-04-08 19:26:41,3,cscareerquestions,t3_1jukzfa,False,
mm3ahru,just tell them u can work at burger king for that amount so they better step it up,BigCardiologist3733,2025-04-08 19:54:51,3,cscareerquestions,t3_1jukzfa,False,
mm2xhph,$30 isn’t that high to begin with. Stick to your guns.,rambleraptor,2025-04-08 18:50:47,4,cscareerquestions,t3_1jukzfa,False,
mm3cpqb,Is this a SWE job?,metalreflectslime,2025-04-08 20:05:20,2,cscareerquestions,t3_1jukzfa,False,
mm38pqj,"I'd ask for however much you need to move across the country for an hourly rate job.What I'd probably ask for, is however much you need to move across the country, and ask it as a dismiss-able signing bonus which will be waived in 6 months of employment.",justUseAnSvm,2025-04-08 19:46:33,1,cscareerquestions,t3_1jukzfa,False,
mm38y2d,Don’t answer until given offerIf working w recruiter just say letting recruiter negotiate on your behalf,NeedleworkerWhich350,2025-04-08 19:47:39,1,cscareerquestions,t3_1jukzfa,False,
mm39g1t,"Just ask for more or a relocation bonus or something. They'll either counter or they won't.If you can afford not to take the job, tell them you have another offer and would like whatever.If you need the job, take it and get experience and leave asap.Later in my career, I either have a job or money saved up so there's little risk trying to negotiate or in turning a job down.",Key-Alternative5387,2025-04-08 19:49:59,1,cscareerquestions,t3_1jukzfa,False,
mmr8e2c,"This guy sounds like a dick. You dodged a huge bullet.I could hack together a PR full of embarrassing crap, and my coworkers would just leave constructive feedback on it and maybe reach out offline to share some best practices with me.",k_dubious,2025-04-12 16:35:10,53,cscareerquestions,t3_1jxl1gz,False,
mmrd7ql,You touched his baby.He created his baby and now the new hires are touching it in ways he disagrees with. The business will fail because he can't let go enough to let other people work on the product. This type of stubbornness is common. Being the leader of the company just makes it more extreme.,TurtleSandwich0,2025-04-12 16:59:55,21,cscareerquestions,t3_1jxl1gz,False,
mmr84pr,He’s a jerk. I’m guessing his company has a very high turnover rate too. Is it a successful startup or kinda shaky?,sierra_whiskey1,2025-04-12 16:33:47,9,cscareerquestions,t3_1jxl1gz,False,
mmr98g8,There are people like that everywhere. Just ignore them and move on. Usually they’re inexperienced. The higher up you go the less that stuff happens.You don’t have to ignore them completely. Sometimes what they say is true. But you ignore the way they say it.,Haunting_Welder,2025-04-12 16:39:34,7,cscareerquestions,t3_1jxl1gz,False,
mms7ytv,Startups can be very hit or miss. Sounds like the dude is protective of the codebase and micromanaging. I’d jump ship purely because a CEO should have better things to do than monitor PRs,Few-Conversation7144,2025-04-12 19:43:23,4,cscareerquestions,t3_1jxl1gz,False,
mmwmxq9,"Over opinionated engineers are the worst to work with after rude engineers. They nitpick tons of shit, get hung up on irrelevant details, and slow down output because they usually have something to say on PRs. I work with someone like this and they can be extremely frustrating to deal with and then you end up second guessing yourself, not because what you're doing is wrong, but because you don't want to deal with their review. Recently, I literally had this person tell me i should rename a function during pair programming, so i renamed it to their suggestion, and then when we paired again the next week, they had forgotten that they suggested I rename the function, and told me i should rename it again, and their suggestion this time was almost identical to what i initially had it named as. I really felt like calling them out on it but just wanted to get our pairing session over with and move on to more important things.For me personally, when reviewing PRs, as long as it works, the code is easy to understand, and stuff isn't needlessly over abstracted, I'm cool with it. Coding isn't my identity like it seems to be for some people, it's just a job that i happen to enjoy.",1o010o1,2025-04-13 15:09:40,2,cscareerquestions,t3_1jxl1gz,False,
mms1rs3,This is very unusual. The startups I've worked at the past 6 years have all been filled with toxic positivity. Outright criticizing someone's code -- for good reasons or bad --  is _unthinkable_.,angrynoah,2025-04-12 19:08:48,1,cscareerquestions,t3_1jxl1gz,False,
mmruyo9,The CEO is super harsh and it was probably too much especially against a fresh new engineer. But one of his input is sort of correct. My first rule is when joining a company is to not rock the boat with code styles and established patterns. So you should actually take a look in broader scope on how things are implemented and code in a similar way. Granted you might notice something that isn't good but unless you have the ability to back yourself in an argument I say go with the flow especially the first 1-3 months.,attrox_,2025-04-12 18:31:07,1,cscareerquestions,t3_1jxl1gz,False,
mmxo76u,Not good enough,Impossible_Ad_3146,2025-04-13 18:22:17,1,cscareerquestions,t3_1jxl1gz,False,
mmyl2jo,"It's not as timeline focused as say going to be a doctor or investment banker. You need to do everything right over a long period of years in order to get to where you want to be. For SWE, as long as you pass the technical interview, you'd go from a shit company to making FAANG money over night. It's definitely more flexible.",Legote,2025-04-13 21:18:50,27,cscareerquestions,t3_1jyhpw6,False,
mmyk60j,"I’d say it’s not about getting into big tech early, you can always get into big tech if you want to, and have the skills. It’s about how much you can learn early, since those foundational years influence a big part of your career later on.Don’t get stuck being a code monkey, provide more value than just good code to your company, and try to latch onto the best talent you can see.",Onebadmuthajama,2025-04-13 21:13:45,7,cscareerquestions,t3_1jyhpw6,False,
mmynpo6,The main benefit to working in big tech is you make more money and (probably) develop your skills more. This sets you up for more success long-term but people join big tech at all points in their career. Not joining early on doesn't mean you can't join later. Most never even bother and are still successful,gringo_escobar,2025-04-13 21:33:34,3,cscareerquestions,t3_1jyhpw6,False,
mmykcsk,Their logic doesn’t track. If they are so insightful why are they at the same company as you? Shouldn’t they be at a big tech company if that is the thing to do……,endurbro420,2025-04-13 21:14:48,2,cscareerquestions,t3_1jyhpw6,False,
mmyqdqs,"I can't speak for your country, but in my experience, no.",Pale_Height_1251,2025-04-13 21:48:25,1,cscareerquestions,t3_1jyhpw6,False,
mmz7ggf,"The scale at which big tech operates is orders of magnitude bigger than non big tech companies. You could have 10 years of experience at a random company and you'd only be hired as SWE 2, essentially restarting your career, meanwhile someone with 2 years of experience at a tech company would land the same position.From experience, people want to see that your work operates at scale. Once you're ""vetted"" in that you've worked at a tech company for a while, it's assumed you'd be able to transfer your skills to any other company, which is not something you would assume of someone with decades of experience at mom and pop shops",Randromeda2172,2025-04-13 23:28:32,0,cscareerquestions,t3_1jyhpw6,False,
mmyqzbk,"I think that's the most accurate. I've seen folks with 20+ years experience at Principal level bounce to Google or Microsoft. However, I'd say it's like a factor of 5:1 of people who do it early career vs late career. If they do it early career, they often stay in big tech. Late career folks tend to 'do their time' and come back to boring big companies at significantly higher levels than where they left.",csanon212,2025-04-13 21:51:47,4,cscareerquestions,t1_mmyl2jo,False,
mmzdr17,"It helps your skills... in some ways. In others, you end up behind, because you have minimal knowledge of the tooling anyone else in the world uses, as so much of the infra is purely internal. You can change from one 2nd or 3rd tier company to another and carry a lot more useful information with you.I've had funny experiences interviewing bigtech candidates who try to reach for libraries and tooling that are just not available in an OSS environment. The worst example was a Google programmer that worked in C++, and thus tried to solve the interview problems in C++. Basically everything he reached for was just not in the standard library, or any open source library he could pull.",hibikir_40k,2025-04-14 00:07:51,0,cscareerquestions,t1_mmynpo6,False,
mmyktax,Well ig they're not really interested in big tech haha. I wasnt as well until a few months ago.,poorbugger,2025-04-13 21:17:24,2,cscareerquestions,t1_mmykcsk,True,
mmzo5n3,"True. And that can go the other way too. Like a candidate who rarely uses libraries or helper methods and as a result has to do everything the slow and error-prone way and wastes too much time on minutia. I prefer to let the candidate do what they are comfortable with, and ask questions about how they would implement library functions themselves if there’s extra time.",hellishcharm,2025-04-14 01:14:18,1,cscareerquestions,t1_mmzdr17,False,
mmi1ees,"You basically described CRUD, full stack and infrastructure. Next will be system design and architecture. After that it’s tech lead unless you want to move into management. Gross oversimplification but you get the idea.",posthubris,2025-04-11 02:43:57,24,cscareerquestions,t3_1jwfmte,False,
mmi2flu,"The first big one will be flipping how you think from ""How do I get the code to do what I want?"" to ""How do I handle when it goes wrong?"" Metrics, alerting and general system management tie into this too.As others have said, you'll learn system design, increasing scale, and developing an instinct for when you can rethink a design in a better way.Business/management, even if you don't manage, comes later. Being able to provide a cost/benefit analysis for work you're proposing, for example. Extending into risk analysis, as in if something has a 1 in 100 chance of occurring do we engineer for it or take it as an operational risk.",rnicoll,2025-04-11 02:50:49,13,cscareerquestions,t3_1jwfmte,False,
mmibvmv,"I started off doing C work on a product that deployed to a bunch of obscure \*nix platforms. Then Java became a thing and I did back-end Java for a while. Then took a job doing back-end Ruby on Rails for a short time, switched to Android dev for a couple years, then switched to a role that was supposed to be ""DevOps"" but ended up being more database performance troubleshooting. Then took my database/SQL knowledge and got a job doing data engineering and had to learn Python, how to use various AWS products, Terraform, Docker/k8s and a couple new database platforms (Redshift & Snowflake).In all cases, I learned things only when it was necessary to accomplish whatever I was being asked to do at work. I don't actually like learning new tech, to be honest. There are other (more fun) things I'd prefer to do with my down time.",Ok_Experience_5151,2025-04-11 03:58:59,3,cscareerquestions,t3_1jwfmte,False,
mmi6042,"There's no list of topics that you're guaranteed to learn as everyone's career is different.When people say ""never stop learning"" we're not just talking about discrete tools, languages, frameworks, and other canned topics of that nature. Anyone can pick that stuff up, junior or senior, and it doesn't increase your value as an engineer on its own.Your value as an engineer comes from your ability to solve hard, impactful problems of increasing scope, complexity, and ambiguity. Scope has to do with how large a task is and how long it takes. Junior engineers work on small tasks that only take a few days or weeks. Senior engineers work on large multi-month deliverables.Complexity has to do with how tricky the actual task is. I work in video streaming. A junior engineer might work on something like ""fix this tiny bug in the encoding module."" A senior engineer might work on something like ""design and implement a scalable transcoding pipeline for use case.""Ambiguity has to do with how well-defined the task is. A junior engineer would work on something that's really obvious, clear, and requires very little clarification. A senior engineer might be given a vague problem statement like ""our video transcode pipeline is too slow. Go fix it."" or ""We need feature, figure it out."", and the onus is on them to dissect that request into actionable, concrete technical tasks for the team to work on.The more you focus on these three things, the better an engineer you become.Read [DropBox's technical career guide.](https://dropbox.github.io/dbx-career-framework/ic1_software_engineer.html) It goes into even more detail than this, at all levels from junior to director.Note that *nothing* in the guide mentions *any* of the things in your post. None of that is relevant to your growth as an engineer beyond picking things up as needed so that you can accomplish what your job requires of you.",kevinossia,2025-04-11 03:15:30,4,cscareerquestions,t3_1jwfmte,False,
mmi4nu9,"That's right. I list about 20 pieces of software on my resume I learned on the job. There was no Cloud crap or REST and Spring for Java wasn't dominate at the start of my career. I can't break it down year by year.Learn new software on the job and maybe get your employer to pay for an entry level AWS or Azure or GCP cert. Docker and Kubernetes are good to pickup but you can't realistically learn 5 things at once or in one year. Don't overdo it. I was forced to use Python on the job when our team inherited a codebase in it. What's more important is you used these things on the job. Experience trumps everything.Also depends greatly on what you're assigned to. Like frontend, middleware or backend or the industry such as government or banking. There's no one common path. There was one job if I got I would have had to use TypeScript with NestJS. I was willing to do it.Eventually you can start piecing together full designs and you'll get design questions at tech lead level, maybe earlier. I'm talking full application with database and web server with your choice of tech stack and programming language(s). I remember saying once in a job I got that we can't just use the new, shiniest thing. We're better with X software that we can hire people with some years of experience and not have to train them.",NewSchoolBoxer,2025-04-11 03:06:06,2,cscareerquestions,t3_1jwfmte,False,
mmi5hpw,"you expand your knowledge and stack. Sometimes you learn backend, sometimes you learn infra setup, other day you will learn about security when you got unauthorized user logging in. The beauty of learning is not about learning one piece of it but when everything stitched together and you got the ""aha"" moment where you can build something on top of it",hell_razer18,2025-04-11 03:11:54,1,cscareerquestions,t3_1jwfmte,False,
mmi7mxv,"Over your career you'll see a bunch of patterns in observability, test coverage, API design, infra, and maybe more knowledge on low level processes. Also important you'll learn more about common tools and how to work with different kinds of spaghetti code which is a skill in itself.",Solracdelsol,2025-04-11 03:27:16,1,cscareerquestions,t3_1jwfmte,False,
mmicbjm,Hopefully you will learn that some software is not worth writing.,Traveling-Techie,2025-04-11 04:02:19,1,cscareerquestions,t3_1jwfmte,False,
mmjb3cd,"Whatever is required at any given moment. At some point I had to learn BPMN and all the theory around it. At another point I had to learn apache spark and working with big data. At another time yet, I had to learn how to work with and integrate business intelligence tools. Random stuff like that. Whatever the project required.MCP is probably going to be big now, but who knows.",Comprehensive-Pin667,2025-04-11 09:40:04,1,cscareerquestions,t3_1jwfmte,False,
mmkf6pu,"First you tackle fundamentals (as you seem to be), coding fundamentals, system fundamentals, and then system design /architecture fundamentals.Once you have a base down I would look at either problems you're facing at work or areas that interest you and try to do a deeper dive into them. Like you say you've learned database design but databases alone are a niche that could take up your entire career. A good senior+ has a strong breadth of fundamentals but also a deep specialized knowledge base in one or more areas.",69Cobalt,2025-04-11 14:18:08,1,cscareerquestions,t3_1jwfmte,False,
mm4bzhy,"I fall into this at times but I’m learning to lean on abstraction when possible. If I can treat a library or tool as a black box and use it to achieve my goal, then I’ve used it as intended. Obviously we can’t understand every single intricacy of the tools use, there’s just far too much to learn. It’s a better use of time to use them to build something new or useful with them. A baker doesn’t need to grow the wheat they use to make great bread.",Jacomer2,2025-04-08 23:07:41,9,cscareerquestions,t3_1juqz76,False,
mm4avnj,"First, make it work.Next, make it clean/readable.Finally, make it efficient.>!(at least, that's how I do it...)!<",polymorphicshade,2025-04-08 23:01:29,10,cscareerquestions,t3_1juqz76,False,
mm4kt96,As long as you're delivering on your work effectively then go nuts.This type of curiosity is what makes great developers so lean into it; don't stifle it.,kevinossia,2025-04-08 23:57:40,3,cscareerquestions,t3_1juqz76,False,
mm5e5f2,"One advice is to add testing, monitoring, and alerting. Testing can help you verify the libraries you use work as intended. Latency alerting can help you make sure the libraries you use have reasonable performance. Reliability alerting can help you track how reliable the libraries are. And of course it’s super useful to read the library docs. Definitely the interface definitions, input descriptions, output descriptions, rate limits, error codes, warnings, etc. But the above things I mentioned can help give you peace of mind in case some library doesn’t document an important consideration clearly. Or if you just miss something in the documentation.",CuriosityAndRespect,2025-04-09 02:50:46,2,cscareerquestions,t3_1juqz76,False,
mm4egrx,"I completely relate to this and have actually started trying to address it in the last couple months. These are the things I’m keeping in mind to tame this feeling:1. This passion and drive will make you a great engineer IF you can learn where to apply it. You can’t apply it everywhere, especially in a job, because your delivery speed will be slow.2. Accept the fact that software is iterative. As long as it meets the requirements, who says you can’t go back to it later and make it more robust once you have more information?3. It’s possible you’re ready to start specializing in a particular language/stack/domain to limit the scope of what you really need to know. Once you start seeing the same problems/structures over and over again in different contexts, you can get by with educated guesses about internals unless you really need to know how something works to solve a problem. This seems works across languages/stacks as well once you see enough.4. If you start to feel burnt out, take a break if you can and reset. Not worth going over the edge for “perfect” code.5. Remember that if you can learn one thing deeply, you can do it again whenever you need to. Research skills don’t disappear quickly.At the end of the day, you will not have all the requirements up front, so all you can really do is just do it to the best of your ability while trying to account for immediately visible edge cases, see if it solves the problem, and optimize/fix bugs if needed and repeat.",69mpe2,2025-04-08 23:21:43,1,cscareerquestions,t3_1juqz76,False,
mm4mj5p,Only when reviewing someone else's code :),dolphindiopside,2025-04-09 00:07:41,1,cscareerquestions,t3_1juqz76,False,
mm4sw8b,"I definitely had and even still have this issue. You have to learn to manage it because it definitely hurt me early in my career even though in the long run it's helped immensely. Sometimes quick, dirty, and not understanding how the sausage is made is ok and you have to accept that. You can't run down every rabbit hole and still make your deadlines. Example: I had dabbled in web frontend for a bit. Understanding JS and react wasn't bad, but we used create-react-app and I decided when I was going to start a new project fresh I was going to do it by hand. A week later after being neck deep in babel and webpack and transpiling I just gave up and realized I bit off more than I could chew and just downloaded create-react-app and got moving. It hurt early in my career because everything was so brand new and I wanted to master it all, but I had projects to do first. Nowadays even when I first saw something like k8s or react, for the most part I understand the context of what came before it and what it's trying to solve so I feel I already kind of understand it before even diving in. The exception here might be AI- I felt like I had a pretty good handle on it up to around 2018, then things seemed to move at light speed- reading some of the latest papers to come out of Anthropic is like reading a foreign language. The key is to know when to dig a little deeper and when to let go. You can't read the full 1000 page manual before starting every time. BUT, if you eventually do read that manual or those docs from end to end you will leap ahead of your peers in time.",kevstev,2025-04-09 00:45:07,1,cscareerquestions,t3_1juqz76,False,
mm5f9wr,"If you don't have control over the behavior, that's the definition of a compulsion. You don't need to have every quirk diagnosed, but if it starts becoming a problem in your career (which it very well may), then you'll probably need to seek assistance for it so it doesn't tank your jobs.This could actually be a form of OCD, in case that wasn't clear from what I wrote.",local_eclectic,2025-04-09 02:58:01,1,cscareerquestions,t3_1juqz76,False,
mmksh64,You've got this!,coracaodegalinha,2025-04-11 15:24:01,3,cscareerquestions,t3_1jws8et,False,
mmkvt53,I make a singular prayer for your dreams to come true. You've got this lil bro!!,Sir_Simon_Jerkalot,2025-04-11 15:40:15,1,cscareerquestions,t3_1jws8et,False,
mmlwogr,Does it at least pay more than minimum wage?,Maximum-Event-2562,2025-04-11 18:41:58,1,cscareerquestions,t3_1jws8et,False,
mmo3jib,Good luck!!!,NeedSleep10hrs,2025-04-12 02:12:23,1,cscareerquestions,t3_1jws8et,False,
mmm774t,"Don’t know the salary yet (as the role is still being approved), but it’s a mid-sized company so I’d expect it to be above min wage",modellista,2025-04-11 19:36:06,1,cscareerquestions,t1_mmlwogr,True,
mmm341h,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-04-11 19:14:52,1,cscareerquestions,t1_mmm33vo,False,moderator
mmxxbzq,"For mental: try meditationFor work: say no more oftenFor job security: spend time on interview prep.None of them is easy, you probably already know these answers already, but sometimes it definitely helps to hear from another person.",kevin074,2025-04-13 19:10:45,7,cscareerquestions,t3_1jyd4zg,False,
mmz2oz8,"Software development is definitely not dead. The market is struggling at the moment, sure, but companies are still trying to develop new services and products so there is clearly still a need for experienced devs, which you are.It sounds like the real problem is just that you currently have a shitty job that doesn't suit you at all. You can either keep developing your skills as a mobile dev and be the expert that jobs will go to in this sector and keep looking, or broaden your skillset to have a greater variety of job opportunities.It seems that the unemployment rate among cybersecurity professionals is extremely low. If all you care about is job stability, it would probably be a good choice.",some_clickhead,2025-04-13 22:59:40,1,cscareerquestions,t3_1jyd4zg,False,
mmzl1ya,"Android development is generally regarded as a safe skillset from my experience. There's less roles compared to backend generalists but recruiter friends have said skilled native Android engineers are amongst the harder people to findOf course, the market is tough right now, so your skillset might not even be the problem in the first placeI would probably not frame your resume in terms of react native when applying to Android roles, and would not frame it in terms of Android if you're applying to full stack / backend generalist roles. edit: And with regards to concern for the future: As a mobile engineer, I'd say you're likely better off doing native Android than React Native. React Native competes with other frameworks (flutter, mobile web) for a second-class mobile experience, whereas anybody who wants to build a premier mobile product will be doing so in native Android",PlasticPresentation1,2025-04-14 00:54:15,1,cscareerquestions,t3_1jyd4zg,False,
mmy016w,"thanks for the reply. I've been trying to get into meditation recently but its hard for me to stay grounded and think positively when I feel like my world is collapsing. I have this sense of impending doom that I chose a dead career and I'll be working in a grocery store as a 40 year old (currently 30). I've been panicking the last few weeks wondering if I should be going back to school to focus on a different career, or commit to tech- and if I do commit- if that means needing education in AI or ML, or switching to Backend, cybersecurity, or network engineering. Its all super overwhelming and I feel so lost without guidance.",IPwnFools,2025-04-13 19:25:20,1,cscareerquestions,t1_mmxxbzq,True,
mmz30yc,What skills should I be developing? Is it better to stay with react or focus in on native android dev?,IPwnFools,2025-04-13 23:01:38,1,cscareerquestions,t1_mmz2oz8,True,
mmy1aro,"maybe instead of meditation what you need is cognitive behavioral therapy.but you'll be fine career wise if you keep working on advance yourself as a mobile dev or web dev. Don't worry AI, it's still nonsense right now.",kevin074,2025-04-13 19:32:11,1,cscareerquestions,t1_mmy016w,False,
mmz4a0q,"I am neither a mobile dev nor a frontend dev so I have no idea what's ""better"". What I know is that regardless of AI advancements, the person giving the prompts to AI to build frontend apps will never be the MBAs or even the backend devs. You know the saying: ""You don’t have to outrun the bear — you just have to outrun your friends"", well replace the bear with AI and your friends with other devs in your field and you get the picture.My advice would be to double down on what you know and become the most rounded dev possible at whatever it is that you're doing. When it comes to specific stacks or frameworks, just look at job openings to see what is in demand. OR branch out into something safer if you are tired of your niche.",some_clickhead,2025-04-13 23:09:08,1,cscareerquestions,t1_mmz30yc,False,
mlz0ruc,"The only secret to front end is being detail oriented and persistent. The engineers that I’ve worked with that were bad at front end were just in a rush or weren’t detail oriented. They often were the back end devs with the most issues in their PRs.The bugs that come up in front-end are often unintuitive and caused by multiple small problems adding up. Take the obvious path to matching the design and write it. Then test it out, compare it to the design, find where it doesn’t match, open the dev tools panel, play around with the css inspector to figure out what’s going wrong, make more changes and repeat until it works as expected. Sometimes your design was the problem, sometimes the person before you cut corners so when you implement your changes correctly they break other things. Sometimes there’s some weird inheritance issue or a library you’re using is causing issues.People treat front end like it’s this easy thing and only back end is real work. But front end can be unforgiving, performance is far more of an issue than people think, and the amount of detail you need to pay attention to isn’t small.So seriously just be persistent. If you aren’t good at CSS, it’s not a big topic, spend a week or two working through a course to understand it. After that it’s persistence. I have a terrible memory, I forget CSS properties and what they do all the time, but I’m still the one that gets assigned the weirdest bugs because I don’t let the weirdness get to me, I keep at it until I find the root cause and then look up whatever I need to know.",TravelDev,2025-04-08 02:44:37,11,cscareerquestions,t3_1ju1zzs,False,
mlyqivd,20 ye here. Just stop making excuses and get good at it. There’s no reason why you can’t succeed here. There are no tips. It’s all effort.I tell this to people on my team who struggle: “stop fucking around and just learn how it works”.,divulgingwords,2025-04-08 01:40:59,36,cscareerquestions,t3_1ju1zzs,False,
mlypz7j,How did you get hired? There was no technical interview?,SwordLaker,2025-04-08 01:37:39,13,cscareerquestions,t3_1ju1zzs,False,
mmblpb3,Udemy,NeedleworkerWhich350,2025-04-10 02:15:02,1,cscareerquestions,t3_1ju1zzs,False,
mlyzz8x,"Exactly, like how is he getting a job I can't get being good at it, while being bad at it.",xerns,2025-04-08 02:39:30,4,cscareerquestions,t1_mlypz7j,False,
mlyy0fq,I'll be your mentor and order you around.I command you to create a portfolio to improve your skills in tech then drop and give me 15 push ups. You can use ChatGPT to discuss your new knowledge.,Raigarak,2025-04-08 02:26:58,15,cscareerquestions,t3_1ju2361,False,
mlz0wym,doing something poorly is better than doing nothing.,ilmk9396,2025-04-08 02:45:33,4,cscareerquestions,t3_1ju2361,False,
mlyy5wk,What kinds of projects have you built during your time outside work?,polymorphicshade,2025-04-08 02:27:55,3,cscareerquestions,t3_1ju2361,False,
mm7qgdf,"No mentor will find you a job, the only thing you can do is to grind like you did in college. The thing about CS is that even after you get an intern/junior level job you will have to continue studying regardless of your main job. I can see 2 paths in your situation:1. get a degree in adjoining field (e.g. applied math). I believe that in this way it is possible to obtain an initial proficiency in narrow field, not in CS in general. Also this way is pretty linear.2. Remember what you did best in college and practice this field. I often see that many beginner jobs do not require deep knowledge in a particular field, the ability to program well is enough (what i mean is OOP, algorithms and basic frameworks)P.s. Sorry if some of my comments are not relevant to your case, I am not from the US.",m4xig1,2025-04-09 14:11:18,2,cscareerquestions,t3_1ju2361,False,
mlz0899,"You need to work on figuring out how to motivate yourself. This is something that will be useful throughout your life. Even in an entry level job, you could wait around for people to tell you what to do or you could figure out how to do things on your own while also learning from others. Which person do you think will have more success and move up in their career faster? Which kind of person do you think managers want on their team? I’ll give you three things you can do to start. 1. Read a couple books on emotional intelligence and how it impacts your life. If you can’t pick one, read “Emotional Intelligence” by Daniel Goleman. 2. Look up some entry level jobs you’re interested in and scan through their reqs. Write down the tools that are used. Start building something that leverages these tools. 3. Look up some online meetups on subjects/areas you’re interested in. Attend them and start networking. If there are any in person meetups close to you, even better.",ladidadi82,2025-04-08 02:41:04,1,cscareerquestions,t3_1ju2361,False,
mlzg0wt,At least you have a job and making something. You could be working in a warehouse packing shit into boxes. Or flipping patties at McDonalds. Then you would really feel worthless.You sound like me. I think you don’t need a mentor you need a TASK. You need a problem to solve. Maybe there’s something at your work that could be automated or improved.,SpiritualName2684,2025-04-08 04:34:38,1,cscareerquestions,t3_1ju2361,False,
mm02k4m,"In a way, you are lucky. You are employed, which is better than a lot of the market. But you also have loads of time. If I were you, I would aggressively upskill in your free time. Your will disappear as you get older and move up and you will wish you learned more when you were younger.Do your future self a favor and upskill. If you're good enough, no one will care where you live. They will pay you to relocate or let you work remotely. I've seen it happen, even in this brutal market.",Few-Winner-9694,2025-04-08 08:11:07,1,cscareerquestions,t3_1ju2361,False,
mlz2czf,"I tried creating an automated program with selenium to fill-out web-based forms with data from an excel file since I got bored of repeatedly typing offline data to online. But did not fully implement it to my work, just an experiment. The provided site also does not implement captcha so I think it's fine.",NoSecretary5043,2025-04-08 02:55:03,5,cscareerquestions,t1_mlyy5wk,True,
mlzrt2f,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-04-08 06:21:27,1,cscareerquestions,t1_mlzrt11,False,moderator
mmypsv3,">so I have just been reading the NVIDIA CUDA docs and some random blog pagesGood. What's wrong with that?You're going to learn all kinds of new things throughout your career. There's not going to be a college course for every new thing.>How do professionals in the field learn this stuff and develop expertise?Same as everything else.We read documentation, books, papers, articles, existing sample code, and, most importantly: we *write* code, see how it works, fix it when it doesn't, and learn from it.There's very little structure in software engineering and it's really up to you to make the most of what's available.Good luck!",kevinossia,2025-04-13 21:45:12,4,cscareerquestions,t3_1jyddxx,False,
mmyj5d0,"I asked myself this question but in terms of HPC overall and aside from reading through old papers and documentation, i just decided to do a part time masters where all the resources and projects are already gathered for me.",coinbase-discrd-rddt,2025-04-13 21:08:07,2,cscareerquestions,t3_1jyddxx,False,
mmye6et,"See if your school offers computer engineering, and how difficult it’d be for you to switch into that major or if you can take some CE classes in lieu of your CS courses.",IAmYourTopGuy,2025-04-13 20:41:01,1,cscareerquestions,t3_1jyddxx,False,
mmyekko,"I have rather fond memories of the book Professional CUDA Programming.I went through every example, wrote it out and ran it on an nvidia gpu. Its structured in a fashion where every iteration improves perf of the task you are solving. e.g. here is a naive way of summing all elem in an array. Here is a faster way. And a faster way. And another faster way.I referenced in interviews a few times.",VertexSoup,2025-04-13 20:43:07,1,cscareerquestions,t3_1jyddxx,False,
mmz97ef,Appreciate the advice.,cyberphantom02,2025-04-13 23:39:22,1,cscareerquestions,t1_mmypsv3,True,
mmyf7q5,We have Computer Engineering but weirdly they have it in a different department. Because of politics they keep a some of the systems courses in the Engineering department with CompE and theres strict rules so sadly I can not take any of them unless I am in the major. I can't switch now either to CompE unfortunately so I'm just gonna self study.,cyberphantom02,2025-04-13 20:46:37,1,cscareerquestions,t1_mmye6et,True,
mmyfi8e,Thanks this is really helpful. I'm gonna start reading from there,cyberphantom02,2025-04-13 20:48:07,2,cscareerquestions,t1_mmyekko,True,
mmygpfc,> Because of politics they keep a some of the systems courses in the Engineering department with CompE and theres strict rules so sadly I can not take any of them unless I am in the major. What's political about it? It seems common from my experience. Some courses require a lot of prerequisites that other majors don't have the capacity to fit in their schedules.,GimmeChickenBlasters,2025-04-13 20:54:41,1,cscareerquestions,t1_mmyf7q5,False,
mmymln5,Just show up to the class you want to take on the first day and talk to the professor after the class. They can override the rules and they like having people in class who want to be there. That’s how I took a bunch of 300 and 400 level business school classes my senior year.,Coldmode,2025-04-13 21:27:27,1,cscareerquestions,t1_mmyf7q5,False,
mmz8lh3,Yeah honestly I might just try to audit,cyberphantom02,2025-04-13 23:35:34,1,cscareerquestions,t1_mmymln5,True,
mmw2kbq,"You don't.I've had 8 jobs in my career and been successful in getting 12 offers.Not once I have I shown anyone code I have written for money. It isn't my code to show. It belongs to my former employer.If showing code you wrote was required to get a job, most of us would be unemployed.",Kooky_Anything8744,2025-04-13 13:14:17,48,cscareerquestions,t3_1jy6yhm,False,
mmw2hbz,You don’t you just talk about it if you know what you’re talking about then they will understand you. If you don’t then well you don’t.,Behold_Always_Oncall,2025-04-13 13:13:45,14,cscareerquestions,t3_1jy6yhm,False,
mmwkq12,"No one is going to care about this model you built. That said, obviously don’t violate any legal obligations you have related to this code.",UsualLazy423,2025-04-13 14:58:02,4,cscareerquestions,t3_1jy6yhm,False,
mmx8zmy,"An employer will rarely look at your GitHub, even if you supply them with a link. That being said, I actually created a separate GitHub account that I use for job apps. I filled it with a few example full stack applications and made the repos public. I use a different GitHub account for serious personal projects. I talk about the serious personal projects during interviews and that seems to work well for me. Anyways, good luck with job apps, it’s brutal out there. You should probably get a CS degree btw, but I’m sure probably know that already",arg_I_be_a_pirate,2025-04-13 17:04:41,1,cscareerquestions,t3_1jy6yhm,False,
mmysk4p,"Others have covered your actual question in detail. I'm going to give you some ML advice based on a few warning signs I see in your post.a) You should assume that 90% of the way there rounds down to zero. It's really easy in an ML problem to fool yourself into thinking you're a lot closer to a useful solution than you are. Self driving car companies have been doing it for a decade.You get impressive looking results at the beginning, and you think something like ""I'm already at 50% after X hours, another X and I'll be good."" However that last mile takes more than the rest combined, by a lot. In school this doesn't matter but in industry it does.b) Your model architecture isn't the secret sauce you think it is. Trust me, whatever new twist on transformers you're playing with has been done. Don't be too precious with it.",OkCluejay172,2025-04-13 22:00:38,1,cscareerquestions,t3_1jy6yhm,False,
mmw5utp,"Thanks for the input! The job apps I’ve done (outside of like finance/banking) have mainly been for part-time/freelance gigs through Upwork and the like. There, it helps to link your GitHub and clients will often ask for code samples. Very good to know that’s not the expectation for more serious jobs.",fustercluck6000,2025-04-13 13:35:08,6,cscareerquestions,t1_mmw2kbq,True,
mmw6169,Well I guess that’s good news for me then because I could talk about this stuff all day if you let me :grinning_squinting_face:,fustercluck6000,2025-04-13 13:36:12,1,cscareerquestions,t1_mmw2hbz,True,
mmxfsyq,"Thanks for taking the time to write all that haha, this is very helpful. You’ve just reminded me that I actually do have a separate GitHub account I made years ago for public repos related to research. I guess now it’s time to fill it out with some new stuff.I do also have my eye on a few computational data science masters programs that I’d be competitive for, which is really the specific area I’m interested in. Ah if only my mission in life were to end up on Wall Street :weary_face:",fustercluck6000,2025-04-13 17:39:09,2,cscareerquestions,t1_mmx8zmy,True,
mmxg7vz,"In this case, you just say ""NDA"" and go from there.",poipoipoi_2016,2025-04-13 17:41:16,2,cscareerquestions,t1_mmw5utp,False,
mmz9rku,"If anything, it would likely be more of a red flag to them if you DID show them otherwise make publicly available code that is sensitive or proprietary in nature.",JazzyberryJam,2025-04-13 23:42:51,1,cscareerquestions,t1_mmw5utp,False,
mmsknhb,Hi there!1. Are you depressed?2. Do you have ADHD?3. Do you actually like coding?4. Do you like the job that you do?,EasyLowHangingFruit,2025-04-12 20:53:42,9,cscareerquestions,t3_1jxr1iu,False,
mmt7iti,"Could this just be you getting bored of your current job?If you've been doing similar stuff for 3 years straight, it's totally normal to start getting bored. And being bored at work could easily make you feel kinda burned out, or lethargic, or like the spark is gone.I resonate with this a lot, because 3 years is about the point where I start getting bored on a team. The easiest way to cure this is to have a candid conversation with your manager, and see if they can either find you some different work, or transfer you onto a different team.Doing that usually reignites the spark for me. The longest I've lasted at one company is a little over 5 years, and the main reason I lasted that long was I switched teams after 3 years. Switching teams gave me a ton of new stuff to learn, it was in an entirely different tech stack, I had to learn all the business knowledge from scratch. It's fun, everything's new again. It's shoving you back into the ""honeymoon stage"".My new grad company was actually great with this. They *encouraged* internal moves at the 2 year mark for all employees. For me specifically it just sorta happened naturally, I worked on 3 different teams across 3.5 years. The only reason I left them was because I wanted to live on the east coast, otherwise I could've stayed there for life. And some of my friends have, I think there's 5 or so people from my new grad cohort that are still at that company, 12 years later.So that's what I'd recommend. See if you can transfer internally, or get a completely new type of work. If you can't, start looking for a new job .See if that fixes things for you. If it doesn't, then maybe you're right, this industry just isn't a good fit for you... but the fact you found your job rewarding *at first* makes me think you're just bored rather than being burnt out of the entire industry.",SouredRamen,2025-04-12 23:10:49,3,cscareerquestions,t3_1jxr1iu,False,
mmsxoh7,May I throw in another option here? It could just be a wrong ‘fit’ for you. Sometimes you can have all of the good things on paper but it still just doesn’t work for you. What originally attracted you to software engineering/coding in the first place?,PhillyPhantom,2025-04-12 22:09:22,2,cscareerquestions,t3_1jxr1iu,False,
mmt8tsk,"WFH can be isolating. To reignite your enthusiasm, what about challenge yourself with some pair programming in person? It doesn't have to be for work.",18042369,2025-04-12 23:18:43,1,cscareerquestions,t3_1jxr1iu,False,
mmtb290,Sometimes it's good to switch things up,SpyDiego,2025-04-12 23:32:29,1,cscareerquestions,t3_1jxr1iu,False,
mmtuzap,"I think most people hit this point in every job eventually, albeit in far worse working conditions.WFH might not be the best fit for you. Could look for a hybrid job.",PretendTooth1399,2025-04-13 01:43:42,1,cscareerquestions,t3_1jxr1iu,False,
mmx6r6u,"I had similar problems, got therapy and that helped, I’m super introverted but getting a job where I go in 1-2 days a week seemed to solved a lot of the problems. I still prefer WFH but I guess just needed to get out a couple days a week. If u don’t have an office near by maybe try to find a coffee shop or co working space a couple times a week.",PossibilityKey2785,2025-04-13 16:53:22,1,cscareerquestions,t3_1jxr1iu,False,
mmsorkh,"Hi! It's hard to say if I'm depressed. Things have been better, but it's not obvious to me whether my work issues are a cause or a symptom of that (or both). No ADHD. I certainly used to like coding, and I think I would again were I not doing it so much already. And I would say I like my job, the company and people are cool. I think my only concrete complaint is that I wish I had literally anything else to do. They've trimmed so much fat in an attempt to avoid busy work or agile complaints that aside from maybe 2 hours of meetings a week my only responsibility is to work through my github issues and review other's work, both of which I feel like are relatively involved tasks. And I know most people can't/don't program for a full 40 hours but then I feel bad when I am just then doing nothing. It's a tension.",UrIdiotNeighbor,2025-04-12 21:17:07,1,cscareerquestions,t1_mmsknhb,True,
mmsn3gz,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-04-12 21:07:30,1,cscareerquestions,t1_mmsn3e6,False,moderator
mm1khgh,"Huge congrats on landing the job! Getting through 100 applications takes real persistence.If you're easing into desk life and want to protect your back, a sit stand desk is definitely worth considering. The SmartDesk 5 single motor model is a great entry-level option under $300 that doesn’t sacrifice too much in quality. Pair it with a chair that offers some lumbar support and you’ll have a solid setup without draining your first paycheck.[https://www.autonomous.ai/standing-desks/autonomous-smartdesk-5](https://www.autonomous.ai/standing-desks/autonomous-smartdesk-5)",malcren,2025-04-08 14:52:58,11,cscareerquestions,t3_1juehpd,False,
mm1e5so,I started my dev job last year. My essentials so far:1. Standing desk2. Footrest3. Lumbar pillow,El_Tef0,2025-04-08 14:20:42,9,cscareerquestions,t3_1juehpd,False,
mm1e0yr,"got my first IT support role after ages of grinding apps. congrats! my first upgrade was ErgoStool cause i have ADHD and need something flexible enough besides my current officechair, this sounds odd, but it really helps keep me alert and not slumped all day. I switch between it and mychair every couple hours and it kinda tricks my brain into staying focused. also takes up way less space if you’re in a small room like me",crowdog09,2025-04-08 14:20:01,2,cscareerquestions,t3_1juehpd,False,
mm1f3u3,"Pro tip: keep a tennis ball under your desk. roll it under your feet to stay relaxed during long shifts. also get a cheap cushion if your chair’s stiff, your butt will thank you :-) walking pad or wooble stool is also good",23Breach,2025-04-08 14:25:41,1,cscareerquestions,t3_1juehpd,False,
mm1ul0v,I’d definitely start with a good chair. Even a basic mesh ergonomic chair from IKEA or Staples can be a huge upgrade over a dining chair. You’ll notice the difference within a week,Lygrad,2025-04-08 15:42:55,1,cscareerquestions,t3_1juehpd,False,
mm1v2cy,"I use a $200 chair from Sihoo, it’s no Herman Miller, but it's been a solid starter chair for long hours and adjustable enough to keep me comfy",Nukingsman,2025-04-08 15:45:16,1,cscareerquestions,t3_1juehpd,False,
mm1v4uc,Butt pillow for hemorrhoids that doesnt look like its for hemorrhoids,g---e,2025-04-08 15:45:36,1,cscareerquestions,t3_1juehpd,False,
mm1l618,what chair did you get?,Hammer_Time2455,2025-04-08 14:56:19,1,cscareerquestions,t1_mm1khgh,False,
mm1s4n7,"Since starting this job, Ive noticed how much sitting all day messes with me, stiff neck, sore hips, the works. I got a used Fully Jarvis desk at my last company, super smooth and no wobble even with my heavy monitor setup. It’s been clutch for mixing up my day, but it wasn’t cheap new, so the 300 price tag is quite a deal. I’d probably poke around to see if its motor holds up over time",Burly_Johnson,2025-04-08 15:30:46,1,cscareerquestions,t1_mm1khgh,False,
mmpttkg,Imagine yourself 30 years down the road. Is there any of these three cities that would make you go “I wish I had tried living in X 30 years ago”?,SignificanceLimp57,2025-04-12 11:32:20,19,cscareerquestions,t3_1jxf5cu,False,
mmq9rg7,"I’m from Boston and have been living in Berlin (not one of your cities, but there may be some parallels) and I’ll just throw out some of my thoughts:1. As always with the US, the social services are lacking compared to Europe, though if you get a high paying job with great benefits, that difference is mostly mitigated2. Education in the Boston area is excellent, rivaling the Nordic countries3. Public transit is acceptable but easily the worst out of the 3 cities you’re considering, bike infrastructure kind of sucks, but the city itself is supremely walkable4. Boston is not a late night city, restaurants and bars often close quite early compared to other similar cities5. Most of the neighborhoods in Boston feel meaningfully distinct from one another, it’s something I love about the city but you should definitely shop around for a neighborhood you like before deciding where to live6. Food is good, not great for a city of its size - beer scene is arguably the best in the country though7. Quick access to New York via Amtrak is awesome8. As you noted, Boston is probably the safest major American city and rivals many European cities9. No shade, and I’m obviously biased, but I really prefer New Englanders to other Americans and Northern Europeans. I feel New Englanders are the perfect mix of being pretty friendly and kind without being obnoxious or fake about it10. Speaking of which, New England itself is awesome. Great vacation or long weekend opportunities all over the place for all seasons11. Boston is easily the coldest and hottest/most humid of the cities you’re considering, but it also gets the most sunlight. I prefer Boston winters to Berlin winters even though Berlin doesn’t get as cold12. The rental and buying market in Boston sucks, but I’m not sure it’s better in the other cities you’re considering13. Boston is absolutely the most “European-feeling” of the major American cities, but it’s still definitely an American city at its core.",BradDaddyStevens,2025-04-12 13:26:09,8,cscareerquestions,t3_1jxf5cu,False,
mmptn6d,Zurich definitely. I love this city.,deejeycris,2025-04-12 11:30:52,6,cscareerquestions,t3_1jxf5cu,False,
mmpwj1t,"Regarding Boston, most employers offer good health insurance so I really wouldn't be concerned about that. You probably won't get 5 weeks PTO right off the bat but after a few years at the same job you can get close to that. It's worth negotiating if that's important to you.",dowcet,2025-04-12 11:54:11,2,cscareerquestions,t3_1jxf5cu,False,
mmreyaz,Boston best place to live.London is not unsafe.Zurich not as expensive as you think.,higglepigglewiggle,2025-04-12 17:08:39,2,cscareerquestions,t3_1jxf5cu,False,
mmqiecg,"I think it's pretty hard to buy property in Switzerland unless you're Swiss. If you're interested in living in Zurich (or Switzerland at all), you should talk to expats there about what it's like.",zifnabxar,2025-04-12 14:16:14,1,cscareerquestions,t3_1jxf5cu,False,
mmr2d9i,How do you find the companies offering £150K in London?,AK-Dawg,2025-04-12 16:03:30,1,cscareerquestions,t3_1jxf5cu,False,
mmqgsy5,"In Europe we eat a lot of fruits and veggies. Actually, most of my diet consists of some form of fruits and veggies. My experience in the US was that they dont taste natural or fresh, and I only ate from Whole Foods. Do you agree with this after having lived in Boston and Berlin, or have I ate from the wrong places in the US?While rent is a bit more expensive in Boston than in London by about 300$ per month, for buying, the price per square meter is by 5k $ more expensive in London and by 10k $ more in Zurich compared to Boston, for an apartment outside of the city centre.Most americans cant grasp how much cheaper their homes are relative to their size and salaries. However, are there other unexpected costs related to housing that an european wouldnt be aware of? I know that property taxes are very high in the US and that balances things a bit.",sylar99994444,2025-04-12 14:07:17,1,cscareerquestions,t1_mmq9rg7,True,
mm85hc3,"If you have 5 YoE then WGU is fine, it will check the degree box.If you already have a degree in something unrelated, consider Georgia Tech OMSCS",welshwelsh,2025-04-09 15:26:08,37,cscareerquestions,t3_1jv83uk,False,
mm83wt8,"My manager was a dev/lead for 20 years without a degree. Laid off and couldn't get job for 2 years. He got wgu degree and was competitive again for several offers. He currently gets paid 300k at fully remote company.If I had no degree and 5 years of xp, I'd do it.",Legitimate-School-59,2025-04-09 15:18:18,44,cscareerquestions,t3_1jv83uk,False,
mm8a9ux,"When I was laid off in December 2024, it took me 3.5 months to find a new job and I had 20 years of experience. I would have had something sooner but I was literally told ""Oh, no CS degree? Sorry, can't hire you."" So I started my Sophia/SDCM/WGU journey in May last year and finished at the end of December. I recently have been job hunting and received a great offer from a fintech though I turned it down. The degree makes a difference I think.",lifelong1250,2025-04-09 15:49:39,10,cscareerquestions,t3_1jv83uk,False,
mm82mf9,"Graduated in 2022, started working as a dev in 2021. It checks the degree box, im pretty mediocre tbh.Edit: I did get accepted to John Hopkins for one of their MS engineering programs with my WGU BSCS just FYI. It opens closed doors",Calibrated-Lobster,2025-04-09 15:11:54,33,cscareerquestions,t3_1jv83uk,False,
mm85s6m,"As others are saying - having *a* degree is probably enough to just not get filtered out by the system. That is, a lot of jobs require a BS, and if you don't have one, they will auto-reject your resume.If you have 5 YOE, then that definitely might help if you're submitting job applications that are being reviewed by a system (which most are). It probably won't make a difference if you're sending resumes directly to recruiters or hiring managers, but that's getting harder and harder to do.",dfphd,2025-04-09 15:27:39,10,cscareerquestions,t3_1jv83uk,False,
mm84nuh,"Not the BSCS, but I do have a newly minted WGU MBA.  I tacked MBA to my name a few weeks ago on LinkedIn and am getting pinged by recruiters for tech leadership roles. It's a box checker, for sure.",UntrustedProcess,2025-04-09 15:22:03,9,cscareerquestions,t3_1jv83uk,False,
mm860f6,"***Don't*** quit your day job. As it's not worth it, stay as a SWE. ***However...*** doing the degree ***while working*** is a good hedge against unemployment! So you can then check that ""has a degree box"".",MathmoKiwi,2025-04-09 15:28:48,9,cscareerquestions,t3_1jv83uk,False,
mm8ba3h,"My BS and MS are from WGU and I now make 190K a year in a DevSecOps role for a defense contractor. This is in Boulder, Colorado and that wage is more than enough to live comfortably here. WGU definitely paid off for me.",Alaskanbullworm66,2025-04-09 15:54:34,8,cscareerquestions,t3_1jv83uk,False,
mm8dwno,"I know WGU is an online school targeted at mid career and non traditional students, I don't think it's good or bad. Aside from checking that you had a degree it wouldn't jump out, I work with a lot of top 10 school folks, I came from a relatively unknown school, your experience is going to matter more than your schooling when it comes to getting a job. That said..If you've got all the options in the world the connections and quality of education you'll get at a place like MIT, CMU, Harvard, Berkeley, Stanford etc.. are going to serve you very well in life but if those are not an option then getting a degree at all in a manner that you'll actually finish is the most important thing.",Windlas54,2025-04-09 16:07:31,6,cscareerquestions,t3_1jv83uk,False,
mm8b6x4,"I’m in it right now, also have ~7 YoE in the field. I am enjoying it a lot. It is what you make of it, if you take the time to study the material well you will learn a lot. In terms of jobs, it’ll check the box and at 5 YoE that’s all you need.",lildrummrr,2025-04-09 15:54:09,3,cscareerquestions,t3_1jv83uk,False,
mm11zzn,"You know or they say how when a good looking person does something it's sexy, but when an ugly person does it it's creepy?When a good candidate reaches out to me directly, it can really help them. When a bad one does, it doesn't matter. Based on that, my advice would 100% be to reach out to people directly if you can. If they're gonna dismiss your resume because of it, then they weren't gonna hire you anyway. And if you are a good candidate, this gives you a much better chance at not getting filtered out by a recruiter",dfphd,2025-04-08 13:12:54,23,cscareerquestions,t3_1jucoa9,False,
mm1l12g,"It’s useful if it works and not if it doesn’t. Believe it or not, we don’t all have the same experiences. If you’re actually curious I don’t see why you wouldn’t try it.",Firm_Bit,2025-04-08 14:55:39,4,cscareerquestions,t3_1jucoa9,False,
mm0zcia,"I think it's a lot like all the conflicting resume advice out there, it comes down to the recruiter/hiring manager. Some, like you mention, might find it annoying that you e-mailed them and in their heads flag as you being impatient/anxious/whatever, meanwhile others might appreciate someone being willing to actually reach out proactively.",upsidedownshaggy,2025-04-08 12:56:54,3,cscareerquestions,t3_1jucoa9,False,
mm0z7q3,"listen brother , market is doomed brotherU have to literally fire arrows in the dark hoping that it would hit the target I am also frustrated See my latest post in this sub",Wooden-Bill-1432,2025-04-08 12:56:05,5,cscareerquestions,t3_1jucoa9,False,
mm1dnef,"If desperate, direct message. If not desperate, do not.",Schedule_Left,2025-04-08 14:18:02,1,cscareerquestions,t3_1jucoa9,False,
mm1r9fc,">I don’t know how you can get annoyed by people messaging you if you have a job posting for your team and your contact is up somewhere onlineBecause their employer has hired an entire HR department that handles all incoming applications, to filter it down to a reasonable set of candidates that the hiring manager can review without having to personally sift through thousands of resumes, and read thousands of desperate ""Hey! Can we network? I'm looking for work!"" emails. You're trying to skirt the process. The process is there *for a reason*. The manager still has to do their regular job, hiring people is a side-task for them.Most peoples work emails are public. Right now you could easily find my company on LinkedIn, my name would show up in the list of people that work there, and if you Google \[my name\] \[company\] my work email is out there.When most people get unsolicited emails, they ignore them, or respond very simply: ""Apply online"". You need to go through HR like everybody else. If HR doesn't think you're worth showing to the hiring manager, *then that's the process working as intended.* That's why we pay them.Some people claim they've had success cold messaging, and I'm sure anecdotally it may have worked out for them a handful of times. But it's mostly frowned upon. Why would the fact you cold-emailed me make you a better candidate than someone that followed the very clear instructions we posted about applying online so you go through the system?All that said, it's not like there's much to lose besides your time if you really want to send out cold-email blasts. Just understand it will annoy most people. But maybe there's a few gems out there at small companies that will think it shows moxie and they'll give you a chance.",SouredRamen,2025-04-08 15:26:29,1,cscareerquestions,t3_1jucoa9,False,
mm23a6g,"When I have open reqs, yes. I’ll review your profile/resume and if I like it, get you shortlisted. If I think you aren’t a match, I’ll take no action.",Golandia,2025-04-08 16:26:01,1,cscareerquestions,t3_1jucoa9,False,
mm2182f,">Because their employer has hired an entire HR department that handles all incoming applications, to filter it down to a reasonable set of candidates that the hiring manager can review without having to personally sift through thousands of resumes, and read thousands of desperate ""Hey! Can we network? I'm looking for work!"" emails. You're trying to skirt the process. The process is there for a reason. The manager still has to do their regular job, hiring people is a side-task for them.It doesn’t seem like most HR departments are actually doing their jobs of looking through the resumes. Most resumes will never even be looked at by a human, and that’s why people will contact recruiters or hiring managers! They want the human contact and attention in an incredibly competitive market, and it is quite literally their job to interact with candidates. It’s clear though most of them can’t even do their job properly when they constantly ghost candidates and people they even reach out to anywayYou know what’s actually annoying? People who contact random strangers for referrals. At least recruiters and hiring managers are meant to contact these candidates. If said candidate actually writes an interesting email to these people instead of something generic, there doesn’t seem to be anything wrong with that. Just solely applying on the career website without any action might not cut it anymore>But it's mostly frowned uponClearly it isn’t if it’s being encouraged by people here and the “Cracking the coding interview” guys. If you don’t like it, fine. But what in the world do you expect all these desperate new grads to do? The hiring process is simply garbageDon’t hate the player, hate the game?",jestercat999,2025-04-08 16:15:46,1,cscareerquestions,t1_mm1r9fc,True,
mm26wby,"I totally get *why* some people would want to cold email, I never disputed that. A lot of times it does feel like you're tossing an application into a black hole. I'm strictly speaking from the other side of the aisle, about how an already very busy hiring manager usually perceives getting unsolicited emails.You know who's encouraging it here? It's like you said. Applicants (read: desperate new grads). Of course *they're* saying to give it a shot.Try asking an actual hiring manager if they enjoy getting hundreds / thousands of unsolicited emails.The only possible time a HM is going to say it's not a problem is when the scale is low enough it's not taking up any meaningful amount of their time. Like 1 or 2 emails.But if people start taking your advice, that number would sky rocket to literally thousands. They simply don't have the time to sift through a bunch of desperate emails. I get that you don't like that fact, and that you're saying hiring is broken, but it is what it is.But like I said, don't let what I'm saying deter you from trying it yourself. You asked how hiring managers perceive cold emails, I'm letting you know that *in general*, it's not appreciated from the hiring manager side. There's of course exceptions, and if you want to spray & pray go for it. It doesn't matter if you annoy 1000 hiring managers if 1 of them liked the email and gives you a job, right? You do you.",SouredRamen,2025-04-08 16:44:00,2,cscareerquestions,t1_mm2182f,False,
mmsfca4,"Vibe coder /s. If you want to be a swe, aim to be a swe",Calibrated-Lobster,2025-04-12 20:24:19,10,cscareerquestions,t3_1jxqawy,False,
mmsgb9c,"With the benefit of hindsight, I would've positioned myself (at the age of 3) as an Intel 8080 assembly developer in 1975 so I could release the first version of [Altair BASIC](https://en.wikipedia.org/wiki/Altair_BASIC). This would naturally have positioned me perfectly for my dream job of ""billionaire tech philanthropist"" today.",Ahlarict,2025-04-12 20:29:45,46,cscareerquestions,t3_1jxqawy,False,
mmskchy,"There is none . Been software dev for 25 years and all these tech are rehash of past techs . Microsoft needed to make a lot of money so they keep making new things , they make money from training materials , certifications , . I mean why are there like gazillions of ways to make a very simple form with a text box for and an ok button ? Tech is a waste of money and time . This is like buying a 2024 Toyota Corolla and in 2 years Toyota does not support or repair it anymore because they created a better framework",East_Indication_7816,2025-04-12 20:52:01,11,cscareerquestions,t3_1jxqawy,False,
mmsfpgl,"Build something that interests you! Put it on your resume. Having completed projects speaks volumes. I started with scripts to compute prime numbers, perfect numbers, etc. Then I build a “smart mirror” and that got my foot in the door for the job I have now",tricky_sailing_husky,2025-04-12 20:26:20,8,cscareerquestions,t3_1jxqawy,False,
mmsou2k,"I wouldn't even start. I don't care about apps, DSA, and writing to a database. You shouldn't do CS unless you like those things.",Past-Listen1446,2025-04-12 21:17:31,3,cscareerquestions,t3_1jxqawy,False,
mmsjtm5,"In which point in time? If it's in the past, do I keep my knowledge of the future i.e. 2008, Big Tech, COVID, AI?Or just in the current job market?Do I have a budget?",EasyLowHangingFruit,2025-04-12 20:49:09,2,cscareerquestions,t3_1jxqawy,False,
mmsy1aw,"something more math heavy, probably PDE solvers",Takagema,2025-04-12 22:11:32,2,cscareerquestions,t3_1jxqawy,False,
mmt6pa8,"If you only have six months (starting from nothing), which is not very long at all, then you must target the lowest of lowest level positions in IT: the IT Support Help DeskWill be tough to achieve landing such a position in just six months but with a large helping of luck and a tonne of hard work you can do it.",MathmoKiwi,2025-04-12 23:05:45,2,cscareerquestions,t3_1jxqawy,False,
mmsg1kc,"Might not be what you’re looking for, but my first thought was to be some sort of specialist with knowledge on an older but essential/legacy tool or language for a non-tech company, ideally in banking, aerospace, or government Having that combo would help me feel less anxious about job security and hopefully help with a good work life balance. I’ll gladly take the pay cut compared to the MAANG people who have to worry about their jobs.",Roman_nvmerals,2025-04-12 20:28:14,1,cscareerquestions,t3_1jxqawy,False,
mmnkcej,"Bruh you got into Amazon and far into Google rounds. You are extremely capable. Don’t worry, you will get an opportunity again in the future for your dream. Just don’t let that be the end all. Also, good job on AMZN. It’s still incredibly high paying and will open so many doors for you.",AcordeonPhx,2025-04-12 00:09:40,39,cscareerquestions,t3_1jx4giy,False,
mmnxj1r,"As others have said, you'll be totally fine, you're off to a great start for your career.I've now worked at two FAANG-tier companies that were ""dream"" jobs to me at one point, and am still at one of them. At the end of the day, they were both *fine*. Work is work - the stuff that made a company exciting for me from the outside really dies off fast once you're inside it and dealing with the day to day of that job. The perks, fancy offices, tech, all of that really doesn't matter once you're just in the day to day of your job.What matters for me now is good WLB, good relationships with my immediate teammates and XFN, work that I can be interested enough in to not be bored to tears, and comp that can make me comfortable. I'm honestly quite happy at my current ""dream"" job, but few of the things that made it that dream are what keep me here these days.",willfightforbeer,2025-04-12 01:33:36,9,cscareerquestions,t3_1jx4giy,False,
mmo0boi,I'd suggest two things:\- don't have a dream job \- don't worryDo a little time at AMZN and leverage that into something a lot cooler and less caustic.,friedlegwithcheese,2025-04-12 01:51:35,15,cscareerquestions,t3_1jx4giy,False,
mmo9d4y,First mistake was having a dream company. They will never care about you. Some of the best companies I’ve been at were the ones that weren’t my “dream companies” and some of my worst experiences were at the “dream companies”. Rejection is redirection and probably for the better.,slightoverthinker,2025-04-12 02:51:08,6,cscareerquestions,t3_1jx4giy,False,
mmnm7s0,No. My dream company is who gives me more $$$ and does not have a toxic leadership.,Politex99,2025-04-12 00:21:22,9,cscareerquestions,t3_1jx4giy,False,
mmnwo6t,"In the current tech job market a new grad is sad he didn’t get into Google, but got into Amazon. I thought I’ve seen it all here",3-day-respawn,2025-04-12 01:28:09,5,cscareerquestions,t3_1jx4giy,False,
mmoei58,"""Kim, people are dying!"". I'd say be grateful and enjoy it! You're doing a lot better than most.",yeastyboi,2025-04-12 03:27:09,2,cscareerquestions,t3_1jx4giy,False,
mmo2oua,Get over it,NeedleworkerWhich350,2025-04-12 02:06:51,3,cscareerquestions,t3_1jx4giy,False,
mmo3xsm,"Bro, grow up.What matters is the work you do, not the company where you do that work at",mx_code,2025-04-12 02:14:59,2,cscareerquestions,t3_1jx4giy,False,
mmoe8r5,Stop dreaming about jobs.,ChavXO,2025-04-12 03:25:18,2,cscareerquestions,t3_1jx4giy,False,
mmn9lih,"Send out applications, a minimum of 10 a day. Sharpen your DSA and problem solving skills to get through OA's. Work on a project or two that way you have something to pass the time but to also talk about in the behavioral phase of interviews. So in terms of priorities I'd say:1. send out applications daily2. brush up on DSA/LC style problem solving3. build meaningful projects that pique your interest",AlfredGoodmanBates,2025-04-11 23:04:32,5,cscareerquestions,t3_1jx29tx,False,
mmoesgh,"If possible, apply all across your country / any countries you can work in, and be willing to move. That more than anything will help you out.",theGormonster,2025-04-12 03:29:14,3,cscareerquestions,t3_1jx29tx,False,
mmuyb03,"It depends on the type of job your applying for. If it’s pure SWE, once you’re able to confidently do LC easy and atleast have a general understanding of medium level problems, spam out applications.I prefer that approach so when you do get interviews you’re not trying to cram DS knowledge last minute. In the meantime, you can work on personal projects. I would focus on one or two, have them hosted so their viewable by the employer and be able to talk through them. Quality > quantity for projects If you’re aiming for cyber, it’s a bit of a different game. You can apply for analyst positions right now but you’re probably better off going for help desk unless you’ve done a security focused internship. I switched from SWE to cyber and enjoy it, you give up the compensation potential of SWE for the general fun factor of cyber.(atleast in my experience)",Dear-Response-7218,2025-04-13 06:55:47,1,cscareerquestions,t3_1jx29tx,False,
mmrnciu,"You wont get a job in tech so the faster you give up on that the better. I would start looking at local fast food places, retail stores, warehouses, anything that will hire people without a degree. Make sure you leave your CS degree off your resume or they will think youre overqualified",Comfortable-Insect-7,2025-04-12 17:50:48,0,cscareerquestions,t3_1jx29tx,False,
mmrnqqd,Thanks for the insight Mr. Insect,24Gokartracer,2025-04-12 17:52:50,1,cscareerquestions,t1_mmrnciu,True,
mmg8zwq,"Is this on the phone? Ask again.Is this via email? Reply ""Thanks! As for my question, is there ...?""",high_throughput,2025-04-10 20:32:29,4,cscareerquestions,t3_1jw7rgo,False,
mmg7cae,Ignore them. They tend to not go anywhere regardless. Ineffective and not serious recruiters are a waste of time.,LongShortSlimFat,2025-04-10 20:24:26,2,cscareerquestions,t3_1jw7rgo,False,
mmg8e8i,"Under other conditions I'd agree, but I'm a few steps into the interview process now so I'm worried about letting the opportunity go.",laumimac,2025-04-10 20:29:32,1,cscareerquestions,t1_mmg7cae,True,
mmgmw7r,"Really would reconsider this. They're mainly useless you're right, but I doubled my salary after one was interested via rando inmail. It's like cold applying, all a crap shoot",SpyDiego,2025-04-10 21:42:53,1,cscareerquestions,t1_mmg7cae,False,
mmg8qis,Oh if you got actual interviews then I’d just save it till the end. At that point they are invested and will answer any questions be it the manager or recruiter.,LongShortSlimFat,2025-04-10 20:31:12,2,cscareerquestions,t1_mmg8e8i,False,
mmgoyuh,There are a few I stay in contact with. But generally if it’s poor communication I don’t respond or give silly salary requirements.,LongShortSlimFat,2025-04-10 21:53:53,1,cscareerquestions,t1_mmgmw7r,False,
mmgb6tr,"Haha right now it's like I'm 3 steps in and asked a clarifying question about what to have ready for step 4, and that's why I'm a little more eager to have answers. I think I'd just let it roll if I weren't worried I'm going in unprepared. Maybe he just thinks I should be able to tell from what he's told me so far, but I wish I at least knew he was deliberately not answering.",laumimac,2025-04-10 20:43:11,2,cscareerquestions,t1_mmg8qis,True,
mmj7iz0,"It's not possible if you live in a rich country like Germany or the US. What I really mean is the odds are about 1 in 20 and you're probably in the 19. No one knows who you are, you can't just DM account managers and solicit for work, companies have contractual agreements.You end up with small projects by networking or and building a name for yourself and then people with their small businesses don't want to sign contracts or pay you. You can go on Fiverr and get paid but not enough to live on unless you're lucky or famous. You live in India where 1000 euros or dollars a month is middle class, you can do it.Still probably a bad idea. My hail corporate resume of companies you've heard of looks a whole lot better than a freelancer's taking risks for variable pay, with level of clients and scale of work are beneath my own. Being your own boss is overrated. If you scale up, most businesses fail.>Should I start looking for big companies to work for, to build up reputation? Yes and don't leave. Or learn how to run a business, save up money and make industry contacts and try to start your own consulting firm. In the US, I'd recommend an MBA. You're not the freelancer doing the grunt work, you're the owner or account manager delegating to the grunts and freelancers. Be on the other side of the hustle.>Is it enough to continue building a portfolio with private freelance projectsDon't do that. Every job offer I sign the contract for has a clause that forbids outside work without approval. It's not enough money compared my salary broken down per hour anyway. Stick to work experience. Ask for more work if you want. Just me but I find after a fulltime software job, the last thing I want to do is go home and code more for a hobby or for pay. I dick on Reddit and do actual fun things.",NewSchoolBoxer,2025-04-11 09:02:03,3,cscareerquestions,t3_1jw348b,False,
mmaveuz,"I inadvertently sent the wrong SQL script to be run for regular DB maintenance.Broke a flaky app for a week. Fortunately, everybody knew the app was flaky and inconsistent, and it wasn’t an official system of record anyway (I was working on the replacement that *would* be).",thephotoman,2025-04-09 23:39:40,6,cscareerquestions,t3_1jvi5hl,False,
mmb2i3e,Messed up a stored procedure and broke a job for a few hours... I competely missed it and I rightly got chewed out for it,MCZuri,2025-04-10 00:21:32,6,cscareerquestions,t3_1jvi5hl,False,
mmbbdo2,Took over 4000 client websites offline for over 3 hours.,alinroc,2025-04-10 01:14:05,6,cscareerquestions,t3_1jvi5hl,False,
mmcmu3v,"I asked my manager why his expectations were so high if we get paid the same as other developers at the company. He became upset, canceled 1 on 1’s, and put me on the path to PIP.",xlb250,2025-04-10 07:11:29,4,cscareerquestions,t3_1jvi5hl,False,
mmbgq6c,"I did a free induction to the client's technician about how to maintain the system.Now I'm almost out of a job, since the technician now knows how to troubleshoot, setup, backup and the only thing missing is to know how to develop new features.",Deboniako,2025-04-10 01:45:36,3,cscareerquestions,t3_1jvi5hl,False,
mmbi2fr,I once dropped a production DB in my first job. Not only was that something that wasn’t protected against but I also made backups of the DB and was able to restore it without anyone noticing.,pkpzp228,2025-04-10 01:53:10,4,cscareerquestions,t3_1jvi5hl,False,
mmeiy4n,"""Do you remember the uat database?""",Agifem,2025-04-10 15:30:01,3,cscareerquestions,t3_1jvi5hl,False,
mmm2xi0,Majoring in computer science,Comfortable-Insect-7,2025-04-11 19:13:55,1,cscareerquestions,t3_1jvi5hl,False,
mmexppr,"Hmmm, I guess from a company switch perspective my focus should then be the system design prep. Thank you!",tturner3316,2025-04-10 16:42:44,1,cscareerquestions,t1_mma3aoj,True,
mlzfum3,"Think long and hard before you bring things up. A big issue I've noticed with junior devs is they're so hungry to be heard they speak up when they're uninformed. It's better to give 1 well thought out idea than 5 random ideas just to feel like you're contributing.Second - learn who you can talk to. This is a tough one, a lot of people don't necessarily want you to fail, but do not care if you succeed. This is tough because a lot of the time it will be the staff or principal level people who seem rude on the surface. In my experience the most technical people will help you the most, but you can't ask them general questions because they're so used to getting bombed with general questions from non-technical people.",captain-_-clutch,2025-04-08 04:33:13,21,cscareerquestions,t3_1ju54yz,False,
mlzfz0y,"Don't talk about mental health, chronic injuries, adhd, or anything of that nature. And politics for obvious reasons (unless your whole team has the same political affiliation). It's sad, but those topics have a stigma attached to them, and you don't want to put yourself at risk of being looked down upon by narrow minded individuals.As for what to actually talk about, pretty much anything else is fine. Don't be afraid to ask questions, but make sure you do a little research on your own before reaching out. Try to find tenured junior/mid level engineers to mentor you since the seniors will often be very busy.",Used-Stretch-3508,2025-04-08 04:34:13,20,cscareerquestions,t3_1ju54yz,False,
mlzi6cm,"Hi there!Always prioritize work that aligns with your org's goals (KPIs), and that that has the most overall impact.Right when you start your work day (or the day before), make list of the 3 most critical priorities you need to achieve that day.For each one of these priorities, make a to-do list of all the steps required to complete it, and a definition of done.Try to do all your critical work at the beginning of the day.Divide the day in 90 minutes Pomodoro blocks. Mark these blocks as busy on your public calendar, and protect them AT ALL COST.Communicate clearly, succinctly and often.Make sure you fully understand the context and the requirements of the tasks your working on. As as many questions as needed to figure these out.ALWAYS communicate blockers and possible delays.Keep to yourself any personal information that could be use to target or discriminate yourself i.e. politics, preferences, idiologies, etc.Be KIND!",EasyLowHangingFruit,2025-04-08 04:52:40,6,cscareerquestions,t3_1ju54yz,False,
mlzjnix,"Congrats on the new job! You’ll definitely learn more than this as you move along your career but from my personal mistakes I’d say:- You will eventually run into some legacy code that looks horrendous at first. Don’t trash it loudly around the team thinking they will agree and think you’re smart for identifying bad code. You may be missing context on the implementation and possibly be shit talking your colleagues ideas on solving a problem you don’t fully know about. - give yourself an hour or two on trying to figure something out yourself before you ask more senior devs on your team for help- KWYDK (Know What You Don’t Know) when something you don’t know about comes up in a meeting or discussion, note it down to figure out later or ask colleagues. Tackling complex problems becomes easier when you list out specifics that have you confused.- Don’t get too comfortable, everyone is replaceable. Keep your resume up to date and refresh skills when you have down time. - Most people only value in-depth details/explanations in a one on one setting. Discussions with multiple people should be kept as simple as possible. People don’t remember the dev who bored them with endless details on the code constraints that are causing so and so overhead, they remember the dev who broke down the problem into short bullets and had an idea on the next steps in minutes instead of hours.- take a look at some recent PRs or commits your colleagues have made. Observing the changes will help you understand the codebase and what the coding standards might be (ex; some teams are do or die about code readability versus some teams are all about performance)- Keep tabs on how you perform versus the rest of the team. If you notice on average devs on the team are getting multiple features knocked out in the time it takes you to do one, you’ll know you gotta improve. Better to notice the performance gaps yourself before your manager can.- Maintain a good rep with your colleagues and try to be likable. At every job so far, I’ve seen okay devs that are easy to be around go much further in their careers, than the knowledgable 10x dev who is a pain to talk to.",YouLostMeThere43,2025-04-08 05:05:31,4,cscareerquestions,t3_1ju54yz,False,
mm02art,"""Abandon hope, all ye who enter here.""",OneOldNerd,2025-04-08 08:08:11,2,cscareerquestions,t3_1ju54yz,False,
mlznva1,"Don't ask for advice on reddit. Just kidding. Lots of good advice already but if I had to choose two things:\- You'll probably have to navigate complex code bases. Write diagrams to help you understand what's going on. Your present and future selves will thank you.\- Don't be afraid to ask questions, but make sure you've exhausted all avenues first and can list a few things that you've tried. You don't want to ask a ""How do I do this"" type of question.Good luck!",CappuccinoCodes,2025-04-08 05:43:49,1,cscareerquestions,t3_1ju54yz,False,
mm038ue,"honestly, you're probably going to suffer from imposter syndrome at first, but that's alright, all you need to do is push through, get experience, and eventually it'll get better..Finally, always remember, tutorials are a good reference, but they don't teach you real-life dev, you need to get your hands dirty at a job/internship",t0039341,2025-04-08 08:18:53,1,cscareerquestions,t3_1ju54yz,False,
mm0iyqp,"Stay curious, communicate clearly, ask questions early, and remember: consistent progress during work hours matters more than late-night commits trying to prove a point.",QuantumTechie,2025-04-08 11:00:05,1,cscareerquestions,t3_1ju54yz,False,
mm0kbcd,"Find a good psychiatrist and medication, you're going to need it.",RoninX40,2025-04-08 11:11:19,1,cscareerquestions,t3_1ju54yz,False,
mm1w51u,"Being a git master never hurts. I found reading the first 100 pages of ProGit gave me a really solid understanding. Active/Reflective listening is really helpful for making sure people feel heard and understood. Check out Stephen Covey's 5th habit in Seven Habits of Highly Effective People. ""Seek first to understand, then be understood.""Only time I've done commits after hours is if there is a deadline for a major feature launch, which happens not every week. Do your tasks, help others when you have time, and don't be a dick. At the same time, don't put in extra hours unless its for a specific reason. If you think helping someone else will pay off, go for it. If you think making a solid first impression will mean an easier path moving forward, great.Be intentional about how you spend your time, communicate clearly, and don't let yourself be stuck for more than a few hours (maybe ask your tech lead what the expectation is on that one).",Neat-Wolf,2025-04-08 15:50:29,1,cscareerquestions,t3_1ju54yz,False,
mlvdmky,"You might as well apply. Worst they can do is turn you down. You should probably expect that since you told them you didn't like the job. They're going to assume that even if you take the job, you're going to spend a good part of your time looking for the next job. A lot of places in the industry understand that most people are only going to hang out for a couple of years anyway, but if you don't like the job, you might not make it through the ramp up before finding something new.",iknowsomeguy,2025-04-07 14:49:29,7,cscareerquestions,t3_1jtmu5b,False,
mlwglfr,">I am in my final semester, with no job replies back yet, and have grown a certain respect for the devops field.Respectfully, they aren't going to believe you grew a respect for the field. They're going to believe you are another junior in the tsunami of engineers that are desperate for a job. Can't hurt to apply, but in all likelihood you made a mistake burning that bridge, and now it's a waterway you won't be able to cross.",I_Miss_Kate,2025-04-07 18:07:03,1,cscareerquestions,t3_1jtmu5b,False,
mlvf98j,"Thanks for replying, ig ur right, beggars can't be choosers, I'll apply, but keep expectations low, The thing is I am applying to other places that require 2 or 5 plus years of experience, and to my luck, this is the only place (yet) hiring a junior",silzai,2025-04-07 14:57:38,0,cscareerquestions,t1_mlvdmky,True,
mlvgdb8,"If you do end up in an interview and they bring up the fact that you said you didn't like the job, a good way to reframe it might be, "" I'm a different person now. Whether or not I like the job, you know I'm a hard worker, and I do like to eat.""",iknowsomeguy,2025-04-07 15:03:06,1,cscareerquestions,t1_mlvf98j,False,
mlvhmqj,"Great, thankss! (But is that a typo at the end there?)",silzai,2025-04-07 15:09:29,0,cscareerquestions,t1_mlvgdb8,True,
mlvhrwr,"No, it's humor.",iknowsomeguy,2025-04-07 15:10:12,1,cscareerquestions,t1_mlvhmqj,False,
mm9c9qi,What're they going to do? PIP you harder?,cyberchief,2025-04-09 18:52:20,74,cscareerquestions,t3_1jvdhmz,False,
mm9fn4s,"What's the duration of the PIP? If you;'re sick 2 days off is the right amount of time, especially if you clock out early today saying you feel horrible Keep in mind this is a PAID INTERVIEW PERIOD so their expectations are low and they sound like they are trying to push you out",HackVT,2025-04-09 19:08:55,19,cscareerquestions,t3_1jvdhmz,False,moderator
mm9cc5y,I'd take Thursday off to prepare.,Mysterious-Essay-860,2025-04-09 18:52:39,6,cscareerquestions,t3_1jvdhmz,False,
mm9f7uf,Expect to get fired the moment you slip up. If you believe you have a chance at that technical interview I would definitely focus on getting that job rather than the PIP.,panthereal,2025-04-09 19:06:50,6,cscareerquestions,t3_1jvdhmz,False,
mmbckfg,"I'd ""work"" remotely and prepare for the interview. Don't see a reason to draw further attention with sick days.",java-sdet,2025-04-10 01:21:04,3,cscareerquestions,t3_1jvdhmz,False,
mm9n55t,"Maybe it is possible to survive a PIP, but I have never seen it happen.",fedput,2025-04-09 19:45:39,2,cscareerquestions,t3_1jvdhmz,False,
mmbafpr,"Take the day off, think about yourself first and assume you will not survive the pip.",rdem341,2025-04-10 01:08:34,1,cscareerquestions,t3_1jvdhmz,False,
mmcabta,"Make up some legitimate excuse about why it needs more time, blame it on some dependency or an external system, as long as it sounds good on paper it can go on the ticket.",Qkumbazoo,2025-04-10 05:11:13,1,cscareerquestions,t3_1jvdhmz,False,
mmeiabf,Do the ticket Ben.,LostCausesEverywhere,2025-04-10 15:26:44,1,cscareerquestions,t3_1jvdhmz,False,
mm9dajm,"Take a sick day, they won’t fire you until the end of the pip",zerocoldx911,2025-04-09 18:57:18,1,cscareerquestions,t3_1jvdhmz,False,
mm1y65j,"I have a bachelors in CS but am returning to uni to do a masters because I have the opportunity to and I've grown tired of doing CRUD apps lolIf it's manageable for you to get a degree, it's a win-win. You'll have gained personal knowledge and open up new opportunities for yourself as well.The classes I had during my bachelors were IMO more interesting than whatever I do at work. It's also a very different vibe than work in general (people are there to learn, not execute, and it just feels like everyone is friendlier and more implicated).The only ""downside"" I guess is mathematics, I would advise against doing a computer science degree if you don't like mathematics. there's lots and lots of it (I remember my brain going completely blank when my numerical analysis professor announced that next chapter was ""numerical methods to solve differential equations"").The ""upside"" is that once you get the hang of it, understanding how mathematics are used in the field is super interesting",LowB0b,2025-04-08 16:00:26,2,cscareerquestions,t3_1jugp97,False,
mm5qqxz,Yes,jjopm,2025-04-09 04:19:28,2,cscareerquestions,t3_1jugp97,False,
mm1xauu,"If the job market wasn't already collapsing and a recession wasn't already here, I'd have agreed with you. In the event that you lose your job due to economic factors, getting your next job will likely be an uphill battle that you're starting at a disadvantage on. Given that you're already experienced, just go get a bullshit CS degree from WGU so that you can check the boxes later on. It's cheap, easy, and you can get it done fairly quick.Also, IT =/ CS.",fake-bird-123,2025-04-08 15:56:10,2,cscareerquestions,t3_1jugp97,False,
mm1w6zy,Nope. Waste of time and money. Study best practices and learn yourself. Start with databases... Then learn AI tools.,F1ForeverFan,2025-04-08 15:50:45,-6,cscareerquestions,t3_1jugp97,False,
mm1zxf4,"I would definitely go studying for the vibe and new knowledge. The problem is, that I would need lots of money for it, and I don't have them if I stop working :)",NoWeather1702,2025-04-08 16:09:17,2,cscareerquestions,t1_mm1y65j,True,
mm25owg,I got an online degree whilst still working a full time job. Got me into faang.Sounds like you are just looking for excuses not to do it.,Happy_frog11,2025-04-08 16:38:06,2,cscareerquestions,t1_mm1zxf4,False,
mm2014t,"Not really, if that was the case then no new grad outside of the ivy league schools would ever get hired. You're of course welcome to forgo this entirely, but you're putting yourself at a clear disadvantage in an increasingly difficult job market.",fake-bird-123,2025-04-08 16:09:47,1,cscareerquestions,t1_mm1zlge,False,
mm2jjpg,Can you recommend a university or program you studied?,NoWeather1702,2025-04-08 17:44:00,0,cscareerquestions,t1_mm25owg,True,
mmbtetr,Same! I want to know too,Orion-7400,2025-04-10 03:01:51,1,cscareerquestions,t3_1jtx18a,False,
mmyv0uz,"If you're scared of math and don't want to learn it, that basically means you won't be able to learn anything that substantive that AI or even another person can replace.The only other option is to build something unique without a ton of complexity that would sell.But that's another set of skills. It's not the worst to just be a fullstack developer. They probably won't be replaced for a while",Latter-Guitar6380,2025-04-13 22:14:48,8,cscareerquestions,t3_1jyjent,False,
mmyuxdb,"Specialize in a language beyeond python or you’re setting yourself up for failure in the job market. My strategy was to utilize chat ChatGPT to walk me through a project that would make me marketable and in a language I’m not comfortable with. Ignore the AI chatter, and just focus on skillsets that are in demand (I think APIs in languages like Java and JavaScript will become very in demand). Also, unfortunately you cannot escape theory if you want to pass an interview, as that’s what will set you aside from the common applicants, and applicants from places like Stanford and MIT will know it inside out and be able to ace an interview in any language because they know theory. That’s one of the reasons the market is so slow right now, so set yourself aside somehow",LollygaginNewt,2025-04-13 22:14:13,3,cscareerquestions,t3_1jyjent,False,
mmywkzb,Find a problem to solve with code. Help out an open source software?,cerealmonogamiss,2025-04-13 22:23:50,2,cscareerquestions,t3_1jyjent,False,
mmyymww,have you mastered concurrency yet?,StackOwOFlow,2025-04-13 22:35:41,2,cscareerquestions,t3_1jyjent,False,
mmyyao5,"I think some hands on experience with AI is a great idea to future-proof your skills, you don't have to be a math genius to figure out how to use an existing model to solve a practical use case.You probably want to think about what aspects of programming you like, look at entry level jobs in your area and go from there. If you use ChatGPT a lot it might know your interests and could even help figure out a direction for you and suggest topics/material to learn.I suspect that the days of just being a generic web dev that can build a site, and only learned from taking a bootcamp, are over. You need to have a T-shaped skillset, which means you need to deeply understand what skills companies are looking for. There are also Youtubers that make software developer roadmaps that you can look for, for inspiration.",some_clickhead,2025-04-13 22:33:42,1,cscareerquestions,t3_1jyjent,False,
mmz3gcp,"If you want to build useful stuff, then build useful stuff.Doesn't need to be a website, it can be a smartphone app, a desktop app, embedded, server, whatever.",ToThePillory,2025-04-13 23:04:09,1,cscareerquestions,t3_1jyjent,False,
mmz4oo5,"> even ChatGPT can build full stack apps nowJust pointing out that this is not true. You might think it is true because you aren't a full stack dev, but I promise you it is not.ChatGPT is not sorting out your DevOps. Your build and test pipelines, DNS, cloud infra, analytics, security testing, appropriate horizontal scaling and load balancing, event logging, auditing controls, security... These are all parts of being a full stack dev.",Kooky_Anything8744,2025-04-13 23:11:36,1,cscareerquestions,t3_1jyjent,False,
mmz4qvv,Pascal,pexavc,2025-04-13 23:11:58,1,cscareerquestions,t3_1jyjent,False,
mmzevg3,Just use AI as a tool to help you build out a fun project. Like a mobile game or something. You’ll learn a lot,arg_I_be_a_pirate,2025-04-14 00:14:59,1,cscareerquestions,t3_1jyjent,False,
mmzgkfw,I spend a lot of time lately debugging code written by chatbots. It’s a real skill.,Traveling-Techie,2025-04-14 00:25:45,1,cscareerquestions,t3_1jyjent,False,
mmpqf1b,"You don’t need to say anything to your boss. If you want to do better, just do it. They will see.",PomegranateBasic7388,2025-04-12 11:02:40,24,cscareerquestions,t3_1jxeiwg,False,
mmq8b37,"> I realized this last year and cut out distractions and slightly improved, even getting a salary bump and an improved review. But this year, in q1, I could be better, and I am aware of how little I dedicate too my job that I should. If I sincerely express these sentiments to my manager and try to improve, do you think she'll be fine with me?""hey boss, I was actually slacking even though you didn't seem to know""....You got a salary bump and better review, and you want to rat on yourself? wtf are you thinking dude?",GimmeChickenBlasters,2025-04-12 13:17:02,20,cscareerquestions,t3_1jxeiwg,False,
mmr9pq9,"This is very strange, what good can come out from telling your manager this?",attrox_,2025-04-12 16:42:03,4,cscareerquestions,t3_1jxeiwg,False,
mmrfggx,"Unless you are on a small team, everyone is busy as fuck nobody is going to notice your improvements.Perception is reality. People who are really good at articulating their works and fight for themselves get recognitions.",poopine,2025-04-12 17:11:12,3,cscareerquestions,t1_mmpqf1b,False,
mmpqlgs,I'm thinking of still scheduling a meeting to explain what I've delivered this year and what I want to do to know that I'm not mentally checked out. I'm currently blocked on something I've had since January,SpecialistNote4611,2025-04-12 11:04:18,-6,cscareerquestions,t1_mmpqf1b,True,
mmt8qpy,"> Perception is reality. People who are really good at articulating their works and fight for themselves get recognitions.I don't know if you're agreeing with OP, but telling your manager that you were under-performing is the exact opposite of that. Even with his plan to bring up his low performing past, like some weird Catholic-induced need to confess, he still needs to demonstrate what he's done to improve. I don't know how OP thinks that conversation is going to go, but I imagine it'll be something like this - OP: ""Hey boss, I wasn't doing much the past year, but now I'm working hard""....boss: ""What are you working hard on?"". There's absolutely nothing to gain from his plan. He still has to demonstrate what he's done, and telling on yourself is about the most ass-backwards way to go about it.",GimmeChickenBlasters,2025-04-12 23:18:12,1,cscareerquestions,t1_mmrfggx,False,
mmrl05v,Thanks. I'm currently stuck on some blockers from a project since January. I was thinking of having this meeting to bring up the kind of projects that maybe I would like to do. I have delivered more successfully on certain kinds of work on the past.,SpecialistNote4611,2025-04-12 17:38:52,0,cscareerquestions,t1_mmrfggx,True,
mmqw6fl,Why?,timmyotc,2025-04-12 15:31:27,6,cscareerquestions,t1_mmpqlgs,False,
mmqw9j4,Are you in therapy? This isn’t the behavior of someone who’s well adjusted.What you should do is start a brag doc. You can write down daily accomplishments and then roll those up and review them with your manager at regular intervals.,lupercalpainting,2025-04-12 15:31:55,-2,cscareerquestions,t1_mmpqlgs,False,
mmujze6,perception is reality. This year I'm stuck on a project since q1. I just want to discuss it and reiterate my desire for more work in the remaining quarters,SpecialistNote4611,2025-04-13 04:43:55,1,cscareerquestions,t1_mmt8qpy,True,
mmguc9y,"If these are entry-level postings, you should look into pushing some commits to open source that deals closely with the subject matter, or launch your own private project in the same space.",Varkoth,2025-04-10 22:23:36,8,cscareerquestions,t3_1jwaauo,False,
mmguidr,"what technologies have you used?I used azure databricks and pyspark at my last job, not realizing that these were frequently used components of distributed systems.In general a lot of companies use distributed systems because their applications are large scale.",ArmorAbsMrKrabs,2025-04-10 22:24:35,2,cscareerquestions,t3_1jwaauo,False,
mmgu136,Bro I don’t how to get A JOB right nowLike I’ll give my advice though. Probably just lie about having worked in the past and research about the main topics to talk about it and then just learn during the job itself,NewLegacySlayer,2025-04-10 22:21:52,1,cscareerquestions,t3_1jwaauo,False,
mmgummw,"Get a job using those tech, or self-study and hope you get an interview so. You can talk your way to a job.",Schedule_Left,2025-04-10 22:25:14,1,cscareerquestions,t3_1jwaauo,False,
mmguyuz,"Write blogs, create projects hosted on github, make youtube videos, etc. that contains those tools and technologies needed to achieve what you are looking for it. In this case showcase you may not have work experience with docker, Kubernetes, redis, etc on a professional or large scale but you are interested in the tools and technologies and willing to learn.This is what I would have suggested in this past, in this economy with so many candidates it going to be harder as most aren't going to take the time to look into your portfolio etc. The way most individual get experience is they join a medium to large company, virtually any F500 company and get to a mid/senior and you will be forced to deal with those tools and technologies. Also remember job listing requirements are often more wishlists by HR.",cashfile,2025-04-10 22:27:10,1,cscareerquestions,t3_1jwaauo,False,
mmgw1xj,"Depending on your amount of experience, you might see these terms used and not realize that you might have some level of exp with them - you just dont' realize itIn your case, are you monitoring traffic at all? What's happening when your servers are getting overloaded w requests? These are normal things that you'd consider if you're the one working with these APIs, or you've at least worked closely with someone who has more direct exp with it. You don't have to be in distributed systems to understand how distributed systems work at your company.So if anything, see if you can dig deeper into how you work ties into related services. You might be able to translate that into something on your resume, and if it does result in a scheduled interview, you at least can talk about it truthfully in the context of your current position.",besseddrest,2025-04-10 22:33:24,1,cscareerquestions,t3_1jwaauo,False,
mmgycof,"1. open source2. make an app that has real users, even if it;s just yourself. Document it. Network with it. This puts you above all the ""portfolio"" school projects or learning projects.TLDR - do real stuff. ignore the parts of the rec you don;t suit. the req is learnable, everyone knows that. What they want is to see PROOF that you can do the job (see 1. and 2.)",effyverse,2025-04-10 22:46:31,1,cscareerquestions,t3_1jwaauo,False,
mmo2c7w,"Hustle, don’t complain",NeedleworkerWhich350,2025-04-12 02:04:36,1,cscareerquestions,t3_1jwaauo,False,
mmhrslp,".Net, sql, docker,azure ci/cd blazor. Thats the gist of it. Yea but im not at one of those companies. My small insurance company has really low traffic, which works for them because they arnt trying to take over the world. Will soon be upskilling in azure cloud computing for future job projects but i dont know if thats related to what i described above.",Legitimate-School-59,2025-04-11 01:43:07,1,cscareerquestions,t1_mmguidr,True,
mmguolu,"Not easy to pull off if you're not competent in said technology.You might get asked follow up questions that'll throw you off guard. And someone with technical knowledge will see through the bullshit.""I built a distributed ETL data pipeline using AWS, processing 1M records per minute""""Really? What challenges did you face when scaling the pipeline?""""Uhhh, there was lots of data""...and you're toast.IMO you're better off doing a personal project if you wanna showcase skill in said technology. As long as it's not some youtube tutorial crud app or a to-do app.",ArmorAbsMrKrabs,2025-04-10 22:25:32,2,cscareerquestions,t1_mmgu136,False,
mmdk3ts,"You left a job you didn't enjoy and found a new one. You're asking for advice on...Moving on from a prior employer?  You paid in your time, they paid you in cash. Transaction complete. Nothing to feel bad about. 10 months is a large amount of time to evaluate the job. No idea what CTO was talking about.",drunkondata,2025-04-10 12:20:29,15,cscareerquestions,t3_1jvw2pb,False,
mmdij63,I wouldn’t beat myself up over something like this. I think most people who don’t enjoy their current job and find an enjoyable one with a comparable salary would make that switch. Remember that companies have no loyalty to you. Many of them will fire you on a whim regardless. My firm did this in January and people with 10-20 YOE who worked long hours still got laid off. They were loyal but got rewarded with nothing.Keep your head up. Good luck with your new job!,Aggressive_Top_1380,2025-04-10 12:09:52,7,cscareerquestions,t3_1jvw2pb,False,
mmdk18y,"You have already got over the biggest obstacle by finding a better position.If you didn't like the job after 10 months, you weren't going to like it after 24.The only risk was future questions in interviews regarding why you left after only 10 months, which can easily be played off.You made the right decision and have no reason to be questioning yourself. You left a job that you already didn't like for one that pays better and you find it more interesting.",zToastOnBeans,2025-04-10 12:20:00,3,cscareerquestions,t3_1jvw2pb,False,
mme92at,"\> Left to go work at a company that you care about, getting more money, better financial packageYou may or may not have burned a bridge because for your CTO it's annoying to have to hire someone else, but put it in perspective. You're at a new company which you are much more passionate about, your work output will noticeably improve because you won't be checking out, they're bigger and more stable than a startup by the way you've phrased things.Businesses exist to make a profit. We work for them to further our own life goals. Better hours, better pay, more involvement and personal satisfaction? That's a fat W (and now you're not staring down the barrel of being let go for under performance).",SmalltimeIT,2025-04-10 14:41:10,1,cscareerquestions,t3_1jvw2pb,False,
mme9bs3,"dont feel bad about it. execs dont care about you either, they just pretend to. everybody work to make money.",Business-Hand6004,2025-04-10 14:42:29,1,cscareerquestions,t3_1jvw2pb,False,
mmf6j2a,companies are not your friends. tell them to lick your balls and go to the new company. “thats business”,randomguyqwertyi,2025-04-10 17:25:29,1,cscareerquestions,t3_1jvw2pb,False,
mmfrluh,Yes I have felt like this after every job I left even if I hated the company and manager. It's just a shock to the system to actually make a big change. You'll forget about it in a week/month,silly_bet_3454,2025-04-10 19:07:42,1,cscareerquestions,t3_1jvw2pb,False,
mmetz8j,"I mean as long as she’s consistent (and says that 10 months is not a lot of time to evaluate job performance), I’m cool with that. If she’s one of those who will call someone that changes jobs every 4 years a “job hopper” but will also fire someone because they got off to a slow start in their first few months, then yeah it’s stupid.",Pristine-Item680,2025-04-10 16:24:20,1,cscareerquestions,t1_mmdk3ts,False,
mmdkiez,Yes? 10 months looks bad? Even if its 4Y one place 3.5 another before?,SourceAwkward,2025-04-10 12:23:10,1,cscareerquestions,t1_mmdk18y,True,
mmf1cjt,I can figure out if I like a place in the first month. Nearly a year?  What's taking so long?,drunkondata,2025-04-10 17:00:31,1,cscareerquestions,t1_mmetz8j,False,
