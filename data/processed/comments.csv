id,body,author,created_utc,score,subreddit,parent_id,is_submitter,distinguished
n4na557,"Wait until you hear about data lakes and warehouses, and ACID and NoSQL and DAGs and bronze, silver, gold layers, and scrum and agile and ...",One-Employment3759,2025-07-23 02:55:15,449,dataengineering,t3_1m6xx7o,False,
n4nbp5h,It is all about the illusion of progress and getting a budget approved.,Leather_Embarrassed,2025-07-23 03:05:15,103,dataengineering,t3_1m6xx7o,False,
n4of0ff,"RAG's not a bad name tbh. You're doing a retrieval step before the generation step, so it's called ""retrieval augmented generation"".",ReadyAndSalted,2025-07-23 08:25:50,25,dataengineering,t3_1m6xx7o,False,
n4nb3ep,Wait till you find out a database is an excel with superiority complex.,professionalSeeker_,2025-07-23 03:01:22,157,dataengineering,t3_1m6xx7o,False,
n4oqnbk,Vectorization is not indexing of text,emsiem22,2025-07-23 10:15:16,22,dataengineering,t3_1m6xx7o,False,
n4nbizx,"Nah, my manager and the accountants want to incorporate Copilot everywhere. Our central IT team blocked access. Plus, the cost is too much if we did have access.",digitalghost-dev,2025-07-23 03:04:08,38,dataengineering,t3_1m6xx7o,False,
n4ncrzs,"No banned terms at my company. Even if things are just getting rebranded, it's all about matching the language of people who are trying to understand. The AI wave is the first time a lot of people are learning technical concepts. Your average business guy has a vocabulary largely driven by hype and when we meet them where they're at we can make a lot of progress.",indranet_dnb,2025-07-23 03:12:15,30,dataengineering,t3_1m6xx7o,False,
n4ocukm,"I'm rather self-conscious about my skills, and for a long while such keywords in job descriptions would throw me off. There would be a dozen acronyms and I'd say ""oh I don't know any of these"" and pass. Then I'd get to work with some of them at my current job, and it would literally be something you could learn in a day. Sometimes an hour. I still don't understand why people feel compelled to put them into job descriptions under ""absolutely required"". You could learn almost anything on the job, especially such tools. It also throws the poor clueless recruiters off. I had the following conversation recently:-So, how many years of experience you have with DataDog? -(Sir, this is a Wendy's) ... it's literally an observability tool? Why do I need years of experience? I trialed it for my last job along with others, but we decided to go with Grafana.-So how many years? -You don't need *years* of experience with an observability tool, you can set it up in a day and then it's rather intuitive. -So you don't have experience? -I've set it up and used it. -So should I put here one month of experience? -Suit yourself.",bitseybloom,2025-07-23 08:04:57,9,dataengineering,t3_1m6xx7o,False,
n4nbtop,"My favorite is ""operating system"" = a set of tools designed to something. Nothing to do with managing a computer's hardware resources. Now just a set of tools to manage an ad campaign or your aunt's etsy business.",CoolmanWilkins,2025-07-23 03:06:03,28,dataengineering,t3_1m6xx7o,False,
n4objoh,"The internet is just computers connected by wires. Smartphones are just phones with calculators. Google is just a database with a search box.Every transformative technology sounds mundane when you reduce it to its components. The magic isn't in the parts, it's in what happens when those parts scale, integrate, and become accessible to everyone.Sure, RAG is 'just' retrieval + text. But so was PageRank 'just' counting links.",sleeper_must_awaken,2025-07-23 07:52:31,11,dataengineering,t3_1m6xx7o,False,
n5ogb1b,">What’s changed?It's a bad job market. There have been waves and waves of layoffs across the industry. Even for experienced folks, there are lots more laid-off people looking for jobs in this market so it's just more competitive. Entry-level is fucked beyond belief.>Why are companies acting like jerks?They can afford to be more picky. Sometimes, it does seem quite ridiculous though and I do feel that many employers actually have unreasonable expectations and are so hostile/skeptical of others' work experience that they want perfection.",Illustrious-Pound266,2025-07-28 21:03:30,247,dataengineering,t3_1mbs1iw,False,
n5okh9y,"Yes 1000%. Data engineers are now expected to be a business analyst, data engineer and data analyst at the same time. I recently joined a new company and I'm absolutely blown away by the use of delivery teams, lack of anyone doing real work outside the data engineer and dashboard critiques from end users. Then they wonder why they can't find someone or when they do ends up telling them ""I haven't done that before"" and throws off the quarters goals, which is unacceptable. No idea how to deal with it but I really think they're just using the shit job market to expand our responsibilities to save money in the short term. In 5 years when the data no longer makes sense and they need to find another excuse for a redesign we will see the find out part of fuck around and find out.",SoggyGrayDuck,2025-07-28 21:24:06,96,dataengineering,t3_1mbs1iw,False,
n5pa727,"Agreed. The skill set required for data engineers has grown a lot faster than the pay. It’s basically the awful job market allowing employers to be more picky and hold out for unicorns.These days DE’s are also expected to have a deep knowledge of things that used to fall under DevOps, like CI/CD, and infrastructure as code. There’s also far more stakeholder management required as BAs and middle managers have gotten wiped out.",Acceptable-Wasabi429,2025-07-28 23:40:54,22,dataengineering,t3_1mbs1iw,False,
n5okjk6,Funny post history,Onaliquidrock,2025-07-28 21:24:24,92,dataengineering,t3_1mbs1iw,False,
n5ofwxg,Tell me more about your Reddit post / comment history … how many jobs do you typically have at a time?,winsletts,2025-07-28 21:01:33,71,dataengineering,t3_1mbs1iw,False,
n5oqt16,"The perks part is funny since you did have two full time jobs. That said, the job market is brutal. Healthcare is the main industry that is hiring but it is difficult to transition from one industry to another",shadow_moon45,2025-07-28 21:56:13,26,dataengineering,t3_1mbs1iw,False,
n5oubbo,"Bro, same. 10+ years. Was in the position where I was the one hiring a team last year. Now on a bullshit job search myself for 10 months.",Resquid,2025-07-28 22:14:43,11,dataengineering,t3_1mbs1iw,False,
n5ox80u,Willing to connect my fellow data engineers with two potential opportunities. DM me directly.,ahmer_amin,2025-07-28 22:30:15,7,dataengineering,t3_1mbs1iw,False,
n5pfzr5,It’s all data scientists or AI engineers now. Pipeline are taken for granted.,flyingbuta,2025-07-29 00:13:14,9,dataengineering,t3_1mbs1iw,False,
n5qc9jq,Most all of these interviews are performative so I try not to take them personally. I just got hired on mid-level and the technical interview question I had to answer was a LC easy question asking to return a min value from an array.I’ve done a bit of work in AWS and they liked that I understood the industry and had done extensive work in regulatory research and converting those to technical solutions. But what I think what actually got me hired was that a Senior Engineer at the company who is respected by my new boss vouched for me pretty hard.It’s dumb that we have to do a ridiculous song and dance for employers in the interviews but that’s the metric we’ve all collectively agreed to compete with each other in. When the person making the decision likes you they will scrutinize less over the petty things and hire you for those transferable skills and mostly that they could see themselves actually want to work with you.,bg_bearcules,2025-07-29 03:25:14,7,dataengineering,t3_1mbs1iw,False,
n56y1ap,Was just in a meeting today and was promised “data is encrypted. “Good time to recall the story of the scorpion and the frog,chock-a-block,2025-07-26 01:27:36,75,dataengineering,t3_1m9gksl,False,
n56y8ne,Microsoft stocks are about to take one hell of a hit. The EU is going to want a lot of clarity on this and could easily spell the end of Azure in the EU.,fake-bird-123,2025-07-26 01:28:54,53,dataengineering,t3_1m9gksl,False,
n56w9cq,Submitted article mirror: https://archive.is/he5ui,throwaway16830261,2025-07-26 01:16:23,10,dataengineering,t3_1m9gksl,True,
n59c9rz,"I think it would be a good time for people to review the Patriot Act (several of the clauses are quite active), the FISA courts, SCHREMS II and GDPR. all of those are interrelated and the US ones caused the EU ones. This has been an issue for quite a while. This is just the first time Microsoft has publicly admitted it. BTW, this is also true for AWS and Google. People are always confusing data locality with data soverignty.",marketlurker,2025-07-26 13:05:04,8,dataengineering,t3_1m9gksl,False,
n58m0ui,"That's not news at all, the CLOUD act has been around for a lot of time and specifically states this.",SpookyScaryFrouze,2025-07-26 09:37:00,5,dataengineering,t3_1m9gksl,False,
n580p5w,Current US sentiment towards ingestion of data for training LLMs is not helping the optics here either.,MrB4rn,2025-07-26 06:10:49,3,dataengineering,t3_1m9gksl,False,
n59zcf9,"This applies to all American companies doing business outside US. The CLOUD act has been here from 2018. MS, Amazon and Google will have to create completely independent companies for Europe if they want to avoid CLOUD act.",Apart-Entertainer-25,2025-07-26 15:15:59,3,dataengineering,t3_1m9gksl,False,
n570r5f,So like China? I didn’t think that was possible in the U.S. :neutral_face:,LiKenun,2025-07-26 01:44:41,10,dataengineering,t3_1m9gksl,False,
n59s1ag,This must be why Microsoft and others also do Sovereign Clouds.,Additional-Ad8147,2025-07-26 14:37:04,1,dataengineering,t3_1m9gksl,False,
n59br61,Seems like they killed their homomorphic encryption research as well.,Mithrandir2k16,2025-07-26 13:01:45,0,dataengineering,t3_1m9gksl,False,
n5adjlq,"The concept you discuss is unique identifier, not primary keys. A primary key is a unique identifier in the context of a relational database. For a long time, it was impossible to have a primary key in a data lake (which is the main storage strategy in DE right now) because data was stored in files, within a file system. Most files structures / tables probably (hopefully) had some kind of unique identifier but no primary keys.Regarding DRY, this is a not really a database or data modeling concept, it is a development concept. In data modeling, the concept you are looking for is data normalization. A ""dry"" schema is in third normal form or 3NF of higher. Which is 100% related with having a unique identifier. You can search for Boyce Codd rules.",hectorgarabit,2025-07-26 16:30:13,82,dataengineering,t3_1m9xbk5,False,
n5aegpa,"Surrogate keys in the DW as PKs built from one or more business columns. DW must be agnostic to the sources. Hashing is one method, guids another. Guids are safer for truly unique, and hashing is ok to detect any change in a row for SCD2. Layering is important. Staging, unique raw, business layer, snowflake/kimball layer. Single source of truth and data lineage end to end. Users will ask, where does the data of this table/column come from. So make a data dictionary as tables in a DB. I use mine for generating code.",SirGreybush,2025-07-26 16:35:05,25,dataengineering,t3_1m9xbk5,False,
n5ahdh4,"Most Data Warehouse don’t support the concept of primary key. I think the only reason is the size of the data. You don’t want to make sure your 300 billions records are unique every time you add a new row.But the concept of unique identifier should be introduced into almost all tables. That unique identifier is normally a surrogate key. Surrogate key are unique identifier derives from other fields. For example a md5 hash of the concatenation of 4 columns. This give you a unique identifier.What’s great about surrogate keys is that they are not random. You get consistency in any systems, if you migrate to another platform your surrogate keys are still valid and that’s very powerful. Also you can reproduce the same results over and over again, which is not possible if you use a UUID generated by another system for example.Then depending on the tool you use you can validate the uniqueness of the fields yourself. There’s some reason you might want to do this yourself and not the system like you would have in a normal db and is that because you can have multiple time the same records or a different version of what you consider the same records.Since the DW is for analytics you might want to analyze those different records which are not unique in your raw layer but could be in your marts.So it’s a powerful thing to let you control de uniqueness of the fields yourself.Obviously if you don’t manage it you’ll probably end up with a lot of duplicates. But since the DW store all your data it’s better to avoid having the constraint on inserts and give the users more flexibility. Because he might need all version for what he is trying to achieve.TLDR; yep a surrogate key should be something you have in all tables (when possible)",Commercial_Dig2401,2025-07-26 16:50:20,22,dataengineering,t3_1m9xbk5,False,
n5aezl7,"I would say there's no real reason to not have a ""primary key"" though i think you are having trouble differentiating between a primary key and a business key.Business keys are very often a primary key but thats from a basic perspectiveYou can also have composite keys (which are a combination of multiple columns that can make a record unique)Then you add on row scd ids which makes a record unique in the context of adding slowly changing dimension (so ""at worst"" youll have multiple columns for your composite key then add a row updated at date from scd to identify your unique record)Think about it this way, there really is no good reason for a record to be wholly duplicated (including metadata) so one way or another all of your rows should be unique",kittehkillah,2025-07-26 16:37:51,5,dataengineering,t3_1m9xbk5,False,
n5aeyql,"Because the constraints that come with enforcing primary keys are incompatible with the scale of operations of some enterprise data warehouses. Most of them are designed to operate at petabyte scale, fyi.It is far preferable performance-wise to resolve inconsistencies at read-time, with deduplication rules, than to do full table scans to ensure unicity with every insert, because read operations are (most of the time) only applied to a subset of the table.Nothing prevents you from applying cleaning strategies yourself on the table though. But you will definitely pay for it.Edit: unless you are only talking about primary keys as data modelling artifacts, with no constraint on storage/querying?",ManonMacru,2025-07-26 16:37:43,11,dataengineering,t3_1m9xbk5,False,
n5bxapb,sometimes it doesn't really make sense -- i.e. a fact table of time series measurements with billions and billions of rows,themikep82,2025-07-26 21:27:38,3,dataengineering,t3_1m9xbk5,False,
n5dxill,"There are days where I wish I didn’t have keys on my fact tables. These are the days where we are serving aggregated data, at an appropriate grain and it is responsive and all is good in the world. Unfortunately, my reality is one in which they want to go as low grain as they can and look up objects by their ids.The reason you would try to avoid them is cardinality. If you can avoid them you can hopefully pack your data denser, and that can have a very positive effect. Same deal as separating date and time to two columns.",-crucible-,2025-07-27 05:27:20,3,dataengineering,t3_1m9xbk5,False,
n5af1mk,"FWIW, with Snowflake and other OLAP systems, you can have rows duplicated in a table, that will mess up joins. Even if you set the DDL for a unique PK. So always have control columns like datetime of row insertion, so you can find them.",SirGreybush,2025-07-26 16:38:09,2,dataengineering,t3_1m9xbk5,False,
n5axj32,Redshift doesn’t support primary or foreign keys they’re purely documentation if you set them. If a database support them though it seems like a no brainer.,MonochromeDinosaur,2025-07-26 18:12:49,2,dataengineering,t3_1m9xbk5,False,
n5gyaca,"I’d think the answer is no. If you don’t have a unique key and determine grain, you have no data model. Without primary keys, there are no relationships.",onewaytoschraeds,2025-07-27 17:57:48,2,dataengineering,t3_1m9xbk5,False,
n5tcbuh,Nice idea !! but please remove \_\_pycache\_\_ from the repo,Awkward-Cupcake6219,2025-07-29 16:05:51,43,dataengineering,t3_1mc9qcp,False,
n5u2qsq,You missed the chance to call your project `kafkaesque` :face_with_tongue:,sjcuthbertson,2025-07-29 18:06:23,33,dataengineering,t3_1mc9qcp,False,
n5u5e9v,Insufficient bureaucracy and alienation. Could be improved by implementing a dreamlike sequence where the code is inexplicably flogged in an attic.,Impressive_Bed_287,2025-07-29 18:18:44,12,dataengineering,t3_1mc9qcp,False,
n5u36x6,Show this over in r/apachekafka,kabooozie,2025-07-29 18:08:27,6,dataengineering,t3_1mc9qcp,False,
n5sy3oj,That theme is nice,duranium_dog,2025-07-29 14:59:15,5,dataengineering,t3_1mc9qcp,False,
n5uiqq2,"Awesome, the best way to learn!",calvincat123,2025-07-29 19:20:53,2,dataengineering,t3_1mc9qcp,False,
n5uzhqw,"That's so cool! I haven't done Kafka from scratch, but I did spend time automating some web tasks with Python. For proxies and scraping, Webodofy worked well for me. If you dive into automating Kafka tasks, those skills might come in handy too!",Anyofourclients,2025-07-29 20:40:08,2,dataengineering,t3_1mc9qcp,False,
n5t6tvy,Where did you find the paper,k_schouhan,2025-07-29 15:40:27,1,dataengineering,t3_1mc9qcp,False,
n5tp3k1,That's cool,LelouchYagami_,2025-07-29 17:04:58,1,dataengineering,t3_1mc9qcp,False,
n5u33vr,I love this!,kabooozie,2025-07-29 18:08:04,1,dataengineering,t3_1mc9qcp,False,
n4siom7,There’s already so many layers of abstraction that already exists in modern software. You were already sitting at the top of it.,ottovonbizmarkie,2025-07-23 21:49:02,161,dataengineering,t3_1m7m4pj,False,
n4situj,"Kids these days and their assembler code. Back in my day, we wrote in binary and understood how things worked.",trentsiggy,2025-07-23 21:49:46,244,dataengineering,t3_1m7m4pj,False,
n4sihhn,"Same as everything else: the brain power and knowledge is just diverted elsewhere. Managing databricks efficiently is its own beast, and if you don't have some deep technical knowledge, you're probably shooting yourself or making a giant mess.",Evilcanary,2025-07-23 21:48:00,145,dataengineering,t3_1m7m4pj,False,
n4sk85d,"When Java came on the scene, C/C++ programmers complained that it made programmers dumber.Probably assembly language programmers had the same complaint about C/C++In the end, it is not about feeling smart or dumb. It is about maximizing the return on investment - of time, of effort, money or whatever is the currency being used.",ogaat,2025-07-23 21:56:57,73,dataengineering,t3_1m7m4pj,False,
n4t0uha,i don't think Hdfs or handtuning yarn is making DEs any smarter just so we're clear.,Qkumbazoo,2025-07-23 23:25:31,33,dataengineering,t3_1m7m4pj,False,
n4skamy,"Slamming the 2xl warehouse for 3 hours today says otherwise. Man I wish our data wasn't so big, disorganized, and that whoever sold a 90 day attribution window would stub their toe every Monday morning.",KeeganDoomFire,2025-07-23 21:57:18,18,dataengineering,t3_1m7m4pj,False,
n4smt9o,"""Kids can't do mathematics nowadays because of the calculator""",oxygenfoxx,2025-07-23 22:10:20,50,dataengineering,t3_1m7m4pj,False,
n4sng6q,"Isn't it taking away the lower value work, the dogmatic repetitive work, and allowing you to move up the value chain? It's doing the work you do over and over and giving you more time to perform higher level work.",ValidGarry,2025-07-23 22:13:41,13,dataengineering,t3_1m7m4pj,False,
n4tkput,I’ll disagree with most here. I do think something like Databricks does significantly reduce complexity. Ruins a lot of the fun.,jaredfromspacecamp,2025-07-24 01:19:08,8,dataengineering,t3_1m7m4pj,False,
n4t58gd,"I felt the same way about all those lazy COBOL programmers; I had wrangled the beast in assembler, and these twerps were writing shitty reports and getting praised.",rire0001,2025-07-23 23:49:44,8,dataengineering,t3_1m7m4pj,False,
n5fe0k0,"a company is not your family. If they wanted to retain you, they’d pay you more to secure you from competition. You are nothing but a cog in machine, and their life will go on without you. do what’s best for you always, just as they will do what’s best for them (company) if needed",ayeoayeo,2025-07-27 13:09:07,606,dataengineering,t3_1maloa5,False,
n5fftbd,"I highly recommend not working for free, the people I know who have done it say they’re available to help on a contract basis for x period, if the company is interested they give a rate, and it’s usually a multiple of their salary. If you really value a connection, give that connection a means to contact you, but don’t give a company more resources that didn’t value your time enough to do the same for you. Give it your best effort to build transition materials in your remaining time, but once you come to your end date, part ways.If you worked for a non profit, or something where people’s lives are on the line, maybe make an exception but for anyone else, nah. They got by without you prior to you starting and they will get by without you after you leave, it’s a little egotistical to think otherwise.ETA: Just want to add, if you do make the transition seamless, it may be harming your coworkers more than it would if you just let it fail. The problem you describe is a systemic problem of not prioritizing debt/technical need, and if you give the company an out to have it ""all work out in the end"" they won't address this systemic problem. They need to feel the consequences of their actions, because higher ups only notice the problem when it causes money to be lost, and that's how you actually see change in management/practice.",Pandapoopums,2025-07-27 13:19:53,150,dataengineering,t3_1maloa5,False,
n5fgha0,I managed critical infrastructure for my last company. All data flowed through the platform I built from nothing.  I was laid off to save the company about 30k on my role.I learned through previous coworkers that the replacement is floundering and had been a disaster. My phone never rang.,Bingo-heeler,2025-07-27 13:23:53,124,dataengineering,t3_1maloa5,False,
n5fhrkq,"This is so dumb, just give your notice and move on. The company will find someone to replace you in no time. No one is irreplaceable",Maiden_666,2025-07-27 13:31:30,70,dataengineering,t3_1maloa5,False,
n5fen6c,If your work was that valuable they'd either pay you more or have you on a longer notice period (in exchange for more pay). Ideally you don't burn bridges on the way out and maybe just focus on writing some good documents on your last day or two for important bits. Maybe leave them a contact But personally I'd focus on your new job more than trying to piecemeal help out an old company first. TL:DR they either done goofed letting you get to this point or they determined they'll be fine,tdatas,2025-07-27 13:12:53,45,dataengineering,t3_1maloa5,False,
n5fepxj,This is not your problem. Proceed with your plans. If the company decided to lay you off they would not care about your plans at all.,pragmatica,2025-07-27 13:13:20,57,dataengineering,t3_1maloa5,False,
n5fgv55,"Not your problem, they made their business decisions, now they need to make theirs. If they need your support going forward, contract back to them at exorbitant rates.",puzzleboi24680,2025-07-27 13:26:11,17,dataengineering,t3_1maloa5,False,
n5fk217,"I've seen someone laid off and the company realized after that they needed the person.They hired him to work.TLDR; if they need you, they will hire you and you can choose the rate.",cerealmonogamiss,2025-07-27 13:44:54,13,dataengineering,t3_1maloa5,False,
n5fl3t4,"A former, boss said sometimes it’s best for everyone to just move on and to not continue assisting. You’ll be doing a disservice to yourself not committing fully to your next role and the old company won’t learn to be sufficient on their own.Sometimes it’s just business and neither they or you owe the other anything beyond what you committed to",minormisgnomer,2025-07-27 13:50:46,13,dataengineering,t3_1maloa5,False,
n5fwofh,You need your head examined. You quit. That's that.,dataindrift,2025-07-27 14:53:07,13,dataengineering,t3_1maloa5,False,
n5j7q7u,"That's the neat thing, they all become data swamps",programaticallycat5e,2025-07-28 01:22:06,283,dataengineering,t3_1mb3280,False,
n5ja2a0,The sick joke is that it’s whatever will land you your next job. The reality is that for 99% of cases if you’ve only got a few TBs to manage and 10-100 users you could get by with postgres with some decent data modeling.,farmf00d,2025-07-28 01:36:54,80,dataengineering,t3_1mb3280,False,
n5j8syf,"You don’t. That decision is made at a golf course that you’re not invited to. The quicker you learn this, the better for you.",domestic_protobuf,2025-07-28 01:28:56,171,dataengineering,t3_1mb3280,False,
n5ja44m,"Use the right data model for the job. If you’re torn, use a database because it’ll force you to have structure and if you denormalize your data—performance. Call me a luddite or something.",shockjaw,2025-07-28 01:37:13,28,dataengineering,t3_1mb3280,False,
n5jydq6,"Database for transactional stuff, warehouse/lake/lakehouse based on whatever long term contract your executives signed",MateTheNate,2025-07-28 04:21:41,25,dataengineering,t3_1mb3280,False,
n5kacqt,I just call them all database so I dont have to worry about that,NoleMercy05,2025-07-28 06:02:45,24,dataengineering,t3_1mb3280,False,
n5kg1oy,"Database: your mom cleaning your bedroom as a kid. she knows what this is an where to put it. You don't know where it is now or how to get it.Datalake: you try cleaning your own bedroom, by shoving everything into a cupboard. DO NOT open that door or try to look inside. Ever.Data Warehouse: you finally think you can tidy it like your mom. Organised, scheduled, you have a place for everything.Data lakehouse: what you actually built instead of a warehouse. Some of it makes sense, but then you got bored before finishing the job and just shoved all the rest into a cupboard. You proudly tell mom you tidied your room just like her, and show her the warehouse only bit of it.",umognog,2025-07-28 06:54:55,42,dataengineering,t3_1mb3280,False,
n5jlu6i,Personally I like the data cesspool.,Just-A-Thoughts,2025-07-28 02:51:44,14,dataengineering,t3_1mb3280,False,
n5m27am,"This is really funny and really sad at the same time. You are getting confused by marketing terms and, unfortunately, that is by design. I think you can spot me what a database is. That's pretty straight forward. A data warehouse is just a very, very large database. There are two different database areas, operational and analytic. They are characterised by the SLAs you have on the data. Smaller databases are normally used for operational because you need fast response times. In analytic, the response times aren't normally as critical but they handle quite a bit more data; much of it historic. In a perfect world, if you could do both with the same system, you would. The problem is the cost to do them all in one. Of course, these are gross oversimplifications but it gets the idea across. In addition to the database component, the surrounding data ecosystems are different but they have many commonalities.Data Lake and Lakehouse are both marketing BS. Nothing more. The same is true of ""medalion architecture."" It is an attemp to make the standard three tier (staging, core, semantic) into to something different by giving it a new coat of paint. Someone noticed that you can store quite a bit of extra ""stuff"" in the staging layer beyond what the database needs. Of course, the marketing folks thought that needed a new name. I think we are at the point now where we just keep adding buzzwords to the names. It's like a technical pin the tail on the donkey. The latest is ""now with more AI!."" A data ecosystem is a complicated enough of an endeavor without all the confusion that is being pushed on it purposefully. I haven't even started in on Inmon, Kimball, Stars, Snowflakes, the various normal forms, ETL/ELT, etc. Good luck on your journey.",marketlurker,2025-07-28 14:17:25,7,dataengineering,t3_1mb3280,False,
n5k77wj,Whoever answers these questions without an “it depends” shouldn’t be near any of these systems with an access policy beyond reader.,Old-Scholar-1812,2025-07-28 05:34:50,11,dataengineering,t3_1mb3280,False,
n53rrkv,"Yes it's mostly all true. Data engineers often source data produced by other teams, so they have to absorb whatever messy data comes their way. It's worse at non-technically forward companies that rely on Excel as a data store.Yes many data engineering teams have lots of non-technical people. On this sub on a nearly daily basis there is someone asking how he/she can break into DE from an analyst role. This person has no CS knowledge.The one thing I'd disagree with is pay. Generally speaking, SWE's get paid more than DE's at most companies. Perhaps at that person's company DE's get paid more, but I'd say that's not normal.For these and other reasons I'm trying to move to SWE - Data Platform or MLE but ML is harder to get.",codemega,2025-07-25 15:41:49,76,dataengineering,t3_1m92akn,False,
n54hp6e,"Yeah, if you don't enjoy working with non or less technical people, DE is gonna be hard.That said, I'd say that same trait will not serve you well as a SWE, it's just easier to hide in that subfield.",a_library_socialist,2025-07-25 17:42:09,21,dataengineering,t3_1m92akn,False,
n55ra6r,"What he says is generally true. The role of a DE can vary widely. It isn't super glorious and pretty invisible until something goes wrong. I could say the exact same thing about integration and the two are pretty similar in a lot of ways.I work in data migrations within tech consulting. The greatest benefit to it is that I often get chances to start over and build something from the ground up. As far as I know, there's less opportunity for that in the SE space and that's why I personally haven't tried making the switch. But consulting also has it's downsides. I struggle with the same things you mentioned: A lot of non-tech people who can't spell git much less use it. People handing you massive Excel sheets. Shoestring budgets with tooling. Having to explain to overconfident customers that their data is not clean. Etc.It isn't for everyone, but there's a lot of job security in it IMO. And working with less technical people makes you shine all the more come review time (usually).",SmegHead86,2025-07-25 21:24:02,19,dataengineering,t3_1m92akn,False,
n54bmwi,"Similar boat, only for me, it would be back to data engineering. Taking a money grab is great for a while, but at some point, you have to do what you enjoy. Or at least, what you hate less.",Lower_Sun_7354,2025-07-25 17:14:29,9,dataengineering,t3_1m92akn,False,
n5702os,"> I regularly have to argue with/convince people that basic things like source control are necessary.This is my biggest frustration with many data scientists and analysts (I am one, to be clear). They often have no experience with source control, and any suggestion to adopt it is usually met with something like, “We don’t have time for that.” Ironically, we end up wasting far more time managing multiple versions of code across different files and manually merging teammates’ changes.",YIRS,2025-07-26 01:40:29,5,dataengineering,t3_1m92akn,False,
n54hm4s,This team structure isn't how it should be. I've been writing about and speaking at conferences about this for years.,eljefe6a,2025-07-25 17:41:46,6,dataengineering,t3_1m92akn,False,
n57cwyh,"the problem with all data jobs ive had, analyst or eng, is you somehow get no it/dev shielding from the biz ppl the way you might (not always) in a dev role. youre always directly contacted by stakeholders with no one mediating to say like, whoa this makes no sense. there are no milestones and requirements constantly change and theres no one to push back on it. idk if this matches anyone elses experience but its been mine, from basic sql focused app analyst roles up through legit data eng roles where we were actually developing something you could call software.i was the data eng for a small team of analysts at a law firm where by the end of my time there, our manager was having us make trial graphics for use in court. none of us had design experience. you know why? the trial graphics team gave reasonable timeline estimates for work and our boss said we could just do anything in a week. because its all DATA right?????",zazzersmel,2025-07-26 03:04:06,5,dataengineering,t3_1m92akn,False,
n55pzma,I'm a DE studying to be full stack web dev. I'm interested in switching. Grass is always greener though.,drunk_goat,2025-07-25 21:17:25,3,dataengineering,t3_1m92akn,False,
n589m8e,"There's some things that ring true, some that ring partially true and some that don't, to me. (~3YoE, more in data space as a non-engineer, so view my comments through that lens however you will).Testing is a problem, yes. Especially when you work with things that are closer to ML, that have testable behaviours that only manifest when working on a huge dataset with specific patterns. This is not an intractable problem, though. You still can factor your code correctly and cover with unit tests as much as you can, and write queries for ongoing data quality monitoring (a good data analyst will be a very important ally in this activity). For more complex stuff, talk to your platform/infra/governance people about having a ""sandbox"" environment - prod data but all the sensitive parts masked. Nobody understands the complexity? That sounds like your org needs more ""less technical"" people like analysts, not less. And yes, you as a DE need to be in touch with them, because they will be able to tell you what to expect of your data.People questioning numbers when they don't match vibes? Honestly that sounds like something a data product manager/owner has to tackle. As an engineer, all you can do is deliver data quality assurance, and point to that. After this it's with the PM/PO to sell the value of the team's work.Version control issues? Yes, that happens when an org has a lot of DAs/DSs with more science/business background. I think the will to do git appears after one or two incidents when someone does a breaking change that nobody had a chance to review, or accidentally deletes some script on some server somewhere. If your data team is subsidary to technical leaders in the org chart, I think they're usually sympathetic to the idea, and you can go through them to push git adoption. You can also smooth things along by writing a ""git for dummies"" document for your DS/DA. No need to deep dive into advanced features, just teaching them commit/push/pull and merge requests should be enough. Do make sure your main is protected in all your repos, though.Stuff outside of your control, but you have to fix it? That exists, yes, but I don't think that's unique to DE. Don't backend devs in microservice-oriented companies deal with the same problem?",szrotowyprogramista,2025-07-26 07:33:50,3,dataengineering,t3_1m92akn,False,
n58oc3b,"It’s true, but it won’t always be true. It’s important to remember that low-code tools like Talend were the most popular DE tool until a few years ago.We REALLY need more engineers coming into the field. And by engineers I mean people willing to learn Git, CI/CD, Python, unit testing, DBT, etc.Data Engineering has the potential to be the most interesting field, but often a team is propped up by one guy on the team who has that expertise, and then the rest of the team don’t really bother.",General-Parsnip3138,2025-07-26 09:59:31,3,dataengineering,t3_1m92akn,False,
n4wlgu6,"Welcome to the actual challenges of data engineering - ""hey, this report has always been wrong, but since we've been using it for years, **we need you to make sure you can recreate the incorrect value exactly**.""",a_library_socialist,2025-07-24 14:23:04,131,dataengineering,t3_1m85n59,False,
n4x3ot2,"I dont understand. There are duplicate rows as a result of business rules? That makes me think this is a modeling issue, meaning you may have to really redesign your warehouse from scratch",Childish_Redditor,2025-07-24 15:47:33,9,dataengineering,t3_1m85n59,False,
n52euoc,"I tried in vain to sound an alarm before executive leadership listened to a consultant suggesting to streamline a sign up process to ask fewer questions. What resulted was a massive increase in duplicates due to too little information for the system to reliable tell if someone already exists. And I just had to remove 5000 people with so little contact information they are literally unreachable but costing us money to keep them. As a non-profit this is horrendous, we depend on building relationships with the community. We went back to how things were but duplicates remain a big issue.",dglgr2013,2025-07-25 11:17:09,3,dataengineering,t3_1m85n59,False,
n4wzsvp,"This just tells me you don’t know how to utilize surrogate keys and business keys.Go learn the difference.If the system you’re using contains the business keys, you’re good. If the system threw them away, you need to throw away the system.",mycrappycomments,2025-07-24 15:29:52,-12,dataengineering,t3_1m85n59,False,
n4wn2ym,"This comment gave me ptsdAnd then executives say: ""wE aRe A dAtA dRiVeN cOmPaNy""... Not when you're knowingly using incorrect data you're not.",djollied4444,2025-07-24 14:30:49,37,dataengineering,t1_n4wlgu6,False,
n4xjsiz,"Oh yeah, that one really pisses me off. We got a whole report and process built around wrong bullshit now because of this attitude. It makes me want to quit. lol…?",BarfingOnMyFace,2025-07-24 17:00:59,8,dataengineering,t1_n4wlgu6,False,
n4zky9e,"""We have this broken process of handing Excel file links in SharePoint to each other and we copy and paste from others workbooks into our own. Nothing is consistent because people change whatever they want whenever so there's just stale pasted data all over. Can you just like put that all in a database?""""Sure, I'll make a crud app so that people can only edit in one place and we'll put calculations in the database so there aren't any black box formulas. ""Well we still want to do everything in Excel, can't you just database it as it is?""",skatastic57,2025-07-24 22:51:06,4,dataengineering,t1_n4wlgu6,False,
n4x90av,"That was me in my last job lmao. My predecessor made up derived metrics that did not make sense, at all, and we had to keep rolling with it against our better judgement.",LatterProfessional5,2025-07-24 16:11:53,5,dataengineering,t1_n4wlgu6,False,
n4xfkho,"> meaning you may have to really redesign your warehouse from scratchIn some companies ""start over from scratch"" is a hard sell.So I just tell managers we're doing ""refactoring & cleanup.""",VadumSemantics,2025-07-24 16:42:07,9,dataengineering,t1_n4x3ot2,False,
n4z1zvz,"You can have some sort of KPI wich gets assigned rows from fact table. One fact can be assigned to multiple KPIs. Voila, we have duplicates.",R0kies,2025-07-24 21:12:46,2,dataengineering,t1_n4x3ot2,False,
n5jzr3e,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 04:32:28,1,dataengineering,t3_1mb6wqc,False,moderator
n5k257m,"1- Nope. But a STEM major certainly does help. I only know a single DE without a BA in a stem field, most have post-graduate education.2- Don't think of DE as like a discipline or a subfield within math, it's more like a trade? There are great books that outline the math and engineering behind it, but the only real way of becoming a data engineer is dipping your toes in keeping data stacks running.3- Most successful way I know: solid stem education. Acquire work experience consuming data as an analyst, data scientist, etc. Slowly transition your work to backend/production systems e.g. making changes to ETL code, finding out infrastructure requirements, doing incident response, thinking about data modelling. Do this for long enough, and you're now able to reason about data along its journey to whatever end-consumer there is.",verysmolpupperino,2025-07-28 04:51:40,20,dataengineering,t3_1mb6wqc,False,
n5lquni,"If you're coming from a stats or analyst background, the biggest shift is thinking in terms of infrastructure: how to move data efficiently, how to model it well, how to build pipelines that scale and don't break. This includes learning how to build ETL/ELT workflows, manage data quality, and work with cloud-native tools and orchestration frameworks like Airflow or dbt.Books like *Fundamentals of Data Engineering* or *Designing Data-Intensive Applications* give good theoretical grounding. But they don’t replace hands-on work. So the best learning path combines both: read to understand the concepts, then build mini-projects to apply them. For example, try building a pipeline that pulls data from a public API, stores it in a cloud bucket or local database, and runs some transformation on a schedule. We have a lot of interactive courses, so feel free to check out our site and browse! And finally, don’t get overwhelmed by the tool soup. AWS, GCP, Azure, Snowflake, Spark, Kafka, dbt... You don’t need to learn everything at once. Start with one cloud provider, one orchestration tool, one data warehouse. The concepts transfer well once you understand them.",DataCamp,2025-07-28 13:17:23,9,dataengineering,t3_1mb6wqc,False,
n5k218i,"With your stats background, why are you not applying for DS roles?",69odysseus,2025-07-28 04:50:46,14,dataengineering,t3_1mb6wqc,False,
n5koosr,"2 - I think the book Fundamentals of Data Engineering gives a good high level overview of the different components of DE. You'll have to dig deeper after that, for example building your own projects.3 - M.Sc. in planetary sciences, kind of 3 months bootcamp co-financed by consulting companies and French job agency, a couple of years on banking Hadoop with the consulting company, a couple of years in startups/scaleups on cloud, public authority on premise, wanted to move to another country for martial arts and found a job to do just that. Overall, after about 2 tough years to get into DE and learn on the spot, I am really satisfied of career change, the job market has always been good for me.",sib_n,2025-07-28 08:18:04,5,dataengineering,t3_1mb6wqc,False,
n5k8w83,"STEM major does help but you can do without. Stats major does scream data science more than data engineering, but to each their own.There's a bunch of creators that talk about best practices and two bibles that are usually very good to read: Designing Data Intensive Applications and Fundamentals of Data Engineering.If you're the kind of person that likes to study based on roadmaps, I run this website that is just about that: https://dataskew.io",dorianganessa,2025-07-28 05:49:48,6,dataengineering,t3_1mb6wqc,False,
n5lfq27,"I graduated with degrees in economics and accounting. I spent the first 4 years of my career in corporate finance. Mostly, I was transforming and consolidating data using on prem tools to automate our processes. After that, I took a BI manager role with our data science team (data science was initially part of BI at my company). Spent a year there until a big reorganization occurred. We moved to the cloud, data science became its own thing, a data engineering team got stood up. I initially moved with data science, but it was clear my skills did not mesh well except for the data engineering, but they wanted to move all DE work over to the DE team eventually. I took that opportunity after just over a year in that position. On day 1 with the DE team, we were building stop gap solutions. I spent that time getting really good with pyspark. I already had a large background with pandas, so pyspark was very easy to figure out. From there, we had consultants build our long term data platform while the full timers worked on ad hoc requests to keep the business moving and start making a name for our team. During this time, I learned I was really good at programming business logic and transformations. I was not nearly as good at ingestion or tools outside of databricks. Eventually our SAAS integration started, and I was working directly with consultants. I was well out of my depth, but I learned the process pretty quickly, patched some early holes in my technical knowledge, and got rolling. I learned that I was really good at functional programming, but pretty bad at DevOps and way out of my league in OOP. Now, I'm working on a project to rebuild our data platform to one easier to maintain, more flexible, and moves data faster. I'm focusing more on architecture, but making sure that these new consultants are training my team and me every step of the way. My manager assigned me as lead for this project. My manager wants me to train to become an engineering architect. Whereas I'm a decent engineer with a lot of potential to grow there, I am kinda a natural on all things architectural. So that is how I'm leaning now.",BoringGuy0108,2025-07-28 12:09:43,3,dataengineering,t3_1mb6wqc,False,
n5kffgf,"I also come from a stats major and I am currently working on a master's in CS. I would suggest you to enroll to a CS master's, where you will have to study the basic CS courses (intro to programming, OOP, discrete math, DSA, OS, computer architecture and networks) before taking the master's courses. This will help you a lot",FlyingSpurious,2025-07-28 06:49:19,2,dataengineering,t3_1mb6wqc,False,
n5ou4og,"You can do much more with your statistics background than DE. DE is subset of software development, do you really need it?",baubleglue,2025-07-28 22:13:43,2,dataengineering,t3_1mb6wqc,False,
n5k0o4b,School not needed,ephemeral404,2025-07-28 04:39:50,3,dataengineering,t3_1mb6wqc,False,
n5t92b0,"It's an unfortunate problem. I've been a DE for about 3 years and could probably list a lot of tools among my experience, but the coding in the actual day to day work of my job is little more than df = spark.read.parquet --> df.write.saveAsTable. I've done a fair amount of platform admin stuff, setting up and managing Unity Catalog in Databricks, but my team is mainly responsible for simple raw data ingestion. A lot of the stuff we use, even if it isn't AI, just abstracts away the parts that are interesting or challenging. I'm pretty close to looking for a new job and I'm not optimistic about it. For now I'm trying to supplement my work with projects.",TheSocialistGoblin,2025-07-29 15:50:42,30,dataengineering,t3_1mce29s,False,
n5t97fs,"As someone on both sides of the table, I get the frustration. There's a huge gap between listing every tool under the sun and actually understanding core data engineering concepts. And yeah it’s very obvious when someone’s leaning too hard on AI-generated answers.Honestly, the best interviews I’ve seen (or given) focus on real-world tradeoffs: pipeline design, data modeling, debugging stuff you can’t fake with Chat GPT. Tooling comes and goes, but critical thinking and basic coding skill are non-negotiable.",eb0373284,2025-07-29 15:51:21,12,dataengineering,t3_1mce29s,False,
n5u0sql,"If you’re looking for a senior/lead, I’ve been having a bad time applying, just saying :disappointed_face:",EarthGoddessDude,2025-07-29 17:57:27,5,dataengineering,t3_1mce29s,False,
n5t7e7m,"I just reject them all until I find a genuine person. 10-15 minutes phone screens for resumes that don’t look keyword stuffed or chatGPT’d. Technicals for people who sound like they know what they’re talking about and don’t sound like a robot. Canned/vague answers instant reject. I wrote a long technical about data validation with ambiguous instructions to prompt conversation and clarifications, candidate is not expected to finish and is expected to communicate and think about the problem.I’ve had candidates who just type out the “perfect” solution in silence without asking a single question. Instant reject.Also recruiters are ass and send me horrible resumes. Also sometimes I can’t believe people aren’t embarrassed by the mess of a resume they send out (not the contents, the horrible formatting, unreadable fonts, badly formatted, 10 densely packed pages or jargon, etc.)",MonochromeDinosaur,2025-07-29 15:43:04,10,dataengineering,t3_1mce29s,False,
n5u1icu,How else does someone get past the recruitment filter? I have two years of engineering experience and I've built projects to showcase that I have the appropriate skills to become a good data engineer. My resume might not be great but I don't even get interview calls. I'm open to any criticism on my resume if you're willing to have a look. It feels like recruiters see my two years and put them in the garbage. How else am I supposed to get any experience without landing any interviews or roles. I don't believe your post is extremely helpful for those who genuinely have put in efforts and don't get any callbacks. It's hard for people to see or understand our perspective. I have the skills and projects to back up my argument. I'm not saying I'm the best data engineer with limited experience but I believe I can get the job done. I just need a chance to prove that which doesn't come by often if at all.,deathstroke3718,2025-07-29 18:00:39,6,dataengineering,t3_1mce29s,False,
n5ue9zw,Companies are pushing AI just as heavily. I feel it is disingenuous to ask candidates to stop coding using AI when that's what my company is asking our engineers to do (code as heavily with AI as possible).,Toastbuns,2025-07-29 18:59:50,3,dataengineering,t3_1mce29s,False,
n5tla7x,"I see this all the time with candidates. It shocks me how the majority of candidates don’t even have basic SQL or Python skills. It’s on their resumes and they say all the right things to our recruiters but can’t pass basic coding tests. I understand that people can be great at using tools, but not knowing the basics is a nonstarter.",Greendaysgood,2025-07-29 16:47:37,5,dataengineering,t3_1mce29s,False,
n5tbn9u,"It's simple, all of a sudden the hiring processed is totally divorced to daily work of a data engineerSpecs now create an impression from my DE work experience anyway, that a data engineer is involved in ALL implementation stages of taking data from the source to the final dashboard.Not saying that does not happen or is not something worthy of aspiration but I just did not see this in my experienceWhat I saw is the delegation of tasks based on random team dynamics and of course strengths, where one will focus on complicated sql transformations in one project in another configure data factory tasks in some pipeline, process this weird file format with really data and insert it to this delta table, write this api whose data source is some ancient Google backed up file system, automate these views based on some ill defined metadata table and so on",xahkz,2025-07-29 16:02:38,2,dataengineering,t3_1mce29s,False,
n5tnc28,"Make up your minds, on one side you're expected to use AI tools for productivity and on the other you shouldnt use them during interviews.",Mol2h,2025-07-29 16:56:56,2,dataengineering,t3_1mce29s,False,
n5tkzvs,Yup Can’t tell you how many people tell me they don’t need to learn to code anymore cause “chaptgpt” …As if Google didn’t exist the last few decades …You can’t teach a pig to fly though,chrisgarzon19,2025-07-29 16:46:18,2,dataengineering,t3_1mce29s,False,
n5dm32s,"During the design phase, yes.After on-boarding and 300000x iterations of a kitchen-sink-syndrome company, no.",programaticallycat5e,2025-07-27 03:55:51,61,dataengineering,t3_1macii2,False,
n5dp9g7,"\> In a totally cloud-native worldIn a overwhelmingly contractor/sub-contractor/outsourcing world no one at the bottom of food chain gives an actual f\*ck about the architecture. Spice must flow, it's the only scope.",taker223,2025-07-27 04:20:03,68,dataengineering,t3_1macii2,False,
n5dl93e,"""It depends.""* may write a less facetious answer later",tolkibert,2025-07-27 03:49:40,42,dataengineering,t3_1macii2,False,
n5dn34n,"If it’s legit “big data” and/or the complexity/number of the data sources is high and requires a lot of coordination and custom work for ingestion sure architecture becomes extremely more important.If it’s not (9/10 companies are here) throw the data in an object store pop a cloud DWH on top and spend time on modelling, insights, and AI/ML. The hardest decision in this scenario nowadays is whether or not to pay for extraction(Fivetran/etc.) or just use open source.",MonochromeDinosaur,2025-07-27 04:03:23,17,dataengineering,t3_1macii2,False,
n5dm0jf,"This is an odd question. You seem to be simplifying data architecture down to the bare minimum of “what tool has the best price performance for X given Y”. That is just one out of many questions and considerations for a data architecture. And if that was the only question you had about your architecture, I’m not sure what is different now vs before.",evlpuppetmaster,2025-07-27 03:55:20,16,dataengineering,t3_1macii2,False,
n5do1lq,"It depends on your business but for me I don’t really hear about latency etc anymore. All of that is up for negotiation. It’s always about cost. But it’s complicated. You can drop tens of thousands on Azure or AWS and nobody blinks an eye because it’s billed automatically and mixed in with everything else; not many places have true FinOps capability.But if you want to purchase $5k on a tool from some other outfit it’ll never get through the paperwork. You’re fucked in that regard. So personally I only really care about simplicity and maintainability.Because once it’s live nobody gives a fuck about latency and cost when it’s completely dead. And when it fucking breaks, which it always does, someone has to be able to understand and fix it, and that’s almost never the designer who long ago pissed off and left absolutely zero surviving records of their design decisions.",codykonior,2025-07-27 04:10:40,24,dataengineering,t3_1macii2,False,
n5eb6kd,"The less you care, the more power you give to the platform vendors. Compute is what is being optimized nowadays. Bad architecture will lead to unnecessary compute. The vendors couldn't care less. Or rather, they love phrases like ""scalable compute, just increase the cluster, use an XL warehouse"". The less a customer is thinking of good architecture, the better the paycheck for them.",kiquetzal,2025-07-27 07:33:17,12,dataengineering,t3_1macii2,False,
n5em2hg,"Data architecture current purpose is to keep code clean and maintainable first. Cost hacks can come later. Some people obsess over technical debt too much though. Most of it gets rewritten or replaced anyway. If the code works and drives business value, stop nitpicking. Don’t waste time “fixing” things that aren’t broken for the sake of best data architecture practices. Focus on shipping real stuff, not polishing abstractions no one asked for.",bloatedboat,2025-07-27 09:21:08,7,dataengineering,t3_1macii2,False,
n5f88jl,"Architecture is my job, so I have opinions. Mostly about how easily managers fall for buzzwords and I have to make sure there is something that actually implements correctly.",JonPX,2025-07-27 12:32:04,7,dataengineering,t3_1macii2,False,
n5dtapr,"Seems like an obvious question. If you’re responsible for building it and managing the costs, absolutely. If not, why would you care?",SquarePleasant9538,2025-07-27 04:52:06,3,dataengineering,t3_1macii2,False,
n528gij,"Who are the customers for these data models? If they're primarily analysts and data scientists then it's a structure that will only slow them down. It might work if your team see this only as the ""silver"" layer and will be developing a ""gold"" layer on top (e.g. with denormalised reporting structures).",Specific_Mirror_4808,2025-07-25 10:27:02,26,dataengineering,t3_1m8vf1g,False,
n528u6t,"As with everything in DE, it depends on the use case.Strict data modelling standards don't really explain slow progress. Shifting requirements and inefficient development processes are normally the culprits.",New-Addendum-6209,2025-07-25 10:30:14,18,dataengineering,t3_1m8vf1g,False,
n52r6f5,"I agree with all your thoughts and those of the other posters. As with all dev work there's a fair amount of ""it depends"" to be had in any situation, but I can't see where this level of normalization would ever be useful inside a data warehouse.I think people pursuing this behavior have lost sight of the ""why."" The Star Schema model was originally created during an age with storage was the scarce resource so it was important never to store duplicate data. Nowadays, storage is so cheap it's practically free so it's compute that we must optimize for. Having to do dozens of `join`s to gain context on every record certainly doesn't support that. Usually, I practice some form of what you might call ""Star Schema Light"" in the silver layer where I create tables around business entities. So all the 'user' dimensions would be in one table (and it would probably have a companion SCD table), all the 'session' dimensions in another etc. Then these can be `join`d and de-normalized in gold to expose to BI tools as needed while analysts can still have some flexibility by using the silver tables. Having said all that, be careful. Myself and two colleagues were recently fired for suggesting this very thing and pointing out we shouldn't administer Snowflake like one would on-prem Oracle.",bengen343,2025-07-25 12:38:03,15,dataengineering,t3_1m8vf1g,False,
n52dox8,"This looks like a snowflake schema with additional normalization instead of star schema, I too agree that this look complicated",msdsc2,2025-07-25 11:08:28,6,dataengineering,t3_1m8vf1g,False,
n52rbf3,"> full star schema normalization, as it was a transactional databaseIn database design, normalization means third normal form (3NF). That's how transactional databases are supposed to be. A star schema is a denormalized schema (it breaks the rules of normalization, 3NF).Your use case doesn't look very ""star schema"" to me as many to many relationships should be rare. Another way to reword this is that the UserTag entity is a fact table. You could add a date / calendar dimension to this fact and this would allow you to see how many users one tag have, which users have which tags... It also depends on how ""fast"" these tags are attributed. Could they be considered an attribute to the fact? It is hard to decide without having a closer look at your use case and the data.Regarding the surrogate keys. You don't need them on all dimensions. You need them on SCD2 dimensions, and not all dimensions need to be SCD2. You also need SK when combining data from different sources into one single dimension, and they don't have a common key.Regarding the project... 20 people working on one single star schema, 2 years. That's insane. Do you work in insurance? It sounds like something massively overengineered which goes against the premises of dimensional modeling: easy to query.",hectorgarabit,2025-07-25 12:38:52,11,dataengineering,t3_1m8vf1g,False,
n565xu3,"What you have there doesnt quite seem like a dimensional star schema from Kimball pov as you describe it. You could have although for example if you can source the events of when tags of an user were applied or otherwise manipulated:- Fact table: Tagging Event / Activity - Possibly ""factless fact"" table or so that has a timestamp when the tagging (or tag removal, etc.) of an User happened and references the User and Tag dimensions- SCD2 User dim- SCD2 Tag dimWriting this reply a bit quickly on the go, but maybe it makes sense? Or not.. :grinning_face_with_smiling_eyes:",gbuu,2025-07-25 22:42:48,3,dataengineering,t3_1m8vf1g,False,
n55dtk3,What you described isn't a star schema.  It sounds like some Inmon crap maybe?  Star schemas have facts and dimensions and are all one to many unless you absolutely need a many to many and then you use a bridge table.  The main reasons to use that model now is that PowerBI and some other BI applications like it or if the concept of conformity across facts is useful to you.  If your facts aren't related to each other via rate calculations or similar then it's probably more work than it's worth.  Most companies are just going with obt by functional areas and a master data domains now.,Gators1992,2025-07-25 20:17:44,2,dataengineering,t3_1m8vf1g,False,
n56z2c1,"Not everyone dimension needs to be a slowly changing dimension. In my experience the actual need for that level of string change is rare.Like, at that point you're halfway to DataVault.Just saying grain of salt, start simple star, just a fact and simple dimensions.",SaintTimothy,2025-07-26 01:34:11,2,dataengineering,t3_1m8vf1g,False,
n531z7h,"Why?Lake storage is cheap. But if it's from on-prem or some random location to cloud, they might be trying to save money. Find out if they are trying to reduce their cost of data transfer. You get billed by the gb of data you move. But then you're just transferring your cost to compute. It's also pretty popular in dbt to just scd2 everything. Again, it becomes a pain when you try to translate it to a self-serve bi tool, that could really benefit from a star schema.Hard to say whats going on without a bunch of whys.",Lower_Sun_7354,2025-07-25 13:37:57,1,dataengineering,t3_1m8vf1g,False,
n53b27x,I feel validated reading this kind of post because I am fighting the same battles.I’m guessing there’s at least 1 boomer DBA on the team who bangs on about Codd and has lost perspective that delivering analytics products to the business is the only reason we get paid. Like why are you even using OLTP for the semantic layer? It’s the most administratively expensive way of doing this.,SquarePleasant9538,2025-07-25 14:23:55,1,dataengineering,t3_1m8vf1g,False,
n4suy6b,"I’ve seen 60%+ in savings. But no tool, just me manually going through pipelines and refactoring the sht out of them.",rudboi12,2025-07-23 22:53:53,212,dataengineering,t3_1m7mw87,False,
n4stbee,"We did, but we were incredibly careless in our initial deployment and had no freedom of action as main IT dept controlled everything.You need to know where you’re potentially overspending and what you’re going to do about it before you can start chirping out about percentage savings.",wildjackalope,2025-07-23 22:45:05,8,dataengineering,t3_1m7mw87,False,
n4snst9,Snowflake and cost. Lol. The ship sank already.,coldoven,2025-07-23 22:15:31,57,dataengineering,t3_1m7mw87,False,
n4soo42,Cloud optimization tools in general are worth it… but proper tagging of resources is a great starting point,B1WR2,2025-07-23 22:20:04,7,dataengineering,t3_1m7mw87,False,
n4sq8gs,Standard finops practices like reviewing their cost tooling and giving groups separated warehouses will help you.,Malforus,2025-07-23 22:28:23,15,dataengineering,t3_1m7mw87,False,
n4u6s6c,lol,TheThoccnessMonster,2025-07-24 03:34:35,3,dataengineering,t3_1m7mw87,False,
n4su6no,"We had success with implementing the following: warehouse differentiation for different jobs, clustering tables on query patterns, optimizing queries, adjusting thread counts in our dbt jobs, right sizing warehouses (reduced size) ensuring use incremental materializations strategies as much as possible. Also created a job to copy our raw layer tables to as there was scattering of records across micro partitions. All that we were able to reduce costs about 25%. We then implemented Keebo and saw another 20% savings, which I’m pretty sure most of it was them dynamically adjusting the suspend time on the warehouses. Most of that big saving though was we were using a warehouse that was way to big, and by sizing it down our refresh times are slight worse but it’s worth the cost improvement.",Public_Novel6623,2025-07-23 22:49:46,5,dataengineering,t3_1m7mw87,False,
n4t58ag,"One client had almost 70% reduction in cost, including by working with Snowflake consultants.It involved a lot of legwork - Identifying duplicates, turning off unnecessary feeds, right sizing the warehouses, ensuring that the users were sent to the right warehouse per their needs etc.The challenge comes from management. The more the savings that are found, the more savings they expect, rather than a constantly lowering ROI curve as would happen.Your boss is going to regret their decision after a while. Or, they will get their fat bonus from the ""cost savings"" and the next person to own it will pay the price.",ogaat,2025-07-23 23:49:43,5,dataengineering,t3_1m7mw87,False,
n4trou2,"Let me know if any of these works out for your team. We looked at Slingshot (no automation at the time), keebo (couldn’t work with their cost model, 33% of saving…which is hard to define), sundeck (now extinct). We are looking at Adaptive warehouses by snowflake and built internal finops dashboards to help identify costs optimization opportunities.",fotfuture,2025-07-24 01:59:45,2,dataengineering,t3_1m7mw87,False,
n4uokbo,If you load via iceberg you can save 70-80 percent of the ingestion cost according to this case presented at iceberg summit https://youtu.be/gb5fwIO4pX0?si=Ci6DEkfXXP7AxFpf,Thinker_Assignment,2025-07-24 05:51:45,2,dataengineering,t3_1m7mw87,False,
n50rwic,MERGE isn't a safe operation in many versions of SQL. It's basically a wrapper for a bunch of stuff that ISN'T idempotent and atomic. Which means if you want atomic do a transaction with insert.>Using a recursive CTE This makes you feel really smart but is very rarely needed. A lot of times recursive CTEs hide data modeling issues underneathThis is just flat out wrong. Back at the dawn of time the fight was between relational vs hierarchial databases (what we would now call graph databases).Relational won as the standard. But we still often need to query hierarchies and graphs that do not have fixed level structures. Which is where the recursive comes in and is SQL's way of performing graph and hierarchy traversal in a relational data model.,Cazzah,2025-07-25 03:03:42,31,dataengineering,t3_1m8g4e6,False,
n4z3uqq,I need someone to explain to me why right join is more coherent b/c it's the same shit to me lol.I just hate shorthand joins (Oracle). Just kills the readability nature of SQL and not very ANSI of them.,programaticallycat5e,2025-07-24 21:21:54,62,dataengineering,t3_1m8g4e6,False,
n4zzh8l,Union deduplication is necessary for a lot of real world data sets.,kaumaron,2025-07-25 00:11:51,20,dataengineering,t3_1m8g4e6,False,
n4z5las,"SQL is a very peculiar language in that it is very old, and still the de-facto standard for database interactions. You can't arrive at that without a few problematic features.",ManonMacru,2025-07-24 21:30:31,29,dataengineering,t3_1m8g4e6,False,
n4zsepo,"Side observation: ""shouldn't be used much"" is a very very different thing to ""is hot garbage"". I think pretty much all machine languages have features or syntax that shouldn't be used much. They're there, generally, because they're really helpful in some edge cases. This is true of most, if not all, the things listed in this post and the replies.If they are overused/misused, that's not a reflection on the language, only the developer.",sjcuthbertson,2025-07-24 23:32:00,16,dataengineering,t3_1m8g4e6,False,
n4zvgjj,"Recursive CTEs are extremely handy in the few cases when you need them. I don't think it's fair to compare that to RIGHT JOIN, which is literally never required.",riv3rtrip,2025-07-24 23:48:52,23,dataengineering,t3_1m8g4e6,False,
n4z2d4v,"I think there is a book SQL anti patterns that go over some of this, usually all of it is a case of the data modelling problems.",Mclovine_aus,2025-07-24 21:14:33,12,dataengineering,t3_1m8g4e6,False,
n4zpw1b,"I think they're talking about in prod.Like ill right join all day but usually because im running counts and furiously switching between inner, left and right, (probably should just outer in these situations) just trying to figure out the data. But when im ready to build to prod, you never really need to right join or at least I havent found a reason to.Op is way off on other things though like.. recursive functions.. or maybe ive just had to work with hierarchical data more often than normal.",dev81808,2025-07-24 23:18:12,10,dataengineering,t3_1m8g4e6,False,
n506zys,"Was totally with you right up until the last bullet. Id heard of merge but two other constructs you used were new on me. Thanks for giving me something to look into.Uh, in sql server, merge is sometimes derided. I think it's complex and there's a lot of opportunity for weird behavior.To add one... folks seem to dislike cursors. Again I think folks don't use them properly and if they did they might like them better, but I guess it's more syntax than a simple while loop.Hot take, I don't like single quotes for both strings and to identify an instance, database, schema, object, or columns and much prefer the square brackets to differentiate one from the other.Despite best efforts to NOT be case-specific, I think there are places in SSRS or SSIS that still are (case specific). They also do weird things with instance names, like ServerName\Instance becomes ServerName$Instance because it can't handle the slash character.SSRS went back and forth about how to pass ""All"" as a parameter between '08 and R2.I kinda fell in love with Snowflake and not having to care about strongly typing string lengths (and not having to care about SSIS crying for making everything varchar(max)).NULL and math or concatenate has surprising behavior.",SaintTimothy,2025-07-25 00:55:51,3,dataengineering,t3_1m8g4e6,False,
n5eq0wa,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-27 10:00:47,1,dataengineering,t3_1maijoh,False,moderator
n5ertc9,"Nobody knows what will happen in the 3-5 years. Just stick with the fundamentals (SQL, programming, data modeling) if you want to make that transition and open source stack (Airflow, Spark, DBT). Cloud concepts are important to learn. Azure, AWS, and GCP are still market leaders in the cloud realm.",yellowmamba_97,2025-07-27 10:18:11,79,dataengineering,t3_1maijoh,False,
n5fefmy,LLMs without DE is impossible.,ArgueWithYourMom,2025-07-27 13:11:38,40,dataengineering,t3_1maijoh,False,
n5go6ey,"The immediate future? Security, governance, more streaming, data quality, AI support, and communication skills. A long list of things I am seeing. More data validation. Way more focus on security and governance than ever before. For gov employees, figuring out how to securely condense environments to limit costs (dag bundles, rbac in dagster, you name it), learning to teach others what is data engineering v. Security/infrastructure. Learning to preach data quality over just throwing all your trash into power bi or an analytics tool. Learning rag and llms and what can feed them best (feels a bit like data mining). Possibly data mining (mathematically looking at data and performing tasks such as imputation and quality analysis on numerical variables). Mlops. Helping build agents for llm or buidling semantic layers. Helping find nlp tools for clean data and showing what happens when crap enters the system. Ramming quality reports down managements throat while Cys because theres always that guy. A lot of api work. Documenting and tagging everything. Doing more with way less aided by tools like claude.",asevans48,2025-07-27 17:09:20,7,dataengineering,t3_1maijoh,False,
n5f99z8,"I’m not sure why you think DE is not SWE. In my company, every DE needs to be very good at databases, networking (optimizing delays), squeezing out performance within architectures etc. We just happen to be good at other DE aspects as well",frusth,2025-07-27 12:39:05,15,dataengineering,t3_1maijoh,False,
n5jczb7,"Just to clarify, data engineering is a specialized software engineer. So a data engineer is also a software engineer",m915,2025-07-28 01:54:50,5,dataengineering,t3_1maijoh,False,
n5k875l,"The way I see it, at the right companies, DEs are just software engineers verticalized on data.The most upvoted comment gave you a good overview of the fundamentals you need to master.I run a data engineering roadmaps website I'm working steady on improving that could give you insights on how to continue too if you're interested: https://dataskew.io",dorianganessa,2025-07-28 05:43:34,4,dataengineering,t3_1maijoh,False,
n5lsaie,"Plenty of folks enter data engineering through analyst or hybrid roles. It’s great experience. To level up: focus on SQL, Python, data modeling, and orchestration tools like Airflow. Get comfortable with cloud (AWS, GCP, Azure) and tools like dbt or Spark when ready.As for the future? DE isn’t going anywhere. With LLMs, real-time pipelines, and growing data complexity, engineers who understand infrastructure, governance, and how data flows will stay very important.",DataCamp,2025-07-28 13:25:24,2,dataengineering,t3_1maijoh,False,
n5jub7t,DE is underrated skill,No-Map8612,2025-07-28 03:51:11,1,dataengineering,t3_1maijoh,False,
n5nudzh,ikd,SitrakaFr,2025-07-28 19:19:35,1,dataengineering,t3_1maijoh,False,
n51kav2,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-25 06:41:41,1,dataengineering,t3_1m8s3rz,False,moderator
n52fz5s,"Just leaving a consulting firm for many of the same reasons. I spent 75% of my time doing non DE work, selling, talking to customers about what they actually need after the sales people in Microsoft did a number on them, doing project tasks unrelated to DE, organising etc. Then the actual DE work has to happen in outside normal work hours, then the clients complain about that happening. At least my firm gave me some development time to keep my skills up to date, but it was like a very small amount of time per week.Am switching back to a leadership DE role in a non-consulting org, which should be far better.",blobbleblab,2025-07-25 11:25:17,6,dataengineering,t3_1m8s3rz,False,
n51swwa,"Your company does not sound like a good situation. Assuming your whole team is fundamentally competent, the frequent late nights suggest someone is promising too much and/or failing to manage expectations. The bad news is that can happen anywhere. But if it's the norm, then it's probably time to move on and parlay the recognizable name into a better role.You can definitely find consulting companies that take quality of work more seriously. I don't know how to vet them besides just talking to people in similar roles. When you do, ask about the sales process, the role of vendor partnerships (this can almost singlehandedly determine your technical focus!), how they go about scoping, how satisfied clients generally seem, etc. If you get engineers to answer those questions, that will shed a lot of light on the kind of environment you might be stepping into (which is tightly linked to the kinds of clients your sales and marketing people are able to reach).(Edited to add: If those discussions make it sound like that firm is bent on pitching solely AI everything these days...huge red flag. Obviously I'm speaking from my own biases here, but IMHO it's a recipe for perpetual scope change at best, and completely unrealistic expectations at worst. Too many un-serious people selling to other un-serious people who are spending still other un-serious people's money for no clear reason. Naturally, YMMV.)By way of background, my data career has been solely in consulting. It's been about 10 years at a couple of relatively small firms (in the 100–200-person range) so I don't know what things are like at much larger ones. I have worked in-house before but in a very a different field. Overall, I'm satisfied with my career path, but it has its drawbacks, especially if technical learning is your *top* priority.There have been long periods where my technical skills stagnated. Once I've reached a certain degree of experience with our bread-and-butter projects, most of the work is on the business logic and requirements side, not the technical side, since I've probably done it a dozen times before.Obviously I'm always keeping up with developments from vendors we typically use (and what's new from others to some extent)...but it's not like I'm frequently taking on entirely new kinds of projects. That's not a bad thing in my book! All those less- or non-technical skills are extremely important. What's more, even if selling the same solution repeatedly isn't the most technically exciting, it's one way to keep increasing your effective hourly rate.Granted, my favorite clients have been smaller ones (like a few hundred staff members or less) who need all kinds of random data things solved. Sometimes that does require unfamiliar technologies, which are often equal parts fun and frustrating at the same time. But those more open-ended projects, where I'm sort of the ""data guy"" on call, are inherently less specialized, and often less lucrative as a result.",TL322,2025-07-25 08:01:28,11,dataengineering,t3_1m8s3rz,False,
n51uhll,">Has anyone else experienced this after moving into consulting?Yes, exactly what you described",mrbartuss,2025-07-25 08:16:29,4,dataengineering,t3_1m8s3rz,False,
n52gx50,"I also recently started with a consulting firm but still have my old company as the client for now. I definitely feel what you're talking about but we haven't had the pressure ramped up quite that much. I'm also surprised that the learning is all basically after hours and up to you to find yourself. It sounds like you get 2 weeks between projects to focus on skills but being on the ""bench"" sounds like being laid off from a union or something if it was blue color work and my anxiety would be crazy until I knew I had something lined up. Trump's new agenda of stopping h1b visas might really help us, finally",SoggyGrayDuck,2025-07-25 11:32:11,3,dataengineering,t3_1m8s3rz,False,
n52kei0,"PWC? :DI work as a consultant, and I do everything but invoicing myself. You're just in the wrong consulting company.",IrquiM,2025-07-25 11:55:43,6,dataengineering,t3_1m8s3rz,False,
n51l229,Either you earn or learn!,rtalpade,2025-07-25 06:48:26,3,dataengineering,t3_1m8s3rz,False,
n521dk2,"Unfortunately this is quite common with consulting firms. Steve Jobs summarized it quite well in this speech: [https://www.youtube.com/watch?v=-c4CNB80SRc](https://www.youtube.com/watch?v=-c4CNB80SRc)Some consulting firms have strong integrity and deliver quality work, but in my experience, they’re few and far between. You really need to dig in and do your research before deciding which one to work with or hire.",Flat-Independence-37,2025-07-25 09:22:52,4,dataengineering,t3_1m8s3rz,False,
n532qcw,"Damn I had to join a consultancy firm to land my first DE role. I hope I don't siffer the same fate, but they did tell I'm in a more technical DE specialised in cloud and Databricks. Hope you get a more technical role, good luck!",mean_king17,2025-07-25 13:41:57,2,dataengineering,t3_1m8s3rz,False,
n4rgrs1,"Not quite, but our new CTO is currently pitching a project for a centralized, from the ground up data-platform, with an in-house AI assistant as part of the initial ""strategic release"". All of this promised on a shoestring budget, in a two-year timeframe... Oh and we're out-sourcing all the development work to a third party consulting company based out of Russia. :upside-down_face:I'm not AS worried about it yet, as even the executives he pitched it too, were so suspicious they rejected the proposal.",zeolus123,2025-07-23 18:49:04,36,dataengineering,t3_1m7h2dh,False,
n4rgsxo,There’s this new technology that lets business cut costs It will be used until the resulting products are so shitty that customers won’t pay anymore And then the products will be made slightly less shitty so customers stop leaving Progress,BufferUnderpants,2025-07-23 18:49:12,13,dataengineering,t3_1m7h2dh,False,
n4sellb,"Just so you know, the agents would have launched the rocket without questioning",lightnegative,2025-07-23 21:28:39,6,dataengineering,t3_1m7h2dh,False,
n4snrv5,"Sadly, people in power who arent from technical run solely off vibes",shadow_moon45,2025-07-23 22:15:23,5,dataengineering,t3_1m7h2dh,False,
n4swaf8,Building AI systems with agents and stuff is easy. Making them useful and accurate though is another thing. Did they mention that as part of it?,Gators1992,2025-07-23 23:00:53,3,dataengineering,t3_1m7h2dh,False,
n4rh01o,"Have you addressed this concerns with your manager and mentioned the potential pitfalls/after-effects? (when I see shit like this, I tend to mention it and then send an email with the phrase ""as discussed...."" with the warnings. This way, if issues arise (they usually do with this kind of projects), it doesn't come back to you (or they cannot blame everything on you).",DataGhost404,2025-07-23 18:50:08,1,dataengineering,t3_1m7h2dh,False,
n4sf70x,LOL,OMG_I_LOVE_CHIPOTLE,2025-07-23 21:31:38,4,dataengineering,t1_n4rgrs1,False,
n5kf5rv,"Well, I wonder why is not India >!anymore!< ?",taker223,2025-07-28 06:46:54,1,dataengineering,t1_n4rgrs1,False,
n5danu3,"Cool, what data source are you using?",007_reincarnated,2025-07-27 02:34:16,4,dataengineering,t3_1mab3ww,False,
n5ddobw,What the source for earnings call transcripts? I hope it will have the latest and the greatest as earnings are released,dead_drop_,2025-07-27 02:54:56,2,dataengineering,t3_1mab3ww,False,
n5dlp8a,"Looks cool, thanks for doing this",skysetter,2025-07-27 03:53:00,1,dataengineering,t3_1mab3ww,False,
n5dayy8,"Oh it's still yahoo finace, just cached on hugging face to avoid rate limits",007_reincarnated,2025-07-27 02:36:24,5,dataengineering,t1_n5danu3,False,
n5dawim,All my data sources are on [Hugging Face](https://huggingface.co/datasets/bwzheng2010/yahoo-finance-data) Each file has a description of its origin.,Mammoth-Sorbet7889,2025-07-27 02:35:56,1,dataengineering,t1_n5danu3,True,
n5dejnv,"earnings call transcripts source Public available APIs, and it includes  the latest and the earliest transcripts released.",Mammoth-Sorbet7889,2025-07-27 03:01:02,1,dataengineering,t1_n5ddobw,True,
n5dnofc,thx,Mammoth-Sorbet7889,2025-07-27 04:07:52,1,dataengineering,t1_n5dlp8a,True,
n5dbbld,"right, but it also includes some data that Yahoo Finance does not have. includes [TTM EPS](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#11-stock-ttm-eps), [TTM PE](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#12-stock-ttm-pe), [Earnings call transcripts](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#15-accessing-earnings-call-transcripts), [Revenue by segment](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#171-stock-revenue-by-segment) and [Revenue by geography](https://github.com/defeat-beta/defeatbeta-api/blob/main/doc/Example.md#172-stock-revenue-by-geography) etc.",Mammoth-Sorbet7889,2025-07-27 02:38:49,4,dataengineering,t1_n5dayy8,True,
n5deyf9,Thanks for sharing . Can you please share info around your tech implementation? Will you incur costs if this takes off . How did you handle scalability ?,dead_drop_,2025-07-27 03:03:54,1,dataengineering,t1_n5dejnv,False,
n5dgm58,"I'm using a web crawler + LLM technology, and this code is still being optimized with no plans to open-source it yet. The main costs of this tool come from my personal time investment, as well as server and LLM API expenses.Regarding scalability, Hugging Face provides excellent infrastructure - all their files are distributed via CDN. I've also implemented DuckDB's cache\_httpfs, which offers local caching for significantly improved access performance.",Mammoth-Sorbet7889,2025-07-27 03:15:45,1,dataengineering,t1_n5deyf9,True,
n5kt5rk,"""The Lindy effect (also known as Lindy's law) is a theorized phenomenon by which the future life expectancy of some non-perishable things, like a technology or an idea, is proportional to their current age. Thus, the Lindy effect proposes the longer a period something has survived to exist or be used in the present, the longer its remaining life expectancy. Longevity implies a resistance to change, obsolescence, or competition, and greater odds of continued existence into the future.""https://en.wikipedia.org/wiki/Lindy_effect",Greedy_Bed3399,2025-07-28 09:02:05,18,dataengineering,t3_1mb6ar1,False,
n5lbyp7,"Brb, rewriting pipeline in sas and Cobol",One-Salamander9685,2025-07-28 11:44:06,14,dataengineering,t3_1mb6ar1,False,
n5lcnbc,this doesn’t really make the point to choose boring technology. first the author basically says “i experimented and learned a bunch from exploring new things but you shouldn’t do that” which frankly I think is terrible especially now with AI destroying the ability of the new batch of engineers to learn things even more and then the point he actually makes is “see if you can get away with using what you already have because ops is not free”. that actual point applies to running literally anything. and the title is somewhat absurd too - let’s take it to its logical conclusion in most enterprises: if you do this you will be an sql server guy whose software runs on windows and is probably written in c# or old java. sounds great but that stack doesn’t pay very well,adappergentlefolk,2025-07-28 11:48:52,3,dataengineering,t3_1mb6ar1,False,
n5pj9ov,"Another perspective is the idea of a ""innovation budget"". Where, for any large project or product, you can choose 1-2 pieces of novel/fancy technology, but for the rest you stick with well established technology.",One-Employment3759,2025-07-29 00:32:00,2,dataengineering,t3_1mb6ar1,False,
n5pj178,This only applies if it's not a Google product though.,One-Employment3759,2025-07-29 00:30:39,5,dataengineering,t1_n5kt5rk,False,
n5okh3r,I feel like this is tied to Zipf’s law. VSauce has a nice video on it.,EarthGoddessDude,2025-07-28 21:24:04,3,dataengineering,t1_n5kt5rk,False,
n5ktm18,Thank you for sharing! That is closely applicable.,Nekobul,2025-07-28 09:06:34,1,dataengineering,t1_n5kt5rk,True,
n5lcwpm,for a “law” this is surprisingly worthless for predicting any future outcomes,adappergentlefolk,2025-07-28 11:50:39,-2,dataengineering,t1_n5kt5rk,False,
n5lu2gh,>most enterprises: if you do this you will be an sql server guy whose software runs on windows and is probably written in c# or old java. sounds great but that stack doesn’t pay very wellThink you make his point pretty well.Resume driven development is what's good for *you*.Boring technology club is about what's good for *the software*.,kthejoker,2025-07-28 13:35:16,5,dataengineering,t1_n5lcnbc,False,
n5r3z8t,"Indeed.See also Gall's law:""A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system.""https://en.m.wikipedia.org/wiki/John_Gall_(author)#Gall's_lawWell established often implies simple (or at least, simple to use, even if the internals are complex)",warehouse_goes_vroom,2025-07-29 07:10:19,2,dataengineering,t1_n5pj9ov,False,
n58cvvy,Incremental pipelines can be a great pain when there are bugs and info needs to be reprocessed backwards. Full refresh pipelines are easier to operate.,oalfonso,2025-07-26 08:05:39,71,dataengineering,t3_1m9n3fz,False,
n588zl6,"One reason for full refresh can be simplicity, it needs less logic overall and ease therefore quicker to implement and easier to maintain.On the transformation side, it might also make sense for dimension models since you would overwrite 90% of records during a run anyway",r4h4_de,2025-07-26 07:27:41,29,dataengineering,t3_1m9n3fz,False,
n594lxf,The key is idempotency. We built a system that implemented both because we knew the only constant is change. We leveraged a full refresh pipeline so historical data could be reprocessed when either business rules change or defects were found then saved the delta. This allowed us to keep multiple versions of the same logical fact.Because we knew this system could always easily backfill fixes or reproduce old history under new business rules we could move fast.Effectively full refreshes are easier to test and debug because they should be idempotent. System go down? Restart it. Job not finish? Restart the system. Idempotency is a powerful concept that will make your life so much easier in the long run but without the ability to refresh the entire unit of work it becomes difficult to reason about.,mRWafflesFTW,2025-07-26 12:14:17,22,dataengineering,t3_1m9n3fz,False,
n589zur,That 'robust' incremental pipeline? It fails silently when business rules change. Full refresh doesn't care.,dragonnfr,2025-07-26 07:37:35,43,dataengineering,t3_1m9n3fz,False,
n58xkr9,How do you backfill when you only incrementally load?,paulrpg,2025-07-26 11:21:40,7,dataengineering,t3_1m9n3fz,False,
n589rwe,"In my experience, incremental refresh pipelines are for fact tables while full refresh are for dimension tables (unless the business wants you to implement SCD, but if not, full refresh)",404_adult_not_found,2025-07-26 07:35:23,12,dataengineering,t3_1m9n3fz,False,
n592toa,This is one if the reasons I enjoy using dbt:You can pretty simply set up an incremental model using jinja syntax. Then you can tag models with “full-refresh” as needed and it does that. So you get the best of both worlds.Where dbt doesnt excel in this is doing this for incremental builds for scd tables. But for simole staging its generally a great tool.,fleegz2007,2025-07-26 12:01:42,6,dataengineering,t3_1m9n3fz,False,
n59f954,"It's easy enough with the example of CSV files because you can track exactly which files are loaded and which aren't (and tools like Databricks autoloader do this for you easily).It's more nuanced with systems they may do hard deletes, or late arriving records. In either case it's very typical for incremental pipelines to drift slowly away from the source.A few patterns to combat this like a lookback window on incremental loads (depending on just how late records can arrive)Also you can mix BOTH - for example incremental loads every hour to keep data fresh, but nightly or weekend full loads to minimize drift",Fidlefadle,2025-07-26 13:23:40,4,dataengineering,t3_1m9n3fz,False,
n58aram,"I generally use full refresh if I cannot trust incremental loads. Think of source system records being deleted but that not showing up in the source data other than the record being gone. I also have source systems where the identifiers can change without updates in the system columns that should mark these updates.That being said, if you have a robust incremental setup that beats the full refresh. It might be good to consolidate it with a full load every once in a while to check if the incremental loading is indeed as robust",juicd_,2025-07-26 07:45:05,4,dataengineering,t3_1m9n3fz,False,
n58m68c,"If the processing logic changes, you likely need to reprocess the stuff you processed. If you just copy from A to B as it is, then this will likely never happen. However most pipelines will do some transformations, e.g. adding a new column. Say you processed all the input files (so far) and now need to add a new column to all the output files. Are you going to write a new pipeline to do that, or edit the existing one and re-run on the same input data?Another example I didn't see mentioned is data size. Your pipeline might be written such that it extracts a delta of changes in the input db table and writes them to the output. This is because just copying the whole table every day is too expensive, and the changes are expected to be small, so could instead use a smaller machine. Now what do you do if the processing logic changes?Of course there are solutions to write a pipeline such that it handles both entire data and deltas, but those solutions always depend on the specifics of the input. It's often much easier (faster) to have a 2nd pipeline for full reloads, configured for a bigger machine, etc.",kathaklysm,2025-07-26 09:38:30,3,dataengineering,t3_1m9n3fz,False,
n5duupo,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-27 05:04:53,1,dataengineering,t3_1madx18,False,moderator
n5dvxwl,"You’ve said you’re new and you’re a bottom rung data engineer?Then none of that stuff is your business. This is a senior management or chief architect / distinguished engineer problem. Go about your day.Try to change it and you’ll be making enemies of the people you need to succeed in your actual projects, and next thing you know there’ll be no environment to worry about because you’ll have no job.",codykonior,2025-07-27 05:13:55,68,dataengineering,t3_1madx18,False,
n5f817h,"Talk to your lead about it. Identify concrete problems, and be solution based. Float the idea of making a tech debt backlog. Then see if you can carve out some time to work on prioritized issues.",One-Salamander9685,2025-07-27 12:30:39,3,dataengineering,t3_1madx18,False,
n5dwfx7,"This is an organizational cloud governance issue. Ideally, your org should set up an AWS Organization (if not done already) and provision guardrails vis tools like service control policies and AWS config rules to enforce standards and prevent people from doing anything too crazy. There should also be a standard for how things go from dev to test to prod. But that might be beyond the scope of your team, so the best way to maintain your sanity in the short term would be to provision a new AWS account within your organization, and provide access to only the data engineering team. Analysts and the like don’t need AWS console access if they’re just making JDBC connections to some data service. If you share details about your planned architecture I can give more specific advice, but I definitely recommend not trying to deploy this in the chaos of any of your existing accounts.",worseshitonthenews,2025-07-27 05:18:07,2,dataengineering,t3_1madx18,False,
n5fm2gc,You’re new do exactly as youre told for a few months at least. None of that is your fault so don’t worry about it. You’re in build trust mode.,boboshoes,2025-07-27 13:56:14,1,dataengineering,t3_1madx18,False,
n5fzbcs,"Can’t believe the top comment is “do nothing”. By doing nothing you already know this is going to blow up into a mess at some point. Yes it won’t be “your fault” but I bet work will absolutely suck trying to get everything to a decent state. In addition, it’s a potentially great opportunity to make real positive change. On the flip side as someone who is new you can’t just start saying everything needs to change. The approach I would take is talking to your peers and manager and ask questions to see if there’s a reason things are the way they are. This should help you identify who can actually influence the org to make changes down the road.",bass_bungalow,2025-07-27 15:06:53,1,dataengineering,t3_1madx18,False,
n5f2a8a,just use AWS CDK,liveticker1,2025-07-27 11:49:11,1,dataengineering,t3_1madx18,False,
n5ek1ck,"Semi agree, but I go with the approach of show them what good looks like. Would do this a lot when consulting.If it was me and I was building something new id terraform it and not add to the existing problem. People may get curious and ask questions, you can do demos and explain benefits and hopefully by proxy some change may be instigated.",RexehBRS,2025-07-27 09:00:32,3,dataengineering,t1_n5dvxwl,False,
n5dzgih,"Thanks for the kind advice. Apparently the structure for this is non existence, which explains the chaotic situation we are in now. Even I myself feel that it should not be my problem to resolve but it was just thrown onto us to solve it.",DeluIuSoIulu,2025-07-27 05:44:23,1,dataengineering,t1_n5dvxwl,True,
n5dzvj4,"Definitely. There is a cloud team that does the governance work for all aws accounts within our organisation. However I’m guessing they are not exactly strict with the people who can access to the accounts, as long as the account custodian agrees then they will create a new user for the employee. I also got to know that the first person who set up our current account have left the org 2 years ago, and ever since then the chaos start and no one bothers to maintain it. Would love to chat with you more, let me process my thoughts before dropping you a message.",DeluIuSoIulu,2025-07-27 05:48:03,0,dataengineering,t1_n5dwfx7,True,
n53vebd,Maybe I’m wrong here but I feel the interview is more important than the pipeline. It’s certainly context dependent but if it’s something cloud based there’s tons of videos displaying E2E pipelines. Handling emergent issues and communicating with the tech and non technical folks is a huge part of the job.,Historical-Fudge6991,2025-07-25 15:58:33,17,dataengineering,t3_1m92bwc,False,
n53s03m,"Yes, it’s too much IMO. In our last round of hiring we interviewed a great engineer coming from Amazon, he had to do a ridiculous assignment like what you’re describing, with design docs and a presentation about pros and cons etc as well as specifically what tools he would use. They didn’t give him the job. I felt so fucking bad, it must have taken him hours.",mistanervous,2025-07-25 15:42:54,30,dataengineering,t3_1m92bwc,False,
n541kgy,"We did some tests where we obfuscated (hashed) names and IDs in a well known data set and then gave to candidates as a parquet file and asked them to code an ingestion/validation framework and use duckDB to return e.g. top ten sellers for the month of March or similar. Mainly we were concerned with *getting the correct answer* vs the work they did to get there. I know the answers to this test are nowhere on line. I ran a few of these by others in the dept. and they were able to do them in ~30-60 minutes. I didn't think that was entirely onerous. It was VERY clear that what was being generated was essentially random and wasn't trying to get free work, just seeing if people had the chops to do what they claimed in the interview.I suppose someone could feed the whole thing to a GPT model and ask it the questions, but...that's just a hazard these days I suppose.I agree that people trying to have candidates do full-on business case + pipeline design for free are overreaching and I would never ask that of a candidate.There's a lot of the 'fuck you pay me' attitude and that's not wrong per se, but speaking from the hiring side, if you get asked to do a 45 minute task to show you can do it and you reply with 'fuck off', well...that's a choice you can make. It will probably result in your not getting the position.",andpassword,2025-07-25 16:27:35,10,dataengineering,t3_1m92bwc,False,
n53t9ls,0. If you want me to do homework you pay me for it.,RobDoesData,2025-07-25 15:48:42,27,dataengineering,t3_1m92bwc,False,
n53uzni,"Between take home assignment and live sql / python coding, I'll take take home assignment all day every day. I've never felt I wasted time on a take home assignment because I always pick a tool or technology I wanted to learn / practice to do the assignment, so there is no real downside imho. I have recently started seeing companies offer up to $500 in gift cards for the assignment which I think is the right thing to do.",sahilthapar,2025-07-25 15:56:40,11,dataengineering,t3_1m92bwc,False,
n544r6z,"The big issue with these is that someone unemployed, single, without kids can always put in more hrs to come up with something better, which leads to ever greater investments of time despite ""this should only take x hrs"".I think they should be a binary filtering step of: meets standard/does not meet standard. If you spend ages creating a better solution, you get no extra credit for it.You can also ask for something small and ask then person to briefly describe limitations in this approach, what they would do next to make it production ready etc. which takes less effort or even defer that until an in person interview.",speedisntfree,2025-07-25 16:42:47,4,dataengineering,t3_1m92bwc,False,
n54b07a,"Dude you can just build a quick API class that reads the endpoint with pagination and dumps into a json or a df, then a df.to_sql into a postgres or something.Now if it has weird logic or need ti explore the api in depth or schedule sql files or even setup a complex docker architecture, yes it is too much",Obvious-Phrase-657,2025-07-25 17:11:36,5,dataengineering,t3_1m92bwc,False,
n552uq7,"I would see this in two different scenarios. If you are hiring a junior dev, then take home assignment could be good. But it works more or less the same as those hackthon coding test, it is also easy to cheat, even the question is a well crafted one, as long as the candidate has a very close friend who is a good developer. (Yes we do see cheating in this kind of coding test, basically, the hundsband help the wife). But for hiring a senoir or even intermediate dev, this is ridiculous. All employed seniors have tons of work to do, no one will spend more than 4 hours on this kind of test, especially, there will be hours of interveiw coming up potentially. Also we will be careful to not helping the hiring company solving their problem. Thus it is more difficult for us to finish an assignment (I assume you will give serious difficult take home assignment in this scenario) without helping the hiring company to solve their problem. I would say, if you are a junior dev, take it, learn the new knowledge, if you are a intermediate to senior dev, just pass by, don't spend time on it. Meaningless, the one who review you result might be even less experience than you and give a false judgement and decide to not move forward with you.",ImmediateSample1974,2025-07-25 19:23:32,2,dataengineering,t3_1m92bwc,False,
n555c0z,"As always, depends on how much I want the job. Ultimately I quite like take-homes because they give me an advantage over worse candidates that is harder to differentiate solely on a CV.An basic end to end pipeline is fine imo, especially if the endpoint is just a database. Slightly more work if it needs to expose endpoints of its own, but if frameworks are allowed, still more than doable.",TA_poly_sci,2025-07-25 19:36:00,2,dataengineering,t3_1m92bwc,False,
n4rl7ez,"If the source system has hard deletes, then you have no way to keep in sync except through full loads, or daily incrementals plus weekly or monthly resync (full loads). It depends on business requirements. If it uses soft deletes then you should receive them as part of your incremental. Regarding history, i prefer the bronze layer to be the sructured version of the raw data, with no further transformations. From there i do scd1 or scd2 into silver. Depending on the requirements you can archive the raw files and have the bronze layer to only contain the latest data, or keep all files in the bronze layer (make sure there is a partition key on a unique identifier of the file), and throw away the files once treated.",Altruistic_Ad6739,2025-07-23 19:09:42,22,dataengineering,t3_1m7hlxu,False,
n4s63t6,"Alright, this post can make good use of additional clarity.- Is primary_hash just a fancy way to say ID?- I hope you understand the implication of hashing, because in this context it is a trap, and you’re jumping right into it. First, order sensitivity: {a:1, b:2} and {b:2, a:1} can spit out different hashes depending on your algorithm—hope you’re normalizing inputs. Second, collisions: no hash is truly unique, so your primary_hash or payload_hash could, in theory, screw you over with duplicates. Third, compute cost: hashing big payloads (especially JSON blobs) chews up CPU. For large datasets, you’re burning cycles when a simpler key or checksum could do the job. Also, good luck debugging when someone tweaks the algorithm. Do stick to lightweight identifiers or deterministic keys unless you’re solving world hunger.- Your source system just yeets full or incremental loads at random? You're really telling us is just a coin flip? Scour their docs for a pattern—there’s got to be one. If it’s truly a coin flip, build a check (like record count or metadata flags) to detect load type. Then branch your logic: full load = overwrite or merge, incremental = append or upsert. A simple if-statement saves you from nuking 95% of your data.- Why the urge to slap a boolean is_current on everything? Your UPSERT logic already yells “this row’s alive!"". Regarding your last_loaded_ts: you just called it business_ts few words before!- Detecting deletions always come down to one of two. Check if the source emits delete events (docs, again). If not, periodically poll for IDs and just IDs. Another news: although a row is being deleted from the source system, it's not mandatory you have to delete it as well: just flag it (aka soft deletion). Overall, if you can ingest incrementally and poll for just IDs, you are saving money and drastically simplify the process.- Data retention: S3 (or Fabric’s storage) is dirt cheap for raw data and time travel queries (i.e., SELECT * FROM table VERSION AS OF '2025-01-01') have been invented in the 90s. If storage costs creep up, archive old partitions to cheaper tiers like S3 Glacier. Keep Silver/Gold lean for business logic and aggregates—don’t make them history dumps. Set a retention policy (e.g., 1 year hot, archive the rest) to balance auditability and your wallet.",Nazzler,2025-07-23 20:47:59,18,dataengineering,t3_1m7hlxu,False,
n4wh0bh,"If I were you, I would do some reading on 3 things,* Natural keys* UPSERTS* Slowly Changing Dimensions (types and how to handle them)You colleague is re-inventing the wheel. You don't need any of that. You post looks like you are not treating the data like sets.",marketlurker,2025-07-24 14:01:21,2,dataengineering,t3_1m7hlxu,False,
n4upvbj,"one of the classic medallion architecture pain points! The delete logic with incremental loads is a nightmare we see all the time.**For the incremental vs full load problem:** Your boolean flag approach is on the right track. What works for us is having a `load_type` field (FULL/INCREMENTAL) alongside `is_current` and `last_seen_ts`. For incremental loads, we only update records that actually appear in the batch - never delete based on absence.The trick is tracking what constitutes a ""complete picture"" at the source level. We usually maintain a separate metadata table that tracks when each source last did a full refresh, so we know our baseline.**Storage and history management:** Bronze is the wrong place for long term history imo. We keep maybe 30-90 days in Bronze for reprocessing, then archive to cheaper storage. The real historical tracking happens in Silver where you can be more selective about what actually needs versioning.For cost control, consider:* Partition by load date so you can easily drop old data* Use Delta's time travel for short term history, separate archive for long term* Not everything needs full history - focus on business critical entities**Quick pattern that works:*** Bronze: Current state + recent changes (30-90 days)* Silver: SCD Type 2 for entities that need history* Archive layer: Compressed parquet in cold storage for compliancea reference of 3 tier architecture: Bronze, Silver, Gold layers: [https://cdn-cednl.nitrocdn.com/ZIEpBLjPiSWpOcIdsSTlIdzcQJzKTmWw/assets/images/optimized/rev-21cfb01/www.datatobiz.com/wp-content/uploads/2025/06/Azure-Medallion-Architecture.png](https://cdn-cednl.nitrocdn.com/ZIEpBLjPiSWpOcIdsSTlIdzcQJzKTmWw/assets/images/optimized/rev-21cfb01/www.datatobiz.com/wp-content/uploads/2025/06/Azure-Medallion-Architecture.png)What kind of data volumes are you dealing with? That usually drives the retention strategy more than anything else.The incremental load thing is tricky but solvable once you stop treating absence as deletion in partial loads.",Automatic-Kale-1413,2025-07-24 06:02:57,1,dataengineering,t3_1m7hlxu,False,
n4vivx8,"I have an IsDeleted flag.On full reload, we delete all records and reload, through all three stages.On incremental, I never delete, I set the soft-delete flag.In the silver/gold I make sure I am only aggregating IsDeleted = false to any totals, but for individual records I am carrying thru the record deletion.In the final view I am filtering the deleted records from anything people or systems see.Make sure to have a batchid, and a header record in a table, so if it breaks somewhere in the processing, you can ask for it to reprocess all raw data for that batch and above (timestamp, if you have an incremental change version id, etc), that way, any time anything breaks it’s extremely simple to indicate a set of data to redo.",-crucible-,2025-07-24 10:29:56,1,dataengineering,t3_1m7hlxu,False,
n4w11nn,"It's hard to answer this without knowing what the data sources here are?If you want to do actual incremental processing, you need an incremental feed of your data (i.e., you want the equivalent of ""snapshot-and-follow"" in Delta Tables or other related tech or CDC). If the data source doesn't offer a snapshot and follow primitive, then you need the compute engine to be able to tell what's new from what isn't.",Unique_Emu_6704,2025-07-24 12:35:43,1,dataengineering,t3_1m7hlxu,False,
n4zuhsz,"We have the same issue, you've done a great job of summarising our thoughts in this space!",deonvin,2025-07-24 23:43:32,1,dataengineering,t3_1m7hlxu,False,
n4rls2a,"Furthermore, check GDPR/business requirements and if needed have a monthly maintenance script that deletes everything that is going to exceed the maximum retention period.",Altruistic_Ad6739,2025-07-23 19:12:25,1,dataengineering,t1_n4rl7ez,False,
n50gkuz,"How has nobody corrected this shit? Is this not the data engineering subreddit? Hard deletes CAN be caught and tracked if the upstream database has CDC/WAL (or some equivalent), which pretty much all databases have these days.3P data is harder; typically you have to pray for some kind of event stream. Less common than pure database systems, but nonetheless they exist",FecesOfAtheism,2025-07-25 01:52:57,1,dataengineering,t1_n4rl7ez,False,
n4s9i7a,"Overall I'd say that your questions and proposed solutions in other comments suggest you need to step back and rethink this. There are established data architecture patterns you’re likely overlooking, and piling on complexity isn’t the way. Hope this helps!",Nazzler,2025-07-23 21:03:52,3,dataengineering,t1_n4s63t6,False,
n5ri1vs,"I had an interview that started like that. Just told them that I cannot recall some info since I've seen them last time at University but I know there's X and Y to be checked if this problem would ever arise. A live coding challenge followed. I managed to pull out good design, code and repo structure, long term thinking, edge cases and broader choice with architecture in mind. They did not like that I could not recall the syntax to follow for some arguments in a function.I do not know what games they play anymore.",Awkward-Cupcake6219,2025-07-29 09:26:26,48,dataengineering,t3_1mc5pnc,False,
n5rb3xq,whenever I get these types of questions Ii assume the interviewer is a bullsh!ter with no hands on experience of the actual area so asks random technical questions likely got off the internet,wheredidiput,2025-07-29 08:18:41,20,dataengineering,t3_1mc5pnc,False,
n5rbjyq,"I had an interview like this. It was a joke TBH. There wasn't much practical stuff, mainly theory, and it seemed to be a way to filter out the non CS graduates.",GreenWoodDragon,2025-07-29 08:23:03,17,dataengineering,t3_1mc5pnc,False,
n5rqh19,"I've been on interview panels. You know we don't get paid extra to interview you guys. It's usually extra worked tossed at me that I'm supposed to do in addition to my other work assignments. Some companies have a hiring guide, but most expect me to come up with questions on the fly. I usually have a handful of questions already lined up. I can't tell you how many times I have to deviate because the candidate clearly lied on their resume. I'll see something like ""expert in cloud technology"" so I'll ask a basic question like ""what cloud provider?"" And they just freeze because they lied or embellished. It's really hard watching somebody fumble in an interview with what feels like softball questions. I normally go back and forth between high level questions about their experience, a few high level technical questions, and a few deep dives into ares of particular interest that either I need then to know for the role, or I'm trying to see of they were being honest on their resume about.",Lower_Sun_7354,2025-07-29 10:42:51,17,dataengineering,t3_1mc5pnc,False,
n5st70z,"Encapsulation can also just be done with a function, or anything that build their own environment no?",defuneste,2025-07-29 14:35:56,1,dataengineering,t3_1mc5pnc,False,
n5wgu3v,They are just asking ChatGPT to write the questions,thepenetrator,2025-07-30 01:23:18,1,dataengineering,t3_1mc5pnc,False,
n5v421u,"You give a brief, vague description that shows you're familiar with the concept, then follow with a smile and a quip about how you can't recall the exact textbook definition. Then you move the conversation forward by asking how they use the theory they just asked about in their code and show interest and engagement in their implementation. Ask follow-up questions demonstrating that you can discuss the pros and cons of the implementation.They're not asking for a textbook definition, they're probing your soft skills and making sure you're not regurgitating AI answers.",organic-integrity,2025-07-29 21:01:14,1,dataengineering,t3_1mc5pnc,False,
n5w1r4q,being slammed with leetcode is just part of the cultural experience. but encapsulation based programming is pretty self descriptive. i think its a good question. encapsulation =/= oop,Certain_Leader9946,2025-07-29 23:56:47,-1,dataengineering,t3_1mc5pnc,False,
n5riydc,"That's the perfect answer, i didn't think about that",HMZ_PBI,2025-07-29 09:35:01,5,dataengineering,t1_n5ri1vs,True,
n5v5ewd,You probably dodged a bullet people harp on those details because they themselves don’t understand the value of deeper more strategic thinking.,hntd,2025-07-29 21:07:41,2,dataengineering,t1_n5ri1vs,False,
n4uj28j,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-24 05:05:50,1,dataengineering,t3_1m7vjht,False,moderator
n4vg53b,Checkout Ease with Data YouTube channel.[Ease With Data Playlists](https://m.youtube.com/@easewithdata/playlists),Complex_Revolution67,2025-07-24 10:06:18,9,dataengineering,t3_1m7vjht,False,
n4zwuoa,I'd start with this open source Github that has 35k+ stars. It has a really solid list of all the best resources to learn! [https://github.com/DataExpert-io/data-engineer-handbook](https://github.com/DataExpert-io/data-engineer-handbook),eczachly,2025-07-24 23:56:41,1,dataengineering,t3_1m7vjht,False,
n4uj26x,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-24 05:05:50,1,dataengineering,t3_1m7vjht,False,moderator
n51wjsq,Pick a field (e.g Lakehouse/Iceberg) and focus on it. Don’t chase everything. Read classic Kimball and Inmon and modern Joe Reis & Matt Housley,vik-kes,2025-07-25 08:36:26,1,dataengineering,t3_1m7vjht,False,
n5l3gnp,Check out The Data Engineering Channel on YouTube! [https://www.youtube.com/@GambillDataEngineering/featured](https://www.youtube.com/@GambillDataEngineering/featured),InterestingDegree888,2025-07-28 10:38:07,1,dataengineering,t3_1m7vjht,False,
n58dpa3,"Are there any reason why this is beign downvoted? Is information there is misleading, wrong or do not fit op's request?",Carbonemys_cofrinii,2025-07-26 08:13:39,0,dataengineering,t1_n4zwuoa,False,
n54x93m,"personal thinking, I have no freelance experience, just personal thinking. Small companies does not require data engineering, they need someone can help build their product quick before they have the money to scale up. Only Big companies will need data engineers to help them scale up the data solution. And Big companies don't hire freelance I believe.",ImmediateSample1974,2025-07-25 18:56:05,29,dataengineering,t3_1m97exi,False,
n561bpx,"A challenge I see with hiring freelancers is that companies can be apprehensive about sharing their data with a freelancer. Of course NDAs etc. can be signed but unless they really need a freelancer, they'd probably look towards a contract worker.",booyahtech,2025-07-25 22:17:02,9,dataengineering,t3_1m97exi,False,
n54yp9w,"I've gotten a few gigs over the years just by making a post on LinkedIn about my availability. There is some risk there though unless you know the person, that you'll get scammed out of payment.",ntdoyfanboy,2025-07-25 19:03:05,4,dataengineering,t3_1m97exi,False,
n565y6z,"I got converted to FT employee and I took it, because the market is dry. Why? Cloud tools, PowerBI and business analysts. Quality of the data is often overlooked. I do more interoperability work as a DE than true Snowflake modeling.",SirGreybush,2025-07-25 22:42:52,3,dataengineering,t3_1m97exi,False,
n59fbaa,"The best way to get gigs nowadays is specialize in one thing and advertise the hell out of it. Big companies won't hire a generalist, they will hire somebody who will fix their problem. Things like cost optimization of snowflake or aws is music to their ears.",BarbaricBastard,2025-07-26 13:24:02,3,dataengineering,t3_1m97exi,False,
n54znlf,I watched a youtube video today and they recommended using Linkedin to look for freelancing opportunities.,serrji,2025-07-25 19:07:43,1,dataengineering,t3_1m97exi,False,
n551pp5,Am doing my engineering and currently in last year Looking forward to become an data engineer what's the 3 advice you should give me to become an data engineer,Vivid_Pumpkin7290,2025-07-25 19:17:53,0,dataengineering,t3_1m97exi,False,
n577h37,"Yep, that's the reality of this job. Only big places need a full time DE.",SquarePleasant9538,2025-07-26 02:27:35,8,dataengineering,t1_n54x93m,False,
n54y43c,Indeed I can feel that but there are too many job listings on Upwork and I am not sure if someone is getting that or not,Dangerous_Pie2611,2025-07-25 19:00:14,0,dataengineering,t1_n54x93m,True,
n5ayhy4,So the roles I am applying on Upwork will not go anywhere,Dangerous_Pie2611,2025-07-26 18:17:55,1,dataengineering,t1_n561bpx,True,
n5lp8f7,"You need to automate it in the pipeline moving it from bronze table to silver table, then in your gold table you join with relevant cleaned data to build your dimensional model. I personally like the audit publish pattern and I put bad rows in a quarantine table and link it to dashboard to add observability to my errors, like if you have a source that have the same constant bug use that to open a ticket in that teams board or a bunch of errors at the same time could signal a bad deployment on your stack or the source stack.But if you have need for something that scales better, dbt has good testing capabilities and streamline the pipeline building process. There are also great open source data quality tools such as great expectations or soda. If you're already on aws, there is a data quality service called deequ i think.Good luck!!",Equivalent_Effect_93,2025-07-28 13:08:15,14,dataengineering,t3_1mbap0p,False,
n5m1ep7,As an intern you don't have to pick an ETL engine by yourself. Ask your mentor or whoever gives you tasks.,invidiah,2025-07-28 14:13:24,7,dataengineering,t3_1mbap0p,False,
n5lgqqj,dbt/sqlmesh. To understand it look into the dbt build command,Zer0designs,2025-07-28 12:16:18,9,dataengineering,t3_1mbap0p,False,
n5q8yyt,"What do you mean by ""automate"" the data quality process?Take a try on Great Expectations and Pydantic (if you want, maybe it's good to know to test properly using unit test, integration, etc)",SupoSxx,2025-07-29 03:03:32,2,dataengineering,t3_1mbap0p,False,
n5p0wec,"Have only used fabric data pipelines not Azure data Factory. I'd see if a notebook can be added to the pipeline then write a function using python that dynamically checks each column for white spaces, nulls, duplicates, etc",shadow_moon45,2025-07-28 22:50:20,1,dataengineering,t3_1mbap0p,False,
n5psfgq,"Entire departments are built on QA/UAT. This isn't an easy quest you are starting, and hate to say it, but it will never end either. This is a constant need project.",MathematicianNoSql,2025-07-29 01:24:36,1,dataengineering,t3_1mbap0p,False,
n5qnirv,Theres a pretty useful data cleaning automation software: [https://www.project-mist.net](https://www.project-mist.net),Late-Albatross7675,2025-07-29 04:46:22,1,dataengineering,t3_1mbap0p,False,
n5qs8n0,Use dqx tool from databricks. Easy to use compared to other solutions. My experience.,DecisionAgile7326,2025-07-29 05:24:30,1,dataengineering,t3_1mbap0p,False,
n5trehj,"Since you're already using Azure + Databricks, one practical path is to define a set of reusable validation rules (like null checks, ranges, or referential integrity) and apply them dynamically across tables in your Spark notebooks. Think of it as building a small rules engine using metadata.If you're exploring tools, dbt + dbt tests are great once you’re in the silver layer. For more advanced checks, Soda, Great Expectations, or Deequ can help—but they can be heavy to start with. Sometimes a few well-structured PySpark functions and good logging go a long way.",DataCamp,2025-07-29 17:15:22,1,dataengineering,t3_1mbap0p,False,
n5v50pj,"This varies by organisation so much. A lot of words and lines of code seem to get spent on the real basics like just counting nulls, empty strings, or zeros across all columns - but for my org, that would be totally wasted effort. It wouldn't help the business at all.We've got shedloads of tables with oodles of columns, but for many of them, things like nulls are totally inconsequential, or even good sometimes.And then folks start talking about duplicates, but if you're defining that to mean the database-managed PK identity column, it's clearly not going to have any dupes, and if it somehow did, it's a bug in the database engine which is far outside our responsibility. I don't want to spend CPU cycles testing MS SQL Server features that have been in place for decades.If you don't mean that kind of dupe, then that starts a valuable but lengthy discussion about what we DO mean by a duplicate; the answer for us varies by table/entity, and is generally too complex for any off-the-shelf tool to handle (that I've seen).So in short, for us the only business value is in a much more manual DQ process (manually defining what DQ means, not manually checking it!). And I rolled our own implementation because nothing I could find came close to what we need.",sjcuthbertson,2025-07-29 21:05:48,1,dataengineering,t3_1mbap0p,False,
n4wkpts,I use dbt. You ingest your sources in your case 10 and add tests to all 10. After you validated the 10 sources you can do your thing in the next layer.,Zer0designs,2025-07-24 14:19:27,14,dataengineering,t3_1m84o0c,False,
n4xtwfc,"Our pyspark code lives in a github repo which syncs to a Databricks workspace via our ci/cd process (there are various ways to do this, asset bundles being the current hotness). Our Databricks jobs run notebooks which import modules and run transformation functions. We have unit and regression tests in the repo for all of our transformations, written using pytest. These run locally on our machines and also in our ci/CD pipeline so that nothing gets merged to main or deployed to production unless these tests pass.This doesn't account for everything that can go wrong. In particular, we don't have a good way to run integration or end-to-end tests locally, but we do deploy to a dev workspace and require that any changes be run successfully there, which covers most of the rest of the possible error surface.Any remaining uncertainty comes from the possibility of upstream data sources shitting the bed, which we can't control, or from the reluctance of data scientists, our immediate downstream consumers, to adopt anything resembling robust development practices, so we spend a lot of time putting out fires that don't arise from our ETL pipelines.",rarescenarios,2025-07-24 17:45:43,13,dataengineering,t3_1m84o0c,False,
n4whncy,Look into the write-audit-publish (WAP) pattern.https://open.substack.com/pub/juhache/p/write-audit-publish-wap-pattern,on_the_mark_data,2025-07-24 14:04:34,11,dataengineering,t3_1m84o0c,False,
n51bfys,"We have our code in an Azure DevOps repository and publish it to Databricks as a module using asset bundles. Every ETL job is unit tested using unittest: extraction is mocked, transformations are accurately tested and so is loading into a temporary directory using DeltaLake. Don't trust anyone saying you can't do unit testing in dats engineering cause it's absolute BS. You can and you absolutely should. In order to get there you need to structure your codebase and CI/CD pipelines appropriately and avoid software engineering nightmares like notebooks. As someone else noted, of course this is still error prone and we have two environments (dev and pre-production) where we perform more end-to-end testing with mock data, similar in size to production.",SBolo,2025-07-25 05:25:33,3,dataengineering,t3_1m84o0c,False,
n4yv0aq,"Unit tests don't really exist in data engineering because there are few units small enough to test. Some code-heavy DEs might be able to to it, but most of us are using SQL or dbt or something like that. Traditional software testing does not work for us. We have to think differently. That pedantic message aside, we can take the concept of unit tests and apply to data engineering. We need three things. 1. Known input state (What data are we reading)2. Work (Query, task, function, something that transforms data)3. Know expected output stateDbt and SQLMesh do this with their own concept of unit tests. I'm sure other platforms have their own solutions. If you want to roll your own it is fairly simple in theory.... 1. Create known data that shows the characteristics of what you want to test.2. Run the portion of your pipeline that you want to test.3. Compare the output to the expected output. If it matches you are good. This is not that hard in small pipelines, but very difficult to maintain in big pipelines. Imagine a SaaS company with 10 subscription plans and negotiated contracts. New stuff being added every day. 800 data sources. It's really tough to maintain a test suite. This problem has not been solved in the industry and whoever solves it will be very rich. Personally, I think AI has to be part of the solution. I remember speaking with someone who is way smarter than I am talking about SQL proofs to solve this problem.",leogodin217,2025-07-24 20:39:43,4,dataengineering,t3_1m84o0c,False,
n4wgxaz,Do you have a dev environment? What kind of failures are you running into? Schema changes or data changes? Is everything just in notebook cells?,nonamenomonet,2025-07-24 14:00:56,1,dataengineering,t3_1m84o0c,False,
n54bab2,"One key is to write your transformations as functions that take in input (dataframes, params) and return data frame, ie isolate them from code that connects to data sources, extracts the input or writes the output. This makes it easy to write unit tests where you pass mock inputs into transform functions and compare output to expectation. From there you just get better at breaking down these transform functions to make it easier to write unit tests for. You can also write your runtime data validations as functions in the same way and write unit tests for those to make sure they catch bad data.This separation of transform code and connecting/reading/writing code makes it easier to abstract and consolidate the latter and write integration tests for those.So in your hypothetical “process_data_to_silver.py”, assuming that’s an etl task will likely not need much unit tests of its own. It’s simply importing a dataset processing function, passing it inputs, and then publishing the output. You’ll be confident it’s processing and validating as expected because the function itself is covered.",jjophes88,2025-07-25 17:12:54,1,dataengineering,t3_1m84o0c,False,
n54ck0t,"We have our code defined in OOP classes of (essentially) 2 types: the ingestion handler and transformers. Transformers are defined per table, with commonly used transformations/aggregations being applied in a common/default implementation of a function in a base class. If no default is possible, it's redefined on per-usecase basis. Ingestion handler is just single instance that handles logic related to reading/writing and storing references, if other downstream transformers rely on some data in those upstream. Our code is fairly easy unittested, because the functionality is split up into separate, distinct and isolated functions that consume dataframe and returns dataframe. Tests run in CodeBuild/CodePipeline (was this way before it got discontinued, unfortunately for us :smiling_face_with_tear:)",Kojimba228,2025-07-25 17:18:39,1,dataengineering,t3_1m84o0c,False,
n4zrzrq,Don’t use databricks and their half baked we slapped together some notebooks and called it a pipeline nonsense. It violates so many well established principles in software development. That they have the gall to now try and hack testing and version control and the like back into a notebook and want to convince people this a reasonable way to work is truly impressive. Notebooks should never have been the unit of operation to begin with.,TheRealStepBot,2025-07-24 23:29:44,-1,dataengineering,t3_1m84o0c,False,
n4x2e4g,i do think those automated integration and singular tests are one of the best features and strongest arguments for dbt.,vikster1,2025-07-24 15:41:39,8,dataengineering,t1_n4wkpts,False,
n5qvrar,"The ""Joins are expensive"" is said in the context of running OLAP queries on distributed databases with massive amounts of data. Unless I misread, the article missed this point by using DuckDB or PostgreSQL, so the premise of this article might be incorrect.",sib_n,2025-07-29 05:54:58,53,dataengineering,t3_1mc2ass,False,
n5qrj3i,We regularly see slow queries with multiple joins can have major performance improvements through materialization or denormalization. Anecdotal but makes a real tangible difference to the end user.,Gargunok,2025-07-29 05:18:34,19,dataengineering,t3_1mc2ass,False,
n5qtxn5,Now do it in spark,Embarrassed-Falcon71,2025-07-29 05:39:01,16,dataengineering,t3_1mc2ass,False,
n5r4z9k,"I've done this same test on both spark and bigquery, with roughly ~100 times the data used here (~100-200B rows) and got exactly the opposite results. Joins being massively slower than the OBT.The key is that the table you are joining against needs to be big enough to not be broadcast joinable. As long as you can broadcast join, I'll buy the argument that joins are not slow.",kappale,2025-07-29 07:19:36,16,dataengineering,t3_1mc2ass,False,
n5rack6,Now try doing distributed joins with subqueries,yudhiesh,2025-07-29 08:11:11,7,dataengineering,t3_1mc2ass,False,
n5rpbao,EXPLAIN command will tell the truth,AipaQ,2025-07-29 10:33:03,5,dataengineering,t3_1mc2ass,False,
n5qnsew,Broken URL :(,JadeCikayda,2025-07-29 04:48:27,1,dataengineering,t3_1mc2ass,False,
n5shv59,This is what happens when controlled tests don't match reality. Confirmation bias in action.,DenselyRanked,2025-07-29 13:39:13,1,dataengineering,t3_1mc2ass,False,
n5vazob,Really? Come on with the title. If depends and sure as heck can be.,NoleMercy05,2025-07-29 21:35:02,1,dataengineering,t3_1mc2ass,False,
n5qqj0h,This was an easy and interesting read. Thanks for sharing,Historical-Fudge6991,2025-07-29 05:10:19,1,dataengineering,t3_1mc2ass,False,
n5kd0t2,"Happy to see this blog post being covered by newsletters and podcasts organically. Here's why I recommend to read it and share your insights:* This system has scaled to **100k/sec events** and meets the critical requirement for enterprise users* These insights were learned over the past 6 yrs of continuous improvement* RudderStack chose Postgres over solutions purpose-built for Queuing/Event-Streaming solutions. A bold and not so intuitive choice for many.* Covers insights related to indexing, compaction, CTE, WAL, optimized configurations, etc.* You may check out the code at - https://github.com/rudderlabs/rudder-serverP.S. I am a bit biased because I contributed to this article and the project",ephemeral404,2025-07-28 06:27:18,5,dataengineering,t3_1mb591a,True,
n4yyeye,Distinct isn’t inherently bad but it shouldn’t be used without a good reason. You should be able to explain why there are dupes and why there’s no other good way to handle them.,JaceBearelen,2025-07-24 20:55:33,77,dataengineering,t3_1m8fks2,False,
n4z0jnd,"Agreed with others on being able to say why a distinct was necessary, otherwise it can really hide issues. Like 'service produces microbatches of data so we get a user record for each batch. Unlike a user record doesn't have to change between batches but can'. Feels like a reasonable situation to distinct records. But 'data has lots of dupes distinct it'. Without knowing why could be hiding issues that a service is retrying successful events or an analytics event is firing multiple times per page load/etc.",FridayPush,2025-07-24 21:05:41,19,dataengineering,t3_1m8fks2,False,
n4yzwbp,"""To distinct or not distinct"" is not the right question. The argument against using distinct is that there should be some logical reason why duplicates exist. It's not to mean that distinct is inherently bad, and it should absolutely be used if your query needs to return unique values.If you are using distinct to mask some underlying logical issue that you don't understand and don't have the time or patience to debug, then you are not returning accurate results, and it can cause major (potentially exponential) issues.",DenselyRanked,2025-07-24 21:02:33,12,dataengineering,t3_1m8fks2,False,
n4yyhqg,There is no distinct answer.But there should be..,Silly-Swimmer1706,2025-07-24 20:55:54,9,dataengineering,t3_1m8fks2,False,
n4zulb9,Any one using distinct to dedupe rows because the don’t know why the have them and to lazy to work out why is wrongDoing a distinct to setup for know reasons you are getting duplicates is fine,Ok_Relative_2291,2025-07-24 23:44:05,7,dataengineering,t3_1m8fks2,False,
n4z9zgz,"It’s lazy, especially when used without a reason. In the event your dataset returns duplicates, and you can explain why, there are more efficient ways to remove the dupes, such as group by / qualify etc.",Double-Silver-6830,2025-07-24 21:52:13,5,dataengineering,t3_1m8fks2,False,
n4zdnn8,Needing to use distinct is a sign there's an underlying issue that you're covering up. Its better to fix the underlying issue instead,Hackerjurassicpark,2025-07-24 22:11:20,6,dataengineering,t3_1m8fks2,False,
n50c8so,"If I know the there are duplicates technically, distinct is fine (currently having replication process that have duplication on purpose to guarantee delivery).Otherwise it's bad decision. At least keeping the raw untouch for later investigation.",robberviet,2025-07-25 01:26:53,3,dataengineering,t3_1m8fks2,False,
n51lhu4,"There's no such thing as ""never"" but every single time I've had to troubleshoot someone else's costly query, a DISTINCT clause was the culprit.",Maskrade_,2025-07-25 06:52:19,3,dataengineering,t3_1m8fks2,False,
n530xbu,"Since my first baby steps in SQL they told me distinct is bad so I've never used them anymore, group by goes brrrrrrrrrrr",unhinged_peasant,2025-07-25 13:32:17,3,dataengineering,t3_1m8fks2,False,
n5jhrxg,"\> My technical intuition is nowhere near as strong as my peers, and I often need hand holding in solution designYour technical intuition is not near your peers might be because you haven't been there long enough to get a full picture of the system. It takes time and practice to build intuition. \> I am the only “BI” guy in my orgYou are literally there for a reason. You are not a fraud, you are not the village idiot.",Objective_Notice_271,2025-07-28 02:25:06,26,dataengineering,t3_1mb47hg,False,
n5jh9jo,"Tbh you sound like a medium skilled dev who doesn't have a burning passion for tech and learning more. Which is totally fine, you don't need to be a rockstar. Do your job the best you can, take advice where given, and just keep trying. Lots of REALLY bad devs out there and it doesn't sound like that's you.But I wouldnt expect to move up quickly or get good promotions.",dcent12345,2025-07-28 02:21:51,18,dataengineering,t3_1mb47hg,False,
n5jk2wt,">I am the only “BI” guy in my org, everyone else is stronger in software engineering. EveryoneI would lean into this. It offers a different perspective on the team and one that is especially important given the reporting layer is what end users see. Your background is certainly an advantage here. This bit:>We no longer have 1:1s or talk about anything really while he still talks regularly to the rest of the teamI know it’s not easy but I would try and muster up the courage and ask for 1:1. Come prepped with an action plan and ask for advice on areas to grow in. A good manager can help here. Good luck and as a DE who leans more BI, it’s easy to doubt our technical skills but there is so much more to this profession. Understanding the underlying data, how to present it, and just how to communicate with teammates goes a long way. Good luck and let us know how it goes!",big_chung3413,2025-07-28 02:40:11,8,dataengineering,t3_1mb47hg,False,
n5jszz1,"Hey, firstly a lot of folks in tech feel like failures/frauds - there's a lot of imposter syndrome floating around, so discount that.However, I'm going to suggest something that hasn't been suggested already. Study/learn. A lot. I often feel like a fraud often but it's usually ameliorated by being the only person in the room who has the answer to a technical question, or enough free-floating context to extrapolate one if it doesn't exist. This was through truly backbreaking amounts of study, often around technical subjects that were only tangentially related to data engineering (microprocessors, operating systems, machine learning, data science, maths) in addition to spending plenty of time learning about core software engineering (languages, design patterns, best practices, tooling) and throwing time at random new tech constantly (agentic workflows, vector dbs, scalable anonymization techniques, heck even occasionally frontend stuff) *in addition* to the obvious stuff (data modelling, query optimisation, infra/cloud). I read the entire Postgres docs from start to finish at one point. Waste of time? Sure, maybe not the most strategic choice. But it's definitely one path to feeling like you deserve your job, because I assure you the vast majority of other folks aren't going to do it. Good luck.",actualhumanfemale2,2025-07-28 03:41:38,5,dataengineering,t3_1mb47hg,False,
n5k7qw2,"I work for a tech company (not small, making billions in revenue), right in the central data engineering team. No unit test is used, as most of the codes are SQL and Python for airflow and terraform for infrastructure set up. I was so surprised when i joined, I do unit test as I came from software engineering background. I think you shouldn’t judge yourself too hard. They chose you for a reason. Learn one thing at a time. Ask ChatGPT or use copilot, Claude- they make decent unit test and can teach you as well.",Extra-Ad-8033,2025-07-28 05:39:31,2,dataengineering,t3_1mb47hg,False,
n5lajh1,"Firstly, it doesn't sound like you have a very supportive team. You joined a team of experienced engineers, whereas you're new to the position. You needing training was a given in that situation and it is a seniors job to mentor. I would definitely ask for a one on one with a regular cadence. Get feedback and start working on the low hanging fruit. Also, talk to your manager about specializing. With you being the only BI guy, it likely makes you in the best position to do data modeling and documentation, working with downstream users, etc. Find something you can do well right now, and gradually learn the rest. Finally, stick it out here and learn as much as you can. You'll probably want to find a new company eventually. Or you'll be there long enough that you get as good as they are. They have 10+ years on you, you can probably get where they are with practice and training by the time you get experienced enough. I started as a BI guy myself. I did a lot of data transformation work at first, which is what I love anyways. Eventually, I had to expand and that was painful. But firstly, I gained additional technical skills which is always good. Secondly, I found that I have a pretty good intuition for architecture, and my manager is eagerly supporting that. Thirdly, I made a name for myself working across teams to build data engineering solutions. That meant that I did not always need to be the most technical guy. I just had to figure out things at a high level and let our consultants who have 15+ years on me with highly technical expertise do their thing. In the meantime, I'll gradually get better technically, but I don't NEED it as my niche isn't as technical.",BoringGuy0108,2025-07-28 11:33:42,2,dataengineering,t3_1mb47hg,False,
n5jzaor,"I will be the bad guy it seems. You're struggling because you sound like you don't care and you're not interested. I was sympathizing with you a bit until I got to your last bullet, then you completely lost me. The fact you don't care about the domain and you don't want to learn more tells me you belong in the struggle you're in. You put yourself there and you don't care about getting yourself out the whole you dug. Thus, the only advice I can give you as a senior engineer is to find some passion, stop crying about what you did to yourself, and get better.",Tehfamine,2025-07-28 04:28:55,3,dataengineering,t3_1mb47hg,False,
n5kxt3t,"OP, I work with lots of computational scientists who I think are fairly similar to the people you worked with in your previous role. They would all struggle hard if they jumped into where you are now, because they mostly just write scripts and things to get their analytical work done - they are not engineers. Engineering is quite a different mindset, I'm also a career switcher but I came from aerospace engineering so the mindset shift wasn't as big.The best advice I can give you to read 'The Missing README A Guide for the New Software Engineer' by Chris Riccomini and Dmitriy Ryaboy. I think it would be very helpful for where you find yourself now and it a pretty short read.",speedisntfree,2025-07-28 09:47:12,1,dataengineering,t3_1mb47hg,False,
n5l7djt,Everyone gets imposter syndrome at some point of another the difference is you are actually getting advice and self-reflecting one foot in front of the other focus on what you can do well if you are finding it hard to pay attention to detail slow things down and then if you are not working fast enough ask if there are quicker ways of doing tasks someone in your team might have an insight or a trick they know from experience that could help you.,brenanweston,2025-07-28 11:09:45,1,dataengineering,t3_1mb47hg,False,
n5mvxsw,"I mean, obviously it’s nice to have a good salary, but do you want to be a data engineer? If you applied for a DE position, it’s probably reasonable to expect some understanding of CI / CD, version control, maybe some basic OOP etc. Your post is giving me the impression that you’re not interested in expanding your skill set, despite your new position having a higher standard of development. That’s not to say that they couldn’t have handled the situation better, but I would be more open to up skilling. Definitely talk to your manager about rescheduling 1 on 1’s and maybe consider creating a plan for additional training, etc.",rewindyourmind321,2025-07-28 16:39:33,1,dataengineering,t3_1mb47hg,False,
n5qk3ar,My company recently implemented fivetran and it is ridiculous how quickly we were able to replicate our source systems.,SellGameRent,2025-07-29 04:20:18,25,dataengineering,t3_1mc1k9c,False,
n5qkpqo,"The main question for me is, how much do you expect your data to scale? The price starts to ratchet up once you get past the free threshold for monthly active rows. Taking a dependency on this could potentially be very expensive in the future. If you have small data utilization (and plan to remain at that level), then don't see an issue from a pricing perspective.Another thing to consider here is making sure you temper expectations of the wider business. With no data engineers and a single analyst, there is limited investment in the data function (based on the provided information). Given the connector choice, maybe you report to finance? Regardless, it's one thing to get the data from point A to point B, it's another to ensure the data is correct. For example, what happens if they change the configuration of Salesforce objects? How will you handle that downstream?I say the above to warn of the trap of the business thinking that increased access to data easily results in more data utilization.",on_the_mark_data,2025-07-29 04:24:58,9,dataengineering,t3_1mc1k9c,False,
n5ql30r,"Fivetran is plug‑and‑play and charges on rows. Skyvia is more manual but flat priced. Airbyte, Hevo, Rivery and others are also in reach.We cannot narrow it further without numbers on rows, refresh needs and budget. Too many tools to guess.",bcdata,2025-07-29 04:27:44,8,dataengineering,t3_1mc1k9c,False,
n5qnxzh,"Hi. I can't comment about Skyvia but we use Fivetran. It is exceedingly easy to setup up new replications but it can get expensive. We spend about $30k per year to replicate, SFDC, and several other cloud based systems. We tried using it for replication of large SQL Server databases (300 million rows that change, get inserted often). It was too expensive so we rolled our own (not as nice, but does the job). Not sure how your trial estimated only $50 but I it may be possible if your rows don't change often.",GreyHairedDWGuy,2025-07-29 04:49:40,4,dataengineering,t3_1mc1k9c,False,
n5qmiwb,"When it fails, like it really really fails. Rare, but spectacular. Have had a few instances where things just stopped working out of the blue for a few days. Talk about up shit creek...Building around others obviously has some downsides with any of these 3rd party ETL tools. Fivetran is big name because they're good enough more often than not. They're lot perfect, but they have the resources to be good",EmotionalSupportDoll,2025-07-29 04:38:45,3,dataengineering,t3_1mc1k9c,False,
n5sbx0p,"Fivetran’s turnkey connectors and automated schema drift handling make it a great fit for a team with no dedicated engineers. Your $50/mo estimate for Salesforce, QuickBooks, and SharePoint is very reasonable. Just be aware of the vendor lock‑in and that you won’t be able to customize complex transformations in‑flight; if you need more control down the road, an open‑source option like Airbyte could slot in without a big migration.",GreenMobile6323,2025-07-29 13:06:34,2,dataengineering,t3_1mc1k9c,False,
n5qmp0x,With what you said it’s great. It’s not great if you want to fine tune and control your CDC. Also troubleshooting is a pain due to having to dig through logs. Also the less sources you have the better,wytesmurf,2025-07-29 04:40:03,1,dataengineering,t3_1mc1k9c,False,
n5qt4d8,Where do you push the data from the source systems? What is the target?,Nekobul,2025-07-29 05:32:02,1,dataengineering,t3_1mc1k9c,False,
n5rtmmz,"It has a ton of value if you’re a small team. We have less than 10 people on the data team at a manufacturing company that has over 5 billion in sales. We only write our own connectors if the connector does not exist or our performance requirements are beyond what is available on the market. I would have to have another 2-3 people full time to write and manage connectors for all of our data sources. It’s real hard to explain the value of that to executives, so we buy what we can and only build when necessary.",Jealous-Win2446,2025-07-29 11:07:35,1,dataengineering,t3_1mc1k9c,False,
n5ud1ot,"If you're exploring alternatives to Fivetran, you should definitely check out [COZYROC Cloud Gems](https://cozyroc.cloud/gems/gallery). It's a **modular, low-code platform** that offers prebuilt “gems” (connectors/tasks) for ETL workflows from REST APIs, databases, flat files, Excel, Azure, and even tools like Salesforce, SharePoint, NetSuite, etc.The best part? **It's** ***way*** **more cost-effective**. Pricing is usage-based and doesn't lock you into a per-connector monthly plan. Here’s their [pricing page](https://cozyroc.cloud/gems/pricing) for comparison.You can build and automate production pipelines quickly, without worrying about vendor lock-in or inflated data volume pricing. Worth a try if you're looking to scale without bleeding budget.",NeckNo8805,2025-07-29 18:54:10,1,dataengineering,t3_1mc1k9c,False,
n4w96gn,Yeah i’ve been using this SaaS called CRON,CrowdGoesWildWoooo,2025-07-24 13:20:33,73,dataengineering,t3_1m82tna,False,
n4wdnbf,"I have been able to get away with running everything out of a git runner for multiple businesses with a decent amount of data. I like to use DLT for the Python library and set up all my scripts to run in full refresh, backfill and incremental load. I dump this off in a data lake and then load it to whatever db. I then do my transformations in dbt. All of this is run with a prefect pipeline in a github action either on github or a self hosted runner depending on the security set up. Very cheap easy and light.",SmothCerbrosoSimiae,2025-07-24 13:44:18,11,dataengineering,t3_1m82tna,False,
n4w9k47,Just write a Python script,RobDoesData,2025-07-24 13:22:34,22,dataengineering,t3_1m82tna,False,
n4w5fwy,"You don't pull data into AWS Athena, it's the service that allows you to query data in S3. Write a lambda function to call the required API, get data to S3, then use Athena to query it.",HG_Redditington,2025-07-24 13:00:19,8,dataengineering,t3_1m82tna,False,
n4wg57n,"Sometimes, cloud functions are enough",Leorisar,2025-07-24 13:57:01,8,dataengineering,t3_1m82tna,False,
n4xwgho,"Python ETL on cron definitely lightest weight, just dump raw into something like a bucket or db then SQL to model it out.",TheGrapez,2025-07-24 17:57:13,5,dataengineering,t3_1m82tna,False,
n4w1as7,"Yeah, Airbyte’s cool, but if you don’t need orchestration, it’s a lot to manage. Especially for ad data. Just go for any simpler saas.",Own-Alternative-504,2025-07-24 12:37:10,3,dataengineering,t3_1m82tna,False,
n4w75mj,"I’ve been trying to write my own Node.js scripts for this, but keeping up with API changes is rough.",Known-Enthusiasm-818,2025-07-24 13:09:41,3,dataengineering,t3_1m82tna,False,
n4whb0g,I use the open-source version of Prefect on a Windows Server VM,digitalghost-dev,2025-07-24 14:02:51,2,dataengineering,t3_1m82tna,False,
n4wnbkb,"I don't think it gets easier than azure data factory. cheap, reliable, easy to use with tons of documentation out there.custom code is obviously cheaper if you have infra to run it but code is also always a liability and inherently more complex than any gui which specializes on something",vikster1,2025-07-24 14:31:57,2,dataengineering,t3_1m82tna,False,
n5rcf9k,"If we’re talking about the future of data engineering, it’s worth first asking: *why does it exist at all?*Originally, businesses needed someone to get them data for decision-making. First came BI developers/ETL engineers, they built warehouses and reports so analysts could do their work. Later, data analysts became more self-serve and focused on interpreting the past. Then data science took off, using that historical data to predict the future.Both analysts and scientists quickly ran into the same problem: clean, reliable, well-structured data was hard to come by. That’s when the modern data engineer role emerged, not just to build infra, but to make data usable at scale.Early DE work was infra-heavy, but as platforms matured (Databricks, GCP, Azure, Snowflake), more of the plumbing became automated. That doesn’t mean the job is going away, it means the focus shifts. You spend less time reinventing connectors and clusters, more time on things like modeling, scalability, governance, security, cost optimization, and integrating multiple data sources into a coherent system.This is also where analytics engineers come in, they work closer to the business, doing a lot of SQL/dbt modeling and BI integration. In small teams, AEs might cover most data needs; in bigger orgs, DEs still handle the scale, complexity, streaming, and compliance side.If anything, the “easy” DE tasks are disappearing, which makes deep skills more valuable:* Real-time pipelines (Kafka, Pub/Sub, Flink)* Data contracts, governance, compliance* Multi-cloud / cross-platform integration* ML data pipelines & feature stores* Performance and cost tuning at scaleI wouldn’t say DE is shrinking, it’s just changing shape. The safest way to future-proof yourself is to stay close to both the business context *and* the technical challenges. Platforms will keep automating, but stitching them together, governing them, and making them serve the business well? That’s still human work.",PolicyDecent,2025-07-29 08:31:35,16,dataengineering,t3_1mbypdh,False,
n5qdmzy,Lego sells molded blocks and sells the blueprints on how to make something out of those molded blocks. But you still need to understand how to read the blueprint and build the thing. Sometimes you may even want or need to free style with those blocks,bjatz,2025-07-29 03:34:32,17,dataengineering,t3_1mbypdh,False,
n5qid06,"Our job is similar to the job of people building houses. You have a set of basic components you use the to assemble the most comfortable and practical house. When you don't have to spend time on nuts and bolts, you can focus on delivering the best possible solution on time and under budget. You can even be creative by finding more uses of the data being processed.",Nekobul,2025-07-29 04:07:38,1,dataengineering,t3_1mbypdh,False,
n5qz5n9,"Some roles in companies without big data or specific needs are and will be more and more just maintenance/monitoring and business then creators.A bunch of companies and industries will still have needs to create custom pipelines, use cutting edge tech etc.It's still a good idea to understand what it means to talk to stakeholders and drive impact, but if you want to be a creator, in the era of AI, I believe we're still going to be very relevant, we just need to better understand the skillset needed",dorianganessa,2025-07-29 06:25:42,1,dataengineering,t3_1mbypdh,False,
n5sx3xp,"If companies adopt to drag and drop ETL tools like Talend, then the DE field will hold no value as you're only going to get bad quality DE's. Our team used Talend at Air Canada and it's a horrible tool. The decision was taken by some non-technical folks and the technical team faced the issue with the tool.",69odysseus,2025-07-29 14:54:36,1,dataengineering,t3_1mbypdh,False,
n5u09o1,"Overall we are getting more efficient but i would not call it plug and play. Internal apis etc will never go away and this kind of boring work will get automated.what is different this time is that the ""block"" you plug is a ""workflow"", or an automation specialised at making that block as needed quickly from your instruction. so perhaps it's ""converse, plug, play""there is incentive to automate the easy and time consuming stuff so that will go away sooner.you can use the extra time to upskill - you will also be able to do that faster and farther with LLMs.",Thinker_Assignment,2025-07-29 17:55:03,1,dataengineering,t3_1mbypdh,False,
n5szsel,"Although the excessive bolding isn't my style, I think this post is spot on. I'd include AI/LLM stuff in the skillset as well. It's one of the reasons, the easier work is getting even easier *and* it'll change how ETL is done even if only by assisted coding or AI systems coming into DE scope.",ProfessorNoPuede,2025-07-29 15:07:16,3,dataengineering,t1_n5rcf9k,False,
n5w1dzn,"Building nice things with Lego is a skill, especially when you have so many options and requirements.The real trick, though, is being able to build pieces of totally-custom work to fit with the other Lego pieces. I've known many a GUI tool power user who have had their tech escapades fully halted by needing to write a few lines of bespoke code.",JJ3qnkpK,2025-07-29 23:54:44,1,dataengineering,t1_n5qdmzy,False,
n4p5054,What is the end goal? Data engineers at banks dont need a CFA,shadow_moon45,2025-07-23 12:02:24,21,dataengineering,t3_1m73v8c,False,
n4ry6m9,"I used to work at one of the biggest financial institutions (3 trillion+ AUM). You don’t need to be a CFA and none of the technical people had one. One technical project manager I worked with was pursuing one, but he left before he finished it.The reality is CFA is an extremely difficult certification, each level has a sub 50% pass rate and the only reason you should pursue one is if you want to become a person who professionally is allowed to give investment advice or directly manage a portfolio.The technical problems we solve don’t require that intimate knowledge of investment vehicles and financial planning, so anyone hiring for technical positions would far value technical aptitude over whatever CFA would bring to the table. Even people who worked closer to the business side (product management, business systems analysis) didn’t have CFAs. Some management did, C levels definitely had it, except for technical C-suite who held PhDs instead.Imo spend your time on something else, and working at a place like that is really not as difficult as you expect, but your best path in would be going to a good school, doing well, interviewing well and living nearby. And I really found the work soul draining, you work to make rich people richer and have to wear a tie every day. People there drink heavily after work too. A 10 beer night after work was pretty normal every day. My liver definitely could not handle it today.",Pandapoopums,2025-07-23 20:11:11,6,dataengineering,t3_1m73v8c,False,
n4pitgu,"no that's really stupid, CFA is for a whole different thing.if you want more accounting/finance knowledge, you can take a look at IMA CMA, but that's till pointless.you can go for a PhD in stats and going full quant (unlikely)you bet bet is just having realistic expectation and gaining domain expertise in financial services companies.also bain is mainly consulting, even bain capital is different, you can go for ivy league MBA if you really want then go for MBB job, but again, that's jut directionless thinking, those companies aren't the end goal, just think about what you want then take it from there.",BigMickDo,2025-07-23 13:21:52,9,dataengineering,t3_1m73v8c,False,
n4ojd2q,"Feom my experience of 7 years in a large financial institution ($300b FUM), the only analysts that had financial degrees are those that worked in the investment teams and their role was purely market analysis. When they needed a solution they engaged non-financial system analyst, architects, and DE's to build the system.",MachineParadox,2025-07-23 09:07:54,6,dataengineering,t3_1m73v8c,False,
n4pnoxm,Quant. Have a look at the the r/quant or r/algotrading. I have done a couple of side projects on it and the surrounding topics are much more advanced vs what I face in my day to day work. I wish I had more time to develop on those,Mark_Collins,2025-07-23 13:47:34,2,dataengineering,t3_1m73v8c,False,
n4utavn,You won't get the credential without finance work experience even if you pass all the exams. To go work as a DE at those financial services companies you don't need a CFA and nobody will care that you have one.,fomoz,2025-07-24 06:33:19,2,dataengineering,t3_1m73v8c,False,
n4qxjvc,"as a fresher, how to get a job as a data engineer ? tried and tired",Plenty-Hamster-7003,2025-07-23 17:21:29,2,dataengineering,t3_1m73v8c,False,
n4sjjrp,"Nice! CFA level 1 here with some good amount of experience in data.Personally, I loved what I learned in level 1, but I have not been able to (a) leverage it as core cause of getting DE roles or projects; or (b) reuse what I learned in CFA for significant advantage in DE.Notwithstanding, I found CFA to be mind opener in terms of how I analyse businesses (even my own workplace), understand what exactly may be the reason business is acting the way it is, and connect with business at better levelI believe that both are good but helps in different areas.CFA could help you with skills of how you assess value of a company and decisions (perhaps better than 99.9% of colleagues and other so called engineers) But at the same time, engineering could help you with design, build, maintain something valuable One cool direction could be your own startup perhaps?",specter_000,2025-07-23 21:53:28,1,dataengineering,t3_1m73v8c,False,
n4uep2z,I have a very similar background and interest to you (almost thought I was reading myOwn post for a min) but CFA is a big commitment and it’s useful for a career pivot . But I’m sure there are other ways to enrich ur finance knowledge and showcase it. For me I’m contemplating a MBA after I get a couple more years experience under my belt.,epic-growth_,2025-07-24 04:31:58,1,dataengineering,t3_1m73v8c,False,
n4vudje,"Great question. A lot of folks in data look to deepen their finance knowledge, but the CFA might not be the most direct route if your goal is to stay in data engineering.CFA is a serious time and energy investment. It’s incredibly valuable if you’re aiming to become a portfolio manager or financial analyst who makes investment decisions—but for a data engineer, the overlap is limited. Most technical roles at places like Citi, JPMorgan, or Bain don’t require or expect a CFA. What they *do* value is domain familiarity: understanding how financial data works, how to build pipelines for it, and how to surface insights that support the business.A more practical route might be building out your finance knowledge in parallel with your engineering work. Things like:* Learning how to wrangle financial data (from market feeds, statements, or transactions)* Building dashboards for KPIs like revenue, risk, or portfolio performance* Working with time-series forecasting or valuation modelsThere’s strong demand for data engineers with finance context—it’s just more about hands-on skills than credentials. If you're interested, we’ve got some finance-focused tracks that lean technical: Python for Finance, Financial Modeling in Excel, and Financial Analysis in Power BI. They can give you the right foundation without going all-in on CFA.That said, if you’re considering a career shift toward investment roles or product strategy, the CFA might be worth it—but it’s rarely a game-changer on the engineering side.",DataCamp,2025-07-24 11:54:10,1,dataengineering,t3_1m73v8c,False,
n4x9ll8,"This is the story of how I spent a year making the world's fastest Parquet loader in JavaScript. The goal:* Make a faster, more interactive viewer for AI datasets (which are mostly parquet format)* Simplify the stack by doing everything from the browser (no backend)TLDR: My open-source library Hyparquet can load a parquet file from S3 in 155ms... which would take 3466ms in duckdb-wasm for the same file.",dbplatypii,2025-07-24 16:14:34,8,dataengineering,t3_1m88nej,True,
n4pc6a2,"I don't have any advice, I just want to say thank you for curing my imposter syndrome for the day/week/possibly year.",ratczar,2025-07-23 12:45:43,180,dataengineering,t3_1m77ztz,False,
n4pe7ip,How did you convince this company you had any idea what you were talking about?Enjoy collecting the paycheck for the brief period you're employed with them,Pillowtalkingcandle,2025-07-23 12:57:04,154,dataengineering,t3_1m77ztz,False,
n4pn6zs,"I've done between 150 and 200 of these animals. The process is very similar regardless of the tools. Let me give you the high points. The goal here is to make sure you accomplish something, have a defined finish line and don't just resell them back the same used car they were driving with a new coat of paint.1. Make sure there is total agreement as to WHY you are doing this. You need this before you use any brain cells on the technical or tools side of the house. This needs to be in writing and preferably signed off by all stakeholders. None of these reasons will be technical. They will all be business oriented. This step needs to be very well documented and agreed on. Don't let anyone push you to rush this one. I usually take 3-4 weeks for this. Sometimes it takes longer. These are all of your project success criteria. Why was a decision to replicate what you already have made? The longest path to anywhere is a shortcut.2. Now that you have that, figure out WHAT they don't have that they need. Every single one of these needs to tie back to a WHY. If it doesn't tie back to one, discard it or update the WHYs and get sign off again. I'm talking reports, dashboards, messaging, etc. Do not start coding yet. This is also where to start to identify if you have the data to achieve these items. Don't limit yourself to the current state of affairs. I cannot emphasize how important it is to tie these back to WHY items. ""Because we've always had them"" is not a reason. Validate existing data products to see if they are sufficient or even needed. This is where you start to clean house on all the crap that data warehouses collect. This stage will also start to get you thinking about the relationships between the types of data. Not a data model, but a bit higher than that in conception.Nothing up to now has been technical but these are by far the most important parts of the projects. It will be very tempting to jump into the weeds, don't do it. Your post already suggests you are starting at the wrong place.3. Now you can start to design the data warehouse. I would start with the data model. Figure out what type of model you need. Don't take what is already there unless it can be heavily justified. An operational data store is not the same as a data warehouse. You don't get too many opportunities to do this in any one company. Throw away all of those marketing terms. They won't help you. A traditional three tier DW has never steered me wrong. Activities, like data cleansing and data standardization, tend to happen as you move the data from one tier to the next. Stage is used for landing data. I tend to make my core in 3NF and any data products (stars, materialized views, etc.) in the semantic layer. You do not need to have everything built out before you start using it but do have as much as possible planned out and written down. Generate regular deliverables to the business and be able to show how they address the business needs you identified in step one. If they can't be tied back, ask yourself why you are building them. This is a VERY high description of how you refactor or initially design a data warehouse. It may seem overwhelming but just break it down into chunks and always be thinking about the future. These things stay around a long time.",marketlurker,2025-07-23 13:45:01,74,dataengineering,t3_1m77ztz,False,
n4pg1r5,"“The management wants to talk to data using natural language.”Oh you’re so cooked, time to make everything a GPT wrapper and hope it continues to trick them lmao",SupaWillis,2025-07-23 13:07:08,72,dataengineering,t3_1m77ztz,False,
n4pk3sa,"As someone who had to do this for the first time about 6 months ago:- if your data volumes are small and you already have postgres set up as a warehouse, stick with it for now, it's probably fine- don't worry about an orchestrator yet if your views are working ok. Get your view definitions under version control on GitHub then use GitHub actions to push them to postgres when you make updates. If performance starts to become an issue, then look into an orchestrator as you might need to start materialising these into actual tables.- make sure your view definitions are under version control. Look into dbt to make this easier to manage.- on data viz, sure you can use tableau but I personally have found it a bit clunky when I've used it in the past and it can get very expensive. Recently started using Sigma computing - less pretty dashboards but I think way easier to use. But honestly if you use one of the usual suspects (Tableau, Power BI etc) management can't really blame you. I don't really know anything about Kibana but if that's working for you why reinvent?- on natural language querying - your job on this is to NOT implement anything and find a diplomatic way of telling management it's a bad idea. If they insist you try it, look at setting up AI agents where you can constrain their behavior to running queries you predefine, and prompt it to say 'i don't know' if non technical users stray out of those guardrails. I know the Google genai and openai APIs both have functionality to do this kind of workflow.Good luck",Psychological-Suit-5,2025-07-23 13:28:42,40,dataengineering,t3_1m77ztz,False,
n4pzdn3,> I claimed that I can revamp the whole architecture without any issues.:face_with_tears_of_joy:,DynamicCast,2025-07-23 14:44:57,22,dataengineering,t3_1m77ztz,False,
n4pua97,You were hired as a data architect and have essentially 0 experience? Good luck.,Peppper,2025-07-23 14:20:38,16,dataengineering,t3_1m77ztz,False,
n4puezf,Lol so you lied about your skills and you’re asking reddit to do your job for you?,SquarePleasant9538,2025-07-23 14:21:16,8,dataengineering,t3_1m77ztz,False,
n4q1mvi,“How do I talk to data using natural language”Good luck,jadenx022,2025-07-23 14:55:21,12,dataengineering,t3_1m77ztz,False,
n4ppe9v,So you want us to do your work for you?,Admirable-Track-9079,2025-07-23 13:56:15,15,dataengineering,t3_1m77ztz,False,
n5644c9,"Here's a couple of questions/thoughts I have for you that I've been asking myself as well (looking to modernize a bit too)* I assume loads are by customer and inserted into their own datasets* How many people are on your team?* Who will be in charge of maitaining the stack and making sure it runs as expected?* Depending on your workload, why PySpark over SQL? That's one more layer of complexity that may or may not be required.* You may be able to batch often enough to be real-time enough for the business without streaming (they need to define real-time)* We're looking at Prefect more than Airflow, especially the cloud version because it's fairly cheap for our needs and having the local worker is easy to setup. We are not planning on using PySpark though, probably sqlMesh or something in thata category.",meatmick,2025-07-25 22:32:32,10,dataengineering,t3_1m9c42u,False,
n58nfbe,"You want to simplify things, not make them more complex. You have too many unnecessary parts and tools. Keep it as simple as possible, don't need airflow and pyspark for this amount of data.",Demistr,2025-07-26 09:50:47,10,dataengineering,t3_1m9c42u,False,
n57zy78,"You should have a look to duckdb for your pipelines it can attach a pg database and it's very fast, easy and efficient.",GeneralFlight2313,2025-07-26 06:03:59,6,dataengineering,t3_1m9c42u,False,
n5eoomx,"Disclaimer: co-founder of [Bruin](https://getbruin.com) here.The setup you defined does sound fun, but also very complex. Not sure how big the team is but it sounds like a lot of stuff to glue together and maintain.I have quite a bit of experience working with multi-tenant data architecture, and almost always they benefitted significantly from shared larger data warehouses rather than per-customer instance, so I suggest centralizing. Down the line some new usecases will require cross-client insights, some new developments will benefit all the customers at once, and you'll thank yourself.In terms of the architecture, it sounds like SQL-only stuff might not fit the bill here. I would suggest:- land the data in your dwh somehow- run transformations in SQL as much as possible, go with python where needed.- stay off of Spark, I don't see any benefit here for you, it is a complicated piece of software that is not even modern at this point.For individual pieces, you can either go bit by bit, e.g. one tool for ingestion, another for transformation, orchestration, etc. There are quite a lot of good alternatives, e.g. Fivetran + dbt + airflow. I suggest taking a look at [ingestr](https://github.com/bruin-data/ingestr) for ingestion stuff.[Bruin CLI](https://github.com/bruin-data/bruin) could also fit the bill here since it is like dbt, but does ingestion, transformation with SQL and Python, orchestration, quality, and governance. It is open-source, you can run it anywhere you'd like.Hit me up if you'd like to chat, sounds like an interesting problem you are tackling. Good luck!",karakanb,2025-07-27 09:47:38,3,dataengineering,t3_1m9c42u,False,
n56qbz4,"I forgot to ask, is there a benefit to merging all the data in a single tenant? Will anyone be leveraging the combined data? If you need to rework everything to a new standard, make sure current dashboards keep working, as well as migrate to a completely new toolkit, it sounds like 3 people for the job will be tough.I think it may be short-sighted on my part, but our team is 2 engineers, with one being a junior. I think I'd migrate to new tools first, and then I'd look into reworking the data in a unified dataset if the need arises.",meatmick,2025-07-26 00:40:15,2,dataengineering,t3_1m9c42u,False,
n57hfiq,"You might want to check outhttps://docs.stackable.tech/home/stable/demos/jupyterhub-keycloak/ For scheduling, Airflow could be added easily.",No_Dragonfruit_2357,2025-07-26 03:35:49,2,dataengineering,t3_1m9c42u,False,
n5857ge,Why are you skeptical about dbt?,t9h3__,2025-07-26 06:52:19,2,dataengineering,t3_1m9c42u,False,
n58fvar,"I don't have an answer (we're in a similar situation so I'm reading this sub) but I'm curious about your current setup:What's the storage type of the star-schema tables on your postgres dwhs? columnar storage or row-wise?If it's row-wise, how's the performance on the biggest databases? Did you need to add lots of indexes or not?",digEmAll,2025-07-26 08:35:22,2,dataengineering,t3_1m9c42u,False,
n58x3it,"You might want to check out Estuary Flow. It supports CDC from Postgres and other sources, works for both batch and streaming, and is self-hostable. It could be a good fit for your stack if you're trying to stay flexible and open-source.",Which_Roof5176,2025-07-26 11:17:47,2,dataengineering,t3_1m9c42u,False,
n5ceed9,"Maybe i jumped over it, but why didnt you consider Snowflake, BigQuery or Databricks?If you do it know in postgres and Talend I am somewhat confident that the modern SQL dialects of the major 3 cloud providers will be able to deal with it too.Dbt is generally great to run tests with minimal effort and allow members to develop and prototype outside the prod environment. As others mentioned, version control included. (And you don't need to pay with dbt-core)If latency for downstream use might become an issue maybe duckdb can fix that.For ClickHouse I have heard it the other way around: quick dashboards but slow pipelines and non trivial optimizations.",t9h3__,2025-07-26 23:08:06,2,dataengineering,t3_1m9c42u,False,
n50chvj,"As a diagram aficionado, this looks very cool! Looking forward to it.",biernard,2025-07-25 01:28:27,3,dataengineering,t3_1m84kpx,False,
n4wde8y,Btw - happy to answer any questions.,parametric-ink,2025-07-24 13:42:59,1,dataengineering,t3_1m84kpx,True,
n50peko,"Appreciate it, especially from a diagram aficionado!",parametric-ink,2025-07-25 02:47:36,1,dataengineering,t1_n50chvj,True,
n4wp9rx,"Looks cool! What’s considered an object? Everything? Like an arrow, a circle, a number in the middle of the arrow?",digitalghost-dev,2025-07-24 14:41:18,2,dataengineering,t1_n4wde8y,False,
n5conu9,What does this offer that [draw.io](http://draw.io) does not offer?,materialderivative,2025-07-27 00:10:40,1,dataengineering,t1_n4wde8y,False,
n4wrwlw,"Thanks! If you're asking what things you can attach a popup to, that's pretty much everything. Arrows, shapes, text/code boxes, images/SVGs that you've dragged in. The only exception is labels on arrows (i.e. you're able to attach the popup to the whole arrow+label, but not just the label). That's actually a good point I hadn't considered though, I can see use cases where the label might be the interesting part, not necessarily the arrow itself. Thanks for the idea!",parametric-ink,2025-07-24 14:53:36,2,dataengineering,t1_n4wp9rx,True,
n5csaxd,"To my knowledge, draw.io only offers textual tooltips and show/hide layers on click. The former doesn't allow anything except text, and the latter requires writing their custom JSON event syntax. Unless I am mistaken, in which case I would love to know!",parametric-ink,2025-07-27 00:34:29,1,dataengineering,t1_n5conu9,True,
n4wsts8,I meant more along the lines of watching for the limit of objects on a diagram at once since different plans have a maximum number of objects allowed.,digitalghost-dev,2025-07-24 14:57:52,2,dataengineering,t1_n4wrwlw,False,
n4x43e4,"Gotcha, yes. For the limits, an object is essentially anything you can click and place individually with the mouse. So that'd be shapes, arrows, text boxes, etc. Arrows with labels are considered a single object, since the label is effectively a part of the same object.",parametric-ink,2025-07-24 15:49:25,1,dataengineering,t1_n4wsts8,True,
n5p6l0o,Doesn't Avro already fit this bill?,phonomir,2025-07-28 23:21:12,37,dataengineering,t3_1mbrby7,False,
n5peyxj,"Most databases are row lookup….SQL, mongo, Cassandra etc are all essentially row wise.Columnar is popular in DE/DA as most of the queries are calculations over large number of rows in a given set of columns.Typically, when you want to do analytics from your database, common wisdom is to query a duplicate of the database or have a normalized copy of it in the analytics environment.I think a row wise format sounds nice in theory, but can’t see the value in practicality. Plus intergrating with engines and the optimizations they have for columnar wouldn’t scale nicely on large data sets",Oct8-Danger,2025-07-29 00:07:23,13,dataengineering,t3_1mbrby7,False,
n5pxbpg,CSV is the mvp on open data format designed for row-oriented storage. And I'm not kidding.,Misanthropic905,2025-07-29 01:52:59,17,dataengineering,t3_1mbrby7,False,
n5p78jd,SQLite?,phonyfakeorreal,2025-07-28 23:24:45,6,dataengineering,t3_1mbrby7,False,
n5o9t4w,Microsoft just announced https://github.com/microsoft/amudai and https://github.com/vortex-data/vortex is gaining traction. Time is likely better spent on integrating these formats into existing tools/infrastructure,ReporterNervous6822,2025-07-28 20:32:43,8,dataengineering,t3_1mbrby7,False,
n5ptv1s,"What would be the advantage compared to using the open-source, widely used and integrated open-source row-oriented* databases like PostgreSQL or SQLite?",sib_n,2025-07-29 01:32:58,3,dataengineering,t3_1mbrby7,False,
n5rty2a,"If you are looking for simple, text-based options at smaller scale or lower performance needs, NL-JSON is a simple option as well. Not space efficient but useful for complex data models (eg nested objects, arrays) in ways where CSV isn’t great. If performance or space efficiency needs are greater, agree w Avro.",nagoo,2025-07-29 11:10:03,1,dataengineering,t3_1mbrby7,False,
n5s3tzg,But sir you can just query JSON lol,cranberry19,2025-07-29 12:18:33,1,dataengineering,t3_1mbrby7,False,
n5t9jg0,"we’ve optimized so much around columnar formats for analytics, but row-oriented workloads still dominate in OLTP and mixed-use cases. An open, efficient row format could open the door to more interoperability across engines like Postgres, MySQL, etc.That said, adoption is the real hurdle vendors would need deep incentives to support it natively. Maybe a middle ground could be Iceberg or similar table formats evolving to abstract both row and column storage under a unified access layer.",eb0373284,2025-07-29 15:52:53,1,dataengineering,t3_1mbrby7,False,
n5psjhd,"I was going to say, parquet is columnar. Avro is rowstore",wytesmurf,2025-07-29 01:25:15,17,dataengineering,t1_n5p6l0o,False,
n5kkr9v,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 07:39:49,1,dataengineering,t3_1mb9y5s,False,moderator
n5kvzo8,"There's plenty of publicly available datasets. Think up a project using them that ends in a nice Power BI report on your own website.Build the project. You'll learn a lot.Drop the URL into your resume along with a couple of sentences about it. It'll then be easy and interesting for prospective employers to discuss it with you. If you just post a link to GitHub, then that's a bit like homework.",salinungatha,2025-07-28 09:29:52,2,dataengineering,t3_1mb9y5s,False,
n5kzki6,With your existing power bi skills this should not be a problem. ask yourself about the non aggregated source of the data used in building the reports.Then once that's figured out ask yourself for corporate dashboard the business process that produced that data. It's the business process that will then scope your data engineering learning project.,xahkz,2025-07-28 10:03:16,2,dataengineering,t3_1mb9y5s,False,
n4trzs0,Portfolios never stop being useful—ADF/Databricks skills speak louder than years. Flaunt real projects to cut through HR noise.,EffectiveClient5080,2025-07-24 02:01:31,8,dataengineering,t3_1m7rh7o,False,
n4tqdfv,"That's tough, have you had any feedback on why you're not being short-listed?",Dry-Introduction9904,2025-07-24 01:52:09,2,dataengineering,t3_1m7rh7o,False,
n4vkld9,What location are you based in? I see decent job openings on LinkedIn for Ssis mssql in India specifically Mumbai Pune for your exp,Plane_Bid_6994,2025-07-24 10:44:04,2,dataengineering,t3_1m7rh7o,False,
n4voanf,"If it's about passing the initial recruiter screen, having a portfolio probably won't help much since it's mostly about the content of your resume. Does it contain all the relevant keywords, is in an easily parsable format for ATS, and contains bullet points showing impact?Having a portfolio might be good for a hiring manager or technical interview but from my understanding shouldn't really affect the initial screen.",Sheensta,2025-07-24 11:12:02,2,dataengineering,t3_1m7rh7o,False,
n4vt82d,"I am the owner of an airflow provider package, I have it linked on my resume. I bring it up in interviews where the company uses airflow. Afterwards, I always go and check the clone and views count. As far as I can tell, no one has ever looked at it. That is a project closely related to what they are working on and no one cares, I can't imagine anyone looks at anyone's projects",Brief-Knowledge-629,2025-07-24 11:46:37,2,dataengineering,t3_1m7rh7o,False,
n4yqoa0,"Use to conduct interviews for a massive contractor. HR Screening would never look at homepages or projects it's all Resume. Interviewers were FTEs doing data engineering so we'd probably scan the resume, projects, git repos in < 15min before the call. Some projects were referred to after the interview. But I wouldn't expect a senior position to provide projects, generally our work is owned by the companies and repositories are private; and we've stopped doing ""presentable"" projects outside of work. I have multiple friends in various industries looking for work, including a previously staff backend engineer from Instagram and they're all having a hard time. I know that doesn't help but looking for work is soul crushing, and legally it's in the companies best interest to give you zero feedback on why they went with someone else. Also if you don't mind shorter projects (still FTE) but 3-6mo projects don't skip applying for the major cloud vendor PSO companies. At those companies ""YOU"" are the product so they can often be hiring when others aren't. Hope something comes your way soon!",FridayPush,2025-07-24 20:19:27,2,dataengineering,t3_1m7rh7o,False,
n4u5m2w,Thanks for the tip. I try to make that obvious on my resume.,hijkblck93,2025-07-24 03:26:35,1,dataengineering,t1_n4trzs0,True,
n4u5o2k,"Unfortunately no. I’d love some feedback, honestly.",hijkblck93,2025-07-24 03:26:58,1,dataengineering,t1_n4tqdfv,True,
n4vwk5v,USA,hijkblck93,2025-07-24 12:08:19,1,dataengineering,t1_n4vkld9,True,
n4vzs0g,"I think it is. I try to rewrite it using the language in the job description, and I submit it as a pdf. I try not to keyword stuff but not having much luck with the current version.",hijkblck93,2025-07-24 12:28:08,1,dataengineering,t1_n4voanf,True,
n5lyo6u,It will only get worst since there are not gatekeepers for AI.,69odysseus,2025-07-28 13:59:26,3,dataengineering,t3_1mbgri9,False,
n5m47s7,123456? That’s amazing I got the same combination on my luggage!,JimmyTango,2025-07-28 14:27:25,2,dataengineering,t3_1mbgri9,False,
n52f74g,"[dbt Core](https://github.com/dbt-labs/dbt-core) is the original open source project, written in Python.[dbt Fusion](https://github.com/dbt-labs/dbt-fusion) is an interface-compatible, optimized source-available project. It's rewritten in Rust. dbt Labs isn't super crisp on the branding, so it's hard to tell if dbt Fusion is ""just"" the engine, or if it's the engine + features to be released in dbt Cloud.dbt Cloud is a cluster of offerings around dbt Core / dbt Fusion. For years, the IDE and orchestration were the major features, but they've been accumulating features via acquisitions: Semantic Layer, Catalog, and dbt Mesh being the big ones.\*dbt Labs isn't entirely clear about what all falls under the dbt Fusion brand, but the engine is available under the",onestupidquestion,2025-07-25 11:19:40,14,dataengineering,t3_1m8v11u,False,
n52n8v3,"dbt Core is the free, open-source version you run locally (like in VS Code). dbt Cloud is the hosted platform with a web IDE, scheduling, CI/CD, and advanced features. It comes in tiers: Developer (free), Team, Enterprise, and Enterprise+. The Semantic Layer (for tools like Power BI) is only in the Enterprise tier. dbt Fusion is a new engine combining SQL and Python, available only on dbt Cloud for now. So yes, dbt Cloud is the full premium product, and the tiers decide which features you get.",eb0373284,2025-07-25 12:13:56,3,dataengineering,t3_1m8v11u,False,
n54upo5,"Hey, just wanted to give you a heads up about dbt pricing since we went through this recently.To answer your questions: dbt Cloud is the whole premium product (not just the web IDE). Developer/Team/Enterprise are all tiers within dbt Cloud, and yes, the semantic layer for PowerBI is Cloud-only. Fusion is a feature within the Cloud product.Here's the thing though: we were on the Teams plan and everything was fine until we hit 8+ people. Then dbt Sales basically forced us into Enterprise tier. The initial quote? $300/seat/month on a 3-year contract. Even after heavy negotiation we only got it down to $220/seat/month.For context, that's $26,400/year for 10 people, which feels pretty steep for what's essentially a task scheduler running on top of open-source dbt.If you're just getting started with the engineering side, I'd honestly suggest sticking with dbt Core + your own orchestration (Airflow, GitHub Actions, whatever). The semantic layer is nice, but probably not worth $20-30k/year for a small team. You could build your own metrics layer or look at alternatives for way less.Just something to keep in mind as your team grows. The jump from Teams to Enterprise pricing is brutal.",sleeper_must_awaken,2025-07-25 18:43:47,3,dataengineering,t3_1m8v11u,False,
n5lsell,"> I find myself wishing that I could write all my macros in pythonSame, and [dbt Labs have outright said that this is something they won't support](https://github.com/dbt-labs/dbt-core/pull/5274#issuecomment-1132772028) :loudly_crying_face:If you're sticking to dbt core (not cloud or fusion), I've released a package that allows you to use your own Python code in Jinja:https://github.com/billwallis/dbt-pyIt's pip installable and configured in the pyproject.toml file (currently). ```pip install dbt-py-wrap```The annoying bit is that you need to use the dbt-py command instead of dbt, so it doesn't play nicely with a lot of other external tools, but it's been working well enough in isolation for me :person_shrugging:",Bilbottom,2025-07-28 13:26:02,1,dataengineering,t3_1m8v11u,False,
n52uwx5,"Core is the legacy all python library that was OSS and is no longer developed by the company dbt. They have released a new product with a rust based engine called fusion that has a modified license to avoid other companies leveraging and reselling their work. There is supposed to be both a free cli version (registration required but no cost) and the premium version through the cloud or premium cli. Yes semantic models are gated behind the premium license. They also are sort of limited in that you can't build a full model with multiple tables, each semantic model is 1:1 with a dbt model, which is one table or view. If you use an obt data structure then you are good. If you have a star schema or something like that that you want to represent semantically then it doesn't work. We wanted to to do a PBI on top of dbt thing too, but ultimately just built a big model in PBI because it did what we needed it to. There are a few other options out there right now like Cube and Snowflake just released a few options if you use that platform. There isn't Snowflake to PBI integration yet though.[https://www.getdbt.com/blog/new-code-new-license-understanding-the-new-license-for-the-dbt-fusion-engine](https://www.getdbt.com/blog/new-code-new-license-understanding-the-new-license-for-the-dbt-fusion-engine)",Gators1992,2025-07-25 12:59:22,-1,dataengineering,t3_1m8v11u,False,
n52mvht,"In addition, dbt-fusion is their “new” product. They bought sdf https://docs.sdf.com/introduction/welcome and took their engine which is faster and give you error without the need to go to actually query the destination so it’s way faster.It’s not clear what they planned to do with DBT-core as it’s not the same product as fusion. But since they announced fusion they still work on core.Also their DBT-fusion licensing is quite complexe. It’s like you can use it for like an open source software but not too much. Not sure the community really likes what they did with this.We will see how they manage this but currently they have those 3 products (core, fusion, cloud) which they support.Their cloud thing is good to have some extra feature that they didn’t include in core like DBT mesh and catalog, but it’s quite bad for orchestration, so you pay for something you will try to orchestrate another way…. Which sucksHope that doesn’t confuse you more than you were already",Commercial_Dig2401,2025-07-25 12:11:35,5,dataengineering,t1_n52f74g,False,
n53xult,"Ok got it thank you, I didn't see a clear ""dbt Core / dbt Cloud"" split on their website so I was scratching my head.",8_Tailed_Koala,2025-07-25 16:10:03,1,dataengineering,t1_n52n8v3,True,
n53xz46,Core is no longer developed??? You mean I get excited by all those dbt linkdin posts for nothing...,8_Tailed_Koala,2025-07-25 16:10:38,2,dataengineering,t1_n52uwx5,True,
n558lok,Dbt isn't actively developing it but said something about maintenance.  I would guess someone would fork it and contine development eventually.  Other free options are stick with dbt and use their free version with the limited license or see if SQLMesh works for you.LinkedIn is a cesspit of lies that nobody should get excited about.,Gators1992,2025-07-25 19:52:14,1,dataengineering,t1_n53xz46,False,
n59y8u6,"The comment above is false. Core is still actively developed, they published a roadmap. Fusion, a new separate engine and code base from core, is free to use and source available for an unlimited number of seats. They only applied a limit to their new VS Code extension, which is only compatible with Fusion.",3dscholar,2025-07-26 15:10:13,0,dataengineering,t1_n53xz46,False,
n59f5cb,"I'll be honest, hearing yet another buzzword in the data engineering space makes me a bit skeptical. Our tech is oversaturated with buzzwords and abbreviations for no good reason.So I've read the article and I find it very interesting. I agree with many points, especially about idempotency. And I also have a few questions:1. From my experience, layered data platforms aren't made only for the sake of business. Materializing intermediate datasets with pieces of business logic can be necessary to maintain good cost/performance ratio. Especially when the data is big, and your ETL system can only handle data increments in a timely manner. At the same time, proper naming convention and an appropriate architecture (Kimball, DV) makes the data easier to navigate. Does this align with your vision, and if not, why is your way of doing things better? Or is it?2. Implement all transformations as pure functions - it makes me think you're advocating for ETL process instead of ELT (aka using compute engines like Spark for data transformations). I make this assumption, because implementing pure transformations using sql is much more tricky, and people with expertise in sql, but no expertise in OOP may struggle to do it consistently. Even tools like DBT require careful model design to achieve real idempotency. With this in mind, don't you think having all transformations as pure functions is too costly?",kotpeter,2025-07-26 13:23:01,2,dataengineering,t3_1m7j0k5,False,
n4un6yj,Interesting concept - do you have any example repos?,JadeCikayda,2025-07-24 05:40:11,1,dataengineering,t3_1m7j0k5,False,
n5oaab6,"Yes, there is a lot of misinformation in the data world. Does it need another acronym? Probably not. Especially with two 'TT' together! But to answer your questions. 1. We do create intermediate tables. Sometimes, with QA results, we just store intermediate transforms (we do almost all work in SQL). We tend not to keep those intermediate tables around unless necessary. The key idea is that a single end-to-end process governs the flow from raw data to final output. That’s the critical point. While this process may technically generate multiple intermediate layers, each additional customer-exposed layer incurs overhead in terms of time, governance, documentation, and support questions. And they are rarely used. So the real question becomes: why maintain extra layers at all? 2. We mostly do SQL, with occasional Python when we have to ingest some strange format. It's mostly ELT. So are all our functions pure? No. We tend to group code together to perform tasks such as creating a dimension. If we create intermediate tables, we clean them up immediately at the end (and the start, checking to see if they are already present before deleting them). So it 'pure' without using SQL language, supported but replaced with a culture and code review. I think that tribal knowledge without language support makes it more challenging.",botswana99,2025-07-28 20:34:57,1,dataengineering,t1_n59f5cb,True,
n4yrgsy,"No, we use our proprietary dataops orchestration tool to do all this work. So there’s no open source examples. We do have two open source products on the DataKitchen GitHub Repo. One will write data quality test for you and the other will observe all the steps in the production process. Hope this helps.",botswana99,2025-07-24 20:23:08,1,dataengineering,t1_n4un6yj,True,
n51vt60,I think Databricks has pretty good guidelines on this somewhere. Having one metastore with both kinds of catalogs makes it possible for you to have a dev workspace in which you gran only read-only access to prod tables so you can run tests on them without running the risk of altering production data,SSttrruupppp11,2025-07-25 08:29:15,11,dataengineering,t3_1m8tdl6,False,
n52ctmb,"It's one metastore per region, so if you wanted to go with 2 metastore it would need to be in two different cloud regions.dev and prod catalog with different workspaces is what people usually do, you can remove the permissions or even not bind a catalog to a workspace, so you can isolate the environments pretty easy",msdsc2,2025-07-25 11:01:52,4,dataengineering,t3_1m8tdl6,False,
n52i8li,You can have one metastore and multiple workspaces. Create prod and dev workspaces and then then bind individual catalogs within the metastore to each workspace based on which workspace that data belongs to.https://docs.databricks.com/gcp/en/catalogs/binding,jesreson,2025-07-25 11:41:26,4,dataengineering,t3_1m8tdl6,False,
n52mzg8,"The safer and more future-proof approach is one metastore per environment (e.g., dev, staging, prod). It gives you clear isolation, better access control, and avoids the risk of accidental writes to prod from a dev job. While managing multiple metastores might seem like extra overhead, it aligns better with CI/CD best practices and Unity Catalog’s long-term roadmap.",eb0373284,2025-07-25 12:12:17,-1,dataengineering,t3_1m8tdl6,False,
n520jxe,What about the security aspect of exposing prod data in a lower environment?,elotrovert,2025-07-25 09:14:59,2,dataengineering,t1_n51vt60,False,
n5206yg,This is the understanding I have from the documentation and reading around but I wonder how it plays out as the environment scales up. I imagine keeping everything in one region(and so in one metastore) is good from a security and ingress/egress perspective BUT from a data code perspective it feels odd (wrong) that I need to parameterise my catalog/database name in my sql/python code. Maybe it’s just my mindset which comes from having identical databases across servers and only having to parameterise names at cicd deployment time.,dataferrett,2025-07-25 09:11:32,1,dataengineering,t1_n51vt60,True,
n5f1ccw,"Or multiple accounts, but they don't yet have centralized billing.",Leading-Inspector544,2025-07-27 11:41:45,1,dataengineering,t1_n52ctmb,False,
n523seq,"How is that a security risk?Databricks offers many protections for access to sensitive data, of course those should be applied in both dev and prd workspaces.",SSttrruupppp11,2025-07-25 09:45:37,4,dataengineering,t1_n520jxe,False,
n523nxt,I'd imagines the test user would receive a cleaned up version of the data due to stuff like row and column level masking/flitering.,psychuil,2025-07-25 09:44:30,2,dataengineering,t1_n520jxe,False,
n52d8hc,"Yeah you will need to use parameters, databricks asset bundles can help with this, but even so sometimes you will need to put catalog parameters in the code",msdsc2,2025-07-25 11:05:01,4,dataengineering,t1_n5206yg,False,
n558la8,I know you guys hate me. But these guys are worse,eczachly,2025-07-25 19:52:11,2,dataengineering,t3_1m8rhbs,False,
n58bbo5,What is this DE academy?,sergeant14016,2025-07-26 07:50:34,1,dataengineering,t3_1m8rhbs,False,
n56nvku,I’m doing your data engineer community boot camp and I’m loving it so far. It has really helped me so much.Thank you so much Zach!OP try out Zach’s boot camps. They’re awesome,halcyon_10,2025-07-26 00:25:27,2,dataengineering,t1_n558la8,False,
n58ylgw,"Bro nobody hates you. I think you're absolutely a lunatic. You're my kind of lunatic, but absolutely a lunatic. I think you know what you know. As a positive you do know how big faang companies are doing stuff. I do think you haven't had to be scrappy and work with constrained resources like the majority of shops do.",flatulent1,2025-07-26 11:29:53,2,dataengineering,t1_n558la8,False,
n5rtbaa,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-29 11:05:08,1,dataengineering,t3_1mc8gpz,False,moderator
n5uu14f,Obligatory: [https://martinfowler.com/bliki/TwoHardThings.html](https://martinfowler.com/bliki/TwoHardThings.html),dbrownems,2025-07-29 20:14:39,5,dataengineering,t3_1mc8gpz,False,
n5vfaog,Can you give examples of things in the gold layer that are neither facts nor dimensions? That smells like a modelling problem to me. There is nothing else in a dimensional modelling context.,sjcuthbertson,2025-07-29 21:56:41,1,dataengineering,t3_1mc8gpz,False,
n5uvclp,Haha true! So how do you deal with this?,Quantumizera,2025-07-29 20:20:48,1,dataengineering,t1_n5uu14f,True,
n5lb2wt,How do you feel about the SQL graph extension? I.e. https://duckdb.org/community_extensions/extensions/duckpgq.htmlSome more thoughts: One issue are the different and poorly compatible eco systems like RDF Graphs and Property Graphs. https://www.semantic-web-journal.net/content/onegraph-vision-challenges-breaking-graph-model-lock-0Another issue are the schema languages for property graphs https://arxiv.org/abs/1909.04881Another issue is that you imo probably ultimately don’t want to put a graph in a database/lakehouse but generate it based on rules and your data.One more issue is that you might end up wanting to use hypergraphs or something like that. There’s a lot of semi related stuff like http://typedb.com or https://egraphs-good.github.io,Operadic,2025-07-28 11:37:42,4,dataengineering,t3_1mbbnlf,False,
n5ls8z4,"For me the main missing part is a storage standard. Like yes, we can read graph with Kuzu, GraphFrames or DuckDB from tables by creating it manually... But for doing that we need to know all the kinds of relations, etc. I see that GraphAr may really fill the gap. We have already a lot of tools, would be nice to have a way to prepare my graph from big tables on spark with graphframes, do deduplication, projection, etc.; save it to the standradazed format and after that read by in-memory tool like DuckDB or Kuzu. Something like Iceberg that connects different tools by one standard, but for graphs. And yes, GraphAr is about Property Graph, not RDF.",ssinchenko,2025-07-28 13:25:10,2,dataengineering,t1_n5lb2wt,True,
n55ahjm,"I have a relatively useless piece of advice that I like to share, which is this:The trick to query optimization is to first understand the query, then try to think of the best way to execute this query, and then compare this to what the query planner made. The goal is to understand why you and the query planner disagree so you can fix that.",scataco,2025-07-25 20:01:28,2,dataengineering,t3_1m858cr,False,
n52xnpf,"Are you interested in transitioning into Data Engineering? Read our community guide: https://dataengineering.wiki/FAQ/How+can+I+transition+into+Data+Engineering*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-25 13:14:38,1,dataengineering,t3_1m8yuyv,False,moderator
n54s7gu,Git,DeezNeezuts,2025-07-25 18:31:39,24,dataengineering,t3_1m8yuyv,False,
n560two,You are on the right track. They could use Azure Data Studio (I know it is on a deprecation path - VS Code is the replacement) and there you have access to db and git repos. Are the data analysts wanting to run dbt or sqlmesh? This would be the next step.,Illustrious-Welder11,2025-07-25 22:14:20,1,dataengineering,t3_1m8yuyv,False,
n5646mr,"We're doing something similar right now Git Bash is the easiest way once you get to know it, otherwise stick with the DevOps UI with a very small group of approvers that review the code before approving and completing the PR.",seiffer55,2025-07-25 22:32:53,1,dataengineering,t3_1m8yuyv,False,
n56awdn,"The file comparison features of Azure DevOps are good. Use git, and you can do PRs if you have prod and non-prod environments (you mentioned that these are analysts), and are doing promotions of this kind of code.This works fine. Sql files are just files.",Eastern-Manner-1640,2025-07-25 23:10:40,1,dataengineering,t3_1m8yuyv,False,
n56fb6c,"What I have done is just make a separate folder in my project directory, whether it be python or terraform project and call it ‘sql’ and just throw the sql files in there and then use git. Your CI/CD pipelines shouldn’t be looking or doing anything to this folder so it should be fine",benwithvees,2025-07-25 23:35:28,1,dataengineering,t3_1m8yuyv,False,
n5805ps,Main idea is to get used to use physical files for your queries (maybe paired with auto-save features) instead of those worksheete that some IDE-s have. Once you have the files it’s very easy to version them,tiny-violin-,2025-07-26 06:05:54,1,dataengineering,t3_1m8yuyv,False,
n5q4vjm,I use... [https://www.ssmstoolspack.com/Features](https://www.ssmstoolspack.com/Features) which stores the adhoc queries I run.For everything else we dump the objects to text and commit them to Git.,mdzmdz,2025-07-29 02:37:51,1,dataengineering,t3_1m8yuyv,False,
n56ajva,"Just want to say, VS Code is such a poor replacement in many ways. I cant comprehend how MS have SSMS, VS Code & ADS and all of them have amazing features, but none of them have all those features.Really need jupyter native SQL exec, graph formatting of output cells, agent jobs history & setup.None of the extensions get this right.",umognog,2025-07-25 23:08:42,6,dataengineering,t1_n560two,False,
n59p65f,"With the end of the file nam containing the date\_time of completion. For a given stem, alphabetical sorting will preserve the version order.",BarryDeCicco,2025-07-26 14:21:30,1,dataengineering,t1_n56fb6c,False,
n4w8nsg,https://learn.microsoft.com/en-us/sql/samples/adventureworks-install-configure?view=sql-server-ver17&tabs=ssms,theporterhaus,2025-07-24 13:17:46,5,dataengineering,t3_1m82gsw,False,
n53t0uc,I tried it. No stored procedures at all.,SquarePleasant9538,2025-07-25 15:47:34,1,dataengineering,t1_n4w8nsg,True,
n4s02w8,"For clarity, please could you explain which UI you are referring to for entering metadata (a link to the relevant documentation would be easiest)?",NW1969,2025-07-23 20:19:58,1,dataengineering,t3_1m7gzmh,False,
n4trpmb,If it means a column descriptions that you can input In GUI then I think you could use other tools like terraform or dbt so role that attached to it can manipulate the objects and updates them on analysts behalf.,kaixza,2025-07-24 01:59:53,1,dataengineering,t3_1m7gzmh,False,
n4uqjsj,I think he’s talking about adding descriptions of columns/semantic layers in the table view,JimmyTango,2025-07-24 06:08:51,1,dataengineering,t1_n4s02w8,False,
n5m5pl3,"In ""Snowsight"" you can go into ""Table Details"" and create/edit table and view ""descriptions"". There is an option to click the ""Generate with Cortext"" button which of course uses the table's data to deduce an LLM-generated description. At the column level you can use Cortext to generate descriptions of every column on a table in one swoop (which our power users love). Similarly, there is a nearby UI to generate the name/value pairs known as ""Metadata Tags"" such as ""Requestor"", ""Owner"" (or whatever object tags your business deems necessary). Under the hood, Snowsight is using ALTER TABLE to create and alter these descriptions and tags which means that the user-at-hand needs a role with OWNERSHIP of the involved objects. However, passing around OWNERSHIP privs is very challenging and frightening to us. Frankly, I'm surprised Snowflake created these slick UIs without bothering to create a new, safer METADATA\_MANAGEMENT role to go along with them.",nosebrocolli,2025-07-28 14:34:51,1,dataengineering,t1_n4s02w8,True,
n4x3ly6,We (data engineers) don't have the time or the knowledge to write metadata on our analysts behalf. We certainly won't scale up to the amount of data coming in. We need them to write and be responsible for their own metadata. We already tried a spreadsheet approach and the users vetoed it.,nosebrocolli,2025-07-24 15:47:12,1,dataengineering,t1_n4trpmb,True,
n5mi9ds,"If you ""GRANT APPLY TAGS ON ACCOUNT"" or ""GRANT APPLY ON TAG "" to a role that the user has, does this not work?",NW1969,2025-07-28 15:35:03,1,dataengineering,t1_n5m5pl3,False,
n5043u7,"oh no, I mean the one who writes them is not you, data engineers. Instead data analysts or someone who is responsible for the metadata is the one who needs to write it. I think it will be something like this:data analysts -> write metadata in dbt/terraform -> attached tools in that tools will be the one who update it.",kaixza,2025-07-25 00:39:00,1,dataengineering,t1_n4x3ly6,False,
n5cahed,Github copilot in vscode?,seph2o,2025-07-26 22:44:28,4,dataengineering,t3_1ma67b5,False,
n5cg6bf,"We've got a corporate license for Github Copilot, and I've found it to be very, very useful in asking it to explain code in local copies of repos (we have a private Github org and Copilot won't look at github.com to analyze things for us).One example which I showed my team last week was an analysis of a rules engine framework I build last year. The analysis was spot on, and included a note that what the framework implements an exclusion rather than inclusion rule. Which I knew, but had forgotten to document.We've got other repos where we've asked Copilot to document pieces of it, and it's been reasonably successful - worst case it was unable to do anything, usual case was that we got something to build on.",CalmTheMcFarm,2025-07-26 23:18:45,2,dataengineering,t3_1ma67b5,False,
n5dqfe2,"Use sqlglot to extract your lineage, almost trivial if you have all SQL code in 1 place.",w0ut0,2025-07-27 04:29:14,2,dataengineering,t3_1ma67b5,False,
n5cpbem,"Poorsql.com at least for formatting. One column per line. If there are now over 5,000 lines, it could use a rewrite. What we call, refactoring.",SirGreybush,2025-07-27 00:14:54,2,dataengineering,t3_1ma67b5,False,
n5d4fks,"Lineage is a stretch and you are better off mining metadata (snowflake, for instance, has amazing lineage metadata) or writing lineage at time of job run for which you may consider Openlineage standard.Views and Procs documentation are a shoe-in for AI though.",SalamanderPop,2025-07-27 01:52:55,1,dataengineering,t3_1ma67b5,False,
n5dozu3,Try deepseek. I used to ask to prepare a seq. diagram (mermaid),gdmitrii,2025-07-27 04:17:58,0,dataengineering,t3_1ma67b5,False,
n5clhpl,"I've had good experience with [elementary](https://docs.elementary-data.com/cloud/best-practices/detection-and-coverage#data-quality-dimensions-framework), and it gives you a nice dashboard (HTML), [see this](https://docs.elementary-data.com/oss/quickstart/quickstart-tests).**BUT** it is a dbt package so it runs on top of a dbt setup (you can use a dbt setup with your tables as source), not sure if it works with your stack, but worth a shot.Most tools are primarily aimed at data quality checks, pass/fail and not always focussed on profiling/reporting.Good luck! LMK how it goes.",joseph_machado,2025-07-26 23:50:43,2,dataengineering,t3_1m9nykt,False,
n58x3bu,Veeeeery old resource but have you checked [this](https://aws.amazon.com/blogs/big-data/build-an-automatic-data-profiling-and-reporting-solution-with-amazon-emr-aws-glue-and-amazon-quicksight/)Deequ is no longer maintained but it could give you a head start?,Independent_Body_137,2025-07-26 11:17:44,1,dataengineering,t3_1m9nykt,False,
n5avxxk,"> Am I wrong to assume that a tool exists that has the capabilities described?No. Or at least kind of.I once worked with Informatica's data quality product and it supports most of what you want. And I am quite certain that other expensive data quality tools does the same.I am not entirely sure about your point 3. If the schema changes or more columns are available, *as I remember it* you get a warning/error, that something has changed in your profiling. Not the actual change I think. But again, not sure.As for point 4, it generates a report that you manually have to click on and open. Actually quite nice overview in the automatically generated reports with stats on all your metadata in your profiling. It is annoying that you have log in to a different system to see them, but you can extract the metadata through the API if you want to collect it in your regular data warehouse and do your own reports.But it is expensive. And I believe a lot of other proprietary expensive data quality tools can do the same. It is just not available in any cheap/open source way. At least to my knowledge, but would be very interested if it exists.",Gnaskefar,2025-07-26 18:04:32,1,dataengineering,t3_1m9nykt,False,
n5izmok,I’m a big fan of Pointblank (https://github.com/posit-dev/pointblank). It can do all sorts of validation (very flexibly) and it generates reports that can be passed over to others in an organization (and spur conversations about data quality). Also: you can do ad hoc data scans with the Python API or with their CLI utility. It’s really impressive stuff!I’ve been using it quite a lot for the last few months so AMA about it.,Erik-Benson,2025-07-28 00:31:34,1,dataengineering,t3_1m9nykt,False,
n58y810,"I have heard about it, never tried it though. Wouldn't want to use deprecated tools neither, our compliance guys don't like to take chances. I did notice the SparkDQ framework? Any idea if it's any good?",Kojimba228,2025-07-26 11:26:52,1,dataengineering,t1_n58x3bu,True,
n5bgo24,"Yeah, I'm really opposed to informatica (informatica cloud sucks ass) and we don't use informatica stack at all, so bothering with expensive dq from them is too much. Thanks for the info though, never thought that informatics provides any kind of decent dq reportsP.S. Now all that's left is to find an open-source one, preferably with Python support :melting_face:",Kojimba228,2025-07-26 19:56:20,1,dataengineering,t1_n5avxxk,True,
n5ko7vv,"Upon checking the docs and features provided, it does seem like a fairly decent choice.Seems like it's more integrated with Polars, which I haven't used but heard about being faster than Pandas and it seems to be less integrated with PySpark. Still, this seems to be the best tool I've seen yet. Thanks!",Kojimba228,2025-07-28 08:13:28,1,dataengineering,t1_n5izmok,True,
n5b4i3l,"No clue, I have not used it :/",Independent_Body_137,2025-07-26 18:50:08,1,dataengineering,t1_n58y810,False,
n5fisbz,"Fair, it is -after all- borderline illegal to mention Informatica in this sub, but I really don't agree, that their modern products sucks ass or similar.",Gnaskefar,2025-07-27 13:37:33,1,dataengineering,t1_n5bgo24,False,
n5lm4us,"YW! About Spark, it works currently if you pass in a Spark DF as an Ibis table. But now that Narwhals supports Spark directly, the developers of PB are going to make it so that you don’t need to use Ibis for this DF type.",Erik-Benson,2025-07-28 12:50:06,1,dataengineering,t1_n5ko7vv,False,
n574hti,"Calling it Parquet CDC is ambiguous, in first look I read it as “Change Data Capture” :grinning_face_with_sweat:Maybe it’s just me.",LoneL1on,2025-07-26 02:08:04,5,dataengineering,t3_1m92qoz,False,
n5jip6n,You are not alone!,Then_Crow6380,2025-07-28 02:31:06,1,dataengineering,t1_n574hti,False,
n4x5h12,"I don't think I've fully understood your scenario, but there is nothing at all weird about having surrogate keys that don't contribute to the grain of a fact. That's absolutely normal, plenty of examples in Kimball, even in the very early chapters IIRC. And one of the major benefits of dimensional modelling, you can snap in extra dimensions to your heart's content!So your option 1 is almost certainly the way to go.",sjcuthbertson,2025-07-24 15:55:41,3,dataengineering,t3_1m87w61,False,
n4xcwj8,"Thanks. Great advice!To clarifyOur chartfields (how we account for things) are a bunch of attributes - each one if which is its own dimension with attributes (""department"", ""account"", ""location"", etc.) These attribute values are at the grain of most of the important fact tables HOWEVER the COMBINATION of 2 of these (e.g., Department and Location) has its OWN properties that aren't the property of just those departments alone.So lets say fact row 1 is for Department A and Location 100. That fact row has Fk to dimensions for Department A and Location 100. HOWEVER Department A and Location 100 TOGETHER also have a special property (e.g., Managed by Dave).",PencilBoy99,2025-07-24 16:29:41,2,dataengineering,t1_n4x5h12,True,
n4xvtw7,You could just make a 3rd dimension whose keys is just the combo of the two keys to the original dimensions or add a 3rd dimension and its key to the fact. Both are valid approaches assuming any fact which need to link to the combined dimension will always have links to the original 2 dimensions,Grovbolle,2025-07-24 17:54:22,3,dataengineering,t1_n4xcwj8,False,
n4ywweu,"I can't be sure, but it feels like you're thinking too much like your source system(s) here, and not quite applying dimensional modelling principles fully. It'd be impossible to make a full determination of the best way to model this without knowing the data much more intimately than I ever could via Reddit. However, my first reaction to your department/location example, is that if there are (relevant) properties of the intersection between these, they are not two separate dimensions. They are one dimension. Are you familiar with the concept of Junk dimensions? That might be what's relevant here. Combining Department and Location would be a pretty typical junk scenario, assuming you don't have many thousands of rows for either.",sjcuthbertson,2025-07-24 20:48:29,2,dataengineering,t1_n4xcwj8,False,
n4z0wfo,I get what you're saying. A junk dimension might be right. But they are kind of one dimension - and making it one dimension would still let users filter on the properties of just one part,PencilBoy99,2025-07-24 21:07:25,1,dataengineering,t1_n4ywweu,True,
n4w99jv,"Hi u/tech-man-ua I don't have extensive experience with Liquibase, but I may be able to help, drawing on my general experience with databases and Flyway. 1. Talking about your example, I would split them up, keeping one change per changeset. Also, createTable and createIndex should not be considered a single operation. It is very common to create indexes sometime after the table is created. e.g.. Create the table, ingest the data, then create the indexes.2. Again, I would not keep them in the same changeset. Having the CREATE OR REPLACE clause helps make the change idempotent, but the function and the trigger are still two different objects.3. I believe in this case, you should add a rollback for the trigger.Again, as I mentioned earlier, I don't have experience with Liquibase, and I'm aware that following the guidelines strictly can make everything more laborious, so please take it with a grain of salt. I don't think you should be so strict if you are creating the database from scratch, for example. In that case, I would develop changesets to create multiple foreign keys and indexes, for example. However, on an already ongoing application, that solution would not be optimal.",lbittencourt,2025-07-24 13:21:00,1,dataengineering,t3_1m81i0v,False,
n4wima9,"So far I am planning to split everything up, the way you answered. Appreciate the response",tech-man-ua,2025-07-24 14:09:19,2,dataengineering,t1_n4w99jv,True,
n52tf3x,"Maybe this is the python talking, but does that dot syntax give other people feelings? That's my syntax for interacting with methods and functions, I don't want to see it in raw data...",ratczar,2025-07-25 12:51:00,3,dataengineering,t3_1m8y3im,False,
n52u2e4,Has anyone actually claimed that this is a problem? what exactly are you trying to solve for?flattening the json seems like an extremely weird design decision to me - how would I know if a field is expected or not? how deep does the dot nesting go? and how do I parse it? you're asking me to split on dots instead of just using the infinitely many json parsing tools that exist already within any programming dialect,ThroughTheWire,2025-07-25 12:54:37,3,dataengineering,t3_1m8y3im,False,
n5dm3hm,Can you clarify?,cptshrk108,2025-07-27 03:55:56,1,dataengineering,t3_1m8y3im,False,
n530j94,"Hm....but when something breaks, and of someone else if debugging, they will end up seeing the syntax, right? :p",ExcitingThought2794,2025-07-25 13:30:10,1,dataengineering,t1_n52tf3x,True,
n52zk2k,"Our customers have pointed this as a problem (we are an observability tool). They want to optimize log pipeline to reduce cost, increase query speed, and also reduce cost",ExcitingThought2794,2025-07-25 13:24:57,1,dataengineering,t1_n52u2e4,True,
n541e66,I have zero interest in confusing myself with what's data and what's a function or method. If I really want to do it this way I'll just use an ORM,ratczar,2025-07-25 16:26:45,-1,dataengineering,t1_n530j94,False,
n52zz7b,I don't think I get your question - 'how would I know if a field is expected or not'Why does one need an observability tool and what outcome do they expect should guide the selection of attributesEdit: oh ya and we use ClickHouse as our back-end.,ExcitingThought2794,2025-07-25 13:27:12,1,dataengineering,t1_n52zk2k,True,
n54276p,"ORM won't work in our case. Happy to be wrong. And since you have no interest in the data, function or method, I have no way to present a counter either.",ExcitingThought2794,2025-07-25 16:30:34,1,dataengineering,t1_n541e66,True,
n532uir,"I think I misunderstood the entire point of the post - I thought you were providing the end users the dot notation to parse through, but you're actually asking the users to use your configuration to send over the dot notation over to you for processing - does that sound right?If that's the case, I think it is a bit weird that users are asked to manually configure how to ""dedupe"" info sent over to logs but if it's a part of the docs and setup it seems reasonable as an optimization. seems like something that can be done on the saas side for the customer though - attributes with same names and values could be consolidated during or after ingest via some configurable setting on your side saying like ""easy dedupe"" or something?similarly - are you asking users to flatten the json on send? why don't you flatten it on read for them?",ThroughTheWire,2025-07-25 13:42:35,2,dataengineering,t1_n52zz7b,False,
n4ra9ak,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-23 18:18:54,1,dataengineering,t3_1m7gtu1,False,moderator
n4t9mfz,"better explain that what kind of promises normal database provides ( i.e postgresql ) you break to reach the so called speed.If you don't know,there is going to be a lot of work to do,good luck.",liprais,2025-07-24 00:14:47,2,dataengineering,t3_1m7gtu1,False,
n4t7v7q,Cool stuff. You might find Hekaton interesting:https://learn.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/sql-server-in-memory-oltp-internals-for-sql-server-2016?view=sql-server-ver17How does it do with larger than memory data sets?,warehouse_goes_vroom,2025-07-24 00:04:41,1,dataengineering,t3_1m7gtu1,False,
n4xr039,"Clickhouse is optimized to serve clusters with multiple nodes, minimize network shuffling etc. A good measure is to compare the speed with embedded query engines like datafusion or duckdb. Even polars to some extent is comparable. Do you have a source code I can look into? (a beginner, eager to learn cool stuff).* Compiles SQL queries into multithreaded, vectorized machine code; is performed by almost all query engines today",Big-Sentence-3406,2025-07-24 17:32:54,1,dataengineering,t3_1m7gtu1,False,
n4ten2v,"Hey, thanks for the comment! It's setup as an analytics database, not a transactional database. So it's not trying to be a fully-featured transactional database like Postgres. It's probably currently better described as a ""SQL query engine"", than a full database.Warp skips: \- transactions \- updates/deletes \- indexing \- joins (although it could one day) \- writes are also currently append onlyThe idea was to strip it down to a minimal feature set to unlock extreme speed. That's really all that's required for dash boards, real-time searches and fast lookups etc. I'd imagine people would output a pre-processed table from a daily pipeline, ingest it into Warp, then query it throughout the day.",shootermans,2025-07-24 00:43:49,1,dataengineering,t1_n4t9mfz,True,
n4tbyts,"Thanks! Hey yeah interesting, this looks similar (although more explicit). For example, Warp is benefiting greatly from the OS caching disk data: \- Cold reads (from disk) hit around 5GB/s \- Warm reads (from cached pages) can hit 200GB/s+Curious how large you're thinking? If a single column fits within memory (say <32 GB) this should run extremely well on repeat queries on similar data (eg when a dashboard is loaded). The data used so far is \~100GB per example (individual columns are a fraction of this).It's not designed for truly massive datasets (> TBs) yet, that'd require NVME raids and/or distributed nodes. I've tried to keep it small so it's cheap to run (I suspect a lot of cloud users are paying more than they need to for their small/mid data sizes). However, def keen to learn more about what real users expect!",shootermans,2025-07-24 00:28:20,1,dataengineering,t1_n4t7v7q,True,
n537wur,Most analytics workloads require joins.,oar335,2025-07-25 14:08:25,2,dataengineering,t1_n4ten2v,False,
n4tl0ou,"Most databases manage caching themselves (term is ""buffer pool""). OSs don't know which data is more expensive (or simply can't be, if dirty) to page out. I suggest reading some database literature; definitely room for innovation and quality of implementation improvements, but no need to reinvent all the theory. And there's different philosophies of design (""in memory"" or not, distributed or not, etc, etc).Some (many) algorithms degrade poorly when the amount of data is larger than the system's available memory. It's not just about the size of data; it's also about whether there's a performance cliff (or a point where you outright start failing).You're not wrong, a single machine can do a lot. One of my colleagues posted this recently: https://datamonkeysite.com/2025/07/21/does-a-single-node-python-notebook-scale/Single nodes have gotten very powerful. But then again, smalk workloads don't always stay small. Having room to grow is good too, as is not having it be ""works on my machine"".I work on a distributed, autoscaling OLAP database engine (Fabric Warehouse) that's capable of efficient single node execution, or scale out, depending on what the query needs. So I'm not necessarily convinced one really has to choose between small scale efficiency and being capable of going distributed. But at the same time, you've already got a huge project on your hands as it is. It's a very interesting space, with lots of hard problems and competition. Good luck!",warehouse_goes_vroom,2025-07-24 01:20:54,1,dataengineering,t1_n4tbyts,False,
n4usmtn,"Yeah could definitely add some better handling of the ""cache"" :) I just left it simple for now.And yeah computers are \_fast\_ now, it's an exciting time.Def appreciate having the easy ability to ""scale up"". Thanks for your input!",shootermans,2025-07-24 06:27:14,1,dataengineering,t1_n4tl0ou,True,
n5umclp,I would be honest and tell your boss that you are not qualified to properly assess a data engineer.,Ashamed_Wheel6930,2025-07-29 19:38:10,32,dataengineering,t3_1mcl3tn,False,
n5unaik,"Two men enter, one man leavesHave them interview eachother until one determines the others a nincompoop.",SaintTimothy,2025-07-29 19:42:42,24,dataengineering,t3_1mcl3tn,False,
n5uvb07,"Just do sql FizzBuzz.Start with, can they actually query a table and then move up from there. Don’t overthink it.",pragmatica,2025-07-29 20:20:36,6,dataengineering,t3_1mcl3tn,False,
n5upeth,I think you can come up with something.  I believe in you dogg,PresentationSome2427,2025-07-29 19:52:46,4,dataengineering,t3_1mcl3tn,False,
n5ulytf,"I don't mean to be patronizing, but why not ask an LLM to generate questions to start things off?",git0ffmylawnm8,2025-07-29 19:36:21,5,dataengineering,t3_1mcl3tn,False,
n5v6omc,"If all the suggestions fail, ask them simple questions. If they come up with overly complicated answers, they’re BSing and don’t know what they’re doing. They’re trying to sound smart.",mycrappycomments,2025-07-29 21:13:48,1,dataengineering,t3_1mcl3tn,False,
n5vmrxd,I'm a consultant and happy to help. Drop me a message and let's discuss.,RobDoesData,2025-07-29 22:35:49,1,dataengineering,t3_1mcl3tn,False,
n5uv402,This isn't going to turn out well. Have your boss read my Data Teams book.,eljefe6a,2025-07-29 20:19:41,-9,dataengineering,t3_1mcl3tn,False,
n5vorkp,![gif](giphy|3o7TKqFZJpwL8Giz2E),RevolutionaryBid2619,2025-07-29 22:46:25,0,dataengineering,t1_n5unaik,False,
n5vwstg,Topkek,wyx167,2025-07-29 23:29:40,1,dataengineering,t1_n5uv402,False,
n5ule1r,No one really knows the future and every career carries risks. So you have to make a decision and go with that.,nonamenomonet,2025-07-29 19:33:33,3,dataengineering,t3_1mckr0s,False,
n5unyyv,"If you like both, stick with full stack for now.Software engineers are always needed. You can build the actual product, which keeps the company running. Data engineers are super useful but usually come in later, when there’s enough data to justify the role. Smaller companies might not even have one.Also, as a dev you can always move into data later. Going the other way is harder.That said, if the data role is solid (e.g. real PySpark work, solid infra, not just moving CSVs to S3), and you want to be in that space long term, it’s not a bad move.But full stack gives you more flexibility and job security early on. Just my two cents.PS: I'm a data engineer, so no hate",Ahmouu,2025-07-29 19:45:55,4,dataengineering,t3_1mckr0s,False,
n5umcey,"Nothing is safe, go with where you excel most.",ProfessorNoPuede,2025-07-29 19:38:09,2,dataengineering,t3_1mckr0s,False,
n5wgrz0,"+1 to this. BE opens up a wider range of jobs (which seems to be a factor towards safety)PS: I am also a DE, so no hate.",joseph_machado,2025-07-30 01:22:57,1,dataengineering,t1_n5unyyv,False,
n5mwwat,"Excellent idea. A unified dashboard for Dagster metrics and Snowflake costs is a game changer, not overkill. It solves a real efficiency problem and the skills learned are incredibly valuable. For implementation, using Grafana with Dagster's GraphQL API and Snowflake's `ACCOUNT_USAGE` schema would be a powerful approach.",Substantial_Fig_7849,2025-07-28 16:44:05,0,dataengineering,t3_1mbiio9,False,
n5c0vb3,"Adopt dbt, train people how to use it, then slowly revoke all other access to the db (e.g. analysts pulling data directly then loading it back with Python).",davrax,2025-07-26 21:47:54,1,dataengineering,t3_1ma4aip,False,
n5dq39d,Why not use SSIS for your data transformation needs? You already have licenses for it so use it.,Nekobul,2025-07-27 04:26:34,0,dataengineering,t3_1ma4aip,False,
n5dj0rt,Thanks for the response.,looking_for_info7654,2025-07-27 03:33:16,1,dataengineering,t1_n5c0vb3,True,
n5p01pt,"You should sync each object seperately, and always use Foreign Keys instead of the connected object attribute.For ex: Let's say you have a contact / person entity. You should only sync attributes relevant to this person, but not from the connected objects like company, deals, etc. If you need information about the company, just join it using company id from the objects.I built a similar logic, and was pretty easy. Happy to help if needed.",PolicyDecent,2025-07-28 22:45:40,2,dataengineering,t3_1mbtb0x,False,
n5qkrx0,"What is the biggest table you have to synchronize? If the data is not much, doing full table replication might be acceptable.",Nekobul,2025-07-29 04:25:25,1,dataengineering,t3_1mbtb0x,False,
n5qsim6,"This is not unique to Stitch. In general, I would not replicate formula fields or roll-up fields. Instead, create views or other tables which emulate these formulas in your target db. Fivetran also has this limitation.",GreyHairedDWGuy,2025-07-29 05:26:50,1,dataengineering,t3_1mbtb0x,False,
n5w4p8p,"Yeah that makes sense, thanks",Unusual-Affect-8310,2025-07-30 00:13:28,1,dataengineering,t1_n5p01pt,True,
n5w4rds,"Got it, looks like it’s a pretty common issue",Unusual-Affect-8310,2025-07-30 00:13:48,1,dataengineering,t1_n5qsim6,True,
n5lvfdn,Here is the blog: [https://www.mitzu.io/post/designing-analytics-stack-with-streaming-and-event-driven-architecture](https://www.mitzu.io/post/designing-analytics-stack-with-streaming-and-event-driven-architecture),Still-Butterfly-3669,2025-07-28 13:42:35,1,dataengineering,t3_1mbgihi,True,
n5s8ac5,"Multigrain is good for bread, not so good for fact tables.",idodatamodels,2025-07-29 12:45:42,2,dataengineering,t3_1marnw3,False,
n5goupj,I should also specify that there is already a traditional snapshot source table (not dimensionally modelled) that captures balances with start and end date for each balance change,Boltonet12,2025-07-27 17:12:34,1,dataengineering,t3_1marnw3,True,
n5icvsg,"We do the snapshot thing and capture daily for the last month and monthly otherwise.  Those were the requirements.  At one point I was trying to think of a way to use a type 2 structure of customers and do some kind of cross join against a set of dates that would yield a view at whatever grain we needed (daily, weekly, monthly).  It wasn't hogh priority so I never went back to it, but probably wouldn't be too hard.  Downside would be the processing load to do the type 2 on a customer base that big.",Gators1992,2025-07-27 22:17:30,0,dataengineering,t3_1marnw3,False,
n5idnow,I would build a daily snapshot view that shows balances by day and then current / weekly / monthly could be 3 downstream views using different filters,wait_what_the_f,2025-07-27 22:21:51,0,dataengineering,t3_1marnw3,False,
n5j35zu,"If you work for a bank, especially one that has billions of accounts, you're probably regulated as to when these snapshots need to be taken and for whom. At that point damn the hard drive space, because it's all regulated environment requirements and hard drive space is cheap compared to a fine.",SaintTimothy,2025-07-28 00:53:37,0,dataengineering,t3_1marnw3,False,
n5s9l3k,"That’s the thing, the “grain” is a balance for that day, the only thing that makes it weekly/monthly is that day happens to be at the end of the week/month. There is no aggregation to get to the weekly grain or monthly grain. It’s truly daily data, but the consumers care more about the week end and month end dates so what I’m really asking is to have a daily snapshot table but remove dates we aren’t interested in to save memory/storage",Boltonet12,2025-07-29 12:53:15,1,dataengineering,t1_n5s8ac5,True,
n5sar7y,With the above being said; is what I’m asking something that has been done before or against normal practices,Boltonet12,2025-07-29 12:59:56,1,dataengineering,t1_n5s8ac5,True,
n5h3poh,"you dont need three fact tables,are you just building something to run agg on the balances? if the source already has the historization, you can model it such that each balance is one fact with a date dimension attached. Since you will have the start and end date of each balance, you can drive the weekly and monthly agg. and include them in the fact model,let me know if i didnt understood",Scepticflesh,2025-07-27 18:24:37,2,dataengineering,t1_n5goupj,False,
n5mfvnv,That could be a solution but my counter argument would be the requirements for data storage for the daily snapshot (it would be huge) and the other views would literally be a subset of the original daily snapshot data so personally I'd prefer a filter to get to that level.,Boltonet12,2025-07-28 15:23:43,1,dataengineering,t1_n5idnow,True,
n5swv5r,"It's a bad idea, [Keep to the Grain in Dimensional Modeling - Kimball Group](https://www.kimballgroup.com/2007/07/keep-to-the-grain-in-dimensional-modeling/)",idodatamodels,2025-07-29 14:53:26,1,dataengineering,t1_n5sar7y,False,
n4y3l6v,"I'm curious to know about the data size, CDC, bottlenecks during this process?",69odysseus,2025-07-24 18:30:32,1,dataengineering,t3_1m8bg5m,False,
n4vtsiq,Cost.,MsCardeno,2025-07-24 11:50:23,10,dataengineering,t3_1m7tozt,False,
n4v6ocz,"In my experience, tuning Snowflake pipelines often means rethinking data layouts. Getting your clustering keys and micro‑partitioning right is critical to avoid scanning terabytes for simple queries.",GreenMobile6323,2025-07-24 08:38:10,5,dataengineering,t3_1m7tozt,False,
n4wgn33,"Definitely cost management. The good thing with snowflake pretty much it just works, but god damn you are really paying for it. Even the smallest compute you are already looking at almost 10x equivalent EC2 instance (not to mention they probably also has deals for compute capacity with cloud providers). Just Crazy premium overall",CrowdGoesWildWoooo,2025-07-24 13:59:32,3,dataengineering,t3_1m7tozt,False,
n521szp,Cost management is pretty big. Plus designing models that typically rely on constraints like PK’s and FK’s requires some extra thought. But tools like dbt make that much easier.,jdl6884,2025-07-25 09:26:56,1,dataengineering,t3_1m7tozt,False,
n5h84oc,Came to say this.,cptncarefree,2025-07-27 18:46:44,1,dataengineering,t1_n4vtsiq,False,
n4r8vyx,"You can find our open-source project showcase here: https://dataengineering.wiki/Community/ProjectsIf you would like your project to be featured, submit it here: https://airtable.com/appDgaRSGl09yvjFj/pagmImKixEISPcGQz/form*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-23 18:12:32,1,dataengineering,t3_1m7gnrx,False,moderator
n4tgglw,Is this like select * from table1 order by id select * from table2 order by idAnd then just seeing if each pair of rows are the same and then alerting if they're not?,skatastic57,2025-07-24 00:54:21,3,dataengineering,t3_1m7gnrx,False,
n55zbz1,"I have this exact problem at work to the nth degree. Check out point blank library for data validation, I’ve been trying to build out a comparison feature.Edit: https://github.com/posit-dev/pointblank GitHub - posit-dev/pointblank: Data validation made beautiful and powerful",tylerriccio8,2025-07-25 22:06:11,3,dataengineering,t3_1m7gnrx,False,
n4vdh43,"There already is https://pypi.org/project/datacompy/ which works great, I use it daily in production for comparisons in etl pipelines.All you have to do before is create to sqlalchemy connections and to pandas read_sql.",Salfiiii,2025-07-24 09:42:34,2,dataengineering,t3_1m7gnrx,False,
n4x46va,"Datafold’s original datadiff open source tool was great until they discontinued it, but it was forked by the original developer into a new open source repo: reladiff",Straight_Special_444,2025-07-24 15:49:51,2,dataengineering,t3_1m7gnrx,False,
n4roya1,I mean that's all Datafold is and it's been awesome in our CI process.,FridayPush,2025-07-23 19:27:25,2,dataengineering,t1_n4rkzd1,False,
n4smc1k,"yes, current version improvised alot and now can compare 20 million rows cell by cell easily without memory error.I think in datafold it does sampling, but in here I'm comparing all dara.",MatteShade,2025-07-23 22:07:51,1,dataengineering,t1_n4rkzd1,True,
n4xbi4f,"it generates an excel report with summary page (count of rows, checksum of numeric cols, counts of duplicate rows, extra rows, rows present at source and target but any of the values from another columns not matching) and then actual data backing it in separate sheets.since data is present in diff dbs we cant simply run sql queries on both simultaneously without importing one dataset in another same DB",MatteShade,2025-07-24 16:23:18,1,dataengineering,t1_n4tgglw,True,
n4xaxih,"but datacompy loads all data in df ie memory, hence on smaller specs machines larger datasets can't be compared",MatteShade,2025-07-24 16:20:41,1,dataengineering,t1_n4vdh43,True,
n4wq8r7,Some of this has changed with the 2.0 release but the biggest issues that I had was that:1: Inter-machine communication required deploying signed certificates to the machines and so running inside of ephemeral containers was a pain e.g. docker2: Processor priority is inferred from other settings. If you don't know how that works you can starve other processes really easily.3: The GUI authoring tool. Whatever other benefits or drawbacks NiFi has there are always going to be engineers who will reject it based on that alone.3.5: Because of the GUI and the resulting config files most dev tooling e.g. git & CI/CD don't play well with NiFi making review and deployment a more difficult process.,rjspotter,2025-07-24 14:45:52,3,dataengineering,t3_1m7f86q,False,
n4sj55b,I haven’t touched Nifi in many years but I remember having issues with throughput and so i did batch inserts to whatever sink I possibly could.,benwithvees,2025-07-23 21:51:23,2,dataengineering,t3_1m7f86q,False,
n4radu0,"If data engineers are not suppose to ask others experience about using the tools of our trade, while also not suppose to promote projects they're working on because it's considered self promotion, what's the purpose of this subreddit? It feels like 90% of all product conversation and documentation that I find on the web is 'happy path' with products. How helpful they've found it etc. There's rarely collections of 'hey you like product X enough to keep it in production but what growing pains did you have with it'. The only reason I'm subscribed to dataengineering is to proactively read others 'learn from my mistakes' or problems they're facing and how they end up working around it.",FridayPush,2025-07-23 18:19:29,10,dataengineering,t1_n4r03gq,False,
n4s94g1,They’re just asking bro chill out,ursamajorm82,2025-07-23 21:02:04,5,dataengineering,t1_n4r03gq,False,
n4udgra,"**Bro, I did check, but everywhere I look—blogs, forums—they all mention pretty much the same problems:*** Complex configuration* Performance issues* Limited documentation* Lack of community support* Scalability challenges* Security concerns* Cost considerationsAnd of course, monitoring the health and performance of an Apache NiFi instance is always critical for keeping data flows stable and reliable.Still feel more accurate answer from market expert so posted here.",eb0373284,2025-07-24 04:22:31,1,dataengineering,t1_n4r03gq,True,
n4qmtcm,A few ideas:- Entity relationship diagram (useful for new databases)- Data lineage (column level may be overkill)- Value stream mapping if you want to take a business operations angle for delivering software- Architecture diagrams for a high level view of how services interact with each other,on_the_mark_data,2025-07-23 16:33:13,3,dataengineering,t3_1m79l9n,False,
n4rhaiz,Sounds like you have a good idea already but generally find non-datateam coworkers don't reference diagrams that display too much information. Always think a 'tldr' graphic is helpful. Vendor A -> Warehouse -> UsageVendor B -> Warehouse plus precache redis for application usageetc,FridayPush,2025-07-23 18:51:29,1,dataengineering,t3_1m79l9n,False,
n4o4ayp,"I am not sure what is the quality of work you will do there, but big data and data engineering is something that you will have better chances in future than web development!",rtalpade,2025-07-23 06:45:03,5,dataengineering,t3_1m71zs8,False,
n4obflx,you can join the project but if you get fully involved you’ll lose touch with web dev. I would suggest to try data engineering for now if you have no other offers/jobs in hand and side by side work on building web,Sad_Monk_,2025-07-23 07:51:27,2,dataengineering,t3_1m71zs8,False,
n4odw10,Bhai internship at Amazon and joining infosys. I am not sure if you are assigned project or not. If not you will struggle more and you won't be surprised after 2-3 months they assigned some production support or QA project. They are giving training in X skill trying give project in Y skill and folinally you landed in Z technologies skill. TPD abd managers are good for nothing in infy. Keep preparing and when you get good opportunity leave infosys. All WITCH companies are same.,MindParty1591,2025-07-23 08:14:59,1,dataengineering,t3_1m71zs8,False,
n4o4pys,Actually i want to go for sde role in companies like zomato swiggy uber amazon etc. so is it possible can i switch after sometime from data engineering to sde,WorldlyLadder5395,2025-07-23 06:48:48,1,dataengineering,t1_n4o4ayp,True,
n4uargw,Yes bro u re right. I currently have this option thats why i am joining as soon as i got another job i leave this,WorldlyLadder5395,2025-07-24 04:02:36,1,dataengineering,t1_n4odw10,True,
n5n9n7c,I offer paid mentorship in this area. DM me if interest ed,RobDoesData,2025-07-28 17:41:49,1,dataengineering,t3_1mbl92t,False,
n5qkot0,I’m interested,ManagementMedical138,2025-07-29 04:24:46,1,dataengineering,t1_n5n9n7c,False,
n5i1z9r,"I would look into dynamic DAGs. Instead of one pipeline doing dynamic tasks, it would generate a DAG per table based on list of configs.",Pledge_,2025-07-27 21:18:56,3,dataengineering,t3_1mav3sj,False,
n5hnrz2,I would store files like configs somewhere on the hard drive of the server that runs Airflow (probably in Docker) and make that files available to the Docker container. S3 just to be used for data files thst are supposed to be ingested into Redshift,Cpt_Jauche,2025-07-27 20:06:21,2,dataengineering,t3_1mav3sj,False,
n5hrzxt,"I do a config pipeline with dagster. There will always be a little bit of coupling because of the logic to pare the config. With that, and because we want to make the config immutable, we put it with the docker container that’s deployed. The EL code references the file locally.The drawback of putting the config in s3 is having safeguards around changing the file and if you want clear history of the Config.",dr_exercise,2025-07-27 20:27:45,2,dataengineering,t3_1mav3sj,False,
n5ie9hr,Is it okay to store the config with airflow? Should i have a separate config for the list of tables and a different config for the tables' ddl structure? How would you go about designing the overall architecture?,afnan_shahid92,2025-07-27 22:25:16,1,dataengineering,t1_n5i1z9r,True,
n5i2ak8,"I want to create a separate ecs task for each table, with the approach you are recommending, how do i go about it? Do i use dynamic task mapping?",afnan_shahid92,2025-07-27 21:20:35,1,dataengineering,t1_n5hnrz2,True,
n5hw9oi,"A follow up question to this, i want to create a separate task for each table. Is there a straightforward to do this in airflow or dagster? How do you get this information from the config file given it is stored in the docker container?In the workflow you implemented, were you running it on all the tables sequentially or were they being processed in parallel?",afnan_shahid92,2025-07-27 20:49:22,1,dataengineering,t1_n5hrzxt,True,
n5jelfr,"Typically you create a git repo for the DAG and then have a separate repo for the configs. The DAG iterates through the configs and creates a DAG per config file. I typically use JSON, but YAML would work too.The DAG can reference the files on the Airflow filesystem or a blob storage, it would all be defined in Python. The config CI/CD pipeline will copy the files to where your DAG references them, your DAG CI/CD pipeline will deploy to wherever your airflow DAG bag refreshes.The dynamic DAG can be as flexible as you want. For example create all the same tasks but with different parameters, or it can dynamically create different task structures based on the config. Every time the DAG bag refreshes DAGs will be updated or created based on what’s in the config directory. You can then manage each resource separately and see its history in the web portal",Pledge_,2025-07-28 02:04:53,1,dataengineering,t1_n5ie9hr,False,
n5lbuor,"Factory pattern: https://dagster.io/blog/python-factory-patterns. I believe airflow offers something similar but haven’t used airflow in a while. The config is referenced by the EL pipeline. I usually write a pydantic settings file to parse the config and making reference to the file like `Path(__file__).parent.joinpath(“config.yaml”)`. The pipeline, Including config, is built in a dockerfile then deployed.",dr_exercise,2025-07-28 11:43:17,1,dataengineering,t1_n5hw9oi,False,
n5ge2wi,**\*For Postgres\***,Temporary_Depth_2491,2025-07-27 16:20:29,3,dataengineering,t3_1maqe1u,True,
n5b5pix,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-26 18:56:39,1,dataengineering,t3_1ma19ck,False,moderator
n5bj6it,"For operational use cases - take the data, do something to it, send output to some downstream system - your instinct is correct in that trying to shoehorn the “medallion” concept into this sort of flow can be counterintuitive. My team and I went through a lot of back-and-forth on whether we wanted to support such use cases in our Databricks environment, or wanted to keep them separate. There were arguments to be made for separate - the data volume of these use cases is lower than our analytical workloads, and so Azure Functions/Logic Apps could be sufficient. However, then we would need to use a non-Databricks orchestrator, which would be a bit annoying for some of the multi-step operational workflows. Doing it in Databricks meant that all of our data jobs live in one place and are orchestrated through one set of tools, regardless of whether they’re operational or analytical in nature. Databricks Asset Bundles have been great for us in this regard, in terms of allowing us to define our job configurations as code. Once we got past that, we came back to the medallion. We landed the operational data in its own schema in our bronze catalog, but rather than moving it to “silver”, we created an operations catalog that serves as the use-case layer for all of these operational pipelines. They’re still sourced from bronze, and in the future, we might source analytical “silver” tables from either the bronze or operational catalogs, but this approach has been working well for us.We leverage Databricks secrets (backed by Azure Key Vault) for all of our connection secrets, and give our service principals READ access to the scope in each environment. We have also modularized our code for SFTP/FTP into a helper library so we don’t have to maintain the same logic in each pipeline. We try to stick to asynchronous patterns for our downstream writes (e.g. we drop off a file somewhere and some downstream system picks it up), but if we had to, we could also make a direct API connection and write our data that way. We just haven’t really had to do that for our use cases thus far.",worseshitonthenews,2025-07-26 20:10:05,3,dataengineering,t3_1ma19ck,False,
n5ffrst,"Thanks for the response! It sounds like we are on the right track. We left off last week deciding to land the data in bronze and then separate downstream data from silver/gold, just need to align on specifics of how to organize that data.I've read about DABs, but I'm not a developer myself, and I've struggled to understand how it can help our team. Do you have any pointers there?Also curious what your SFTP code does. Our typical pattern is to drop the file on an on-prem server and use a separate MFT application to manage scenarios where we need to push files to an external source, but maybe there's a better way we can consider as we design our new standard.",Full_Metal_Analyst,2025-07-27 13:19:38,1,dataengineering,t1_n5bj6it,True,
n5nvgte,"Just think of a DAB as a representation of your job logic as code. The tasks, dependencies, cluster configurations, etc. DABs allow you to deploy your jobs from a version-controlled code base rather than needing to configure them manually in the UI. Especially when you’re working in a multi-environment space (dev > test > prod) this simplifies your life by alleviating the need to deploy jobs manually via the UI in each environment. Our SFTP helper library is basically just a wrapper around paramiko (a library that offers a Python implementation of SSHv2). By passing a few secrets to our helper class, the helper handles the rest and supports both key and credential-based auth. It saves us from having to write the same 30-40 lines of code in each pipeline, since we can instantiate our connection object with a single line of code. Our class also has prebuilt functions for getting/putting a file, checking a hash of a file against a previous version, and a few other operations we have found helpful.",worseshitonthenews,2025-07-28 19:24:46,1,dataengineering,t1_n5ffrst,False,
n4vrstg,"Our  data engineering team has that tech stack and they write some advance DBT macros for pipelines. I work as data modeler but not as a DE, use DBT for checking data lineage, transformation.",69odysseus,2025-07-24 11:36:59,4,dataengineering,t3_1m7t1nv,False,
n4rtsps,You logging into DAC and checking the error logs at the tail?,DeezNeezuts,2025-07-23 19:50:43,3,dataengineering,t3_1m7ixpv,False,
n4s8r1s,Can u monitor l3 cache in server and see if it correlates. Check indexing criteria as well. Too little information atleast for me.,rishiarora,2025-07-23 21:00:18,2,dataengineering,t3_1m7ixpv,False,
n4sqkkh,Does the data need to be live? Maybe you could do a change queue and reconcile periodically.,One-Salamander9685,2025-07-23 22:30:09,1,dataengineering,t3_1m7ixpv,False,
n53j0sv,"have you checked the kernal logs to see if you're just flat out hitting OOM. sounds like a bare metal setup so you will have bare metal issues. i recommend you have everything set up with some good async kernal logs. it sounds like you've been debugging but what you really need to do is stop stressing and keep adding data points. that's the advanced move here. i really like this age of empires analogy, right now you're sat in the fog of war, you keep losing bases, and you need to improve your vision relentlessly until something crops up.build more watchtowers",Certain_Leader9946,2025-07-25 15:01:26,1,dataengineering,t3_1m7ixpv,False,
n5k7guu,"What's the SHOW PROCESSLIST looks like during the deadlock? Check SHOW ENGINE INNODB STATUS as well if you are using InnoDB (Which you should). If for some reason you are using MyISAM, it's possible that the table lock is causing the problem.How is your indexing looking like? Are you performing updates on the indexed columns?Edit: You can try to post the question on dba stack exchange. There are a lot of experienced MySQL admin on the platform.",Objective_Notice_271,2025-07-28 05:37:02,1,dataengineering,t3_1m7ixpv,False,
n5w9alj,WFH wins for me! Consider travel time as work hours and calculate potential earnings. More pay is a close second. What do you think?,SpecialistDaikon8866,2025-07-30 00:40:05,1,dataengineering,t3_1mcrhcq,False,
n5w4mg3,"If i'm not intruding, can you let me know how did you land interviews for those roles?I would love to gain some insight as to what you had in your resume that you think made you stand out in the application process?",deathstroke3718,2025-07-30 00:13:03,1,dataengineering,t3_1mcrhcq,False,
n5swctn,"I do a little of this for an energy efficiency utility, AMA",ratczar,2025-07-29 14:51:02,1,dataengineering,t3_1mcb8mf,False,
n5vj49a,"I work in a climate research institute as a data engineer. Where are you located? A lot of our funding comes from Horizon (EU) projects, you can do some exploration about (past) Horizon projects here: [https://cordis.europa.eu/projects](https://cordis.europa.eu/projects)",Zyklon00,2025-07-29 22:16:29,1,dataengineering,t3_1mcb8mf,False,
n5umpud,"Oh very cool !I guess just initially and more importantly to me here's some questions I have:1) What sort of tools//platforms do you use in your work and what are some of the daily tasks you perform?2) Where does the data that is being ingested come from in this sector? I hear electrical utilities using things like IoT sensors, to monitor energy usage etc. Depending on the sector, perhaps even things like weather data as well (wind, solar) 3) When you say energy efficiency utility does this involve employing smart grid modernization strategies? Does your data feed dashboards, digital twins, etc.?4) Would you say that you see a demand for data engineering skills in this sector?",Green-Tea-21,2025-07-29 19:39:56,1,dataengineering,t1_n5swctn,True,
n5usgbz,"1. SQL server, SSRS, Python, Airflow, Snowflake. There's some GIS work involved as well to measure where we're working and what the people in this areas are like. We do a lot of compliance work - data products being created to share with state regulators and auditors. 2. We're generating some of it ourselves via our engineering teams, who are looking at buildings and quantifying impacts and expected savings. Weather data is big, as is data from partner utilities. Also data from solar inverters and smart meters (the IoT you mentioned)3. Actually no! We do building retrofits/home upgrades and estimate and measure the energy savings that result. We get a lot of our funding from states and utilities. We do have some dashboards (too many)4. Data engineering requirements for us are about compliance and quality - automated quality checks, integrity checks, matching and joining datasets across domains. Elsewhere in the power sector you'll see a lot more streaming data as folks are trying to monitor the output of power stations and plants and turbines - you're basically checking to make sure everything works safely. The pay is relatively less than other sectors but by God is it stable, we lost 15%+ of our revenue when the Feds cancelled contracts but we've had no layoffs.",ratczar,2025-07-29 20:07:09,1,dataengineering,t1_n5umpud,False,
n5lq1zp,"You can find a list of community-submitted learning resources here: https://dataengineering.wiki/Learning+Resources*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/dataengineering) if you have any questions or concerns.*",AutoModerator,2025-07-28 13:12:54,1,dataengineering,t3_1mbftbx,False,moderator
n58o5gq,"You can definitely use GraphX the graph library of Spark if you need to compute the shortest path between all nodes. Although the API is a bit confusing.Otherwise if it is just computing the path between 2 given nodes and doing so more sporadically, then maybe look into storing the graph in a graph database, like neo4j",ManonMacru,2025-07-26 09:57:46,3,dataengineering,t3_1m9nc41,False,
n59ekvn,Try igraph.,Budget-Minimum6040,2025-07-26 13:19:29,1,dataengineering,t3_1m9nc41,False,
n5b3dqr,will we be able to calculate all the paths between all nodes in a single go?,NenavathShashi,2025-07-26 18:44:05,1,dataengineering,t1_n58o5gq,True,
n5besw8,"Well, ""in one go"" is not very precise. It is possible to do so in a single spark batch job yes.But do realize that computation can be expensive depending on the size of your graphs, disjktra algorithm is n^2 in terms of complexity, and the result is also n^2.The smaller the average graph is the faster your processing will be, as it can be parallelized by Spark. I really hope you don't have a single 400 million graph. Then the size of the result and the computation are ungodly.",ManonMacru,2025-07-26 19:46:12,2,dataengineering,t1_n5b3dqr,False,
n5jc420,"Yeah, unfortunately it won't be feasible to compute and store the (400 million)^2 shortest paths all at once / in advance. You'll probably need to calculate the shortest paths of two nodes on demand as needed. GraphX / GraphFrames make sense if you're working with Spark.",structure_and_story,2025-07-28 01:49:28,1,dataengineering,t1_n5besw8,False,
n54z1g6,Volumes is the new recommended approach since it’s governed through Unity Catalog.,Purple-Assist2095,2025-07-25 19:04:44,6,dataengineering,t3_1m97ric,False,
n54zwdb,Thanks for your reply :smiling_face:So basically it is replacing mounts? And files stored in volumes are “accessible” through azure blob storage?,Responsible_Roof_253,2025-07-25 19:08:55,1,dataengineering,t1_n54z1g6,True,
n551xmj,Yes exactly,Purple-Assist2095,2025-07-25 19:18:58,1,dataengineering,t1_n54zwdb,False,
n5523g8,My man! Thanks a lot - for some reason this was very confusing for me when reading the docs,Responsible_Roof_253,2025-07-25 19:19:46,1,dataengineering,t1_n551xmj,True,
n51xpfx,"First just dump every API hit as one‑line JSON into cloud storage, grouped only by day or hour like `raw/hotel_api/date=2025‑07‑25/`. No need encode star rating or guest count in path; that info is inside the JSON and query engines can read it later. Cheap storage lets you keep whole history for replay.Each night run a compact job with Spark or any lake engine. It reads yesterday’s tiny files, writes a handful of big Parquet or Delta files, then deletes the fragments. Big files mean faster scans and less metadata load. Create a lake table on top of those compact files and partition by the field you filter most, usually `check_in_date`. Too many partitions slow things instead of helping.Flatten and enrich data in a second pass, then load it into a serving database like Postgres and put indexes on hotel\_id, date, guests. The lake stays the single source of truth, the SQL db is only for fast API reads. If something breaks you just replay from the raw JSON folder and rebuild everything. Simple flow, little maintenance, still keep all the data.",bcdata,2025-07-25 08:47:33,2,dataengineering,t3_1m8tc37,False,
n53do30,"Thank you for the advice, this seems very solid. I think querying multiple raw json files might be a bit slow, but then if I’m using the lakehouse as a source of truth I doubt I’ll have to do this often if at all. Thanks your help!",kingofthesea123,2025-07-25 14:36:24,1,dataengineering,t1_n51xpfx,True,
n54ker0,"Do consider that put requests are charged for nearly all cloud storage services. You should definitely batch to a much larger number, 5-10k. There are no downsides to immediately using sql, a table in sqlite that has an autoincremint id of the request, when the request was made, and a text column that has the raw response. Personally I wouldn't use the cloud and only a local db unless you're getting into 100s of gigs of data. Even then a simple rsync of the local sqlitedb to s3, would work. You can always add more complexity and redundancy but if you're prototyping a mvp choose what's worth it. Also remember writing *into* cloud storage is generally free, bandwidth wise. But it's not free to read it back.",FridayPush,2025-07-25 17:54:28,1,dataengineering,t1_n53do30,False,
n58bdvk,"Thank for your response. Definitely while I’m prototyping I’m not going to be using cloud services, I’m more concerned with building it in a nice way to a) teach myself best practices and b) ensure the design would scale if needed. What would be the benefit of storing raw json in an sql table over a directory? I guess querying by request time .ect would be faster? Maybe less overhead with filesystem metadata? I think I like this idea more than raw json, just curious to hear your take on it.Thanks for helping!",kingofthesea123,2025-07-26 07:51:09,1,dataengineering,t1_n54ker0,True,
n5b30tf,"Guess I'm very proficient with SQL and any scripts that I'm writing usually use sqlalchemy or similar which supports most any database. So if I'm at a point that I want to productionize my prototype the codebase is mostly ready. Two other points would be metadata. I almost always want to record when the record was fetched, as the time series makes it easier to observe patterns or know when a job wasn't performing correctly so I can disregard it's responses. Like maybe the hotel returns cheaper prices for future reservations on Mondays than on Saturdays. Or if my request was made with an apple device identifier vs a windows one. Lastly performing any updates to data is easier in a DB. Plucking attributes from inside the json to it's own column for filtering/indexing is simple. Or while processing each new batch of data I can perform a ranking to generate an SCD2 type table of differences with lags can help reduce storage over time (ie have a record for each change rather than a record for every request). I generally never use sqlite anymore and use duckdb as I like it's datatypes more. I mentioned sqlite as I think more people have heard of it.",FridayPush,2025-07-26 18:42:10,1,dataengineering,t1_n58bdvk,False,
n4uv3yp,"In my experience, a good approach would be to create separate Alembic migration files specifically for RBAC changes. These migrations should contain only raw SQL using op.execute() to create roles, grant/revoke privileges, or update access logic. Keep each migration focused on a single, clear purpose (like adding a new role or adjusting privileges for a group). Version control these migrations alongside your schema migrations, but prefix them or organize them in a way that makes their RBAC nature clear (e.g. use filenames like \`20250724\_add\_readonly\_role.py\`). This keeps RBAC changes auditable, repeatable, and tied to the same deployment process as schema changes. Good luck.",bcdata,2025-07-24 06:49:33,2,dataengineering,t3_1m7x4xb,False,
n4uvbmr,"Would you suggest bundling each role creation and grants into separate migration scripts each, or all together into a single one (to avoid bloat from too many little migration scripts)?Thanks!",Kojimba228,2025-07-24 06:51:28,1,dataengineering,t1_n4uv3yp,True,
n51wwna,"Create one revision per coherent change (“create X role + its grants” or “adjust Y role privileges”). Don’t split every single GRANT into its own file, but don’t lump unrelated roles into one script because it makes review, rollback, and blame harder.If your team deploys weekly and touches RBAC once or twice a week, you’ll end up with a perfectly manageable handful of RBAC revisions per sprint.",bcdata,2025-07-25 08:39:54,1,dataengineering,t1_n4uvbmr,False,
n549jng,Got it. Thanks for your reply,Kojimba228,2025-07-25 17:04:56,1,dataengineering,t1_n51wwna,True,
n4p2gl0,"As a architect you need to know your network flows, security, auth, scalability, cost management…if you only focus on data, you will miss all this important things for a data pipeline.",AzureLover94,2025-07-23 11:45:48,7,dataengineering,t3_1m764pt,False,
n4p4dat,"Yeah it's great, you will learn a lot, but be careful with the Az305, as someone who's not deep into infra, I found the test really hard, its the only certification that I failed and I have like 6",msdsc2,2025-07-23 11:58:20,3,dataengineering,t3_1m764pt,False,
n4qmasy,Haha same here. After the fail I postponed the retake for over a year :grinning_face_with_sweat:@OP maybe talk to your employer if becoming a Microsoft Solution Partner for Data & AI is an interesting option. For this your org needs two Solution Architects.,Seebaer1986,2025-07-23 16:30:49,1,dataengineering,t1_n4p4dat,False,
n4rbga6,Learn how to use a debugger. Know how to step through and over code. Set breakpoints in a divide and conquer style. Commenting code isn’t usually the way to go.,TokyoSharz,2025-07-23 18:24:27,500,learnprogramming,t3_1m7gfob,False,
n4r9sy1,"This trick with removing lines really only works in some very peculiar situations, when you're really lost on where the issue might be and the flow is continuous enough to even make it possible (at least for runtime errors). This usually would not be a feasible way to debug though, and any half-decent runtime should tell you where the error originates with enough accuracy already. Similar story with static analysis, although I suppose this is what you might be using it for. Looking for better (and more) static analysis tools might be a good idea, then. Getting a linter and similar tools is a lifesaver for syntax issues on the static stage of coding.100% on reading code and using debugger, I'd say any minute on deepening your debugger proficiency will pay off very, very quickly.",voyti,2025-07-23 18:16:46,55,learnprogramming,t3_1m7gfob,False,
n4rbus8,"My ide usually says the line where it broke, then you just reverse engineer",newaccount,2025-07-23 18:26:20,56,learnprogramming,t3_1m7gfob,False,
n4renc8,"Something similar exists for git commits. if you don't know which commit caused you feature to break, use `git bisect`. You need one working commit from the past and then it guides you through a binary search to identify the commit that breaks stuff.Fingers crossed that it's not the intern 10k LoC change (aka refactoring)",Teradil,2025-07-23 18:39:15,17,learnprogramming,t3_1m7gfob,False,
n4r9sdo,"I do think your post overall has good advice.> When code breaks in 500 lines, don't read top to bottom. Comment out half, see if it still breaks. Then half again. Found bugs 10x faster.this only really works if the error causes your code to implode (eg seg fault, compile error, exception). in those cases there's usually a better way to figure that out (eg attach with gdb and it will just tell you where the seg fault happened). If you can, well placed prints/logs/LED blinks can do the same thing though (bonus for not changing what your code does other than side effects or timing)And really, 500 lines of code should probably be broken up into smaller routines so you shouldn't have to tackle it all at once, anyways.> 2. Read tests first (they show intended behavior)Sure, but be open to accepting that the test itself is flawed. IE don't treat the test behavior as the authoritative truth of intended behavior.> What ""basic"" skill took you embarrassingly long to learn?RTFM. Who knew you could spend an hour reading a document instead of a week just trying to make it work /s",aroslab,2025-07-23 18:16:41,28,learnprogramming,t3_1m7gfob,False,
n4rc221,"Good tips, but I don't see how commenting out half the code could work for debugging. That's going to drastically change the behavior of the code, if it even still compiles.Bugs happen because there is a difference between what you think the code is doing compared to what it's actually doing. As you said, follow the execution path. See if the code path is what you expected. See if the data changes the way you expected. When you see a difference, you've probably found your bug.",David_Owens,2025-07-23 18:27:16,16,learnprogramming,t3_1m7gfob,False,
n4rerj8,This must be a joke. Commenting out particular lines is a skill for isolating certain sql problems but not generalized debugging. Trace execution either from the entry point or from the data change up using find references then set breakpoints and debug.,Far_Swordfish5729,2025-07-23 18:39:48,12,learnprogramming,t3_1m7gfob,False,
n4regof,This is super situational. Commenting out half your code in most cases would cause it's own errors.,Zentavius,2025-07-23 18:38:23,4,learnprogramming,t3_1m7gfob,False,
n4rm2vq,"Wait till you figure out the trick with commenting out 100% of the code, in order to convince devops that the issue really is on their side.",paperic,2025-07-23 19:13:50,3,learnprogramming,t3_1m7gfob,False,
n4sc7tp,"If you have to debug something across 500 lines of code, then the true skill that needs to be learned is design and testingSeparate code into small logical parts that are individually tested and you won't ever need to debug something that's 500 lines.",VietOne,2025-07-23 21:16:57,5,learnprogramming,t3_1m7gfob,False,
n4z8jj6,"the first thing many computer science students learn is sorting algorithms.why? because people innately think up bubblesort, e.g. take 1 element, compare it against all others and sort it accordingly.nobody thinks up quicksort, mergesort or heapsort that are all vastly faster and this introduces the concept that computer science is equal parts creativity equal parts learning what other people thought up.point being, you won't natively think about how to use tools you haven't come across but with time you will have a large toolbox of techniques you've seen to draw from.this is true for almost everyone.",scandii,2025-07-24 21:45:01,476,learnprogramming,t3_1m8gz7l,False,
n4z8icr,"I mean it’s not magic runes, it’s just instructions written by a person. It’s all about dividing big tasks into smaller tasks and those into steps and it comes with experience - both writing and reading code. You can try playing around with python for fun(very readable language, which had been very popular for a long while) or playing a programming game if you are curious.",PotemkinSuplex,2025-07-24 21:44:51,50,learnprogramming,t3_1m8gz7l,False,
n4zcc51,">I'm completely unable to ""think like a programmer"".But it can be learned.>They're right, thinking like a programmer IS the hard part. Yes, it is, but as said, it can be learned. What you do is make a list of tasks. If you can't think of how to solve the task, you split it up again. If you can't solve the individual parts, you split those up again. And again.You wanted a way to 'describe it in English', and this is possible. You distill the core of the problem by focusing on what you want to do and the nouns in the problem description. You must first clearly state your problem. For example:- Problem: ""I want to know how often a word appears in an array of words and write this to the screen.""Distill the core:- array of words- count how often- word- write to screenTo do this, I need:- An array of words (so I must define this).- A way to keep count (so I must define some data structure for this).- A way to look at each word in the array. (Thus I need a loop to pass by each word in the array.)- A way to decide if I already counted the word before (if yes: increase counter; else add word and set counter to 1)- To Write the result to the screenSimple code (pseudo; language is not important yet):```define array_of_words = [apple, banana, orange, banana, kiwi, kiwi, banana]define keep_count = objectfor every word in array_of_words {decide if you counted the word before}print_result(keep_count)```Now you have the array of words, and a way to keep count. The thing you didn't work out yet was ""decide if you counted a word before"", so that's what you do next:```if word is in keep_count {increase counter for word by 1} else {add word and set counter to 1}```So now you put that solution into the previous block of code:```define array_of_words = [apple, banana, orange, banana, kiwi, kiwi, banana];define keep_count = objectfor every word in array_of_words {if word is in keep_count {increase counter for word by 1} else {add word and set counter to 1}}print_result(keep_count)```Then refine it a bit:```define array_of_words = [apple, banana, orange, banana, kiwi, kiwi, banana];define keep_count = objectfor every word in array_of_words {if word is in keep_count {keep_count for word: increase by 1} else {keep_count add word: set to 1}}print_result(keep_count)```And you're done. You've written your program. Now you only need to translate it into the language you are using. A large part of the starting year of a computer science education is actually learning to do this, starting with small things like this and increasing the scope of the problems you're solving. Alongside this you'd learn about often-used data structures and algorithms.Repeat this again and again for years and years on end and you'll get good at it.This is a skill that can be learned, but not in ""Javascript bootcamp"". The above is programming; ""javascript bootcamp"" is writing code in Javascript. That's trivial compared to actually thinking up the solution.You always start with a problem, which you'll break down in smaller and smaller parts (where each part can be a function, which is also broken down into smaller parts), and in the end you'll be left with a (very long) list of tasks to do.",Xatraxalian,2025-07-24 22:04:24,106,learnprogramming,t3_1m8gz7l,False,
n4zbze1,"Well, now you will think of it.",ValentineBlacker,2025-07-24 22:02:32,12,learnprogramming,t3_1m8gz7l,False,
n4z8ra8,"Several times I would show up to class, ask the other students how they went about their latest coding project, then realized I did it differently than literally everyone else — my brain just didn’t seem to think like the majority of CS kids. I did absolutely horrible on my first few exams because I thought too hard in trying to implement the correct algorithm, rather than program from my brain. But I survived. And I consider myself a talented programmer now. If a programmer is what you want to be, do not give up. The process should hurt and make no sense at times and that’s okay.",Product_Relapse,2025-07-24 21:46:05,21,learnprogramming,t3_1m8gz7l,False,
n4zdgxi,"Consider it a learning excercise.Now you know. And knowing's half the battle.It also helps to think about things is different ways.In Javascript, an object is is a Hash table, or a dictionary. It stores key-value pairs.Its used a lot for storing temporary values associated with something.In software development, you don't often need to invent things from scratch. It's far more importanr to provide value for your clients. That means using existing solutions in efficient ways. Translating business requirements into code. Undersrandinf the business problem and finding the best solution for it.Understanding the tools you are using is a big part of it.",rupertavery,2025-07-24 22:10:21,9,learnprogramming,t3_1m8gz7l,False,
n50npan,Hey good job working through this! This is a big first step.A lot of the job is reading and working through comprehension. You learn through example and through others. You DONT make up everything yourself. You stand on the shoulders of others and help contribute your side as well. That’s the beauty and challenge of it all. Don’t get overwhelmed with everyone’s work around you,WaffleSandwhiches,2025-07-25 02:36:54,5,learnprogramming,t3_1m8gz7l,False,
n4zmxv1,"The hard part is to stop telling yourself you can't, without adding the word ""yet"". You can't think like a programmer, *yet*. The first time Nadal picked up a tennis racket, he couldn't hit the ball over the net, but he practiced and got better. People don't just spring from the womb already able to do the things they're good at, it takes practice. If you're interested in it, you can do it, you just need to practice. I know that sounds kind of pithy, but it's true.",tmtowtdi,2025-07-24 23:01:59,4,learnprogramming,t3_1m8gz7l,False,
n50251n,Forget programming -- how would you solve this manually if someone gave you a list of words? Would it really be that much different from what someone might realistically translate into code?,poorestprince,2025-07-25 00:27:27,5,learnprogramming,t3_1m8gz7l,False,
n51qdjm,"Learning to program comes from working through code. Sit down and try to solve something like this on your own. Don't look up solutions. Don't copy and paste code into your program. Fail to write it until you get it working. Do this enough times, and you'll get it.",obj7777,2025-07-25 07:37:28,5,learnprogramming,t3_1m8gz7l,False,
n5rtlqu,Thank you for the encouragement. I came from non technical background and started learning software development (we dev mostly) about 2 years ago now..but unfortunately was unable to land a job so I'm working on my own project in hopes of eventually be able to earn money from it. Can you give me some brief info about your learning journey?,DistributionVivid495,2025-07-29 11:07:24,48,learnprogramming,t3_1mc86ui,False,
n5rs7wi,"Respect! Did you have any tech background before, or was this a complete career switch?",TopCranberry7779,2025-07-29 10:56:40,46,learnprogramming,t3_1mc86ui,False,
n5rsgab,Came into programming from technical support. Someone I had worked with in the past in programming mentored me to get from theory to doing.Keep learning where and when possible.,jeffrey_f,2025-07-29 10:58:29,15,learnprogramming,t3_1mc86ui,False,
n5rzwor,"Rip gf.Proud of you, lots of people gave up before reaching where you're right now.",GreatHeavens1234,2025-07-29 11:53:10,8,learnprogramming,t3_1mc86ui,False,
n5umhyt,Bullsh*t,dafo111,2025-07-29 19:38:54,7,learnprogramming,t3_1mc86ui,False,
n5rut2d,>People used to say that I overload myself with information Yeah beware of the crab pot mentality. People will say all kinds of things to stop you from working harder than them.,KwyjiboTheGringo,2025-07-29 11:16:33,14,learnprogramming,t3_1mc86ui,False,
n5s2koo,Can you share with which platform did you start with?,farani87,2025-07-29 12:10:35,3,learnprogramming,t3_1mc86ui,False,
n5rvnoo,Impressive. Well done!,The_Octagon_Dev,2025-07-29 11:22:56,3,learnprogramming,t3_1mc86ui,False,
n5s0lau,Nice! Hope that would be me in a few month,This_ITandMedia_Lady,2025-07-29 11:57:38,3,learnprogramming,t3_1mc86ui,False,
n5s6spn,Do you use AI tools like cursor to speed up your learning and coding?,d-czar,2025-07-29 12:36:51,3,learnprogramming,t3_1mc86ui,False,
n5atuzp,"YAML was designed for human editing, JSON was not. YAML is for configuration, JSON is for serialization.",falsedrums,2025-07-26 17:53:45,663,learnprogramming,t3_1m9yyba,False,
n5apnwi,"I can’t really say why we collectively did it, but here’s why I prefer it.1. Less punctuation noise - you don’t have to surround each key with quotes or delimit with commas2. References! You can create anchors and reference them later. This is something we lost on the move from XML to JSON3. You can add comments4. It’s a superset of JSON, so if you have a YAML parser, you have a JSON parser.",jonwolski,2025-07-26 17:32:25,115,learnprogramming,t3_1m9yyba,False,
n5aovec,JSON is also a picky format I personally think. Especially the no comments part and the annoying comma. YAML is also way easier to read for me than JSON but I suppose that is personal preference.,slashd0t1,2025-07-26 17:28:23,167,learnprogramming,t3_1m9yyba,False,
n5axnaq,"You don't have to keep writing """" for each string value, or { } for each nested blockyaml: root: object1: value: x subsection: value2: y object2: value: x subsection: value2: y neat and tidy. in json: { ""root"" : { ""object1"" : { ""value"" : ""x"", ""subsection"" : { ""value2"" : ""y"" } }, ""object2"" : { ""value"" : ""x"", ""subsection"" : { ""value2"" : ""y"" } } } }a lot more overhead and a bit of a pain when you forget , after subsequent values. it is more clearly demarcated where on section ends (in yaml it's indentation that governs what belongs together) but for what it is used for, configuration files and the like it is quick enough to see what belongs together without it being a hindrance.",josephblade,2025-07-26 18:13:26,20,learnprogramming,t3_1m9yyba,False,
n5b1nfi,"JSON is a terrible configuration format. It doesn't allow comments, it has needless 'punctuation' (all the opening and closing braces and quotes), and certain things are awkward (like defining strings with escape characters).YAML is better .. but also kind of terrible with a bunch of weird gotchas (e.g. https://www.bram.us/2022/01/11/yaml-the-norway-problem/)",_jetrun,2025-07-26 18:34:47,11,learnprogramming,t3_1m9yyba,False,
n5avbp3,"Human readability and commentsIf you don’t like YAML, you’ll probably like this article: https://www.arp242.net/yaml-config.html",cc_apt107,2025-07-26 18:01:18,9,learnprogramming,t3_1m9yyba,False,
n5b6wtz,"One more benefit for yaml: if you dislike it, you still can write json and parse it as yaml.",None,2025-07-26 19:03:04,8,learnprogramming,t3_1m9yyba,False,
n5baawj,"YAML looks friendly with its clean syntax, but one rogue space can wreck everything. JSON’s stricter, but reliably boring, like that friend who’s always on time. YAML feels nicer until it doesn’t.",alpinebuzz,2025-07-26 19:21:32,8,learnprogramming,t3_1m9yyba,False,
n5avd83,Overall yaml is a bit less verbose and human readable than json and is also a superset of json. Any valid json is also a valid yaml but the reverse is not true obviously.,nicolas_06,2025-07-26 18:01:31,3,learnprogramming,t3_1m9yyba,False,
n5ay0fw,"YAML was popularized by Rails and Ruby. Back then, Node wasn't a thing yet.",Flimsy-Printer,2025-07-26 18:15:22,5,learnprogramming,t3_1m9yyba,False,
n5k8e98,"This is not an attribute unique to programmers. No matter where you go in life from here, you will encounter those people.",Own_Attention_3392,2025-07-28 05:45:21,460,learnprogramming,t3_1mb7ysd,False,
n5k7huf,Yeah I’ve had similar experience during my school time. However I’ve had way better experience in work life. Lead programmers where down to earth and really helpful and nice.,wirrexx,2025-07-28 05:37:17,108,learnprogramming,t3_1mb7ysd,False,
n5k8eo8,"I have answered this in similar threads. I'm in my 50's. When I was starting my career, I was full of myself. I could do no wrong. Everything I wrote was fantastic. Then, after four years in, I taught a C programming class a few semesters at a community college. I got so humbled so quick. Only an asshat keeps the ego. A good developer will know when to pause and ask questions. The best quality I've seen in a developer is ability to ask questions. We never stop learning.",GotchUrarse,2025-07-28 05:45:28,57,learnprogramming,t3_1mb7ysd,False,
n5kacin,"Only bad developers have big egos.This is how I classify developers Junior: doesn't know anything so asks questions Mid: thinks they know everything, never asks questions Senior: knows what they don't know; isn't afraid to ask questions Staff: ask everyone questions so they all see the error of their ways",NiteShdw,2025-07-28 06:02:41,67,learnprogramming,t3_1mb7ysd,False,
n5k80d4,"I would tell your professor that it's making it difficult for you, and ask if you can change groups or work independently. If you feel like it, that is.",Key_Storm_2273,2025-07-28 05:41:53,15,learnprogramming,t3_1mb7ysd,False,
n5katwt,"Yes, this is a tale as old as time. These arrogant pricks are all over. To top it off, they usually aren't that much better or even better than average at all. They're just  more cocky and outspoken. It's why I always hated group work in college. I really wish they didn't bother with it in college. It doesn't really emulate the real world the way the professors think it does.",Piisthree,2025-07-28 06:07:06,11,learnprogramming,t3_1mb7ysd,False,
n5k7xmv,"It's not uncommon, but then it's not uncommon in other professions either.I used to work at an advertising company, and yeah, no shortage of egos.Most developers I know are basically not egotistical, they're pretty confident in their abilities, but don't shout about it, and certainly don't try to pretend they're above anybody else.Big egos aren't rare, but they're not the norm either. I'm not sure if it's much different from any other profession. Are surgeons known for their tiny egos? Lawyers? Police officers?I'm not sure big egos are more common in software development than anywhere else.",ToThePillory,2025-07-28 05:41:12,18,learnprogramming,t3_1mb7ysd,False,
n5k9j6q,I’ve been a professional software engineer for about 25 years. I’ve been lucky enough to only really encounter one person like that at work. I don’t think it’s something you’re guaranteed to have.,gopiballava,2025-07-28 05:55:25,6,learnprogramming,t3_1mb7ysd,False,
n5lbgn1,"Sometimes people who seem like they have massive egos and come off as condescending just have poor social skills, or simply different values that mean they don't care about offending others (for better or worse.)It's not necessarily due to them being malicious, narcissistic or even having an egregiously large ego, although it might seem to you that there is something ""wrong"" with them. It can just as easily be due to them having a genuinely held negative perception of collaboration or just not enjoying working with others for their own personal reasons, and whether or not that is a ""problem"" depends on perspective and opinion.Not being pleasant doesn't mean someone is a ""bad"" person.I know that it can be very frustrating to work with someone who isn't naturally co-operative, but assuming it's all about ego doesn't do you any favours. The more you judge others harshly the harder you will make it to collaborate with them. Being diplomatic and negotiating to find a genuine compromise will get you far, but it will take some initiative and persistence.There are other kinds of people who are difficult to work with, such as people who are highly social or charming but don't actually do any work and will make you feel like an asshole if you try confronting it. Being pleasant doesn't mean someone is a ""good"" person.",Isogash,2025-07-28 11:40:28,5,learnprogramming,t3_1mb7ysd,False,
n5k98qc,"Yes. It is not only in uni.There are smart guys in IT. However, sometimes being smart is not always matched with “being nice”.You would need to learn to deal with this.",progmakerlt,2025-07-28 05:52:50,4,learnprogramming,t3_1mb7ysd,False,
n5u86f3,"Make a YouTube channel and teach there or create a free Udemy course. You might even be able to make an income from it in the future.Maybe you're being sincere but this post screams scam.Edit: just seen you have a YouTube linked on your profile ( not saying it's legit, maybe it is).",Lego_Division,2025-07-29 18:31:38,126,learnprogramming,t3_1mcemxd,False,
n5tppz2,This seems phishy :winking_face:,Embarrassed-Form5350,2025-07-29 17:07:48,143,learnprogramming,t3_1mcemxd,False,
n5u75sj,Spidey sense is tingling,MrKnives,2025-07-29 18:26:55,26,learnprogramming,t3_1mcemxd,False,
n5ugqg2,Last time someone offered free mentoring it did not end well. I really hope you don't keep kids in your basement mate.,wmute,2025-07-29 19:11:22,15,learnprogramming,t3_1mcemxd,False,
n5tyxop,"This is an insanely generous offer. OP is offering to commit 2 1/2 hours daily towards 1-2-1 mentoring, for **free**!If you have time and/or energy, it would be absolutely invaluable if you wouldn't mind providing monthly updates to the sub:- progress of 5 mentees- common issues- feedbackIt would also be interesting to understand knowing what you would know 1 month later, what would you have done differently? I personally think that you are heading for burnout with such a daily commitment. Look after yourself, and don't be afraid to changes things if the commitment proves too challenging.Really hope that your mentees are genuinely focused, put the necessary work in, and put your guidance into practice to really propel their progress.You are doing the Lord's work!",putonghua73,2025-07-29 17:49:07,18,learnprogramming,t3_1mcemxd,False,
n5tc9kf,Any chance you'd continue this trend and create another cohort 2 years down the line?,damian_wayne_ka_baap,2025-07-29 16:05:34,13,learnprogramming,t3_1mcemxd,False,
n5tbny3,"Thanks Imanol, people starting out as a dev would really appreciate your mentorship.To the people taking up on his offer, I hope it helps you on your journey. Good luck.",Rudresh27,2025-07-29 16:02:44,4,learnprogramming,t3_1mcemxd,False,
n5uhw40,"Hey Imanol, I would love to talk to you about an idea that I had.I am a self taught programmer (I also got a very poor free Data analytics bootcamp from the unemployment office in Germany). I worked as a chef for 10 years and before that in media and now I transitioned to programming.One thing that was worth it from the bootcamp that helped me a lot was the access to mentors. I have been thinking that it is a shame that a lot of people pay so much money just to access to a weekly 30 min call with a mentor (sometimes even less). The material to learn is already online with even well structured tutorials or learning path, but free mentoring options are missing.I have been planning for quite some time to build a website in which programmers and other professionals can offer free mentoring options for people who are learning or starting. It doesn’t have to be for a long time or long sessions but some guidance or even code review could work. Would you be open to help me build this project? Would anybody be interested in something like this? Does a similar platform exist? It has to be completely free of charge (kind of like freecodecamp but for mentoring)",Hydnum_repandum,2025-07-29 19:16:51,2,learnprogramming,t3_1mcemxd,False,
n5ts1x0,"Yo también te mandé DM, muchas gracias por hacer eso!",tleilax7,2025-07-29 17:18:16,1,learnprogramming,t3_1mcemxd,False,
n5txs48,"That’s really kind of you. Interested, sent you a DM",BigBang100,2025-07-29 17:43:58,1,learnprogramming,t3_1mcemxd,False,
n5bb3wm,Easy syntax. Libs for every-damn-thing. Good (enough) performance.,an0maly33,2025-07-26 19:25:56,531,learnprogramming,t3_1ma1voq,False,
n5bdzah,"As a teacher, it’s a great fit for academics and beginners, due to its simple syntax, library availability and real-world relevance. In other words, it’s the easiest general-purpose language that’s also used professionally. The rest of the teaching world agrees.As a result, most people start off learning Python nowadays. That’s pretty much why.",Joewoof,2025-07-26 19:41:45,188,learnprogramming,t3_1ma1voq,False,
n5bbtif,"As a non-professional but an AP CS teacher, Python makes most things ridiculously simple compared to other languages, plus it can kind of do everything (even if some other languages do it faster). It can be used in multiple paradigms, is very readable, and can be used on a ton of different things.",Schweppes7T4,2025-07-26 19:29:49,18,learnprogramming,t3_1ma1voq,False,
n5baxx8,Python can do everything and someone has already made a package for it. Python works really low level and with hardware. Python works well on low power devices.  Python powers a lot of AI. Are some reasons.,hubertron,2025-07-26 19:25:01,69,learnprogramming,t3_1ma1voq,False,
n5bcrt0,"Python is approachable in ways other languages aren't. I'm a lawyer and by far the most progress I made with programming has been with Python. The only big snag with Python is working with virtual environments, which some beginner books don't mention--or they do, but it's at the end where most people stop reading. I did a little C++ and I enjoyed the static typing a lot, but found that it's really a programming language that you need to be an adult to use. As in, you need to be aware of, and properly manage, a lot of different things. For someone like me, it's just not possible at this stage in my life to effectively use C++. But Python does a lot of things in the background for me, and allows me to get to my end goal much faster.",Fluid_Visit2770,2025-07-26 19:35:04,11,learnprogramming,t3_1ma1voq,False,
n5bcppd,"Python has been trending for years, it's a powerful language that is also beginner friendly. In my own fields of work python was also commonly the language of choice for API access to proprietary engineer software (biomedical field). More recently, AI and Data science have become two key trending areas in tech. A lot of startups and spin outs are coming from university research groups. Much of the tools developed by these academic groups just so happens to be written in python. As people filter through the university and inevitably go on to work (either as employees or startup founders) it makes sense that they would stick with the languages and tools they know well.That's my 2 cents anyway.",GaelicPanda,2025-07-26 19:34:45,5,learnprogramming,t3_1ma1voq,False,
n5bfu3m,"It’s plain fun and can do just about anything.It’s concise, readable, and has tons of libraries. I know about ~10 languages (C, C++, Java, Kotlin, Rust, JS, TS, Go, Python, etc) and Python is probably my favorite.",Rain-And-Coffee,2025-07-26 19:51:47,13,learnprogramming,t3_1ma1voq,False,
n5bepwp,"Easy to learn so often entry language for beginners along with Javascript and is all-purpose, it is the go-to language for anything data/AI",Wingedchestnut,2025-07-26 19:45:44,6,learnprogramming,t3_1ma1voq,False,
n5dt6ip,"Genuinely trying to understand this.Every beginner guide says, “Start with Python.”Every AI tutorial? Python.Data science? Python.Scripting? Python.It’s like the default answer to everything.But here’s my hot take:Python is mid.Yeah, it’s readable.Yeah, it’s got a ton of libraries.But it’s slow, it’s loose with types, and once you move beyond toy projects, it kind of falls apart.You don’t really “learn programming” with Python.You learn how to duct tape libraries together and hope it works.Then one day you touch C++ or Go and realize, oh damn, this is how real structure and performance feel.I’m not hating for the sake of it.Python has its place.But the cult around it?Feels like hype more than substance.",Real_Ad1528,2025-07-27 04:51:10,7,learnprogramming,t3_1ma1voq,False,
n54ou37,"Software engineering involves actually designing and architecting a software solution. Some devs don't actually do this (often, when they're in a larger team where someone else comes up with the solution and others just implement it)But realistically people just like the ""engineer"" title.",mxldevs,2025-07-25 18:15:25,175,learnprogramming,t3_1m96c6q,False,
n54wnn3,"Software engineers ace algorithm interviews they’ll never use, just to write CRUD apps for the rest of their lives.",alpinebuzz,2025-07-25 18:53:13,65,learnprogramming,t3_1m96c6q,False,
n54rbz8,"In my salad days, we were called 'programmers'. I did not use the term 'engineer' because I was also an electrical engineer and I did not consider software 'engineering'. But I relented to force majeure. Later I would similarly not identify as an 'architect', but again relented because that's what folks expected.In the end, these are just words, and within the bounds of their context can mean anything you want them to.",ziggurat29,2025-07-25 18:27:25,25,learnprogramming,t3_1m96c6q,False,
n54x9pd,"Software isn't just written for web or mobile apps. So that's one reason right there it wouldn't make sense to call a software engineer a web or mobile developer.The ""engineer"" part is just a title. My job title is frontend software engineer, but I go by software developer in casual conversation. I don't do anything with web or apps...I haven't built a website in years. I do use front end technology though and create tools for the front end teams that are building out web applications, just not anything I'm involved with directly. So calling me a web developer or app developer would be flat out wrong cause it's not what I do.The majority of my friends in tech are back end software engineers, and the mere mention of any front end/web tech makes them gag. :face_with_tears_of_joy:",ponchoacademy,2025-07-25 18:56:10,17,learnprogramming,t3_1m96c6q,False,
n55659o,"In general, Software Engineers will typically have some sort of 4 year degree or higher in a software related discipline. Web Developers and such do not.",DonkeyTron42,2025-07-25 19:40:05,10,learnprogramming,t3_1m96c6q,False,
n54ysou,"How Canada defines it.[https://engineerscanada.ca/become-an-engineer/use-of-professional-title-and-designations](https://engineerscanada.ca/become-an-engineer/use-of-professional-title-and-designations)TLDR: Engineer is a title where people know absolutely how their tech works, with a high regards to safety. And has been watered down by programmers misusing the title.Edit: A lot of the replies prove the watering down of the engineering profession.",OneLeft_,2025-07-25 19:03:32,7,learnprogramming,t3_1m96c6q,False,
n54p7u9,"While I’d say a lot of people use it as a catch all term like some have already pointed out, it may more specifically refer to a programmer, developer, etc. who works and talks directly to a client and then engineers their user requirements into functional/non-functional requirements and stories that are more granular and tech oriented for other programmers and/or themselves. So if you’re working solo, you’re always a software engineer, but if you’re a dev on a team you may not be. That’s only if you want to use a rather strict definition though.",Professional-Head963,2025-07-25 18:17:16,5,learnprogramming,t3_1m96c6q,False,
n54n0e0,"Yes, it's a general term for someone who does software development.",RolandMT32,2025-07-25 18:06:44,13,learnprogramming,t3_1m96c6q,False,
n54wntg,"People have their own definitions. There's gonna be some disagreement.Everybody who's writing code is a programmer, including web developers and software engineer.If you're professionally writing code, especially in a team, especially on a larger piece of software, especially if there's a lot of planning involved, with metrics and tests and support, you're probably doing more ""software engineering"" than ""programming.""If you're making software and it's specifically a website, you're a web developer. If your web developer work involves a lot of HTML and JavaScript, you're a ""frontend developer,"" and if the user can't see your code, you're a ""backend developer.""",captainAwesomePants,2025-07-25 18:53:15,6,learnprogramming,t3_1m96c6q,False,
n54p2n7,"In many countries the term ""engineer"" is protected and requires licensing to call yourself one. In the US, civil, electrical, mechanical engineers are licensed, but ""software engineer"" is not.It depends on where you live, but it could be a crime to say you're a software engineer if you aren't.",wkw3,2025-07-25 18:16:33,13,learnprogramming,t3_1m96c6q,False,
n4vj3ai,"Competitive programming skills are useless in the real world. They won't even get you through interviews.Competitive programming is a kind of sports. That's it.Real world programming needs *projects*, real applications, not some fictive assignment which is just about getting solved as quick and dirty as possible.Real world coding also focuses on the diametral opposite of what competitive programming focuses on: on stable, readable, maintainable solutions, not on one-off, quick and dirty, obscure solutions that nobody can maintain afterwards.The only thing that you might benefit from, and I doubt even that, is that you have honed your problem solving skills, but my doubt stems from honing these skills in one single direction, in mostly mathematical algorithms. You also have learnt to focus on narrow, small, contained, and very restricted problems, instead of on the large picture of a full fledged application.Use your skills and start building real world applications. Check the **Frequently Asked Questions** here in the **Sidebar** for plenty **Project Ideas**. You will need to start small as you don't have acquired any real application development skills.",aqua_regis,2025-07-24 10:31:42,125,learnprogramming,t3_1m80qyh,False,
n4vv049,"Competitive programming helps sharpen your logic and problem-solving, which *is* valuable—but most industry jobs don’t revolve around writing ultra-optimized algorithms in isolated problems. Instead, you’ll often be working on system design, data pipelines, integrations, and code that has to be readable, maintainable, and user-focused.If you’re not interested in web or app dev, that’s fine—there are other great paths:* **Game development**: Check out Unity or Unreal Engine with C# or C++.* **AI and ML**: Your algorithmic background is a strong foundation. From here, you could pick up Python, NumPy, pandas, scikit-learn, and TensorFlow/PyTorch. * **Cybersecurity**: It’s a broader field that includes scripting, systems, and network analysis. Python and bash scripting are especially useful. There’s also a lot of demand for automation skills in this space.The key now is to *apply* your problem-solving to real-world tools and workflows. Start building small projects, experiment with frameworks, and maybe even contribute to open source.You didn’t waste your time—just shift gears from abstract puzzles to things people actually use. Happy to recommend project ideas or learning paths depending on which direction you want to take.",DataCamp,2025-07-24 11:58:15,19,learnprogramming,t3_1m80qyh,False,
n4wrvf2,>What do I even do with competitive programming skillsProgramming competitions. That's it. That's the list.,PlanetMeatball0,2025-07-24 14:53:27,5,learnprogramming,t3_1m80qyh,False,
n4vk57x,"The contest style programming skills aren't especially useful in industry outside of some very specific niches that still care a lot about optimization or are trying to solve theoretical problems, computing power has scaled so much that slight inefficiencies in code are usually cheaper than the developer time to write and maintain the more complex code.But the problem solving ability and language knowledge you get from it is still very useful. Assuming you want a career in software I'd recommend, like your friends, that you start building live applications and learning best practices. A degree program is best, but it can be self taught.For the vast majority of jobs you'll want to start turning your problem solving to questions like ""how can I make this the most robust?"" Or ""What would make this code easiest to reuse and maintain?"" And those skills generally come with building things you actually have to deploy and support.",AsleepDeparture5710,2025-07-24 10:40:28,6,learnprogramming,t3_1m80qyh,False,
n4xrz63,"Well, I teach in college. The highest rate of finding a job was in the hackathon club. And the second highest rate of finding a job is in the competitive programming club. So don't feel bad.Being good at competitive programming means that you learn how to recognize fundamental problems fast and how to get to a solution fast. And how to debug complex problems fast. This is all very valuable.\> What can I actually *do* with these skills? Is there any career path that values competitive programming? Or should I just start from scratch with web dev like everyone else?Well, new flash for you. There are essentially no applications out there that are not fundamentally web applications. Today anything that is user facing is either a mobile app, a game, or a webapp. Every other kind of development are essentially in support of application developers. Why do we make operating systems? So that we can make applications to run on them! Why do we make databases? So that we can make applications better. Why do we make AI models? So that we can use them in applications.So should you learn webdev. Yes, you absolutely should. Because most applications will be web apps. Now you don't necessarily need to be extremely good at it. Especially if you are going to work in more inner layers of computing. But no one will take you seriously if you don't seem like you can cobble up some application up.I personally never really do front end work. I hate it. But the easiest way to share what you do is to set it up as a webserver of some kind. I tend to focus on the back end pieces where most of the interesting computation happens.What should you do? Where should you go? I don't know. It depends on what YOU want to do. But it seems to me that you want to solve deeper problems than making a cute applications. And good for you, I hate that shit too. How are you going to get a ob, well, you are going to need to find company that does this kind of work. You need to figure out what you care about and what you want to do.There are plenty of database companies. There is plenty of work in server administration, cloud, and infrastructure. There are plenty of needs in AI, model, development, optimization. There are plenty of jobs in various kind of data mining. We still need compiler people. I had a student hired to write kernel modules. There are a lot of ""systems jobs"".To qualify for them, you need good system understanding. Often that does not happen until people focus on that in grad school. But it is possible out of a bachelor.",esaule,2025-07-24 17:37:11,3,learnprogramming,t3_1m80qyh,False,
n4vo3yv,"You definitely have the fundamentals down.Now its time to come up with some stoner ideas that are so crazy they just might work :face_with_tears_of_joy:But seriously, deciding what you think is interesting and mind blowing where you say ""if i could build that, thatd be crazy"" in awe is a good startIt inspires an ambitious goal and requires you to go through the phases of solving a real world problem and really getting your brain going for that kinda thingJust my thoughts",MostGlove1926,2025-07-24 11:10:40,3,learnprogramming,t3_1m80qyh,False,
n4vk53d,"Your teacher was wrong. In general, you always have to doubt anyone who teaches programming in an academic setting unless you know they've worked in the industry recently. Most of them haven't written production code in decades, if ever. Competitive programming has absolutely nothing in common with real-life code. The fundamental skill it requires is useful, but it's taken to a counterproductive extreme. Find something you want to make, and then use what's generally considered the best language/frameworks for that specific job. That will let you learn programming the way you actually learn it on the job.",Dissentient,2025-07-24 10:40:26,7,learnprogramming,t3_1m80qyh,False,
n4y46wf,"Going against the grain. It’s about competence, there’s different ways to show it. You can learn a domain, web dev, ai/ml or cloud or you can focus on DSA, abstract problem solving which competive programming kinda is . One path is great for your resume and behaviorals and another is great for your technical interview ability. Focus on whatever you need at the moment to get a job. Not getting interviews -> learn in demand skills for a domain. Failing interviews-> learn problem solving.People who say DSA etc are useless completely ignore it’s the foundation of computer science which is all their shitty web app, pc game or ai girlfriend is at its core. Most companies work on proprietary technology at such a scale that no matter what solo project you did the most transferable skill you could bring is your raw compute power.And that raw compute power doesn’t come from going through sheets of questions. Learn to recognize patterns and extract relationships from data. it doesn’t take a 1000 Leetcode or blind 75. You learn by doing and you get better by failing. In fact people who learn problems instead of problem solving can pass interviews by cramming but it quickly becomes time wasted once the short term memory fades. But you probably have a high paying job by then so jokes not on you if you can keep it. Now companies that aren’t at that level giving out Leetcode style interviews, fuck them. Ask me about my day and give the job to your ceos third cousin and be down with it.",stakidi,2025-07-24 18:33:24,2,learnprogramming,t3_1m80qyh,False,
n4z62bx,"Competitive programming skills are far from useless. They simply represent a subset of skills that are smaller in scope than the scope of full-stack development.All you're missing is the experience of connecting your skills to the larger picture of assembling a complete app. The experience in creating logic that you gained will surely serve you well when you're trying to find ways to make a project function as intended - but you'll need some runway on the nitty gritty of actually connecting those different layers before it will come to you fully in the form of intuitive creativity when you're making your full scale apps and projects.EDIT: For clarity, I'm talking about things like discovering and implementing new libraries, connecting the various layers of your web app to one another, and so forth. There are many ways to do things. If you try to learn everything, you'll have a shallow grasp of things - pick a stack you like, even if it isn't the most popular, and learn the heck out of it by building apps, from the basic up to the advanced.",cheyyne,2025-07-24 21:32:52,2,learnprogramming,t3_1m80qyh,False,
n4vkerr,">Is there any career path that values competitive programming?No, competitive programming teaches you how to write unreadable and unmaintainable code in a very small context. Competitive programmings only benefit is learning how to write algorithms in the most efficient way possible which is great, but when you've got a team of 5-10 other developers working on the same code base, the last thing you want is your code to be difficult and hard to understand. In 90% of the jobs out, saving 10ms of execution time isn't a goal (unless your in trading software for example).I'd much rather have someone who writes clear, understandable code and help them understand performance than the other way around.>I don’t even know where to use the problem-solving and coding skills I built upThe reason why is the problem solving skills you learned are not the problems you face in the real world. You figured out how to write some algorithm in the fastest execution time possible and out in day to day life people are writing integrations to make 2 systems talk to each other, aggregating data from 3 different databases into one export, building API's with infrastructure that scales based on user load.>Or should I just start from scratch with web dev like everyone else?Yes, its what is in demand and jobs are looking for. You are more than welcome to say ""well i don't want to learn web dev"" and attempt to land jobs on old stacks no ones taking (like winforms) but if you limit yourself to just c/c++ your options become even smaller (game dev, embedded dev...etc) as a new grad.There are backend, front end and full stack roles. Look at whats in demand near you but i imagine you'll see more full stack/backend than just dedicated front end roles these days (At least i do in my area).>Anyone else been through this? How did you figure it out?If you enjoy programming and building stuff, you should stick with it and learn a more marketable skill within the domain. Meaning, look at pluralsight, udemy for courses that peak your interest or seek out a mentor in your area or online to help guide you towards a path that will result in a career.",plyswthsqurles,2025-07-24 10:42:36,1,learnprogramming,t3_1m80qyh,False,
n57caoa,"I'm 32 and starting my coding journey. I feel too stupid all of the time. Like ""i'm way too old to be learning and I should have started when I was 16."" Which is nonsense of course. But I catch my self getting better every week. Even if it's small progress.Stick with it you'll get it. It's not easy at all. There's a reason their called languages because it feels like learning Italian or something. take it week by week. I'm sure you'll start to realize you're catching on more than you think",Principledoug,2025-07-26 02:59:49,67,learnprogramming,t3_1m9ih9t,False,
n57ixz1,"I tried learning programming several times in my life.At 16 I tried gamemaker and learning by myself, learnt nothing and gave up.At 20 I tried grasshopper a google app designed to teach, when it came time to type I realised I had learnt nothing and gave up.At 25 I tried some python tutorials, wasn't learning and quit.At 28 I did a short course through TAFE. This time I committed as it was inperson and I took time off work. Found I learnt fundamentals but the class was too slow, the assignments were where I learnt the most to complete projects.At 29 I took CS50X found it very tough gave up midway.At 30 I repeated CS50X and finished it and was finally confident that I could program.If i asked my 16 year old self I would never have thought I could learn it but after 5 times giving up it finally clicked for me.If you have any questions feel free to ask me.",k-type,2025-07-26 03:46:40,34,learnprogramming,t3_1m9ih9t,False,
n57gq2b,"Please take a class.Not making fun of you, but there are some people who just immediately understand some programming concepts after reading an article or watching a video, and then… there are people like you and me. We need stuff explained for us, at least until we hit a basic level of competency. I promise you that stuff eventually starts to make sense.You may be tempted to try to use an LLM to teach you, and while that might work for basic concepts, I’d be extremely nervous about trying that. My experience using LLMs right now is that they will absolutely steer you into a ditch if you let them, and you don’t know enough yet to know when one is hallucinating at you",BigLoveForNoodles,2025-07-26 03:30:41,18,learnprogramming,t3_1m9ih9t,False,
n57uoyo,"[Python Crash Course, 3rd Edition: A Hands-On, Project-Based Introduction to Programming 3rd Edition](https://www.amazon.com/Python-Crash-Course-Eric-Matthes/dp/1718502702/ref=pd_lpo_d_sccl_2/144-0370345-6176020?pd_rd_w=yKBfp&content-id=amzn1.sym.4c8c52db-06f8-4e42-8e56-912796f2ea6c&pf_rd_p=4c8c52db-06f8-4e42-8e56-912796f2ea6c&pf_rd_r=XBBS4EBVCBBQRV86M6KX&pd_rd_wg=isYTz&pd_rd_r=9da94c7e-583a-4044-a6dd-833cd812e847&pd_rd_i=1718502702&psc=1)This isn't a /r/learnpython problem, this how to study problem. 1. Buy the physical book.1. Create a distraction free work area1. Disable your internet on your computer1. Place your phone where you can't see, just seeing the phone will distract you. 1. Figure out how much time per day, you want to study the book. Create a schedule. 1. Read the book, take notes, and take a 5 minute break every 25 minutes. (https://en.wikipedia.org/wiki/Pomodoro_Technique)1. Rinse and repeat.Two years and you still don't understand python? You really need to ask yourself, why do you want to learn python, the reason why it's taking you so long, its because you have reservations of learning python because you have no clear idea, why you want to learn, in the first place. **PS:** Don't post your age on social media, now that is plain stupid, if not dangerous.",rustyseapants,2025-07-26 05:17:51,13,learnprogramming,t3_1m9ih9t,False,
n57esjq,"I do think that wanting to contribute to open source projects at that stage is a bad idea - any problem that your skill level would allow you to solve is already done.I do not believe you're too stupid. You just need to find your approach. Nobody is Linus Torvalds (not even Linus Torvalds - he's a genius, but he's not the mysticized version that most people see him as).I believe anyone can learn to code. Not at the same speed or depth maybe, but coding anyone can do.I can't write you a roadmap, but if you have specific programming related questions, feel free to dm me. I've helped a few people on here comprehend what they're looking at.My specialty is C# / .Net, but skill in programming is broadly transferable.",EliSka93,2025-07-26 03:17:04,7,learnprogramming,t3_1m9ih9t,False,
n57boai,Join a class or a program in community college. They have to actually sit with you and explain it. Watching YouTube tutorials is fine if you’re just trying to scrape by; but actually answering a student’s questions is done in a classroom.,Mojibacha,2025-07-26 02:55:38,4,learnprogramming,t3_1m9ih9t,False,
n580dmb,"Let me start with slight criticism, people read better when you have paragraphs in you're text.You are too stupid only if you think you are too stupid. Programming is a learnable skill to think in smaller mini steps with particular attention to details and how to organise them.How do you learn it? You wouldn't believe, but practice.Now, that's not very useful advice and since I don't know you advice can only be generalised.You know some programming this means if I give you a task to build auto guiding software, you will not know how to even start, but if I give you task to build little function that sums list of numbers, you'll probably will be able to do it.Practice: \- build smaller projects YOU want to build (your interests fuels your skill) \- find platforms that have graded challenges (codewars was helpfull for me long time ago) \- read other people code (try to build something first though \- watch talks about programming instead tutorials how to do somethingHere is one of my favorite talks [https://www.youtube.com/watch?v=IcgmSRJHu\_8&t=1s](https://www.youtube.com/watch?v=IcgmSRJHu_8&t=1s), it's about how to make impossible state impossible.",runtimenoise,2025-07-26 06:07:53,5,learnprogramming,t3_1m9ih9t,False,
n57d7nn,Take CS50X it will be hard but it’s ends the imposter syndrome,stakidi,2025-07-26 03:06:09,8,learnprogramming,t3_1m9ih9t,False,
n57cee4,"I found the further I got in Python the more confusing it became. I have learned a lot more using C# and currently Java. I wouldn’t worry about contributing at this point. I would be focusing on making things. Anything really when you are still getting used to OOP concepts, program structure , language syntax etc. Pick anything that is well laid out so you can figure out how YOU would implement it and then go back to someone else’s and compare. When you get stuck research the specifics you are having problems with not “where did I mess up on this tutorial”.",googleaccount123456,2025-07-26 03:00:32,7,learnprogramming,t3_1m9ih9t,False,
n57lsrx,"It’s about levels bro. What you’re experiencing is normal. You’re struggling because you have no idea what you’re doing. This happens when you don’t have enough prior knowledge to build on. Trying to tackle projects beyond your current level will give you brain rot. Fill that gap: buy a book, commit to reading it, work through each chapter, and build the examples. Some people can’t follow YouTube or blog tutorials easily, and that’s completely fine. It’s just how you learn.",AncientDamage7674,2025-07-26 04:07:32,3,learnprogramming,t3_1m9ih9t,False,
n4t2mgx,"Simple. You're not. 40 minutes a week with no outside work?Maybe tell them about computing without teaching them programming? I mean, seriously, how will they even remember what you told them a week from now. With no homework, how will they practice.It seems pointless to have such restrictions and expect anything out of it.",CodeTinkerer,2025-07-23 23:35:20,180,learnprogramming,t3_1m7okmf,False,
n4t2qbl,"This is way too advanced. Stick to python and basic procedural programming basics: IO , conditions , loops, functions and files.Add in some tkinter stuff towards the end but don't rely on them understanding it completely. Just seen it as a cool thing they can make",gymsmackhead,2025-07-23 23:35:54,46,learnprogramming,t3_1m7okmf,False,
n4tf4j7,"I've tutored coding for almost 10 years (both as main job and as side gig). Here's some of the things I found from students who were in similar situations (1 hour a week schedules).I saw a comment below that said to teach them ABOUT the world of programming and computing, rather than actual programming, and I think that is the way to go given the constraints. That being said, here are some opinions/advice for IF you have to go through the programming route:\- Language Choice: Don't use Unity if they aren't going to be doing things on their own time. I tried with a student once, who specifically asked for it. The result was that nothing got done, and nothing was learned because there isn't enough time to understand concepts without homework / self learning. Sure, he could memorize some scripts, and make something move, but at that point, is that really programming? I eventually convinced him to move to Python.\- I would center my approach around the concept of ""how computers work and how to think systematically"". If you make the content of the class enjoyable, and make the learning fun/interesting, then they will want to do more on their own time. Instead of making a curriculum around ""how much can I get them to learn in this time frame?"" (As other users have said, that is no where near enough time), make it be ""How do I get them to learn a few cool stuff and develop an interest in wanting to learn more?\- The above point is why I would pick something like python, or even html/css/javascript (yes, 2/3rds of those aren't ""programming"" languages). The reason being the lower hurdle of entry to getting something they can make working, and they can see they made. I used to believe that if someone wanted to learn properly, start them in C. Nowadays, my viewpoint has changed to ""Start them in python so you can hook their interest with a lower bar of entry, and THEN dump them into a language like C#/Unity/Language of choice once they understand the basic concepts and are interested in the next steps"". Heck, if they are interested in AI, staying in python is great.\- You said you tried before and it was too confusing for them. I don't know how you explained it, but I'm going to give 2 extreme scenarios as an example. Look at this from a students point of view. \- Scenario 1: You go to class, you need to either learn what int main(int argc, char \*argv\[\]) means, or be told to memorize and learn it later. The former means needing to learn functions, args, arrays, return types, and more. The latter is encouraging not critical thinking. After that, you do printf(""Hello World"");. Then you need to learn what compiling is, and how to run the program. All that for Hello world. \- Scenario 2: you go to class, you type print(""Hello World""), and it shows up on your screen the line below. You made something. Your teacher can now introduce concepts one at a time, each with you making something. For example, maybe you introduce variables next, and create a Hello, name. Then functions, and create a print\_spam. So on. Since I was tutoring, I was able to tailor projects to each student's interests (Instead of random number generator, I can do random kpop member or something), but for a classroom, it should be more generic, and maybe more open ended as a project.\- Going to say this point again: with so little time, The best curriculum in my opinion is one that gets them interested and learning how to think critically, rather than one that dumps as much info as possible that they may or may not retain.",MagicHatJo,2025-07-24 00:46:36,30,learnprogramming,t3_1m7okmf,False,
n4t1grm,roblox studio is as basic as I can think for gamedev with coding.,ibrasome,2025-07-23 23:28:54,13,learnprogramming,t3_1m7okmf,False,
n4t3nxr,"Well, let's start with the fact that your plan is nonsense.Now let's look at the possibilities.They all have smartphones, right?",Alaska-Kid,2025-07-23 23:41:05,15,learnprogramming,t3_1m7okmf,False,
n4tdfs3,>class is only there to kind of teach them how computers work and how to think systematically.You could follow CS50's UT curriculum for non tech students about the basics of technology. [https://cs50.harvard.edu/technology/](https://cs50.harvard.edu/technology/),AloeVera172,2025-07-24 00:36:49,5,learnprogramming,t3_1m7okmf,False,
n4tcdpk,"40 minutes they are not going to learn much. Do you have criteria for what they need to learn or it's all up to you? I would set two goals one the minimum you want them to learn and the other an ideal amount.Start with pseudocode, and get them to right instructions for each other to do simple tasks like making peanut butter sandwich or set the desks up like a maze and they need to write instructions for someone to navigate the classroom.Depending on their age you can focus on either scratch or python.Spend the first 10minutes recapping what you learnt last week.",k-type,2025-07-24 00:30:43,3,learnprogramming,t3_1m7okmf,False,
n4tcuxd,"If you can get your hands on Arduino boards (or some cheap clones) that will probably be the best option. As someone who took a class on unity in high school, there's almost no way it would've worked out meeting once per week -- we met 4x/week and even then it was still a bit tough for many students without prior knowledge.I may be a bit biased as I started with C++ and don't regret it one bit, but you can really go as light or in depth with C++ as you want when programming Arduino boards. Heads up though, if you ever get really advanced you may need to switch to the platformIO IDE, since it's vscode-based and makes it easier to work with multiple files.",inventord,2025-07-24 00:33:30,4,learnprogramming,t3_1m7okmf,False,
n4t1wyy,Scratch.,SlingoPlayz,2025-07-23 23:31:23,9,learnprogramming,t3_1m7okmf,False,
n4t4qhg,"That’s rough. I doubt your students will get very far in a year. I would stay with the basics. Variables, operators, branching and loops. I’d stay away from Unity- it’s scripting a game engine, not programming.",cib2018,2025-07-23 23:46:57,3,learnprogramming,t3_1m7okmf,False,
n4tukqe,Poo?,zeocrash,2025-07-24 02:16:45,30,learnprogramming,t3_1m7s9xo,False,
n4tyj1o,Create your own pet-project - even something simple will teach you a lot and help you land your first job.,zmey56,2025-07-24 02:40:40,18,learnprogramming,t3_1m7s9xo,False,
n4tuumb,"Start to go down the path of one of these languages and choose a framework. Flask, .NET, React, a lot of developer positions will be asking more for specific frameworks and also what you can do in those environments and less about the languages you’ve learned.",Avokei,2025-07-24 02:18:23,10,learnprogramming,t3_1m7s9xo,False,
n4vmy19,"Software engineer here, in title mostly these days, but I did backend stuff for the first few years of my career in software. Now I do more tech strategy and communications on a team that is not really technical. You’ll be surprised at the opportunities that can come from having these skills, so I like to think of programming as a skill, not a job. With a basic understanding and a desire to put it to work, choose your areas of focus carefully. It’s tempting to dive into a little bit of everything, but in my experience, especially with newer people, they offer more to a team when they come in with some capability in a certain role. You can always learn what you need to about other areas on the job, but if you decide you like front end stuff, dive into it and do it strategically. Maybe ask an AI what front end frameworks are in the highest demand right now… pick one, like react, and learn it well. The sooner you can start contributing something to a team, the better. Too often we see juniors in our world who are smart and capable but need too much handholding, so coming in with a real understanding of what you’ll be contributing to and you’ll be shocked at how grateful senior people are to skip the handholding phase.",lubicke,2025-07-24 11:01:57,9,learnprogramming,t3_1m7s9xo,False,
n4tuv0i,An employer;),oandroido,2025-07-24 02:18:27,13,learnprogramming,t3_1m7s9xo,False,
n4tycsz,"So you know some basics. I hate to break it to you, but unless you are an extremely gifted programmer, you won’t land any job like this. Get a degree, learn the fundamentals (logic lemmas, advanced maths, database theory, optimization research, networking theory, compiler structure, …), and then get a job. That said, depending on the university, you might be able to do some small programming side gigs.",Comprehensive_Mud803,2025-07-24 02:39:36,25,learnprogramming,t3_1m7s9xo,False,
n4u03rb,Connections,mierecat,2025-07-24 02:50:30,3,learnprogramming,t3_1m7s9xo,False,
n4vwopv,"How do you want to make money?Is it through employment?Look for a paid coding internship. The bar is lower, the company generally understands that it is a teaching experience, and its a form of short term employment that raises green flags down the line.Is it through a solo project?Then you probably aren't gonna be making money. Find one of your personal interests and build something useful to you. Then distribute it through whatever mechanism you want to learn about. Keep in mind that many cloud providers have a free tier, and some have a student tier.",Sir_lordtwiggles,2025-07-24 12:09:09,4,learnprogramming,t3_1m7s9xo,False,
n4tw9m0,"I'd start with C. I started with C after a failed start with JS, and I'm really grateful for it.",paddingtonrex,2025-07-24 02:26:58,6,learnprogramming,t3_1m7s9xo,False,
n4txi2r,"Get a degree first. It helps getting jobs, visas, green cards etc. And you’ll learn some fundamental theories that are good to know.",Comprehensive_Mud803,2025-07-24 02:34:26,2,learnprogramming,t3_1m7s9xo,False,
n5dis2j,Why not just… try to build something?Finding a small goal and working towards it little by little has to be more interesting than just learning basics with no direction,deblob123456789,2025-07-27 03:31:29,75,learnprogramming,t3_1mac3w7,False,
n5dip4p,"If you want to build a game in unity or create a website, do those things. See if you like doing them. Google what you don't understand. Look at examples. Look at documentation. Even professionals spend a tremendous amount of time saying ""I don't know how to do this... yet"" and Googling for information. Yes, programming is all ""numbers and strings"". The act of programming doesn't suddenly morph into a different activity based on what you're creating. You might enjoy building something if you're excited about using the end result, but the tools involved are going to be largely the same.",Own_Attention_3392,2025-07-27 03:30:52,20,learnprogramming,t3_1mac3w7,False,
n5dmvc8,"It’s the same when you want to properly learn a new sport. It doesn’t matter if you know how to play if you don’t have enough agility to reach the ball, or enough stamina to last a match.So, half the time, you’re doing endurance and agility training. You need that foundation before doing anything. And it can be repetitive and boring.Strings and numbers are similar.",Joewoof,2025-07-27 04:01:44,9,learnprogramming,t3_1mac3w7,False,
n5dibcc,"It’s all just numbers and strings.  Though sometimes they’re bundled up into objects.Oh yeah, and even strings are just numbers.",mapadofu,2025-07-27 03:28:02,6,learnprogramming,t3_1mac3w7,False,
n5drilv,"It’s most likely boring because you’re not building something. Try making a simple game (not with unity! I’m talking a text-based RPG), a winforms app, etc (Not with Unity because it in of itself is daunting, and it’s easy for a beginner to feel overwhelmed and quit)",Feldspar_of_sun,2025-07-27 04:37:54,6,learnprogramming,t3_1mac3w7,False,
n5dwqdy,"For me it was boring at the very very beginning. I actually tried to learn twice before I picked it up for real. First time I quit after 1 day. 2nd time after 1 week. 3rd time I got completely hooked. The thing that flipped the switch was when I finally built something real. When I started learning at first it was learning for learnings sake. As soon as that building potential clicked for me, learning wasn't for learning sake, it was learning new skills that meant I could build bigger and better things. After that learning felt like leveling up in a way. I think you have to build something you think is interesting, and if you don't get the itch after that you can decide. You have to do that simple stuff first though. Those are the building blocks of every project. Just tough it out for a bit and then you'll have a clearer picture.",Datron010,2025-07-27 05:20:36,4,learnprogramming,t3_1mac3w7,False,
n5djphp,"Skip it if you want, have a try at making a website.When my generation learned to code at home in the 1980s, we didn't really bother with any of the principles, we just started trying to make games.You learn as you go, plenty of people learn to code just by trying to make stuff.",ToThePillory,2025-07-27 03:38:17,3,learnprogramming,t3_1mac3w7,False,
n5djud5,"If you’re overwhelmed with the uncertainty of learning the basics you need to step back and look at your vision. If your goal is making a website or coding a game then do those things. However, you’ll quickly realize when starting either of those projects how important the basics are. Data types are boring but they are essential to control flow. Can’t create a variable to store your character state if you’ve ignored the basic principles of encapsulation. My suggestion is start a project (small) and finish it to the end. You’ll learn a lot. An example would be a text based adventure or something of the sort.",johnmatthewwilder,2025-07-27 03:39:18,2,learnprogramming,t3_1mac3w7,False,
n5dkav5,"Yes, most things I learn are boring and take at least 100 hours to really understand what it's about and if I enjoy it. Other than that don't just learn concepts and do nothing you have to build things. Yes you can skip it if you want. Instead of taking a general goal of ""learn programming"" say ""i want to make a game"". Just be prepared to research and learn the relevant information to the task as it comes up or your foundation will be weak.",Fine_Yogurtcloset738,2025-07-27 03:42:41,2,learnprogramming,t3_1mac3w7,False,
n5dylso,"Like others suggested, try building something. I got into the headspace young, and it made everything make sense. You can even do this without fully building something. Whatever game you're playing, start wondering how they make things happen. You pick up 15 gold. Well first you have to have a gold object. Then maybe the gold drop was a random amount. So I need to be able to randomize the gold drop between x and y values. Then I have to have somewhere for it to go. So now I'm reassigning player gold to player gold + gold drop. But where even is my player gold? is it in some array or something? And for adding the gold, maybe I have an add object function. And it needs to check for what kind of object and where it goes. The more you think about the way you interact with technology in this way, the more while you're learning you'll go ""ahhh that would make doing xyz a lot easier/possible"".",Edraitheru14,2025-07-27 05:36:47,2,learnprogramming,t3_1mac3w7,False,
n5szbqd,"Vibe coding is a meme, not something to try and emulate. Ais are useful for speeding up boiler plate, discussing possible edge cases, writing some utility functions/methods etc. Its not to a point where it'll just completely write a full app thats actually good yet. Its just a time saver you use where you know it will work for the task at hand like any other tool.",Saereth,2025-07-29 15:05:06,52,learnprogramming,t3_1mcdj71,False,
n5t21s9,"I've tried vibe coding too. On the one hand, I had to fight with the LLM. I wanted to do a graphics application. I don't have much background in computer graphics. I don't know the libraries I should use. So, I let the LLM give me ideas and eventually settled on Python as the language.I've got a 2D array that is supposed to color a cube I'm having the LLM draw. However, it doesn't understand how to associate that 2D array with parts of the cube. It gets it upside down or backwards. I feed it screenshots, and it still can't figure out what's going on. It keeps proclaiming ""this will fix it"" and makes some random changes.Having said that, I did get it to work, eventually. If I had to do it on my own, I would probably have never started. It seemed too daunting, that I had to learn too many new things. So, it got me started, and while I was frustrated at times, it got me a lot closer to finishing than I would have done just by myself.It's the first coding project I've completed on my own since, well, almost ever.I think someone who knows NOTHING only builds really small stuff or has it solve homework problems. I can't imagine they get a real app working.Those who think AI will take over and don't want to learn programming should try it out. It's still far from easy to use, and you'd think it would be easier.",CodeTinkerer,2025-07-29 15:17:54,9,learnprogramming,t3_1mcdj71,False,
n5ucuqn,"1: it's terrible, stop ""giving it a chance"". Spend some time doing actual research and learning. 2: stop saying vibe coding, it a marketing term invented by an AI CEO.Instead of both, say ""cutting and pasting code that's full of bugs"".",mohirl,2025-07-29 18:53:16,5,learnprogramming,t3_1mcdj71,False,
n5tcnv8,"If you are not a programmer and don't know how LLM AIs work, it should be a pain.I love it, it helps me to do trivial-boring things. Say, I have this code: while True: perform_stuff() time.sleep(0.1)I just say the prompr *""precise timing""* to Claude, and it gives me 4 answers, including one with a technique which I did not know: `threading.Timer(0.1, scheduled_task)`.I could figure them out myself, or look after in StkOv, but it took 10 secs incl. copy-pasting code and writing prompt. Awesome.Again, if you're not an experienced programmer, probably you don't know why the original solution is bad, okay, you know it, but it was trivial, sometimes you just don't know that your solution is lame.I am learning Rust, and my favorite prompt is: ""*change this code to more idiomatic*"". If you know Rust a little bit, you know what I'm talking about.",ern0plus4,2025-07-29 16:07:24,4,learnprogramming,t3_1mcdj71,False,
n5t8p85,"It's not just you.There's a really fundamental problem here that's hard to get across to a lot of people.The people claiming AI is now writing most of their code for them are *lying*.And because most people don't know how to code, and keep hearing about AI primarily through the hype machine, they're confused when you tell them it's a lie, or they think you're being hyperbolic, or have some massive anti-AI bias, but it's just a really basic situation.The tech just isn't there for these purposes, but AI is the new Crypto or NFTs so there's a huge amount of energy out there spent by AI enthusiasts trying to convince other AI enthusiasts that it's working great.AI has uses. It's genuinely excellent as a second pair of eyes when you've made an obvious mistake that's a pain to see. It's terrible at actually writing code. Not terrible if you don't prompt it right, or terrible if you don't know what you're doing. It's inherently bad at it, and never going to get any better, because what most code requires is decent, sequential reasoning.",KingOfTheHoard,2025-07-29 15:49:02,6,learnprogramming,t3_1mcdj71,False,
n5tbymc,"I'm not good at coding at all - just don't practice a lot. Coding with AI has shown me that it's great for syntax and for whipping up a specific function, but once it gets past a hundred or so lines of code it gets confused about the larger context and becomes progressively more useless as the project advances. My best use case for it projectwise is for, like, short bash or Python scripts.",skoomaking4lyfe,2025-07-29 16:04:08,3,learnprogramming,t3_1mcdj71,False,
n5tm10c,"AI Is good for boilerplate only. Try to ask it to fix a bug, it created three more...",Mk-Daniel,2025-07-29 16:51:04,2,learnprogramming,t3_1mcdj71,False,
n5sxy45,"I’m pretty new myself but I fuck with CSS mostly. It helps identify concepts and small parts to it but once you interweave large CSS files with lots of cross talks, classes and ID’s it doesn’t know wtf to do.",kotokun,2025-07-29 14:58:32,1,learnprogramming,t3_1mcdj71,False,
n5t0q86,"It depends on how ""vibe"" it is. If you have too generic ideas only, then it's inefficient.",ItchyPlant,2025-07-29 15:11:43,1,learnprogramming,t3_1mcdj71,False,
n5t6z55,"The AI companies are boasting about their LLMs solving huge percentage of some challenging math problems better than majority of people. And then when we use them they reply very stupidly like they were never improved at all. Their responses like ""You're right, this is the way to do X"" pisses me off, once i said ""no this is how to do it"" (wrong answer) and it agreed, this is not how AI should work, it doesn't need to believe what the user told it like it's 100% truth. It should only work like that if the user tells it to act like that, not in casual conversation without user being aware of it.",RealMadHouse,2025-07-29 15:41:08,1,learnprogramming,t3_1mcdj71,False,
n4q7xnz,"Bjarne Stroustrup's book *The Design and Evolution of C++* answers this question, at least somewhat (section 8.3.1):> Type-security and uniform treatment can be achieved by using a single overloaded function name for a set of output functions. For example: put(stderr, ""x = ""); put(stderr, x); put(stderr, ""\n"");> The type of the argument determines which ""put function"" will be invoked for each argument. However, this is too verbose. The C++ solution, using an output stream for which `<<` has been defined as a ""put to"" operator, looks like this: cerr << ""x = "" << x << ""\n"";> [...] The idea of providing an output operator rather than a named output function was suggested by Doug McIlroy by analogy with the I/O redirection operators in the UNIX shell (`>`, `>>`, `|`, etc.). This requires operators that return their left-hand operand for use by further operations.So basically, the stream operators exist to allow a convenient and concise way to output multiple values.In modern C++ you could accomplish the same goal with a variable-argument function using templates, but early versions of C++ didn't have the advanced template features needed to make that work.",teraflop,2025-07-23 15:24:31,59,learnprogramming,t3_1m7bu98,False,
n4q5hk0,"They're an abstraction that represents a file, not a single operation. There's lots of things you can do with files, not just print to themEditA way to think about it is that cout is analogous to System.out, not the println method specifically",jacobissimus,2025-07-23 15:13:16,17,learnprogramming,t3_1m7bu98,False,
n4q5s27,It appears others have similar concerns. At least cout has an alternative in std::print https://en.cppreference.com/w/cpp/io/print.html,roasted_water_7557,2025-07-23 15:14:36,6,learnprogramming,t3_1m7bu98,False,
n4q5zfh,"The C++ standard library is famously poorly designed: yes, it's a bad API.",SV-97,2025-07-23 15:15:31,18,learnprogramming,t3_1m7bu98,False,
n4q9brp,"That’s a good question. It’s because whoever designed it (in this case Stroustrup, I believe) thought they were being extra clever by overloading operators. As a result, print calls are no longer atomic and proper formatting of the output is a nightmare. Boost overloads the % operator for formatting (get it?), and chrono uses the / operator for dates. Yes, auto date = 2025y / 7 / 23:face_vomiting:. These are all terrible, hard to read and hard to use. Absolutely awful designs, all of them. Anyways, now since C++23, you can use std::print and std::format instead, and I actually like these quite a lot (despite some minor quirks that will likely get fixed in time).",InvestmentAsleep8365,2025-07-23 15:30:51,4,learnprogramming,t3_1m7bu98,False,
n4rmf0s,"C++ uses >> and << for I/O to make it more flexible and extensible through operator overloading. It lets you define custom input/output behavior for your own types, which isn’t as clean with function calls. It’s not about being “better” - just a design choice to support C++’s emphasis on abstraction and extensibility.",alpinebuzz,2025-07-23 19:15:27,3,learnprogramming,t3_1m7bu98,False,
n4qv23q,"I'm not going to try and justify >, but you're confusing a few things in your question since your title question and your text post question are not the same. To answer your title question: Why are `cin` and `cout` not functions:Because they are analogous to `stdin` and `stdout` from C where those are also objects (general sense) and not functions. In C, if you have a block of code which reads from a `FILE*` you can pass it `stdin` and it will work. With `cin` and `cout` you can use them anywhere you'd expect an `istream` or `ostream`, respectively.",rabuf,2025-07-23 17:10:28,2,learnprogramming,t3_1m7bu98,False,
n4rik84,"Regarding why `cin >> x` but not `x >> cout`, it's important to remember how operators work in C++.https://en.cppreference.com/book/operator_precedenceBoth `>>` and `<<` are left-to-right associative which means that, without adding some special contextual rules, the interpretation of: ""hello world"" >> endl >> cout;Would be as: (""hello world"" >> endl) >> cout;And if you did make it right-to-left if it happened that a stream was on the right-most position (and would that make sense?) then you'd need to write your printouts in reverse order: endl >> ""hello world"" >> cout; // becomes endl >> (""hello world"" >> cout);Which would be a very poor choice.To avoid fighting the language grammar and making parsing even more context-sensitive than it already is, it makes more sense to have the stream on the left than on the right and visually that suggests using `>` (if you're going to use them as this ""pipe"" operator).",rabuf,2025-07-23 18:57:22,2,learnprogramming,t3_1m7bu98,False,
n4rsv8i,"Is just a different style, you can make your own if you want, with values separated by commas: [https://godbolt.org/z/nEndT9Y1e](https://godbolt.org/z/nEndT9Y1e)",Total-Box-5169,2025-07-23 19:46:19,2,learnprogramming,t3_1m7bu98,False,
n4q7w6i,"Because parens and commas are annoying when you want to output mix of variables of different types and text. Esp in a statically typed language. Printf is really annoying since you have to match placeholders to variables. And you cannot overload a function with all combinations of types and lengths. And you don’t want to call print separately in each piece of output. Almost every language struggles with it and does smth strange.Scripting languages and similar use all kind of var interpolation. And rely on checking var type at runtime - can’t do in c/c++. Java uses weird trick with + which suddenly calls toString() behind curtains. How is that reasonable - it’s the only implicit thing in Java. At least in first versions. Python secretly calls `_repr_` but Python does many strange things. Also, notice how Python moved from print with commas separating args (and ugly way of controlling formatting with `sep=` to variable interpolation with `{}`. C++ found a pretty clean way to do it using operators. And it’s more reasonable to put `cout <<` at the beginning. I think technically you can put cout at the end of expression by using right associating operator but why bother. Assignment works right to left, why not output.",giant_hare,2025-07-23 15:24:20,2,learnprogramming,t3_1m7bu98,False,
n5qnjc3,Also godbolt,HyperWinX,2025-07-29 04:46:29,14,learnprogramming,t3_1mc2a22,False,
n5qwznb,"This is an excellent trick if you want to learn assembly by studying your code.Also note that you can ""disassemble"" object files or executables to browse machine code inside as assembly, which is trickier and less readable than using gcc -S, but it's useful in case you don't have the source available.",captainAwesomePants,2025-07-29 06:05:52,11,learnprogramming,t3_1mc2a22,False,
n5r0ou6,"You don't know what you don't know. There's no way to ""figure"" this out except for stumbling into it.As you grow more experienced you start asking the right questions and more naturally stumble upon useful features.I would recommend looking into the gcc utilities such as objdump, objcopy, etc.",DustRainbow,2025-07-29 06:39:51,8,learnprogramming,t3_1mc2a22,False,
n5rym34,"You aren't an idiot. Quite the contrary, you poked at the boundaries of what you knew and discovered something more. Real programmers do that on a daily basis. You are well on your way.",lewisb42,2025-07-29 11:44:21,4,learnprogramming,t3_1mc2a22,False,
n5rizuy,"I get how easy it is to feel that way, especially with programming, but you don't know something until you know it. Plenty of people go until 55 before they learn something you knew at 15 and vice versa, just happens like that sometimes.",Fallout_NewCheese,2025-07-29 09:35:25,3,learnprogramming,t3_1mc2a22,False,
n5rgfah,"Why would it make you feel stupid, to not know about some very specific flag of gcc? Is it rather, that you didn't search for such a flag, or didn't have the idea to search for it, or that it could exist?I don't see a reason why this should make you feel stupid.",ZelphirKalt,2025-07-29 09:10:37,2,learnprogramming,t3_1mc2a22,False,
n5rul13,"One thing that was really cool when I was leaning assembly(for the same reason you did), was rewriting my program in C, and then comparing the generated assembly code to what I had originally written.",KwyjiboTheGringo,2025-07-29 11:14:52,2,learnprogramming,t3_1mc2a22,False,
n5swnhh,Everyday is an opportunity for learning!,drsoftware,2025-07-29 14:52:26,1,learnprogramming,t3_1mc2a22,False,
n5qqy92,"That's funny. I haven't seen what you're referring to, but I just started watching his channel after seeing him on Computerphile for a while now. He's got a podcast I'm going to start listening to when I get a chance called Two's Complement.",mathemetica,2025-07-29 05:13:48,3,learnprogramming,t1_n5qnjc3,True,
n5qr1c2,https://godbolt.org/,HyperWinX,2025-07-29 05:14:30,7,learnprogramming,t1_n5qqy92,False,
n5ityc9,"You definitely don’t need a paid course, there’s a lot of resources for free. freeCodeCamp, Codecademy, YouTube, etc. The JavaScript docs are also really good sources of information. If you need structure, a paid course would help but it’s definitely not needed",xAmity_,2025-07-27 23:56:26,23,learnprogramming,t3_1mb1ack,False,
n5iz39d,"CS50 - to learn programming fundamentals, followed by Odin Project - to learn javascript.Learning some programming fundamentals and some insight into what is going on under the hood will take a little longer in the short term, but will make picking up javascript easier in the long run.",plasterdog,2025-07-28 00:28:09,8,learnprogramming,t3_1mb1ack,False,
n5iyyn3,"All freely available. Start on YouTube and Google and look things up on MDN (the docs). Press F12 (as you're reading this if you like) in your browser and find your dev ""console"" to run code. Type along, don't just watch. Pause and play with the code. Make it break. Read the errors, Google them, fix them. Pick a small project as a vehicle for learning.Be clear on which environment you want to learn JS for/in, or you may get confused by sources on the web. Modern JS breaks down roughly as:1. The core language and intrinsic/included features/libraries available in every environment. Start here no matter what. Then...2. Browser based ""vanilla"" JS which is No.1 when executing JS using a web browser (E.g. Chrome). It's primary use here is to manipulate the DOM (page). The browser environment allows access to lots of APIs (not web services) for getting/setting data on the browser/page and reacting to events. You want to learn this if you want to do front end web dev.3. Node.js JS, which is No.1 when executing JS using... Node.js. It's a standalone JS engine (actually Chrome's V8), no browser (so no browser APIs). Instead it provides an environment with APIs for accessing the local system (OS, files, network...) which allows for building arbitrary applications, most commonly web servers. You want to learn this if you want to do back end web dev.",HashDefTrueFalse,2025-07-28 00:27:20,6,learnprogramming,t3_1mb1ack,False,
n5jelmw,"Watch @theavocoder animations explaining JavaScript event loop etc. The system behind callback invocations. Here's thing that i learned: JavaScript engine itself is single threaded, but the browser engine uses threads to do tasks parallel to your JavaScript code, such as XMLHttpRequest/fetch and everything that returns Promise objects. The function that you pass to Promise constructor (executor) is running on the same UI thread so you don't do anything computationally heavy there, instead you can use Web Workers to emulate browser apis off ui thread code execution. While scripts are loading they're parsed but they only execute when the script is fully loaded and parsed, so heavy scripts would delay the web site users from being able to interact with the web page elements. If you want to reference elements in a web page via JavaScript you need to make sure that the is fully loaded, otherwise you will get an error that you can't get elements by that id or class etc. You can also put the at the end of the so that when JavaScript will be executed it will know for sure that the body content is loaded. relative url references that you pass to (""fetch"" for example) aren't relative to the JavaScript file itself but by the html page that loaded that script. There's primitive types (numbers, bools, strings etc) and object types { } (Dictionary with special abilities)Learn the old way to make classes first, with function as a class constructor, function.prototype as a prototype object. Then learn the new syntactic sugar class definer, what i found out is the code inside it runs in strict mode.",RealMadHouse,2025-07-28 02:04:55,2,learnprogramming,t3_1mb1ack,False,
n5ivhms,Codeacademy seems more project based,Any-Use6981,2025-07-28 00:05:43,2,learnprogramming,t3_1mb1ack,False,
n5ivb8z,"""Best"" and ""Most Solid"" are pretty vague and subjective descriptors, so understand you're gonna get answers that are all over the place.That being said, in this day and age I honestly believe paid courses are not necessary. There's a plethora of free tools out there for you to get started; someone else has already mentioned a couple, but do your research and see what fits your ambitions and needs.",solvin-dev,2025-07-28 00:04:39,1,learnprogramming,t3_1mb1ack,False,
n5jb478,"Edx (uni courses, cs50 is there), roadmap.sh, freecodecamp, devdocs.io, developer.mozilla.com for js doc, books like “JavaScript: The Definitive Guide” by David Flanagan (7th Edition), but most important code a lot thats the best solid way to learn. Discipline fuel progress",notherex26,2025-07-28 01:43:20,1,learnprogramming,t3_1mb1ack,False,
n5jhnmr,either use anki or zemomemo to memorize the programming terms and code snippets in anki it's for making flashcards and zemomemo is more for generating quizzes based on what you typed in quiz yourself and familirize things and watch youtube tutorials for free,_sdfjk,2025-07-28 02:24:20,1,learnprogramming,t3_1mb1ack,False,
n5k4e4c,Im one of the guys learns the best by doing. I usually recommend picking some sort of project you would like to create. Then start from that Idea. Use Google and MDN if you get stuck.Learning is much easier If you know why you need an answer to a question.,LetscatYt,2025-07-28 05:10:17,1,learnprogramming,t3_1mb1ack,False,
n5k6roq,The most reliable way by far is to stop worrying about whether you're going to turn out badly if you don't get the best education possible and start learning anyway.,Putnam3145,2025-07-28 05:30:51,1,learnprogramming,t3_1mb1ack,False,
n5nrdo6,"CS50x is truly one of the best resources out there.I recommend that you do not watch the class straight. That you watch for shorter periods of time in which you can maintain your concentration at 100% (30-40m in my case).While you watch the class: take notes, keep the code editor open to practice the things you are learning. If you have any doubts, did not understand something 100% or simply want to know more about it, ask chatgpt. That's the only use you should have for now.Just accept that it will take you hours to complete an exercise until you can solve it. In your daily life as a programmer you are going to face situations like this all the time.",Neat-Computer546,2025-07-28 19:05:03,71,learnprogramming,t3_1mbovx7,False,
n5odzmt,How can someone be passionate about something they’ve never done before or have any experience with?,Gawd_Awful,2025-07-28 20:52:18,15,learnprogramming,t3_1mbovx7,False,
n5p8x1s,"my #1 tip to you is to completely stop using genAI tools until you can orient yourself without it. you are using it as a crutch and it's hindering yourself from learning anything, even outside of cs",NefariousnessMean959,2025-07-28 23:33:54,7,learnprogramming,t3_1mbovx7,False,
n5o3cz8,"anything is a ""good"" way to learn coding if you are passionate about it. You don't necessarily have to do CS50 to learn. There are tons of self-learning websites out there that can teach you coding at your own pace.",Islandboi4life,2025-07-28 20:02:27,3,learnprogramming,t3_1mbovx7,False,
n5nt5ls,"CS50 is a fantastic course, but it focuses more on teaching fundamental programming skills rather than teaching you how to build something right now. That's not a bad thing, but it might not be what you want.You won't get any value out of it if you just ask ChatGPT for the answers. The whole point is you're supposed to figure them out.You're not supposed to just ""know"" the answer. Experiment with it. Try things. Get stuck, try other things. You'll never learn if you don't actually struggle.If you really are stuck, ask for a hint - ideally from a real human like here on r/learnprogramming \- we'll be happy to point you in the right direction without giving it away. ChatGPT can do that to if you ask it to only give you a hint and not the answer.If you want something more practical try The Odin Project or FreeCodeCamp. You'll eventually need to learn all the same stuff, the difference is they teach by having you learn to actually build working websites as you go.",dmazzoni,2025-07-28 19:13:40,2,learnprogramming,t3_1mbovx7,False,
n5poth7,"My advice is to try to get comfortable with not understanding things, as it will happen a lot! I think it's more productive to simply seek answers to any difficulties you encounter (via chatgpt, stackoverflow, or a variety of blogs) rather than stress yourself out trying to resolve the problem yourself.No one is born knowing these things, it isnt an innate talent. Just keep steadily learning from the discoveries and innovations of others, and you'll gradually acquire a toolset capable of solving incrementally more difficult challenges. Just take it easy on yourself and remember to have fun!",TaoJChi,2025-07-29 01:03:45,2,learnprogramming,t3_1mbovx7,False,
n5nqg47,"I'm in week 4. Yes, I think so. It will give you a good start.",frivolityflourish,2025-07-28 19:00:27,1,learnprogramming,t3_1mbovx7,False,
n5nsk47,"Yes. I suspect you're getting frustrated and that usually doesn't make coding easier. The best thing you can do is just let yourself feel frustrated. You could be getting annoyed at how unfamiliar everything feels, or even annoyed with yourself if you expected to get & do everything in under an hour, and now you're disappointing yourself. Or a thousand other different feelings.Try again once the feeling subsides a bit. You'll get used to the feeling of being lost or annoyed, then you'll realize its not such a big deal. The first hundred times though, it will 100% feel like the biggest deal ever.",AccidentalNap,2025-07-28 19:10:47,1,learnprogramming,t3_1mbovx7,False,
n5q4asi,"Cs50 is great and teaches a great base line. I started with it and couldnt finish at first. You can check out 'the odin project'. Start with the foundations coarse. Its free and teaches full stack web development from the beginning. If you do it, id still sudgest doing cs50 after.And stop using AI! You need to learn to research and think for yourself! AI is a great tool but put it to the side until you can do projects on your own",CapnCoin,2025-07-29 02:34:19,1,learnprogramming,t3_1mbovx7,False,
n5r7dzb,"Don't use chatgpt, use CS50's own chatbot that is implemented in vs code. It actually talks you through the problem without straight up giving you the answer and is much better for learning. You also aren't allowed to use any other AI (I have no idea if they can actually test for this, considering the amount of people that take this course).",GildedGeese,2025-07-29 07:42:52,1,learnprogramming,t3_1mbovx7,False,
n4v3msp,"I’ve come across a lot of mixed reviews about Codefinity, so I’ve been hesitant to fully commit. On one hand, people seem to really like the hands-on, interactive lessons and the built-in AI assistant that seems super helpful, especially for beginners who want to stay consistent. But on the other hand, I’ve seen quite a few complaints about the pricing being unclear upfront and the content not going deep enough once you get past the basics. It sounds like a decent starting point, but I’m still unsure if it’s something that really helps you grow long-term or if it kind of plateaus after the beginner level.",DontTellBriansMom,2025-07-24 08:08:47,2,learnprogramming,t3_1m7yf1z,False,
n4v4egz,"From what I’ve seen and read, Codefinity seems like one of those platforms that has some good ideas but still needs work in a few key areas. The interactive lessons and AI assistant are definitely appealing for beginners, and I can see how that structure might help some people stay consistent with learning.But the unclear pricing is a red flag it’s something a lot of people mention, and it’s frustrating that you don’t get full details until after signing up. There’s also mixed feedback on whether the content actually progresses beyond the basics. Some say it does, others feel it stays too surface-level.It’s not a bad starting point, but I wouldn’t rely on it as a complete solution just yet. Hopefully they take the feedback seriously and make improvements over time, because there’s potential there but they’re not quite there yet.",Starkost,2025-07-24 08:16:10,2,learnprogramming,t3_1m7yf1z,False,
n4vbbs4,"> or are there better platforms out there for someone looking to grow step by step? Guaranteed to be plenty. Problem with your question is that in no way you mentioned *what* you are learning and with that, recommendations are, apart from general, impossible.Check the **Frequently Asked Questions** right here in the **sidebar** for plenty recommended (and free) learning resources, some even from top Universities.",aqua_regis,2025-07-24 09:22:19,1,learnprogramming,t3_1m7yf1z,False,
n4vhcq1,"It’s like Codefinity hands you a cupcake, then quietly asks for your credit card halfway through the frosting :face_with_tears_of_joy:. Decent for getting started though.",Brosb4,2025-07-24 10:16:52,1,learnprogramming,t3_1m7yf1z,False,
n4yeov9,"I used Codefinity for about 3 months. Honestly, it’s great for building the habit of coding daily, but I did outgrow it once I got past the basics. Still, it gave me a solid start.",SimplyNoobq,2025-07-24 19:23:31,1,learnprogramming,t3_1m7yf1z,False,
n50u06t,"I haven't tried it myself but I'm put off by things that ""teach you how to code"" but dont have you do it in a real environment, instead having you do it in browser. Especially if it costs money, sometimes places only want to make people ""feel"" like they're learning even though they skipped a bunch of the most important fundamental steps. (setting up a local programming environment) What do you do after you finish programming in their browser coder? It feels like they skip that step not in the interest of the person learning, but in the interest of signing up more people.Might sound cynical, but if it feels like they never go past surface level, id say the early signs of that is not having people code using real coding tools",_seedofdoubt_,2025-07-25 03:17:31,1,learnprogramming,t3_1m7yf1z,False,
n54t68i,"Great write-up! I’ve also been using Codefinity, and I totally agree it’s a solid platform for beginners, especially if you're starting from scratch or looking for a structured way to learn Python and other programming skills. What I appreciate most is that it's very hands-on. You can write and test your code in-browser without needing to install anything, which makes it super convenient for people who don’t want to mess around with IDEs right away.In terms of beginner-friendly platforms, Codefinity definitely ranks up there. The lessons are bite-sized, which helps with consistency and reduces the feeling of being overwhelmed. I also found the AI assistant to be surprisingly helpful. It’s great for quick explanations when you're stuck or just need something reworded. That kind of interactive support is something a lot of other platforms don’t offer, especially not at this level of integration.However, the pricing model is a bit of a downside. Like you mentioned, it’s not very transparent upfront. You get into the lessons and then suddenly find out about a subscription. I think they could do better there. And yes, some of the early Python lessons are very basic, which might not be ideal for those with prior experience. But if you push through the first few modules, the content does become more challenging and engaging.What I’d love to see from Codefinity is more intermediate and project-based learning paths especially for things like data analysis, web development with Python, or real-world app building. That would make the platform not just a good starting point but a long-term learning tool too.For anyone searching for a Codefinity review, wondering if Codefinity is good for beginners, or looking for online platforms to learn Python, I’d say give it a shot just go in knowing the pros and cons. It’s especially helpful for people who like learning through doing, rather than watching endless tutorial videos.",JoseMcMaster,2025-07-25 18:36:19,1,learnprogramming,t3_1m7yf1z,False,
n54tw0d,"Thanks for sharing your experience! I’ve been testing out Codefinity myself, and I think it’s a pretty underrated option for learning to code especially for anyone starting out with Python or just dipping their toes into programming. If you're searching for an honest Codefinity review, here’s my take::check_mark_button: **What I liked**:* The platform is clean and beginner-friendly. No need to install any software—you can code right in your browser, which saves a ton of setup time.* The course structure is well-paced. Lessons are short, interactive, and easy to digest without feeling overwhelming.* The built-in AI assistant is a nice touch. It’s not perfect, but when I got stuck or needed something explained in simpler terms, it actually helped me move forward instead of getting discouraged.:magnifying_glass_tilted_left: **Things to be aware of**:* As others have mentioned, the pricing model isn’t super transparent. You’ll probably get into the learning groove and then be hit with a subscription prompt, which can be frustrating.* The early lessons might feel *too* simple if you already know the basics. It starts very slow, but it does pick up and get more practical.:bullseye: **Why I’m using Codefinity**:My goal is to learn Python for data analysis and later move into web development. I’ve tried platforms like Codecademy and Udemy in the past, but Codefinity has been the one that’s helped me stick with a routine. The gamified elements and instant feedback really help with motivation.Overall, if you're searching for the best platform to learn Python for beginners or wondering is Codefinity worth it, I’d say yes with a few caveats. It’s great for building foundational skills, but you may eventually need to supplement it with more project-based or advanced content from elsewhere.Curious to hear what others think have you used Codefinity for longer than a few months? Did it help you move into real-world projects or jobs? Are there better alternatives for learning Python step by step?Let’s make this a helpful thread for anyone researching Codefinity reviews or trying to choose the right coding platform in 2025.",reogin,2025-07-25 18:39:47,1,learnprogramming,t3_1m7yf1z,False,
n54ukcn,I’ve been using Codefinity for a few weeks now and I’d say it’s legit especially for beginners. The interactive lessons and built-in AI assistant make learning Python feel smooth and easy to stick with. It’s a great platform if you want a hands-on way to build coding skills from the ground up.,nnbofficial,2025-07-25 18:43:04,1,learnprogramming,t3_1m7yf1z,False,
n589bww,"I’ve been using Codefinity for a few weeks too and honestly, it’s been a decent experience so far. The layout is clean, and I like that you can code directly in the browser it removes a lot of setup friction, especially when you're just starting out. The AI assistant has been surprisingly helpful when I get stuck. That said, I do think the pricing could be more transparent upfront, and some of the early lessons felt a bit too basic. But I’ve stuck with it because the structure keeps me on track. Curious to hear how others feel about the progression over time.",macemarcell,2025-07-26 07:31:00,1,learnprogramming,t3_1m7yf1z,False,
n4qk71n,You just have to pick a GUI framework. [Qt](https://www.qt.io/product/framework) is a good choice if you want to stick to using C++ and want something cross-platform.,David_Owens,2025-07-23 16:21:01,18,learnprogramming,t3_1m7d3yd,False,
n4qi6ac,check out ImGui or other C++ GUI frameworks,ReasonPretend2124,2025-07-23 16:11:40,6,learnprogramming,t3_1m7d3yd,False,
n4qi7dd,Probably by looking up c++ gui tutorials and then come back when you have specific questions,Gawd_Awful,2025-07-23 16:11:48,15,learnprogramming,t3_1m7d3yd,False,
n4qidh4,"I use qt, mostly for python but it works with C++ too, I really like it so I'd suggest looking into it (I can't really talk about C++ implementation but it's pretty easy in python so I'd assume it would be the same). The base qt designer app to design the UI files is free but there's also qt creator that comes with more features you can pay for, afaik it can implement figma designs so that might be something to look into, you can also write the UI fully in code if you don't want to use the software tho. Their documentation is well written imo so pretty easy to follow",MegamiCookie,2025-07-23 16:12:35,5,learnprogramming,t3_1m7d3yd,False,
n4r2l3a,i have used wxWidgets.,desarrollogis,2025-07-23 17:43:46,4,learnprogramming,t3_1m7d3yd,False,
n4qjv6a,"I'd search up for frameworks that are designed for building GUIs and start ramping up on that. If you want to stay consistent with C++, then C++ specific frameworks.",Several_Artichoke877,2025-07-23 16:19:29,3,learnprogramming,t3_1m7d3yd,False,
n4s2o22,I started with Qt and its been great.,UnifiedFlow,2025-07-23 20:32:02,3,learnprogramming,t3_1m7d3yd,False,
n4vfv20,"Nice! Moving from console to GUI is a great next step — here’s a simple way to start:**:toolbox: Choose a C++ GUI toolkit:** Here are the most beginner-friendly ones:* **SFML** – great for 2D visuals and GUI basics (also fun for game-style apps)* **Qt** – super powerful, supports drag-and-drop UI builder (like Visual Studio but cross-platform)* **Dear ImGui** – minimalist and fast for tools/overlays (not styled like native apps though)**:wrench: What I’d suggest for learning:**1. **Try SFML first** – super lightweight, lots of tutorials, and you’ll see results quickly2. **Then try Qt** – has a bigger learning curve but feels more like “real apps”**:television: Tutorials that helped me:*** [SFML tutorials – official]()* [Qt Creator YouTube guides]() – lots of beginner-friendly vids* You can also mess with [Godot]() (it supports C++) if you wanna experiment with visual UIs in game-like environments",Codeyoung_global,2025-07-24 10:03:49,3,learnprogramming,t3_1m7d3yd,False,
n4rwtkz,"Try Qt or wxWidgets if you want to stay in C++. Qt is more modern and widely used. Also, YouTube has tons of beginner tutorials that walk you through GUI projects step by step.",Ann_Clarke,2025-07-23 20:04:48,2,learnprogramming,t3_1m7d3yd,False,
n4sydj5,I recommend GTK. I've used it in Rust and glanced at some GTK C programs and it seems fairly straight forward. https://www.gtk.org/docs/language-bindings/cpp,Grim2021,2025-07-23 23:12:01,2,learnprogramming,t3_1m7d3yd,False,
n5nb6rl,"> So here’s my question: where the hell do you even get your definitions from?Alan Kay famously said ""I made up the term ""object-oriented"", and I can tell you I did not have C++ in mind"" (probably not an exact quote).The exact definition of object oriented and how many different types of polymorphism there are and whether encapsulation enables abstraction or abstraction enables encapsulation or they are both special cases of some greater concept is not particularly interesting to me. I have a general idea and that's fine. I'm not trying to write a research paper here.",lurgi,2025-07-28 17:48:48,21,learnprogramming,t3_1mbmoz8,False,
n5nakeo,"It seems reasonable to say there will be no single source of truth here. Something like encapsulation is a qualitative statement, not a specific technical mechanism. It's like how a mathematician would talk of 'generalizations'; you won't find a precise, clear, mathematical definition of what does or does not constitute a generalization, and probably every mathematician has their own definition.Two people arguing over whether something is or is not encapsulation right on that grey boundary sounds like a pointless argument, as they're both right. However, the fact an argument is pointless seems no obstacle to some online.",lfdfq,2025-07-28 17:45:59,26,learnprogramming,t3_1mbmoz8,False,
n5n9yht,"There are 2 dirty secrets about OOP:1) That the original ""sources of truth"" for pretty much EVERYTHING regarding OOP, were doing things for completely different reasons than what later proponents of OOP preached to the masses: https://m.youtube.com/watch?v=wo84LFzx5nI2) That what is commonly taught as the core value proposition of OOP doesn't work: https://m.youtube.com/watch?v=QM1iUe6IofM",usrlibshare,2025-07-28 17:43:14,27,learnprogramming,t3_1mbmoz8,False,
n5o837y,"I think you're just hitting the limits of imagining that clear, precise definitions exist for basically anything. OOP and encapsulation are just arbitrary ways of parsing reality that were chosen because the people who first thought of them thought it made programming easier if you thought of it that way. Different people come along with their own ideas and reformulations, but there is no One True Encapsulation that god invented and wrote on stone tablets. There's just people trying to think of programming in a productive way. And sometimes those ways aren't actually very productive, or sometimes those ways are productive for them but only because they think of things in an unusual way, and sometimes someone thinks of a new way that works for a lot people and everyone gets excited about this new way for a while until other people figure out the new way's short comings and go back to looking for better ones.Even in math, it's arbitrary. You only have clarity because you declare it by fiat--you make up some premises and rules because you think they are interesting or they will be informative in some way, then you try to figure out all the consequences of the rules you made up. A lot of math is about just using existing rules to figure out new things within that ruleset, and a lot of different math is thinking of entirely new rulesets that seem interesting and generative.Programming, and trying to define encapsulation is more like the second kind of math.",PeteMichaud,2025-07-28 20:24:42,7,learnprogramming,t3_1mbmoz8,False,
n5njnrs,"You have to remember that these terms and design patterns were formed during programming's adolescence. At the time these words were coined, Fortran and COBOL were the dominant programming languages, and they were extremely barebones compared to the modern versions of those languages. It's hard to fathom just how much we take for granted with modern programming languages today.In terms of encapsulation, folks were mostly just proposing what we now think of as modules or classes. Basically, the idea boils down to creating public facing APIs that do not expose their inner variables. I like [this source](https://textbooks.cs.ksu.edu/cis400/1-object-orientation/01-objects/02-encapsulation/) which quotes from some of the originators of OOP-- Dave Parnas and Alan Kay. > Parnas and his peers pushed for not just hiding the data, but also how the data was manipulated. By hiding these implementation details, they could prevent programmers who were used to the globally accessible variables of early programming languages from looking into our code and using a variable that we might change in the future.Barbara Liskov is another big name in the OOP world, and [she covers encapsulation in this fantastic paper](https://www.cs.tufts.edu/~nr/cs257/archive/barbara-liskov/data-abstraction-and-hierarchy.pdf)> For abstraction to work, implementations must be encapsulated. If an implementation is encapsulated, then no other module can depend on its implementation details. Encapsulation guarantees that modules can be implemented and reimplemented independently; it is related to the principle of “information hiding” advocated by Parnas [15].Those three formed the basis of all modern OOP concepts. They are the definitive sources. I think much of the confusion comes from the second wave of folks who implemented the popular languages and who each definitely went their own way. Because their languages are so popular, their opinions are almost equally valid despite the fact that they all disagree with each other on minor things.- Bjarne Stroustrup- James Gosling- Brad Cox- Bertrand MeyerAs a side note, when discussing design patterns, there are a few definitive sources:- [Design Patterns](https://www.javier8a.com/itc/bd1/articulo.pdf) by the Gang of Four- Pattern Oriented Software Architecture, most notably volumes [one](https://daneshjavaji.wordpress.com/wp-content/uploads/2018/02/sznikak_jegyzet_pattern-oriented-sa_vol1.pdf) and [two](https://archive.org/details/patternorienteds0000unse_u5t3)- [Patterns of Enterprise Application Architecture](https://raw.githubusercontent.com/ZoranLi/Books1/master/Patterns%20of%20Enterprise%20Application%20Architecture.pdf)However, most of those were written over twenty years ago, so [refactoring.guru](https://refactoring.guru/) is a good resource for putting these concepts into a modern context.",jessepence,2025-07-28 18:28:05,6,learnprogramming,t3_1mbmoz8,False,
n5n9niv,"And what’s even more interesting — everyone argues as if they’ve all read some *fundamental text* behind the scenes… but no one ever actually mentions it.For example, one blogger I follow says encapsulation is about making sure a method takes in as little external data as possible. Others write that encapsulation is about *hiding things* — like, you add `private` where needed and boom, that’s encapsulation. Then there’s the group that says it’s about combining data and methods together. And so on.And N-O-B-O-D-Y ever cites anything to back up their claims. It’s like: *“Well, I said it, so you should believe me.”*So in the end, I can go to an interview, and the interviewers can tell me absolute nonsense about OOP — and I can’t even call them out on it, because there’s no monumental work, no axiom, no precise definition from an authority that I can point to and say, **“No, this is the correct one.”**Everyone just interprets it however they like, which leads to the absurd situation where: if I’m the lead on a project, then *my* definitions are the truth. If you’re the lead, then *your* definitions are the truth.It’s hilarious to see this in a field that’s supposedly the pinnacle of precision, rigor, and concrete definitions.",Accomplished-Bat-247,2025-07-28 17:41:52,6,learnprogramming,t3_1mbmoz8,True,
n5nb3y1,"Sorry to be blunt, but these concepts don't need, and aren't worth, a shining crystalline ""source of truth."" They're techniques, no more and no less. These OO models are meant to be tools to allow us to build more complex systems by adopting packaged components (objects, libraries, class libraries, modules, whatever they're called) that don't need our total understanding to use effectively. It's helpful to know what the designers of *your chosen language / framework* were thinking when they designed the object model you will use. Other than that, don't overthink this.",Aggressive_Ad_5454,2025-07-28 17:48:27,5,learnprogramming,t3_1mbmoz8,False,
n5o3zvb,Peoples source of truth is usually just the first source they hear,MoonQube,2025-07-28 20:05:28,2,learnprogramming,t3_1mbmoz8,False,
n5na26q,"I am not an expert in OOP, but to the extent I've used it, the important part is to consider your use case and decide what framework will not break anything. If you're in an interview, an outside-the-box answer to an OOP question might be just that: based on use case, the definitions that actually work best for me would be XXX",imyourzer0,2025-07-28 17:43:42,1,learnprogramming,t3_1mbmoz8,False,
n5nabmf,I would be curious to hear the specifics of the different definitions. Perhaps they are not mutually exclusive but refer rather to various aspects of the whole concept of encapsulation. My impression is that it is the idea of hiding data (like in a capsule) to prevent the unwashed masses (i.e. users of the code) from changing it.,AKooKA40,2025-07-28 17:44:52,1,learnprogramming,t3_1mbmoz8,False,
n5g3ez8,"I really don't really understand what you're asking. If you just want to program as a hobby and not professionally, go for it.",grantrules,2025-07-27 15:27:49,71,learnprogramming,t3_1map06r,False,
n5g6qnd,I think it's more apt to say it is a craft rather than an art.There are people who build fine furniture for a living and there are people who do it for fun. But the tools and techniques are still important.,gms_fan,2025-07-27 15:44:23,15,learnprogramming,t3_1map06r,False,
n5g7was,Not quite clear what your question is. Education is about *learning* not about getting a job. If you want to *learn* something because you like to learn about the fundamental of CS then go for it?I took a pottery class once because I wanted to learn about making pottery.If you don't like lectures then maybe that's not the best way for you to learn. I don't like lectures either... but I still got my degree but didn't go to class (learned from the book or by doing projects).,NotSoMagicalTrevor,2025-07-27 15:50:02,8,learnprogramming,t3_1map06r,False,
n5g38no,"Computer science doesn't prime you for the job market at all, it's very theoretical which sounds exactly like what you'd want to make your toys more complex and shiny.",disposepriority,2025-07-27 15:26:56,16,learnprogramming,t3_1map06r,False,
n5g5708,Dude no one makes a large Scale project alone in his spare time. Because you fucking die before the thing is done.,movemovemove2,2025-07-27 15:36:43,21,learnprogramming,t3_1map06r,False,
n5g5ys1,"Why are you doing a major if you don't want a career in the thing? That's so much energy, effort, and money going into something you want to do as a hobby.",SisyphusAndMyBoulder,2025-07-27 15:40:35,7,learnprogramming,t3_1map06r,False,
n5g5tp0,"Programming is the same as any other hobby. What you like to do for fun with that hobby is usually much different than how you make money with that hobby. It's a normal human behavior to want to only focus on what you enjoy with creative hobby.The reality is at some point in your life you're going to need to make money. You probably can't sustain your hobby forever, just doing whatever you want. Think of it like playing video games, sure you can say ""I only want to do what I find fun"" and sit in your room and play games all day. You can also sit in your room and program side projects all day. At some point you have to face reality, and find a way to make money and have some kind of success in your life. This is usually painful - a job you get programming will rarely be the same kind programming you enjoy doing as a hobby. When you get a programming job, your job isn't to make aimless side projects, it's to solve problems for the business using your skillset.Programming is a specialized skill and having a degree helps get your foot in the door, and many companies require one. I know it's painful / annoying / stressful / frustrating right now, but that's irrelevant. Dropping your major now would be short sighted and impulsive.Last thought is your priorities might change laster in life. You might what to buy a house, car, something expensive, start a family, or support someone, or have some life event that forces a larger amount of responsibility on you. Finishing your degree helps future proof your ability to make income and might make that time easier when it comes.",oil_fish23,2025-07-27 15:39:53,3,learnprogramming,t3_1map06r,False,
n5gxtnk,"I read your TLDR, and I don't understand what you are asking? ""If you want to do CS< you better want a job""... what? Yes, almost every person that wants to do CS wants a job in CS, because... we need to earn a living. If you want to do it as a hobby, no one minds or cares that you aren't after a job. I am not sure where you think you are seeing that programming as a hobby isn't acceptable? I will say that getting a full on degree in CS and not going into the field would be... an odd choice, as that is a lot of money to throw at something you don't want to get paid for, but you do you.",garciawork,2025-07-27 17:55:34,3,learnprogramming,t3_1map06r,False,
n5geop3,"I also don’t get what you’re asking.It’s YOUR career, do whatever you want. If it was me I would stick it out, but if you truly don’t enjoy it then no point.",Rain-And-Coffee,2025-07-27 16:23:25,2,learnprogramming,t3_1map06r,False,
n5gojq6,Even artists need to learn the craft before becoming great.It's not exclusively one or the other.,serverhorror,2025-07-27 17:11:08,2,learnprogramming,t3_1map06r,False,
n5op24y,"If it works for you, it's a great method. Try to start with simple games",no_regerts_bob,2025-07-28 21:47:17,24,learnprogramming,t3_1mbtds4,False,
n5ot0pl,"In fact, I'd say doing LeetCode problems is a *bad* way to learn programming. That won't teach you how to make a real project; that will only teach you how to pass interview questions.Actually building a project is the best way to learn to program, and if you 're interested in making a game, then go for it. The only caveat I'd add is that games can be incredibly complex; game programming is often considered one of the most difficult fields of programming, because you need to understand user interfaces, state manipulation, AI, audio, physics, and more... but if you can handle breaking it up into a smaller pieces and figuring them out one at a time, it's a great way to learn.",minneyar,2025-07-28 22:07:51,23,learnprogramming,t3_1mbtds4,False,
n5opuy2,Sounds better than crying over LeetCode at 2am. Build the game.,Alex_NinjaDev,2025-07-28 21:51:22,10,learnprogramming,t3_1mbtds4,False,
n5oppw2,"Yes, learn fundamentals then build a simple program. Then a slightly more complex one.For example put a box on the screen. Now make it move using your arrow keys. Now put a second box and detect when they touch. Play a sound.You keep building up until you have Snake or Tetris.",Rain-And-Coffee,2025-07-28 21:50:39,6,learnprogramming,t3_1mbtds4,False,
n5p4dfw,There is a Mario Tutorial in JS that really helped me get an understanding on how to code and how to organize. The channel is meth meth method on YouTube,ms_nitrogen,2025-07-28 23:09:16,4,learnprogramming,t3_1mbtds4,False,
n5p76r7,"That’s a great method. Download Processing 4 and play around with it. Watch some Coding Train videos on YouTube and replicate, extend, and improve on them. Learning in an easy 2d framework is a great way to visualize code and learn how to debug",Swing_Right,2025-07-28 23:24:29,4,learnprogramming,t3_1mbtds4,False,
n5oygts,Stick with what's fun. Learn the boring and hair pulling out stuff later. I used fantasy football.,MyPaddedRoom,2025-07-28 22:37:05,2,learnprogramming,t3_1mbtds4,False,
n5pdwis,… if you are trying to learn how to make games why are we talking about Leetcode?,connorjpg,2025-07-29 00:01:19,2,learnprogramming,t3_1mbtds4,False,
n5pdxeh,pseudo code is for briefly explaining a thought/solution/example to someone else that you know is able to translate that into working code. using it any other way serves no purpose except maybe the illusion of understandingwhat is lacking in your list is applying all these things in real code. you need a lot of hours of actual programming for it to stick,NefariousnessMean959,2025-07-29 00:01:28,2,learnprogramming,t3_1mbtds4,False,
n5q5qki,Is it working for you? Then that's great!,Feeling_Photograph_5,2025-07-29 02:43:08,2,learnprogramming,t3_1mbtds4,False,
n4sb6pb,https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_getting_started,Luigi-Was-Right,2025-07-23 21:11:58,14,learnprogramming,t3_1m7kl4f,False,
n4s7npq,"Decide what you want to do. Is it game dev? learn c++/unreal or c#/unity. Is it web dev? learn typescript/next/angular/vue. Is it corporate web dev? learn java/c# + a js framework. Data science? learn python + r + power bi/tableau. Take a look at [https://roadmap.sh/](https://roadmap.sh/) for some semblance of guidance, but first need to start with what it is your trying to do/accomplish. Also, are you young/a kid? If so i'd start out with scratch then something like [https://codecombat.com/](https://codecombat.com/) to make it more fun instead of just jumping into the deep end with no mentor or guidance.",plyswthsqurles,2025-07-23 20:55:12,7,learnprogramming,t3_1m7kl4f,False,
n4scbnu,"First - why are you learning?Second - if you know why - find what problem you want resolve.Third - start by typing something like ""basic X course"", when X is your lang for example pythonFinal - Find tools inside your choosen lang for job.",pepiks,2025-07-23 21:17:29,5,learnprogramming,t3_1m7kl4f,False,
n4s6326,"first decide waht u wanna be. the ""programming"" means too many thngs... what u wanna be ?? then pick a programming language according to your desicion. learn that lang, make a roadmap for urself.",ActuatorBrilliant595,2025-07-23 20:47:53,3,learnprogramming,t3_1m7kl4f,False,
n4s9fun,"Try a cs50 course it's totally free from Harvard, pretty sure you get a certificate and Professor Malan is the goat",mattp1123,2025-07-23 21:03:34,3,learnprogramming,t3_1m7kl4f,False,
n4sb36w,"start with the web stack, tackle javascript and if you can make it over that mountain then start applying for interns",Particular_One4868,2025-07-23 21:11:29,3,learnprogramming,t3_1m7kl4f,False,
n4skr1v,Check for starters https://roadmap.sh/ and https://freecodecamp.org.,littlecodingthings,2025-07-23 21:59:39,3,learnprogramming,t3_1m7kl4f,False,
n4sapys,What do you want your job in the future to look like? Research what their day-to-day looks like and then what skills that role requires. It’s best to begin learning with free resources like YouTube videos if you're not sure. So you at least have an idea of what you like best and can move to a different option if needed. If you don't enjoy it at all it will be hard to make progress.,Overall-Worth-2047,2025-07-23 21:09:43,2,learnprogramming,t3_1m7kl4f,False,
n4sgycs,"Buy a book aimed at beginners and work your way through it. Producing a book costs enough that it will have been gone over, probably several times, by one or more editors to make sure that it’s mostly correct and not too hard to follow. And a book author will generally have a single coherent point of view and a plan for how you should learn, and that helps a lot.",iOSCaleb,2025-07-23 21:40:19,2,learnprogramming,t3_1m7kl4f,False,
n4tc2ga,nobody learned with experience it takes time and effort if you like it you should totally go for it,None,2025-07-24 00:28:55,2,learnprogramming,t3_1m7kl4f,False,
n51kqnw,"Since you know Python, start with data structures, algorithms, and Git. Build 2–3 small projects (like a to-do app or scraper) and share them on GitHub. Apply early and often!",Difficult-Plate-8767,2025-07-25 06:45:37,19,learnprogramming,t3_1m8s3l4,False,
n51l2jd,Choose what you want to build,OM3X4,2025-07-25 06:48:33,4,learnprogramming,t3_1m8s3l4,False,
n51xlcw,"Learn Git, basic data structures & algorithms, and build 2–3 simple but complete projects (CRUD apps work). Keep your GitHub clean and start applying early,interns aren’t expected to know everything.",prazeros,2025-07-25 08:46:29,2,learnprogramming,t3_1m8s3l4,False,
n52d95r,"Hey! Since you already know Python, that's a great start. I'd recommend looking into data structures & algorithms, Git/GitHub, and maybe a web framework like Flask or Django. For internships, build a few small but complete projects - something like a blog, a task manager, or an API service.Also, if you're interested, feel free to check out [r/WebsiteDevHub](https://www.reddit.com/r/WebsiteDevHub/) \- it's a growing community focused on web and app development. Just make sure to share or post things that match the topic of the community. Happy learning and good luck with your journey!",Difficult-Plate-8767,2025-07-25 11:05:09,2,learnprogramming,t3_1m8s3l4,False,
n52juup,Master data structures and algorithms.And pick a good AI niche. NLP engineers (Natural language processing) are in demand so that's a good insight. But either way AI is the best thing u can do.,Maleficent_Return485,2025-07-25 11:52:10,2,learnprogramming,t3_1m8s3l4,False,
n52piv2,"These are some non-technical suggestions. Quite often, many new people think the test is purely technical like taking a test, and that's probably mostly right, but personality can be a deciding factor.* Practice interview situations. Have someone ask you technical questions (code this up) as well as more people-related stuff (""What is your greatest weaknesss?"").* Apply to a lot of places and expect a lot of rejections. Take notes afterwards about what went well and what didn't.* Keep in mind your perception of interviews and their perception could be quite different. You could have done really well in your mind, but maybe they had no plans to hire and so you didn't get picked, or they nitpicked on a resume. You could have done badly in your mind, but they think it went well. * Work on your interview skills. Learn how to project positivity and be upbeat even if you aren't (mostly a first impression kind of thing)",CodeTinkerer,2025-07-25 12:28:02,2,learnprogramming,t3_1m8s3l4,False,
n51vkll,Had the same question,Andzj_2300,2025-07-25 08:26:57,1,learnprogramming,t3_1m8s3l4,False,
n52d1zp,Also check roadmap.shYou'll find everything there.,dhyannbellaryy,2025-07-25 11:03:38,1,learnprogramming,t3_1m8s3l4,False,
n53xo42,"If you like to add few certifications too while learning you can register here.[https://register.edx.org/verizon?utm\_source=vsf\_v\_citizen-verizon](https://register.edx.org/verizon?utm_source=vsf_v_citizen-verizon)Anyone can register from anywhere, just fill the details.",thisisdevang,2025-07-25 16:09:12,1,learnprogramming,t3_1m8s3l4,False,
n5fxtp3,"You're off to a great start with Python. Next, focus on data structures, Git, and building small projects - then showcase them on GitHub and start applying early.",alpinebuzz,2025-07-27 14:59:05,1,learnprogramming,t3_1m8s3l4,False,
n5e9lha,"The unfortunate situation is that it is hard to get into programming right now at the entry level. We are still getting over over-hiring from COVID and entry level positions are competing with LLMs, as dumb as that is.I teach CS at a university and students are having a hard time getting jobs and employers don't want to come to career fairs because they are not hiring.It is going to be easier to get in if you have a degree, but it isn't as sure of a thing as it used to be. And if you do go to a university to get a degree, that will take 4 years and by then, hopefully things have improved. The long term outlook is still supposed to be good according to the government job prediction folks.",ResilientBiscuit,2025-07-27 07:18:08,19,learnprogramming,t3_1mafx6n,False,
n5e9ugi,"Play limbus company bro, frfr. kinda helped me when I was in a similiar situation, story is inspiring and peak, and the game is made in unity idk if that helps. gl in life tho.",Shackscraft,2025-07-27 07:20:28,3,learnprogramming,t3_1mafx6n,False,
n5eact4,What's keeping you in your home City? You can study all over the country or even abroad.Self tought i'd only reccomend if you have a high amount of self discipline and drive. Freelancing i wouldn't reccomend. Learning programming from scratch on the job is usually a bad idea. Becouse you learn by making mistakes. And making mistakes while freelancing can have consequences for the end user.,spellenspelen,2025-07-27 07:25:24,3,learnprogramming,t3_1mafx6n,False,
n5eav2f,"SE grad here - In smaller cities, you might have a harder time finding developer jobs around. But a lot of companies in bigger cities also started to let their employees work from home. And yes, you can become a developer with no degree. You just have to be very good at it. More than half of my coworkers in tech actually didn’t have any CS or SE degrees.Degree is always a plus. I also got a degree in SE. But honestly it’s all about how hard you study/code, and how much you know in depth about programming and related topics. I know a guy that has high school diploma, but he started coding since he was 13. He has worked with PayPal, Google, etc. He started from a smaller company. With connection from that small company, he just keeps growing. You can get a degree related to it, and it does help imo. I got a degree, but I wasn’t doing the best when I was in college. I switched from business to SE and it was gonna take extra year in college. I ended up trying to do as many credits as I could in each semester, absolutely regret it. I almost failed in every class. Didn’t have time to actually study what’s going on. And yeah, it sucked when I graduated and needed to land a job. I ended up doing online tutorial to refresh my memories before I was able to land an SE job. My degree helps a lot on resume, but I think your projects you will be doing matter more. Companies want to see what kind of things you’re capable of doing. I could be wrong. I’ll wait for sr dev or someone to give some more opinions about it.",Ok_Stable7245,2025-07-27 07:30:17,2,learnprogramming,t3_1mafx6n,False,
n5eawoh,"It *is* true that at a certain point work experience trumps a certificate, but ask yourself this: how do you get that experience without a certificate?It's a bit of a catch 22.A good certificate makes starting out much easier.",EliSka93,2025-07-27 07:30:42,2,learnprogramming,t3_1mafx6n,False,
n5ebbsn,It's more true to say that experience *plus* a degree beats a degree alone for most positions. Experience without a degree.. really depends but I wouldn't bet on it working out at all,no_regerts_bob,2025-07-27 07:34:41,2,learnprogramming,t3_1mafx6n,False,
n5f8a81,"I will say going to a small college in your city could be a totally different experience than high-school. I go to a CC in my city and it's way different, they are actually supportive",mattp1123,2025-07-27 12:32:22,2,learnprogramming,t3_1mafx6n,False,
n5g1756,"First, you have to set your goals using SMART method then plan it on your calendar by the time (start low then increase time) and don't forget to talk breaks don't push too hard, sleep early, wake early and exercise at least 20m walking or more if you can. Books that can help you understand computer: the self-taught programmer, the self-taught computer science, algorithms and data structures. Also, there is a skill you must learn that's typing without looking at the keyboard to think clearer. In the end, use a note to write ideas that comes to your mind, use a task ls manager and don't socialize too much so you can focus on your goals.",raedamof911,2025-07-27 15:16:34,2,learnprogramming,t3_1mafx6n,False,
n5g65ay,"Also, a diploma degree at least is important for some or most companies if you can",raedamof911,2025-07-27 15:41:28,2,learnprogramming,t3_1mafx6n,False,
n5gnlto,"Hey, the fact that you're asking for advice and help is already a great sign. It shows you're not giving up, and that's a mindset you must keep if you really want to become a programmer - especially a good one.In general, experience > degree. I'm not a CS graduate myself - I actually studied chemistry - but I've still found my dream job writing code. It's absolutely possible.Becoming a good programmer is so much more than just hitting keys and shipping code. You'll need to accept the endless grind. In the beginning, everything feels exciting and kind of easy. Then reality hits. And honestly? There's barely any course out there that truly teaches you how to think like a developer - the pattern recognition, the problem-solving mindset, the ""sixth sense"" for asking the right questions.That said, not studying at all is a bad idea. You don't want to end up without direction or skills that can support you. But studying doesn't have to mean going to university. I'm from Germany, and here many young people start paid trainee/apprenticeship programs for around 3 years to learn a profession. Maybe something like that exists where you are too?If university isn't an option for you - especially if it's expensive or forces you into debt for something you're not passionate about - then yeah, don't rush into it. It could become a trap.Given your situation, there's no guaranteed path. But if I were you, I'd try to find a mentor - even if it costs money. Good guidance can save you a lot of wasted time and effort.Also: besides programming and avoiding university in your city, what else interests you? Maybe you can find some creative crossover - tech isn't just web apps and games. There's a lot of space to combine different passions.Whatever you decide, don't just think about the next year. Think in decades. It's your life - build something that lasts.",ENVAIO,2025-07-27 17:06:33,2,learnprogramming,t3_1mafx6n,False,
n5mn4d9,"The next steps to get closer to that:\- Keep learning JS but don't worry about the deep stuff yet. I mean things like the event loop or execution context. It's a common mistake that confuses people more than anything else \- Learn the basics of the DOM. You don't need to memorize every single thing. Understand getElementById, addEventListener, and createElement \- Build a few projects. I know it's cliche and it's difficult to find projects to make, try and build things that are just html css and JS \- Learn what a library is. Learn NPM. Install a few libraries and play around with themOnce you get to that point you can start looking at objects - requests - async stuff. Contact me then and I can help you with that.Best of luck. You can do this.",The_Octagon_Dev,2025-07-28 15:57:40,17,learnprogramming,t3_1mbjs32,False,
n5mwj4i,"I'm from Iran. I took cs50x 2022 and I was struggling with it so much. I landed my first remote job at 2024 as a JR. Pytohn dev and I'm still working there. there shouldn't be any controversy around the fact that you have to learn the basics to get any dev. job and cs50x provides exactly that. You can't go wrong with cs50x, I can't imagine a scenario where you would regret taking that course later. The path you are on is a little challenging and rewarding, just stick to it and don't give up!",mahdi_habibi,2025-07-28 16:42:22,5,learnprogramming,t3_1mbjs32,False,
n5mvw7f,"you know, I’d recommend this open source Computer Science curriculum. https://github.com/ossu/computer-scienceThere is no perfect or right way to learn programming. When I started (I was 14F) and I utilized a bunch of resources online and built projects. This is one of those crafts where you absolutely have to learn by doing. Get your hands dirty, and start building stuff. When I went to college, that’s where I got a lot of exposure to concepts that are just not talked about thoroughly in Web Dev bootcamps (plus a curriculum to follow), so maybe OSSU will help. I think a lot of people in this sub need to learn Computer Science concepts alongside the language they’re learning how to write.",No-Strawberry623,2025-07-28 16:39:21,4,learnprogramming,t3_1mbjs32,False,
n5nu406,Respect you! Just thought I’d say this. You’re a smart kid,annaopolis,2025-07-28 19:18:15,3,learnprogramming,t3_1mbjs32,False,
n5omrgu,"Tbh, just find a project and complete it, something you find interesting. Use google and gpt (dont just copy and paste the entire gpt response) to help you. I never found going through tutorials very useful. After a bit, suddenly everything just clicked.",Hedge101,2025-07-28 21:35:43,2,learnprogramming,t3_1mbjs32,False,
n5pwurb,Thank you so much! I'll note down and work hard :folded_hands_light_skin_tone:,Iwastaken48N,2025-07-29 01:50:16,3,learnprogramming,t1_n5mn4d9,True,
n5rn6f8,"I'm in a pretty similar situation to OP, except I'm working with Java. Would it be possible to get a bit of help from you as well?",ShiftIndependent413,2025-07-29 10:14:09,2,learnprogramming,t1_n5mn4d9,False,
n5mx2wa,"Don't worry too much about HTML and CSS for now, Those are not programming languages. The main point is to learn programming (eg: C, Python or JS)",mahdi_habibi,2025-07-28 16:44:57,4,learnprogramming,t1_n5mwj4i,False,
n5px76j,CS50 is hard but it's very satisfying to see when you get the project right. It taught me to analyse the things I wanna do too so that's it.Thank you for the support man T-T I really appreciate it,Iwastaken48N,2025-07-29 01:52:16,2,learnprogramming,t1_n5mwj4i,True,
n5skvlg,I am currently taking CS50x and am on the verge of completing it. What did you do after you completed the course?Did you continuously polish one particular language or start looking for jobs immediately? Would love to know your approach.,Late_Scratch5404,2025-07-29 13:54:49,1,learnprogramming,t1_n5mwj4i,False,
n5axfob,"""JS wasn't THAT bad until I started learning about arrays""Why do so many newcomers expect programming to be easy? There used to be a general acceptance that programming is a complex, highly skilled domain. A few convenience methods for making working with arrays easier is not complex, trust me if this is what you're struggling with you will not have a good time.You don't need to commit all these array methods to memory, just know they exist and consult the MDN docs if you need to do something to an array but don't remember how. Alternatively, don't use any of them at all and perform all your array operations manually, you'll soon appreciate why these methods exist.",FurtiveSeal,2025-07-26 18:12:20,69,learnprogramming,t3_1m9yr44,False,
n5andey,As you actually use arrays more you'll find out,stiicky,2025-07-26 17:20:44,68,learnprogramming,t3_1m9yr44,False,
n5amw1m,"No one's forcing you to use them all! Use whichever ones are useful for you, become familiar with the most common, and when someone uses a weird one, look it up - maybe they have a good reason for it.",numeralbug,2025-07-26 17:18:16,44,learnprogramming,t3_1m9yr44,False,
n5aqs6r,This has to be a joke.,0meg4_,2025-07-26 17:38:05,11,learnprogramming,t3_1m9yr44,False,
n5an1lb,"Because they all have their purpose?When a language is created the language developers have to make a choice: Do they want a rich core library, or a streamlined and small one?The tradeoff complexity. A rich language (like JavaScript) offers plenty of ways to accomplish various tasks. We also see the same thing with Python. While this sounds great on paper, it also increases overall complexity as there's more to consider when picking what you need.Then we have languages with a smaller library with fewer abilities. Here, developers often find themselves writing a little more code, but the core library tries to be ""just enough"" for developers to express their intent and get stuff done.You also can't look at the number of methods and assume it is overkill. You need to look at what they're doing.",_Atomfinger_,2025-07-26 17:19:02,19,learnprogramming,t3_1m9yr44,False,
n5aosye,"> Why are there, literally, like 50 different methods for arrays in JS?Because there are lots of different things that people often want to do with or to arrays. 50 seems like a low number, actually.> Are all these really necessary?Necessary? No. They could just give you array construction and indexing and leave writing methods like map(), reduce(), join(), forEach(), find(), and so on up to each programmer. And then somebody would write a library that has 50+ methods that do all those things, and everybody would include that library in their code, except that some people would use a different library or no library at all, and you’d be here asking why the language doesn’t just expose all that functionality so that it’s standardized.> Seems like massive overkill. JS wasn't THAT bad until I started learning about arrays.Which methods would you eliminate?",iOSCaleb,2025-07-26 17:28:03,14,learnprogramming,t3_1m9yr44,False,
n5aomv7,It’s not 50 methods that you’re forced to use in every project.. they all serve a purpose and could be used if needed.,Ryguzlol,2025-07-26 17:27:11,6,learnprogramming,t3_1m9yr44,False,
n5avq53,"What a weird question. ""Why are there literally 50 different tools for working on an engine?!""",SuperGameTheory,2025-07-26 18:03:25,6,learnprogramming,t3_1m9yr44,False,
n5apgpi,Wait till you see DOM manipulation methods. And all of them serve their purpose. Just like array methods.,Single-Caramel8819,2025-07-26 17:31:23,17,learnprogramming,t3_1m9yr44,False,
n5b2uq9,This has absolutely nothing to do with why people hate js,Ok_Finger_3525,2025-07-26 18:41:15,6,learnprogramming,t3_1m9yr44,False,
n519rq6,Use a debugger?,dpacker780,2025-07-25 05:11:57,57,learnprogramming,t3_1m8qgbr,False,
n51abvb,"Fundamentally, learn how to view the state of your program at a given time. Yes, you can do that using a debugger, but often times all one needs is to print out a line ""What is this variable at this one point?"". Debuggers are conversely extremely handy, because you can walk a program up to the point (see ""breakpoint"") where you have the bug, and output all of the variables/etc that are likely wonky. Aside from that, a mindset that has helped me in my work is to think about side effects. ""If I change a thing in part A, what does that do to part B?"" and working to better encapsulate logic/steps so that generally doesn't happen, as it's generally a bad thing that makes debugging much harder.",Time_Method9526,2025-07-25 05:16:27,22,learnprogramming,t3_1m8qgbr,False,
n51bsjo,"- Read the error message. - Add print / log statements - Remove things, use process of elimination. Isolate the issue. - Google it- Use ChatGPT- Use debugger.- Learn how computers read code.",ReiOokami,2025-07-25 05:28:24,14,learnprogramming,t3_1m8qgbr,False,
n51vizk,"Here's my take on how to effectively debug:* If there's an error message, read the error message carefully - it's usually telling you exactly what's wrong and where.* Most languages have a debugger that let you pause execution, inspect variables, and step through code line by line. Spending an afternoon learning how to use your IDE's debugger will save you hundreds of hours later.* Trace the execution path systematically - step through your code in the order it actually runs, not just how you think it should run. Use the debugger's ""step over/into"" functions or add print statements to follow the flow and catch where logic diverges from your expectations.* Use 'Rubber duck debugging': explain your code line by line to someone (or a rubber duck). You'll often catch the issue while explaining.Debugging - like programming - is systematic. Don't approach it like guesswork, but like a detective or scientist: observe the symptoms, form hypotheses, test them one by one, and let the evidence guide you to the root cause.",Big_Tadpole7174,2025-07-25 08:26:31,13,learnprogramming,t3_1m8qgbr,False,
n51czxn,"Random guessing usually means you have incomplete information about the problem (or error) you are trying to solve. Go back to first principles: what is the error you are getting? What does the error mean? What conditions need to be met for the error to occur? How can you prevent those conditions from occurring? Debugging is all about critical thinking.Learn how to use a debugger, and add logging to your program. A debugger, especially, is a powerful tool for gathering information about an error, because it allows you to set breakpoints, change variables and step through your code to see exactly what it is doing, line by line.",taedrin,2025-07-25 05:38:24,8,learnprogramming,t3_1m8qgbr,False,
n51hpbz,"Use a debugger. Use print statements en masse if no debugger available (printk if kernel modules). Often finding out what input parameters to a function gives issue will allow you to walk thru it by hand or just say doh, and handle the case you missed.",povlhp,2025-07-25 06:18:26,3,learnprogramming,t3_1m8qgbr,False,
n531350,"That's the wrong approach. Randomly changing things will likely break stuff.Here's the analogy. Imagine you have a car (and I'm no mechanic), and it's having some issues. You open the hood of the car, and start randomly doing stuff, hoping the problem will go away.Do you think that's a solid approach to fixing the car? Would a real mechanic do that? No, they would try to figure out what the problem is. Of course, being experienced, they have a series of tests they can do to isolate the problem and the confirm it is the problem, and they have an idea how to solve the problem.In a way, you need to do the same. Randomly changing your code is not going to fix it just like randomly doing stuff to a car engine won't fix it. You need to understand your code.Because I've taught beginners, I've seen this ""I do random stuff and hope to fix it"" before. Why do beginners try this approach even as they would admit, it won't likely work.It's because the code looks daunting. If I say, tell me what each line of code does, one step at a time. Be the computer. Do each step. To a beginner, that seems like crazy slow. It would take forever to do that (even though they wrote the code). Random fixes is a lot quicker. Do something rather than do the right thing which is slow and tedious.OK, so some steps.**Determine why you think your program is broken**I've had students who tell me their program doesn't work. When I press them, and ask ""what's wrong"", they just say it doesn't work.What they really need to say is, ""I think this is wrong because when I put in value X, I get answer Y, when I expect Z"". Those three parts are key. What input (X) did you use? What answer (Y) did you get? And what answer did you expect (Z)? This is the first step to debugging. Why do you think it's wrong?**Try a smaller input**The next step is to put in the smallest input that causes the problem. Sometimes, we'd give students some sample inputs that were pretty lengthy. Their code would break, but it was hard for them to figure what was going on because the input was so lengthy, they didn't know what part was causing the problem (imagine the input is an array of numbers).The first step is to see if it can handle the smallest input possible (say, an array with one element).**Test your functions**A smaller version is to test functions. Determine* what are the input parameters* given certain input values, what are the output values**Write more small functions**Instead of writing one big `main()`, break things up into small functions. Then, you can test each function.Write a comment for each function and give some sample inputs and expected outputs for that function.**Test as you go along**Don't write all the code with no testing, then test after you wrote all that code. This won't help if the code is already written, but can help in future coding.",CodeTinkerer,2025-07-25 13:33:10,3,learnprogramming,t3_1m8qgbr,False,
n53y7ry,"1. Have a clear and specific expectation about what the program should do.2. Identify one or more a specific checks you can carry out to prove/disprove that idea. 3. Carry out the check (with a debugger, print statements, logging, etc.)4. Assess the evidence, decide if your hypothesis is correct or not. Make any changes needed to your code. 5. Repeat if necessaryThis is, more or less, an application of the scientific method, loosely speaking.If you are not sure what specific expectation you need to check to begin with, start with whatever your program is supposed to do first.",nderflow,2025-07-25 16:11:46,2,learnprogramming,t3_1m8qgbr,False,
n596ehp,Debugging feels like guessing because it’s the only game where being wrong is just another way of narrowing down what right might look like.,alpinebuzz,2025-07-26 12:26:42,2,learnprogramming,t3_1m8qgbr,False,
n51a1du,"At a very novice level you should be putting “print” statements in your code which log parameters, describe code execution, and eventually handle potential errors you may foresee with more experience. You can use the simple print statements to trace back through you code to where a potential bug might be by just checking which log statements executed and which havnt been reached yet.For example maybe some code reads a file. It starts by printing “opening file A” then the it does some calculations, closes the file, and finally prints “file processing complete”. If you see the first log and not the second you know your bug is between those line.",botechga,2025-07-25 05:14:05,1,learnprogramming,t3_1m8qgbr,False,
n53zzyo,"This is pure politics, not skills related. A degree is less useful in your first 15 to 20 years, but as you progress and change roles/leadership positions, it becomes helpful as a points accelerator in the evaluation process.",I_am_transparent,2025-07-25 16:20:08,24,learnprogramming,t3_1m92r9a,False,
n53uy5d,I just went back to college and got a Data Science degree after already working in the industry for years. I honestly regret it. It's been 5 years since I had a full-time job and nobody seems to want to hire right now. The student loans are insane and I don't know how I'm gonna pay them off. The degree program was very stressful and it was terrible for my mental health. I don't feel like I learned much. If you're happy with your job and partner you probably shouldn't go back to school right now.,40_degree_rain,2025-07-25 15:56:28,9,learnprogramming,t3_1m92r9a,False,
n54v6jg,"I've been in the field 15 years. Got my degree after being in for around 10 years.Never added it to my resume.Nobody has ever asked about it. If you have credentials (past experience) to get you into an interview, a degree does nothing else for you. It is MASSIVELY helpful in getting your first job, but is dubious in utility outside of that.",sarevok9,2025-07-25 18:46:04,6,learnprogramming,t3_1m92r9a,False,
n54v7vj,If you are already in the market it depends of your goals. I would say it is not useful for the first 15~20 years but after that it open positions in companies that don't hire without. You have that option or go bet in a startup. If I were you I would just look for a 100% online degree and go at your own pace.,LXLN1CHOLAS,2025-07-25 18:46:15,2,learnprogramming,t3_1m92r9a,False,
n58s3id,"I was in pretty much the same situation (in Australia for context), I went to uni for CS with credit from a previous degree and I'd say it was a waste of time for the most part.I had more job offers before I got the CS degree (could be from the job market collapse during that time) but overall I could have learnt more by just challenging the weak points I already knew I had or taking on a project outside my comfort zone.I thought it would be fun to learn with similar minded people but the majority of people aren't that into it.I won't say I didn't learn anything, but I don't think it's a game changer by any means.I'm still working for the same non IT based company, while doing a couple of days a week at another local company now is the only difference.I put in around 40 applications for junior Dev positions at bigger companies and heard back from 2 companies saying I was overqualified and ghosted by the rest. TLDR: same position as OP, went to uni, didn't help with job prospects, don't feel like I learnt anything I couldn't have learnt from YouTube",yellowpandaaa,2025-07-26 10:35:01,2,learnprogramming,t3_1m92r9a,False,
n5976fg,Getting a CS degree to cure imposter syndrome is like buying a tuxedo to prove you belong at the party you’ve been hosting.,alpinebuzz,2025-07-26 12:32:01,2,learnprogramming,t3_1m92r9a,False,
n54bdbz,"Look at WGU CS degrees. Fully accredited, online, mostly go at your own pace, per term.It’s a flat $4000ish for a 6 month term, you on average have to take at least 4 classes in that time. If you’re done early, you can take additional courses at no additional cost, until the term ends. If you have prior knowledge and experience, you can knock out a ton of courses easily, plus you can transfer some in. For example, there was a web basics html/css course. Started the course one day, skimmed over the material and was pretty sure I knew it all. Took a practice exam, did well, scheduled my final exam the next day. The entire course was done with me spending maybe 5 hours on it, because I already knew it.There isn’t any homework in each class, just lesson material and optional practice work and labs. The final is the only thing graded, some courses are exams, others are projects",Gawd_Awful,2025-07-25 17:13:17,2,learnprogramming,t3_1m92r9a,False,
n53wyhk,"If you already have an associate's degree, wouldn't some of that transfer so you don't need a full 4-year degree? Especially if you went to the same college/uni as you did for your associate's. This might reduce your overall time.",CodeTinkerer,2025-07-25 16:05:51,1,learnprogramming,t3_1m92r9a,False,
n5651sc,"Can't speak for where you are, as I'm in England, but I was a few years into my role before I got a degree, it's meant nothing and had absolutely no impact on my career other than giving me something else to pay off, even when I poke around the market occasionally, there's no more interest or better offers before or since. I figure that at this point, people will look at the work I've done and what I can do, because I've had a decade to produce things, but perhaps if I hadn't made anything yet, it'd be much more helpful to indicate I had a vague idea of what I was doing at least.Some members of my family like that I have it for some reason, but personally, if I could go back, I wouldn't bother. I didn't learn anything I wasn't familiar with already from work and personal research, and some aspects of what was taught would actively hinder my job if I tried implementing them as it would slow productivity to a crawl.I did mine part-time, I can't imagine doing it full-time. If you have already got the ability, and you have some way to show it, I really don't think a degree is going to change things any more than spitting in the ocean. The times I've had bigger offers have all been because they've seen something I've done and liked it, but I've never had anyone stop to mention the lack of degree, or ask about it since I got it.Of course, I imagine different goals and different locations might change that, from my understanding, large multinationals tend to like degrees, but I'd rather switch to a different career than work for any of them.",Kezyma,2025-07-25 22:37:48,1,learnprogramming,t3_1m92r9a,False,
n577b8w,Can I ask about your coding journey? What skills/experience did you have to get your first developer role?,Rmj310,2025-07-26 02:26:31,1,learnprogramming,t3_1m92r9a,False,
n5m1rmp,You're still a baby in the grand scheme of things.,Pearl_Jam_,2025-07-28 14:15:13,54,learnprogramming,t3_1mbh2uv,False,
n5m11jl,"Practice your art, practice your 'C'.Unless you use Godot or some other engine , you will benefit greatly from knowing C, so stop judging yourself so harshly! As they say, compare yourself only to the person you were yesterday.I too am a procrastinator, but I have learned to ignore those horrid inner voices that say ""Do it later"" and just do it anyway.parents! haha we've all been there, they are, ultimately, on your side even if they sometimes don't come across that way; they will not want you to fail so they may be cautious of you trying anything adventurous, but you do what you need to do, and when it works, parents can bask in your glory.",bravopapa99,2025-07-28 14:11:33,24,learnprogramming,t3_1mbh2uv,False,
n5m5276,"For making games, your best bet is C or C++, maybe Java, Python is used a lot more for stuff like statistics, analytics, accounting, and data management.I enjoyed the free Harvard tutorial on YouTube for Game Development. It showed you how to make a games, but they are a little too advanced for beginners since they assume that you already know the basics of coding. At an absolute beginner though, I would study coding basics, there are a lot of free sources and videos on YouTube for basics.Being self-taught at the beginning is usually the hardest part about being self-taught. You have no basis on what you have to learn and how well you need to know it, or even why you have to learn it. It sounds like you're going to basically be behind a single semester, which to be honest, isnt TOO bad, even though at the moment it sounds like the end of the world, trust me, its not that much time. My honest advice for you is to try and calm your anxieties for now and build a good relationship with programming. Go and pick a youtube tutorial Playlist you like, familiarize yourself with compilers/code editors, and just practice the basics like variables and loops. Don't try and make it into homework or work, just have fun with it, make it low stakes. If you like podcasts or lofi play some in the background while messing with some loops to familiarize yourself with them. Write a loop, change the variables. Add stuff, if it breaks, oh well, start over, delete the whole loop and write it again and start testing new stuff out. Go into leetcode and try out some of the easier prompts, if its too hard, its fine, just make a point to try it out and get used to the way the syntax works.",Error-7-0-7-,2025-07-28 14:31:38,10,learnprogramming,t3_1mbh2uv,False,
n5m583p,You could start playing around with unreal engine or unity. Unreal uses c++ and unity uses c#. I know unreal has a lot of learning material. Unity probably does as well. Check out blender also for modeling.,nondickhead,2025-07-28 14:32:27,5,learnprogramming,t3_1mbh2uv,False,
n5mkari,"If you want to get a bit of a head start for university, try out the free online Harvard CS50!https://pll.harvard.edu/course/cs50-introduction-computer-scienceIt's a really nice introduction which dabbles in several fields so you get some insights on what is possible, and you can set your own pace learning. The videos are also really fun!",ObsidianHumour,2025-07-28 15:44:38,3,learnprogramming,t3_1mbh2uv,False,
n5m28j2,"You can work in the games industry without learning how to code. There are plenty of concept artists, character designers, level designers, modelers, etc who never need to learn code. Don""t just ""learn python"". Jump directly into a game engine and experiment there. And video games don't all have to be AAA 3D open world etc. Make a short hypertext game in Twine and you'll learn the basics of JavaScript. Cat.js was also a fairly intuitive engine for me. For Pythonic engines there's Godot or Ren.py. And if you know C you can try Unity (I kind of hated working in Unity though).Join a game jam to force yourself to make something quickly and without the need for perfection: https://itch.io/jams",mousachu,2025-07-28 14:17:36,2,learnprogramming,t3_1mbh2uv,False,
n5m4688,"Ok, so you want to be a game dev right? I’ll challenge you then. Start learning C++ by whatever means you learn best. Learn enough to make pong. I’d say start with pygame but since you already know a bit of C and this is your dream, jump right in the deep end. Good luck.",Dazzling-Tonight-665,2025-07-28 14:27:13,2,learnprogramming,t3_1mbh2uv,False,
n5m4m07,Usually when I feel stuck. I like to sit down and ask myself why. Feeling stuck is always a sign to me that I am not being true to myself. There is usually deeper trauma or Self-Misunderstanding that I have to force myself to work through. You say that it is your dream to become this so there shouldn't be no doubts. Unless you're going in into it with the wrong mindset. For the wrong reasons. Sit down and ask yourself why.,kaizenkaos,2025-07-28 14:29:23,2,learnprogramming,t3_1mbh2uv,False,
n5m7fab,"Hey OP!First, I know how much of a blow it may feel like to wait to get into university. This doesn't make you any less and is really an opportunity in disguise. You now have a few months to practice coding and get a feel for if you like it over design/story telling. Also don't be afraid to not get into programming and just stick with what you know (design and story telling). I know it sounds cliche, but you'll never be happy doing things to prove your worth to other people. I wasted a lot of time and opportunities in my 20s because I couldn't learn that lesson. Maybe consider pivoting your degree to design (some uni's have game design specific courses) or to something that would better suit storytelling for game development. My degree was in IT with a focus in programming and software engineering. To me the hardest thing in my program was understanding the ""thought"" process behind solving problems with code. A great way to practice this for me was actually playing the game Human Resource Machine on Steam. It forces you to ""think"" and ""problem solve"" in a way that is really beneficial to coding. The reason I harpe on this is because to me, my C# and Python classes were pretty similar. The foundation of WHAT you were doing was the same, but the syntax you use to execute it is different.",xTrashQueenx,2025-07-28 14:43:10,2,learnprogramming,t3_1mbh2uv,False,
n5mdab2,"As a fellow procrastinator, I would say you should work on something you're passionate about. Learning for the sake of learning can be difficult for some people, including me. You mentioned game development, so why not try to learn Godot, Unreal, or Unity? You will need to code various things in them, so you can get a jump start with coding while doing something you enjoy.",Zesher_,2025-07-28 15:11:27,2,learnprogramming,t3_1mbh2uv,False,
n56asgr,Primarily using a disassembler.https://en.m.wikipedia.org/wiki/Disassembler,no_regerts_bob,2025-07-25 23:10:03,22,learnprogramming,t3_1m9drkq,False,
n56ktci,"The clue is in the name: ROM. When you were plugging in a cartridge it’s essentially the same thing as plugging in an extra RAM stick, except you can’t change any of the values in the extra addresses.To copy them you just have to read the value in each byte and save it somewhere.As for understanding those bytes, most consoles use off the shelf CPUs, so you can therefore get the data sheets describing their architectures and operations pretty easily. Working with Assembly language is not actually that hard once you get comfortable with how the chip works",Miserable_Double2432,2025-07-26 00:07:14,9,learnprogramming,t3_1m9drkq,False,
n56aixc,This discussion might be of interest [https://www.reddit.com/r/emulation/comments/4exm0e/how\_are\_roms\_acquired\_you\_cant\_exactly\_reverse/](https://www.reddit.com/r/emulation/comments/4exm0e/how_are_roms_acquired_you_cant_exactly_reverse/),mxldevs,2025-07-25 23:08:33,6,learnprogramming,t3_1m9drkq,False,
n56anjy,Probably by studying the architecture of the gaming system.,obj7777,2025-07-25 23:09:16,3,learnprogramming,t3_1m9drkq,False,
n56c7qe,"Where did you hear about people doing all of that? I know people can get ROMs from game cartridges by using a special reader that plugs into their PC and lets them insert a cartridge in it and then dump the data from the cartridge (such as [this device](https://www.cartreader.net)). I haven't really heard about people extracting data and editing the code though, just playing the games with the ROMs..In some cases, it sounds like you can save (AKA ""dump"") game cartridge ROMs directly on a console and save them to an SD card. For instance, for a Nintendo 3DS, I found [this guide](https://3ds.hacks.guide/dumping-titles-and-game-cartridges.html). For older systems,To look at the code though, you could use a disassembler and load the ROM into it - but it would only show you the assembly language instructions; you can't extract the original higher level code (i.e., C) from that. Reading assembly code and understanding what it's trying to do takes significant effort, as it's about as low-level as you can get. And if you want to make changes, you'd modify the instructions and re-assemble it (it doesn't get re-compiled like a higher-level language does).",RolandMT32,2025-07-25 23:18:00,2,learnprogramming,t3_1m9drkq,False,
n56fss8,You can theoretically use a disassembled or even manually just step through code with a debugger. If you know assembly language it CAN be easy. Various copy protection schemes are often easily bypassed.What can seriously confound this though is code obfuscation. There are various methods that make those efforts MUCH harder. Theoretically if you create an automated code obfuscator the code can be in plain site.Either way they are rare but there are development machines on the market. Typically it’s the same game machine but modified so that you can save or load code to an external PC and run a debugger to control the program on the game machine. The development systems come with extensive libraries and tools.,PaulEngineer-89,2025-07-25 23:38:15,1,learnprogramming,t3_1m9drkq,False,
n56pwth,"I would suggest looking at VintageGamer on YouTube. He is a SWE and goes through a lot of the old school ways of how they cracked consoles, games etc.",googleaccount123456,2025-07-26 00:37:42,1,learnprogramming,t3_1m9drkq,False,
n56th8g,"Back in the days, not everything was protected by trade secret this and copyright that backed up by a pack of lawyers. Apple // famously included circuit diagram of the motherboard when you bought it retail ""back in the days"". And hardware and software were simple in the 8 and 16-bit era. Let's just say I remember watching a guy using the Apple // integer BASIC card to force any program into debug mode (using ""monitor"") and thus, get into the memory and turn off the copy protection bits. But this was way before your time. And yes, that pretty much dates me. Keep in mind that CDs and DVDs have standards and you can just read those off as data file. Same with cartridges (but those may require a special reader, or a ""dev console"" rather than the normal consumer console).",kschang,2025-07-26 00:59:20,1,learnprogramming,t3_1m9drkq,False,
n575yl0,"If you know the instruction set of the CPU uses on the game system then you can just read what’s on it. You will get a bunch stored machine code data that you can easily translate into the assembly version or decompile into C/C++ or whatever. Keep in mind this doesn’t give you the original source code; things like comments, variable and function names are lost. The decompiler might also decide to generate logically equivalent but different code.Cartridges and discs just store data and it isn’t that hard to read off that data with the appropriate tools and dirt ware that you can search around online for.",TheCozyRuneFox,2025-07-26 02:17:38,1,learnprogramming,t3_1m9drkq,False,
n5bl8um,"Trivial. Grew up removing copy protection from Mac games. Soldering to read out data was a basic CS skill. Fun was the group I was close to, that hacked BSkyB smartcards for Sat TV. Some guy etched the plastic away, used the university electron microscope to photograph the circuit - and we could extract code with image analysis.",povlhp,2025-07-26 20:21:28,1,learnprogramming,t3_1m9drkq,False,
n5nbolt,Surely you've looked at https://freecodecamp.org/ and the tutorials for the Unity and Unreal Engine gaming frameworks. Those are decent ways to learn without dropping a lot of cash.,Aggressive_Ad_5454,2025-07-28 17:51:00,12,learnprogramming,t3_1mbmycq,False,
n5niw45,"The boot camp era is dead, it lasted about 2 years during & after covid, and some of them got laid off. You can self learn but if you want to be competitive you need a CS degree + internship experience realistically.Some people report landing jobs after self learning, but those are usually outliers.",Rain-And-Coffee,2025-07-28 18:24:27,12,learnprogramming,t3_1mbmycq,False,
n5nnkbm,"Hey man, it’s never too late to start something new. Just keep your expectations realistic. You probably won’t land your dream job in the next couple of months, but you can definitely start moving toward it.Forget bootcamps they’re a waste of money and won’t guarantee you a job.Here’s what I’d suggest:Take Harvard’s CS50 course online. It’s free and gives a solid introduction to computers and programming.After that, it’s kind of a “choose your own adventure,” so to speak. Think about what you want to do, web dev, software engineering, IT, etc. Then go to nostarch.com and find a book that matches your interest. Start working through it, build your own projects, and network to land an entry-level job.It’s tough right now since the tech industry’s going through a downturn, but it’s definitely not impossible.If you have the money and the opportunity get a CS degree it will legitimize you.",Round-Homework5998,2025-07-28 18:46:41,9,learnprogramming,t3_1mbmycq,False,
n5naqfs,"If you want a career in CS, start with a CS degree.Bootcamps are a waste of time.Keep in mind this is the single worst time in history to try to break in to the career field.",polymorphicshade,2025-07-28 17:46:45,11,learnprogramming,t3_1mbmycq,False,
n5ncr0c,"At this point unless you're a top 1% self-taught developer with a lot going for you then I wouldn't recommend anything less than a 4 year degree. However, even they're struggling to land jobs in the last couple years (both previously mentioned groups). A bootcamp is not just a waste of time, but with some companies it's actually a red flag and that number is growing.",Serenity867,2025-07-28 17:55:49,7,learnprogramming,t3_1mbmycq,False,
n5q0epv,"I was at help desk and started with this book [https://automatetheboringstuff.com/](https://automatetheboringstuff.com/) Good luck, it's gonna be a rough ride for CS in the next 10 years, even if you're in AI",Complex-Web9670,2025-07-29 02:10:58,3,learnprogramming,t3_1mbmycq,False,
n5nae5m,What do you mean working with CS most of your life?,rtalpade,2025-07-28 17:45:11,2,learnprogramming,t3_1mbmycq,False,
n5o2mke,"Really bad timing and in your 40s, nothing is impossible, but since you really need money to live, switching fields right now for you will be extremely hard.If you arent passionate about this, dont waste your time.",Mol2h,2025-07-28 19:58:59,2,learnprogramming,t3_1mbmycq,False,
n5op17h,I'm not sure it's recommended. I used to work at faang now I'm working at REI for healthcare benefits and hustling on the side. It's rough out there.,mountainlifa,2025-07-28 21:47:09,2,learnprogramming,t3_1mbmycq,False,
n5qomyg,I am 36 years old. I just transiyioned to cs. The barrier to become a programmer is not high. The barrier to get a job as a programmer is higher than ever. Bootcamps and self taught says are over. Im getting masters in cs for people with no cs background. I highly recommend going this route. Trust me since im in the exact same boat as you are. Ive applied to 800 jobs with no luck after bootcamp :grimacing_face:,Ok_Helicopter7697,2025-07-29 04:55:03,2,learnprogramming,t3_1mbmycq,False,
n5v8jga,"As strange as it sounds, but *stop watching tutorials* - really, that's the entire point.Start *doing*.Watching tutorials to become a programmer is like reading novels to become an author. You can *read and understand* a book, but you wouldn't be able to *write* a comprehensive, fully developed novel, if you didn't *actively practice*. > watching videos, following along with examples, and I understand everything in the moment....and there we have the problem. You, like most people, focus on the *code*, on the *final result*, on the *completed car*. You don't focus on what actually leads to the code, on the *design process*, which is far, far more important than the code itself.You need to learn to *analyze and dissect problems*, to *break them down*, to *create individual solutions* to the sub problems that *then* can be *implemented* in any programming language.Learn to plan. Sit down with pencil and paper and start from there. Not from the code. Start from the problem, break it down, solve it *your* way, don't even think about programming. Once, you have a working solution, test it. Track the steps you took. The more detailed, the better. Then, convert the solution into code.Start smaller. Hackerrank and Leetcode are for experienced programmers preparing for interviews. Start with [Exercism](https://exercism.org).And if you need to brush up on Python fundamentals, do a *proper* course from A to Z: MOOC [Python Programming 2025](https://programming-25.mooc.fi) from the University of Helsinki.I'll just leave some of my former comments from /r/learnprogramming here:+ https://www.reddit.com/r/learnprogramming/comments/1j9ezmx/getting_better_at_coding/mhdna2e/+ https://www.reddit.com/r/learnprogramming/comments/1iz7wv3/how_to_become_a_better_engineer/mf10qbg/+ https://www.reddit.com/r/learnprogramming/comments/1j3w7x9/how_to_actually_learn_problem_solving_skills/mg3q9ya/+ https://www.reddit.com/r/learnprogramming/comments/1ioehwa/struggling_to_put_together_my_own_code/mcirhxq/+ https://redd.it/1jyd36k",aqua_regis,2025-07-29 21:22:49,17,learnprogramming,t3_1mcnubb,False,
n5vbtrz,It's because you mostly HAVEN'T started learning yet.,lukkasz323,2025-07-29 21:39:12,4,learnprogramming,t3_1mcnubb,False,
n5v873t,"This is completely normal. Not just in programming, but in maths and so on too. Watching someone else do it is an important first step, but it's **only** a first step. Doing it yourself is actually where most of the difficulty is. You can't skip it, and you can't make it go faster or easier (assuming you're working from good resources) - you just have to push through the difficulty.",numeralbug,2025-07-29 21:21:07,2,learnprogramming,t3_1mcnubb,False,
n5va7eo,"It's normal. You only *really* learn by doing. You can memorise as much as you like, it will rarely make you good at anything except quizzes. It's a skill you have to cultivate by deliberate practice. Research can be a large part of the job, but it's only part.If you've truly no idea where to start, you picked a problem beyond your current abilities. Do something simpler. Print your name. Make it ask your name first. Make it calculate something etc. You want to pick a problem where you're not sure how to solve the whole thing but you can identify some key parts and what they'd look like when broken down.",HashDefTrueFalse,2025-07-29 21:31:03,2,learnprogramming,t3_1mcnubb,False,
n5v86l7,Most people don’t understand that 99% of coding is searching on stack overflow.,emergent-emergency,2025-07-29 21:21:03,2,learnprogramming,t3_1mcnubb,False,
n5v94pb,"Seems like a ton of people struggling with the same thing here. It's normal. The knowledge of instructions and other theoretical language parts does not translate into intuitive understanding on how to use them to build functional code. Knowing all Chinese words is still far from the ability to write a poem in Chinese. The proper intuition takes time and practice to train.In the meantime, try to reverse your thinking. Think what your starting with and what you want to end up with. Then, go from the end to the beginning. For example, if I want to write a function that calculates the cumulative age of all the users of the system, the input is the user list, and the output is a number. Then, I know that number needs to be a sum of each age of each user. So, I need to get user age from user entry. So, I need to compare their birth date with current date. You can probably write a function for each of these steps, and stitch them together. Not sure if that helps at this stage, but the idea might come in handy.",voyti,2025-07-29 21:25:42,1,learnprogramming,t3_1mcnubb,False,
n5v9efb,"It's good to know how to start a new software project. That's something usually taught in software classes. For instance, Visual Studio has a process for creating a new project, and there's a similar ""new project"" process for just about everything.Beyond the basics though, it's common to look things up online. You won't be able to memorize all the syntax and everything of a programming language.",RolandMT32,2025-07-29 21:27:02,1,learnprogramming,t3_1mcnubb,False,
n5vakvw,"My motto with learning has become ""maximize friction to maximize learning"". Learning loops? Watch one example, then put it away and code from scratch, then compare to see what you missed / messed up.There are really two main sides of understanding something I think: One is ""I can say/grasp the words"" and the other is ""I can feel what to do here"". People often try to use the first to reinforce the second, but that's the wrong order imo. I got stuck in that pit for a long time.Take stabs at stuff on your own (ie, watch a tutorial, then put it away and try to recall by coding yourself - bonus points for meaningful variation from their example) and I promise you that muscle will grow pretty quickly.Something more actionable that helps me a ton is writing out the comments for what needs to happen at each step, THEN flesh it out with code. Over time, I find myself doing that less and less as you tend to hit similar solution patterns.",AtlasLeCleetus,2025-07-29 21:32:54,1,learnprogramming,t3_1mcnubb,False,
n5ve1lt,Don't worry it happens to everyone :winking_face: i've been programming for 25 years and i still hit that wall once in a while.Find a simple example of the idea you have in your head and start with modifying that. If you're not exprienced it's hard to get the skeleton working for any idea. :smiling_face_with_smiling_eyes:,TomatoEqual,2025-07-29 21:50:20,1,learnprogramming,t3_1mcnubb,False,
n5vekr8,"Everybody experience this. Don't worry, you're on a good track :)",Glass_Albatross1,2025-07-29 21:53:02,1,learnprogramming,t3_1mcnubb,False,
n4ntkbc,/r/programmingbuddies is the place,aqua_regis,2025-07-23 05:12:15,2,learnprogramming,t3_1m70h08,False,
n4ooe4v,where you from,jeanycar,2025-07-23 09:55:09,1,learnprogramming,t3_1m70h08,False,
n4p39pa,Hi there!,Odd-Classic8670,2025-07-23 11:51:14,1,learnprogramming,t3_1m70h08,False,
n4pz78z,Hey!,Chest-Some,2025-07-23 14:44:08,1,learnprogramming,t3_1m70h08,False,
n4qknj9,"Heyy there, I'm also self-taught. Let's connect!",Lopez_Muelbs,2025-07-23 16:23:07,1,learnprogramming,t3_1m70h08,False,
n4nu7ao,cool! thank you for letting me know,Healthy_Apricot_651,2025-07-23 05:17:28,1,learnprogramming,t1_n4ntkbc,True,
n526s6v,"I mean this sincerely, maybe try change your mindset? Learn Java in college - do the homework and class work as a discipline - if you feel lost at times that’s good because that’s how you truly learn, so long as you don’t give up on it.Take your breaks when you feel you’ve done enough, not as a reward but as fuel. If you want to do Python on the side it would be good, as learning more than one language can only be beneficial to you - but let it be fun, Python is fun naturally (to me atleast) do fun projects and experiment in your free time.Lastly, I know it’s easier said than done but don’t compare yourself to others - they are on their own journey just like you are, work to benefit yourself - not to show people how much you know.",CutPerfect7616,2025-07-25 10:12:21,13,learnprogramming,t3_1m8v3op,False,
n52h95b,">With all the news about tech layoffs, AI booming, and the job market being super competitive or in a so-called ""recession,"" I honestly don’t know where to begin.This is natural, but it's a doom spiral. I don't want to say things aren't bad - they are - but things are **always** bad in one way or another. Tech-related jobs have been in constant flux for at least decades, Your aim should be to make yourself as employable as possible **even as** the world changes around you, which it will continue to do. The best way to do that is to avoid jumping on bandwagons and to learn the solid skills necessary to adapt. You are already doing that with your engineering degree.>Should I start learning Python just to keep up with everyone?You should start learning Python if you're interested in it, and not if you're not. Python is a great tool. But also, not everyone will be a Python dev in the future, and **not** learning Python frees up valuable time for you to do something else. (You can also learn Python later if you want to. What's stopping you picking it up at age 50 if you need to?)>Any advice or roadmap would mean a lot right now.My advice is: everyone's roadmap looks different. Yes, you should work hard - but whether that means ""get a paid job"" or ""aim to get a high grade"" or ""learn Python"" or ""learn French"" or ""brush up on your maths"" or ""do some volunteering"" or ""learn interview skills"" or one of a million other things depends on you. All of those things are good, and different employers will value different skills, and no one person can do them all.You also shouldn't forget about the rest of your life - family, friends, relationships, hobbies, rest, eating well, sleeping well, etc. No point in being the most skilled engineer in your company if you burn out at age 30, or have a heart attack at 40, or regret not starting a family at 50, or whatever.It's a lot to juggle. You'll drop a few plates here and there. Don't worry about it. It's a marathon, not a sprint.",numeralbug,2025-07-25 11:34:33,10,learnprogramming,t3_1m8v3op,False,
n527wul,"In general, I would say that the side-project idea is a great one, but with the caveat that different programming languages have different applications and use cases. It's not a case of Java vs Python vs C++ or anything else - it depends what you want to build, so don't learn Python just for the sake of adding another set of syntax to your vocabulary and 'keeping up'. The best thing would be to find a project that motivates you to learn the core ideas that underpin all programming - 'programmatic thinking', if you want to call it that, and importantly something you are interested enough in to keep you going through all of the frustrating trial-and-error that comes with the learning. Would it interest you to make a website? You could try JS. Are you interested in games? C++. Backend stuff? Java is super popular.",hypergolictypescript,2025-07-25 10:22:18,6,learnprogramming,t3_1m8v3op,False,
n5317nd,"The news is often distorted by people with agendas. They've been killing off SWEs for about twenty years. Each time they kill off SWEs, my pay doubles. They're bad at this.",askreet,2025-07-25 13:33:51,4,learnprogramming,t3_1m8v3op,False,
n529lpc,"""I genuinely want to learn and build a good foundation.""That is already a good start! If you are interested in something, go and try to do something with it or for it. It shouldn't be connected to school or anything or shouldn't be ""useful"". Just try out things! It is much easier to work on something if that is interesting for you and you'll learn from it.It doesn't matter what others do, don't try to compare yourself. There'll always be somebody who knows more/more successful/earn more etc. Just focus on yourself.Don't force yourself to learn python just beacuase other so it. It won't be good, I mean you will probably find that boring and it will just discourage you.And to answer your question: I remember long-long time ago as one of my first project I created a calculator in html+js. It was interesting to see something in a browser which was actually running. Then I wanted to know more. One project which I still don't know after like 20 years how I was able to pull of was a keylogger on Windows. I learned a LOT about C/C++ and Windows internal calls, how to ""hide"" it in the background etc. I still have that code. (I might have used it on a school computer and might have got myself a social media invitation for a long-gone site.)Just try to do something for yourself, it will give you motivation and when you finish you'll feel accomplishment.",gergo254,2025-07-25 10:36:37,4,learnprogramming,t3_1m8v3op,False,
n5265wi,"Language matters less as you gain experience. Learn to break problems down into actionable goals and build a project that you're interested,  you'll run into issues along the way and gain a ton from working through them.",manablight,2025-07-25 10:06:49,6,learnprogramming,t3_1m8v3op,False,
n52q0rl,"You could create a tetris clone in python if you want to learn it, or create an llm app usable in browser with some helper library (hf transformers, streamlit, langchain). Or get arduino and some parts to build a robot or weather station.",Important-Product210,2025-07-25 12:31:04,2,learnprogramming,t3_1m8v3op,False,
n52qzlh,"If you end up doing this in the long term it will become easy to learn a new programming language. Python is also considered an easier language to pick up.Because you've specifically asked for suggestions, my suggestion is to go all-in on Java. I assume this well help you get good grades and eventually employers may look better on you because of that.",neversignedupforthis,2025-07-25 12:36:56,2,learnprogramming,t3_1m8v3op,False,
n5323on,"Pick one language, one goal, and one deadline. That’s it. The chaos comes from trying to keep up with people chasing different outcomes. Your friends aren’t ahead they’re just busy. You win by choosing one thing that gets you paid or published and ignoring everything that doesn’t serve it.",NoPause238,2025-07-25 13:38:38,2,learnprogramming,t3_1m8v3op,False,
n532axq,"First, you shouldn't prematurely optimize -- ""The root of all evil is premature optimization."" So no need to learn Python. Instead you should focus on making sure you have the foundation to learn the ***engineering*** ahead of you. You are an engineer, not a programmer. Most practicing engineers I know know practically nothing about programming and the older one can barely use a computer properly. In fact, the older ones have already forgotten calculus --- they still remember the jargon like ODE but they could care less. Here is the thing about the universities these days. They have to have a schedule so they can keep charging you or your government for money. I am not against a liberal education, I think it is great, but I do not believe in taking people's education hostage to make a dollar. In fact, you as an engineer have no reason to learn programming at all, unless you find it fun and want to learn it. And, if you do need it, you can learn it on the job or right before interviews, or just fake it. Trust me engineering firms do not care, they only care that you understand engineering principles, that you have developed your gut feeling through apprenticeship at various firms. Even if you don't become an engineer, there is still no reason to do programming because engineering is where the work will be at in the future, not programming. Programming is technically dead at this point. It will be back just not in its current form. As long as you have a good understanding of the engineering principles and practices, you can carry that knowledge into any field and use that unique perspective to solve things that only you can solve with your own perspective.",kcl97,2025-07-25 13:39:42,2,learnprogramming,t3_1m8v3op,False,
n58en7l,Java please. There are ton of works in Java especially in banking. Most of banks in the world use Java for their infrastructure. So if you are good at Java you will have more chance to get the job in this terrible market.,Huy--11,2025-07-26 08:23:04,6,learnprogramming,t3_1m9nu3c,False,
n5e3nge,"Tldr 1. Java with Spring2. Python3. Go4. Ruby, or maybe Rust. If you are really good at just Java and Python, that covers about 75% of the market. Java isn’t glamorous but it’s by far the most mature and used backend language even at modern tech companies. AWS for example is 90% built in Java even today.",MaybeAverage,2025-07-27 06:22:34,5,learnprogramming,t3_1m9nu3c,False,
n58ecmt,"I would say learn more about the technologies. The language itself is just a tool and a backend itself most of the time is quite simple. How to make it efficient could be hard.Learn about communication protocols and technologies, http/https, websocket, probably graphql and grpc and basically how a rest api should be designed.Then caching (how to do it, what can be done), message queues and async processing (in general, but you can look into kafka, rabbitmq, whatever and try them).Backend is usually much more or could be much more than just a simple rest api in a given language and these technologies are independent from the language of choice.",gergo254,2025-07-26 08:20:05,3,learnprogramming,t3_1m9nu3c,False,
n58h22o,A good place to get objective metrics of which languages are popular (and therefor in demand on the job market) is to look at sites like:[https://www.tiobe.com/tiobe-index/](https://www.tiobe.com/tiobe-index/)[https://pypl.github.io/PYPL.html](https://pypl.github.io/PYPL.html),AlexMTBDude,2025-07-26 08:47:07,2,learnprogramming,t3_1m9nu3c,False,
n58no9q,Java First then golang.,movemovemove2,2025-07-26 09:53:10,2,learnprogramming,t3_1m9nu3c,False,
n58dg6d,"JS/TS, Python, Java, C#. Any of those would be fine to learn",grantrules,2025-07-26 08:11:10,1,learnprogramming,t3_1m9nu3c,False,
n58sjpg,Java or C# tbh,Special_Rice9539,2025-07-26 10:39:05,1,learnprogramming,t3_1m9nu3c,False,
n5a0xul,"I Just answered a similar question. Yes, I'm old school, but learn C. You don't need to know everything, but have the fundamentals. And the answer about technologies is worth reading. Languages are the 'how', technologies are the 'why'. And I'll say it again. be pragmatic.",GotchUrarse,2025-07-26 15:24:18,1,learnprogramming,t3_1m9nu3c,False,
n5b4olj,C# or Java. Java might be easier to find a job for but C# will be more enjoyable,born_zynner,2025-07-26 18:51:06,0,learnprogramming,t3_1m9nu3c,False,
n5v2146,Thanks for making me feel better,sarnobat,2025-07-29 20:51:51,1,learnprogramming,t1_n58en7l,False,
n510dqc,Fluency in Hindi.,DonkeyTron42,2025-07-25 04:01:42,13,learnprogramming,t3_1m8olms,False,
n518ur1,that you'll be shit and slow everyone down but eventually learn,Hawxe,2025-07-25 05:04:41,7,learnprogramming,t3_1m8olms,False,
n51ec0u,Main thing is how fast you adapt there way of working . \[it's my pov\],FriendshipDry6898,2025-07-25 05:49:31,3,learnprogramming,t3_1m8olms,False,
n53p1lh,You'll be expected to fetch the coffee.,obj7777,2025-07-25 15:29:21,3,learnprogramming,t3_1m8olms,False,
n5167nx,You discuss this with your manager when you begin your first job.,kevinossia,2025-07-25 04:44:12,2,learnprogramming,t3_1m8olms,False,
n51mtey,"It probably depends on the company, but usually everybody knows that hardly any junior developer will be productive immediately. In my experience, when I started working as a developer, they gave me time to study the project I was being put on and to read the docs about the frameworks, libraries, and technologies they were using. Nobody expects you to start a revolution in the company, I think that, most of the time, as a junior dev you just need to show that you're there to learn and become productive. Also, if a company is looking for a fullstack developer, it would be strange to go there and say something like: ""*Yeah, I wanna be fullstack, but right now I'm too scared. Can I start with frontend? :folded_hands:"".* Just go in and say that you have no experience, they'll understand that they can’t assign you the hardest tasks in the company.",Federico_FlashStart,2025-07-25 07:04:09,1,learnprogramming,t3_1m8olms,False,
n5bigjb,"As a junior front end dev, your job is to make pixels behave and users happy. You’ll be translating designs into code, fixing layout quirks, and slowly learning that “responsive” means “why does this look weird on my phone?” It’s a learning curve, but a fun one.",alpinebuzz,2025-07-26 20:06:07,1,learnprogramming,t3_1m8olms,False,
n5rljjq,"Stop following tutorials and build something from scratch, doesn't really matter that much what, as long as it's not trivial and not overwhelmingly large, then you'll just give up. You'll make a lot of mistakes and wrong choices, but that's part of the process, you just need to solve things and figure out problems yourself. You transition from basic tutorial projects to something else by just starting, you'll figure things out on the way. Real world project, including open source ones, are often quite daunting to approach if you don't have quite a bit of experience, so i wouldn't worry about it too much.",gramdel,2025-07-29 09:59:15,8,learnprogramming,t3_1mc786s,False,
n5rm2i0,"As usual with such posts: Stop using tutorials. Start creating your own small projects (as you call them ""beginner projects"") from scratch, without tutorials. Build your own things.Grow with your projects. Research what you don't know, but not in the form of tutorials for ""how to build X in language Y"", rather in ""how to connect a SQLite database in Python"" - short tutorials and narrow in scope, specific.Extend your projects, or gradually build larger ones. That's the way to learn.Open Source is an entirely different matter. First, you should only consider contributing to projects that you use and are attached to, not just pick random OS projects and think you can contribute. Sorry to tell you, but it seems that your current skillset is by far not developed enough to be able to follow and to contribute to open source projects with several thousand lines of code and with several modules.You need to gain experience in building your own fairly large applications first (again not through copying tutorials).----When you face a large code base it is usually beneficial to find the main entry. From there, go through each module in the order it is called. You could, if you want (I do it), draw a treemap, use Obsidian with Mermaid Diagrams, etc. to map out the project structure. Get a general overview first and then go into details. Look for *specific* things, e.g. how a certain value is calculated, how a certain part of the code works. Don't try to understand everything at once. This will be overwhelming.This is also the reason not to contribute to random projects. You are not familiar with the product. If you are familiar with an application through use and find an issue, you check the bug/issue tracker, and then go into the code. You try to find where your specific problem happens.",aqua_regis,2025-07-29 10:04:05,3,learnprogramming,t3_1mc786s,False,
n5rldhl,"Step 1) Give an example of a meaningful, complex project. Step 2) Build that project. Ignore that it exists already, just build it.Step 3) Use that product, identify weaknesses, find better solutions, implement them.",sububi71,2025-07-29 09:57:43,1,learnprogramming,t3_1mc786s,False,
n5roe28,"Build what you have you mind that has some complexity to it. You can also come up with your own complexity - for example: 1 billion users. When the complexity comes, you'll be faced with how to solve it. With that, you can think or find solutions. and then you'll learn how to do it. For me, I was building a [3D Settlers of Catan alternative](https://settling-in-rambutan.pages.dev/). That would have some complexity to it: 3D, tile generation, path traversal, a hexagonal grid, multiplayer.",ApprehensiveDrive517,2025-07-29 10:24:58,1,learnprogramming,t3_1mc786s,False,
n5rmsjq,"Thanks for the advice — I’ve actually tried doing what you suggested. I built a few small projects from scratch like a to-do list, a notes app that saves data to localStorage, a digital clock, and a timer — all using plain HTML, CSS, and JavaScript.While I did learn some things, I still feel lost when it comes to structuring code properly, using best practices, or scaling beyond these basic ideas. Sometimes I’m not even sure if I’m solving problems the “right” way, and it gets overwhelming without any guidance.Is there another method you'd recommend to go beyond this stage?Maybe something between tutorials and full independence — like guided projects that explain the why, or studying design patterns or architecture?Would love to hear your thoughts!",Odd-Version-5602,2025-07-29 10:10:39,1,learnprogramming,t1_n5rljjq,True,
n5rp2vv,"I think it's best to just jump in, pick something not trivial, i'd count all those small project you have done trivial. You don't need to know everything beforehand, you'll learn on they way. You'll make a lot of mistakes structuring your code and what not, but that's pretty much a good thing, you'll learn what works and what doesn't and probably learn to correct at least some of your mistakes. I think a good guideline for scope would be that it takes you months to build it rather than days or weeks.",gramdel,2025-07-29 10:31:02,2,learnprogramming,t1_n5rmsjq,False,
n5rq4n6,"these types of projects teach you very little once you've done one or two. the scope is extremely small and they practically only do 1 thing. when you work on something real, it does many different things and you have to then piece together the interwoven logic and structure. this is the part that is especially hard and also what stuff like genAI kind of sucks at. I think a good frame of reference is if something can easily be done by genAI (very small and focused scope), it's probably not challenging enoughthere are many smaller details about how you can approach this, but ultimately what you really have to do is commit to a larger project. in my uni program we already had 2 big (for 1 dev to do in a couple of weeks) projects also requiring UML diagrams and MVC code structure in our first courseI'm also always going to recommend beginners to start out with static-typed languages and NOT something like javascript. languages like these both make it harder to understand what the code you're reading (that someone else has done) is doing, and it potentially lets you skip certain fundamental knowledge that is important and helps you orient yourself with programming. if you really do not want to drop css+html+js I think you should just go on with basic fullstack and use something like java or c# for the backend",NefariousnessMean959,2025-07-29 10:40:00,2,learnprogramming,t1_n5rmsjq,False,
n5suovr,"There's two types of doing things: really not right way to do things (newbie garbage code) good enough way to do things (code looks nice and works properly, other ways to do it might be overengineering for the sake of it)",RealMadHouse,2025-07-29 14:43:09,1,learnprogramming,t1_n5rmsjq,False,
n5s6hg3,"Based on this, I think you need to dig into other peoples’ code.  You’ll probably see a mix of good and bad, and thus improve you discernment.  So instead of starting from scratch, do a project where you modify ir extend existing code.",mapadofu,2025-07-29 12:34:56,0,learnprogramming,t1_n5rmsjq,False,
n5s564p,"Scrimba teaches you with projects which is great, and The Odin Project takes a more ""learn by doing research and projects"" approach which I really enjoyed and taught me a lot. I recommend Scrimba and The Odin Project.",W_lFF,2025-07-29 12:26:50,7,learnprogramming,t3_1mc9w1x,False,
n5s6964,Freecodecamp is good for basic first steps. From YouTube Maximilian Schwarzmüller has great videos,littlecodingthings,2025-07-29 12:33:32,5,learnprogramming,t3_1mc9w1x,False,
n5s4hhu,"It's not a YouTube channel, but I recommend [the very detailed JS tutorial on MDN](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Scripting)!",abrahamguo,2025-07-29 12:22:37,5,learnprogramming,t3_1mc9w1x,False,
n5s4szr,Bro Code is good.,idontneed_one,2025-07-29 12:24:35,3,learnprogramming,t3_1mc9w1x,False,
n5s5xwa,Traver Media explains greatly,1tzRustyBoy,2025-07-29 12:31:37,3,learnprogramming,t3_1mc9w1x,False,
n5s7hyo,"Check out Traversy Media’s JS Crash Course, then The Net Ninja’s Modern JS series. Mosh has a super clear 1‑hour intro, and freeCodeCamp’s got a solid 3‑hour beginner course.",Extension_Anybody150,2025-07-29 12:41:02,2,learnprogramming,t3_1mc9w1x,False,
n5sgirt,"Not free, but i learned a lot from Jonas Schmedman (idk if spelled right) on Udemy. $10 on sale, worth it",Boring_Dish_7306,2025-07-29 13:31:55,2,learnprogramming,t3_1mc9w1x,False,
n5sfu1t,"*sigh* the daily ""where can I find good resources"" postAs if there weren't any **Frequently Asked Questions** linked in the **sidebar** with plenty recommended learning resources.As if this question hadn't been asked near daily already. A bit of searching before posting would be in order.As usual:+ [Free Code Camp](https://freecodecamp.org)+ [The Odin Project](https://theodinproject.com)+ [Mozilla Developer Network (MDN)](https://developer.mozilla.com)",aqua_regis,2025-07-29 13:28:10,1,learnprogramming,t3_1mc9w1x,False,
n5snd33,"By reading it https://www.reddit.com/r/learnprogramming/s/8IvA4NAUhE i answered some questions that you might eventually ask about JavaScript, could prevent some potential problems.",RealMadHouse,2025-07-29 14:07:23,1,learnprogramming,t3_1mc9w1x,False,
n5sy23c,"I have stopped using tutorials and courses and just use books now. You can try ""Eloquent JavaScript"" by Marijn Haverbeke.",Ash_ketchup18,2025-07-29 14:59:02,1,learnprogramming,t3_1mc9w1x,False,
n5nml4r,"I'm 100% on board with Exercism, I think it's a great platform. I used it and I loved it. Please consider donating if you can.What follows is purely me ""thinking out loud"" and not criticism.Something in the video in your link made me raise an eyebrow. They mention ""chunky AWS bills"". I'm a DevOps/Backend dev by trade so I'm privy to how expensive apps can get to run, but from what I did on Exercism it seems like a relatively simple platform, with an open-source CLI and a web app at its core. That shouldnt require a chunky AWS bill.In the end they need to pay their team of 3, that's totally understandable but I would have liked more transparency about how much is actually spent on the infrastructure itself.",klorophane,2025-07-28 18:42:02,2,learnprogramming,t3_1mbntl7,False,
n5ocb01,"looks good, definitly gonna use it",michiel11069,2025-07-28 20:44:23,1,learnprogramming,t3_1mbntl7,False,
n5qi2qz,"I like it but I feel like the mentors can be really hit or miss. I had a dude who would spend an unnecessary amount of energy on small formatting errors, and would hardly explain things or answer my questions in any useful way. He was like, the only guy doing reviews in my language too.",mierecat,2025-07-29 04:05:33,1,learnprogramming,t3_1mbntl7,False,
n5o7nby,"Sure, the website isn't all that complex, just a nice ruby monolithBut please don't forget the test runners, I'd say that's probably the biggest cost factor",-Danealus-,2025-07-28 20:22:39,2,learnprogramming,t1_n5nml4r,False,
n4x0o7k,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-07-24 15:33:51,1,learnprogramming,t3_1m87lnx,False,moderator
n4x76y8,"There's just two elements crucial for recursion: \- reliable and deterministic stop condition (VERY important): a way for the function to stop using self and return a plain value, based on a condition (which you seem to have) \- calling itself in a useful way if the stop condition is not metThat's about all you need to know to implement recursion, and you seem to understand that. Now, it depends greatly on what your project is, but in a typical project there's just a few scenarios where you'd use recursion. The fundamental one is when you're working with a hierarchical data, especially with arbitrary number of levels (so a tree topography basically). This can happen with stuff like tables (where row can have sub-rows) or file system.I would personally try implementing a flattening function (i.e. turning a list structure where there's a few top level elements to begin with, but each can have some children, of which each can have some children..) and the output should be a flat list of elements (flat list of all parents and all children, of all levels). When you're done you can move on and you'll probably forget about recursion for a long time. Also, keep in mind that most conventional (i.e. not purely functional, like Haskell) languages are not necessarily built to deal with recursion natively, and using recursion can cause stack overflow (due to every call being put on stack, instead of simplified/ignored, like a language natively supporting tail-call recursion would). In short, you generally don't use recursion unless you have a very good reason to, and you usually don't.",voyti,2025-07-24 16:03:35,9,learnprogramming,t3_1m87lnx,False,
n4x3nf2,"Applying recursion is indeed what everyone struggles with at first, not the definition of what it is. You're in good company.It might help to go through it with paper and pencil. `add_numbers(2)` is `add_numbers(1)+[2]` which in turn is `(add_numbers(0)+[1])+[2]` which is `([]+[1])+[2]`",high_throughput,2025-07-24 15:47:23,3,learnprogramming,t3_1m87lnx,False,
n4y40vi,Not quite sure what your question is here. If you are trying to figure out “why” you would want to use recursion - the simplest example I can think of is a binary tree traversal. Look up how to do it both with and without recursion and you’ll quickly see why recursion is a useful thing.,Agreeable_Hall458,2025-07-24 18:32:36,2,learnprogramming,t3_1m87lnx,False,
n524z95,"Making mistakes when faced with a number of choices is all part of learning to write code - as long as you learn from your mistakes. :) Sometimes you just have to try things out and see how the code looks. I have written code and felt ""that's not working"" (from a ""I'm happy with this"" point of view) and then either refactored it or rewritten it. Sometimes you have to write code that doesn't work to point you to the code that does. You get better at your initial stabs as you gain experience. But that is a crucial part of software development - you will often face having to choose from a number of different possible ways to do things, and having more experience helps to whittle down the possibilities. But it takes time to gain the experience, and making mistakes is part of it.And sometimes, the different possibilities don't really favor one over the other. Or which one you choose is dependent on the context more than the specifics of the code itself. There are no simplistic answers.In terms of recursion, I rarely use it. There are problems that are naturally recursive, and then there are those you could try to force recursion onto. But it rarely makes sense in the latter case, especially if you run the risk of blowing up your stack when the problem gets too large.With recursion, each time you recurse, you get a new context. Every time you make a call into the function, that function has a new ""environment"" that can differ from the caller's one. Recursion really works well when each of those contexts is different, and you need to return to a previous context at some point - and if you weren't using recursion, you'd have to track the state yourself, often as a queue or manual stack.Traversing a tree, for example, is a good case for recursion, since as you're processing the children, you need to remember where you were, so that you can go back up when you reach a leaf. A recursive solution handles that for you automatically, as exiting the function takes you back to the previous context. The recursive process automatically tracks the different transitions down and back up the tree.In the case you have above, though, where you're just building a list, you don't gain much from recursion over iteration, as you don't really have anything to ""remember"" at each step. The context changes, but you're not really *coming back* to anything after that can't be handled by simple variables (no stack necessary).I'd say: hang in there and keep working through problems. It will get easier, as you'll develop instincts for when to apply different techniques. And the best way to know which techniques to use is by having tried the wrong ones - making mistake. It's part of the process, so don't be afraid of goofing things up. Right now, writing software is your own sandbox. Experiment. Play. See what works and what doesn't. Fortunately, there's no harm in smashing a sand castle design that didn't work out and trying a different one.",jaynabonne,2025-07-25 09:56:19,2,learnprogramming,t3_1m87lnx,False,
n4x3v7z,"Whenever you see a function calls itself, you just **trust** the recursive call to do the right thing. Based on that trust, you think what you need to do at the current step. That's the magic of recursion.As for your function `add_numbers(n)`, it's supposed to make a list `[1, 2, 3, ..., n]`, so you just trust that `add_numbers(n - 1)` will make a list `[1, 2, 3, ..., n - 1]`, and you just need to append `n` to that list and done.",a3th3rus,2025-07-24 15:48:22,1,learnprogramming,t3_1m87lnx,False,
n4xa3hh,Write a function to count all the files in a directory and all its sub directories where you don't know how many level of sub directories there are.,0x14f,2025-07-24 16:16:51,1,learnprogramming,t3_1m87lnx,False,
n4xf5et,"Recursion shows up a lot more in DSA practice than in applied software development, but it's still important to understand how it works. It can be really helpful to walk through some toy problems on paper to understand how each step the action is being repeated on a smaller sub-problem until the base case is reached. Once that idea becomes more clear it becomes the foundation for a lot of fun algorithms problems like sorting or searching trees.",bubly-drinker,2025-07-24 16:40:07,1,learnprogramming,t3_1m87lnx,False,
n4xjmyh,"Think of recursion same as loop, but different.At first try rewriting all loops with recursion and your brain will start picking up pattern about recursion.Also you can look at what tail recursion is.",optical002,2025-07-24 17:00:18,1,learnprogramming,t3_1m87lnx,False,
n4ybkux,"The only reason recursion is made out to be such a big deal is because of the concepts it forces you to think about. Things like scope, return values, arguments, the call stack. I tried really hard to ""get it"" when I first started out, and once it clicked, I used it for everything. I didn't know you could also solve things iteratively.",ExtensionBreath1262,2025-07-24 19:08:49,1,learnprogramming,t3_1m87lnx,False,
n5v5icz,">Is there anything wrong with spending 5+ hours a day working on my project if I enjoy doing it?Why would there be? Is there anything more urgent you're not doing instead? You won't regret doing things you enjoyed, unless you used that as a way of **avoiding** doing things you needed to do. If it will help you in your career (I think only you can judge that), so much the better.",numeralbug,2025-07-29 21:08:08,15,learnprogramming,t3_1mcnhx8,False,
n5v6blk,"There's nothing wrong with spending time doing the things you enjoy.  The only exception is if you are spending time doing something at the cost of your health or well-being or that of others.But if you're enjoying yourself and not hurting anyone, the topic doesn't matter.  Go enjoy life.",Luigi-Was-Right,2025-07-29 21:12:03,8,learnprogramming,t3_1mcnhx8,False,
n5v7tlf,"No dude this is literally ideal. I have a very similar temperament and spent a good chunk of my final year building certain AI projects that I thought were cool. I don’t regret a second of it. I ended up getting a job working with the same technology and so now I get paid to play with the technology I was happily doing for fun in my free time. Employer loves my passion for the tech, and those projects let me speak about these things in interviews very well. In my second year summer, I built an Arduino project that would present you with a math problem and you had to put in the answer using binary (with twos complement for negative numbers) by clicking physical buttons. It tracked the time spent on the answers, and I timed myself doing it sober for about 20 minutes, ingested a shit ton of cannabis and did it again. Then I spent the next few days analyzing the difference in performance using Python. I can never bring that up in an interview but I genuinely enjoyed doing it. I don’t regret it. Overall my point is you’ll never regret having fun. I don’t regret the time I spend playing video games, and I definitely don’t regret any time spent that has practical benefits to me. You should be psyched that you’re enjoying this stuff. You have the “knack”.",ProfessionalShop9137,2025-07-29 21:19:17,2,learnprogramming,t3_1mcnhx8,False,
n5v8d3f,I totally relate to your goals! I also want to contribute to groundbreaking research but at the intersection of computer science and either biology or neuroscience. I love learning about these topics! Although it can be really overwhelming. I’m excited to see where the knowledge will take me and what doors it will open. I get a sense of fulfillment when I’m coding and when I think about the things that can be done in the field. Just wanted to let you know you’re not alone in feeling this way.,Ojaura_,2025-07-29 21:21:56,2,learnprogramming,t3_1mcnhx8,False,
n5vlqsc,For my AI i spent over 3 years and averaged like 2 hours a day not including weekends. Its totally normal to love something and work on it.,Solar_Flare_00,2025-07-29 22:30:18,1,learnprogramming,t3_1mcnhx8,False,
n5vszky,"It's fine to spend as much time doing whatever you want. I spend an absurd amount of time programming. However, finding a balance in your life is important too. If you are so focused that you are neglecting your health or having a fulfilling life with family, friends, and meaningful relationships... you might indeed regret it later in life. As someone quite a bit older... I would give anything for a few more memories earlier in my life with my father ... and I could care less about all the late nights I spent hacking.",cgoldberg,2025-07-29 23:09:07,1,learnprogramming,t3_1mcnhx8,False,
n5v72r8,What the heck is this,cev4,2025-07-29 21:15:41,1,learnprogramming,t3_1mcnhx8,False,
n5vecu7,"Haha I love your arduino project. I am psyched that I enjoy it, I feel very lucky that one day I'll be able to get paid to do what I love",redradagon,2025-07-29 21:51:54,2,learnprogramming,t1_n5v7tlf,True,
n5vefqi,"I appreciate you sharing, thank you!",redradagon,2025-07-29 21:52:19,2,learnprogramming,t1_n5v8d3f,True,
n5ko6na,"Just keep going and focus on learning the fundamentals of programming instead of just ""learning Java"". I can relate to your feelings about feeling a bit lost and frustrated from my own time leaning but I can assure you that if you keep studying to build an understanding you will keep improving. Right now you're stuck with all these separate pieces of a puzzle and you're finding it hard to see how they all fit. At times you will manage to fit some together and as you connect more pieces it will get easier and easier to find new connections. Focus on the fundamentals and try to have some sort of own project at the side that you can tinker with on your own when you feel like it.My own experience - I found it hard when I had gotten my degree to structure and design code. Like you I felt frustrated and a bit lost. We had very briefly talked about the concept of Clean Code during one of the courses without going in-depth at all so I ordered and read the book. I found it to be extremely helpful and taught me structure and a bunch of common patterns and idioms when writing code in a very straightforward and helpful manner.Lastly - if there was something that I wish the school had focused more on to prepare me and my fellow students for the real world, I'd wish we'd gotten more time to work with how online services talk with each other, what protocols do they use, how is information exchanged, request/response etc, as well as how you work with web/appservers etc. It was all very hand waved and the only server we had to setup was a light-weight Firebird local server to host our SQL-dbs.So, personal opinion - focus on learning the programming fundamentals, read Clean Code, and check out how apps communicate with each other and get som practice doing that. Good luck!",Klossar2000,2025-07-28 08:13:07,4,learnprogramming,t3_1mb8cvh,False,
n5lh1fe,"I get how tough it feels, especially with backlogs and everything piling up. Since you like backend and Java, try this simple path: Java basics → DSA/Leetcode → Spring Boot → build small backend projects. If you ever feel stuck, I found having a mentor or even short 1 on 1 sessions,platforms like Lrnkey are helpful, they can guide you without wasting time. You’ve already done a lot, just focus on one step at a time.",prazeros,2025-07-28 12:18:13,2,learnprogramming,t3_1mb8cvh,False,
n5ltkxr,"Really appreciate the help, klossar, you are right, i should focus on nailing the language fundamentals, Leetcode, and DSA before worrying about anything else. If I can’t write code, writing clean code is a bit of a stretch anyway. Thanks for the suggestions, I’m definitely bookmarking your advice.",mosahel,2025-07-28 13:32:34,2,learnprogramming,t1_n5ko6na,True,
n5lt1fc,"Java basics → DSA/Leetcode → Spring Boot → building small backend projects.I had a lot of scattered topics to connect, and this path binds everything together. I was about to follow a similar roadmap but i was confused, what first, what order etc. DSA first or Projects etc.",mosahel,2025-07-28 13:29:32,1,learnprogramming,t1_n5lh1fe,True,
n5mmtuv,"Just keep it steady, Java and DSA first, then Spring Boot and projects will feel way easier. You're on the right track.",prazeros,2025-07-28 15:56:19,2,learnprogramming,t1_n5lt1fc,False,
n5n479f,"Leetcode when ? >!coming from the world of react, it neither existed for me nor i ever tried !<",mosahel,2025-07-28 17:17:11,1,learnprogramming,t1_n5mmtuv,True,
n5k62ei,"variables cost close to nothing, if it makes your life easier just go for it. oftentimes programmers assign variables simply for readability, e.g. catList = GetCats(location, token); catFood = GetCatFood(banlist); catToys = GetCatToys(); MaintainCats(catList, catFood, catToys); instead of: MaintainCats(GetCats(location, token), GetCatFood(banlist), GetCatToys());oftentimes your compiler (if you're using a compiled language) changes your code if it detects it can do so without detrimental effects, like as an example removing the variable declarations and using alternative 2. this way you get the best of two worlds: code that's easier to read that also becomes better automatically as it is deployed.also there's a saying in programming:premature optimisation is the root of all evildon't worry so much about performance, solve the problem first and if there's performance issues with your solution, go on to solve that.",scandii,2025-07-28 05:24:41,35,learnprogramming,t3_1mb7lsi,False,
n5k9nac,"IMO, always *readability and maintainability* over *brevity*.If it makes the code clearer, easier to understand, easier to maintain, use multiple variables. If it doesn't harm anything, a single variable can do the job.Looking at your example, I would change more in the `convert` function than in main. Your chained replace is more difficult to read (and later to maintain) than what happens in main.Also, sidenote, a word about your comments: your comments are basically meaningless, especially the ones in `main` as they tell *what* the code is supposed to do - this is clear from the code alone and doesn't need a comment. Comments should mainly be used to tell *why* something was done in a certain (unexpected or uncommon) way. Your comments are just visual clutter without any additional value.",desrtfx,2025-07-28 05:56:25,9,learnprogramming,t3_1mb7lsi,False,
n5kd4d6,"Your Solution 1 actually has two variables, effectively. Do you see what they are?I personally find that:- Variables are often a matter of taste.- Good names can save you a lot of grief.- Variables that you assign an expression to, only to immediately return, provide little benefit over just retuning the expression directly.- Modifying a function argument by assignment is a bit subversive. Unless I'm cleaning up what I've been given or something, I rarely opt for it.- One-liners can be easier to read (up to a point!), but can be harder to debug.- Comments are best when they don't just repeat what the code is already telling you. Great comments are for tricky bits, and to explain the ""why"" behind the code.",SharkSymphony,2025-07-28 06:28:13,2,learnprogramming,t3_1mb7lsi,False,
n5kb8er,"It is relatively easy to write code that the computer understands. The computer doesn't really care about how many variables you use.It is much more tricky to write code other humans can understand. This doesn't really matter in this toy problem, but becomes quite important in larger or longer-term projects.For humans, giving names to things matters. It can be worth pulling outoart of a computation and assigning it to a variable *just to give it a name*. In this sense, variable names and function names serve a similar purpose to comments, but names are easier to keep up to date as the code evolves.Here is how I as a very experienced programmer would refactor that code if this were a production problem (untested): import re import sys EMOTICONS_TO_EMOJIS = { "":)"": "":slightly_smiling_face:"", "":("": "":slightly_frowning_face:"", } EMOTICONS_PATTERN = re.compile(""|"".join(re.escape(e) for e in EMOTICONS_TO_EMOJIS) def _emojify(text: str) -> str: # see https://stackoverflow.com/a/2400577 return EMOTICONS_PATTERN.sub( lambda m: EMOTICONS_TO_EMOJIS[m[0]], text, ) def main(): for line in sys.stdin: print(_emojify(line)) if __name__ == ""__main__"": main()There are a couple of fundamental differences that you might find distracting – using a replacement table instead of `str.replace()`, or transforming all input instead of prompting for a single line. The regex related stuff is a fixed pattern for applying multiple replacements to the same string.But for the purpose of this discussion important observations are:* I think `_emojify()` is a better name than `convert()`. Converting *what*?* I decided against introducing additional local variables. They don't seem to add anything. In particular, naming a value just to immediately return it doesn't tend to provide much useful information to readers.* No comments like ""get input"". Comments are useful for providing information that's not visible in the code. If an `input()` function is called, I can already see that we're obtaining input. The thing that would benefit from a more detailed comment in my version would be the regex stuff, as this is highly non-obvious for people who don't already know this pattern. Unfortunately, this pattern has no name, but it has a canonical Stack Overflow answer.",latkde,2025-07-28 06:10:46,2,learnprogramming,t3_1mb7lsi,False,
n5kg0tr,"Do not combine variable unless you explicitly named the variable as combined. For example, when you compute changes in input latency, you need to make sure the time and latency are separate values, not combining them and calling that relativeTime. It is a mess, because relative time is not time, it is time with singal latency, amd singal latency is not time. Thus, calling it relative time is misleading.",BoBoBearDev,2025-07-28 06:54:43,1,learnprogramming,t3_1mb7lsi,False,
n5kjnjt,"I know Python is a bad example just because of how bloated its variable size is, but take for instance one float. You know how much memory it uses? At maximum, 24 bytes of RAM. Your computer probably has around 60-70% out of 1,6x10^10 bytes of disposable RAM. Don't worry, single variables do not matter.If there's three billions of them though...",memesdotpng,2025-07-28 07:28:58,1,learnprogramming,t3_1mb7lsi,False,
n5kp3xr,"There is no need to limit the number of variables - I know that many editors try and ""help"" you, by suggesting that you are creating redundant variables, but it can often be helpful to the reader if you create a variable, even if it is only for a single line.Changing the value of function parameters as solution 1 does, can be a bad idea - especially if the function grows larger, and you have to keep track of whether it was the original input, or the modified - so it is an improvement to create the temporary `converted_input` in solution 2.Variables document what the values are supposed to represent - when you have a `converted_input` variable as in your solution 2, it tells the reader that the input is converted, and that is what the function returns. The function could just be: def convert(user_input): return user_input.replace("":)"", "":slightly_smiling_face:"").replace("":("", "":slightly_frowning_face:"")but then the reader would have to read all the code to understand what is being returned.Also, I personally prefer to always store the result in a variable before returning or printing it - it helps with debugging, because I can print or inspect the variable, use it in if-statements and so on. The only thing I don't like about your solution 2 is the naming of the variable `final_answer` \- it isn't an answer to anything, and it also doesn't seem very final. That name suggests that there are more processes. Maybe just `converted_user_input` \- that would also get rid of the comment just above, that says exactly the same!",peterlinddk,2025-07-28 08:22:13,1,learnprogramming,t3_1mb7lsi,False,
n5krflo,"I don't know what's up with some of these answers. If they don't make sense to you, don't worry, it isn't you.Reusing a variable name is OK here. What you have to watch out for is* ""scope"" - the contexts that a name lives in, within a module/function etc., and* functions that change values, vs. return values.In Python, when you assign a new value to the name ""user\_input"", that is scoped in this case to the whole function. In a larger function body, you might have loops etc., and you can negligently change a name that elsewhere you've been assuming represents its original value. It's OK here, it could be a really bad move in another context. You know, like old school guys like me will use 'i' for an index counter, and then use it again in another loop inside that, and that of course is not going to work right.For the change/return thing ... Somewhat miscategorized as such, because what we have here is a function return. But from an object method. The .replace.replace thing Harvard handed you here, you have to decide what you think about that. It's vaguely familiar as if imported from a ""functional programming"" model, and I think Python programmers commonly get some jollies from doing things like that. But it's a little less transparent what's going on in an OOP object.method model and I personally don't get the attraction. I might split that up into separate assignments to user\_input\*. Consider how that would relate to your question - would you want to reuse user\_input, or have a trail of new identifiers - user\_input, user\_input\_with\_happy, user\_input\_with\_happy\_and\_sad ...? Again here I'd reuse user\_input, but in another context the more specific names might be more informative.",DonnPT,2025-07-28 08:45:12,1,learnprogramming,t3_1mb7lsi,False,
n5ku5lm,I’d always keep the user input intact for something like this. It can be handy for debugging later. Like if you have multiple functions executing you can set test parameters or print to the terminal. You might think the issue is in the 5th or 6th function but see in the debugger that user_input was “z” going in when it should have been “x”Yes you might know that anyway but it’s nice to have 2 variables blatantly different to what you expected when your looking for bugs imo,Immereally,2025-07-28 09:11:59,1,learnprogramming,t3_1mb7lsi,False,
n5kwa8t,"The answer to the question in the title is “it depends”. Using more variables can improve readability. Sometimes, it hardly matters. In the given example, I would not use additional variables. The code is too simple, and once you have converted your input, you aren’t supposed to use the original variable anymore. But it still there, and the compiler won’t tell you if you’d write `print(user_input)` in the second example.",Abigail-ii,2025-07-28 09:32:43,1,learnprogramming,t3_1mb7lsi,False,
n5fnbai,I'm confused here... instead of a bachelor's in computer science you're thinking about... specializing in a computer science field? Isn't this still getting a computer science with a concentration?,Lotton,2025-07-27 14:03:07,10,learnprogramming,t3_1mamnvp,False,
n5g3dac,"Senior dev from the UK very familiar with UK academic system here.Your 'interesting academic route' isn't at all novel, in fact it's very common. I know plenty of people in the field who did CS and SWE, and similar. It's barely a specialisation really. You will most probably discover that Software Engineering and Cloud Computing undergrad degrees share some kind of ""common first year"" with straight Computer Science degrees and about 10 other ""degree pathways"" at your university, to ensure everyone has the basic knowledge required to move on. After that period, at the beginning of each year, you'll get asked to choose some modules in addition to the core modules totalling the credits for the year. This is the ""specialisation"" aspect. Different degree pathways are just different module choices each subsequent year, which is why many universities allow you to switch between degrees before you get to modules that are only available on certain pathways (essentially change your degree title and pick other modules).Whether or not you will be ahead or behind your peers depends not solely on your degree pathway, but also on how well the *contents* (what you study) aligns with what you would like to do for work. You don't mention this (even though it should be the biggest factor in your decision) but assuming you want to be a Software Engineer, neither CS nor SWE will give you a large advantage over the other, and the module choices available are likely to be very similar. I've never personally met a Software Engineer with a Cloud Computing degree, but this doesn't mean much, as much of the content is likely to be very relevant.You won't save any time, they're the same length. Feel free to skip any work experience years if you're confident in your ability to land a job. Use your best judgement.Note also that employers rarely care deeply about the exact degree title. ""Computer Science or similar relevant degree"" is common to see on job ads. They do often (not always) care that you get a 2:1/2:2 or above. Nobody regards 3rd well. I'll add from personal experience that I've had certain professional opportunities that were only open to people with 1st at undergrad, a full decade *after* getting the degree. You don't know what the future holds so make the most of it. I'm glad I did and richer for it. If you look at how your university calculates your final classification there's often an alternative formula that counts your first year marks (they award you the best mark using all formulas typically), so don't believe any nonsense like ""first year doesn't count"" etc. It might, depending on specifics.Edit to add: **A-levels are not 'instead of' a degree.** **No employer is going to pay much attention to your A-levels alone, and having an undergrad degree is preferred but not a hard requirement, to directly answer the title question.** You just need to take the A-levels that meet the requirements for university courses you're looking at. The requirements are listed on their sites. They usually either don't care about specific subjects, or list one subject they require you to have studied at A-level, possibly with grade requirements.",HashDefTrueFalse,2025-07-27 15:27:35,4,learnprogramming,t3_1mamnvp,False,
n5fnmw7,"Seems okay, not bad but not particularly either.AI and Cryptography are huge topic each, so I doubt you will see more than an introduction to them.Even if you choose a pure software development formation, you will have unrelated course (or more correctly ""not directly related"") like networking, system administration, project management, ...In my university, we all had a course a the legal aspects like who is at fault in X situation and what are the consequences.Whatever you choose, you will most likely have the basic CS knowledge of the main fields and just tiny bit more in your own field.",divad1196,2025-07-27 14:04:53,2,learnprogramming,t3_1mamnvp,False,
n5fotl1,"I did A levels but didn’t do A level computer science, and it may not go completely in depth about software engineering or even touch cloud computing much, although it might have a bit of theory. It’ll be a good start though to get into programming. I personally did maths, physics, and information technology (IT), and so far A level IT has been a text book subject I still refer to in my third year of uni, as it goes into depth about a lot of theoretical stuff beyond just programming. Math is a great help as well, although I don’t know how much of it is really in software engineering or cloud computing, but it’s a definite boost.",Advanced-Theme144,2025-07-27 14:11:27,1,learnprogramming,t3_1mamnvp,False,
n5fu7ij,Where do you live? In my country A level is not well-known as Bachelor's degree so the HR may disregard it.,No_Record_60,2025-07-27 14:40:11,1,learnprogramming,t3_1mamnvp,False,
n5fv5mr,"I essentially did this. In the US, not sure where you are, you can get an Associates Degree in two years from a community college that are usually pretty specialized. Mine is in computer programming.Now I think this works best if you have the aptitude in the field and people skills to pull off being the prodigy new employee. I won’t lie, I was exactly this and I have hired others where I recognized the same.COBOL programmer, systems analyst, DBA, project manager, development manager and CIO. It can work for you with skill and attitude!Good luck in your future in IT!",TimeComplaint7087,2025-07-27 14:45:09,1,learnprogramming,t3_1mamnvp,False,
n5fz9rj,"No, a levels are what you do before undergrad and don’t really mean anything except for undergrad entry reqs especially if you are going to do a later stage version during undergrad The a level won’t change anything, a comp sci vs a software engineering undergrad are all identical to employersWhat matters is internships and applicable projects and whether you have a referral/ target school etc",VokN,2025-07-27 15:06:39,1,learnprogramming,t3_1mamnvp,False,
n5g0pyl,"Assuming you’re in the UK, I would look at degree apprenticeships. Paid experience + learning which leads to an equivalent uni degree.",Fuarkistani,2025-07-27 15:14:09,1,learnprogramming,t3_1mamnvp,False,
n5g2atj,"i would strongly discourage this as someone who's done A level CS and is now studying at uni. You will be behind the curve. Go to uni (preferably a high ranking one with some prestige), work hard in doing your own projects and searching for internships and you'll most likely do better than if you were to do what you've described",sigmagoonsixtynine,2025-07-27 15:22:11,1,learnprogramming,t3_1mamnvp,False,
n5gbzj1,That would be a bad idea. A certificate of Software Engineering or Cloud Computing will narrow the jobs you can apply for. You won’t be considered for higher paying positions. Don’t try to save time. One of the things the an employer learns from the completion of a Bachelor’s degree is that you can dedicate yourself to a difficult task and see it through.,e430doug,2025-07-27 16:10:13,1,learnprogramming,t3_1mamnvp,False,
n53gezc,"Your brain forgets things it doesn’t use. That is normal. Intelligence is not the same as mental speed. You just may need to work longer hours to compensate for slower speed.No one can remember it all, what you should be able to do instead is to know what to look up to refresh your memory as needed.",bwildered_mind,2025-07-25 14:49:16,12,learnprogramming,t3_1m90xmt,False,
n53fwh0,Have a degree in CS and been doing this for 15 years now and I probably couldn't describe half of the things on there anymore.,InfectedShadow,2025-07-25 14:46:52,5,learnprogramming,t3_1m90xmt,False,
n53i9wi,"I like that chart, going through it gives me an idea of what gaps I have and things to brush up on, while also being a bit of a confidence boost in how much if it I feel pretty decent in understanding",SinlessMirror,2025-07-25 14:57:57,2,learnprogramming,t3_1m90xmt,False,
n53ihtm,"the world is filled with successful idiots OP so even if you aren't the sharpest, I have good news, it doesn't appear to really matter in the long run",LALLANAAAAAA,2025-07-25 14:58:58,2,learnprogramming,t3_1m90xmt,False,
n53ifpj,"You're being very critical for yourself for something that is really normal. First of all you're not ""too stupid"" or slow for this, cut that shit out. Second of all becoming a good programmer is all about pattern recognition (at least in my opinion). You're gonna have to keep at it for a while longer for things to actually solidify. Moreover, If you don't use something, you'll forget it because your brain trims it out. When the time comes for you to use a concept you can simply read up on it to refresh your memory and use what you need. You say you hit a plateau doing LeetCode questions which is definitely to be expected, learning is a bell curve and as difficulty increases the rate at which you progress decreases. This is a good sign that you're at the end of that bell curve, and that you should keep at it even if progress feels minimal. Build pattern recognition.Do you really think senior engineers or even Comp Sci professors actually remember everything they read? Absolutely not. You are doing perfectly fine.",obnoxious-rat717,2025-07-25 14:58:42,1,learnprogramming,t3_1m90xmt,False,
n53kzdi,"My man don't feel bad. I felt the same way. For me learning python seemed to be a momentous task likely because there are so many options. I just seemed to open. First, memorization plays a part in this, which is truly cemented by repetition. Think of Michael Jordan or Kobe Bryant. Their greatness was born in the gym with repetition. Find a process that works for you and hammer it in with repetition. This way, when time comes for you to perform it's automatic and requires little thought. Second, create a cheat sheet for you to easily reference hard to remember concepts. I would suggest you physically create this sheet to help solidify terms and concepts and/or but it in a spreadsheet for quick referencing. Once you feel you have a concept, command, and/or process down, remove or archive. Third, pace yourself. This is your race. Your race is different from mine and everyone else's. Comparison is a thief of joy. You should be disciplined and motivated in your race to reach your goals, but don't compare my race to yours. I may have jet boots compared to your flip flops , but I may have a lead backpack on while you're wearing a linen shirt. Finally, be honest with yourself. Our profession isn't for everyone. This portion of our profession may not be for you. And that's alright. Find what works for you. Also just because it's difficult doesn't mean it's not for you. It just means you have to be determined.",UltimateBravo999,2025-07-25 15:10:37,1,learnprogramming,t3_1m90xmt,False,
n54z11f,"If forgetting stuff disqualifies you from being a programmer, then Stack Overflow would’ve gone bankrupt years ago.",alpinebuzz,2025-07-25 19:04:41,1,learnprogramming,t3_1m90xmt,False,
n5be1b1,"You can improve your speed and memory with a good diet, better sleep, and most important, exercise. If you want to feel mentally sharp with the added benefit of increased BDNF ([Brain-derived neurotrophic factor](https://en.wikipedia.org/wiki/Brain-derived_neurotrophic_factor)), start regularly lifting heavy weights. If you're already doing this, go real heavy on squats and maybe look into your diet and sleep. Creatine is the number one supplement that's helped improve my memory, and magnesium glycinate follows right behind it. Drink tons of water, keep programming, and remember if you don't use it, you lose it.You got this.",UntoldUnfolding,2025-07-26 19:42:03,1,learnprogramming,t3_1m90xmt,False,
n5d8hm0,\> I  can barely stand to study for an hour a day and even then I hardly retain anything.Sounds like you need to work on the motivation... As for retaining - it's super hard to retain knowledge unless you apply it. Think of some fun project to do and use whatever you are learning there...,Great_Guidance_8448,2025-07-27 02:19:34,1,learnprogramming,t3_1m90xmt,False,
n5bdbig,This.,UntoldUnfolding,2025-07-26 19:38:04,1,learnprogramming,t1_n53gezc,False,
n5sejot,"I really don't know where you people find AIs that spit out ""entire apps"" and are such an increase in productivity. With all respect, is your code craftsmanship meant to be limited to cookie cutter CRUD apps? Cause last I checked (and I check regularly, and with the latest available models), AI falls apart completely with any more complex, custom logic or any bespoke code, which is also where the craftsmanship would shine anyway.I have no problem to use AI for boilerplate, derivative code that's nothing more but busywork, and for parts that require any finesse whatsoever, AI is just a waste of time anyway. AI is simple - the more predictable the next line is, the better it will guess it. Any actually interesting code is not easy to guess, that's why AI based on the current technology fails and will fail by definition.",voyti,2025-07-29 13:21:09,25,learnprogramming,t3_1mcatjd,False,
n5tcbtu,"Grain of salt and all that, but I've been a mediocre programmer since 2015, and having to debug and optimize AI slop the last few months is becoming so increasingly tedious, I'm actually dedicating a part of my day, everyday to improving my programming skills so that I just stop depending on AI altogether.",The_Barkness,2025-07-29 16:05:51,6,learnprogramming,t3_1mcatjd,False,
n5tzpon,"It's not about copying and pasting mindlessly. I use it as a tool to generate boilerplate code, which I always review, understand, and tweak as needed. We should be problem solvers, not just code-writing machines.",framorvaz,2025-07-29 17:52:35,3,learnprogramming,t3_1mcatjd,False,
n5ugqg4,"""Back in the day writing code felt like art."" When was this?""The craftsmanship of coding feels like it is dying"" You can still def do this since AI isn't doing quality craftsmanship.What apps are you generating with ease? What job does even require you to do this. Most of the time you're dealing with much older and established code that AI is defnitely isn't able to handle without some guidance. Half of the time it just decides to do style changes (unprompted) on files I didn't even know we had. Use it to help you find things, suggest things etc but you do the actual coding. You have articles like [https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/](https://metr.org/blog/2025-07-10-early-2025-ai-experienced-os-dev-study/) so you definitely aren't faster just blindly using AI",MrKnives,2025-07-29 19:11:22,3,learnprogramming,t3_1mcatjd,False,
n5utooc,"AI is great for 'boilerplate' code but after that the programmer uses his/hers skills to code the more complex logic and functionality of the program. The programmer will choose what data structures to use, what type of arguments to pass to functions (value or reference). The programmer will debug as well as optimize the code and more. How should the program flow, programmer. Creative ideas, programmer.",mpw-linux,2025-07-29 20:13:00,3,learnprogramming,t3_1mcatjd,False,
n5scqna,"> The craftsmanship of coding feels like it is dying. I used to spend hours reading documentation, slowly building something through rigorous testing and tweaking, enjoying every part of the process. Now I just prompt and paste.Thw only thing that has changed is you. If you hate it stop.",Digital-Chupacabra,2025-07-29 13:11:10,5,learnprogramming,t3_1mcatjd,False,
n5vw7qy,"the only programmers losing their job to AI are the ones who have offloaded their skills to it.Even if you need to use AI as a company policy, you should be using your expertise to optimize it.youre losing skill and passion by offloading your work. Genuinely stop using AI, especially *how* you are using it because you haven't been programming by the sounds of it.If I just showed up for 8 hours a day but didn't work, I'd probably look for some other way to actually contribute what I have to offer - which sounds like where you're at.**Im bias as all hell against LLMs",IdiotInIT,2025-07-29 23:26:29,2,learnprogramming,t3_1mcatjd,False,
n5ueg6x,You can instead of coding by your hands learn how to prompt ai then the answer is totally dependent on your brain and Creativity which gives you the emotions like before.But at the End I'm agree with you. Just copy and paste Without criticism is very boring and unpleasant.,AparsaSh-Dev,2025-07-29 19:00:39,1,learnprogramming,t3_1mcatjd,False,
n5wczxe,"Can you tell me what AI develops entire apps? So I can speed up my productivity too, you know.I tried using AIs to handle basic tasks for me when everyone started saying that AI would ruin programmers' lives and produce outdated, broken, and bug-ridden code. Yeah, it might be faster because some parts are already done and just need tweaking, but that works for small scripts since they are simple and easy to track and fix. However, it's impossible for an AI to create a full app exactly as you want because you can't specify all the details. There will always be things you do through pure automation simply because you're used to coding.Last time I asked an AI to write a server.js to run express, and it just didn’t work. I had to write everything again lol (by writing everything again, I mean going to my GitHub and copying and pasting my last server.js, which was also copy-pasted from my previous project).So no, AI does not destroy programming. There are no AI writing apps on demand, you could use something like Copilot, but it won't make a big difference unless you're doing repetitive coding. And if you are doing that, you're probably coding in the wrong way.People also talk about AI replacing artists, but artists are still working because AI can do some things to represent your ideas. However, it will never capture everything the way you want because your ideas need a brain with empathy to understand what you truly mean and what you want to do it as you wish. An AI can only replicate what you do, and all the details you don't provide, the AI will just do whatever it wants.You can tell an artist, ""I want my character to be like Jhon Wick,"" and they will take your ideas and adapt them to fit Jhon Wick vibes, while an AI will probably do Jhon Wick and just add some wonky details on top of it.",Inmortia,2025-07-30 01:01:10,1,learnprogramming,t3_1mcatjd,False,
n5wh9pi,"Retired.. so I’m just doing projects for fun. No interest in AI. The current project is simply gathering stats from my stratum 1 time server and pushing stats to rrd. I have one version in C, one in GO, rust is next, then possibly groovy. i would hate to be in a corporate job pushing AI on me.",ZogemWho,2025-07-30 01:25:51,1,learnprogramming,t3_1mcatjd,False,
n5rzt0p,Do you have the math and statistical background?,ArgoPanoptes,2025-07-29 11:52:29,3,learnprogramming,t3_1mc9ajp,False,
n5s2rw3,"Starting with Excel, SQL, and Tableau is good. These are core tools for most data analyst roles and as you get more comfortable, you should start adding things like basic statistics (which you're already touching on with the Coursera math course), and eventually some Python or R if you want to expand your scope. But focus on mastering the basics first. Your goal of building projects is key. Whether it's analyzing publicly available datasets, visualizing something you're personally interested in, or even cleaning and presenting data from a small business (if you can find one willing to let you play with their data), those projects will help you learn more deeply and give you something tangible to show potential clients or employers. It's possible to land jobs or freelance gigs within a year, especially when you can show consistent learning, project work, and a clear understanding of the fundamentals. Your lack of a tech or math background isn’t a dealbreaker. What matters most is how you build your practical skills and communicate them.",Content-Ad3653,2025-07-29 12:11:51,2,learnprogramming,t3_1mc9ajp,False,
n5s07lr,"I do not. I'm currently doing a Data Science Math Skills course on Coursera while I'm waiting for my schedule to clear in Sep. So far, so good.",cheesemelikenow88,2025-07-29 11:55:09,1,learnprogramming,t1_n5rzt0p,True,
n5s33ja,This is very encouraging. Thank you!,cheesemelikenow88,2025-07-29 12:13:55,1,learnprogramming,t1_n5s2rw3,True,
n5s7751,"Without a degree in CS or Math, it will be hard to land a job and have a good career in this field.",ArgoPanoptes,2025-07-29 12:39:15,4,learnprogramming,t1_n5s07lr,False,
n5rbibq,"This game is pretty cool, very basic. https://sqlpd.com/",President0fEarth,2025-07-29 08:22:36,3,learnprogramming,t3_1mc5tb5,False,
n5rl4ul,You could try some of the pentesting platform like hackthebox or tryhackme pretty sure they have SQL injection problems,IHeartLife,2025-07-29 09:55:31,3,learnprogramming,t3_1mc5tb5,False,
n5rfi2c,"Figuring things on your own can be a bit tough especially when just starting and so maybe you could find a tutor on platforms like Lrnkey to take you through a few examples with someone step by step,that could make a huge difference in understanding what you're doing",prazeros,2025-07-29 09:01:37,1,learnprogramming,t3_1mc5tb5,False,
n5rbkdp,"Oh, I didn’t read that right. Sorry. That’s more for learning SQL itself, my bad",President0fEarth,2025-07-29 08:23:10,2,learnprogramming,t1_n5rbibq,False,
n5rmwd7,That's just what I wanted to suggest as well.,desrtfx,2025-07-29 10:11:38,1,learnprogramming,t1_n5rl4ul,False,
n5rbqpi,"Nah thats ok, It looks pretty cool wish i had that when i was first starting out. Thank you nevertheless",mindvenderrearender,2025-07-29 08:24:53,2,learnprogramming,t1_n5rbkdp,True,
n5pwn98,"You are definitely doing it the way how it is presented. It's alright if it's taking you longer than usual because it is supposed to be that way. I would highly suggest though that after you had finished a lecture on CS50, and written them down like you've said. try to make a simple project based on the stuffs that the instructor had thaught to you. You could use A.I to copy the link and generate some simple projects according to the material and just attempt to make that on your own.",Lopez_Muelbs,2025-07-29 01:49:05,3,learnprogramming,t3_1mbyp00,False,
n5r4hsv,"Hey, you’re actually on the right track — seriously. CS50 is no joke, especially for beginners, and the fact that you’re not just watching but actively coding along *and* asking questions shows you're way ahead of just “passive learning.”Yes, it *will* feel slow at first. You’re not nitpicking — you’re trying to build actual understanding, and that takes time. It’s 100% normal to not remember everything or to need to look things up multiple times. Everyone starts that way.If you want to level up a bit without getting overwhelmed, here are a few simple tips:* **Keep a small notes doc** (which you’re already doing — big W)* **After each week**, try to build a *tiny* project using what you learned. Doesn’t need to be fancy — even a simple calculator or guessing game helps things stick.* **Don’t worry about memorizing syntax.** Focus on *what* each thing does and *why* it’s being used.* After a section, try explaining the concept to someone else (or even just to yourself out loud). It’s wild how much it helps.You're doing the hardest part right now: showing up consistently. Trust me, this isn’t wasted time — it’s the foundation that makes future stuff way easier to grasp. You're doing great. Just keep going.",Codeyoung_global,2025-07-29 07:15:04,3,learnprogramming,t3_1mbyp00,False,
n5pwq7n,"That's totally fine and is how the learning process is. Over time, and with repetition, the concepts will start becoming second nature. I also use ai to help me understand code, and will have it create problems that incorporate concepts I am learning, to help solidify them.",FCBitb,2025-07-29 01:49:33,1,learnprogramming,t3_1mbyp00,False,
n5pyknw,"You’re doing fine, learning to code takes time in the beginning. You have a solid foundation, anything thats unclear you ask an llm to explain it to you, you follow along with a course and try to understand what happens.Needing to look things up or use a reference is completely normal, especially in week 1. What matters most is that you’re making am effort to understand what’s happening.My advice is, use those concepts you’re learning and try to apply them in small projects. If CS50 provides assignments, try to do those with the concepts you’re learning.",ScaredStorm,2025-07-29 02:00:14,1,learnprogramming,t3_1mbyp00,False,
n5pzcd2,Your process looks fine—no issues here! Knowing how to use it is more important than remembering it.,Forward_Walk682,2025-07-29 02:04:43,1,learnprogramming,t3_1mbyp00,False,
n5qwabn,"I'm self taught/visual learner - i figured out that if I try to follow along coding while watching a course/tutorial - I tend to not fully grasp what I'm trying to learn - it becomes more that i'm just trying to recall syntax - it's almost like a typing test for WPM. my eyes/brain are looking ahead, but my fingers are following behind - i'm never focused on the actual _thing_And so basically when i want to learn something new i just kinda watch & listen, and I end up connecting the dots a lot better. I watch it however many times i need to, I watch other related videos, I look up things i need a little more detail on. Its good cuz, I know the thing that I want to code, isn't exactly the same as whats being taught to me in the video. At the end i've gathered bits and pieces of what I like from each piece of content.and then, with AI, i describe my understanding of that thing, and i have it just confirm my understanding. this leads to a lot of back and forth with AI because now i'm able to discuss the topic with it, adjust my understanding, correct the AI where it sounds wrong, and by the end of it, even if its not fully fledged out - i have a planonce i start coding, i have a stronger sense of the separate pieces of the puzzle that i need to build, and it becomes way easier to connect them all together",besseddrest,2025-07-29 05:59:36,1,learnprogramming,t3_1mbyp00,False,
n5py85f,>You could use A.I to copy the link and generate some simple projects according to the material and just attempt to make that on your own.Sorry i didnt quite get this. Do you mean i should copy the link of the lecture and paste it in to an ai and generate project ideas that are related to the lecture?,FirmAssociation367,2025-07-29 01:58:12,2,learnprogramming,t1_n5pwn98,True,
n5rt0ne,"Thank u so much, this just gave me more motivation!",FirmAssociation367,2025-07-29 11:02:51,1,learnprogramming,t1_n5r4hsv,True,
n5pxxzw,"Thanks for this. I'd like to ask how should I use AI as a tool to help ne learn. I don't want to rely on AI so much that it solves the problem by itself and id gaslight myself that I technically did that lol. People say dont rely on ai too much, other people say to embrace ai. So where do i draw the line?",FirmAssociation367,2025-07-29 01:56:33,1,learnprogramming,t1_n5pwq7n,True,
n5uj7e6,So true cause ive been studying for 4 hours today and im still at the 30 minutes mark lol,FirmAssociation367,2025-07-29 19:23:05,1,learnprogramming,t1_n5pyknw,True,
n5pgeyd,"That's kind of how it is in a working environment, maybe you swap trello for Jira or Google docs with Confluence, but same idea. I think it's important to link everything together. Say you commit something in git, link that to your trello/Jira task. In that task, like all relevant information, such as documentation or a link to a slack thread. Then when you look at code, you can do a git blame and see which commit introduced that code, then that commit message links to the ticket for the change, that ticket will link to the design specs, requirements, and slack discussions around it.There's a ton of strategies you can use, some may be overkill for your situation though. Product managers and scrum masters have roles dedicated to organizing work and projects. My company requires all features to have technical designs approved by a principal engineer and committed to a GitHub repository before we work on it, and that GitHub repository is the source of truth for documentation around how things should work.",Zesher_,2025-07-29 00:15:40,2,learnprogramming,t3_1mbwjs3,False,
n5pgmp9,"Good project management is the answer, but that also ties into following best practices when coding.Different teams have different workflows, but it’s common to have information scattered across platforms. That’s fine—you just have to be consistent. If bug reports go in Jira or Trello, then make sure they’re not just being left in a Slack channel to wither away.You’ll figure out what works for you and your team overtime. Personally, my team (game design) uses Discord for general communication; Jira for tracking tasks, issues, and documentation; and GitHub for version control.",dylantrain2014,2025-07-29 00:16:54,1,learnprogramming,t3_1mbwjs3,False,
n5php4v,"Yup unfortunately this is pretty much just the way it is. Most tools are great at one thing and meh at the others, so you end up with a mishmash of tools that all do their one thing well but a bit of overlap between them.I think you end up just getting used to it.",RobBrit86,2025-07-29 00:23:00,1,learnprogramming,t3_1mbwjs3,False,
n5pzyfh,"*Scattered* suggests that pieces are spread around randomly. There’re not. If you kept all your work on sticky notes jumbled together in a large box, that would be difficult. But using systems to keep track of the various parts is the opposite of scattered — it’s *organized*. There’s some structure there to help you know where to find what you need.Now, just having systems doesn’t mean that they’re *good* systems. If your systems aren’t working well for you and your team, you should of course improve them. Perhaps you have too many different systems, or your systems aren’t easy to use. But an imperfect system is better than no system, so use what you have until you’re ready to switch to something better.Look for ways to make your systems work together better. If you fix a bug, for example, add a link to the bug’s Trello card to the commit message or pull request in GitHub, and add a link to the pull request or commit to the bug’s card. That lets you move easily from one system to the relevant into in another.",iOSCaleb,2025-07-29 02:08:17,1,learnprogramming,t3_1mbwjs3,False,
n591p58,"Learning things that are related to something that I already know is what motivates me to learn the most.Like if you already know HTML/CSS, it feels pretty cool to learn how to make it more interactive with JS. Then you might be interested in making the site more scalable with something like React and having the data persist, by learning how to set up a backend to store the data, etc.Check out [roadmap.sh](https://roadmap.sh/roadmaps), there you find various premade learning paths that can help you in the right direction.",Finer_Details,2025-07-26 11:53:42,2,learnprogramming,t3_1m9prwa,False,
n59luqj,"for me, i really needed projects to keep me engaged with my learning. two things i found really helpful related to that were:1) think small. smaller than whatever you just thought of! even smaller. there you go. completing things and being able to say, ""hey i did that!!!"" is a huge confidence buff.2) make them *fun*! youre not getting paid yet. and i know, society, but try to enjoy that! if could be tiny games - a word guesser, tic tac toe, the snake game, etc. it could be a little webpage that, idk, pulls a random quote from a movie you like. whatever it is, make it and show it to your friends and ask, ""what should i do next?"" then take whatever they say and return to point 1, and repeat!i found that doing really tiny fun things, and building up in complexity to solve problems as they came up, helped me stick to it. youll be constantly expanding your toolbox to get there, and will have concrete examples of problems you solved to reference later.",thereislightstill,2025-07-26 14:02:53,2,learnprogramming,t3_1m9prwa,False,
n59xnkh,"It’s normal. A lot of it will come back faster than you think once you start tinkering again. You’re not starting from zero, you’re just reloading.If I had to recommend one combo to get back in quickly:JavaScript + React + some simple backend like Firebase or Django.You can build cool stuff fast, and it’s great for resumes too.You got this man the fact that you’re even asking shows you’re serious.",itz_charlie01,2025-07-26 15:07:03,2,learnprogramming,t3_1m9prwa,False,
n58pzlk,"""programming"" is a very general term.what language ?what is your reason for learning programming ?",ninhaomah,2025-07-26 10:15:22,1,learnprogramming,t3_1m9prwa,False,
n58qel1,"I'm facing this very same problem, I started with python html and css, I'm currently watching bro code from YouTube and code chefs for practice, these resources have been recommended to me by several tech influencers so I thought I'd try them out",Left_Possession9489,2025-07-26 10:19:18,1,learnprogramming,t3_1m9prwa,False,
n594tw3,"start a project. A game, a website or some other stuff that comes in mind.",Chickfas,2025-07-26 12:15:50,1,learnprogramming,t3_1m9prwa,False,
n5ftch2,"Start with one small project that excites you - something fun, not perfect. The rust shakes off fast once you’re building again, and momentum beats memory every time.",alpinebuzz,2025-07-27 14:35:35,1,learnprogramming,t3_1m9prwa,False,
n58qa3l,"I don’t have a fixed reason yet. I just enjoy tech and want to explore different areas. I'm unsure which path to take web dev, app dev, cybersecurity, etc. Everything seems interesting.",Pretend_Importance62,2025-07-26 10:18:07,1,learnprogramming,t1_n58pzlk,True,
n58qdrz,then just pick 1 and start from scratch.,ninhaomah,2025-07-26 10:19:06,1,learnprogramming,t1_n58qa3l,False,
n58qgon,"Ok, Thanks!",Pretend_Importance62,2025-07-26 10:19:52,1,learnprogramming,t1_n58qdrz,True,
n5643et,Pick what you enjoy the most.It’s ok to switch occasionally too :),Rain-And-Coffee,2025-07-25 22:32:23,3,learnprogramming,t3_1m9cz5m,False,
n568z55,"What’s your goal with learning all this? If it’s just for fun, then switching whenever you want is totally fine!",Product_Teacher_5228,2025-07-25 22:59:51,2,learnprogramming,t3_1m9cz5m,False,
n56gyy7,"This is normal, happened to me. All I did was just switch between front-end development and data analysis until one day I said, ""you know what, building APIs and talking to databases is more fun"" and I made the switch to backend. Its fine if you dont know what to stick to at first, keep doing your thing and as you get exposure on each of them you'll begin to see what you like the most.Just the fact that you at least know that you like doing something is a good sign. Some people don't even know what to build, you at least have an idea of what you want to and like to build. I think the best way to not feel overwhelmed is for you to try and lay out and visualize the pros and cons of each field. So, why are you interested in web development? What do you not like? And so on, and that should help you narrow down what you like the most or at least focus on one thing for a while so you can really see what each path is about.",W_lFF,2025-07-25 23:44:53,1,learnprogramming,t3_1m9cz5m,False,
n58cc85,"Do it in a way that benefits your chances to find a jobGrab a roadmap and once you learn a technology, and want to move on, move to the next oneFrom what I see with your current stack I would learn SQL and therefore connect all those technologies and make a CRUD, a full stack applicationEither that or Node.js for the backend.So:SQL - Python (With Django or Flask) - HTML/CSS/JS (Possibly React too)OrSQL - Node.js (With Express) - HTML/CSS/JS (Possibly React too)Once you build something all the way from the database to the frontend your mind begins to understand how many websites and technologies work",The_Octagon_Dev,2025-07-26 08:00:22,1,learnprogramming,t3_1m9cz5m,False,
n5be3o1,"You’re not indecisive - you’re just multi-talented with commitment issues. :) Pick one thing, build something small, and finish it. Momentum is the best cure for overwhelm.",alpinebuzz,2025-07-26 19:42:24,1,learnprogramming,t3_1m9cz5m,False,
n5kxpq7,"Honestly, it's super common to feel pulled in a bunch of directions, especially with so many cool tech options out there. Maybe try picking one area and set a small project goal—see how you like it before switching.",FunnyInitial354,2025-07-28 09:46:19,1,learnprogramming,t3_1m9cz5m,False,
n5229i2,"Nobody cares about these certifications, the certificates that do matter are the ones from the cloud providers (AWS, Azur, GCP) or specific network/security/data.. ones.For development roles certifications are the least important.I only know that people like the quality of the IBM courses on coursera as a more structured course, if you're self-taught that may be a good middlepoint certification to get but do know only the ones named above are seen as valuable in the professional world.",Wingedchestnut,2025-07-25 09:31:15,8,learnprogramming,t3_1m8ujww,False,
n52n335,"freeCodeCamp’s updated curriculum is pretty good, but you probably shouldn’t be doing it for the certificates. The real reason to do it is to learn the material.",Snugglupagus,2025-07-25 12:12:56,5,learnprogramming,t3_1m8ujww,False,
n521q36,"Its Free, no?",rtalpade,2025-07-25 09:26:09,2,learnprogramming,t3_1m8ujww,False,
n52bqzq,"In my opinion, that curriculum is ok, but I feel like the learning curve is a bit steep, and there is too much going off on your own, as the course doesn't cover every single topic in detail. If you want a course that does that, I've made a book course with extra links to things like sample projects and debugging tips. I'm selling it for low prices, and if you are interested (I am a teen web dev and could use any support I can get to improve my courses), I would really appreciate it. Don't feel pressured, I can't tell you what to do, but I just recommend my course if you want to learn JavaScript anywhere, from basic console.log() to classes and data structures. Otherwise, good luck on freecodecamp and continue coding, it is a good skill to have :)",Historical-Solid-807,2025-07-25 10:53:41,0,learnprogramming,t3_1m8ujww,False,
n5293ot,"So in my Case, would you rather recommend to keep building Projects and deepen my understanding with that -> Then later on I would try to build something bigger (That has an actual Usage) and learn Frameworks (React, CSS Bootstrap etc.)OrComplete some of the courses you mentioned (Which ones would you recommend, that are possibly free?) I'm still a beginner (1 1/2 - 2 Months Experience)and the whole world of front-end/ Fullstack is a little bit overwhelming and hard to understand, what should be done to make it in this field? (I'm from Germany and things might also be a little different then elsewhere) Still I would be very thankful for every bit piece of Advice :thumbs_up:",Dawood087,2025-07-25 10:32:27,1,learnprogramming,t1_n5229i2,True,
n5htmii,"I don't know about about web development, but I took the IBM course on coursera on Data Engineering, and found it to be terrible.",ottovonbizmarkie,2025-07-27 20:35:59,1,learnprogramming,t1_n5229i2,False,
n525z30,Yes.,Dawood087,2025-07-25 10:05:09,1,learnprogramming,t1_n521q36,True,
n52fvu6,"You can either look up specific 'roadmaps' like from roadmap.sh or youtube videos and learn while you discover more but I understand that's not easy.I personally recommend to spent a bit of money once on the most popular courses for foundation like from Angela Yu or Colt Steele on Udemy (which I guess is less than 20 euro, not sure)Foundation will always be the same, once you have the foundation of fullstack and databases, you should look up your local technologie demand from your location and then make projects and a portfolio.Only development won't be enough, after that you can keep learning extra things like Docker, cloud technologies, applied AI..Good luck",Wingedchestnut,2025-07-25 11:24:37,2,learnprogramming,t1_n5293ot,False,
n5hwwcb,"I have no experience with the courses myself but I see there are multiple different ones ,introduction to DE , DE foundations, DE..To me as someone from DE/AI glancing over the structure it seems pretty good.Anyways thanks for sharing, if someone else reads this and is self-taught they can also glance over the subjects and learn each topic from other free or paid resources if they want.",Wingedchestnut,2025-07-27 20:52:36,1,learnprogramming,t1_n5htmii,False,
n52h9eu,"The Course you mean is: ""The Complete Full-Stack Web Development Bootcamp"" right? Its Still available for 19,99 Euros, I guess, that I will try out that one then, If Im doing this completely honest that should be a Great Foundation right?",Dawood087,2025-07-25 11:34:37,1,learnprogramming,t1_n52fvu6,True,
n50cinc,"I'm not super familiar with GitHub repositories, so I couldn’t view the full simulation with the graphics, but the code looked great!If you’re interested in learning more JavaScript, I recently put together a course. I'm a teen web developer working to improve my tutorials and learning materials, so any support would mean a lot. That said, no pressure at all — I just wanted to say good luck on your coding journey, now and in the future!",Historical-Solid-807,2025-07-25 01:28:34,-1,learnprogramming,t3_1m8lwlf,False,
n50dhkz,"I'd love to enroll! Have you got it up yet, is it like a Youtube thing?",Scary_Competition_11,2025-07-25 01:34:33,2,learnprogramming,t1_n50cinc,True,
n50hy4q,you cant directly run non web apps inside of GitHub but you can make a copy of the project with git clone REPO\_NAME then compile and run it yourself using the provided Makefile that most refined GitHub projects have or go into releases and download the exe or zip file and run it that way. \* I looked at the repo look at his readme it gives the proper steps on how to run it.,AffectionatePlane598,2025-07-25 02:01:07,1,learnprogramming,t1_n50cinc,False,
n50irvo,Thanks! I'll try that now.,Historical-Solid-807,2025-07-25 02:06:07,1,learnprogramming,t1_n50hy4q,False,
n4tlfoj,"Work in robotics - there's tons of cool stuff going on, predominantly in C++. Modern robotics includes some embedded dev and a huge amount of software on ""normal"" computers.",Moon-Base,2025-07-24 01:23:21,3,learnprogramming,t3_1m7l9ss,False,
n4spgs2,Embedded Engineer probably,Rain-And-Coffee,2025-07-23 22:24:18,2,learnprogramming,t3_1m7l9ss,False,
n4tl1m1,Large tech companies employ a massive number of C++ programmers (I am one of them) doing interesting work that isn’t web development.,kevinossia,2025-07-24 01:21:03,1,learnprogramming,t3_1m7l9ss,False,
n4tsp52,Automotive might be field you haven't thought of that might be interesting to you,xamdou,2025-07-24 02:05:39,1,learnprogramming,t3_1m7l9ss,False,
n51zzp1,"Totally get where you’re coming from—there’s a lot out there beyond web dev and FAANG. Look up roles like embedded software engineer, firmware dev, or systems engineer. Search for alumni in those titles or companies like Nvidia, Siemens, or even startups doing robotics/IoT. For prep, brush up on C++, OS concepts, and maybe RTOS. Also, when you start applying, do as much digging as possible before interviews—dig up old interview reviews, check out ""prepare.sh"" or leetcode.Full disclosure, I’m a contributor at prepare.sh now, but I used it as a regular user for my own prep long before that, and the questions were spot on for the roles I was targeting. I really recommend giving it a look—it made a huge difference for me.",irinabrassi4,2025-07-25 09:09:35,1,learnprogramming,t3_1m7l9ss,False,
n4wlefu,Would you be willing to describe what you do day-to-day? I feel like this isn't a perspective I hear very often,A_Fantastic_Name,2025-07-24 14:22:45,1,learnprogramming,t1_n4tl1m1,True,
n5025ug,Video streaming backend systems R&D. Lots of performance-sensitive C++.,kevinossia,2025-07-25 00:27:35,2,learnprogramming,t1_n4wlefu,False,
n4rzmip,"This is a tough one. I was a really good mechanic, it came naturally no training etc. But I hated it, there was no way I'd be happy had I stayed doing it. That said what if you do something in the related field that challenges you more. If you're anything like me, if it's not challenging/rewarding, in my case I like to make my brain hurt a little to enjoy what I'm doing. If not then it just becomes a mundane task to me no matter how important it may be to others or how ""impressive"" it comes off to others. But dont let the fact it's almost a natural talent for you to take away the fact that it is indeed a talent. I hope im making sense. I really am rooting for you. I personally hate the feeling of being at a plateau with no room for growth",mattp1123,2025-07-23 20:17:52,5,learnprogramming,t3_1m7j758,False,
n4rwl8k,"Hard work beats lazy talent every time. You have an advantage with your talent, but it's nothing if you're not using it at 100%. You need to ask yourself if what ever you do right now satisfy you or you're just keep moving with inertia from your initial childhood curiosity. And if its the latter, consider thinking about what are you really curious and passionate about. I spent 7 years studying law and 6 years working with it. It's always been easy for me, I got highest grades in school just by reading a paper 30 minutes before I needed to talk about. Never had my notes with me, it was laying clear in my head, always ready. But law is something you need to be passionate about, always digging and thinking about it, even at home. I on the other hand spent 6 years clocking out at 6pm and it left my brain until the next morning. Everyone thought I was a beast, always coming to me for the advice. I did in couple hours something that other's struggled with for several days. Everyone said I was soon to be a big deal. I was bored out of my mind. And when the opportunity presented itself, I left everything and never looked back. Because the thought about changing career was far less scary than the thought that I have to do this for the rest of my life. Now I'm getting ready for my first job in tech. People telling me I'm pretty good too. Because you can get good at anything if you put your mind to it. But this time I'm actually curious and digging. And never bored.",Towel_Affectionate,2025-07-23 20:03:43,4,learnprogramming,t3_1m7j758,False,
n4sklic,"For clarification: I do enjoy programming, and i really like my current job. The problem is I have absolutely zero interest in doing anything extra that isn't expected of me in my personal time. And I don't think i can become a successful dev without learning and writing in my free time, which is why i want to have passion to do more",livyatian,2025-07-23 21:58:51,2,learnprogramming,t3_1m7j758,True,
n4st6ps,I've found it hard to maintain a passion for personal projects and curiosity learning since I've started working full time in software - but I think that's okay. My job affords me the ability to do hobbies I find more engaging these days and that's what is important to me. You can absolutely be a successful developer without having a passion for computer science outside of work so long as you're keeping your skills sharp with modern tools.,hamboozler,2025-07-23 22:44:21,2,learnprogramming,t3_1m7j758,False,
n4sb6zq,"It might be that the project you're working on isn't interesting to you. Maybe there's another area that might interest you that you can use your skills toward that might actually give you some motivation? I know what it's like to work on a project that is boring and even if you're good at it, it won't be fulfilling and it kind of sucks.I don't know what stage you're at in your career but if you're still early, maybe you can just use the next little while to make enough money then move onto something else that interests you unless you know for sure you hate programming as a job regardless of what project you're working on? Another option, if you can finish work easily is to see if you can freelance as a way to make money while pursuing something else.",EffectiveSource4394,2025-07-23 21:12:00,1,learnprogramming,t3_1m7j758,False,
n4tnfnj,"I have all the passion for inner workings of computers and programming languages, but minimum productivity in creating something useful out of it.",RealMadHouse,2025-07-24 01:35:09,1,learnprogramming,t3_1m7j758,False,
n4u98el,What’s your vision of success look like?,Kennys_broom,2025-07-24 03:51:34,1,learnprogramming,t1_n4sklic,False,
n4sjxw4,"It's not even that i find my current project at work uninteresting, it's completely fine, i finish the tickets i decided i would complete that day, and that's it, nothing more, nothing less. I am personally very happy with where i am currently, but i am simply never going to become an actual capable senior dev at this rate, there are so many gaps in my understanding that work experience could never fill, and like i mentioned originally, i have absolutely zero motivation to do something more than what im expected of",livyatian,2025-07-23 21:55:29,2,learnprogramming,t1_n4sb6zq,True,
n51vbiq,"Having a broad and specific knowledge to start and manage projects. I can currently do a task of solving a specific problem in a narrow space, but even though I'm learning a ton at work, it simply won't ever be enough on it's own to get that broad general understanding my boss has for example.",livyatian,2025-07-25 08:24:30,1,learnprogramming,t1_n4u98el,True,
n4u38yb,"Ok in that case I think it's fine ... You'll learn and dig deeper when the situation arises where you need to deepen your knowledge. I'm not saying I'm an expert because I'm not but I broadened my experience by changing jobs every few years. I got new perspectives, learned new technologies, worked with others who had more experience and learned from them etc. If you're having difficulty learning for the sake of learning, I'm mostly in the same boat. I don't have a desire to learn something without a purpose. If I am not going to use it, it's likely that it won't be a good use of time as the knowledge will likely erode over time unless it's used.So I guess I would say that if you're looking to expand your knowledge, put yourself in a position where you need to learn something to do your job if that's your goal. That being said, if you're happy being very efficient at your job even if you're not growing your knowledge then that's ok too. It depends where your job is in your list of priorities. If you go this route though, you might want to occasionally, learn something new to see whether you're still capable of learning something pretty easily.",EffectiveSource4394,2025-07-24 03:10:45,1,learnprogramming,t1_n4sjxw4,False,
n5ozrvp,"I would look for a challenge or project that's at the right level for you, rather than settling for something too easy or too hard. As a starting point, I always recommend [Simple Programming Problems](https://adriann.github.io/programming_problems.html)!Beyond that, AI should be able to work with you to brainstorm some ideas that are at the right level for you.",abrahamguo,2025-07-28 22:44:11,3,learnprogramming,t3_1mbuook,False,
n5p19eu,"Yes, this is normal. Your degree ultimately builds only the bare foundation you need to make actual, real-world projects. Around 80% of what I learned was on the job, although I ended up using everything I learned in uni, except for “old AI” which I never found a use for.",Joewoof,2025-07-28 22:52:20,3,learnprogramming,t3_1mbuook,False,
n5p5h0b,"Feeling underwater is quite common, specially since it sounds like you have no paid experience. On the job you usually get thrown into a giant codebase and just have to figure things out.What types of programs would you be interested in building?",Rain-And-Coffee,2025-07-28 23:15:14,1,learnprogramming,t3_1mbuook,False,
n5p62n0,"It takes a long time to know what you don't know. And from there to gauge what is worth learning for the potential task at hand. It's normal to get into something bigger than you guessed in the early days. Keep doing what you understand but push the boundaries. Sometimes you can learn a lot from stopping after you've ""made it work"" and look at how else it could work. How many ways are there to do X seemingly simple thing? Is my solution the best, and why?",no_regerts_bob,2025-07-28 23:18:29,1,learnprogramming,t3_1mbuook,False,
n5p7pyh,What exactly makes you feel in way over your head? I'm having trouble imagining that.,Ksetrajna108,2025-07-28 23:27:22,1,learnprogramming,t3_1mbuook,False,
n5pestv,"That clears it up a bit. Thanks. Have you heard of the composite pattern. It's a way to think of a complex whole as an assemblage of less complex parts. This can be used concretely, such as the parts of a car, or more abstractly, like the scenes in a play. When your mind is focussed on one part, it thinks of the other parts more or less abstractly. Trying to focus on too many parts at once strains the mind and makes it feel overwhelmed. Can you find an example of this in your project?",Ksetrajna108,2025-07-29 00:06:25,1,learnprogramming,t3_1mbuook,False,
n5phxha,"how much is ""plenty of programming""? in 2 years the bigger projects we've done have been: a minesweeper variant, an online multithreaded messaging desktop app, a 2-month project of choice (chose to do a barebones 2d roguelite with physics and no third party code/assets), a programming language using antlr, a basic mashup web service, a plant and watering info web service, and lastly a mostly complete eco initiative web service (register and log in, send and receive private messages, create and join initiatives, comment on initiatives, log eco actions, and receive various relevant notifications). I've used java, python, js, ts, and gdscript during my time studying. in my next 2 semesters I will also have 1 c++ course eachfrom what you're describing it sounds like you haven't programmed enough to be properly self-sufficient. I will emphasize that at this level you will definitely feel underwater. you still get that sometimes especially when using brand new things, but for example if I make something with plain java and standard libraries I will NOT be feeling like that even in an ambitious projectunlike what some comments are suggesting, there's no avoiding this and you simply have to push through",NefariousnessMean959,2025-07-29 00:24:19,1,learnprogramming,t3_1mbuook,False,
n5qsekx,Have you worked with SQL databases?,Jim-Jones,2025-07-29 05:25:52,1,learnprogramming,t3_1mbuook,False,
n5rayi0,"feeling a bit underwater with bigger projects is super common—it's part of bridging that gap from beginner to intermediate. Try breaking bigger ideas into smaller, manageable chunks, and don't be afraid to dig into real-world coding challenges",irinabrassi4,2025-07-29 08:17:10,1,learnprogramming,t3_1mbuook,False,
n5rfjup,"Yes it's normal to hit blocks, particularly when you're learning something new. Try to break it down into small pieces and make small incremental steps forwards. If you still need projects ideas, there are 30+ beginner level projects here: [https://codingchallenges.fyi/challenges/tags/beginner](https://codingchallenges.fyi/challenges/tags/beginner)",JohnCrickett,2025-07-29 09:02:06,1,learnprogramming,t3_1mbuook,False,
n5friet,Java will give you a better foundation. Start with that.,Great_Guidance_8448,2025-07-27 14:26:03,6,learnprogramming,t3_1maglet,False,
n5edb60,"They're both fine, don't stress about it, pick one and get good at it",Buttleston,2025-07-27 07:53:45,5,learnprogramming,t3_1maglet,False,
n5gxy8h,"If you want to learn programming properly then Java.If you want to actually do stuff then Python.The only problem with Python is that you'll develop some learning debt, which will be tedious to overcome later, but it's not that big a deal.",da_Aresinger,2025-07-27 17:56:10,3,learnprogramming,t3_1maglet,False,
n5etz5y,Got you covered brosky [https://www.jython.org/](https://www.jython.org/),disposepriority,2025-07-27 10:38:46,2,learnprogramming,t3_1maglet,False,
n5i47xq,"Java if you're learning to code, that gives you the basis for most languages. It's has types and ""old school"" c style syntax.If you start with python, you'll have problems going into other languages, since the syntax is quite different and weak typed, it can be difficult switching from.",TomatoEqual,2025-07-27 21:30:44,2,learnprogramming,t3_1maglet,False,
n5jedo0,"C - java - python. C learn you low level code how it works, pointers, memory management etc. Java oop, libraries and apis it provide the fundamentals for high level languages, after that python would feel easier and youll understand it faster",notherex26,2025-07-28 02:03:33,2,learnprogramming,t3_1maglet,False,
n5ejtn1,"Keep in mind that since Python has a lower barrier of entry, there are far more entry level people flooding the market. Compound that with the fact that AI coding tools that are becoming sophisticated enough to handle a lot of low level work and we’re seeing a situation where even CS grads are having an extremely tough time.",DonkeyTron42,2025-07-27 08:58:24,1,learnprogramming,t3_1maglet,False,
n5fb28n,"Literally learn both. Both are a great 1-2 punch of first languages. Finish your Java course and then do the Python one next.Do NOT hop around to other courses before you have finished your current one. It’s a waste of time, and you’ll regret it. Do everything to completion.",ImpeccableWaffle,2025-07-27 12:50:47,1,learnprogramming,t3_1maglet,False,
n5fv3js,"Stick with Java just long enough to finish what you started, it builds discipline. Then jump into Python for speed, simplicity, and a smoother ride through uni and backend dev.",alpinebuzz,2025-07-27 14:44:51,1,learnprogramming,t3_1maglet,False,
n5jm0ql,"If your university is mainly teaching in Python, I would recommend going with that. That way, you can ace your classes. When I went to university, I had to do both java and Python. I started learning with Javascript, so it took some time for me to get used to java. Now I'm full-time java dev",cielNoirr,2025-07-28 02:52:56,1,learnprogramming,t3_1maglet,False,
n5eyqqm,"Being a mater in some Field is a Life Long dedication, Not a goal post.",movemovemove2,2025-07-27 11:20:28,10,learnprogramming,t3_1madvfm,False,
n5dv5ch,"""How long does it take"" questions are pretty hard to answer because there is the matter of how good you want to be, if you're a fast learner, slow learner, your age, and a few other things.All you can do is keep working on ever more advanced projects. Don't just do the same thing over and over, actually push yourself to the point where you think ""I can't do this"" and then push past that.A lot of employers are going to want to see TypeScript experience not just JS. For me JS is sort of a red flag at this point.",ToThePillory,2025-07-27 05:07:21,6,learnprogramming,t3_1madvfm,False,
n5ezn4v,"I think it depends how you define mastered. I think you can get far already if someone asks you if feature x and y can be implemented and you immediately get a feeling of yes or no and quickly can say why it can be implemented or can't. I work on my own company with a buddy of mine who isn't a programmer and he often asks about features and if it can be done and most of them can be done and a few cannot (at least not before launch) and I have to explain why. I still wouldn't say I mastered web development as there is still so much to learn and it won't ever stop. I think what's more important is to have a growth mindset and the believe what I don't know, I can learn.",sandspiegel,2025-07-27 11:27:56,2,learnprogramming,t3_1madvfm,False,
n5f3eyw,3 months is nothing considering people following traditional education path will be doing a lot of general IT things for 3-4 years or more.Depending on your location and discipline it can take 1 to multiple years to be job-ready. There is no exact answer for this but in majority of cases not a couple months.,Wingedchestnut,2025-07-27 11:57:51,2,learnprogramming,t3_1madvfm,False,
n5feg0d,"3 months? Oh gosh, who said that? I would say like 1.5 or 2 years to you really start to know what you are doing",RandomPitay,2025-07-27 13:11:41,2,learnprogramming,t3_1madvfm,False,
n5fqxn7,"just learn the theory of javascript and do simple projects. Dont go into advanced projects because you will be using react and node js anyway and those will abstract away most of the complex parts of js. You will realise that the actual level of js used in web dev is on the easier side. So i would recommend you to move on to react now, then next js, then node express and a database.",One-Satisfaction3318,2025-07-27 14:22:56,2,learnprogramming,t3_1madvfm,False,
n5f2kp9,"It's been one day since I started to learn JavaScript, what I wanted to ask you is how long did you learn JavaScript every day??",rabeeaman,2025-07-27 11:51:26,1,learnprogramming,t3_1madvfm,False,
n5fw5il,"Forget the “3-month full-stack” hype, real learning sticks when you build, break, and fix things yourself. Keep pushing your projects a little further each time, and you’ll grow faster than you think.",alpinebuzz,2025-07-27 14:50:23,1,learnprogramming,t3_1madvfm,False,
n5gsz7t,Yesrs,serverhorror,2025-07-27 17:32:27,1,learnprogramming,t3_1madvfm,False,
n5h7rtk,About 10 years.[https://norvig.com/21-days.html](https://norvig.com/21-days.html),esaule,2025-07-27 18:44:57,1,learnprogramming,t3_1madvfm,False,
n5c4rhk,"Python sets under the hood are [hash sets](https://www.w3schools.com/dsa/dsa_data_hashsets.php)It doesn’t have to check the entire set (which would be slow), it just has to check anything with the same hash as the new element, which assuming a reasonable hashing function should be either nothing or very few elements.",ThunderChaser,2025-07-26 22:10:10,26,learnprogramming,t3_1ma5kqi,False,
n5c6k68,"A `set`/`{item1, item2}` in Python is what is called a hash map. It's a bit of a complex topic, so I'd suggest watching a YouTube video about it, but here's a short explanation:Imagine you have a library of books. You could store those books in a `list`. If you store those books in a list, though, you have to check every single book to see if you have `Harry Potter` in your collection. Instead, you can put those books in a `set`. Books in a set are stored in piles. Each pile contains all the books starting with the same first two letters. So, to check if you have `Harry Potter`, you go directly to the `Ha` section. You don't have to go through the entire library.Now, let's say you only want one copy of each book, and you are given another copy of `Harry Potter`. You go to the `Ha` section and check for `Harry Potter`, if it is there, you just toss your new copy. If not, you add that copy to the `Ha` section.",BinaryBillyGoat,2025-07-26 22:20:50,4,learnprogramming,t3_1ma5kqi,False,
n5cdxe2,"The key idea behind sets/maps are that they use the value itself to determine its position in the list. As an example, take a string ""Hello world"", which you want to add to the set. We call hash(""Hello World"") and it returns the hash for that string (lets just say it is number like 66457). Then, we use that hash to determine the index the string belongs in, in the list. An easy way to do this for this example is to use the modulo operator. So say, our set implementation has 10 ""buckets"" (each bucket is an element in the underlying list), we can do 66457 % 10 = 7 so we place the string ""Hello world"" in index 7 of the underlying list(i.e. we place it in bucket 7).The core idea here is that we never had to iterate through the list of buckets, we derived the index from the value ""Hello world"" itself. We dont have to look at any index other than index 7 for duplicates because (assuming our hash function is deterministic), ""Hello world"" *always* maps to index 7.However, there is a problem. Say there are 10 buckets, but we input 20 elements. Since there are more elements than there are buckets, its inevitable that some buckets will have multiple elements in them. Because of this, it is actually true that we have to do some iteration to find duplicates. If there are multiple elements in bucket 7, then we have to search the bucket to check if ""Hello world"" already exists. I'm not completely sure datastructure python uses to represent buckets though, if its lists then yeah there would be iteration but technically it could be any data structure.",greenspotj,2025-07-26 23:05:14,1,learnprogramming,t3_1ma5kqi,False,
n5cnih9,"Others have answered the question of *approximately* how Python's sets are implemented using hash tables, as a high-level overview.If you want to see how they are *exactly* implemented, the source code is all there for you to read, but it's in C rather than Python.When you call `set.add()` in Python, the corresponding chain of C functions is [`set_add`](https://github.com/python/cpython/blob/v3.13.5/Objects/clinic/setobject.c.h#L435-L445) → [`set_add_impl`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L2144-L2151) → [`set_add_key`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L365-L373) → [`set_add_entry`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L122-L208). And `set_add_entry` is where the actual work happens to find the object's slot in the hash table and insert it. Python's hash tables use [open addressing](https://en.wikipedia.org/wiki/Open_addressing), so the function needs to try multiple slots until it finds either an empty one or an existing object that's equal to the one being inserted. Sets are fast because on average, this loop will terminate after a small number of iterations, *if* the hash function gives random-looking output *and* the fraction of occupied slots in the table is not too large. In order to make sure that second condition holds, the code calls [`set_table_resize`](https://github.com/python/cpython/blob/v3.13.5/Objects/setobject.c#L253-L330) to rebuild the table with a larger number of slots whenever the table gets too full.",teraflop,2025-07-27 00:03:18,1,learnprogramming,t3_1ma5kqi,False,
n5ct2xy,"A hash set is like a dictionary, the book that you use to look up words.In a dictionary, words are placed in sections by the first letter of the word.In a hash set, the data you want to hash is passed through a function, which tells you which section to place or find the data.The number of sections are fixed, and the hash function spreads out the data as evenly as possible throughout the sections.each section is a list that grows as more items with the same hash are added.When items have the same hash (but are not the same data) the lkstvis traversed to find the exact match.Since the section list is much smaller, its faster to find a duplicate item in the smaller list.",rupertavery,2025-07-27 00:39:34,1,learnprogramming,t3_1ma5kqi,False,
n5ecm65,"You seem to think that a set is a list with black magic. It's time for you to start learning DSA (Data Structure and Algorithm), especially the Data Structure part.Comparing `set` and `list` is a big abstraction. You can iterate on both, but you cannot sort a set or insert at a position.A `set` in python is closer to a `dift`. FYI, in Go programming language, they don't have `set` they use a map which is roughly a dict, they just don't care about the values and only care about the keys",divad1196,2025-07-27 07:47:04,1,learnprogramming,t3_1ma5kqi,False,
n5frgju,"Python sets use hash tables to store elements, which makes checking for duplicates super fast.No loops needed - just a quick hash check and it's in or out.",alpinebuzz,2025-07-27 14:25:46,1,learnprogramming,t3_1ma5kqi,False,
n5fwgaj,Sets are definitely not lists. A list guarantees an order of the elements it stores. It's a completely different data structure.,Great_Guidance_8448,2025-07-27 14:51:57,1,learnprogramming,t3_1ma5kqi,False,
n5rt9z2,It's kinda like a dictionary where both the keys and the values are the same.,paperic,2025-07-29 11:04:51,1,learnprogramming,t3_1ma5kqi,False,
n5d0u8t,"With modern hashing functions I’d be shocked it there are any collisions unless you’re doing an enormous set, but something that large is assume they aren’t using python for.",JackandFred,2025-07-27 01:29:25,4,learnprogramming,t1_n5c4rhk,False,
n58c85m,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-07-26 07:59:16,1,learnprogramming,t3_1m9nrek,False,moderator
n58crkb,"There are countless posts like this in this subreddit, and I am sure that most people's recommendation is to create something with the language rather than learning a new one. Or expand and learn a framework based on the language you just learned too. The crucial thing is to understand the logic + problem-solving stuff rather than knowing multiple programming languages' syntaxes.",NationsAnarchy,2025-07-26 08:04:28,16,learnprogramming,t3_1m9nrek,False,
n58e4xj,"Why jump languages? It's not that programming languages are Pokemon. You don't have to collect them all.Do you have a specific use case in mind, like games, desktop or mobile apps, websites? *Use* what you know. Build programs. Deepen your knowledge. You so far have learnt the *tools*, but you need to learn how to *use* them to *build something*.",aqua_regis,2025-07-26 08:17:55,9,learnprogramming,t3_1m9nrek,False,
n58k8n8,"Well, the answer depends on a single question: WHY do you want to learn another language? For fun? -> it doesn't matterFor work? -> What kind of work do you want to do? -> Choose a language appropriate for that line of workFor studying? -> What field? -> Choose a language appropriate...For a project? -> What kind of project? Any special requirements? -> Most probably for a beginner project, any language will do, but you might choose a language appropriate to...and so on.",Beregolas,2025-07-26 09:19:01,7,learnprogramming,t3_1m9nrek,False,
n59ks98,Something like C - it’s great for understanding the lower-level coding concepts like memory management,bioistry0,2025-07-26 13:56:44,3,learnprogramming,t3_1m9nrek,False,
n58cyvm,"Every language has some rationale for it. Depends on why you would move on to another language. Maybe Bourne shell and awk. Maybe Haskell. I wouldn't do assembly language, but back in the day it was kind of interesting.",DonnPT,2025-07-26 08:06:28,2,learnprogramming,t3_1m9nrek,False,
n58w6w4,"Are you going to do something that another language is significantly better suited to than python?For example, are you trying to build a website? Because then you'd want to try JS/TS.Are you trying to build a 3D game? Because then you might want to try C# or C++.But if you don't know what you'd use the new language for I don't see why you'd learn it and I'd focus on learning more universally applicable concepts in programming.Learning syntax is easy, writing good code isn't.",Constant-Tea3148,2025-07-26 11:10:16,2,learnprogramming,t3_1m9nrek,False,
n58cv61,"Rust, zig,",Y0uN00b,2025-07-26 08:05:28,1,learnprogramming,t3_1m9nrek,False,
n58ec84,"Any language you like, it doesn’t depend on the previous language. You can try C++ or Java",Huy--11,2025-07-26 08:19:58,1,learnprogramming,t3_1m9nrek,False,
n58nddk,Binary,ninhaomah,2025-07-26 09:50:16,1,learnprogramming,t3_1m9nrek,False,
n5r7vl5,cfbr (Similar position),MeIsYguy,2025-07-29 07:47:36,3,learnprogramming,t3_1mc58jh,False,
n5r8nca,"If the idea keeps you up at night and makes you code like a caffeinated squirrel, go all in. But grab also some freelance/remote gigs. Gotta fund the madness while building your masterpiece.",Alex_NinjaDev,2025-07-29 07:54:57,2,learnprogramming,t3_1mc58jh,False,
n5rj513,I’m in this same situation but I’m using AI to help code and I’m combing through it when issues arise. Keep at both! Something has to give.,YaOldPalWilbur,2025-07-29 09:36:48,1,learnprogramming,t3_1mc58jh,False,
n5tl2nx,"I was in a very similar situation after college, I had tried another small startup where I was the founder, and right after graduation I had an idea for an app for my school. I spent countless hours on it thinking I would make money off of it.The reality is, being a student, you likely do not have the skillset you need to succeed in starting a company and it becoming something that pays you.My advice is use the project you're working on as a learning opportunity, but keep your expectations realistic on what it will become. Having a solution to a problem is very different than taking that solution and selling it to enough people to make a living. If you spend an extended period of time grinding on the project, my advice is that you should be doing it because you're motivated to learn, not because you want to make it your job.I've always learned while passionately building a project that would eventually get thrown away, and I've spent a lot of time convincing myself that these things would pan out, but that's not really how the world works unfortunately.TLDR: Look for a job, build as much as you can, maybe get hired, see what professional development is like.",jamestakesflight,2025-07-29 16:46:40,1,learnprogramming,t3_1mc58jh,False,
n5r9jbb,It does indeed! Honestly I've learned a lot while working on it. Working a freelance gig is I think a great idea. I've never done one. Can you tell me how I can get started?,Klutzy_Point_7831,2025-07-29 08:03:24,1,learnprogramming,t1_n5r8nca,True,
n5qqmir,"React Native will work very well for cross platform development. I prefer Flutter, but ultimately it will probably come down to preference in your case.",Serenity867,2025-07-29 05:11:08,3,learnprogramming,t3_1mc2pvv,False,
n5qr94k,"Yes, React Native is fine for complex apps.React Native supports both iOS and Android, you might have some parts of the code that will required a bit of 'if iOS do this, if Android do that', but for the basics, it'll be fine.Map support on React Native is OK, but only OK, it'll work though.",Slow-Bodybuilder-972,2025-07-29 05:16:17,2,learnprogramming,t3_1mc2pvv,False,
n5tk31e,I honestly love Tauri. The whole ecosystem is awesome. Most of the native functions are available to you in javascript. If you don't have something you can just use rust and invoke that in the frontend. You can just use react for the frontend.,Rudresh27,2025-07-29 16:42:04,1,learnprogramming,t3_1mc2pvv,False,
n5qryw9,"And if you wanted it to be better than just ok, what is your choice of action?",3esuss,2025-07-29 05:22:15,1,learnprogramming,t1_n5qr94k,True,
n5qs71d,"MAUI has better support for Maps, but it's worse at just about everything else.There is no cross platform toolkit that's good, they all have trade-offs. If I was making an iOS only app, I'd pick SwiftUI, no question, but since you want Android too, React Native is a good choice.Flutter has it's fans, but I've never used it professionally, so won't comment on that.",Slow-Bodybuilder-972,2025-07-29 05:24:08,2,learnprogramming,t1_n5qryw9,False,
n5qt5ks,Alright appreciate all the advice as it’s very needed!,3esuss,2025-07-29 05:32:19,1,learnprogramming,t1_n5qs71d,True,
n5lxjmx,"Hint: it involves a loop, and processing one character at a time. Do you know how to write a loop?",CodeTinkerer,2025-07-28 13:53:38,7,learnprogramming,t3_1mbgrhi,False,
n5lybat,I tried using a for loop but it didn't work I got the same result back. Maybe I didn't implement it the right way.,Ancient_Ad_367,2025-07-28 13:57:35,0,learnprogramming,t1_n5lxjmx,True,
n5mno57,"OK, try to get the following output. Suppose the string you're checking is ""portfolio"".Write a loop that prints the following. 0 p 1 o 2 r 3 t 4 f 5 o 6 l 7 i 8 oThis is a simpler problem where you try to get the loop to work but don't count the vowels. If you can get that to work, you can try to modify it to count the vowels.",CodeTinkerer,2025-07-28 16:00:13,6,learnprogramming,t1_n5lybat,False,
n5lyvjg,https://stackoverflow.com/questions/9438209/for-every-character-in-string,glordicus1,2025-07-28 14:00:29,2,learnprogramming,t1_n5lybat,False,
n5o97o1,You going to need a loop some where to process more characters.,tcpukl,2025-07-28 20:29:54,1,learnprogramming,t1_n5lybat,False,
n5lz227,Thx,Ancient_Ad_367,2025-07-28 14:01:24,1,learnprogramming,t1_n5lyvjg,True,
n5k7cd7,"The best way to learn is to start building. It doesn’t have to be fast, as long as you understand everything that happens in the code, at least what you have written. Trying to understand every concept can be overwhelming, and shouldn’t necessarily be needed.So don’t worry, you’re on a good path.",ScaredStorm,2025-07-28 05:35:56,1,learnprogramming,t3_1mb7nrx,False,
n5lqbf1,"I think that no matter how the code is produced, we still need to be able to read the code and understand it (to accept it, or to reject it). You cannot blindly trust that LLMs generated code is correct, especially if you are planning to deploy your app. Code may contain vulnerabilities (e.g. vulnerable for SQL injection, cross-site scripting, cross-site request forgery, etc), all kinds of bugs and missing features. Who know, maybe even real API keys that found their way into the codebase somehow.That means, that we should still know fundamentals. Not sure what you meant by low-level stuff, but learning definitely will not hurt. Just make sure to apply your knowledge in practice and build something. That will improve your understanding of the material and help it stick in your memory for longer. Don't be afraid to reinvent the wheel for the sake of deeper understanding. At the same time, try to build something new, useful and challenging to really stress test your skills and ""level up"".The difficult thing is to focus on cultivating the right kind of skills and fundamentals. There is just so much to learn and to know. I don't know the answer either, besides the obvious: learn 1-2 programming languages well enough, learn data structures, pick a framework, know network protocols (at least HTTP), maybe OAuth, maybe cybersecurity fundamentals could be useful. Yeah, take this with a grain of salt. I actually started reading ""Structured computer organization"" by Tanenbaum. That maybe useful for low-level and system programming, i guess?That said, I would suggest to give these AI tools a try every once in awhile if you haven't done so yet. Just to see what they are capable of.I shared your hesitation at first. Then, I tried it recently and found it quite useful for generating boilerplate code and writing tests. No agentic stuff, just multi-line autocomplete mode. That way, you still are in control and can immediately review the suggested code snippet, but it saves you a lot a hand-typing.As for the AI, I am not gonna be a judge of whether the hype is justified or not. But, people do use these LLM-powered assistants in professional setting, at least to a degree. It's worth to at least keep tabs on from time to time.",two_times_three,2025-07-28 13:14:23,1,learnprogramming,t3_1mb7nrx,False,
n5jeccv,How about a simple blog?,abrahamguo,2025-07-28 02:03:20,8,learnprogramming,t3_1mb3zug,False,
n5jf5vw,It's best to make something that resonates with you and what you want. I will suggest something like a dictionary or some kind of language learning website that looks up a database. You will need to create your own api and have the frontend display the relevant information.,1000baby,2025-07-28 02:08:31,3,learnprogramming,t3_1mb3zug,False,
n5l1567,"build something you'd actually use, maybe a habit tracker, a budget app, or a small blog platform. you'll learn more when the project feels useful.",prazeros,2025-07-28 10:17:38,2,learnprogramming,t3_1mb3zug,False,
n5je7qs,anime goodies website :victory_hand_medium-dark_skin_tone:,Shino_s_Tokyo,2025-07-28 02:02:30,1,learnprogramming,t3_1mb3zug,False,
n5ji7pz,Health website,samjones2025,2025-07-28 02:27:57,1,learnprogramming,t3_1mb3zug,False,
n5jhw3c,Porn,pluhplus,2025-07-28 02:25:50,1,learnprogramming,t3_1mb3zug,False,
n5jxsb2,"I recommend making something silly. The sillier it is, the less pressure you will feel to make it perfect, and the more you can allow yourself to experiment. Go wild.For example, have a look at [the Condiment Packet Gallery.](https://www.condimentpacket.com/)",teraflop,2025-07-28 04:17:08,1,learnprogramming,t3_1mb3zug,False,
n5jeu30,Ok I will consider it,TheEyebal,2025-07-28 02:06:25,2,learnprogramming,t1_n5je7qs,True,
n5jzfxf,Oh thats smart,TheEyebal,2025-07-28 04:30:03,1,learnprogramming,t1_n5jxsb2,True,
n5i61yp,"Go sounds like a great fit for what you’re doing. It has a familiar C-style syntax, builds fast, and makes it super easy to create cross-platform CLI tools with zero fuss. I’ve used it for a bunch of automation scripts and small tools, and the standard library alone gets you surprisingly far.Rust is powerful but a bit heavy for casual CLI projects since the borrow checker teaches you a lot, but it can slow you down if you’re just trying to get something done for fun. Also, depending on what kind of tools you’re building, you might want to check out Gadget. It’s not a systems language, but it’s great if you ever want to take your automation and turn it into a backend or API without building the infra yourself. Nice complement if your CLI tools start needing a server side.TL;DR: Go first, Rust later if you want a challenge, and maybe Gadget if your tooling ever drifts toward backend workflows.",No_Week_5798,2025-07-27 21:40:30,7,learnprogramming,t3_1may0hf,False,
n5idbp3,You'll be able to get going with Go far faster than with Rust. So much easier to work with and a less complex language. The concurrency model for Go is also easy to use.,David_Owens,2025-07-27 22:20:00,2,learnprogramming,t3_1may0hf,False,
n5iy9z7,"Go is great if you're coming from C# because they're relatively similar as far as languages go. Rust is awesome but is definitely not newbie-friendly, you can go for it but prepare to spend a lot of time learning what the compile errors mean.If you want to stretch your skills you'd want to do something farther from your comfort zone. A dynamic language like Python, JS, or Ruby will help teach you discipline, while still building skills that are highly marketable.If you want to go more esoteric but deep into the world of languages, try going through SICP (a book). It's not immediately practical, but it deep dives into the fundamentals of what programming is.",RobBrit86,2025-07-28 00:23:00,2,learnprogramming,t3_1may0hf,False,
n5vx27l,"Ruby is an interesting and different scripting language. I prefer it to python for little CLI tools.It's Smalltalk with some Perl thrown in, so it's VERY object oriented, for example `2 + 2` is evaluated as ""create a numeric constant object initialised with the string `2`, then send it the `+` message, passing a second numeric constant object as an argument"". But it also has a lot of Perl-like CLI convenience stuff, like built in regexp.It has flexible metaprogramming, so you can define little DSLs (domain specific languages) within Ruby. This is how Rails works. Someone famously made a complete x86 assembler as a Ruby DSL:```rubyfisk = Fisk.newbinary = fisk.asm do push rbp mov rbp, rsp int lit(3) pop rbp retend```That's a regular Ruby program that's also x86 assembly! It works by overriding the name resolution system within the block that's passed to `asm`.It's a lot of fun to write, but perhaps too complex -- it's maybe as complicated as C++. But that just adds to the fun, for me anyway.",catbrane,2025-07-29 23:31:03,1,learnprogramming,t3_1may0hf,False,
n5gdux5,Start googling.Take every one of those concepts you mentioned and go read about them.That will take you from zero knowledge to some.Repeat until it makes sense.Good luck!,Rain-And-Coffee,2025-07-27 16:19:24,6,learnprogramming,t3_1maqdqx,False,
n5gge8h,">\> Where should I start as a complete beginner? (Languages, tools, learning order). Go review your year 1 coursework",ffrkAnonymous,2025-07-27 16:31:39,5,learnprogramming,t3_1maqdqx,False,
n5giwcb,"fwiw this is a very difficult first assignment you've given yourself, requiring expert level knowledge in three or four fields.something more reasonable in your timeframe but still aligned with your overall goal would be something like a stock alerter - you track a few stocks and if (for example) Walmart tops $110 it'll auto-send you an email notification.",Chaseshaw,2025-07-27 16:43:43,3,learnprogramming,t3_1maqdqx,False,
n5gho35,Pluralsight used to be a good online resource. You’ll have to subscribe though,Tingler1970,2025-07-27 16:37:45,1,learnprogramming,t3_1maqdqx,False,
n54q7oa,Make a video game like pong or asteroids.,32gbsd,2025-07-25 18:22:00,1,learnprogramming,t3_1m96b38,False,
n56vspt,"Building something will always make you really learn the concepts that you put in practice. I understand that you want to know all the features of C++ by heart, but that is not useful and practically nobody knows it. I think that it's better to learn the concepts when you need them.Documentation normally is a reference guide (you don't learn a human language reading a dictionary).LeetCode is full of exercises where you will need to apply DSA if that's what you want to do. If you want to learn to build, think about some program you cojld need or you would want to do and start doing it. Google and ChatGPT are always there for consulting all you need.",No_Dentist3681,2025-07-26 01:13:31,1,learnprogramming,t3_1m96b38,False,
n57y8le,"For a start, what percentage of the c++ pages at cppreference.com do you know by heart?But seriously, what do you really need to know to get the job done?",Ksetrajna108,2025-07-26 05:48:35,1,learnprogramming,t3_1m96b38,False,
n55zj0l,"Your brother could start with CS50x, especially if he has your help when he gets stuck on something. He won't be able to do it as fast as an adult, but it'll be a great learning experience for him to pick up those CS fundamentals at a young age.I was about his age or maybe a year or two younger when I started learning programming on my own. This was back in the early 80's so no tutorials or online help available. I had the little guide on Atari BASIC that came with the cartridge and a book I kept checking out of the public library. Did a programming class in (I think) 8th grade, Computer Science in 12th, and then a degree.",David_Owens,2025-07-25 22:07:14,3,learnprogramming,t3_1m94naj,False,
n54amjs,"I'd probably avoid any typical CS course, but it depends on what level your brother is at. Maybe something like Arduino or something physical? Otherwise, I'd suggest something like Scratch.It sounds like you went through a more rigorous way to learn and want him to do the same, but at 13, it's hard to say if that's good or not. If he's particularly advanced, maybe yes. Has he said what we wants to learn? I've heard of people who made a CPU using Minecraft.I think the key is to figure out what he's interested in. If he likes a more formal course, then great. If not, you'll have to improvised.",CodeTinkerer,2025-07-25 17:09:53,2,learnprogramming,t3_1m94naj,False,
n54dbsg,"I started programming in C at 11 years old, I don't recommend that though, I think learning HTML CSS and JS is a good start for any beginners. boot camps and uni intro courses are both fine, but be prepared to help him if he gets stuck",AffectionatePlane598,2025-07-25 17:22:09,1,learnprogramming,t3_1m94naj,False,
n54kfcr,"I started studying CS in high school at the age of 14, so for someone particularly interested in it I would think that such a course would be reasonable. That being said, it's important that he's interested in the topic you choose. Scheme is a great way to learn about language design and functional programming, but as a beginner I found a course in python to be a great first language. It's fairly simple and straight forward to learn the basics and it has a depth of features to explore depending on where your interests move as you learn more",punpun1000,2025-07-25 17:54:33,1,learnprogramming,t3_1m94naj,False,
n54loeo,maybe some turtlescript :/,NoAlbatross7355,2025-07-25 18:00:22,1,learnprogramming,t3_1m94naj,False,
n55yzi2,"I started learning in 7th grade, and by 8th grade, I was a better programmer than all the seniors in my school. As a freshman, I did work for a D1 College very much thanks to one incredible course.The best course I ever took was CMU CS ACADEMY CS1. I never found a course even close to it.",BinaryBillyGoat,2025-07-25 22:04:17,1,learnprogramming,t3_1m94naj,False,
n56p29i,"""Good intro CS class for a 13 year old? Hi everyone, I've been programming for around 2-3 years and I'm currently doing Linux Kernel programming at my internship.""I initially read that you were the 13 year old, that you were doing Linux Kernel programming but still wanted recs for a CS class!Anyway, cs50 is great. You say you want to avoid scratch, but note that the first week of cs50 is a gentle intro via scratch. Scratch is great for beginners though if he hasn't had any experience. I've introduced a 10 year old to scratch and it's pretty phenomenal to see them get their head around basic programming concepts and talk about them without necessarily having to take on a text based syntax. It's excellent preparation for taking on that text based language because you already understand how things work conceptually, learning your first text language is just adapting the concepts you know to new syntax.",plasterdog,2025-07-26 00:32:35,1,learnprogramming,t3_1m94naj,False,
n5712sx,I mostly just learned by programming in x86 assembly. Kinda hard to not learn about computer science when you're programming in assembly.,Fine_Yogurtcloset738,2025-07-26 01:46:40,1,learnprogramming,t3_1m94naj,False,
n590sqd,I believe codecombat has CS. It’s a great tool for beginners,Euphoric_Schedule_53,2025-07-26 11:47:05,1,learnprogramming,t3_1m94naj,False,
n56dy5s,"Geez wow, you must have so much knowledge! Hope to get there someday. Out of curiosity, where did you end up after all these years of CS? Has it been a fulfilling career?",MasterSkillz,2025-07-25 23:27:46,1,learnprogramming,t1_n55zj0l,True,
n4urzj2,"I don't really know what you mean by keep track of it. I check things into GitHub, create issues for bugs or features, and leave comments in the code",grantrules,2025-07-24 06:21:29,3,learnprogramming,t3_1m7wqyi,False,
n4usalm,"I think there’s a lot of influencers that make content about apps… and use the apps to make the content… and buy more apps…. Like a weird cycle. I’ve found work world is a bit more dynamic. In an office environment, Whiteboard, keep a list of all tasks. start the day and pick your top 3-4 priority tasks and check them off. As you end the day, remove from your master list. Also good if you can plan your next day before you wrap up work. Physically crossing off the tasks is addicting! Then write those 3 things you do in a spreadsheet or notebook.If you have a manager, they will love if you ask them the rank of priority of tasks every week if they dont tell you already.Another easy way to do it digitally is email yourself all tasks you need to do and then store those emails in a “completed” folder after doing them and voila you’ve got them all in one place.",crizty9,2025-07-24 06:24:12,1,learnprogramming,t3_1m7wqyi,False,
n4utorf,"If you're talking about a ""to do"" list for programming tasks, many people use a bug tracker / issue tracker. It doesn't have to be just to track reported bugs, you can use it for feature requests, tasks to complete, milestones to accomplish on your way to completion.If your project is on GitHub, there's a free issue tracker there. Then when you make a PR you can associate it with an issue and have it automatically close the issue when you merge it. That ties the work you do directly to the issue tracker.If you want a commercial third-party one, Linear is pretty slick.Jira is widely used but often very complicated and not worth it for a smaller project.",dmazzoni,2025-07-24 06:36:46,1,learnprogramming,t3_1m7wqyi,False,
n4utxqp,"What I meant is that, sometimes when I’m coding, an idea of a future enhancement/feature comes up to mind, something that in the moment I cannot implement but that I should not forget, and I just wanted to know if there’s a better way to record that rather than using a regular notepad.",MiguelaReads,2025-07-24 06:39:00,2,learnprogramming,t1_n4urzj2,True,
n4uuo0n,Thank you!,MiguelaReads,2025-07-24 06:45:34,1,learnprogramming,t1_n4usalm,True,
n4uum6b,Thank you! I’ll check them all!,MiguelaReads,2025-07-24 06:45:07,1,learnprogramming,t1_n4utorf,True,
n4uusio,"There's all sorts of project management software out there from free to enterprise-grade. I don't have any specific recommendation, but you'll find some by googling and you can try them out. You could start with GitHub issues",grantrules,2025-07-24 06:46:42,3,learnprogramming,t1_n4utxqp,False,
n4uws5e,"Trello is pretty good for that. In the real world many companies use Jira, but that might be over complicated for a newbie.",KCRowan,2025-07-24 07:04:33,1,learnprogramming,t1_n4utxqp,False,
n4yganl,"Try tools like Notion, Obsidian, or Trello - they’re great for organizing ideas, tracking tasks, and even linking notes to code projects.",alpinebuzz,2025-07-24 19:31:10,1,learnprogramming,t1_n4utxqp,False,
n4zbch9,That’s good to know! Thanks!,MiguelaReads,2025-07-24 21:59:12,1,learnprogramming,t1_n4uws5e,True,
n5triip,"I'm just as new as you, and I've found that you only need basic HTML and CSS knowledge to start learning JavaScript. A brush up on ""How the web works"" is also helpful.",rabeeaman,2025-07-29 17:15:52,3,learnprogramming,t3_1mch7vk,False,
n5uyboo,"No don't start something else unless you want to remove yourself from Web dev :smiling_face_with_smiling_eyes: Htlm+css->javascript->nodejs is a good route to get more advanced and then it's alot more easy to transition into something more advanced.You can't get around Js if you do Web dev and that's where you start getting you page to do something else than just be a static page.Js also gives you the basic syntax understanding, if you later want to dive into other langs.",TomatoEqual,2025-07-29 20:34:40,2,learnprogramming,t3_1mch7vk,False,
n5v1z3y,"My thinking was that a programming language (say Python or C#) might be easier to learn the fundamentals/concepts, before JS ?Was just wanting to see what people thought so cheers for the input",GreenLion777,2025-07-29 20:51:36,1,learnprogramming,t1_n5uyboo,True,
n5v6l77,"Python is actually really bad for the fundementals :smiling_face_with_smiling_eyes: Yes it's really easy to get started on and you get the basics, but syntax wise it does not really look like other C based langs, which makes it difficult to transition into something else. C# or Java is really good for getting started if you don't care about web. Js have the advantage that you need notepad and a browser and still offer the basics you need to code and the syntax looks like 90% of erything else. So it more comes down to what would you like to do. C# (i don't have much exprience with it) have it all, but it's big and heavy and it escalates quickly if you want gui. Java is the same, but forget gui, it's mainly shit.Js have the coding stuff you need and you can slab some HTML on top of it with relative ease, but no real command line options, which is nice for just playing with data. :smiling_face_with_smiling_eyes:",TomatoEqual,2025-07-29 21:13:20,2,learnprogramming,t1_n5v1z3y,False,
n5vtx82,"Well that's not wot I expected. Knew Python was one of the easier languages to learn or start with, kind of assumed it was good for learning the core fundamentals of programming too. Interesting.So as well just going with JS, thanks for the insight :thumbs_up:",GreenLion777,2025-07-29 23:14:07,1,learnprogramming,t1_n5v6l77,True,
n5qnaik,Youre a Jr…asking for help is pretty normal. You just need to make sure youve at the very least googled the issue or understand the issue. You take that information and ask for help because sometimes the online solution might not be the best in the project youre doing.,d9vil,2025-07-29 04:44:37,7,learnprogramming,t3_1mc1a0f,False,
n5skfxv,"Ur gonna feel this way for a while, just accept it and keep learning",Neomalytrix,2025-07-29 13:52:35,3,learnprogramming,t3_1mc1a0f,False,
n5r1gtx,"I can understand your experience. Just know at the end of the day, no matter how it’s achieved, you’re getting work done and making progress. My main tips-don’t let chat gpt drive the bus. You drive the bus. What I mean is make sure you’re actively thinking abt the code you want, and not just blindly copy and pasting. This is what juniors have always done even with stack overflow- know when to ask questions. Are you completely lost in what the requirements are or do you have some idea and are somewhat oriented. Balance those two and you won’t bother anyone",WannaBeDev01,2025-07-29 06:47:07,2,learnprogramming,t3_1mc1a0f,False,
n5rdpwt,"Totally get where you’re coming from—most of us feel lost at some point, especially when jumping in without a CS degree. Focusing on core debugging, common design patterns, and real-world problem walkthroughs can really help.",irinabrassi4,2025-07-29 08:44:16,2,learnprogramming,t3_1mc1a0f,False,
n5rls2u,What exactly is your role? I know you said you got into your position by vibe coding something but is that what you are still working on? Are you focused on the entire project scope or do you have more specialized assignments? I would think that trying to build the entire project alone as a jr dev would be a pretty tall task for most people so maybe it’s best to focus on one area/language and get proficient in those before moving on to the next. You can use ai to help develop a lesson plan or learning path based on your project.,Dingbats45,2025-07-29 10:01:26,2,learnprogramming,t3_1mc1a0f,False,
n5qjzlr,"The simple answer is that you need to learn to program, and when doing so never use AI to produce code that has the answer written. You can still ask AI questions about code, similar to how you may ask Reddit or Stack overflow, but don't let it do the code for you if possible.I know that is an extremely broad answer and not the specific one you want, but it's the answer you will end up following no matter what you do if you want to keep being a programmer.Seeing that you have 2 months experience and seemed to have relied on ""Vibe Coding"", I would just assume you know little to nothing about programming. This isn't to insult you, but it's probably a fairly accurate description of where you are.You've taken the first steps to learning, which is great! However, like anything else in life, it will take you time to learn how to actually program. I don't know what you are working on specifically so I'm not sure how good of advice I can give, but the two sources I could recommend are:Y. Daniel Liang's Introduction to Java Programming and Data Structures: This is basically the book my school taught from for a lot of it's courses, and I think it does a pretty good job. Others would have to give their thoughts on it however. Also, you would need to buy it.The Odin Project; TOP teaches front end development first, think website pages, and transitions to more back end stuff later on. I have only completed their first course so I don't know what comes after, but it does a good job of teaching the concepts. This one is free and at your own pace, so it can be flexible around your schedule.(Also there is a course called CS50 from some school that is said to be good for learning introductory programming which is free. I haven't taken it, but lots of people recommend it.)The last piece of advice I can give is that you speak honestly with whoever your boss is and try to get a programming mentor at the company. They will be able to teach you hands on, and will probably be the closest thing to an actual teacher you can get.Remember, avoid using any AI to code for you or directly show the solution to problems you are having, but you can still use it to ask about concepts and ideas. If you get exceptionally stuck, you can ask it for a solution (people ask for solutions on the internet in other places like Stack overflow, so it isn't absolutely wrong to do so) but try to make sure you've done just about everything you can to solve it by yourself first.",Blade21Shade,2025-07-29 04:19:33,2,learnprogramming,t3_1mc1a0f,False,
n5tfte1,"Sorry but 2 months of experience and calling yourself Junior is not right, you are not a Junior",Nok1a_,2025-07-29 16:22:08,0,learnprogramming,t3_1mc1a0f,False,
n5ru9fm,"It’s a full stack role at a decently sized company. I’m working on the actual product. I feel it’s mostly backend/SQL with some frontend, but the bugs that are tough and unsolvable are mainly the backend/SQL. Kinda answer my question a bit just typing this. Maybe that’s where I gain the most.",No_Complex_2603,2025-07-29 11:12:27,2,learnprogramming,t1_n5rls2u,True,
n5ujpxs,"I’m not calling myself a junior dev, the role is a jr dev role. Sorry for the confusion. I would assume the expectation of my skills is to be that of a junior dev, which I’m trying to get too.",No_Complex_2603,2025-07-29 19:25:31,1,learnprogramming,t1_n5tfte1,True,
n5osh31,"To all following commenters: please, do not bring up the old circlejerk jokes/memes about recursion (""Understanding recursion..."", ""This is recursion..."", etc.). We've all heard them n+2 too many times.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*",AutoModerator,2025-07-28 22:04:58,1,learnprogramming,t3_1mbtvx1,False,moderator
n5otjck,"You need to be really solid on the fundamentals so you can build on them without hesitation or questioning yourself. Otherwise the next level is going to be very difficult. It's the same as math, we learn basic operations to the point where they are second nature and almost mindless and then we expand on the concepts one level at a time. You don't want to be shaky on the basics when trying to move forward. Control structures, basic data structures, syntax should be memorizing multiplication tables. You don't have to think about them anymore and can move on",no_regerts_bob,2025-07-28 22:10:35,3,learnprogramming,t3_1mbtvx1,False,
n5ovgjz,"I've always found a mix of top-down and bottom-up understanding very helpful.When you write a recursive function, for example, it's a very high-level description of what you want to happen. Mathematically, it's proof by induction: you're really writing a set of rules which in combination will force a result into existence.But it's also executed in a very low-level, very mechanical way by whatever language you are using. Add some prints and watch EXACTLY what happens as your function executes.The trick is to see both these views at the same time. Programming is all about writing a specification which when executed will compute the result you want.Theoretically, these two views are denotational and operational semantics, if you want read more.",catbrane,2025-07-28 22:20:46,1,learnprogramming,t3_1mbtvx1,False,
n5owk8z,"Recursion isn't a complex theory, and it's literally convertible to (and from) iteration. If you can understand doing something repeatedly, you can understand recursion.I don't mean to discourage you if it hasn't clicked yet, but to encourage you that once it does click, you'll have trouble understanding what the issue was.Breadth-first search (and depth-first search) fall out naturally when you look at graphs ([these ones](https://en.wikipedia.org/wiki/Graph_(discrete_mathematics))) and consider how to start from one node and visit all the others. Just ignore all the maths on that page unless you really want to get into discrete maths - the pictures are enough to get an idea.Both of these turn out to relate to the difference between stacks and queues (LIFO and FIFO lists): breadth-first search works like iteration with a queue, and depth-first search works like recursion, with a stack.That's all fairly woolly, but the point is that these things are all related, understanding one will make the others easier, and learning the relationships will help to cement that understanding.",Kriemhilt,2025-07-28 22:26:40,1,learnprogramming,t3_1mbtvx1,False,
n5qtgho,N-back exersions and the Satori game.,Alaska-Kid,2025-07-29 05:34:57,0,learnprogramming,t3_1mbtvx1,False,
n5m0ova,Here for the responses. Good luck bud :thumbs_up:,Smokeyninja04,2025-07-28 14:09:46,3,learnprogramming,t3_1mbgto9,False,
n5m3a2b,"The market is not the same as before, where a few courses / bootcamp would get you a job offer.Therefore a degree will help you these days. That's the advantage of following the uni pathLearning by yourself takes a while and you'll likely hit roadblocks and get stuck at some steps. But it's doable.And you can also join communities/groups to help you along the way.Or find a mentorI'm happy to help if you have questions",The_Octagon_Dev,2025-07-28 14:22:48,2,learnprogramming,t3_1mbgto9,False,
n5m3gwt,Worth also looking into degree apprenticeships so you can work and have your employer pay for your degree. They’re closed for September entry now but will be opening applications for next year (bear in mind they’re highly competitive though!) There’s also level 4 apprenticeships which are generally open all year round as they’re not tied to university dates.,Knit-For-Brains,2025-07-28 14:23:46,2,learnprogramming,t3_1mbgto9,False,
n5r2zdn,"Honestly, both routes can work—some folks skip the degree, land a junior tech job, and build up from there, especially with a strong portfolio. Uni can help with structure and networking, but it’s not a must.",Dependent_Gur1387,2025-07-29 07:00:57,2,learnprogramming,t3_1mbgto9,False,
n5upc68,"Thought I'd respond since I've been in a similar-ish boat and I'm around the same age, trying to get a software engineering job.* Open Uni: I tried juggling it alongside full-time hospitality work and it was hard. Doable, but hard. I also found their first-year CS modules a bit irritating because of how simple they were, really. I love their approach: starting small so you can succeed in your course regardless of your qualifications, but if you have any existing skills in coding, wasting your already limited free time in Scratch can be... frustrating. I ended up using my OU grades to move to a ""brick"" uni full-time, so I could get a maintenance loan and have a part-time job. Served me well. Still, I'd say that OU is better than nothing - why?* Degree: Let me phrase it like this - I'm doing an engineering PhD, and my friends in software were surprised that I got any interviews without a degree specifically in CS - and that is with a few projects in my portfolio and a tech part-time job I did during my undergrad. Another thing I'd consider is how much drive you have to go through the ""boring"" but necessary aspects, like algorithms and data structures, without uni forcing you to do so. You can build a portfolio without them, but my rusty knowledge in the area backfired against me in many interviews for junior or even intern positions.Tl;dr: Imo a degree may help you a lot because getting your foot in the door is quite hard. If you manage to get a low-level tech job, this may be a way to go, too, but even this might me a challenge (especially if you don't want to be paid very little).Good luck!",michauangelo,2025-07-29 19:52:25,1,learnprogramming,t3_1mbgto9,False,
n5m6ihv,"Thanks a bunch. I’ve thought a lot about learning on my own, and I’ve basically come to the conclusion that I’ll eventually need to connect with people whose careers are in this field. A mentor who’s actually in the industry would benefit me greatly, and I would 100% seek one out eventually.Where I am with my education currently, I think I’d have a hard time finding someone who’s genuinely willing to be a mentor — not just someone looking to stroke their own ego, as that seems to happen a lot. In my opinion, it’s hard to find someone truly willing to sacrifice their time and share their knowledge for the sake of helping an individual to the extent that a real mentor does.",gen-cy,2025-07-28 14:38:46,2,learnprogramming,t1_n5m3a2b,True,
n5m7e5f,"So I did look into these at first, and even applied, but I hit two roadblocks. The first was that I’m too uneducated to convince someone to take me on (I have A's in my GCSEs but didn’t go to college). The second was that the pay being offered wouldn’t be enough to support me and my girlfriend — making the option of working while in full-time education actually more feasible weirdly.",gen-cy,2025-07-28 14:43:01,1,learnprogramming,t1_n5m3gwt,True,
n5v0psj,What did you need to move to a brick uni? and why did you not do that originally?Would it be possible for me to do this halfway through or do you have some extra qulifications?(as stated I do not have A levels just GCSE's as I went straight into work after high school),gen-cy,2025-07-29 20:45:48,1,learnprogramming,t1_n5upc68,True,
n5nee8t,I'm willing to be a mentor - Sent you a dm :),The_Octagon_Dev,2025-07-28 18:03:22,1,learnprogramming,t1_n5m6ihv,False,
n5mkcuo,"That’s fair - some of the degree level courses pay well but yeah you’d struggle to land one without a levels. I think OU sounds like the better pathway, or if you can manage it, both (and complete the OU course part-time). So you come out with some tech experience and the degree - and can potentially transfer within company after a year or two if you’ve got your foot in the door already",Knit-For-Brains,2025-07-28 15:44:54,2,learnprogramming,t1_n5m7e5f,False,
n5lcnlk,"Hey there, I can helpDiscord?",The_Octagon_Dev,2025-07-28 11:48:55,2,learnprogramming,t3_1mbdjtv,False,
n5mfoop,"Hey, I'm pretty much in the same boat. I haven't done PHP in around 7ish months due to large burnout in my last college semester balancing OJT and a few projects at once, and now, a full-time job in tech. I did enjoy PHP while I was doing it, I think the major issues stem from sessions not clicking in raw PHP, but they did in the Thymeleaf template engine for Java SpringMVC projects. Discord if interested: tanksrus_ca",FreightTrain75x,2025-07-28 15:22:49,1,learnprogramming,t1_n5lcnlk,False,
n5kh099,"CSS is more about testing the waters than learning it linear.Watch a quick guide to get you started on basic concepts, and then start learning as you go. It's way too much syntax to just learn it as you did with HTML.",ItzRaphZ,2025-07-28 07:03:46,2,learnprogramming,t3_1mb8vvn,False,
n5kgeal,"Freecodecamp , this is how I learned front end!",wirrexx,2025-07-28 06:58:06,1,learnprogramming,t3_1mb8vvn,False,
n5khi2r,Always the usual:+ [FreeCodeCamp](https://freecodecamp.org)+ [The Odin Project](https://theodinproject.com),aqua_regis,2025-07-28 07:08:19,1,learnprogramming,t3_1mb8vvn,False,
n5kmqeq,"We're the same, just recently finished the HTML and will be studying CSS sooner, W3schools are the site that i've been visiting/using to learn",Halocauste,2025-07-28 07:58:50,1,learnprogramming,t3_1mb8vvn,False,
n5kvr74,Mozilla webdev docs,mrbaggins,2025-07-28 09:27:36,1,learnprogramming,t3_1mb8vvn,False,
n5fgsvt,"Buy a C++ book (Deitel & Deitel worked for me) and read it front to back, do the exercises. It will take some time for the concepts to seep in but they will eventually. Try to do at 2 hours a day, 5 days a week if you can.",PeterBrobby,2025-07-27 13:25:48,2,learnprogramming,t3_1mam3qk,False,
n5fnkk7,"Great thanks heaps, I will start that right now.",DirectionNo9178,2025-07-27 14:04:32,2,learnprogramming,t1_n5fgsvt,True,
n5aldzu,"> Not looking to promote anything, just genuinely curious.You are lying. In another post of yours:> I'm working on making an AI-powered learning tool named Alif that can transform your PDFs, notes, or lecture audio into:This is just camouflaged interest gauging.",desrtfx,2025-07-26 17:10:47,20,learnprogramming,t3_1m9xine,False,
n5acyqx,"Just do projects. That's it. The more you actively program, the better you will become.Think back when you learnt to write. You wrote countless times. You wrote words, you wrote sentences. You didn't just read books. You wrote.Especially, stop video tutorials, except for short, specific topics.",aqua_regis,2025-07-26 16:27:06,6,learnprogramming,t3_1m9xine,False,
n5aen9n,Write code,no_regerts_bob,2025-07-26 16:36:04,4,learnprogramming,t3_1m9xine,False,
n5ajdq5,"Just curious, were you self-taught? That is, no formal training with a live teacher.I'm sure different techniques work for different people, so whatever works for you is best.",CodeTinkerer,2025-07-26 17:00:34,1,learnprogramming,t3_1m9xine,False,
n5akmqc,Got tired of living vicariously. Got more satisfaction creating stuff myself.,Ksetrajna108,2025-07-26 17:06:57,1,learnprogramming,t3_1m9xine,False,
n5ald4k,"Do projects. Start with very small projects and break down each feature into smaller parts so they are more doable for you, and you will feel fulfilled and motivated when you complete each small part.Small victories keep you motivated and moving forward. Don't try to make Facebook on your first project.And do - not - use - AI autocomplete or to write code!! Use it for debugging or ask it questions about the coding language itself, but don't let it code for you. Use it as Google.",MihaelK,2025-07-26 17:10:40,1,learnprogramming,t3_1m9xine,False,
n5atl5d,"You have to actually build things. I built things, then I watched videos of skilled developers talk about architecture, then I changed things and built more things better this time. Rinse and repeat.",Moloch_17,2025-07-26 17:52:21,1,learnprogramming,t3_1m9xine,False,
n5av3vn,Try typing out the examples by hand and running them yourself.This is helpful even for experienced programmers. A very accomplished Ruby programmer once remarked about how helpful it was for him as he was learning Rust to type out the examples from the book and run them himself.You’re learning language. It helps to reinforce that with both receptive (reading) and expressive (writing) language exercises.,jonwolski,2025-07-26 18:00:11,1,learnprogramming,t3_1m9xine,False,
n5b02zw,"Just build shit, bro. You'll learn it as you need it. There's no better way to get something into your long-term memory than actually needing it and using it.",UntoldUnfolding,2025-07-26 18:26:19,1,learnprogramming,t3_1m9xine,False,
n5b5508,Got a job at a startup lol,born_zynner,2025-07-26 18:53:34,1,learnprogramming,t3_1m9xine,False,
n58lkjt,If you want to be a web dev you don’t need to learn C++ so stick with JS.,DevALWaleed,2025-07-26 09:32:27,6,learnprogramming,t3_1m9p24e,False,
n58mg29,"Completely depends on what you want to do. If you’re going down the web dev route you won’t really need C++. C and C++ are mostly used for game dev and embedded software.If you’re looking to build websites I’d stick to the JS route. It can do everything you need and it’ll be an easier transition to progress along the way. If you want to do mobile apps, that’s mostly done with Java all Android phones are based on on Java so that’s the easiest way to get in there but I know some apps are built with JS like a website and ported across like a container for the mobile app. Java is also hand for desktop applications with easy drag and drop GUI design that does everything in one place. If you let us know what you’re thinking of doing we might be able to give a bit more accurate advice.",Immereally,2025-07-26 09:41:15,2,learnprogramming,t3_1m9p24e,False,
n58mhrs,"Your answer depends on what you want to use the language for. Web dev? Stick to HTML, CSS, and JS. Game dev? Jump to C++. Something else? It depends",Kind-Kure,2025-07-26 09:41:43,1,learnprogramming,t3_1m9p24e,False,
n599bgx,"The jump to c++ is crazy, not only because it's not web related like html and css, but also it will be your first programming language. Going from markup and styling to a proper language it's already a big jump, I'ld stick to javascript and typescript, if you want to keep it in the same area. [Roadmap.sh](http://Roadmap.sh) is a good place to find a path, kinda bloated imo but useful.",Stunning_Neck_2994,2025-07-26 12:46:13,1,learnprogramming,t3_1m9p24e,False,
n59uy96,"As most have said it depends on what you want to do. If you’re just building up skills though here are some tradeoffs to consider:- Web development has kind of forced its way into everything now. Knowing JavaScript is kind of like speaking English: it may not always be the most appropriate language to use but because so many people speak it you can kind of get around anywhere with it. Websites? Desktop apps? Mobile apps? Backend servers? Robots? You name it and there’s probably a way to do it with javascript.- Web development, however, is all very high level, meaning there are several layers of abstraction between the code you write and what’s actually happening down on your system hardware. A rarer and more valuable skill set these days is knowing how low level systems work, because without that knowledge, you’ll never really be able to understand how to write performant code. It also offers a lot of perspective on why things are the way they are in high level languages, which can be useful from time to time. C++ is still considered pretty high level but since it’s an extension of C there are more low level concepts to there to explore. At the very least it lets you interact directly with the operating system as opposed to JavaScript which runs in its own isolated environment inside your browser.",Quantum-Bot,2025-07-26 14:52:41,1,learnprogramming,t3_1m9p24e,False,
n5b212e,All the above.,augurone,2025-07-26 18:36:50,1,learnprogramming,t3_1m9p24e,False,
n5ronxb,use AI,yasniy97,2025-07-29 10:27:22,1,learnprogramming,t3_1m9p24e,False,
n58p8k5,"Yes, start sales or something",ZubriQ,2025-07-26 10:08:12,0,learnprogramming,t3_1m9p24e,False,
n58p98q,"I don’t know much about the industry yet, like what’s in demand. I was thinking maybe I could work at a company for 3–4 years, and then use the experience and knowledge I gain to move on and do my own thing.",DogLaikaaa,2025-07-26 10:08:23,1,learnprogramming,t1_n58mg29,True,
n59d9vw,Thx I'm kinda new so I dont really know :p,DogLaikaaa,2025-07-26 13:11:23,1,learnprogramming,t1_n599bgx,True,
n56okht,"If you make the request in the browser, then find the request in dev tools, you can right click, then copy as -> curl. Does that curl command work? If so, what are the difference between that curl command and the one you made?",grantrules,2025-07-26 00:29:39,1,learnprogramming,t3_1m9eu96,False,
n56v124,"And if the cURL command does not work, it's either because:- the request has a limited use, e.g. single-use token or time validity- there is an anti-bot protection on the API, and it uses TLS fingerprinting (also called JA4) to identify real browsers vs cURL",mathishammel,2025-07-26 01:08:48,2,learnprogramming,t1_n56okht,False,
n539owj,You don’t charge extra for it. There’s an expectation if you’re being paid to write code you do it well. Refactoring is part of the process. Depending on how messy the code is and what the client expects I might refactor or might just ship it and get paid. Generally the amount of quality depends on how much is being paid and how much time I’d have to work on it. If you’re paying minimal amounts and want it asap you get what you get,CodeToManagement,2025-07-25 14:17:16,17,learnprogramming,t3_1m902ji,False,
n538bce,">do you refactor your code before delivering it to the client?Sometimes, if it needs restructuring and I have time to restructure it before deadline>do you charge extra for it?No. In the same way I wouldn't bill extra for writing tidy code in the first place.",zeocrash,2025-07-25 14:10:25,6,learnprogramming,t3_1m902ji,False,
n53a5yw,"Refactoring means that you rewrite the code to do the same thing that it did before... so why charge the client extra for delivering the same thing.  From their perspective, it does what it does regardless of what is under the hood.   So do you think it is fair to charge them more for what is the same thing?  (Exception being the clients are themselves engineers maintaining the code).",throwsFatalException,2025-07-25 14:19:37,4,learnprogramming,t3_1m902ji,False,
n53dlho,"If the client is non-technical they could care less, they just want it to work.",Rain-And-Coffee,2025-07-25 14:36:04,4,learnprogramming,t3_1m902ji,False,
n53n2z3,"Fast. Cheap. Good. — Pick 2. One question is: what did the client pay for? If they didn’t pay you much, and they want it now. Then they didn’t pay for clean code - just code that works. So if it works, don’t waste your time (which is also your money) refactoring it.Another question is: will this be your problem in the future? Will you be maintaining it for the client? If so, maybe you want to clean it up some in order to make life easier for future you. Or, and I’d go this route, when future you has to make changes, refactor it then and make that time part of your estimate. Don’t work for free. But… if after delivery, you want to do it on your own time for your own learning and progress, go for it. But anything you deliver to a client should be paid for.",Roguewind,2025-07-25 15:20:21,4,learnprogramming,t3_1m902ji,False,
n5384ud,"Is it working, and signed off by client and you got paid?Yes?Leave it the fuck alone.",bravopapa99,2025-07-25 14:09:32,5,learnprogramming,t3_1m902ji,False,
n54msxr,"I usually take a cleanup pass over new code a week before release, with the explicit purpose of helping my future self (or the next poor schlmiel) work on it in future. I often find something I overlooked when I do that. I add JSDoc (or whatever language’s) method and property comments at that time.A thousand lines is hardly worth worrying about, *unless* those lines are all inside a small handful of methods.",Aggressive_Ad_5454,2025-07-25 18:05:45,1,learnprogramming,t3_1m902ji,False,
n54sp9w,"1. Chances are, the client won't even care2. Whoever needs to update that code later has to deal with the mess. That could be someone else, or it could be you.Some people actually make code messy just so others don't want to deal with it.",mxldevs,2025-07-25 18:34:04,1,learnprogramming,t3_1m902ji,False,
n55h2jf,"To paraphrase Da Vinci: ""Code is never finished, only abandoned.""When code finally works it's not done, it's a mess of paths that led to success with a whole lot of dead ends still hanging around. There going to be stuff you didn't really need, over engineering, premature abstraction, the usual project creep.The bare minimum is an initial refactoring to avoid personal embarrassment. After that, if you have time, there's always more that could be done.Ideally, the code should be in a state where it can be easily maintained. Where the next feature can be added or modified with minimal effort. Getting to this state can be a luxury, as it takes extra time for code that already works, but it should be the goal.",WystanH,2025-07-25 20:33:30,1,learnprogramming,t3_1m902ji,False,
n57t5b5,"I charge by the hour, and that includes for refactoring. Of course, I try to write as tidy and idiomatic code as I can to begin with.",Pale_Height_1251,2025-07-26 05:04:58,1,learnprogramming,t3_1m902ji,False,
n51vgnb,"I actually recommend the official online docs at [https://dev.java/learn](https://dev.java/learn) \- they are surprisingly well-written, very in-depth, and up to date with the latest releases of the JDK. Also, you can skip around in them, easier than any paper-book :)",peterlinddk,2025-07-25 08:25:53,5,learnprogramming,t3_1m8t2w7,False,
n51vfxk,Start with the MOOC [Java Programming](https://java-programming.mooc.fi) from the University of Helsinki.,aqua_regis,2025-07-25 08:25:41,2,learnprogramming,t3_1m8t2w7,False,
n51um28,Java for Absolute Beginners: Learn to Program the Fundamentals the Java 9+ Way,infoedgefan,2025-07-25 08:17:40,1,learnprogramming,t3_1m8t2w7,False,
n51v7js,I recommend objects first with Java. Skip the Bluej and go straight to your ide of choice.I teach with this combo for a masters in CS course in introductory programming,freedomfever,2025-07-25 08:23:26,1,learnprogramming,t3_1m8t2w7,False,
n557iak,Books? Why not start with a few java 101 courses and then just do a project of some sorts. Its more intuitive to learn as you go + if you do something worthy you help grow open source,Practical-Drawing-90,2025-07-25 19:46:54,1,learnprogramming,t3_1m8t2w7,False,
n517m9m,"Do what you are passionate about the most. Cliche I know but if you’re not, you will hate your life.",ReiOokami,2025-07-25 04:54:55,2,learnprogramming,t3_1m8q7gj,False,
n51i92r,"If I were you and trying to get into which programming language to choose from, I would say go for Cpp or Rust, they are high in demand and have steep learning curve, most people will avoid getting into it. Python/Java devs are dozen for a dime!",rtalpade,2025-07-25 06:23:18,2,learnprogramming,t3_1m8q7gj,False,
n51alan,"Personally, I think it's more preferable for your internship or on-the-job training to be more related to what you have learned in college or plays well to your strengths. In my case, my OJT involves maintaining and adding features in a mobile game made in Unity, of which I learned in my college for a semester at that point in time. That way, you may learn new certain things or outright a new framework that you may or may not use for your personal projectsPoint is, get your strengths stronger. Prioritize your interests first. If you don't wanna pursue web development now, then just don't unless you're out of options.",Danque62,2025-07-25 05:18:33,1,learnprogramming,t3_1m8q7gj,False,
n50nxv9,"TTF fonts don't contain the right kind of information to do what you want. A TTF contains curves representing the *outlines* of characters, [like in this example.](https://graphicdesign.stackexchange.com/questions/101761/the-description-and-interpretations-of-truetype-font-points-and-curves) If you click that link and look at the diagram of a lowercase letter `a`, you'll see that it consists of two closed curves: one defining the outer boundary of the letter, and another one for the ""hole"" inside the loop. There's no straightforward correspondence between those outlines and the pen strokes a human might use to draw a letter that looks similar. (For instance, a lowercase `t` consists of a single outline but would be drawn with two strokes. A capital `H` has one outline and is drawn with three strokes. An `O` has two outlines, and is drawn with only one stroke.)For the kanji diagrams you're talking about, somebody had to manually draw each character's strokes in a vector graphics program. This data was released for free by the [KanjiVG project](https://kanji.sljfaq.org/kanjivg.html) and now lots of other websites and apps use it.A bit of googling turned up [this project](https://github.com/brownvc/decoupled-style-descriptors) for the Latin alphabet. It includes a dataset with letter strokes from a bunch of actual people's handwriting, plus a data-driven algorithm to generate new variants by interpolating between them. You might find it useful as a starting point.Once you have the strokes, animating them is fairly straightforward e.g. by varying the SVG `stroke-dasharray` and `stroke-dashoffset` properties over time.P.S. In principle, you could imagine using various computational geometry algorithms to extract the [""skeleton""](https://scikit-image.org/docs/0.25.x/auto_examples/edges/plot_skeleton.html) of a letter in a TTF font, and then try to reconstruct a set of strokes from that. But getting something that works reliably and gives good-quality results would likely be a very challenging project, IMO. Certainly much more difficult and time-consuming than just redrawing the letters by hand.",teraflop,2025-07-25 02:38:23,10,learnprogramming,t3_1m8mhu6,False,
n50m5jm,"Found this while looking up resources for this, thought it was interesting: [https://www.calligrapher.ai/](https://www.calligrapher.ai/)I would approach this by finding a ""single-stroke"" SVG font (like [these](https://gitlab.com/oskay/svg-fonts/-/raw/master/samples.png), font files available [here](https://gitlab.com/oskay/svg-fonts/-/tree/master/fonts/EMS)), and use something like [svglib](https://pypi.org/project/svglib/) (Python) to read them, and then render them manually. This feels like a python kinda project, but it also depends on your familiarity. SVG fonts is a bit more of a rabbit hole than I'm gonna dig into right now, but this feels pretty feasible, although you might need to make your own font to get the strokes and directions to what you want.",rpgcubed,2025-07-25 02:27:11,2,learnprogramming,t3_1m8mhu6,False,
n53dxzm,"Assuming you have the glyph geometry as a vector path (and not the outline path, as another commenter points out, but the ""input"" non-stroked path), I think the easiest route would be using a Bezier curve library to extract an increasing percentage of the path, and draw that subpath. You'd then animate the percentage from 0->100%.You didn't mention what platform you're on, but on web Snap.svg has the `getSubpath()` method which can perform that operation, and on native, Skia has the `SkTrimPathEffect` API that can do the same. There are likely other libraries out there that have an implementation of a similar API.If you're interested in how this works, typically the input Bezier spline is chopped up into a bunch of tiny linear segments, which have very simple closed-form length and interpolation computations. To get the overall length of the spline, sum the length of the tiny linear segments. To get a % length of the spline, grab all the tiny linear segments up to that % of length.",parametric-ink,2025-07-25 14:37:43,1,learnprogramming,t3_1m8mhu6,False,
n510t3t,"That's a very cool project, thank you for the reference!",rpgcubed,2025-07-25 04:04:43,1,learnprogramming,t1_n50nxv9,False,
n51qgpc,"Ah, maybe I wasn't clear - I was already suspecting I'd have to redraw them for a specific font, and certainly wasn't hoping for a general algorithmic solution! Thanks for your response, though: you've given me lots of interesting directions to look into.",numeralbug,2025-07-25 07:38:19,1,learnprogramming,t1_n50nxv9,True,
n51qjgo,Very interesting - thanks!,numeralbug,2025-07-25 07:39:03,1,learnprogramming,t1_n50m5jm,True,
n4vvt9c,"If you've already made the frontend, and you're ready to begin implementing this feature, you can do this with [websockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API). You'll need to implement this both in the browser (frontend), as well as setting up a backend (which you can also do in JavaScript, via Node.js.)",abrahamguo,2025-07-24 12:03:31,1,learnprogramming,t3_1m81axp,False,
n4whdkf,So then is there a use for learning react js,DestrooYerr6969,2025-07-24 14:03:13,2,learnprogramming,t1_n4vvt9c,True,
n50lw9x,"Yes! React is good for interactive websites where a lot of content is changing on the page after it has loaded.However, it sounds like that's not the gist of the feature you're trying to build. If you're trying to build the multiplayer-communication portion, the core of that logic involves coordinating communication between multiple clients and your server, and that is not an area that relates to React.",abrahamguo,2025-07-25 02:25:35,1,learnprogramming,t1_n4whdkf,False,
n515nxu,Thanks man,DestrooYerr6969,2025-07-25 04:40:04,1,learnprogramming,t1_n50lw9x,True,
n4va5rx,So you want to make https://www.mywot.com/ ?,Salty_Dugtrio,2025-07-24 09:11:13,2,learnprogramming,t3_1m7ycdp,False,
n4waaxr,"> I just want to learn by doing.Then do it! It's a great project to learn on.As /u/Salty_Dugtrio pointed out [mywot](https://www.mywot.com/) exists, but it started out much like your project. > If anyone has resources, beginner-friendly guidesWithout knowing your skill level it's hard to suggest something.> how I could actually make the detection/warning parts work in a real browser extensionWell that is the magic isn't it? It depends on how you want to do the detection / warning. Based on what you've said it sounds like you wanna crowdsource suggestions and reports. So the obvious question is if a user ends up on a site without reports what do you show?",Digital-Chupacabra,2025-07-24 13:26:29,1,learnprogramming,t3_1m7ycdp,False,
n51sfk0,I really did not knew this existed. Thanks for this. I guess this is what I wanna build or may even add additional features or improvements to this as I upskill. Really thankyou for letting me know.,VishakhanPillai,2025-07-25 07:56:57,1,learnprogramming,t1_n4va5rx,True,
n5eeclp,"Hii, thanks for replying.My skill level is currently at a beginner level. I'm learning html, css and js. And my plan is to do this completely in MERN stack.For populating the backend DB I'm thinking of using openphish, phishtank, abuseIPDB etc..As for the sites that haven't been reported yet, I'm thinking of analyzing the site with LLMs or AI and identify for patterns that may identify as a fraud site. I don't know if this makes sense. It's just thing small though that came in my head.",VishakhanPillai,2025-07-27 08:03:42,1,learnprogramming,t1_n4waaxr,True,
n4rvcg3,"Absolutely okay. Scratch is a great introduction to programming.Scratch makes you *program* without having to worry about *syntax* and *keywords*. You can entirely focus on the *algorithm*.**Edit:** to the downvoters: do you really think that *Harvard* (and potentially other ivy-league Universities) and the *MIT* are wrong? Harvard uses Scratch in their CS50 course, Scratch was invented by the MIT specifically to teach programming without having to focus on syntax.",aqua_regis,2025-07-23 19:57:56,54,learnprogramming,t3_1m7jdq5,False,
n4svn5p,"Can’t speak on scratch but you know you’re not limited to one way of learning. There are a vast, vast amount of resources out there",OhStreet,2025-07-23 22:57:32,6,learnprogramming,t3_1m7jdq5,False,
n4rv51w,2 hours of scratch will unfortunately make you permanently unemployable.,JohnWesely,2025-07-23 19:56:59,29,learnprogramming,t3_1m7jdq5,False,
n4s1qn2,"Scratch is a good introduction. I found I felt quite limited very quickly by what it could do, but if I'd been a complete beginner when trying it, I imagine it would have been great.",Zentavius,2025-07-23 20:27:31,5,learnprogramming,t3_1m7jdq5,False,
n4s45l0,Scratch is #17 over Rust(18) and Kotlin (20)[https://www.tiobe.com/tiobe-index/](https://www.tiobe.com/tiobe-index/),ffrkAnonymous,2025-07-23 20:38:54,5,learnprogramming,t3_1m7jdq5,False,
n4sdene,"Scratch is fine, but python is free. When you run out of lives maybe you can practice python with something else?Whatever works for you is best though. If that's scratch, use it.",13oundary,2025-07-23 21:22:48,3,learnprogramming,t3_1m7jdq5,False,
n4sc8tj,Yes. Both Harvard and MIT has Scratch courses for the Computer Science. Scratch was developed by MIT to help introduce MIT students to programming. Why wouldn't it be okay to start with Scratch,Slight-Living-8098,2025-07-23 21:17:05,1,learnprogramming,t3_1m7jdq5,False,
n4snjuw,unrelated but good time management,SnurflePuffinz,2025-07-23 22:14:13,1,learnprogramming,t3_1m7jdq5,False,
n4t2xye,Don't forget that you can read books too.,Moloch_17,2025-07-23 23:37:05,1,learnprogramming,t3_1m7jdq5,False,
n4u5ut4,yeah using scratch is pretty usefull i would say. I mean my computer science class in highscore used scratch and did teach me a lot and you don't need to know each key word unless you want to and block coding is a pretty fun thing to do.,Any-Albatross-8700,2025-07-24 03:28:13,1,learnprogramming,t3_1m7jdq5,False,
n4qr0ju,"I would say, find a project you want to build then go build it. The book ”Spring start here” is a good resource to learn the basics of spring. I can’t give any recommendations in regard to React but I’ve heard that the React docs are really good. Do you know Java?",P90kinas,2025-07-23 16:52:26,1,learnprogramming,t3_1m7a0ed,False,
n4pnjs7,"did you learn programming in your own? if so, how long did it take you and what resources did you use? Good luck with the position, dont give up, im sure you can do it, it might suck for some time but you will get through t",toshkobz,2025-07-23 13:46:50,2,learnprogramming,t3_1m77eqk,False,
n4p5s9b,How much experience do you have with JS?What about with other programming languages?,abrahamguo,2025-07-23 12:07:23,1,learnprogramming,t3_1m77eqk,False,
n4p7krw,"I know people are in different situations and can't always act assertively, but I'd say first of all, don't feel any pressure if the job does not match what you've singed up to. Second, I'd say basic node is generally quite easy to pick up once you know JS, and AI handles it quite well as the code is usually rather predictable, so it should be able to meaningfully help you also. There's just a single fundamental technology at play (JS) and used in a similar way (web backend). I'd actually say node might be among the easiest environments JS can be used in, as simplified as this take is.Don't sweat it, communicate that it's not what you expected to do or are experienced in doing, and try to make the best out of it.",voyti,2025-07-23 12:18:33,1,learnprogramming,t3_1m77eqk,False,
n4pczlg,If you are an experienced programmer 4 days for JS essentials and two weeks for node.js is absolutely possible. But since this is r/learnprogramming I expect you are not an experienced programmer. What did you tell them about your experience when you applied for the job?,Slackeee_,2025-07-23 12:50:19,1,learnprogramming,t3_1m77eqk,False,
n50xpf2,"Yes, but the last time i picked up was last 6 months ago but for salesforce, i know it is a no to low code platform. however, i did not expect to handle code again, especially js for a long time. I have pointed this one out as well to my interviewer that I am willing to apply to salesforce but alas, they put me here and struggling. I might address this to them, if things go south and apply to other companies. They terminate as fast as the training if you did not pass the exam.Thanks for the encouragement!",P3rdie,2025-07-25 03:42:51,1,learnprogramming,t1_n4pnjs7,True,
n4p6107,"Well,HTML5 and CSS3, then js fundamentals, still remember it but i did not use it for a long time.",P3rdie,2025-07-23 12:08:54,1,learnprogramming,t1_n4p5s9b,True,
n4piqnr,"Thanks for the tip, I'll do that. for now I shall make the most out of it.",P3rdie,2025-07-23 13:21:27,2,learnprogramming,t1_n4p7krw,True,
n4ph1ao,I told them that it was a long time ago when i used js (10 years ago) and last six months from today was salesforce. my whole career was on IT support (hardware and networks) before i decided to shift.,P3rdie,2025-07-23 13:12:26,1,learnprogramming,t1_n4pczlg,True,
n5vy3ag,"Having a blog in a way keeps you accountable to keep growing and learning. It kinda trains your brain to continue posting your updates and journey towards reaching a goal or something. I've been blogging for over a year and it's a great way to express yourself, what you're making/doing, which in return, exercises your mind.",Dappster98,2025-07-29 23:36:36,3,learnprogramming,t3_1mcr3yp,False,
n5w1ccj,"That's great! I think it's a really cool way to tie my CS journey and my personal growth together. I'm glad someone with experience replied. If you have any feedback, please let me know about the entries I posted. I’d be willing to take it. Thank you!",ArmyNegative8748,2025-07-29 23:54:29,1,learnprogramming,t1_n5vy3ag,True,
n5w33al,"I think your blog (website) looks rather well designed. I think in my opinion, you should modularize it. Which means group things together in different pages. Right now it seems like you just have one page that has **everything**. This can start to get cluttered over time. My website has a blog page, an ""about me"" page, and a link to my github (a website where people store projects). You may want to consider splitting things into multiple pages to allow the various portions to become more pronounced.Other than that, I think you've got a fine start!",Dappster98,2025-07-30 00:04:19,2,learnprogramming,t1_n5w1ccj,False,
n5w3e2v,Thank you!,ArmyNegative8748,2025-07-30 00:06:01,1,learnprogramming,t1_n5w33al,True,
n5wjffw,"It's web site generated by Notion note taking web app, so i think it's not that customisable.",RealMadHouse,2025-07-30 01:38:41,1,learnprogramming,t1_n5w33al,False,
n5vjsig,"First, formatting:``` This Is Child Title Child Title Paragraph ContentSection Title```Alright, so, let's say we do what you say and remove `.parent` from the first entry:```/* ""A 'title' class with an ancestor that is a 'child' class */.child .title {color: red;}/* ""A 'title' class with an ancestor that is a 'parent' class */.parent .title {color: blue;}```Here, the second span matches only the second rule, so it should clearly be blue. But the first span is interesting. It matches BOTH rules! So which rule wins?Well, when multiple CSS targets apply, we need to decide on precedence. Unfortunately, precedence in CSS is quite complicated. Here's a cheat sheet: https://i.sstatic.net/3yXPf.pngThe short version is that when you include the "".parent"" in the first rule, its specificity score is higher than the second rule, which means that it takes priority. But when you don't include it, the second rule wins.",captainAwesomePants,2025-07-29 22:20:00,2,learnprogramming,t3_1mcobgp,False,
n5tl7xl,/r/programmingbuddies is the place for such posts,aqua_regis,2025-07-29 16:47:20,1,learnprogramming,t3_1mcf9yz,False,
n5sa710,"Change your mindset.**FAQ** -> [I lost my motivation for programming/It is difficult to maintain my motivation](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_i_lost_my_motivation_for_programming.2Fit_is_difficult_to_maintain_my_motivation) - make sure to read the included articles.You have barely scratched the surface of programming, barely started learning. You need to learn to push through harder times.",aqua_regis,2025-07-29 12:56:46,5,learnprogramming,t3_1mcalza,False,
n5sk7ds,"Well, nobody's forcing you to learn. What made you choose to start learning to program? If the answer is simply ""to get a high-paying job"" and you're bored after 1 week, maybe programming isn't for you, which is totally fine.",grantrules,2025-07-29 13:51:22,3,learnprogramming,t3_1mcalza,False,
n5shj3q,"There's a reason programmers are paid well. It's not easy to program. Many beginners think it will be easy to pick up programming. Some do pick it up easily. Their brains seemed suited to algorithmic thinking. Others find it tedious.It's like those who lift weights so they can get big muscles. They wonder why it takes so long to get muscles. It's a slow process.Most people who learn to program learn both patience and perseverance. Yes, they realize that writing the kind of code they want may be more than a year away when they expected to learn it in days or weeks.Loops are really fundamental to programming, and yet, there's so much more after that. It's like learning your ABC's but not knowing about verb tenses and conjugating verbs.Learning to program takes time and commitment, and even then, it's hard to pick the right way to learn. CS50p is a decent start because it's a course. I tried it a while ago. Like CS50x, it has something of a coherent start (to me), then goes into a mishmash of different stuff at the end. There are other courses you could try like MOOC Python 2025. But you'd still have to learn loops in any case.",CodeTinkerer,2025-07-29 13:37:26,2,learnprogramming,t3_1mcalza,False,
n5snk5w,"I'm not a python EXPERT but I know something about losing motivation. I want you to ask yourself: What do you think when you get down to learn some code? Do you go ""Crap, it's time to learn some code now. Let's just get this over with."" If you do think that or something along the lines of that, you're not going to stand out in programming in any world. There are millions of people getting into code every year without any real motivation and then dropping it after a few months. If you really want to become a software pro, you're not going to if you go in with the goal of making money out of programming.Instead, your goals should be something like ""I'm going to be so hyped when I get this loop thing done"" or ""I can't wait to apply this into my ."" That's just my 2 cents, though. Maybe a dollar.",rabeeaman,2025-07-29 14:08:21,2,learnprogramming,t3_1mcalza,False,
n5syry4,"Just learn it after that you would be telling yourself how you even though that it was hard to grasp because it's easy af. That's the feeling when you understand it, but at the beginning it looks really hard. There's of course things that are really hard and need years to learn.",RealMadHouse,2025-07-29 15:02:28,1,learnprogramming,t3_1mcalza,False,
n5tw7co,"How are you stuck with loops? Think that would be relevant to know :smiling_face_with_smiling_eyes:Very simplified but If it can help, there's 2 options with loops.While: the condition is basically an if statement, and it will continue to run until the statement is no longer true, and you have to make sure the statement is false at some point to exit.While: number<10 = continue untill you increased the number to 10.For: runs until a specific count is reached. i=0(the value that should reach something)i<10 (statement from while loop)i+1(or i++)(increment value)Anything else you see is just a version of these 2.Foreach(it's in the name) foreachelementinalist Would just be a for loop with i=0 i<list.length i++Python's for loop does the same, the statement is just simplified and merges the for and foreach statement. While is a whileThat's loops very simplified :smiling_face_with_smiling_eyes:",TomatoEqual,2025-07-29 17:36:54,0,learnprogramming,t3_1mcalza,False,
n5v6xvc,> For: runs until a specific count is reached. i=0(the value that should reach something) i<10 (statement from while loop) i+1(or i++)(increment value)OP is learning **Python**. For loops don't work like you describe in Python. Python's for is closer to `forEach`.,aqua_regis,2025-07-29 21:15:02,1,learnprogramming,t1_n5tw7co,False,
n4vdxpj,Incoming r/csmajors MAGA arc,Patient-Bee5565,2025-07-24 09:46:45,3085,cscareerquestions,t3_1m7zvlx,False,
n4vli60,"I'm confused by the last sentence >While these changes may not have an immediate impact, they hint at a future where Indian IT professionals and outsourcing firms could face more hurdles if Trump returns to power.He's already in power?",bakochba,2025-07-24 10:51:10,122,cscareerquestions,t3_1m7zvlx,False,
n4vdr4r,Yeah like he told Walmart not to pass tariffs onto customers and they raised prices by 51%. Why would they listen,TerriblyRare,2025-07-24 09:45:06,1931,cscareerquestions,t3_1m7zvlx,False,
n4vr3kf,Just because he says it doesn't mean it will magically happen.,chacharealrugged891,2025-07-24 11:32:02,455,cscareerquestions,t3_1m7zvlx,False,
n4w3kk6,"I think he’s mostly just talking. He’s hated tech companies for a long time and accused them of being liberal. I’d love for there to be more protections/incentives from the government. From the article:> ""Another major order signed by Trump is aimed at companies that get federal funding to develop AI. These companies will now be required to build AI tools that are politically neutral. Trump made it clear that his government does not support what he called ""woke"" AI models. He accused the previous administration of promoting diversity and inclusion policies that, according to him, slowed down AI progress.”Basically, they hope all AI is as biased, artificially influenced, and racist as Grok.",Chili-Lime-Chihuahua,2025-07-24 12:50:05,113,cscareerquestions,t3_1m7zvlx,False,
n4vgfni,"Microsoft posted 2,000 new positions in India hours after this announcement, as did Google and Cisco. The entry level manufacturing and coding jobs are never going to come back from China and India, all this is just speaking into the void.",hearty_barty,2025-07-24 10:08:53,892,cscareerquestions,t3_1m7zvlx,False,
n4vf9bq,This one I can get behind. The amount of friends telling me they're losing jobs to entire teams being offshore'd is ridiculous.,ComprehensiveRate953,2025-07-24 09:58:29,442,cscareerquestions,t3_1m7zvlx,False,
n4vgtoq,Congrats! Trump has declared victory for developers. Tomorrow every CS graduate in US will have a 100k+ job. /s,crushed_feathers92,2025-07-24 10:12:18,185,cscareerquestions,t3_1m7zvlx,False,
n4vmua9,"He didn’t say anything, just a very soft overall message for companies to stop sending jobs to China and India. Nothing about Google. Nothing about software engineers. Relax.",react_dev,2025-07-24 11:01:12,52,cscareerquestions,t3_1m7zvlx,False,
n500lyz,"End *all* H1B visas and heavily penalize offshoring by executive order and I'll believe it. As it stands, Trump is just paying lip service to whatever will distract people enough from the fact that he has raped children.",BullfrogRound4235,2025-07-25 00:18:28,6,cscareerquestions,t3_1m7zvlx,False,
n5bwpgh,"Its just lip service to placate certain folks. If he wants to do something, he could make it a lot more difficult to get an H1B visa, for instance. This is just shifting the burden to act from himself to companies so he can blame them when nothing gets done.",SkullLeader,2025-07-26 21:24:20,1459,cscareerquestions,t3_1ma4i05,False,
n5bw46e,What did he do besides rhetoric in terms of US jobs? The EAs he signed have nothing to do with offshoring,Doombuggie41,2025-07-26 21:21:02,315,cscareerquestions,t3_1ma4i05,False,
n5bxkpl,I think Trump is just pandering to voters.,metalreflectslime,2025-07-26 21:29:12,142,cscareerquestions,t3_1ma4i05,False,
n5dt411,"IMHO. If a company has layoffs in tech, that should disqualify them from any H1B sponsorships for no less than 3 years.",LineageBJJ_Athlete,2025-07-27 04:50:37,118,cscareerquestions,t3_1ma4i05,False,
n5bwwj1,"I’m sure Satya Nadella  and Sundar Pichai will get right on that. In all seriousness, don’t they just move the jobs to India rather than hire  Indians in America",Independent-Mango813,2025-07-26 21:25:26,228,cscareerquestions,t3_1ma4i05,False,
n5cl7dn,Classic case of multiple things being true at once. Did Trump's original tax bill cause a huge amount of layoffs? Yes Is the H-1B system being abused and mostly a scam? Yes Is offshoring a real problem that's actually affecting American it and cs majors? Yes Can we trust Trump and this admin to actually not be in the pocket of big business? No Is he directionally correct on this? Yes Will changes like this offset the reduction of labor that comes from all of the disastrous effects of his other isolationist economic politicies? Too early to say.,LustyLamprey,2025-07-26 23:48:59,26,cscareerquestions,t3_1ma4i05,False,
n5bwphp,Reduce the H-1B allotments for tech by at least 50% along with a hefty tax penalty for it. Cap H4-EADs at a feasible number or charge a similar tax penalty. Charge companies for offshoring services.Tech shortages can be fixed by Congress in one piece of legislation without even affecting budget. The shift would hit practically overnight. Imagine browsing LinkedIn and not seeing senior dev jobs offering 90k/year that you know you aren’t supposed to apply to. It’s not too late.Trump’s statement however won’t do anything.,ReasonSure5251,2025-07-26 21:24:21,101,cscareerquestions,t3_1ma4i05,False,
n5cxl0i,Distraction from the Epstein files.,lift-and-yeet,2025-07-27 01:08:20,36,cscareerquestions,t3_1ma4i05,False,
n5bwy3l,yeah won't work without being enforced with an EO or 100000% taxes for hiring indians.,amdcoc,2025-07-26 21:25:41,32,cscareerquestions,t3_1ma4i05,False,
n5ccfh3,"Trump can ""urge"" whatever he wants. The distribution of H1bs and similar work visas is defined by statute. If he wants the H-1b program to be changed in some way, he has to sponsor legislation to change it.Trump also can't impede the ability for an arm of the executive branch to perform their statutory duties. So, he couldn't, for example, fire everyone working in USCIS. This is why Trump was forced to rollback a bunch of DOGE firings.He has had ~7 months in power now, and so have the republicans in Congress. They have not passed legislation attempting to reform H1bs despite having all the votes for it.I think this should tell you what their intentions are regarding H1bs.",Unlikely-Whereas4478,2025-07-26 22:56:16,8,cscareerquestions,t3_1ma4i05,False,
n53cxl1,"All they need is an attractive influencer, then they will be flooded.",InlineSkateAdventure,2025-07-25 14:32:53,718,cscareerquestions,t3_1m90ne3,False,
n53f6lj,"I’d discourage you from a number of these more specific engineering majors. They’re tied to one industry and those industries often prefer people with a more general engineering degree like MechE, EE, and ChemE anyways. If you think tech layoffs are bad you don’t want to go see the bloodbath Petroleum goes through every 5 years.At some schools they’re also the backup major when you fail out of a more esteemed major. Which gives the major a worse reputation.",PoorCorrelation,2025-07-25 14:43:33,658,cscareerquestions,t3_1m90ne3,False,
n53ikjj,"\>Nuclear, naval, mining, petroleum, agricultural, metallurgical all have less than 500\~ graduates per year, each.Super niche fields with not a lot of job openings",PeterThielWorshipper,2025-07-25 14:59:19,122,cscareerquestions,t3_1m90ne3,False,
n53ddt3,Idk about others but people don't like going into healthcare because it's not easy at all. Especially for doctors. Becoming a doctor and then practicing as a doctor both are brutal.,WisestAirBender,2025-07-25 14:35:04,241,cscareerquestions,t3_1m90ne3,False,
n53fu5q,You’re out of the loop. The mechanical engineers are having a hard time finding a job. The medical field is dealing with government funding reductions. The economy as a whole is in the toilet.,SwaeTech,2025-07-25 14:46:34,204,cscareerquestions,t3_1m90ne3,False,
n53g0wa,It's worth pointing out that you can practice the skills from a CS degree to their fullest extent with a 300 dollar laptop but all of the ones you mentioned require large facilities.,Moloch_17,2025-07-25 14:47:26,79,cscareerquestions,t3_1m90ne3,False,
n53tlg5,"> petroleum, agricultural, metallurgical all have less than 500~ graduates per year, each.> but you'll have a great job and consistent demand.Petroleum Engineering is **THE quintessential example** of a boom or bust engineering discipline that has had WILD swings in enrollment.https://jpt.spe.org/us-petroleum-engineering-graduation-rates-keep-falling-but-oil-execs-are-not-complaining-yetI throw up petroleum engineering for the /r/cscareerquestions machine all the time as the cautionary tale for their discipline, and it falls on deaf ears every single time. Including here. **This sub has learned nothing from history.**When oil prices are high relative to extraction costs for extended periods of time, petroleum engineering ranks SWELL. When prices sit at commodity levels above extraction costs, petroleum engineering ranks dwindle fast within 2 years. The median petroleum engineering graduate becomes UNEMPLOYED.In the boom times in the 21st century, petroleum engineering grads were walking out of school to 20 offers in the 195k-225k range with a large bonus potential. They'd go bust their ass many many hours a week out in some rustic environment somewhere. There was all kinds of ""what should I specialize in"" conversations like should I do wireline, or logging, or MWD, or be reservoir side, or whatever.And then POOF. Prices fall... extraction costs rise, and that project you were paying the PE 225k to babysit no longer makes money and STOPS. STOPS.Petroleum engineering had 2600 +/- BS grads (and don't forget several hundred MS students too) in 2017. Less than 600 now, and what looks to be about 600 in 2024. 7 years to fall. Using the broad numbers you posted, this is like the 100,000 CS grads in 2025 becoming 23,000 by 2032.**Does this REALLY make petroleum engineering look attractive to you?** A major that's seen 80% drop in enrollment in 7 years because the industry cannot support its graduates?> With the massive datacenter boom, this is pretty hot right now.Datacenters employ so few people once built; you can build 100 more of them, and they're still a minor player. Design of datacenters is mostly electrical, mechanical, and structural engineering, there might be ONE or TWO IE on a major datacenter design project. Hell there's going to be more architects than IE's. If you want to WORK in a datacenter, good luck. If you want to DESIGN datacenters, electrical, mechanical, or structural. I literally work for a company that does MANY data centers for companies we've all heard of, and I am a chemical engineer. I LITERALLY WORK HERE, and for $1,000,000 I couldn't get on a data center project. Mechanical, electrical, structural, and architects, or GTFO.> These engineering fields: Nuclear, naval...GAH... horrible. Do not study nuclear engineering. You do NOT do what you think you do. The nuclear side of the nuclear world is a solved issue and even a large new nuke plant requires very few nuclear engineers. I do firmly feel that there will be a nuclear renaissance in this country as people figure out that nuclear power is safe and can help with a lot of power issues in this countries, I am very excited for this, and actually personally would love to get in on the action given I live close to one of the major SMR players main office.HOWEVER, in a new nuke plant... the majority of engineering design hours will be spent by mechanical engineers, structural engineers (which come out of civil), electrical engineers. If you want to work in that industry, THOSE are target paths.",GlorifiedPlumber,2025-07-25 15:50:12,17,cscareerquestions,t3_1m90ne3,False,
n53dx4p,are you unemployed/new grad? this shithole is full of people trying to sway others from the field,Wall_Hammer,2025-07-25 14:37:36,108,cscareerquestions,t3_1m90ne3,False,
n53hwv0,You might want to check how many jobs there are and their quality of life on a nuclear submarine before pursuing this.,Ok_Distance5305,2025-07-25 14:56:16,14,cscareerquestions,t3_1m90ne3,False,
n53ih10,And half the people who studied in those engineering disciplines end up becoming web developers because that’s where the money is. So might as well just study CS to begin with.,kaleNhearty,2025-07-25 14:58:52,29,cscareerquestions,t3_1m90ne3,False,
n4pifzu,"This is just at FAANGs. A good chunk of that ""TC"" is stock. [https://www.levels.fyi/companies/facebook/salaries/software-engineer/levels/e4](https://www.levels.fyi/companies/facebook/salaries/software-engineer/levels/e4)A $330k TC at Meta might look like: $184k salary, $425k of a stock grant paid out over 4 years (106k per year), $40k target bonus per year.In order to get stock, you have to work for a big public company that even has stock to offer. Even a big successful private company either won't offer you any stock or the stock will be worthless without some kind of exit event that lets you cash out your options.Even for big public companies outside of FAANG, you're not likely to get much stock:[https://www.levels.fyi/companies/capital-one/salaries/software-engineer/levels/software-eng](https://www.levels.fyi/companies/capital-one/salaries/software-engineer/levels/software-eng)Capital One: $150k for mid level[https://www.levels.fyi/companies/walmart/salaries/software-engineer/levels/l2](https://www.levels.fyi/companies/walmart/salaries/software-engineer/levels/l2)Walmart: $112k for L2One of those is going to be closer to the average salary for a developer with 2 years of experience in the US. Out of the millions of developers in the US, most of them do not work for FAANGs.Landing a job at a FAANG has always been very competitive and requires specific interviewing skills, in this market it is even more competitive. About 40k software engineers work at Meta across all levels and the company makes about $150 billion a year in revenue, so they can afford to pay their developers a lot.",trg0819,2025-07-23 13:19:54,808,cscareerquestions,t3_1m78mov,False,
n4pfirw,"It's mostly FAANGs and some ~~banks~~ financial firms (is more accurate, thanks all). And yes, the market is horrendous for everyone, across the board, but new grads are definitely getting the sharp end of the stick.",theB1ackSwan,2025-07-23 13:04:15,415,cscareerquestions,t3_1m78mov,False,
n4pn14v,"google and meta are like the cream of the crop though. I “know” a SINGLE person working at one of those companies and I use the term know loosely, I just went to high school with him. one of my coworkers did make it pretty far in the meta interviews though he got to the final round. those salaries are very high even for USA. I would say $100k is closer to the average for a 2yoe dev in the usa (if you combine HCOL and LCOL cities)",LurkingSlav,2025-07-23 13:44:11,28,cscareerquestions,t3_1m78mov,False,
n4pih08,"It’s kind of an apples to oranges comparison. And it’s not average, average TC for 2 YOE is more like $85k. Our cost of living is on average like 4 times higher than y’all’s. And then you’re looking at candidates working at some of the most profitable companies in the world. To get into these companies they’re doing 5-6 rounds of intense interviewing. To even get their resume looked at they are competing with thousands of other candidates many of whom are also from other FAANGS and top tier colleges.In America we can be fired for no reason at all without warning, so our salaries have to compensate for our potentially long and unexpected job searches. South America appears to have considerably more protections here.You also likely have public healthcare, low cost education, and/or pension plans, none of which we have (we have social security but it’s only for folks who worked and every election there’s talk of getting rid of it). So our salaries have to offset that and other basic social services that we lack. The market is horrible right now. Getting interviewed at one of these jobs without connections or a top tier degree is basically impossible. Partially because there are not nearly as many openings now as there used to be, partially because these jobs have always been somewhat like that. Even if you got the interview you’d need near perfect performance to pass as employment shortages mean they can be pickier. And after all of that most of the FAANG companies will be looking to heavily overwork you and then push you out or PIP you within under 3 years. I worked at Amazon, happens all the time.",ProbablyANoobYo,2025-07-23 13:20:03,134,cscareerquestions,t3_1m78mov,False,
n4pg3s5,"Not average. It’s uncommon but not rare. This is just what the top maybe 10% of the market pays.The median pay for all SWEs of all experience ranges in 140k/year according to the Bureau of Labor and Statistics.I work at one of these companies that pays new grads that amount. It’s incredibly difficult to get in as an intern or new grad. We only source from top10 schools, top of the class, prior internships at other FAANG in the case of new grads. Once you have 4-6 YOE your school doesn’t really matter any more.The interviews are hard but all follow a consistent format so they’re possible to get past with lots of dedication and prep.Getting these offers doesn’t mean the market isn’t terrible. There’s less of these positions available but the top companies are still willing to pay top dollar for what they view as top talent.",bonbon367,2025-07-23 13:07:27,83,cscareerquestions,t3_1m78mov,False,
n4pgbsm,The US is way more expensive than South America. These raw salary comparisons are meaningless unless you take into account cost of living. I don't think there's any city in South America that has San Francisco or NYC cost of living.,Illustrious-Pound266,2025-07-23 13:08:39,180,cscareerquestions,t3_1m78mov,False,
n4pjb0y,"These are the highest paying tech jobs in areas where 1bed apartments cost $4000 a month and homes cost millions. These are also some of the brightest and best educated people who grind leetcode for hours in the their free time. A very smell percentage of SWEs will even get interviews at a place like Google, let alone get hired. Try not to anchor to outliers.",Jandur,2025-07-23 13:24:29,28,cscareerquestions,t3_1m78mov,False,
n4pnpkn,"This is definitely not the average experience, but tech social media is inflated with people who work at FAANG because those are the most desirable places to work. For me at 2 YOE (note this was like 10 years ago) I was making 72500 with no bonuses or stock.I am at \~12 YOE in an area with much lower cost of living area and I would say I probably make just under 200,000 a year total comp. I would say this is probably much more normal for most developers not in FAANG. And I'm probably close to what a lot would consider the cap for a technical role outside of FAANG or similar jobs. I'd have to switch to management at this point but don't want to.",Jcampuzano2,2025-07-23 13:47:40,22,cscareerquestions,t3_1m78mov,False,
n4tzt4i,"Meta and Amazon make the young ones work really long hours. 60-80 hours a week. Let’s say 60 hours, that’s 33% haircuts on your TC. The long hours can make you feel lonely. There are always some suicide stories around FAANG workers.Bay Area society is very cliquey. If you are not Chinese or Indian, it’s an extra challenge to have a social life. Gotta find your own fellow countrymen but you don’t have time.The RSUs are vesting over 4 years. How many survived the entire 4 years? Amazon’s vesting was especially cruel, you don’t get much the first 2 years. I don’t know if that has changed recently.And then Bay Area taxes are basically 50%. One bedroom is around $3k/mo. And you have to drive everywhere.And if you have kids, schools here are crazy competitive, akin to East Asian schooling.Life here ain’t easy.",pinpinbo,2025-07-24 02:48:37,9,cscareerquestions,t3_1m78mov,False,
n4riih5,"It's definitely 1% in the world but it's not as good as it looks. Let me try to break it for you.The offer is most likely from zone 1 which is California or New York and it's gross income so they usually end up paying 30 to 40% in taxes. There's also another $12000 a year going in medical insurance and other 401k stuff.So realistically his take home is under $10,000 a month. Of course it is still a huge number but let's take a look at the expensive side. A 100 sqm apartment in those locations is around $3000-$4000. About $1000-$1500 spent in groceries and eating out. Another $500 in utility, phone, Internet and other membership.So from that $18,000 they have no control over at least $12,000 - $14,000 of expenses. They can only decide how to spend those $4,000.But if they're working at meta, the WLB is so crazy (40-45h needed to meet expectations) that that is a good chance that those $4,000 are just sitting in the bank or in the stock market.These days it is incredibly hard to get this job but hard work and perseverance definitely get you there. You need to solve 1500+ LC questions and ace your behavioral interviews. You get asked two questions from those 1500 and you need to solve them within 40 minutes. That is a good chance that if you haven't seen that problem before you're not going to solve that in under 20 minutes and therefore you will feel the interview.",webdevop,2025-07-23 18:57:08,7,cscareerquestions,t3_1m78mov,False,
n5sglx4,The question is going to be like one of those open book finals from college,res0jyyt1,2025-07-29 13:32:24,538,cscareerquestions,t3_1mcb3hg,False,
n5se2w6,"If true, I don't necessarily see this as a bad thing. You can identify if a candidate can finish the task as they would on the job. You can identify if they're ignorant to security practices and feed the LLM sensitive information. And you can identify if they are overly dependent on even the simpler parts of the coding exercises.",-Dargs,2025-07-29 13:18:33,736,cscareerquestions,t3_1mcb3hg,False,
n5sewdb,From grinding leetcode to using AI? Is the interview finally going to change from rote memorization? Doubtful but this is the most interesting change up in interview style from a FAANG that I’ve seen.,SlyCooper007,2025-07-29 13:23:05,337,cscareerquestions,t3_1mcb3hg,False,
n5t6a2m,From 2 Leetcode mediums in under 45 mins to “just use AI and we will observe.”Tech interviewing is horribly broken.,src_main_java_wtf,2025-07-29 15:37:52,31,cscareerquestions,t3_1mcb3hg,False,
n5shipe,"I guess this is an unpopular opinion here but I think coding interviews are supposed to be like aptitude tests. Obviously they’re nothing like actual work, and can be memorized, but it’s a way of testing whether candidates have problem-solving abilities, intuition, and simple, clean code practices. Yes, it’s imperfect, but letting AI autocomplete it will only make it even more imperfect.",ALostMarauder,2025-07-29 13:37:23,100,cscareerquestions,t3_1mcb3hg,False,
n5ser96,"Good. I know anti-AI sentiment is high here but these are tools that we should be using to help us. It's insane that we still interview people as if they're in an isolated bubble 24/7 with no tooling available. This encourages people to memorize problems just to pass interviews, and not show us how they actually work day to day.",maria_la_guerta,2025-07-29 13:22:19,188,cscareerquestions,t3_1mcb3hg,False,
n5sn986,Some of you guys are in for a rude awakening. You’re gonna stop complaining about memorizing leetcode solutions and start complaining about memorizing AI prompt patterns.,L_sigh_kangeroo,2025-07-29 14:06:51,46,cscareerquestions,t3_1mcb3hg,False,
n5syhrm,Using interviewees for training and refining their own model... Well played.,codeblockzz,2025-07-29 15:01:08,6,cscareerquestions,t3_1mcb3hg,False,
n5sgjok,"That articles behind a paywall so I'm just going off your title...How *much* are they going to let candidates use AI during coding tests?Are they going to let them utilize it as a tool, no different than Stack Overflow? To quickly lookup syntax, or simple things that nobody memorizes?Or are they going to let them prompt engineer the entire answer to the problem?Because if it's the former, that already happens today.... except it's not AI. It's asking your interviewer. In my experience, interviewers don't care if you have some dumb syntax memorized, they don't care if you stumble on how to do X in Y language. Those things don't matter on the job, and they don't matter in the interview. It's the problem solving they care about. Usually interviewers make it clear you can ask them syntax questions like that, or other nudges AI-as-a-tool would normally help you with. I've also been in interviews where they're totally fine with you googling, you just have to let them know you're doing that before you do it.If it's the latter though, good fucking luck. I don't know about you, but I always dreaded open-book tests/exams in college. Because they were always made difficult enough to *warrant* them being open book. They were *harder* then closed book exams. If you're vibe coding and prompt engineering your way through an interview, you can expect that interview to be written with the expectation that you're vibing through it at lightning speed, and it'd be unachievable if you didn't.",SouredRamen,2025-07-29 13:32:03,25,cscareerquestions,t3_1mcb3hg,False,
n5sp3gg,Why do I have a feeling technical interviews will become harder?,MoneySounds,2025-07-29 14:15:56,5,cscareerquestions,t3_1mcb3hg,False,
n4rr3zx,"I just started a new role and was chatting with the engineer who did one of my technical interviews. I told him after the interview ended, I felt like it didn't go well. He laughed and said that it was intentionally difficult (not leetcode, but more practical questions) and that he's been blown away by the rampant cheating going on and that by not cheating, you're already positive.",AdMental1387,2025-07-23 19:37:50,373,cscareerquestions,t3_1m7fc13,False,
n4rsywm,"How have we gotten to the point where someone not from the same CITY is just ""yolo"" applying. Lots of people move for jobs.",paranoidzone,2025-07-23 19:46:50,202,cscareerquestions,t3_1m7fc13,False,
n4rdmj3,I’m curious about filtering out people based on location. Are they denied if they are in a different city even if they would relocate?,qstorm94,2025-07-23 18:34:32,32,cscareerquestions,t3_1m7fc13,False,
n4rqmt2,"Yup, I had the similar conclusions recently. The golden age of remote work and remote interviews is over, and it is AI that killed it. We'll slowly shift back to pre covid days where we go back to hiring locally and networking locally will also be much more important. So in a weird way, AI will force society to be social again cuz no one trusts anyone or anything online anymore.",dualwield42,2025-07-23 19:35:31,77,cscareerquestions,t3_1m7fc13,False,
n4rugnr,"What do you mean when you say you “filtered for school”? Were you not considering people from smaller state schools? If you’re only looking at “target” schools, you are losing *most* candidates because the majority of people out there went to regular old colleges, plus you are exercising some implicit bias imo because whether you get accepted into “target” schools can have as much to do with socioeconomic status as it does intelligence or capability.",asteroidtube,2025-07-23 19:53:48,22,cscareerquestions,t3_1m7fc13,False,
n4r1z3k,"The dirty secret most managers don't talk about is that a lot of recent grads are really bad. Have seen a downward trend since 2019. No IDE skills, barely know how to use the debugger, can't tell how exceptions work and a call stack is, threading is a foreign concept. Can't read API docs. Software engineering isn't just writing code, its about knowing your tools as well. The frustrating part with these new grads is that they blame everyone except themselves. Colleges are guilty of not properly teaching CS as well.",EnvyLeague,2025-07-23 17:41:02,397,cscareerquestions,t3_1m7fc13,False,
n4s8fwk,"Sounds like cold DMs are still a thing, good to know.",_Invictuz,2025-07-23 20:58:51,11,cscareerquestions,t3_1m7fc13,False,
n4sf25u,"One bit I absolutely agree with is how AI has fucked a lot of grads up. I do a lot of interviews at Amazon, and am training to be a Bar Raiser. I can confidently say that I know when you're cheating. Software Engineers are not Actors, and they ALWAYS make stupid mistakes in how they answer a question when they have the answer as opposed to when they're working it out. In cases where I can't, you probably didn't need the tool anyway because you would've got it eventually. It's also very telling because you don't see it in any other job role. I interviewed a set of executive assistant candidates for a GM, and even in role-skill exercises, the cadence of answer, the breaking down of a problem, all is very similar. If it's a SWE and they're cheating, they're getting it right immediately, are unable to describe a solution (and then immediately turn into a CS professor), or they can explain something perfect, but cannot tell you any other way to do it - even when another approach is taught hand-in-hand and is basically a pair with a given algorithm.You would be shocked at how common cheating is. I'd say maybe 5-10%, with more new grads cheating than experienced hires. I've even interviewed people that have so blatantly cheated that they've either quit an interview mid-way despite getting the answer ""right"", because they couldn't explain an if statement or why they've structured a for loop in a specific way (it's a for-each).",EnderMB,2025-07-23 21:30:58,12,cscareerquestions,t3_1m7fc13,False,
n4sjvu4,Alas. The last bastion of introverts bites the dust.,thisshitstopstoday,2025-07-23 21:55:11,10,cscareerquestions,t3_1m7fc13,False,
n4r5u1f,"""Throwing stuff at the wall"" got to me personally.",ApeMaurader,2025-07-23 17:58:24,37,cscareerquestions,t3_1m7fc13,False,
n4sfsjs,I legitimately can’t tell if this is a bit or not. 12/10 shitpost if so. This is like something you’d find on PCJ.I’d post it there but I think they have a “no learning subs” rule.,Defiant-Bed2501,2025-07-23 21:34:36,939,cscareerquestions,t3_1m7lqbh,False,
n4sm8zb,"Are you asking about him? Or you?Because it sounds like he's just vibing, he's a character. This is how this person's gonna live whether he made the cure for cancer, or wrote a mobile app that upon opening tells you if your phone is currently on or not.You on the other hand quit a stable job, live with your boss, and work 14 hour days on an idea that not only isn't yours, but you don't understand it.I don't know the word for the former... maybe quirky. But he latter is absolutely a lunatic.",SouredRamen,2025-07-23 22:07:24,219,cscareerquestions,t3_1m7lqbh,False,
n4suidj,If you sold a chair for runway you’re already fucked. Solid shit post though.,ViveIn,2025-07-23 22:51:31,77,cscareerquestions,t3_1m7lqbh,False,
n4senm9,"LOL I don't think you really can in the early stages. The fact you don't understand the product is a red flag though. Going to a startup is always a big risk--sounds like you're taking a flyer rather than a calculated bet where you know enough about the product, problem-space and market. Has this founder had success with a prior startup? That's always a good indicator, but no mention of that so I'm assuming they're fresh. Since they move fast you should see some milestones of success within 6-mo, if not that's the answer to your question.",bcsamsquanch,2025-07-23 21:28:56,118,cscareerquestions,t3_1m7lqbh,False,
n4spv5u,"If this isn't a shitpost, you will be either broke or a billionaire before the decade is out lol. No in between.",marsman57,2025-07-23 22:26:24,75,cscareerquestions,t3_1m7lqbh,False,
n4stht6,Something is off about both of you. Why did you move in with him.The difference is money BTW. If he can pay 200k a year cash he's a genius.,mcAlt009,2025-07-23 22:46:03,52,cscareerquestions,t3_1m7lqbh,False,
n4tp148,\>My Herman Miller chair (sold it to “extend runway”)My sides,Saratto_dishu,2025-07-24 01:44:27,21,cscareerquestions,t3_1m7lqbh,False,
n4spfh1,Shisha is just the tobacco used in hookah right? Or am I old and out of touch now?,funkbass796,2025-07-23 22:24:07,17,cscareerquestions,t3_1m7lqbh,False,
n4sjtby,Is this just Silicon Valley…,Material_Policy6327,2025-07-23 21:54:50,14,cscareerquestions,t3_1m7lqbh,False,
n4spgc1,Why do you believe in the product? You say you don't fully understand it? Are you just taking some sort of leap of a faith?,HaMMeReD,2025-07-23 22:24:15,13,cscareerquestions,t3_1m7lqbh,False,
n5vfpox,Posts like these let me breathe a little easier. I feel like we all get tunnel vision sometimes. It’s good to know that there are other paths available.,Al_Pallll,2025-07-29 21:58:49,446,cscareerquestions,t3_1mcop22,False,
n5vg15t,I quit selling Jet Skis and Boats for 100% commission for CS and I’m 500% happier,Bonzie_57,2025-07-29 22:00:28,453,cscareerquestions,t3_1mcop22,False,
n5viskj,There is no way in hell I would leave the salary and benefits of this career to be on commission selling boats and jet-ski's lol.,olduvai_man,2025-07-29 22:14:46,180,cscareerquestions,t3_1mcop22,False,
n5vmhi3,Man I remember my early 20s. Lol,scungilibastid,2025-07-29 22:34:15,24,cscareerquestions,t3_1mcop22,False,
n5vjoum,A whole lot of words to describe doing everything but getting the most basic requirement for 99% of jobs - a bachelors degree.,function3,2025-07-29 22:19:28,54,cscareerquestions,t3_1mcop22,False,
n5vfp77,"So happy for you, CS is not worth it anymore, if I am back in time, I would choose a different path",lets_throw_a_party,2025-07-29 21:58:45,75,cscareerquestions,t3_1mcop22,False,
n5vsk9y,Yea 100% commission sales in high end luxury products. That's definitely not going to be stressful.,Nagi21,2025-07-29 23:06:52,8,cscareerquestions,t3_1mcop22,False,
n5vgslo,I feel like I might be that path too. I just finished my Masters in CS. Idk if being a developer forever is for me. I like interacting with people and being a leader,GeekTrollMemeCentral,2025-07-29 22:04:25,15,cscareerquestions,t3_1mcop22,False,
n5vppxt,"I feel you. I'm doing accounting now, but Boeing hit me back up to be a front-end developer for a software project again. Only 5 month contract, so I told them to kick rocks or make it part-time so I still have my stable job. Looks like I'm back to developing :grinning_face_with_sweat:. Accounting by day and Developer by night :man_supervillain:",CrusherOfBooty,2025-07-29 22:51:33,9,cscareerquestions,t3_1mcop22,False,
n5vfcot,Cool,IllResponsibility671,2025-07-29 21:56:58,30,cscareerquestions,t3_1mcop22,False,
n5k4kfh,"2% of their workforce is 12,000 people? Damn they’re almost half as big as DocuSign",ReasonSure5251,2025-07-28 05:11:45,493,cscareerquestions,t3_1mb7cxe,False,
n5km12n,"One reason might be because many of their clients in US and Europe are setting up their own offshore units under own payroll in India, rather than outsourcing to the WITCH contractors. They call them Global capability centres.If they outsource the work to TCS, the company will take a 20-30% cut before paying the worker. Much easier to cut the middleman out and pay the worker directly..",Thick_tongue6867,2025-07-28 07:52:08,143,cscareerquestions,t3_1mb7cxe,False,
n5k8kcu,It doesn't necessarily mean offshoring is decling. This only represents that the offshoring to contractors are declining. It doesn't represent companies opening Indian branches themselves and hiring in India,Existing_Depth_1903,2025-07-28 05:46:52,175,cscareerquestions,t3_1mb7cxe,False,
n5k45e1,My F500 company used to have quite a few TCS contractors in India. They've switched over the past 3 years and actually hired onshore FTE SWE to replace them. Just my subjective experience.,Rokae,2025-07-28 05:08:14,186,cscareerquestions,t3_1mb7cxe,False,
n5k6n6r,"My job is actually ending all contracts. I don't think its because of AI, i think its because they are starting to learn they have just been burning money. We are currently up to version 6 on the same feature, that's how many times it has been pivoted on. several million dollars to show what is basically v1.",loudrogue,2025-07-28 05:29:45,138,cscareerquestions,t3_1mb7cxe,False,
n5kc0sm,2% is not even worth mentioning.Most companies will part ways with more than 2% every year as you want to get rid of your bottom performers.,HelicopterNo9453,2025-07-28 06:18:02,46,cscareerquestions,t3_1mb7cxe,False,
n5k7qtc,"Eh not entirely cause of AI, but my company has been cutting far offshore roles in India/Asia to instead hire locally (for mostly remote) in tech hubs and nearshore in LATAM. The middleman charges, having to hire entire teams as a package, time zone issues, mostly poor quality results, and the non-cap/cap r&d tax expenses are all just one big headache.",one-won-juan,2025-07-28 05:39:30,60,cscareerquestions,t3_1mb7cxe,False,
n5kdgza,that’s IT services,Brave_Speaker_8336,2025-07-28 06:31:22,13,cscareerquestions,t3_1mb7cxe,False,
n5l79ou,"A lot of potential for misinformation and speculation here, so will chime in as someone that has worked in contracting for 8 years.During economic uncertainty, contracting firms really start to struggle. A really successful small firm could die in a month if they were to lose two contracts back-to-back. For the huge companies, any sign of work slowing will often result in teams being let go. They're usually done silently, but in this case it's likely to be more noteworthy because layoffs and offshoring are popular right now. From a business perspective it's good, because it makes you look efficient. After all, if everyone else is doing it, it's fine, right...It's also worth noting that in contracting firms, a LOT of people might be classed as technical/service staff when their job is essentially a PM or AM role, basically tracking work, making sure the client is happy, etc.Finally, this is my own personal perspective on contracting, but the idea that a contracting firm will have any advancements in AI is utterly laughable. It's not even a skill issue, but one where work will need to be billed to a client, and there's no fucking way that TCS is billing someone for the time taken to mess around with AI issues. Contracting firms often believe that they're at the forefront of technology, but my experience of subcontracting for TCS was arguing with a PM because I had written unit tests and they viewed it as ""unnecessary work we will not pay for"". When I pushed back, their response was ""well, it should work first time"". It's an environment of shortcuts, and while they probably love the idea of AI doing dev work, it'll end in tears without any shadow of a doubt.",EnderMB,2025-07-28 11:08:54,15,cscareerquestions,t3_1mb7cxe,False,
n5lxk7v,"I've done work with TCS, and all the other other giant Indian consulting companies. It's all trash. You get what you pay for.",Early-Surround7413,2025-07-28 13:53:43,6,cscareerquestions,t3_1mb7cxe,False,
n4rh1xu,Actual answer: Cultural differences. A lot of my colleagues put nohello.com directly in their status to try and mitigate this.,theB1ackSwan,2025-07-23 18:50:23,564,cscareerquestions,t3_1m7hlru,False,
n4rlcou,"0 if anyone message me with ""hi"" I just leave them on read",NewChameleon,2025-07-23 19:10:24,205,cscareerquestions,t3_1m7hlru,False,
n4rgv9h,0 because I already told the people to include their question in their greeting.,roleplay_oedipus_rex,2025-07-23 18:49:31,60,cscareerquestions,t3_1m7hlru,False,
n4ro9on,"Shit annoys me to no end. Had a co-worker who not only did this constantly, but would break apart his question into 10 different messages so it’d just be a stream of consciousness",millbruhh,2025-07-23 19:24:12,64,cscareerquestions,t3_1m7hlru,False,
n4rlfnm,"I only get these from coworkers in India, and I don’t mind it coming from them because I just assume it’s a cultural difference",keezy998,2025-07-23 19:10:48,175,cscareerquestions,t3_1m7hlru,False,
n4rir1h,Too many. Just tell me what you need,godwink2,2025-07-23 18:58:15,19,cscareerquestions,t3_1m7hlru,False,
n4rgvo4,"Whenever this happens, I like to reply with https://nohello.net/en/ and nothing more.",EmeraldSanto,2025-07-23 18:49:34,134,cscareerquestions,t3_1m7hlru,False,
n4rhzap,"It's a blessiung and a curse lol. Blessing means you have a lot of people who like to reach out to you, you have become somewhat of a unofficial SME in whatever area they are asking about.I had this issue of just saying ""hey"". Because DMs people see it more as a causal thing than a formal thing. Like nobody would write just ""hey"" in an email and wait for a response. I worked at a fast paced job and many seniors made it clear they would not repsond if you just said hey. If you were new theyd let it slide and tell you something like ""if you want a quicker response from me you should get in the habit of saying hi, but then also stating in your initial message your question."". I knbew people who would not repsond at all if you kept with the ""hey"". To combat it or encourage people to say more they would always have the same status message that said something like ""For quicker responses please state in your initial response your question."" or some would put a lighthearted message o rthey would link [https://nohello.net/en/](https://nohello.net/en/) on their status message.",Broad-Cranberry-9050,2025-07-23 18:54:41,10,cscareerquestions,t3_1m7hlru,False,
n5q2bv7,"I speak for everyone when I say, we were waiting on you to take on the challenge.Most of us have thought about solving it, but figured it wasnt worth our time/effort. You got this champ",travishummel,2025-07-29 02:22:23,917,cscareerquestions,t3_1mbzk6b,False,
n5q3ccs,"Hey, this is u from the future. I was able to solve it, but I don't have enough time ot tell you the answer now.",Runsey,2025-07-29 02:28:31,243,cscareerquestions,t3_1mbzk6b,False,
n5q5nge,i saw it asked as a Leetcode medium while interviewing for a used car lot help desk job /s,debugprint,2025-07-29 02:42:36,169,cscareerquestions,t3_1mbzk6b,False,
n5q35zk,There is [a million dollar prize](https://en.wikipedia.org/wiki/Millennium_Prize_Problems#P_versus_NP) waiting for you.,frankchn,2025-07-29 02:27:26,93,cscareerquestions,t3_1mbzk6b,False,
n5q4ftk,"Meh, I came up with a proof once while reading this book. Was about to write it down but the margins were kinda small.",pddpro,2025-07-29 02:35:10,85,cscareerquestions,t3_1mbzk6b,False,
n5q49a8,"I think I saw a YouTube video with terence tao, and if I recall correctly, he said it was the type of problem he would avoid because it was likely either unsolvable, or unsolvable with our current tools in math. Meaning that new tools would have to be invented/discovered before we could advance on it. I think even knowing if it's solvable would be a huge advancement. The truth is we don't know.If you are worried about wasting 30+ years of you life, I would strongly advise you avoid it. If you are not worried, then go for it.",std_phantom_data,2025-07-29 02:34:04,41,cscareerquestions,t3_1mbzk6b,False,
n5q47eb,Just throw it into ChatGPT bro.,paranoidzone,2025-07-29 02:33:44,73,cscareerquestions,t3_1mbzk6b,False,
n5q92ls,OP has serious r/linkedinlunatics energy,aarrivaliidx,2025-07-29 03:04:12,40,cscareerquestions,t3_1mbzk6b,False,
n5q66vb,"I solved this on the toilet in elementary school, but I flushed the notes on accident and forgot about it when the bell to end recess rang.",jsdodgers,2025-07-29 02:45:57,26,cscareerquestions,t3_1mbzk6b,False,
n5qbkyl,"Finally, this sub has evolved to its true form: the circlejerk sub for programminghumor",A_Guy_in_Orange,2025-07-29 03:20:42,24,cscareerquestions,t3_1mbzk6b,False,
n4yn4h7,">yet the advice I see most often for getting a job is networkingBecause networking is a broad term. You don't network in hopes to land a job at a specific company. You network so over time, your ""brand"" (you, your work, etc) increases in value.Then later, when a company wants to fill a role, employees with connections will typically refer people from those connections first. This gives those candidates a significant advantage in the market.Networking also builds a repertoire of trust.It's much much easier to land remote jobs with a good network, since the gained trust can be converted in to more flexible working conditions (since companies will have an easier time trusting you to get your work done).",polymorphicshade,2025-07-24 20:03:00,206,cscareerquestions,t3_1m8eixw,False,
n4yqw3w,"Your network is your colleagues you work with, whom you can contact for referrals. You accumulate them over time. But at the same time, with more YOE getting hired also becomes easier without a network. Hence, as a new grad, you are doubly screwed.To be honest, I have received many referrals over the years, and not a single time have I gotten a callback. It's all cold applications for me.",HansDampfHaudegen,2025-07-24 20:20:27,70,cscareerquestions,t3_1m8eixw,False,
n4yonn8,"Networking can mean playing a really long gameBack in 2009, I joined a networking group and met a bunch of people there. At every meeting, I'd introduce myself and say that I was looking to get a job as a software engineer. A year later, one of the members offered to let me rebuild his website for free to use as a portfolio project. I worked for months on that thing and was pretty proud of the result.Two years after that, I was able to apply for a developer job at the company I worked for and I used that website as part of my application to show them I could build real projectsAnd now, 16 years after meeting him, that same guy is applying to work at my company and I'm referring him for a job",gwmccull,2025-07-24 20:10:07,67,cscareerquestions,t3_1m8eixw,False,
n4yp5zz,"When you say networking, is it more like reaching out to random people on LinkedIn whose company has open positions asking if they can refer you?",minngeilo,2025-07-24 20:12:27,13,cscareerquestions,t3_1m8eixw,False,
n4ytrm6,Networking isn't a one time thing. It's a long term thing. You build a network over many years. If you do it right you'll never have to apply for a job.,Early-Surround7413,2025-07-24 20:33:53,12,cscareerquestions,t3_1m8eixw,False,
n4yvjfh,"Yes it does, it's just not solving your immediate problem. You're not networking for now. You're networking for 10 years from now.",rco8786,2025-07-24 20:42:10,6,cscareerquestions,t3_1m8eixw,False,
n4ypi7s,The goal of networking isn’t just to ask someone for a job and then to have them refer you if it’s open. It also involves having them keep you in mind for when the companies actually stop layoffs and start hiring.,JustJustinInTime,2025-07-24 20:14:01,5,cscareerquestions,t3_1m8eixw,False,
n4ypv9v,"The value of a network is that you can collect and spread information, and you can connect to new nodes and networks. Other people you know have access to nodes you do not otherwise. Use your network to meet other people. It is also a good way to find out about opportunities. And learn what skills would be best to learn.",BelieveInPixieDust,2025-07-24 20:15:42,5,cscareerquestions,t3_1m8eixw,False,
n4ytz3g,Networking is more hedging your bets for the future.,SergeantPoopyWeiner,2025-07-24 20:34:51,4,cscareerquestions,t3_1m8eixw,False,
n4yyyej,"They're doing layoffs ***right now.*** Will that still be true in 2 or 3 years time?Remember, 3 years ago was one of the biggest dev hiring gluts ***ever***, and it was basically out of the blue during COVID. We're right on the edge of the AI bubble popping, it's very possible we'll see another hiring surge over the next year or two, and your networking will have absolutely paid off then.",SanityAsymptote,2025-07-24 20:58:06,7,cscareerquestions,t3_1m8eixw,False,
n4qgini,"51? No. Especially not with PM experience. I doubt you’d get a call back from Google, but banks, defense contractors, and other more cautious, slow moving industries would probably fit well. You’d probably be surprised at the reach out if you make a “hey, I’m looking for new roles, I’m targeting project manager and potentially IC roles” on LinkedIn.",Pristine-Item680,2025-07-23 16:03:51,408,cscareerquestions,t3_1m7d168,False,
n4qg70g,"Sorry, I'm right there with you. I don't want to be the bearer of bad news but the longer you are out of work the harder it becomes to even get someone to talk to you. Hit up all your old coworkers, your best bet is bypassing HR and recruiters and getting your resume on the hiring managers desk from a referral.The really shitty thing is moving to a new career is even harder. I have been told multiple times they don't want to hire me because I will just leave when the tech market comes back. Truly sucks. Good luck.",Top-Order-2878,2025-07-23 16:02:20,187,cscareerquestions,t3_1m7d168,False,
n4rf5ll,"Go back to being a developer. I was a dev manager laid off at 53. Went back to dev work and laid of again at 59, took me about two months to find a new job.",Conscious-Secret-775,2025-07-23 18:41:36,49,cscareerquestions,t3_1m7d168,False,
n4qyvuo,"Set up an LLC immediately. You are now a consultant. So, it will look like you haven't been out of work. I'm 53 and unemployed for 2.5 years. It could be worse.",Plissken47,2025-07-23 17:27:20,64,cscareerquestions,t3_1m7d168,False,
n4qgets,The naval surface warfare center near me told me they are about to start hiring again. Might be worth applying there,sierra_whiskey1,2025-07-23 16:03:22,37,cscareerquestions,t3_1m7d168,False,
n4qo5t9,"I assume you are in the US, but in my country it is generally considered the highest difficulty to find a job after 50, and I am not just talking about CS, but any career. It is mostly due how much the retirement contributions the company is required to make for you are growing exponentially after 45.I know, this doesnt really answer your question, but it is more of a ""this might not even be the CS markets fault"", which doesnt make it any better...",OkPosition4563,2025-07-23 16:39:30,14,cscareerquestions,t3_1m7d168,False,
n4rmjm1,"DOGE victim here too, hope you start to hear back soon :)",kevin074,2025-07-23 19:16:05,11,cscareerquestions,t3_1m7d168,False,
n4rmi75,"Almost a mirror of my own experience. 49, 20 years dev, 10years leadership up to SLT levels and spent the last 18months with barely one callback a month.It sucks right now like I've never known it to, the big tech layoffs, economy contractions and AI landing together have blown the tech market to shreds. It's just brutal.I'm going through final checks before starting with a big corporate. Had to relocate (to a lovely area so there's at least that), and for a really junior leadership role but it's just getting back in into employment at this stage.My advice is that the big engineering corps are still hiring, just not the SW ones so much.Also, if you've used AI on your CV check it for the tell-tales as you will be getting pre-filtered, I ran mine through just to tune it, couldn't hurt right? Fecking thing replaced all the dashes with m-dashes, took me 9 months of ever decreasing volume before I realized, calls started coming in again with greater frequency after fixing that... Doh!Oh, and if you get an interview and are asked about AI don't be honest just lie like a champ and say it's the best thing since sliced bread, fantastic, able to deliver in minutes, blah, blah, everyone loves it, etc.",Droma-1701,2025-07-23 19:15:53,8,cscareerquestions,t3_1m7d168,False,
n4sqx1n,"At my F500 company, no qualms whatsoever about hiring a 51 year old with your experience.I mean when a job could benefit from 26 years experience then duh the person is 48+ years old...",crimson117,2025-07-23 22:32:03,8,cscareerquestions,t3_1m7d168,False,
n4qywl5,How long has it been? Took me 6 months and my whole savings to find my current position. Holding on to it for dear life. Thankfully it's a nice cushy raft.,imagine_getting,2025-07-23 17:27:25,6,cscareerquestions,t3_1m7d168,False,
n58bfjx,100K-1M is a wild range for a senior sde. It can be entry level as well as principal :skull:. Kudos tho!!,cabinet_minister,2025-07-26 07:51:36,375,cscareerquestions,t3_1m9n8ew,False,
n58cx86,"The only part I find hard to believe is not just that you were able to close the application, interview, and offer loop within 12 days, but that three companies extended offers in probably less than 10 days (7 business days). That moved really fast — almost like they had to schedule interviews the very next day and give feedback within a day as wellBut congrats!",heinjarway,2025-07-26 08:06:01,246,cscareerquestions,t3_1m9n8ew,False,
n58cezd,"Nice job. One of the fastest turnarounds I have ever seen.I was laid off at the end of June. Still searching. 6yrs of experience also in the healthcare field.The fact that you got interviews from 10% of just cold applications is astounding. What is your tech stack, and can you share your resume template? How much Leetcode/system design did you do to pass your technicals?Granted, I'm not in SF nor go to a good school like Berkeley. But stories like yours is very uplifting as I continue searching.",exleader75,2025-07-26 08:01:07,48,cscareerquestions,t3_1m9n8ew,False,
n59da64,"Sounds kind of odd to me to not share pay when you've anonymized everything else so much. I'd conclude that although you did get a job, you're getting paid peanuts for the Bay Area.But the thing that you probably don't realize helps you a lot is that BS in CS. As someone who has a BS in ME who transitioned into software in the Bay Area (without a MS), can tell you that most software-only companies won't touch me with a 10-ft-pole.",Suitable_Speaker2165,2025-07-26 13:11:25,28,cscareerquestions,t3_1m9n8ew,False,
n595soc,"Definitely isn't as bad for seniors as entry level. I also think having the Berkeley name probably helped for you. I am also a senior lebel developer with a university degree from a very recognized/highly regarded university and hasn't been too bad of a job search, which I recently concluded. In this saturated market, having a prestigious school name is so helpful.",Illustrious-Pound266,2025-07-26 12:22:30,23,cscareerquestions,t3_1m9n8ew,False,
n58ey5y,What were the interviews like? Still leetcode or a mix? Were you confident of your prep and felt good after the interviews?,kafkaesqe,2025-07-26 08:26:06,6,cscareerquestions,t3_1m9n8ew,False,
n596yq6,Congrats! I think your cal degree plus living in the bay is a big plus. I am similar to you in a lot of ways career-wise and this is helpful information.,oldwhiteoak,2025-07-26 12:30:34,8,cscareerquestions,t3_1m9n8ew,False,
n58vkww,"The key thing you did was apply for 120 jobs right off the bat in a few days. That is the right approach in today's market. You need to generate ""buzz"" and make it seem like you're an in demand commodity with multiple options.And let's not ignore the elephant in the room. Your degree from Berkeley probably gives you a 5x boost.",csanon212,2025-07-26 11:05:09,17,cscareerquestions,t3_1m9n8ew,False,
n59oa5s,"> Job market not that bad for Senior SWEsDesperately snatching the very first offer that comes your way, for $100k in San Francisco, would imply the exact opposite.",xXxdethl0rdxXx,2025-07-26 14:16:37,27,cscareerquestions,t3_1m9n8ew,False,
n58kdw0,Do you think doing CS + BIO was worth it? Currently doing CS and either adding on Applied Math or Applied Physics.,ChemBroDude,2025-07-26 09:20:29,4,cscareerquestions,t3_1m9n8ew,False,
n5400iv,"Agile.Edit: my answer sounds flippant so I’ll add a little context.I predate Agile by quite a number of years. Whatever process we used to use, you can call it Waterfall or something else, GANTT chart based projects… they had a very different progression.You’d have long periods in the beginning of a project where you’d read and write documentation, do planning, research, exploratory code. Then things would ramp up, and you’d start getting the real work done. Towards the end of the project, the deadline would loom, and the real problems would start to appear.You’d enter “crunch mode”, which truly sucked, deeply sucked horribly. This could go on for a month or two. Eventually you’d launch and settle back into the beginning phase of a new project. This was a HUGE relief. Then you’d do it all over again.Sounds bad? Well enter Agile which aimed to solve these problems, supposedly. How? By turning everything into a constant drip of 2 week sprints. Every sprint is a deadline. It’s all a micro version of the old way, you never get into the massive crunch time (maybe), instead you trade it for a constant, unrelenting stress. It never lets up, not for a second - and you spend your entire career this way.It’s far worse.",nsxwolf,2025-07-25 16:20:12,669,cscareerquestions,t3_1m93jgi,False,
n541bdi,"Software Engineering generally requires a lot of mental power. You are required to have and store so much knowledge while also constantly learning new things i can see it easily getting overwhelming if you dont manage it right. Even for myself at least once a week i think: ""If i really wanna hit the next level i need to make this my passion/main hobby"". Its not a fun thought to have but i feel its whats required sometimes to reach the next level.Now you add that with all the BS cooperate can give you like PIP, Layoffs, fast pace delivery, code reviews etc it piles on a lot.Then you have the everyday life stress to manage and it starts getting really easy to see why people break down.Software engineering can be very lax but the moment you are important enough to actually need to get stuff done and working in a somewhat fast manner it starts becoming extremely stressful fast if you dont manage yourself well.",Sensational-X,2025-07-25 16:26:23,205,cscareerquestions,t3_1m93jgi,False,
n540l52,"Tech debt, no training, high turnover, no documentation, immature IT, no attention to security practices until it's too late .",Mactoma,2025-07-25 16:22:55,133,cscareerquestions,t3_1m93jgi,False,
n541rib,mental breakdown because the job is mental. just like blue collar has physical breakdown. the job squeezes as much juice as they can from you.,paperlevel,2025-07-25 16:28:31,65,cscareerquestions,t3_1m93jgi,False,
n542c6p,"I'm convinced that tech is the new finance. It's gone so downhill.I still remember the days when people got into tech to ""help make the world better place"" and Google's motto was do no evil. These days, quality of work life has gone downhill as companies expect developers to do more with less, layoffs left and right (no security) and oversaturated field of new grads aiming for vanishing number of entry level jobs.This is almost exactly what high finance was like, I remember.",Illustrious-Pound266,2025-07-25 16:31:14,74,cscareerquestions,t3_1m93jgi,False,
n57g387,"It's one of the only jobs where you are constantly creating / fixing, there are no objectively correct answers, and the process itself is technically challenging.An artist knows how to use their tools. They don't run into some major technical issue with the brush in Photoshop.An architect knows how to use their tools. They don't have some dependency break while designing a foyer.Engineers know the math and know how to use CAD etc. They challenges are related to the problem itself, not the engineering of it.Journalists and writers know how to write. They aren't struggling with Word.With software, the actual development is complex and difficult in a way that barely exists elsewhere. That's why there is constant learning, A/B testing, technical debt, security etc. to deal with. It's easy to burn out when the process of making something is riddled with issues.Like look at this shit: https://old.reddit.com/r/Supabase/comments/1ls31m9/after_three_days_and_15_hours_i_can_finally_log/Three damned days hunting down an oauth issue that was caused by cookies being too long for the default nginx set up. That sort of absolute fuckery is hard to find outside of software. That was mental torture to go through. In how many professions can you spend 15 hours trying to solve something and making absolutely zero progress because you are looking in the wrong place, and then solve it in 5 minutes when you have a lightbulb moment.I have previously worked as a hedge fund accountant and it was a breeze. Just effortless work towards a correct solution every time. The processes worked and there was a known correct solution you had to uncover. Easiest job ever. There is no A/B testing in producing a daily NAV, no trade offs, no technical debt, no performance issues.",lipstickandchicken,2025-07-26 03:26:11,16,cscareerquestions,t3_1m93jgi,False,
n5418e3,"For me personally it was a lack of an outlet. All this pressure built up during the day, combined with the sitting and thinking made me hate life. It helps to have a group of friends to bullshit with, some physical activity and maybe even a night of drinking (socially). Also some hobbies and things to look forward to on your off time. It’s the same thing everyone says, honestly, but it’s just so true. Not having a life and neglecting yourself will kill you. Especially in such a sedentary and lonely role.",Mad-chuska,2025-07-25 16:25:59,49,cscareerquestions,t3_1m93jgi,False,
n540ess,I can't identify. I guess I've always been lucky to join teams who have a capable manager who doesn't throw you under the bus. Sure it's stressful but it's nothing compared to other fields. At least you're stressed while sitting in a nice office with at least 30 mins for your lunch break.,Suitable_Speaker2165,2025-07-25 16:22:04,50,cscareerquestions,t3_1m93jgi,False,
n542zxl,"8 years in, was Sr SDE now Sr SDM, always stressed and burnt out ready to quit. It’s intense because you never have the luxury to complete something 100%. The reality is deadlines, short term trade offs made by C Suite and never the opportunity to address tech debt. They care launching something to take credit, get paid or paid to leave. There’s always constant churn, throwing blame, escalations, and pip culture. That’s why the more senior you get the more you care less, you’re numb to it all and look forward to getting pipped.",ChadFullStack,2025-07-25 16:34:24,13,cscareerquestions,t3_1m93jgi,False,
n540j0o,"It only gets more and more toxic as you go up and expectations are higher.Welcome to the clownfest called software engineering. Ya, the field is over saturated.That's what happens when your competition is the world (quite literally). And ruthless capitalism means companies have every incentive to replace you with a cheaper worker abroad.>I’m honestly worried about my future in this field if this is the standard lifestyle where work completely consumes your life and everyone around you is always in “survival mode.”Basically all the peers I know who are very successful in this field wants to ""get the f\* off"" once they have families and the kid grows up.On calls absolutely suck.The constant layoffs on the news is draining. Let alone seeing your star coworkers randomly be laid off while the incompetent ones get promoted.Companies constantly screaming (metaphor) at the workers how they want to reduce employees through AI. All the while offshoring jobs more and more.You look at the career page and you see more and more tech companies move all the new jobs to outside US like India.Constant rubric check to see how 'impactful' you are when the company is on a budget cut and cannot afford any serious projects. How do you justify your level then? Especially when much of tech firms today are well matured from the past decade and half growth?And so many bull crap projects which you know is liability to the company but is done because of the latest fad like 'crypto' or 'AI' or what not. Especially when your company's main product line has nothing to do with any of that. Literally burning money chasing fads.The constant ""re-org"". ""Re-org"" this. ""Re-org"" that. Just how many re-orgs are we doing. Every few months? What was that bull crap motivational speech #149 about how the project will bring some long term change? I guess scrap that a few months down the line?It's like the California Gold Rush. The early ones won. The ones joining now. Have fun.",Fwellimort,2025-07-25 16:22:38,46,cscareerquestions,t3_1m93jgi,False,
n59wm3z,"It is still becoming a meat grinder job with high pressure environments, poor work life balance, and instability. It's a different type of exhaustion",Conscious_Jeweler196,2025-07-26 15:01:33,369,cscareerquestions,t3_1m9vfjt,False,
n5a13o1,"Seems the ""6 figure job, no degree"" days are over",Repulsive_Zombie5129,2025-07-26 15:25:08,122,cscareerquestions,t3_1m9vfjt,False,
n5a6lnp,"I'm not aiming for a 6-figure salary. In fact, I'm literally doing an unpaid internship just to get a job.",AbdelBoudria,2025-07-26 15:53:41,44,cscareerquestions,t3_1m9vfjt,False,
n5ak6n6,"Love the optimism from someone based in Eastern Europe…you know, where the jobs are being outsourced to.",Bubbly-Concept1143,2025-07-26 17:04:39,40,cscareerquestions,t3_1m9vfjt,False,
n5a3e7p,"???? Who is getting hired right now with no degree and no experience? That myth needs to end. If you didn’t get in prior to the layoffs without a degree, your cooked.",Thin_Vermicelli_1875,2025-07-26 15:37:03,48,cscareerquestions,t3_1m9vfjt,False,
n5a196d,"Everything you listed is rare to find from one single company. There always is, or usually is a “catch”. It’s a good career if you find ALL of those positives in one company on top of job stability.",hotboinick,2025-07-26 15:25:57,20,cscareerquestions,t3_1m9vfjt,False,
n5a5mp5,"Looking at your Github, it's obvious that you enjoy the work and solving hard problems. I'll guess that you'll easily endure hard times.Other people who chased the bag, without any intrinsic CS interest, are getting weeded out by both humans and bots (which don't need housing, insurance, perks, or bathroom breaks). That's where you see a lot of the doom & gloom.The rest of the competent new grads will need to settle for $60-80k jobs... which is a far cry from the guaranteed $100k jobs of 2021.",kingp1ng,2025-07-26 15:48:38,32,cscareerquestions,t3_1m9vfjt,False,
n5a2yiw,You wanna be a truck driver or a Walmart greeter instead?,Nosa2k,2025-07-26 15:34:48,7,cscareerquestions,t3_1m9vfjt,False,
n5ac2xl,Highly depends on companies and teams.,EffectiveLong,2025-07-26 16:22:22,6,cscareerquestions,t3_1m9vfjt,False,
n5b9sks,"It is. CS peeps going into medicine to avoid the pressure. LOL. People on this sub are delulu. Its not as easy to get in as it was just a few years ago but when I started there were vastly fewer jobs compared to today and the pay was a joke (I made 29k in my first professional cs job, pretty much the same as my work study pay). I mentor some people who said they applied to 1000 jobs. What does that mean? Spam apply with a shoddy resume most likely never gets past the resume screen. I've hired a dozen people in the last year and none of them applied to even 100 jobs. What they did do is tailor their resumes for the positions they applied for and amplified skills that would pass the ATS systems most med/large size employers use. Those job openings also had hundreds of rejected applications many looking like they were made by AI, or were wildly, wildly unqualified for the positions.",Tasty_Goat5144,2025-07-26 19:18:46,5,cscareerquestions,t3_1m9vfjt,False,
n5hrjpt,"Honestly, hiring is like throwing darts blindfolded. Some of my worst hires were well educated.",Few-Artichoke-7593,2025-07-27 20:25:29,1607,cscareerquestions,t3_1mawjbx,False,
n5hsviv,"I've seen plenty of great bootcamp grads in my days. Not to mention, just because someone is a bootcamp grad, it doesn't necessarily mean that they lack a ""self taught driven personality"".I've worked with bootcamp grads who had to fully dedicate their time to their education + finding a job in the tech industry. Meaning, there were people who used to work at completely different industries — whether they were a cook, musician, or teacher — and they sacrified their known world in search of new opportunities, and I think that that's something worth recognizing and respecting.In my experience, you shouldn't be picking your hires based on ""bootcamp grads"" vs. ""university grads"", ""self-taught genius"", or whatever title/ego-based metric you're using.The criteria for hiring someone is simple: ""Are they fit for the job they're applying for?"" If you're turning people down solely on the basis that they graduated a bootcamp or what have you, that's pretty close-minded and will cause you to lose out out on some amazing talent.If a company does a bad job at hiring an employee, that's mostly, if not completely, on the company's hiring process, not on the applicant, bootcamp grad or not.",YonghaeCho,2025-07-27 20:32:12,439,cscareerquestions,t3_1mawjbx,False,
n5hrll5,"I mean yeah for entry level I'll take a CS degree over a bootcamp given the option. But the moment they have, say, 2 years of work experience behind their belt, I don't care if they got a bootcamp in growing corn. Education background is irrelevant to me at that point",RemoteAssociation674,2025-07-27 20:25:45,341,cscareerquestions,t3_1mawjbx,False,
n5hwv36,OP is upset a boot camp grad slept with their spouse.,cityintheskyy,2025-07-27 20:52:25,223,cscareerquestions,t3_1mawjbx,False,
n5htyej,"I felt the same way until I worked at a place that had hired a few bootcamp grads who were quite good once they got some experience under their belt. I was impressed with their work and was pleasantly surprised when I heard they'd all attended a bootcamp. However, they all had non-tech STEM degrees (things like biology, chemistry, environmental science), so perhaps that taught them to approach things rigorously, which carried over into their dev work.",rebel_cdn,2025-07-27 20:37:38,298,cscareerquestions,t3_1mawjbx,False,
n5hviw3,"Thi is a ragebait, this same logic applies to graduates .-,",BlueeWaater,2025-07-27 20:45:34,45,cscareerquestions,t3_1mawjbx,False,
n5hwoi7,"""Why is no one hiring junior roles"". -this sub",m0viestar,2025-07-27 20:51:29,16,cscareerquestions,t3_1mawjbx,False,
n5hszfz,This is obviously rage bait generated by chat gpt,Straight-Repeat-7439,2025-07-27 20:32:45,199,cscareerquestions,t3_1mawjbx,False,
n5husv0,"Bootcamp grad here 3YOE, doing just fine and recently scored a new role. I come from a design background and is something employers want so I can fit into their hybrid developer role. If you're not doing anything unique in SWE you'll not stand out. Doesn't matter where you come from. Good luck leet coding your way to new roles. Half of it is selling your personality outside of coding, people pleasing and communication skills, ability to solve problems and be a valuable asset to the team. If you don't have that it doesn't matter how much of a code monkey you are.",Solve-Et-Abrahadabra,2025-07-27 20:41:54,43,cscareerquestions,t3_1mawjbx,False,
n5hv8mb,"Sounds like 99% of college grads I know. Congrats, you uncovered the mentality of people who want to get paid but want to also live life. You’re a fucking luminary.",ViveIn,2025-07-27 20:44:07,30,cscareerquestions,t3_1mawjbx,False,
n5aevd7,"Lol, I am sure I am still a shitty SWE 10+ years in. But a lot of coworkers trust me and we get stuff done despite me still sucking and being imperfect.Stay humble. If you don't hate the job, you will likely get better just from doing more projects.",FeralWookie,2025-07-26 16:37:15,190,cscareerquestions,t3_1m9w8ug,False,
n5ajmsf,"Job hopping, especially to the really desirable places, is more about knowing the big tech hiring game than it is about being actually good at programming. The real secret weapon is networking.AI is nothing to worry about IMO. It's just another tool like autocomplete or stack overflow. You get better by practicing a lot and by constantly pushing the boundaries of your expertise until you are good at lots of things.",sudden_aggression,2025-07-26 17:01:50,26,cscareerquestions,t3_1m9w8ug,False,
n5a5fyg,If you want to improve yourself then set aside regularly scheduled time to learn and improve. Talk to your boss about potential learning activities in your area like local or virtual conferences you could attend in areas you want to improve in.If you want the ability to jump around to new companies then your performance is secondary. You need to network. Make friends at work that will want to work with you again because you're kind and reliable. They'll invite you to work with them at other companies or you can ask them about opportunities when you're looking for jobs.,waraholic,2025-07-26 15:47:40,47,cscareerquestions,t3_1m9w8ug,False,
n5aijpx,"Dunno if you're remote or what, but for me with ADHD, working remotely exacerbated all of this. I'd spend time poorly at home and feel behind/disconnected at work. Our RTO policies changed and I started coming in every day and it made a huge difference. Beyond that, nothing helped more than becoming a subject matter expert. Try to find a niche that you can learn more about than anyone else. Is there a part of your job processes that feels like toil, or takes a long time, or nobody seems to fully understand? Spend some time trying to improve that thing. Research alternative tools, try to write documentation (the kind you wish were there for you right now), see if you can reverse engineer it.You will probably get stuck early on, or feel like you're missing some fundamentals, but that's okay. Ask questions when you can, and keep chipping away at it. Eventually, when you have something that you think is an improvement over what's there (probably won't be all that hard to get to that point to be honest) you can let it be known that you've created a new resource or process, and get some people to review it. Chances are good you'll end up being a go-to person for that thing in the future. You'll have very experienced devs coming to you for help/advice/best practices in that domain.From there you'll probably incidentally pick up a lot through the process. You'll recognize things in the codebase as being in some ways similar to the thing you took ownership of. You'll get a request to integrate your thing with some other unfamiliar thing, and then you repeat the process until you understand that thing really well too.Bit by bit, you'll start feeling pretty confident. Source: my own experience, feeling like a bad developer for many years and then having my confidence grow as a contributor once I figured out this mindset",9ftPegasusBodybuildr,2025-07-26 16:56:19,13,cscareerquestions,t3_1m9w8ug,False,
n5a3rhi,Bro you guys have food work life balance?? I love food,kdot38,2025-07-26 15:38:58,34,cscareerquestions,t3_1m9w8ug,False,
n5a5370,"I'm so much in the same boat as you except I'm 35.Things I do:- Constantly tell my manager I'm willing to cross train (I do frontend but I've had stints in devops and infra doing this)- look for backlog bugs I can handle in other ""pods"", ask the other-pod PO if I can take it on- do you have tech support engineers? be their go-to person. always talk to them and QA.- get your tools in order. know how to quickly grep your codebase in seconds when the above comes at you with an issue.There are so many ways to stand out. The above is just what I do. I don't have a degree, I learned off youtube 3 years ago. But once you're in, you're in. Focus on the business, I think, and that'll get you the jobs.",trcrtps,2025-07-26 15:45:49,19,cscareerquestions,t3_1m9w8ug,False,
n5a5maw,"Me personally I ended up going for a more traditional masters route since my adhd makes it impossible to sit down and learn unless I’m under academic pressure of a deadline.On top of this, YouTube and personal projects really. You can learn absolutely anything on YouTube. Tutorials, Ted talks, tech conferences, actual lectures, phd research presentations, etc etc.The one thing I’ll say is, even with all this you need to be meaningful in your approach. It is not possible to learn everything from everywhere all at once. So just choose a skill that you like or can tolerate if the skill serves your career better.Slow it down, think, pivot",styada,2025-07-26 15:48:35,9,cscareerquestions,t3_1m9w8ug,False,
n5atlf3,"In terms of being a software engineer, you want to learn the system you're working on, both the big picture architecture and the code. That kind of thing takes time, you slowly build up knowledge as you work. At your level, you aren't going to be making design and architecture decisions, but when you are informed of ones that are made, ask the engineers above you why they made the choices they did. With code reviews, for a few of them, ask the senior developers to get on a call with you when they're reviewing your changes and have them walk through their process in reviewing your code. Also, post attention to their review comments so you don't make similar mistakes in the future",anand_rishabh,2025-07-26 17:52:23,4,cscareerquestions,t3_1m9w8ug,False,
n5bgg55,"There is no secret, it's just practice and hard work.",matthra,2025-07-26 19:55:09,3,cscareerquestions,t3_1m9w8ug,False,
n5s7ma7,"I feel like we’re missing a hello, world joke here",ssrobbi,2025-07-29 12:41:46,221,cscareerquestions,t3_1mc8oez,False,
n5sp5ek,"Put one less candle than his age, and write ++ in frosting next to it",a_library_socialist,2025-07-29 14:16:12,193,cscareerquestions,t3_1mc8oez,False,
n5rvz1o,"Aww this is really sweet (pun intended). In C++, the full minimal code to do this would be: #include int main() { std::cout << ""Happy Birthday!"" << std::endl; return 0; }But really all you need for him to get it is either `std::cout << ""Happy Birthday!"" << std::endl;`Or maybe even: `cout << ""Happy Birthday!"" << endl;`This is as small as it can get, hopefully it fits on the cake!",lukajda33,2025-07-29 11:25:18,317,cscareerquestions,t3_1mc8oez,False,
n5sqaoh,cake.age++; // :birthday_cake:,No3Mc,2025-07-29 14:21:48,45,cscareerquestions,t3_1mc8oez,False,
n5skwgh,"Cut off a little bit of the cake at the end (so its obvious a part of cake is missing), then stick some paper (or a sticky note) to the larger remaining cake with the message: Segmentation fault (core dumped)I find that pretty amusing.",PersianMG,2025-07-29 13:54:56,88,cscareerquestions,t3_1mc8oez,False,
n5ry7z7,"Get black and white candles, and use them to show his age in binary. Or cut some candles in half so they're shorter.E.g. 27 would be white - white - black - white - white, or pad it with black candles to a whole byte: black black black white white black white white",metaconcept,2025-07-29 11:41:35,177,cscareerquestions,t3_1mc8oez,False,
n5rww0w,I vote for ‘std::cout << “Happy Bday” << std::endl’And don’t put the ‘;’ at the end then see if he can spot the bug :saluting_face:,11markus04,2025-07-29 11:32:01,34,cscareerquestions,t3_1mc8oez,False,
n5rw0aq,Just do std::print(“Happy Birthday”);On the cakeEdit: that’s how you put happy birthday on screen in c++,misterespresso,2025-07-29 11:25:33,40,cscareerquestions,t3_1mc8oez,False,
n5s8aww,"Not directly programming language but for developers , I always liked the joke : “There are 10 kinds of people ; those who understand binary and those who don’t “ ( 10 being 2 in binary )",flarthestripper,2025-07-29 12:45:48,23,cscareerquestions,t3_1mc8oez,False,
n5tf49s,"In C++, it's a bit long. So I might use Python or Javascript, because it'd probably fit on a cake a bit betterI also think it'd be fun to increment his age (age = age + 1)In Python: age = age + 1; print(""Happy Birthday!"");In Javascript: age++; console.log(""Happy Birthday!"");",Substantial-Elk4531,2025-07-29 16:18:53,6,cscareerquestions,t3_1mc8oez,False,
n586gzt,"Most of the revenue comes from existing investment and as more people go online more often you get an increase in usage that translates to increased returns on the existing infrastructureYou could stop developing googl search, YouTube, Facebook, Reddit, etc and just have staff to maintain them in the current state and they’d all be cash cowsA lot of the investment has always been about the next billion dollar product, or an arms race between the various companies",slpgh,2025-07-26 07:03:54,222,cscareerquestions,t3_1m9mua9,False,
n58c07n,"Revenue comes from sales, if you can make those sales with 10,000 people or 5,000 people, revenue remains the same.Revenue and headcount is absolutely correlated generally speaking, but a lot of companies just employ far more people than they really need.That can be due to a range of reasons, often people just want to make their own department bigger, so if they have the budget to hire, they'll hire. In a lot of organisations, if you don't spend your budget, the budget will be reduced next year, so there is no incentive to save money.I would never defend anything Elon Musk does, but the fact is he reduced headcount at Twitter by over half, and it's still functioning, it turns out over half the people there didn't really need to be.I'm not saying this is good or bad, but the fact is most large companies employ far people people that they realistically need.I think if all companies ran efficiently, or at least tried to, there would probably be 50% unemployment, so it's not like it's necessarily terrible that companies employ more people than they need.",ToThePillory,2025-07-26 07:57:08,19,cscareerquestions,t3_1m9mua9,False,
n58699u,"They don't need that many people to begin with, there are a lot of ""fat"" in these big companies.",timo4ever,2025-07-26 07:01:55,105,cscareerquestions,t3_1m9mua9,False,
n58ecy5,"In my experience, outsourcing and relying on existing or legacy product lines. And a combination of.Most companies from what I can see aren't producing new greenfield applications or researching anything major. They are either keeping old legacy products maintained with break fix or net framework updates, or at the most, farming off integrations or synergies to outsource firms. Who cares if it works, they can begin to start building revenue generation forecasts on it which is great for looking impressive to shareholders.That's the most part at least. The only companies I see doing anything really new, interesting or truly greenfield are startups. They either last a year or two before closing up shop, or getting bought out by bigger organisations who immediately shed any staff who weren't absolutely intrinsic to the synergy of product lines. And even then, that guy is walking a tight line. That is if the tech is even used. A lot of startups are bought and broken up simply to keep them from growing into a serious competitor.",IEnumerable661,2025-07-26 08:20:11,6,cscareerquestions,t3_1m9mua9,False,
n587vqr,"Inertia. It lasts a while, not forever.",__scan__,2025-07-26 07:17:09,9,cscareerquestions,t3_1m9mua9,False,
n587bbb,Maybe one of the parts in your question is not true. Might want to evaluate your question,YourOwnMiracle,2025-07-26 07:11:46,7,cscareerquestions,t3_1m9mua9,False,
n58yoek,"Employees are a cost center and don't generate revenue.Subscriptions, products, and license agreements generate revenue.",These-Bedroom-5694,2025-07-26 11:30:31,7,cscareerquestions,t3_1m9mua9,False,
n59u8dp,They're selling AI to each other of course.,savetinymita,2025-07-26 14:48:51,3,cscareerquestions,t3_1m9mua9,False,
n5anahj,"The AI we have in big tech is a game changer honestly compared to what i use for side projects. It’s absolutely been a boon, i use agents literally all day at my job.",Less-Opportunity-715,2025-07-26 17:20:19,3,cscareerquestions,t3_1m9mua9,False,
n5c2g5x,"The tech giants often have a core business or two that is outrageously profitable, and what do they do with the money? What tech companies are supposed to do, is take investment money, invest into new products and businesses that should turn profitable.. But often those new products and businesses don't turn profitable.The other option is to just sit on the money or invest it into other assets or return the money to investors. And that is admitting they don't have new tech ideas that are worthy of investing into.When tech giants cut staff and keep their profits, they are generally cutting staff in things they don't need or new projects that they feel won't pan out.",Joram2,2025-07-26 21:56:55,3,cscareerquestions,t3_1m9mua9,False,
n4rl5jr,2000 applications... Thay's crazy.,gmegoingtomarss,2025-07-23 19:09:28,102,cscareerquestions,t3_1m7hutb,False,
n4s4d8l,"Here I was thinking that if I got to 5 YOE it'd get easier lol. Why'd you gotta crush my dreams OP???But seriously, congratulations! I hope you like your new role.",Various-Function5104,2025-07-23 20:39:53,19,cscareerquestions,t3_1m7hutb,False,
n4w1998,Being rejected after 6 fucking rounds I would burn the building down,Karatedom11,2025-07-24 12:36:56,14,cscareerquestions,t3_1m7hutb,False,
n4s39fk,Can I know what AI you used to apply for jobs?,tofumanboykid,2025-07-23 20:34:45,7,cscareerquestions,t3_1m7hutb,False,
n4s1xin,Great post! Thank you for your candor. Best of luck with your next job.,WartimeRecipe,2025-07-23 20:28:31,3,cscareerquestions,t3_1m7hutb,False,
n4toq4f,Honestly I don’t know how to even get an interviews without a good reference. Very polished resume with strong match gets rejected the next day. I have not clue what else to do,I8Bits,2025-07-24 01:42:43,3,cscareerquestions,t3_1m7hutb,False,
n4z3831,100 apps in a day is diabolical. OP must be running on meth or something,Hot-Syrup,2025-07-24 21:18:48,3,cscareerquestions,t3_1m7hutb,False,
n4z5mmt,What I'm seeing is never bother with anything oast a 3rd interview,Luc-,2025-07-24 21:30:42,3,cscareerquestions,t3_1m7hutb,False,
n4tmmvy,How long did it take you to land the first offer?,WhatEngAmI,2025-07-24 01:30:24,2,cscareerquestions,t3_1m7hutb,False,
n50c277,"I recently did capital one's 4 hour long interview, thought I had it in the bag and got denied. It definitely seems like it's a super competitive job market right now.",bellium398,2025-07-25 01:25:47,2,cscareerquestions,t3_1m7hutb,False,
n4muq58,"Your managers are likely non-technical folks who have been sold marketing slop on the capabilities of AI, and fundamentally misunderstand what software / technology is, and what these tools are capable of. You'll be hard pressed to communicate up and explain that these tools don't have the capacity to do what's advertised (they won't listen to you), so I suggest you instead explain in terms of metrics how extensive use of AI impacts productivity and output (because it's always going to be a net negative in large orgs), or, alternatively, ask questions to the managers on how they're future proofing their own career from AI, since I'd much rather have an LLM manage my sprint board and translate product requirements from the business than have an LLM write code for me.",Real_Square1323,2025-07-23 01:24:14,152,cscareerquestions,t3_1m6vx0i,False,
n4mtgcy,"What do you mean by ""every discussion is about how to future-proof your career""? Do you all not have work to be doing right now?",FitExecutive,2025-07-23 01:16:48,26,cscareerquestions,t3_1m6vx0i,False,
n4of35t,"I work in the consultancy space and lately I have been pulled into engagements where the ask is to implement agentic systems to automate a bunch of technical processes. For now, I don’t see AI agents performing well with large and complex codebases or the economics of tokens/infra being sustainable, but the problem is that non technical stakeholders are the first to jump in to the possibility of reducing the technical workforce to save money. A few of them referred to data engineers as “code monkeys” that only push code. They clearly do not understand the roles of technical staff which is why agents are doomed to begin with. Unfortunately, us technical people are in their eyes a liability and not an asset. AI is not the problem, non technical management is",tortilladekimchi,2025-07-23 08:26:35,8,cscareerquestions,t3_1m6vx0i,False,
n4nn2vr,Drop the entire engineering team and see who barks,ScorpyG,2025-07-23 04:22:51,5,cscareerquestions,t3_1m6vx0i,False,
n4mz1jq,Go into accounting,HedgieHunterGME,2025-07-23 01:49:12,3,cscareerquestions,t3_1m6vx0i,False,
n4mur1j,">Since the time I’ve come here, I’ve not had senior managers show interest with me learning any technical skills - like cloud and all. There’s such a strong feeling everything will be taken over by AI but at the same time I feel like my team members aren’t very strong technically where we can even properly identify best practices without AI that I feel AI isn’t going to make that process any better.Find a better team or company. Preferably one that focuses on solving hard technical problems outside of the web development space where everything seems to be mostly AI-generated.",kevinossia,2025-07-23 01:24:23,10,cscareerquestions,t3_1m6vx0i,False,
n4na6m4,"You’ve just described like 90% of c-suite execs. They’re convinced that AI is this panacea that will enable them to eliminate high-paying roles. I am looking forward to when their AI tools, which, let’s be honest, will be increasingly utilized by an offshore workforce, fail catastrophically because the code was not written by anyone who had a complete understanding of the company’s service, product or stakeholders. At that point, there will likely be a shortage of skilled devs because people pursued other careers due to layoffs and offshoring in tech, and the company will need to pay through the nose to have an experienced engineer review their codebase and fix it.",suitupyo,2025-07-23 02:55:30,3,cscareerquestions,t3_1m6vx0i,False,
n4muwjb,"As of now, I think companies are laying off all the people they overhired the last few years and they are using AI as an excuse. I have a hard time believing that AI is close to being ready when it can't even generate an image correctly, or write somthing that does not have obvious errors..",leadfarmer3000,2025-07-23 01:25:16,10,cscareerquestions,t3_1m6vx0i,False,
n4nb7hb,"Ok so they want code free?Ask them to take an agent, any one they want and have them use it for a while.. they can see the cost and how ""good"" they work.Since they no longer need a technical person and everything is code free.... Who are they expecting to use those tools?",PineappleLemur,2025-07-23 03:02:05,2,cscareerquestions,t3_1m6vx0i,False,
n5ahu9i,"You're not alone what you're facing sounds like a frustrating mix of hype-driven leadership and lack of real technical vision. It's concerning when senior managers push ""AI-first"" strategies without investing in actual technical upskilling or creating space for engineers to lead that evolution.You’re doing the right thing by trying to upskill but don’t let the noise distract you. Focus on foundational skills that AI can’t easily replace: strong cloud fundamentals (like GCP or AWS), designing robust data pipelines, and understanding data architecture at scale. If your org is drifting from technical depth, it might be a cultural issue more than a personal one. You're not behind just caught in a moment where leadership is reacting more than guiding.",Superb-Education-992,2025-07-26 16:52:43,2,cscareerquestions,t3_1m6vx0i,False,
n5p3tkc,"If you find yourself in a difficult place in your life, we urge you to reach out to friends, family, and mental health professionals. Please check out the resources over at /r/depression, /r/anxiety, and /r/suicidewatch. Feel free to [contact the /r/CSCareerQuestions mods](https://www.reddit.com/message/compose?to=%2Fr%2Fcscareerquestions&subject=&message=) for more information or help.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-28 23:06:14,1,cscareerquestions,t3_1mbvces,False,moderator
n5p88g5,Non-technical industry. It’ll be boring and you’ll probably be bitching about that in a couple years.,nullstacks,2025-07-28 23:30:10,74,cscareerquestions,t3_1mbvces,False,
n5p7zgd,"I clock off at 5, I don’t do OT. Maybe it’s a job issue?",FlamingoEarringo,2025-07-28 23:28:49,22,cscareerquestions,t3_1mbvces,False,
n5p4rp2,"Sounds like a job problem, not a career problem.The truth that a lot of people here don't want to admit is that, for all the faults of this field, it's still one of the best careers to have by a mile.",olduvai_man,2025-07-28 23:11:25,111,cscareerquestions,t3_1mbvces,False,
n5p569q,"I feel you, I never realized how good I had it at my first job. It sucks if you end up at a place with horrible culture because then you have to think about how leaving early looks on your resume",futureproblemz,2025-07-28 23:13:37,8,cscareerquestions,t3_1mbvces,False,
n5p6704,"Typical answers I've seen: defense, government, non-technical companies with conservative strategies.",BurlHopsBridge,2025-07-28 23:19:08,6,cscareerquestions,t3_1mbvces,False,
n5prgbk,"Long term programmer here. You get used to the always learning. At the start, it's a heavy lift, but if you get one OS, one language, one database system, the rest tend to fall in place. Think about how hard your first language was, compare that to your 2nd and 3rd... The 3rd should be 10X easier.It's not going to change. There's always some OS that sticks around, a language that has more holding power than others, but they will mostly come and go.Sometimes you'll find an easy ride job, but that's really company dependant.",KarlJay001,2025-07-29 01:18:58,6,cscareerquestions,t3_1mbvces,False,
n5p54rj,"> Or is this industry really over at this point and I should start making plans to go elsewhere.There is nowhere else. There is no industry that pays this well and expects so little. You just want a ""normal job"", like the one you were laid off from... You were laid off because they could no longer afford to pay you to do a ""normal job""Don't get me wrong, there are other places. Electrician and Plumber are also great careers, but you will find the same shit (and sometime literal shit) there.Dealing with BS is literally why there is a paycheck. A no BS job is just volunteering.",slimscsi,2025-07-28 23:13:23,13,cscareerquestions,t3_1mbvces,False,
n5p7awj,“I just want a normal 8-5 job and log off”brother that’s most of them,CountyExotic,2025-07-28 23:25:06,8,cscareerquestions,t3_1mbvces,False,
n5pg22f,"[You said it yourself, chief](https://archive.ph/TtCpj)[A couple times, actually](https://archive.ph/chDeT)EDIT: Look, bud. You're [discouraging others from pursuing this field](https://archive.ph/meVQK) while having an extensive posting history hinting at your own discontent with the field on this subreddit and elsewhere. I think readers should know that you might be projecting; there's probably a reason you've hidden your account's activity from public view.EDIT 2: Nice block, OP. After acting *so* tough in comment sections around here, you fold to the slightest bit of scrutiny.",DragonsAreNotFriends,2025-07-29 00:13:36,10,cscareerquestions,t3_1mbvces,False,
n5ih40b,given the current market you got pretty good response rate tbh,PixelPhoenixForce,2025-07-27 22:41:36,242,cscareerquestions,t3_1mazrrd,False,
n5ihj7n,"That sounds realistic to me. I have a daily quota of applications to fill in, but I only keep track of positive replies. That gives me only a rough estimate of the percentages, but your experience is shared by many. You may have better response rates with ""prestige"" employers on your resume, but it's still not great.",HansDampfHaudegen,2025-07-27 22:44:03,48,cscareerquestions,t3_1mazrrd,False,
n5ipy5k,> Referrals: 3x odds of a first interview but didn’t change application or mid-process ghosting oddsreferrals only help you in scheduling that first call. it holds no weight once that call starts,besseddrest,2025-07-27 23:32:53,30,cscareerquestions,t3_1mazrrd,False,
n5ii2ji,"I’m confused you say you’re a 4 yoe mid level swe but when I look at your linkedin its all PM experience(with 3 yoe FT experience) which puts SWE to shame in terms of over saturation?If you want my anecdote, 1 yoe at unicorn, no opentowork on and ive gotten 50+ reachouts in a year + 44% interview rate for cold applications.",coinbase-discrd-rddt,2025-07-27 22:47:13,41,cscareerquestions,t3_1mazrrd,False,
n5ikiv1,Yes this is pretty normal,Illustrious-Pound266,2025-07-27 23:01:31,6,cscareerquestions,t3_1mazrrd,False,
n5ipvb4,"If you're mostly aiming for advertised fully remote roles, this is common if your resume is anything but perfect. Those get absolutely hammered by bots, automation, unqualified candidates, and fraud. It's a shrinking segment as well.Half or more of these roles are never advertised (like indeed and linkedin) and are filled through referrals and professional networks. If they're listed anywhere, it's only on the company's own site.",ben-gives-advice,2025-07-27 23:32:25,5,cscareerquestions,t3_1mazrrd,False,
n5ini3o,I got 10 interviews after about 470 applications. 2.5 yoe,cs_pewpew,2025-07-27 23:18:41,3,cscareerquestions,t3_1mazrrd,False,
n5iv2t6,"From your description of your career it seems like you’ve had like 4 jobs? Maybe more? With 4 YOE people want to see a little more commitment today, especially from a mid career hire. Stay at your next job for longer if possible",Nemnel,2025-07-28 00:03:13,3,cscareerquestions,t3_1mazrrd,False,
n5iz586,"Yeah that’s pretty much in line with my experience. 54 applications thus far, only one interview; the other two interviews are based on professional connections.HUUUUUUGE percentage of ghosting. Honestly, though, they’ll tell you right up front “we will be in touch IF WE THINK” etc. Like, automatic emails are expensive.This is the worst job market I have seen in 25 years as a SWE. Then again, I’m officially ancient now, so there’s almost certainly some ageism sneaking in there.And a lot of these jobs aren’t real, or they aren’t really hiring for the position. Like, you cannot tell me that you got hundreds and hundreds of applications and there was absolutely NOBODY who can do your bog-standard senior MEAN stack job with DevOps frosting, so you repost the same job a month later. They are building an applicant pool or harvesting data or building their LinkedIn follower list or something fucky like that.",RichCorinthian,2025-07-28 00:28:29,3,cscareerquestions,t3_1mazrrd,False,
n5il4jh,"My a senior at a big tech company, when I got this job a year ago coming from a start up, my interview rate was about 20%.For every 24 jobs I applied to, I got something like 1 offer.My strategy was mainly referrals, local companies, and then research to find companies doing what I want. Every application included a cover letter, and that helped a lot, but it slower.",justUseAnSvm,2025-07-27 23:04:58,5,cscareerquestions,t3_1mazrrd,False,
n5oav06,can you take the offer and move closer to the job location?,wicccked,2025-07-28 20:37:38,270,cscareerquestions,t3_1mbrjn4,False,
n5obf2f,"legit just move lmao\- unless you got like actual reasons you can't move, then stay obviously. But perfect world, take the offer and move would be my move",deeht0xdagod,2025-07-28 20:40:15,196,cscareerquestions,t3_1mbrjn4,False,
n5opxw2,Use your extra $50k/year to move.,Coldmode,2025-07-28 21:51:48,91,cscareerquestions,t3_1mbrjn4,False,
n5ob66n,Only if you move within 30 minutes of the new job. 15 hours a week of commuting would be a killer.,drew_eckhardt2,2025-07-28 20:39:06,97,cscareerquestions,t3_1mbrjn4,False,
n5oe238,"Its not gonna be only 1.5h, think about occasional strikes, accidents, rain & storm delays. Count the preparation before the take offs. Let it be 2h. That is a lot. Your time sometimes cant be paid with money.",AbbreviationsTrue183,2025-07-28 20:52:37,60,cscareerquestions,t3_1mbrjn4,False,
n5oexvk,i tried to commute 3 hours round trip and i quit. you have to move closer to the new job imo,SUsudo,2025-07-28 20:56:47,19,cscareerquestions,t3_1mbrjn4,False,
n5osgyt,"Yes you should take the new offer because:1. The pay is way higher, you'll get 2k/month more, a lot of money to move closer2. Your company were ok underpaying you3. They didn't follow through with your initial work agreement, why would they be different this time?",victillian,2025-07-28 22:04:57,29,cscareerquestions,t3_1mbrjn4,False,
n5obvxi,"Unless I was unemployed and extremely desperate, I would never willingly take a job that had a 1.5 hour commute.I once had an internship whose commute was 1-1.5 hours depending on traffic/accidents, and it was legitimately soul sucking. After that experience, I promised myself I would never do a commute like that ever again.If I wanted to take that job, I would relocate closer to the office. If that's not an option, I'd decline that job and continue job searching until I land something that's both more money, and a sane commute.",SouredRamen,2025-07-28 20:42:26,20,cscareerquestions,t3_1mbrjn4,False,
n5oi9hl,"Yea no, it might sound doable in your head to commute 3-4 hours a day but it will kill you very very fast. You either move closer to the new job site or stay with your old one.",curie2353,2025-07-28 21:13:04,10,cscareerquestions,t3_1mbrjn4,False,
n5ogibx,"Just move, you’re still gonna have to do that commute 3 times a week",bunnycabbit,2025-07-28 21:04:30,5,cscareerquestions,t3_1mbrjn4,False,
n5o4df2,I got out of salesforce development and am never going back. Too niche and you are hitching your wagon to the success of a single company for employment,SeaworthySamus,2025-07-28 20:07:16,72,cscareerquestions,t3_1mbqe68,False,
n5o4lwe,"So, the main issue with Salesforce is that you're probably not going to be doing proper ""application development"". In my experience, Salesforce is an ecosystem, a platform you'd be developing on. Salesforce has a proprietary java analogue called Apex, but it's mostly used to create integrations with your organization in the way of update triggers, web hooks, and basic API endpoints.So while you might end up hitting a lot of the core concepts of app development, it's all going to be Salesforce flavored. It's also going to be a lot of messing around with UIs, Salesforce is not exactly a developer first platform, it's very much a management / business people first platform.So yeah it's probably a pigeon hole, but it's a very high paying pigeon hole",FriscoeHotsauce,2025-07-28 20:08:22,28,cscareerquestions,t3_1mbqe68,False,
n5o1j51,"Salesforce is a niche subsection of programming. You can get bigger salaries as you specialize. You can also pigeonhole yourself out of a job. I can't tell you the best choice, but I can tell you I wouldn't go back to Salesforce after jumping to proper development.",drunkondata,2025-07-28 19:53:45,59,cscareerquestions,t3_1mbqe68,False,
n5o9hhe,Salaries can be high because it’s a smaller candidate pool. I personally wouldn’t build my skills around a single product/company even though salesforce is probably here to stay.,StandardBusiness9536,2025-07-28 20:31:11,10,cscareerquestions,t3_1mbqe68,False,
n5o7xsl,"Former Salesforce dev here. I also was reorganized into the role after spending years doing DevOps stuff. (Mostly server automation development with Ansible/Puppet/Chef. After we moved to the public cloud space most of that server automation work disappeared.)Pay was fine, but frankly I just didn't like working with the product that much. It's all largely Java-based, and admittedly I've never been a fan of Java. But even if you ignore the ""Java-ness"" of it... I frankly just don't give a hoot about Salesforce itself. Straight up just do not care, and I found myself incredibly bored with the work.It's a specialized role, but the good news is Salesforce is widely used across multiple industries. In many ways I would say it is similar to mainframe. Those industries that still run mainframes really need developers who know what they're doing on mainframe. It's just not something they teach in school, and companies are willing to pay for devs who know what they're doing. But it doesn't change the fact that it's very specialized.",RagnarKon,2025-07-28 20:24:00,9,cscareerquestions,t3_1mbqe68,False,
n5ob3w2,We had a restructure about a little over a year ago. I was a java back end developer and our team moved to Salesforce. We still worked on java back end stuff but the focus was Salesforce. Personally I absolutely hate it. It is niche and the whole platform is dumb for lack of a better word. I don't wanna rant but I've been searching for a new job ever since. Unfortunately in a bad market I have to put up with SF.,shadow2mario,2025-07-28 20:38:47,7,cscareerquestions,t3_1mbqe68,False,
n5odnf3,"As someone who was in swe then salesforce and now back to swe, it’s a career killer. Retire here or start fluffing your resume with what you actually want to do. I had to bust my ass and beg to get back into swe, getting interviews was so difficult and salesforce roles are hard to come by",wendiguzac,2025-07-28 20:50:43,7,cscareerquestions,t3_1mbqe68,False,
n5oflgu,"Those who live by the Salesforce, die by the Salesforce.",mkx_ironman,2025-07-28 20:59:59,7,cscareerquestions,t3_1mbqe68,False,
n5oby12,Salesforce can be great but you need to learn SAP integration with it to get high paying gigs.,burneremailaccount,2025-07-28 20:42:42,5,cscareerquestions,t3_1mbqe68,False,
n5ff16h,You need therapy. Most imposters don’t last 15 years.,CodeCody23,2025-07-27 13:15:11,191,cscareerquestions,t3_1malw4j,False,
n5ffctt,Probably work on solving the imposter syndrome instead of upending your whole career.,Firm_Bit,2025-07-27 13:17:08,63,cscareerquestions,t3_1malw4j,False,
n5ffsw7,Have you thought about moving away from contract work?,KhonMan,2025-07-27 13:19:49,20,cscareerquestions,t3_1malw4j,False,
n5g4st5,"once you hit a certain level of technical skill, what moves you forward isn’t just being “good at code” anymore. I’ve had to learn this the hard way myself and I say this as someone who used to be extremely shy and mostly kept my head down hoping the work would speak for itself.from my observation and also from my own experience over time, I realized the engineers who stood out and unlocked those higher-leverage, better-paying, more fulfilling roles were the ones who had also built non-technical leverage: they knew how to tell the story of their impact, they built trust quickly with new teams, managers, and stakeholders, they could navigate ambiguity and influence decisions, not just write codeThat kind of soft skill isn’t just for managers. It’s essential for senior+ ICs too, and something which helped me catapult my career as well",SomeRandomCSGuy,2025-07-27 15:34:45,8,cscareerquestions,t3_1malw4j,False,
n5g1zxe,"What makes you think your imposter syndrome is career related? As someone who also has it, I hate to tell you it’s just inherent to you. You need to work on your anxiety and ability to let go.",Zimgar,2025-07-27 15:20:38,3,cscareerquestions,t3_1malw4j,False,
n5gb2j5,If you managed to work for 15 years you must be doing something right.,Alex-S-S,2025-07-27 16:05:41,2,cscareerquestions,t3_1malw4j,False,
n5lrfx0,"first up congratulations for making it to the 15 year mark, It shows a lot of persistence to be in this position. You need to find a project that sparks joy. It could be within or outside of your workplace. Win there and bring that energy to your actual workplace. Don't worry about getting into middle management, AI will be a wrecking ball for them. It's the best time ever to be an IC. Good luck!",finfun123,2025-07-28 13:20:40,2,cscareerquestions,t3_1malw4j,False,
n5qsia2,Sounds like you feel trapped in your current job. You aren't. None of us are ever as trapped as we sometimes feel. Make the changes you need. You aren't a tree- Go somewhere else!,SergeantPoopyWeiner,2025-07-29 05:26:45,2,cscareerquestions,t3_1malw4j,False,
n5g7hfz,"since SIX whole different people in this thread have spelled it incorrectly, I feel compelled to say it’s “impostor”, not “imposter”.Anyway, I too have impostor syndrome",Impressive-Bass7928,2025-07-27 15:48:01,3,cscareerquestions,t3_1malw4j,False,
n5femc9,You could teach. You could try sales. You could move into IT roles.,robocop_py,2025-07-27 13:12:44,3,cscareerquestions,t3_1malw4j,False,
n5bfro4,I get a lot but usually for bad jobs. Contract roles or random no name companies,NoNeutralNed,2025-07-26 19:51:25,134,cscareerquestions,t3_1ma2cms,False,
n5bl8in,A TON for early stage startups that the recruiter thinks I would be awesome at because of my startup experience at places like JP Morgan,pewpewpewmoon,2025-07-26 20:21:25,81,cscareerquestions,t3_1ma2cms,False,
n5cnlnw,Section 174 write off for R and D just went back to immediate (15 year amortization for offshore though which is great),Haunting-Traffic-203,2025-07-27 00:03:50,13,cscareerquestions,t3_1ma2cms,False,
n5byrj6,"It’s steadily been increasing for me since the start of this year, 2025. I think we’ll have a September surge, maybe not as big as it’s been in year past, but hopefully more opportunities coming down the pipeline. My company has been hiring across a number of roles all year long.EDIT: I should add I have been employed this entire time. I don’t think people unemployed get as much recruiter activity on LinkedIn",thatgirlzhao,2025-07-26 21:35:53,12,cscareerquestions,t3_1ma2cms,False,
n5bhh33,Somehow just zon recruiters in my inbox.,hustle_HR26,2025-07-26 20:00:46,7,cscareerquestions,t3_1ma2cms,False,
n5bjhcr,i’ve been getting a lot since the beginning of this year,ASM1ForLife,2025-07-26 20:11:44,5,cscareerquestions,t3_1ma2cms,False,
n5cysj7,"Meta, Amazon, nvidia, and doordash DMd me this week for L5 roles. We are so back, baby.",CountyExotic,2025-07-27 01:16:07,21,cscareerquestions,t3_1ma2cms,False,
n5c5ypg,What kind of tier place do you work?,Fun_Highway_8733,2025-07-26 22:17:15,5,cscareerquestions,t3_1ma2cms,False,
n5cfa77,Not at all.,popeyechiken,2025-07-26 23:13:26,2,cscareerquestions,t3_1ma2cms,False,
n5d801v,"For every legit and even remotely appropriate message, I get 10 that are unauthorized 3rd party recruiters or just scammy as fuck in some other way.",RichCorinthian,2025-07-27 02:16:18,2,cscareerquestions,t3_1ma2cms,False,
n4pwxm2,"Your understanding of ""networking"" is wrong.Networking is not connecting with randoms on LinkedIn. It's not having a song/dance with a stranger. It's not walking into a tech conference, exchanging business cards, and aggressively shaking hands. It's not cold messaging people asking for some awkward ""coffee chat"" even though you both know you're just trying to milk them for a job.That feels fake as hell because *it is* fake as hell. But it's also not networking.Our network is made up of our *friends, family, and colleagues*.That's it. So in order to ""network"" you expand upon 1 of those 3 categories. The family category's tough to expand, you're kinda stuck with it. The colleagues one you expand throughout your career as you work with people. The people you've met and worked closely with in college also count as colleagues (even if they're *both* friends and colleagues). The professor you saw weekly in office hours, or the TA you had a good connection with are colleagues.The ""friends"" category is by far the easiest to expand. You expand this category by.... making friends. That's it. There's nothing more to it. They don't need to be technical either. Someone working in sales is able to refer someone to SWE. They're character checks for the company, not skill checks, that's why they still interview you. Hiring unknowns off the street is risky for companies, because character-red-flags are easily hidden and don't come out for months. Hiring someone that an employee they already like is vouching for is significantly safer.The reason meetups are so commonly suggested is because getting into a room with a bunch of people that all have a shared interest is a great way to *make friends.* If you go to those thinking you're gonna get a LinkedIn connection, you're not going to make any friends *or* connections. Go into those because you're interested in X, and the friends will follow. Doesn't need to be technical either. Go to a rock climbing meetup, go to a model train meetup, hell, go to your local dive bar and buy a stranger a drink and get to chatting. I've made life-long friends that way.The bad news is none of this is a quick fix. Making friends takes time. We're not disposable one-time use napkins that you toss in the bin as soon as you get what you want from us. If you form a *genuine* connection with us, over the course of months, we'll refer each other because we want to, and we're doing so becaues we're friends, not because we're using each other.",SouredRamen,2025-07-23 14:33:18,45,cscareerquestions,t3_1m74q9x,False,
n4or24y,"In real life.Usually at work or in university, or tbh the same way you make friends - at random hobby groups through friends, etc.Those friends then go on to work jobs you like, which is when you shoot them a ping.I don't really get this meetup dot com idea. Shits weird ngl",8004612286,2025-07-23 10:18:53,74,cscareerquestions,t3_1m74q9x,False,
n4p8cus,"Networking is a long game. You have to make to goal building relationships not getting a job from someone. These people are humans too. As a more junior dev I went to a junior dev meetup. Met some people who were trying to get their first job. Really got along and they seemed switched on. My company wasn’t hiring at that point but I messaged my boss that there were some switches on developers looking for entry level roles. We were able to make a role which one of them got. The hidden job market is a thing. These jobseekers didn’t think they would get a job from me, they weren’t trying to use me. But it worked out! “It isn’t what you know but who you know”, and if you know more people you up your chances for opportunities. We are more likely to recommend people we know and trust. We are more likely to listen to the recommendations of people we know and trust. But it is a long game. Can be years to see the benefits.",Svenstornator,2025-07-23 12:23:19,27,cscareerquestions,t3_1m74q9x,False,
n4pgfoa,">Any time I connect with someone on linkedin they accept the request and dont respond to any messages. Linkedin is for keeping up with people you've already connected with in real life.>Wow, the opportunity to wait in a line of 50 people for a company to talk for 2 minutes with some schmuck and be told to apply online anyway. Don't talk to those people. I can almost guarantee you there are companies where the line is shorter, it's just not going to be Microsoft or Meta.>So yeah, how do you actually network? The application season for summer 2026 internships hasn't even begun yet and I feel hopeless after last yearClubs, company information sessions, Greek life, design teams, classes, anybody your parent's happen to know.",Drauren,2025-07-23 13:09:13,8,cscareerquestions,t3_1m74q9x,False,
n4pzayl,"Go rock climbing in seattle, you can get as many Amazon or Microsoft you want, double points if you know how to belay.",blueandazure,2025-07-23 14:44:36,7,cscareerquestions,t3_1m74q9x,False,
n4q8yy7,"You make friends. That’s it. It’s the productive side effect of being around people in your industry that you establish personal connections with.Networking is just a fancy word for making friends (with people in your industry).Do not make the mistake of thinking it means nepotism or brown nosing or whatever. Just… meet people. Talk to them. Help them out. Become someone they want to be around more. Be cool.Meditate on what it means to “be cool”. I’m not joking. I mean that literally. Meditate on it.They’ll see your competency naturally, you don’t need to try to demonstrate it for them. Let me reiterate: they’re actually in your field and they’ll recognize your level of competency in that field one way or another. *Do not try to impress them,* become someone more impressive (or don’t, I’m not the boss of you).The rest has a way of working itself out in **shockingly** short fashion, albeit in ways you can’t actually predict or plan for.",The_Northern_Light,2025-07-23 15:29:14,3,cscareerquestions,t3_1m74q9x,False,
n4q57tg,My “network” consists of people I’ve worked with (or for) over the course of my career.,Ok_Experience_5151,2025-07-23 15:12:03,3,cscareerquestions,t3_1m74q9x,False,
n4qgycr,"If you're still in school then you effectively don't have a network yet, so instead you can lean on your family's network. See if anyone in your family knows someone in the industry they can reach out to, maybe your Mom or an uncle knows a guy who works in the industry and has an opening somewhere.Once you actually get your foot in the door, be sociable instead of the ""I don't go to work to make friends"" gremlin attitude that gets propagated all over reddit. Do good work and get on well with people in the office(also: work *in* an office) and don't be afraid to cultivate genuine friendships. Go to happy hours that the other underlings are organizing, those are the ones where you'll build real rapport with your team, rather than the official ones put on by upper management that doesn't even know your name. Go out to lunch regularly. Basically if you can do good work and be a likeable member of the team you'll begin to leave a good impression on people and over time you'll find yourself with a professional network. Sometimes it'll even extend to include people you hadn't even realized and you'll get offers to join up some new project out of the blue from someone you didn't realize had even given you a second thought.",Raskuja46,2025-07-23 16:05:55,3,cscareerquestions,t3_1m74q9x,False,
n4ops7b,"Yeah , LinekdIn is poor for this, it's fake engagement farming and job fairs can be really humiliating .Sounds like you be okay meeting with people face to face? Check if there are any meetups where you live at www\[.\]meetup\[.\]com",CyberChipmunkChuckle,2025-07-23 10:07:36,3,cscareerquestions,t3_1m74q9x,False,
n4pljys,"Look for meetups/tech events near you, look for conferences you can go to, when you go to events then talk to people to find what events they're going to. A lot of stuff is out there but not well advertised.",rnicoll,2025-07-23 13:36:27,1,cscareerquestions,t3_1m74q9x,False,
n5ewtfg,"> it seems like 95% of people are here for the US name it providesThey're literally all there for the OPT visa.On dropping out, what would that achieve? You should apply to jobs and drop out if you find one, not just drop out for no reason.",Bobby-McBobster,2025-07-27 11:04:03,102,cscareerquestions,t3_1mai8xh,False,
n5fq499,"I dropped my masters for a job, and I don’t regret it because I needed the money. May go back sometime, but generally time in the field tends to outweigh the extra degree unless you’d like to do a research position or something highly specialized. I still hit senior in less than 4 years, though your mileage may vary.",no-sleep-only-code,2025-07-27 14:18:31,18,cscareerquestions,t3_1mai8xh,False,
n5g1nct,"I have 2 masters degrees, I typically recommend no one gets their masters if they have to pay for it but you’re already enrolled so I will give you some additional advice instead. You can apply for Graduate level internships which can help you get that resume experience and will have a smaller competitive pool compared to undergrad internships. You can and should get involved in research because that’s such a low bar to get involved in and will immediately add experience to resume and will be a good bonus if you get published and graduate level internships will like this. There is a lot of good paying science based computer science jobs (especially in defense since you are domestic) that will see that as a big plus. Also I think finance also likes people with a more academic background since they do a lot of advanced mathematical analysis for trading strategies. So if you just want to be building apps then maybe drop it? If you want to do something that requires at least a masters like ML/AI, data science or something more math focused then it could be worth it. If you decide to stick with it you should apply to national labs for internships and you can probably get those internships pretty easily as a domestic graduate level student. But to “seal the deal” you should really get into research",WeastBeast69,2025-07-27 15:18:52,12,cscareerquestions,t3_1mai8xh,False,
n5iszba,MS resets the clock. You are no longer 6 months unemployed. You are a student with a second chance. Apply to internships and beef up resume.,BagholderForLyfe,2025-07-27 23:50:36,10,cscareerquestions,t3_1mai8xh,False,
n5f35c3,"If you’re not enjoying the program and don’t have an end goal in mind (eg, applying to PhD programs), then go ahead and drop it. Like you said, cs master programs are just cash cows for universities selling a dream to international students.",No_Try6944,2025-07-27 11:55:51,30,cscareerquestions,t3_1mai8xh,False,
n5glk9n,"The benefit of an MS in your situation is that you're counted as a student for FAANG hiring. This means you're more likely to at least get an interview callback. If you get an internship that is successful, you can probably convert that easily into a full time role and drop out of the MS program. If you want something specialized (AI, PhD) there's value in sticking to grad school. Otherwise, yeah an MS is just a ticket to the US for Indian / Chinese / foreign students",jigarthanda-paal,2025-07-27 16:56:36,13,cscareerquestions,t3_1mai8xh,False,
n5jh8xo,"Unless you're actually hellbent on getting internships this time, the masters will be a waste.",GratedBonito,2025-07-28 02:21:44,4,cscareerquestions,t3_1mai8xh,False,
n5kjxow,"Currently finishing up a MSCS at USC and have been extremely unimpressed with their curriculum and as far as the ""Trojan network"" is concerned, it's nearly non-existent outside of California.I could list quite a few issues (international student cheating rings are atrocious in ai track courses) but all in all every person domestic who I have talked to has said that they regretted going to USC for their MS instead of another school.A MS there is now over $100k, it is NOT worth it if you are paying out of pocket when most other options range from $15k-$35k.",Unlikely_Shopping617,2025-07-28 07:31:42,4,cscareerquestions,t3_1mai8xh,False,
n5hjsph,I would. In this profession the bachelors and experience is enough. I know it’s hard breaking in but you need a job not masters debt.,Gold-Antelope-4078,2025-07-27 19:45:56,2,cscareerquestions,t3_1mai8xh,False,
n5fsyvs,"The network is what you make of it. I will say, many Trojan alumni take the network VERY seriously. They instill the ""pay it forward"" ideal so much that it becomes instinctual. I just finished my masters last December and had a job lined up. When I started, I found out 3 of the 10 new grads are USC alumni. I've worn USC merch around the office some days and have heard ""Fight On!"" from several other people as well (including our COO). That sort of recognition is invaluable IMO.",IM_Pengu,2025-07-27 14:33:37,2,cscareerquestions,t3_1mai8xh,False,
n5h3gkp,"I only did a quick scan, is this even in US? none of what you said makes sense, half of me even thinks this is some ChatGPT generated story why is HR in command of technical things? and why does HR decide who gets to stay and who to fire? that's engineering manager's job",NewChameleon,2025-07-27 18:23:22,107,cscareerquestions,t3_1matat4,False,
n5h9ohr,I hope you have been applying at new jobs for the last 3 months? As you won't survive this company long with a manager who doesn't have a clue what you do and is likely to fire you soon because of it.,UnluckyAssist9416,2025-07-27 18:54:28,8,cscareerquestions,t3_1matat4,False,
n5ho9qh,"You're in a complete clown show masquerading as a professional environment. HR's claim about building HIPAA-compliant enterprise software in a year with two non-developers is either complete fabrication or they bought something off-the-shelf and called it custom development. Either way, they have zero understanding of what they're asking you to do.The red flags are everywhere: contract misrepresentation, title bait-and-switch, absent management, conflicting directives, and now performance criticism based on fantasy benchmarks. You've already delivered a 75% efficiency improvement in three months, which proves your competence despite their dysfunction.A service like Applyre might be helpful for finding actual development roles where technical decisions are made by people who understand technology. This law firm treating you like a code monkey while expecting miracles is not normal.3 months at a toxic workplace won't hurt your resume, especially in tech where short stints are common. Frame it as ""seeking a role focused on software development rather than mixed responsibilities"" and emphasize the automation project you delivered. Most hiring managers understand that some companies are disasters and respect candidates who recognize bad situations quickly rather than suffering through years of dysfunction.",Significant_Soup2558,2025-07-27 20:08:52,13,cscareerquestions,t3_1matat4,False,
n5i0n9n,"Lawyers are notoriously technically inept, I'm not surprised that they have gone full retard.You either need to convince them that you know what you're doing (and then they allow you to set expectations for deliverables etc) or you need to leave. And since they hired a junior developer (as a BA) instead of a late career developer, you can bet they are not going to listen to you at all.They expect caviar for mcdonalds prices and you're the fry cook.BTW, I don't think you're damaging your career, but this is a very unfortunate role to be stuck in as your first job out of college. They need a senior developer to set boundaries and expectations but I get the impression they are just going to hire a series of juniors and dictate to them for god knows how long and eventually end up buying something off the shelf to replace this shitshow they have created.",sudden_aggression,2025-07-27 21:11:56,4,cscareerquestions,t3_1matat4,False,
n5i6xjn,"Lawyer up. You’re not getting paid. I’ve consulted for these small businesses when I owned my own company. They needed a IT generalist to connect the printer to the computer. They read software development on your resume and saw the desperation in your eyes. They are playing you. If you can’t afford an attorney, go to work and spend every spare second looking for another job. Don’t bother completing the assigned tasks. You aren’t going to get paid.",Prize_Bass_5061,2025-07-27 21:45:09,5,cscareerquestions,t3_1matat4,False,
n5jbedf,Leave bro,droid786,2025-07-28 01:45:04,2,cscareerquestions,t3_1matat4,False,
n5ltqr8,"Assuming your story is accurate, the good thing about software development is that there's almost always an audit trail.So response ""okay, show me"". Let them show you the code, the commit history, and verify everything they've told you.The worst case scenario in this situation is that they can't show you, and that's when you rip them for being an environment with no source control, no indication that their code is secure or hasn't been shared elsewhere, etc. The best case is that this was done very fast...and very poorly. In both cases, call for a pentest as a parting gift.The likely scenario is they'll deflect. From there, if you care about the job, you could always escalate higher up the chain, and ask explicitly why your employer doesn't want to give their technical hire technical details.To answer your last question, it doesn't look as bad as you might think. Be honest with your next employer without throwing them under the bus, and most employers will be forgiving.Besides, if you're not getting paid, you're free to walk. It's a contract role, so you could always take a tiny freelance task from someone in return for a reference, log this as your ""contract"" job for all these months, and ultimately a shitty contract won't matter.",EnderMB,2025-07-28 13:33:27,2,cscareerquestions,t3_1matat4,False,
n5h5pzx,Just use claude code and some existing framework like rails,Low_Examination_5114,2025-07-27 18:34:37,5,cscareerquestions,t3_1matat4,False,
n5j9y9a,"You don't have to put everything on your resume, ya know.",hotlavatube,2025-07-28 01:36:12,1,cscareerquestions,t3_1matat4,False,
n5kj813,"This sounds like the kind of law office that has attorneys submitting things to the court with AI-hallucinated case law citations.As for how bad it will look to leave, if you get to the interview stage and are asked why you left ""it seemed like the only real option once IT was reporting to HR."" The reaction in a lot of shops will probably be reminiscent of men's reactions to seeing a nut punch.",fencepost_ajm,2025-07-28 07:24:47,1,cscareerquestions,t3_1matat4,False,
n5m245n,Who cares if it’s out of the norm or not? Ask for the raise. If they decline you accept the other job offer,TheConSpooky,2025-07-28 14:17:00,146,cscareerquestions,t3_1mbh9up,False,
n5m2t0p,"If you're willing to leave for that other role, but would prefer not to. Ask for the raise, if they say no - you switch. If they say yes - you stay.It sounds like you don't bug them for a raise often, so I think it's more of than fair to ask for an occasional correction. I wouldn't phrase it as an ultimatum - just let them know you recognize you're being underpaid and have been solicited by other places.",Ok_Report9437,2025-07-28 14:20:27,34,cscareerquestions,t3_1mbh9up,False,
n5m4o1w,Is this a position you were only contacted about or you’ve actually gone through the interview process and received a job offer? Those are two different things.,Chili-Lime-Chihuahua,2025-07-28 14:29:40,24,cscareerquestions,t3_1mbh9up,False,
n5m2v4g,"It all depends on how you ask, Anything that implies ""I got a better offer or I say someone on the internet paying more"" will be met with ""see ya"".A bird in the hand",Daily-Trader-247,2025-07-28 14:20:44,12,cscareerquestions,t3_1mbh9up,False,
n5m2wf0,"This is a tough one if you don’t want to leave and your job is remote. If you are willing to walk, you can go to your boss and be candid. But if you really don’t want to leave, it’s hard to use the offer for leverage.Is there opportunity for promotion? A safer way to approach this might be to have a career conversation with your manager.If your responsibilities and personal impact have increased over the last 5 years yeah you definitely can ask for more. It also might be worth asking for more PTO if you have a long tenure.",pissposssweaty,2025-07-28 14:20:55,6,cscareerquestions,t3_1mbh9up,False,
n5mzp0h,"OP you do not have a offer , you have a linked in message from a recruiter",Less-Opportunity-715,2025-07-28 16:56:51,6,cscareerquestions,t3_1mbh9up,False,
n5mm8eb,"This is a bit tough because 10 years there, means you are likely a valued member (to a certain degree) and you basically know what to expect at your job and likely excel. The expectations are tasks you can meet. The other job even if it's a salary increase, you just dont know what the expectations will be. I once jumped ship from a chill defense job to a big tech cloud developer. The pay was at least 50% more, but the expectation was 200% more. It drained me. Im not saying that the other job isnt worth it, im just saying just because it's eremote doesnt necessarily mean it will be similar expectations. Tbh, if you like this job, Id say ask for a raise. Say you have been offered a place with a 20% raise, give your job the benefit of the doubt too (assumingyou like being there) and say that you prefer to stay but you have to do what's best for you and see if you can come to an agreement. Maybe they give you 25% more or maybe they give you 15% more. Would you stay if they didnt match the 15% but gave you around the same ballpark (10-15%?)?",Broad-Cranberry-9050,2025-07-28 15:53:35,2,cscareerquestions,t3_1mbh9up,False,
n5mcj3v,"No one is giving out 20% raises right now. I'd take the new job, but stay on good terms with everyone. Then try to go back if you need to.",mcAlt009,2025-07-28 15:07:50,2,cscareerquestions,t3_1mbh9up,False,
n5mwj73,"This is a common thing to do. Ask your company if they’ll counter the offer to keep you, if they do - great, you stay. If they don’t, you go. If you are unattached to the outcome and just trying to get the highest offer - a common approach is get current company to counter, take the counter to new employer. Then if they give you a higher offer, you go - if they don’t, you stay",FalconHorror384,2025-07-28 16:42:22,1,cscareerquestions,t3_1mbh9up,False,
n5eh1fo,"Relax, you are killing it, you have a job. Try doing \*\*all\*\* that shit, unpaid, in your own time, while neglecting basic health and maintenance and still not being good enough.It's a shit industry for these reasons, but I just don't see any other openings that value intellect at all above sheer dumb drudgery.You have prospects.",primedsub,2025-07-27 08:30:29,17,cscareerquestions,t3_1ma7c5r,False,
n5dhy7s,"This sounds like a company specific thing. All of the companies I interviewed for, and my current company where I interview other people, are all cool with whatever mainstream language.",Renovatio_Imperii,2025-07-27 03:25:22,3,cscareerquestions,t3_1ma7c5r,False,
n5d7agb,"sounds like a company thing, I've never seen either of those 2 that you've mentioned, and I've done several hundreds of technical interviews in my lifetime (thousands+ if you include HR phone calls too) as an interviewer, I make it explicitly clear that the candidate is welcome to use any language he/she prefers",NewChameleon,2025-07-27 02:11:36,7,cscareerquestions,t3_1ma7c5r,False,
n5leb2e,>They want you to basically be a unicorn and robot who has no life outside this industry.I've never gotten this vibe from any place I've interviewed. Where are you located? Maybe this is a Bay Area thing.,Ok_Experience_5151,2025-07-28 12:00:12,2,cscareerquestions,t3_1ma7c5r,False,
n5dcdlu,Go out and meet real people. Best way to get jobs is meeting in person and that hasn’t changed,supyonamesjosh,2025-07-27 02:46:02,1,cscareerquestions,t3_1ma7c5r,False,
n5f7l1g,Did a bunch of interviews this past year the language was always optional.,NonSmokerSparkle,2025-07-27 12:27:34,1,cscareerquestions,t3_1ma7c5r,False,
n5ga7ay,"Totally hear you. The bar just keeps shifting and often not in ways that reflect real-world work. You spend years growing your skills, only to be hit with an interview gauntlet that values obscure trivia over actual engineering. It’s exhausting, and you're right to question it.One thing that’s helped others in your shoes: focusing less on mass applications and more on targeted referrals or smaller companies where the hiring process isn’t so performative. Also, if you’re getting stuck on the language-specific stuff, you’re not alone some candidates now prep a “core language” for interviews even if it’s not their preferred one, just to play the game. It’s not ideal, but sometimes optimizing for the process helps unlock better opportunities. And if you ever want help navigating this maze whether it’s with strategy or finding someone who’s cracked this recently I can share a few leads.",Superb-Education-992,2025-07-27 16:01:24,1,cscareerquestions,t3_1ma7c5r,False,
n5gcpz7,"At 6 to 8 years of experience, you should be building your soft skills, too. You should be stack agnostic at this point. Now you should now learn more about the social parts of the job, the culture stuff, and how to build up other engineers. ""Code well"" is now only one of many boxes to check if you want to continue to climb the ladder.Welcome to the hard parts of our career path. Congratulations!",SSJxDEADPOOLx,2025-07-27 16:13:48,1,cscareerquestions,t3_1ma7c5r,False,
n4rcw2p,"Oh yeah. 100%. Its actually the feeling that made look at this subreddit. I'm at work right now lmao. Expansion. More features. More complexity. More testing, documentation. Less hiring. But yet, the time wasted in meetings hasnt decreased. I actually have started getting therapy recently for depression, and I actually have brought up how burn out at work is certainly a factor.",Best_Lavishness_9785,2025-07-23 18:31:07,54,cscareerquestions,t3_1m7gyqa,False,
n4re4p0,"Let me guess, they announced they are a ""performance-driven company"" now. However, it seems the OP may not frequent forums like this often. This issue began in Fall 2022 and subsequently worsened.",HansDampfHaudegen,2025-07-23 18:36:51,25,cscareerquestions,t3_1m7gyqa,False,
n4rhz89,"They hate you. They hate your needs. They hate your demands for ""sleep"" and ""rest"" and ""pay check"". They'll never say it out loud, but their actions speak the truth. They dream of having cost-free labor, to the point where if they could violate thermodynamics itself to increase their feelings of themselves at no expense they would. Never acquiesce or kowtow to pathological types, just learn to spot them, and once you do you should go grey-rock and remove as much of their influence in your life as possible. They won't change, ever. Don't waste your energy clinging to hope or effort that they will.",Wandering_Oblivious,2025-07-23 18:54:41,27,cscareerquestions,t3_1m7gyqa,False,
n4rcytt,It’s an epidemic lately. Individuals need to hold their boundaries and practice solidarity with coworkers. No one should be working 12 hour days or weekends on a regular basis.,Stock_Blackberry6081,2025-07-23 18:31:29,14,cscareerquestions,t3_1m7gyqa,False,
n4rlzxl,"It’s certainly been my experience at my current job. It was great for years, I’d work overtime occasional to hit certain deadlines but for the entirety of this year, working overtime nearly every day has become the norm. I got “promoted” into a tech lead position with no title or pay increase. I bright this up with my manager and got the ole “it’ll be a good thing to bring up during the next promotion cycle” seven months from now.Some new “can’t miss” deadline nearly every week “, weekend releases, insane pressure. Team clearly burnt out and getting short with each other, it’s just sad.I’ve been lucky enough to get many interviews and it’s brutal. 6-7 rounds per company, really positive feedback, just to get to the end and be told they ended up hiring someone else with years more experience. If people with 10 YOE are having to down level to take SE2 and SE3 roles (I don’t blame that at all) I’m not really sure what to do at that point. Work will always be work to me in some ways, but I did genuinely enjoy my job and showed up with positivity every day. At this point I’m fully burnt out and looking for any exit I can",siracidhead,2025-07-23 19:13:27,15,cscareerquestions,t3_1m7gyqa,False,
n4rpxe9,"Not ""nowadays"", but ""always"". I'd go so far as to say it's only a matter of time at every company.It's a very common pattern for management/upper-management to get replaced, and for a company to tighten the belt and shift their culture to the toxic-side.That part's out of our control.What's in our control is how we react to it.WLB is my #1 priority. Even if a company tries to turn up the heat, and introduce toxic expectations.... I don't let it alter my WLB. I do the best work I can from 9-5, M-F. That's non-negotiable. Management can scream about deadlines, ping me after hours, etc all they want. Doesn't change anything about how I behave. At most a 5:30pm text will get is a ""OK, will take a look tomorrow morning"".There's an extremely clear divide between my work life and my personal life. This divide lets me disconnect after 5pm, no matter how much BS is going on during the work day, no matter how stressful it gets. That stress waits around for 9am the following work day.I've had companies ""tighten the belt"" before, but I've always stood my ground. If they fired me over it? Oh well, the culture was toxic anyways and I was already looking for another job. But in reality they never did. The last time this happened I even got a pretty massive *raise*.Toxic management *loves* to take advantage of people that don't establish any sort of boundaries. Really they'd be stupid not to, it's free labor. But when you establish boundaries as the employee, more often than not, nothing's going to happen.So whenever this happens to your company's culture, firstly establish boundaries and stick to them in the short-term to keep yourself sane. In the medium/long term find another job ASAP. It's a sinking ship culture-wise.",SouredRamen,2025-07-23 19:32:07,11,cscareerquestions,t3_1m7gyqa,False,
n4rllxv,"sure, it's called ""do more with less"", has been companies's motto after the 2022 layoff, ""year of efficiency"" yada yada",NewChameleon,2025-07-23 19:11:37,7,cscareerquestions,t3_1m7gyqa,False,
n4rl66x,Number must go up!,dsm4ck,2025-07-23 19:09:33,2,cscareerquestions,t3_1m7gyqa,False,
n4s3jkm,"More work, stagnant hiring with backfills only. Bonus points if no backfills and a hiring freeze, or worst case, layoffs.",TheNewOP,2025-07-23 20:36:03,2,cscareerquestions,t3_1m7gyqa,False,
n4rc2vz,"Yeah, I mean, fascism is on the rise everywhere, and where does fascism come from (historically)? Corporatocracy, so for companies all over the world it's the best time of their lives.",skwyckl,2025-07-23 18:27:22,5,cscareerquestions,t3_1m7gyqa,False,
n5rc33i,">But he cannot do anything about it.Go above his head, or leave, and let the people above him know why.Life is too short.",okayifimust,2025-07-29 08:28:15,68,cscareerquestions,t3_1mc5iav,False,
n5rj5cw,Sounds like Bob is doing whatever he can to push out the new guy in an effort to keep his job.,Unintended_incentive,2025-07-29 09:36:53,43,cscareerquestions,t3_1mc5iav,False,
n5tqflf,"Let me guess, Bob has been with the company / project since the early days, possibly even the inception? It's not uncommon for people like that to feel a massive sense of ownership and entitlement over a project and not be able to let go of control. I have seen it many times in the industry. Unfortunately in my experience it's unlikely the situation is going to change unless something drastic happens like him leaving or the scope expanding beyond the point where he can keep track of everything.",kisielk,2025-07-29 17:11:01,7,cscareerquestions,t3_1mc5iav,False,
n5rk29p,"Don't bring up Bob in your first meeting with the VP unless he specifically asks. You should be working through your manager. If he says it's out of his hands, that's completely BS. Push him to ask what you can do to get this ironed out because it's ""creating a hostile work environment"" - not just for you but others as well.",RelationshipIll9576,2025-07-29 09:45:34,25,cscareerquestions,t3_1mc5iav,False,
n5rb7o8,"Bro you should document everything, collect feedback from others (anonymously is fine too) and go to HR. If even a VP tells him that he literally is being an asshole, it will be a slam dunk and they will get rid of him.I'd suggest mentioning that otherwise you'll come back with a lawyer to deal with what is characterized harassment.",Bobby-McBobster,2025-07-29 08:19:42,16,cscareerquestions,t3_1mc5iav,False,
n5se73h,"I am exactly in the same situation with a principal engineer who behaves exactly the same way, my manager cannot do anything.",NoWrongdoer2115,2025-07-29 13:19:13,3,cscareerquestions,t3_1mc5iav,False,
n5td4rz,"Don't complain about Bob. Just assume that they already know and ask ""What's the deal with Bob?"". Maybe you will get some insight.Some developers are insufferable. He might be the last person who knows a subject matter and management doesn't want to lose the knowledge.",TurtleSandwich0,2025-07-29 16:09:36,3,cscareerquestions,t3_1mc5iav,False,
n5suzgd,"Have you tried talking to him straight up? Schedule a 1:1 with him and tell him everything you’re saying here. Keep it on the facts and how’s it’s impacting your ability to get work done. Start the conversation acknowledging how smart and talented the engineer is and how you want to learn from them but their communication style is making it difficult for you. If it continues, it’s probably time to get HR involved. That will scare everyone straight, just be prepared to have a ton of documentation and examples of this principal engineer’s behavior. Too many assholes in this world and very few people with spines to do something about it.",sneak156,2025-07-29 14:44:33,2,cscareerquestions,t3_1mc5iav,False,
n5t8fuj,There is strength in numbers. Talk to the other people being bullied and see if they are willing to stand up with you.The usual reason why this is tolerated is that management feels they need to keep the bully on staff. If you and the others start going through the commit histories then you can build a case to management that the company can function without Bob. I'm sure he is doing this to protect his position so if you can strip that away then he'll have no defense.,rmullig2,2025-07-29 15:47:52,2,cscareerquestions,t3_1mc5iav,False,
n5txtvt,"I had a similar, less hectic situation with a principal at my last job. in my scenario, this guy was the smartest guy I ever worked with but had little to no people skills. He put in a lot of work and created many of his own work. He was basically the dream principal. He created so much work and tasks and got so much done. He didnt mind working 12+ hour days, catch up on the weekend, and still seem to have enough time to have a life. He mustve been on something tbh. He knew so much of the codebase, other principals basically bowed down to him too. He definetely had my manager walking on eggshells for him. During meetings, if he even disagreed with anything he would go on a 1 hour speech of why his way is the way. He didnt scream but it was mostly cause the company had a strict no-scremaing policy but you could tell he wanted to. He did snap a lot. Im from a large immigrant family from the northeast while I worked with many people in the west coast so I think he didnt appreciate some of my responses. Because Im soimeone if I disagree I might just say ""yeah but .."" or if you make a snarky comment I will respond with a snarky comment. So a few times he made a snarky comment towards me, maybe it wasnt that bad but my default is to make a snarkier remark and mine's wasnt bad either but I could tell he didnt appreicate it the pushback. What he did to me he did to a lot of people but it seemed like whenever I had a PR almost done, he would have some complicated comment about changing the desifn of something that would hold me back 2-3 days of discussions. I was a Jr at the time so I didnt understand the conecpt of ""just get it in and create a new task"". One time I had to work with him on a major project he did. I could tell he hated my work ethics. I found some errors in his code and I had to change the design of it. He worked with me to change the design a bit, but every design kept failing something else. It took me like 20 designs to find something that worked. The thing was his original design already worked, but he wanted to find a better way to do it. It took me like 2-3 months to complete it and after I met with my manager, and apperently the principal had given him a list of his complaints about me. Some were fair, others not so much. The biggest one that I felt was unfair was that I had a ""tendency"" of doing too many commits in my MRs. But it was only for one MR, and the reason for that was because of the 20 different designs I had to try. I fought every unfair one, but my manager was very set that he would give me a bad review that session. he basically listed everything that the principal had sent him. I spent the next 6 months working my ass off to get back on track. But it still wasnt enough and in that project since the principal was at the center of everything it's very hard to get ahead if you arent on his good side and I just dont think I ever was. I dont think he ever went out of his way again but I just think he didnt want to ever work with me again which made things harder for me. I ended up losing my job after another bad review. Again my manager walked on eggshells for that guy, the principal would tell my manager how to do his job in stand up and even scream at my manager. I think you are doing the best you can. Your manager is not doing much so I dont think it's outside of the realm to bring it up to the VP. My guess is Bob has been in this project so long and purposely has coded things to make him the only knowledgable person to keep his job. I bet this project moves where bob moves. The problem with that is Bob can get away with more shit because weeks where bob is not working, the project probably doesnt seem to move as quickly. Bob likely produces results and everybody knows it, so most just put up with his shit. This isnt a you problem, it's a problem with how things are structured in the company/project. It's likely the company just isnt even aware of this and it's kind of a thing that has been accepted in the project.",Broad-Cranberry-9050,2025-07-29 17:44:11,1,cscareerquestions,t3_1mc5iav,False,
n5sll1k,"70 applications per day? There probably aren't that many Dev jobs coming out lol. I am a recent graduate and I managed to land a job in 4 months. On average I did 2-3 job applications per day. Cover letters, sometimes change the CV, answer their application questions and explain what I have worked with and how it can be relevant even if I don't exactly know their tech stack. The job I got was for a tech stack I never worked with.In total I had 3 interviews but I was preparing hard for them, spending days learning about the company and preparing questions that they may ask me (I cheated during the interview I had bullet points on the side so I can remember stories etc.). They don't want you to be professional especially for grad roles. They want to know that you are interested in their company (show your research) and tell them what you have been working on and learning. Keep your github profile public and show your repositories they want to see you are doing something.Another thing that helped was looking at some leetcode easy questions, Iearned some very simple yet important patterns that they didn't teach me at uni and I am usually able to solve the pair programming coding interview parts. During such interviews show your thinking, break down the problems, find a solution iteratively.Was I lucky? Probably, but luck is where opportunity meets preparation.",BulkyTrainer9215,2025-07-29 13:58:24,28,cscareerquestions,t3_1mc96xi,False,
n5smcpq,"If you are sending out 50-70 applications today, I know that you are using the same basic-ass resume and applying to jobs you aren't a fit for. That's a ludicrous amount",purrmutations,2025-07-29 14:02:17,21,cscareerquestions,t3_1mc96xi,False,
n5u9y2w,"50-70 applications per day seems like not a lot of bang for your buck. I'd focus in more on specific roles using specific skillsets, then have templated, tailored resumes for those roles. Right now, your resume seems a little scattershot. As an example of what I mean, in your language skills section you have Java listed first, which tells me you'd be most comfortable in Java, but none of your projects or experience mention Java anywhere, so I don't have much to go off of regarding how skilled you actually are in Java other than current coursework from mthree, which doesn't tell me much.I was in a similar boat as a new grad, and it took me 10 months to get a job (2 months after graduating). I would have 2-3 resume's with the same or similar information, just re-ordered to fit the job description. Is the job a front-end position using React and TypeScript? You better believe I'm putting that first on the resume. If the job is enterprise Java, then Java, Spring, JUnit are all going to bubble up to the top. Normally I'd suggest having a cover letter too, but it just so happened that all my callbacks came from applications with no cover letter, so your mileage may vary. Last thing I will absolutely recommend is to **bold** the **relevant skills** in your **experience** and **personal projects**. So things like **TypeScript, Tailwind, etc.** should be bolded. HR people don't have a lot of time to sift through applications, so the easier you make it for them to find the technologies they need to see the better. Don't go too crazy with it though. If around 15% of the text in your bullet points are bolded, I'd say that's good. That's just the path I took though, there's other ways to go about this. My job hunt was from November 2024 to this month and took about 300 applications sent total , but I got the best results most recently when I was only sending 2-3 applications out per day to places I was 100% sure wanted new grads with little to no experience. I'd also like to know what your application-to-interview ratio is. For me and the people around me, it was normal to get 1 interview for every 50 applications or so. If you're not hitting that (or anywhere close to that I'm guessing) then you might be applying to places too liberally. That's all I've got! Good luck, going that long without a job is rough. P.S. if your personal projects fall on the gaps in your employment, it might be worth putting the timeframes you worked on the projects. That way it would at least show you're doing something between your internship and mthree, but idk how effective that would be.",Mason_Luna,2025-07-29 18:39:52,6,cscareerquestions,t3_1mc96xi,False,
n5u8s72,"Where are you located? Generally companies aren't hiring outside of local talent, because they have no reason to pay for relocation when there's a surplus everywhere. If you're trying to find jobs outside of your current location you're not gonna have an easy time.",CarinXO,2025-07-29 18:34:27,3,cscareerquestions,t3_1mc96xi,False,
n5ua9cy,My first question looking at this resume is why is this guy looking fro a new job when he has one he just started,Beautiful-Floor6752,2025-07-29 18:41:19,3,cscareerquestions,t3_1mc96xi,False,
n5un6hv,"> remote or hybrid Brother you’re effectively a fresh out of school junior fighting for the most competitive roles. It’s very unlikely you land one of these - full time in office for a bit of experience, then transition.Also your skills list is too long for your experience.",claythearc,2025-07-29 19:42:10,3,cscareerquestions,t3_1mc96xi,False,
n5tdf39,Well Ill say this. Either get a phd or do a startup.,Relative_Baseball180,2025-07-29 16:10:56,3,cscareerquestions,t3_1mc96xi,False,
n5s98yu,Join the uscg,Ok_Economy6167,2025-07-29 12:51:20,2,cscareerquestions,t3_1mc96xi,False,
n5stxel,"With the amount of jobs you are applying for is a lot, it feels like your resume are being filtered out by ATS. Try changing your resume until you get a response.",baldogwapito,2025-07-29 14:39:28,2,cscareerquestions,t3_1mc96xi,False,
n5hijtn,"No excuse for not having a no blame culture. You aren’t going to learn anything there, start looking.Ultimately even if everything you said was fake, if you’re not happy then find another place. Don’t quit until you’ve started at your new place!",certainlyforgetful,2025-07-27 19:39:33,49,cscareerquestions,t3_1mav9ti,False,
n5hjbyh,"No breaks between sprints is normal, but at good places you're encouraged to spend some time during the sprint doing learning.Your team sounds toxic AF. If it were me, I would be looking for something else and quit as soon as I got an offer.",TraditionalClick992,2025-07-27 19:43:32,24,cscareerquestions,t3_1mav9ti,False,
n5hind5,"Sadly, all this is pretty normal, or at least not atypical, but it doesn't mean you can't find something better. Just start looking and keep looking.Are you at least getting paid well to deal with this?",RaechelMaelstrom,2025-07-27 19:40:04,20,cscareerquestions,t3_1mav9ti,False,
n5hjogk,"Everywhere you work will have different degrees of all of these problems. Software engineers are not know for their ability to communicate. Many people are socially inept, constantly rude, and horrible at explaining anything. At every company you work for there will be people who answer your questions in one of the following ways1. They make up a different question in their head that is tangentially related to yours and give you that answer2. They answer with as few words as possible, giving no context, because they think it makes them look smart. 3. A mix of 1 and 2.Just learn everything you can. Apply to other places if you want. But do not quit under any circumstances until the day before you start a new job. Offers are rescinded all the time. No one you work with or for cares about you. If you care about them you allow them to exploit you.Good luck",prophetofbelial,2025-07-27 19:45:20,10,cscareerquestions,t3_1mav9ti,False,
n5hix6f,"with the exception of your 3rd point, all other ones sounds normal to me you take control of your own career, don't expect anyone else to do it for you, the rest are all focused on making business impacts your 3rd point is the only one that stood out to me, that indicates the management wish to weaponize sprint point to be used against you during perf (do enough points? penalized! not do enough points? also penalized!)",NewChameleon,2025-07-27 19:41:27,5,cscareerquestions,t3_1mav9ti,False,
n5la5ou,Setting performance requirements t of work done by sprint points is extremely idiotic and a huge red flag.,Anxious-Possibility,2025-07-28 11:30:49,5,cscareerquestions,t3_1mav9ti,False,
n5ilghz,"All of that seems rather normal (unfortunately) except for #3. I’d look for a new job solely on the basis of #3.That being said, if you’re learning a lot and working with AWS, it may not hurt to stay for another year just to make the two year mark so it looks better on your resume. That’s totally up to you though, as it is up to how long you can take it.",Uncreativite,2025-07-27 23:06:53,3,cscareerquestions,t3_1mav9ti,False,
n5hiwu2,"Sorry to hear. Before you jump ship, try switching teams. It's quite common in tech that culture changes from team to team, dept to dept, etc. It helps if your company is larger, but you can probably still move even at a smaller place -- start asking around quietly. If you feel yourself getting burned out where it will affect your mental health for weeks/months/years, then take action before it gets too difficult. Good luck OP!",obscurite,2025-07-27 19:41:24,2,cscareerquestions,t3_1mav9ti,False,
n5hlx81,"Those are common problems. Everything besides 3 is normal, expected, even.",TheNewOP,2025-07-27 19:56:48,2,cscareerquestions,t3_1mav9ti,False,
n5i1iic,Sounds like my experience in the defense industry lmao.,WearyCarrot,2025-07-27 21:16:28,2,cscareerquestions,t3_1mav9ti,False,
n4teu2m,Don’t think a lot of people who escaped will continue to follow r/cscareerquestions,Internal_Research_72,2025-07-24 00:44:55,73,cscareerquestions,t3_1m7qbvj,False,
n4uwg5f,"I am on my way out, after 15 years in tech, with a successful career behind me, and with highly marketable skills.I am 37 and even though I am quite successful in it, I feel I cannot do this anymore, and I definitely couldn’t do it in my 40s and 50s. The coding part is still fine and I enjoy it, but everything else - the 5-6 round interview processes, the leetcode grind, the daily standups, scrum meetings, product meetings, performance reviews, and my favourite one that ruins everything good that remains - the internal politics.When I started in 2010 I sent my CV to a company, I had one round of interview and a one page test, it was one day, I got hired. Now a round with a recruiter, then one with the hiring manager, a homework assignment, a leetcode technical round, a culture fit round, and if you did not fail at any of these steps, you can still be rejected because there was someone better. And this is for one company, and you rarely got hired from one application, you need to go through 5-10 if you are lucky. And do this beside a 9-5 job. It is ridiculous, even doctors and surgeons do not have such hiring processes.Life should be much more about than this soul destroying industry, and to be honest I don’t care about money, reputation and fancy titles anymore, it’s not worth it, everyone has one life.",NoWrongdoer2115,2025-07-24 07:01:30,29,cscareerquestions,t3_1m7qbvj,False,
n4tnvze,One of the groups I’m a part of has a life after tech channel. A thought I’ll share here for all:- Being out of “tech” doesn’t mean not coding. Plenty of folks who still use programming skills in a science jobThe consensus has been time and again:- there’s less pay. Sometimes a little. Sometimes a lot. - mental health almost always seems to be better outside the tech industry,WeHaveTheMeeps,2025-07-24 01:37:51,52,cscareerquestions,t3_1m7qbvj,False,
n4u3565,I started a food truck,ramo500,2025-07-24 03:10:03,24,cscareerquestions,t3_1m7qbvj,False,
n4trvw9,"I can’t speak to their motivations, but I know 2 former manager/directors who were affected by layoffs and started businesses. One owns a moving company and the other owns a Primrose Schools branch.",goro-n,2025-07-24 02:00:53,11,cscareerquestions,t3_1m7qbvj,False,
n4udyeu,SDE -> Security Engineer -> Crime AnalystDefinitely lower pay since I work for the public sector but work-life balance is beyond amazing.,ajs20555,2025-07-24 04:26:15,12,cscareerquestions,t3_1m7qbvj,False,
n4usnu2,"I know three people personally who got out.\- One inherited a farm in Ireland, chopped it all in, lives on a farm in Ireland with the family. He sold his house here and went all in. On the down side, he has to worry about paying farm labourers and making sure the ends meet and he's pretty much spent what he sold the house in England for. They're in it now, they have to make it work. On the plus side, apart from a few initial bad starts which cost them a good few quid, the last time he came back to visit in the UK, he had a brand new Toyota. OK it's not an Audi or a BMW, but a brand new Toyota in Ireland is roughly equivalent. Especially a diesel with a Dublin plate! Seriously, in Ireland, that's doing pretty well!\- Another bought a van, a bunch of cleaning equipment and became a carpet cleaner. On the plus side, the amount of hotels and function rooms that immediately gave him business and even rolling appointments is definitely helping to pay off the equipment he bought through hire purchase. On the downside, he's cleaning carpets at 55 years old with a 55 year old back. He likes the work but it's obviously a lot more physical than he really thought.\- The last one now works three days a week doing minor admin stuff for an office. Filing, sending stuff out, packaging, doing the odd excel sheet stuff, fixing printers, any odd jobs. It doesn't pay well. But the mortgage was paid a while ago, no real debts, kids are off to university, his wages pay for the monthly bills easily, the wife's wages pay for the family holiday every year though kids may or may not come. If you have no heavy outgoings, you sort of don't need to chase the wage anymore. So yeah, none of that is helpful or answers your question. Or does it?",IEnumerable661,2025-07-24 06:27:29,9,cscareerquestions,t3_1m7qbvj,False,
n4upmhs,"I’m sort of on my way out of tech. I’m not going to say I was the best dev ever, but I did good work. Been in it for over 12 years and I’ve watched it shift. My last two jobs (both very large companies) were both offshored. Not just me, but my entire team. I’m friends with a lot of former co-workers struggling right now.For me, I just realized I want a field of work where I don’t have to be around Indians anymore. I know it sounds racist, but I’ve come to terms with it. Watching them slowly suffocate the IT industry since I joined it in 2013 has been like watching a family member slowly dying to cancer.I’m considering everything from digital forensics to trades work to just finally pulling the trigger and angling to move into product mgmt or architect. Tired of the dev rat race and companies building generic APIs but wanting to do Google interviews. Tired of grinding leetcode problems every few years after another layoff. I just like building and integrating stuff and seeing it all work, like finishing a painting.Ready to be accused of being bad at my job or not passionate enough or something by people who want to virtue signal about the reality of things. Some people, especially younger people, will feel a knee-jerk reaction to what I said, but I feel bad for you. You don’t remember how enjoyable this work was before Cognizant took over and every remote job posting had 7,000 applicants from India within the first week. Before COVID killed socialization. Dev work used to be a bunch of nerds talking in the office and enjoying happy hour specials afterward.",ReasonSure5251,2025-07-24 06:00:50,18,cscareerquestions,t3_1m7qbvj,False,
n4xscnu,Currently working on building an application to med school,YsDivers,2025-07-24 17:38:51,3,cscareerquestions,t3_1m7qbvj,False,
n52bn16,You will be fine. 35 is very young.,Techatronix,2025-07-25 10:52:49,69,cscareerquestions,t3_1m8vw0j,False,
n52ive8,Research positions at a FAANG are extremely competitive. You should not assume it's a given.,Illustrious-Pound266,2025-07-25 11:45:43,26,cscareerquestions,t3_1m8vw0j,False,
n52xgqn,I completed mine at 40 nothing to it. But as others said not necessarily a good financial move. I did get hit like crazy by recruiters between 40-45 then crickets. My whole team (half PhDs half MS) was outsourced.,debugprint,2025-07-25 13:13:34,13,cscareerquestions,t3_1m8vw0j,False,
n52fn8w,"Officially, I've never seen age discrimination. Definitely not in consulting. Unofficially, I saw everyone over the age of 50 forced to relocate or take early retirement because they got paid too much and were still accumulating more on the pension plan that stopped accepting new employees 20 years ago.Getting hired, you're totally fine. Just don't be visibly overweight. That is definitely discriminated against. Got to keep health costs down.I don't recommend drinking FAANG cult Kool-Aid. If you want money, a PhD is a bad financial decision in North America. Stop with the MS. You might see a few lucrative job openings but 50 PhDs apply and the posting might take an MS instead. Your odds are better if you're a US citizen.",NewSchoolBoxer,2025-07-25 11:22:54,17,cscareerquestions,t3_1m8vw0j,False,
n53a6fc,I finished mine at 42. You’ll be fine so long as you aren’t fixated on FAANG.,heresyforfunnprofit,2025-07-25 14:19:41,4,cscareerquestions,t3_1m8vw0j,False,
n52vdhm,"Research positions at FAANG are getting fewer, but there will always be demand for people with research + engineering chops. So make sure that you don't pick up crappy practices during your PhD (writing ugly code that is not maintainable, not writing proper documentation, not using good programming practices). It is sometimes hard to do as a researcher since your incentives are misaligned - publishing frequently is often incompatible with writing clean, maintainable code. But trust me it will help in your own research, especially if you standardize your setup to launch, track, and report experiments in the first 1-2 years of your PhD. Source: I was a researcher at a FAANG lab and in academia prior to that",sshkhr16,2025-07-25 13:01:56,4,cscareerquestions,t3_1m8vw0j,False,
n54iovw,"The age is not the issue, but you do need a backup plan.What if a commercial researcher job doesn't happen? What's plan B?",terjon,2025-07-25 17:46:40,2,cscareerquestions,t3_1m8vw0j,False,
n56yx4u,> I am currently pursuing my MSc in Computer Science and plan to pursue a PhD at the same university afterward.Have you spoken to anyone about this? Usually schools don’t like to have you attend for multiple degrees because of the appearance of essentially academic inbreeding. Also what’s more common is people are accepted into a PhD program but can master out if they decide they don’t want to do the full 5-7 years.,lupercalpainting,2025-07-26 01:33:16,1,cscareerquestions,t3_1m8vw0j,False,
n59x3d6,Sorry dude too old (just go for it),xTp___,2025-07-26 15:04:05,1,cscareerquestions,t3_1m8vw0j,False,
n53depk,"Companies don’t really discriminate. But the mileage afterwards is going to vary from your personal perspective. You’ll be brought onboard just like any other new grad at similar levels. The quality of life and expectations of a 25 year old and 35 year old will be very different. You will both show up to work but one will be alright eating ramen and overtiming like crazy with little responsibilities, while the other is going to have a mortgage, kids, aging parents to take care of while learning the ropes. The soft skills needed to navigate the office politics will also take a lot of time to adjust to. If your goal is to go into industry ultimately, why not just try first before doing a PhD. I guarantee 7 years of actual industrial experience from 28-35 will be infinitely more useful than 7 years of academia in an industrial setting.",necroneedsbuff,2025-07-25 14:35:11,1,cscareerquestions,t3_1m8vw0j,False,
n51w9vh,"Treat it like a hobby. Find ways to use it for learning.Use them. They aren't paying you, so you owe them nothing.But take everything you can from them. Never know, you might accidentally wander into paid labor from it.When you're tired of it, bail out. Again, it's free labor. You owe them nothing. Not even notice. So just have some fun and learn anything you can.",Won-Ton-Wonton,2025-07-25 08:33:45,53,cscareerquestions,t3_1m8tib8,False,
n51wi04,"If you have the money to support yourself and the motivation to push through job applications while doing this, you can take it. But the biggest consideration is do you like the people in the team? If not, don’t waste your time and just work a different job and build projects on the side.It’s rough out here, but definitely consider building software “for fun” while getting a part time job. If you have professor connections from university, try to apply for volunteer research assistantship. Search for open source projects to contribute to.At least research labs provide authorship if you provide significant contribution and open source contributions are recorded. Unpaid internship is just going to be a bullet point in your resume that tells recruiter “I did this, trust me bro”.",Real_nutty,2025-07-25 08:35:57,8,cscareerquestions,t3_1m8tib8,False,
n523286,Better off just making a project and creating a “company” off it to list in your resume,hesher,2025-07-25 09:38:53,12,cscareerquestions,t3_1m8tib8,False,
n5250dv,"If you're US, I think this is a scam to get you to work for free and call it an internship. Non-US company no one has ever heard of and not paying you has little to no resume value. Background check will show offer letter saying you're working for free. The only real internships are through your university while a student. Employers verify you're in good standing. Post-graduation reeks of scam.What is your ""research""? I mean, can be real in the sense of a real shady company that's recruiting slave labor. They'd never pay you enough for a real job in USD, else they'd pay you now. You can ""intern"" for me and do projects I give you from Fiverr.",NewSchoolBoxer,2025-07-25 09:56:36,4,cscareerquestions,t3_1m8tib8,False,
n54d44t,"From a practical perspective, doing unpaid internships doesn’t look good. You might as well just work on your own thing.",killwill2017,2025-07-25 17:21:11,4,cscareerquestions,t3_1m8tib8,False,
n52ntj1,unpaid internships are experience & you have none right? if there is a chance they'd offer you a job after graduation i'd be OVERLY GOING.,springhilleyeball,2025-07-25 12:17:32,1,cscareerquestions,t3_1m8tib8,False,
n54y89d,Trades,Adventurous_Pin6281,2025-07-25 19:00:47,1,cscareerquestions,t3_1m8tib8,False,
n5jb5q9,"1. make experience up (jobs mainly, how I got my first swe experience), add research experience and change your title. 2. create a product/sass b2c or b2b), something usable and simple to show you know how to do stuff.3. do the unpaid internship and look for other jobs (apply to 500+ monthly), do bare minimum, if possible dont even do the 9-5 portion work 1-2 hours on it and apply to other jobs.",Inner_Fuel3558,2025-07-28 01:43:35,1,cscareerquestions,t3_1m8tib8,False,
n52khzx,"Leonidas, is that you?",chataolauj,2025-07-25 11:56:21,5,cscareerquestions,t1_n51w9vh,False,
n54wyrz,"> They aren't paying you, so you owe them nothing.This mindset is how you stay at the bottom.",Ok-Attention2882,2025-07-25 18:54:43,-15,cscareerquestions,t1_n51w9vh,False,
n4ngds0,"Grind it for years. Hate your soul. Source: meEven then, everytime I have to look for a new job after some time, back to the PTSD grind.The problem with Leetcode style interviews is there is always that ""one"" question you might not solve well and that question can be the one that shows up. Once you have good understanding of the basics and pattern, after that, it's really just grinding to the point your hand automatically types so you can use all your brain to communicate well.It also worries me because once I have a kid, I have no idea how I can survive these interviews. It's easy to say while single. Not as much once you are married with lots of responsibilities.",Fwellimort,2025-07-23 03:36:07,38,cscareerquestions,t3_1m6yo60,False,
n4nqqo5,"You have to know what your toolkit is ahead of time, for instance things like heaps, binary search, sorting, hash maps, graphs, BFS/DFS, what are these tools are typically used for, what shape of problem do they solve. Just doing lots of LC practice and reading solutions you should be building this mapping. Also in your practice you need to sort of streamline the thought process along with the toolset.Think of it like branch prediction in computers. The computer just guesses what it's going to need to do next and it starts prefetching data and executing instructions. It might guess wrong sometimes and do some wasted work, but overall things happen way faster than if the cpu was just waiting around.Another analogy is like competitive games/sports. The way you get good at these things is by internalizing the playbook so that you can make snap decisions in the moment based on the scenario. Obviously you get there by lots of focused applied practice. LC is pretty similar. When you first start it's normal to sit around brainstorming and headscratching a problem and that's fine but realistically that's just not a viable approach in an interview, so you have to internalize the playbook.",silly_bet_3454,2025-07-23 04:50:08,17,cscareerquestions,t3_1m6yo60,False,
n4nhva8,"Just practice. It's normal that they are hard. But despite me practicing them, I don't think I will ever truly feel comfortable because many of them have some kind of ""trick"" that you have to know.",Illustrious-Pound266,2025-07-23 03:46:16,10,cscareerquestions,t3_1m6yo60,False,
n4obd20,"1. [https://neetcode.io/roadmap](https://neetcode.io/roadmap)2. Practice actually learning things instead of just banging out solutions from memory.3. Find out what are you lacking in and work on those areas. If you lose your train of thought the moment someone asks you something about the question that you are working on, start practicing this with your friends, do a LC question, have your friend ask you questions every 1-2 mins. 4. Consistency. Consistency builds habits and good habits will bring you far.",Whole_Sea_9822,2025-07-23 07:50:47,9,cscareerquestions,t3_1m6yo60,False,
n4nj6vn,"Get really good at listening. Most interviewers I find will give you hints and if you can catch them it helps a ton. If you are on a time crunch practice a few of each type and don’t just solve them pause first and figure out why they work. What is a sliding window doing, what is the tree for. Then you can extrapolate that to other similar questions. Interview more, practice. Talk a lot out loud. Explain your thoughts. Have a conversation to get input",DeterminedQuokka,2025-07-23 03:55:19,5,cscareerquestions,t3_1m6yo60,False,
n4pysof,"There are actually jobs out there with no leetcode questions in interviews. You can often get in just on portfolio work and being able to speak to your development abilities.These jobs won't be at FAANG companies, but they are not terrifically hard to find. Look for small to midsized companies, especially ones that are not directly in the tech or SaaS world. Agency work is also a good option as they generally hire on potential more than raw ability.That being said, you ***can*** just grind leetcode for a few months and get better at it, do a few hundred problems, figure out the patterns, watch some tutorials, etc. Leetcode's unfortunately not really a transferable skill to day-to-day dev work in my experience, they're not significantly different from the ""brain teaser"" type problems companies used to use before. If you know the answer, they're easy, if you don't... a lot of them (medium+) are based on academic thesis work, so you're probably not figuring it out under time pressure in an interview.",SanityAsymptote,2025-07-23 14:42:14,3,cscareerquestions,t3_1m6yo60,False,
n4ngnu4,Practice.,dijkstras_revenge,2025-07-23 03:38:01,2,cscareerquestions,t3_1m6yo60,False,
n4nhz02,"Just keep practicing. Look at the solutions if it seems impossible, then move onto the next one - don’t quit. Have a study plan by topic (I liked using neetcode.io, but there are others). Sort by company → most popular once you have an interview coming up.",what2_2,2025-07-23 03:46:58,2,cscareerquestions,t3_1m6yo60,False,
n4oea8m,"I built many things on my personal git.Then I start each leetcode interview with ""this type of working is not ideal for how I work best. If this reflects how you work at the company, then I am not a good fit. Otherwise, feel free to see my git if you want to see what quality I can bring under normal working conditions"".Its basically a professional way to say ""your test method is bullsheit and I CAN develop well"" without saying it directly. It also becomes a safetynet because if you dont do well, you might get hired on ""well he/she didnt do well on the leetcode test but thats not how we work in our company anyways"".",SuccessAffectionate1,2025-07-23 08:18:48,1,cscareerquestions,t3_1m6yo60,False,
n4sa4y1,"There will always be demand for stem majors.There will NOT be demand for people that half ass their education though, then come complain on Reddit (like many people in many CS subreddits!)If you actually become good at CS (WHICH IS NOT JUST PROGRAMMING) you will always be hirable.",Miseryy,2025-07-23 21:06:53,114,cscareerquestions,t3_1m7l4wh,False,
n4scumv,"Yes. But it was a golden, magical pixy dust gravy train in 2021. So if you use those days as the standard of an early career in tech in 2025 THEN you'll be very, very, very disappointed. You'll feel despondent and take to reddit asking questions like this. I get it's hard for anyone other than old hands in this industry to grasp that it can fall that much that fast. It can and it did so just accept it.A key to survival now is DO NOT follow the herd. I'm a new CS grad and I want a FAANG SWE role. Good luck with that, you got math skills do some even cursory research and calculate your odds.",bcsamsquanch,2025-07-23 21:20:04,29,cscareerquestions,t3_1m7l4wh,False,
n4shona,"Don't waste your future.You're talking with many people here who don't know what's the struggle to get a job or an internship as a junior is.I like coding, and still, I have been applying for months without any success. The only offer I got was for an unpaid internship...Honestly, I'm thinking of doing another degree like electrical engineering, civil engineering, or accounting because they have a better future than CS.Don't follow your passion. Go where the money is (I regret not doing that).",AbdelBoudria,2025-07-23 21:43:57,30,cscareerquestions,t3_1m7l4wh,False,
n4sc9t1,"I say CS is safe to pursue if you are attending a prestigious university. If not, you can still pursue it if it’s your passion and if things go south you at least can live without the regret of “What if…”",BrokerBrody,2025-07-23 21:17:13,11,cscareerquestions,t3_1m7l4wh,False,
n4sa5uc,Yes the job market is terrible right now especially for entry level. The amount of entry level applicants is way too high compared to senior experienced level developers. I would suggest looking into other parts of IT. Like embedded software engineering.,ash893,2025-07-23 21:07:00,11,cscareerquestions,t3_1m7l4wh,False,
n58vpey,"CS will always be a really good investment. Those slackers that barely made it through or can only do basic programming because they did not keep sharp are the ones that will be struggling as they won't have the value the degree demands that they can demonstrate.The math, science, technology, and engineering that you lean from the CS degree is fundamental to success. The entire degree is foundational to being able to create new technology, and optimize input for the best output.This is a hard need and will forever be a hard need forever.",Helpjuice,2025-07-26 11:06:12,3,cscareerquestions,t3_1m7l4wh,False,
n4sp0db,Uhhhh. Naw. I regret mine lol,dj_Magikarp,2025-07-23 22:21:51,5,cscareerquestions,t3_1m7l4wh,False,
n5mnvvv,"CS is a degree that is always getting automated even way before AI. Talk to a SWE from the 80s/90s, im sure there was a new craze that they thought would replace them. Even if it did, new jobs came from that. There wa s time where companies hired engineers to maintain the pipelines. There were teams of people whose job it was to run other people's code and give them the results. THen pipelines became more automated and now you dont need a 10 person team to do that, you barely need 1 person to be knowledgable in it. Im sure those jobs got replaced, but the engineers who worked on it, got transferred to other teams. Im sure some got laid off, but they adapted and found a new job and place to work at. The thing about CS is, it's not just about programming. You will do most of your programming in your first 7-10 years or so. The more experience you have the less you code. At my current job they showed us a chart that listed how much each level codes. I had never seen it like that but the chart basically said:Jrs - Code 80-90% of the time.Mid-level - 70-80% of the timeSeniros - 60-70% of the timePrincipals - 40-50% of the timeTeach leads about 10% of the time. 'Im usre some jobs may have those percentages a bit different.",Broad-Cranberry-9050,2025-07-28 16:01:14,2,cscareerquestions,t3_1m7l4wh,False,
n4sev9y,"There's a glut. Think about your fav joint, chick'a'filla, in'n out, and a line of cars snaking around 8 blocks. Do you go? If you're absolutely hungry and absolutely love these joints, then I suppose. If you're sane: there're 8 blocks of cars idling.Meanwhile my local dealership can't seem to keep their mechanic and had to cancel my appointment.If you stick with CS, you're an expensive commodity. And you now what happen to expensive commodities...",MadBot1234,2025-07-23 21:30:00,6,cscareerquestions,t3_1m7l4wh,False,
n5l8egv,"I think there's multiple things here.1. If you work in an AI product company, it's probably a startup with managers that have sales backgrounds. That's a hype bomb, everyone thinks they are building the next google but it's just a chatgpt wrapper. As far as I know, hallucinations are baked into transformers, you can contain it, but you need a different approach if you want to be sure it's not happening anymore. So as long as hallucinations are a part of LLMs, a human will have to check the output all the time, ao SWEs are not going anywhere.2. The SWE market in eastern europe is shifting. For a long time this was an outsourcing hub, nowadays it""s shifting towards product companies. So there will be SWE jobs in bug tech and startups.",Jijelinios,2025-07-28 11:17:39,53,cscareerquestions,t3_1mbcovz,False,
n5lc99i,"Sounds like you’re more aligned with your long-term goals now than you were before. You’ve already got great credentials: a strong academic background, Big Tech experience, and a thoughtful understanding of what you don’t want (which is huge, especially early in your career). Plenty of people end up stuck in roles that don’t match their strengths just because they’re afraid to pivot.As for those comments from managers warning you about AI replacing software engineers. Honestly, take it with a grain of salt. Most of the loudest voices predicting the ""end of software engineering"" aren’t engineers themselves and are often coming from a business lens where disruption = fear. But if you’re in engineering, you can already see what’s really happening. AI is changing the way engineers work, not eliminating the need for them. Sure, some lower-level tasks are getting automated, but that just means the bar is shifting toward people who understand AI systems, prompt engineering, model integration, performance tuning, security, ethics, etc. You’re positioning yourself exactly in that space.Also, the fact that your new role is in AI software engineering? That’s one of the most resilient and high-impact areas to be in right now. There’s still a massive shortage of engineers who can build, scale, and fine-tune AI products responsibly.",Content-Ad3653,2025-07-28 11:46:08,8,cscareerquestions,t3_1mbcovz,False,
n5lk65g,"You lost me at ""Hi, I'm 25""Software Engineering isn't going anywhere, and you're young enough that you could start over again several times over.Some advice. Random people telling you that AI is taking your job is like me telling a chef that the air fryer will take away their job...",EnderMB,2025-07-28 12:38:07,22,cscareerquestions,t3_1mbcovz,False,
n5ln5zs,You're good. End up not liking engineering or jobs hard to find? You've set yourself up with great experience to pivot to a sales engineer. I wouldn't worry too much,MCFRESH01,2025-07-28 12:56:09,7,cscareerquestions,t3_1mbcovz,False,
n5nn6y9,"These people are ignorant at best and morons at worst. An ML/AI role is the perfect place to be positioned. Even if certain software engineering functions can be replaced by ML/AI, the people who understand the models and can implement them will be the last to go, and if that time ever does come, they'll probably be held on in some sort of process management role.",marsman57,2025-07-28 18:44:54,3,cscareerquestions,t3_1mbcovz,False,
n5ma2gy,Only people who are far from tech roles can say that AI will replace SWEs with such certainty. This is not true. You’ll be fine as long as you are flexible and always learn to meet changing market demands,Easy_Language_3186,2025-07-28 14:55:56,2,cscareerquestions,t3_1mbcovz,False,
n5r1naw,"Honestly, sounds like you made the right call for yourself—being in a role you enjoy matters way more than what some non-engineering managers say. The future for SWE (especially in AI) still looks solid if you keep learning",Dependent_Gur1387,2025-07-29 06:48:47,1,cscareerquestions,t3_1mbcovz,False,
n5lwhdf,"Less likely for AI to replace sales jobs than dev jobs. Plus tech sales can be very lucrative. I have a couple of friends at Oracle and Microsoft. Every time we chat I kick myself for not having gone that route, lol. Don't get me wrong I do just fine for myself. But these dudes probably make twice what I make and work 1/3 as much.",Early-Surround7413,2025-07-28 13:48:06,0,cscareerquestions,t3_1mbcovz,False,
n5nkoo4,"I would say that, yes, I think sales is a much better path. Also, Southern Europe is much safer in the context of WW3",alexifua,2025-07-28 18:32:59,-1,cscareerquestions,t3_1mbcovz,False,
n4ymqrr,I started in a similar position after college. Think about things you do on a daily basis that could be automated via a script. You'll have to find a way to either develop your skills during work hours or outside of work hours. Feeling stagnant is a pain and use that as motivation to level up,hajimenogio92,2025-07-24 20:01:14,23,cscareerquestions,t3_1m8e8ss,False,
n4yk13c,Support related issues like what?,Frank_satooschi,2025-07-24 19:48:44,11,cscareerquestions,t3_1m8e8ss,False,
n4ymkym,"Bring it up on a 1-1 or find a new job. Besides, what you’re doing now is actually valuable even if it’s not coding. It sounds like you’re in a devOps-esque role right now and it’s becoming an underrated position now. So don’t think you’re wasting time on something most devs don’t have experience in.",yellajaket,2025-07-24 20:00:29,7,cscareerquestions,t3_1m8e8ss,False,
n50096g,"I didn't get any coding work either in my first ""CS"" job. I was deployment bitch learning nothing.Develop skills? You have the CS degree right? You developed for 4-5 years. What's valued now is skills you use on the job, not fluff you list as knowing that HR asked if you used on the job then declining to move forward.Force some SQL or scripting into your work like other comment says. I wrote a batch script to get metrics of how long tickets were open for. If you have to work 9 hours per day or login on Sundays, do it. Maybe you can even leverage into an internal job transfer.>I don’t want to grind leet codeYeah don't. My coworkers don't know what even is. Half my interviews have no coding and the half that do is practical and relatively easy. They just want to see you know how to use maps or arrays and know something versus nothing. I'm talking 495 of the Fortune 500 + regional consulting.",NewSchoolBoxer,2025-07-25 00:16:23,7,cscareerquestions,t3_1m8e8ss,False,
n4zjtvg,Write a project outside of work.,Pale_Height_1251,2025-07-24 22:44:57,3,cscareerquestions,t3_1m8e8ss,False,
n513ria,What did your manager say when you raised these concerns with them?,kevinossia,2025-07-25 04:25:58,3,cscareerquestions,t3_1m8e8ss,False,
n4ylffe,I don’t have advice for you but just asking: Is there a way you can embrace the skills that you ARE developing at your role and use THOSE for your next job?,Enough-Mountain1852,2025-07-24 19:55:12,1,cscareerquestions,t3_1m8e8ss,False,
n4ylg37,How do the conversations go with your manager about how you are doing? Have you brought up wanting to do more coding?,dhishkyaon,2025-07-24 19:55:17,1,cscareerquestions,t3_1m8e8ss,False,
n580ne2,"I treat Sunday morning as personal skilling up time. Do a udemy course, do a practical assignment that never needs to see the light of day, do something that you don't know how to do.That's how you keep fresh.And if you're getting support tickets rather than dev work, time to move on.",IEnumerable661,2025-07-26 06:10:22,1,cscareerquestions,t3_1m8e8ss,False,
n5f0xqo,I code at work and don’t have the title or the compensation. But the demand is there…,drop3hitting4,2025-07-27 11:38:30,1,cscareerquestions,t3_1m8e8ss,False,
n5jmxy7,"Real talk, just lie and say you're full stack. Go to interviews and tell them you're fullstack, change your resume and tell them you're full stack.",Few-Artichoke-7593,2025-07-28 02:59:11,104,cscareerquestions,t3_1mb4vsr,False,
n5jqn7r,I was like you and aggressively asked my manager if I could pick up more backend tickets last year. Now I’m full stack but still learning more backend as I go,cwolker,2025-07-28 03:24:43,16,cscareerquestions,t3_1mb4vsr,False,
n5jqwbf,Do you have a CS degree or at least the knowledge that comes with one?Backend is just regular programming. Generalist software engineering skills open the door to it. Do you have that?,kevinossia,2025-07-28 03:26:33,5,cscareerquestions,t3_1mb4vsr,False,
n5jwemv,In my experience I seen more openings for front end. So thought easier for you to find jobs. Have you applied to full stack positions? When it comes to interviews just say you want to code in TS,thatsreallynotme,2025-07-28 04:06:40,2,cscareerquestions,t3_1mb4vsr,False,
n5kz09c,"Your transition from frontend to backend is absolutely doable with 9+ years of experience, but you need to reframe how you're approaching it. The biggest mistake would be positioning yourself as a career changer when you're actually a seasoned developer expanding your skill set. Your deep understanding of how applications work from the client side gives you a massive advantage in backend development because you understand the full picture of how data flows and what the frontend actually needs. Companies should see you as someone who can build APIs that actually make sense for the consuming applications, not just someone learning Java from scratch.The interview struggle you're facing is real and frustrating, but there are ways around the traditional leetcode gauntlet. Target smaller companies and startups where you can often get in front of actual engineering managers who care more about your ability to solve real problems than your ability to reverse a binary tree under pressure. Focus on companies that do practical coding exercises or take-home projects instead of whiteboard sessions. Your strength in systems design and high-level thinking is incredibly valuable, especially for backend roles where understanding architecture matters more than memorizing algorithms. Some companies do hire based on these skills alone, particularly in more senior positions where they expect you to learn the specific technical details on the job.I actually work on [AI interview helper](http://interviews.chat) to navigate exactly these kinds of tricky interview situations where you need to showcase your transferable skills and handle technical questions that might be outside your current wheelhouse.",akornato,2025-07-28 09:58:07,2,cscareerquestions,t3_1mb4vsr,False,
n5npy4w,"Apply for full stack. If you get to an interview, you will find that a lot of full stack engineers don't like picking up front end tickets and will be glad to have someone who is an expert in those, but can still pick up backend tickets.",marsman57,2025-07-28 18:58:02,2,cscareerquestions,t3_1mb4vsr,False,
n5nuc9c,"If you're serious about switching to back-end, build a solid portfolio with real-world back-end projects. For example, set up APIs, work on database management, or contribute to open-source back-end projects. When hiring managers see real-world applications of your back-end skills, it makes a strong case for your transition.",Moist_Leadership_838,2025-07-28 19:19:21,2,cscareerquestions,t3_1mb4vsr,False,
n5jre1q,"Currently a 1yoe backend engineer and hiring new grad - 3 yoe backend engineer for my team.We ask questions what’s OOP, what’s an API, SQL joins, any experience in backend programming? We dive deeper in each topic depending on candidate’s experience and high level concepts to see how they think.Surprisingly, we interviewed around 8 people and none passed. These were candidates from good schools or interned at like TikTok, Samsung, Microsoft.",BronnyJamesFan,2025-07-28 03:30:01,3,cscareerquestions,t3_1mb4vsr,False,
n5jo45e,"Let's say i wanted to hire a solid backend / full stack developer. Since you have a decade in front end I'd say more full stack than straight backend but it's all for context:- languages and frameworks (.net etc, Java spring etc, or node.js etc) at least one solid one halfway)- interoperability via restful API (if in Linux also some basics of interprocess comm), also Kafka, etc.- big one: super solid database skills. Not ""knows how to write a join"" but solid data base creds. Including dealing with databases from inside languages (APIs)- décent SQL proc skillsFor true backend like what I'm doing also add amateur DBA skills, knows how to troubleshoot queries, procs, multiple databases (SQL and noSQL), mainframe maybe... I work in healthcare administration and insurance and our databases are generally humongous so I'm a little too biased on the last set! I was also a UI UX designer and researcher but after a couple decades of UI work i migrated to backend.",debugprint,2025-07-28 03:07:07,2,cscareerquestions,t3_1mb4vsr,False,
n5vx10r,"Might be worth searching for jobs with your niche skills you'll have better luck when you're one of the 10 people that knows how to do that. Generalist Python, C++... are extremely oversaturated",Plus-Anywhere217,2025-07-29 23:30:52,31,cscareerquestions,t3_1mcqr3o,False,
n5w041w,"Few things after looking at your linked resume:\- I'd take ""Junior"" out of your first title. I think here's where you can be a bit ambiguous and say you worked in a software developer capacity but not specify or limit yourself to their perception.\- Maybe I'm just dumb but I basically don't understand what any of the projects under Key System Implementations do at first glance. Recruiters with even less technical experience and patience, might glaze over it or hit the reject button when looking for buzzwords. I'd either try to simplify the language or concepts of what you actually delivered or just tailor this section to specific types of jobs (like how in these projects you used Python etc. to deliver).\- Probably remove the EE degree in progress as it's not really relevant or use it in your EE-only resume.\- The undergrad teaching assistant role sounds like fluff, and no employer really cares about how many assignments you graded etc. you should probably write something along the lines of what you taught and areas of focus you excelled at teaching like red-black trees or something etc. Or try and take a look at other undergraduate TAs on Linkedin or something and see what they wrote. To me, at least it seems very ""I want a TA job.""Last point is you probably want to tailor your resume to each of those roles you listed that you're applying for. At best this looks close to an ""EE major that used to be CS looking for an internship/jr role"" to me, but has some mixed signals so you'd want to orient the resume better towards those kinds of jobs if so.",terrany,2025-07-29 23:47:38,14,cscareerquestions,t3_1mcqr3o,False,
n5vw69g,Could NYC be the issue as there are not as many hardware related industry there as in Silicon Valley? Maybe check out some opportunities there.Hang in there.,fiji007,2025-07-29 23:26:16,15,cscareerquestions,t3_1mcqr3o,False,
n5vwnf8,"I’m in the exact same scenario. 2.5YOE, not a single response. I can’t know what I need to change if I can’t get a single response.Send your resume here, maybe there’s something wrong.",starburst-dev,2025-07-29 23:28:52,8,cscareerquestions,t3_1mcqr3o,False,
n5vwkhn,"I feel you, man.",Buri_north,2025-07-29 23:28:25,5,cscareerquestions,t3_1mcqr3o,False,
n5vyoad,Not sure if you have the means but I would seek out a tech career coach or someone that could help you word your resume better. I did and it greatly improved my app-to-interview rate. To not have gotten a single interview after 1500 apps is 100% a resume issue.,nomadluna,2025-07-29 23:39:45,2,cscareerquestions,t3_1mcqr3o,False,
n5vy6va,Post on LinkedIn consistently idk but you have good experience,DeadStarCaster,2025-07-29 23:37:08,1,cscareerquestions,t3_1mcqr3o,False,
n5w2abl,"Improve resume (imo also use a better format) - someone else wrote up a pretty detailed reply. You’re in NYC which is a huge plus already - Python/C++ is really amazing to have for investment banks and trading firms which there are plenty of in New York.> I'm 27 and feeling like my career is over before it really began. I'm open to any and all brutal feedback.Absolutely not, and this is coming from someone who has less experience than you and had to go through something similar with unexpected layoff and go a stretch without landing something. It sucks but block the noise, focus on yourself, and keep trying. Wish you nothing but the best!",squeakyjamesbond,2025-07-29 23:59:47,1,cscareerquestions,t3_1mcqr3o,False,
n5wdwmo,seems the problem is that you’re only applying to remote jobs. these positions always have thousands and thousands of applicants,throwaway149578,2025-07-30 01:06:25,1,cscareerquestions,t3_1mcqr3o,False,
n5wf39a,"Hey man, just wanted to say hang in there. Thought I’d share my wife’s story to give you some hope.She got laid off back in 2023 after three years at a local company. It was really tough finding a new job, especially since she’s on a visa. A lot of conversations ended early because of that. She didn’t get many interviews, and the ones she did get early on didn’t go too well. But she kept grinding LeetCode and prepping. She finally landed an interview with Amazon in February 2025 and cleared it.It took her a year and a half after being laid off to land this job. Just wanted to share her journey in case it helps you keep going. You’ve got this.",RepresentativeMoose,2025-07-30 01:13:15,1,cscareerquestions,t3_1mcqr3o,False,
n5dhar8,"Some people treat juniors (especially if they're women) like garbage. It's gross. Unfortunately, going to HR might help but other times they view victims of sexism as potential lawsuit liabilities / will gaslight you about it. I would start networking to find another job. Don't let shitty managers kill your motivation for your career.",WutTheCode,2025-07-27 03:20:40,12,cscareerquestions,t3_1mabvyv,False,
n5dgbe8,"That is crazy and unfair... Going to HR and making them communicate more in writing, as well as applying is the best path IMO",medovick,2025-07-27 03:13:38,8,cscareerquestions,t3_1mabvyv,False,
n5h5msz,The person fighting this is the person trying to hire you. You are kind of at the whims of the company unfortunately.Did this just happen? If so I would wait a couple weeks before burning the ships,supyonamesjosh,2025-07-27 18:34:10,2,cscareerquestions,t3_1mabvyv,False,
n5h4vi9,“My work entailed receiving written tasks that lacked any context and with that got no training or onboarding.”If it’s anything different than this I am surprised,lucasvandongen,2025-07-27 18:30:22,0,cscareerquestions,t3_1mabvyv,False,
n5v38ep,"So, I run an agentic AI firm and we have AI in everything. I'll tell you, we hit walls all the time. Our engineers each have 30 years of experience. They're very passionate about AI and use it in everything they do, yet they're always hitting walls. I think firms on Wall Street are just really excited to lay people off because that prospect is so wildly profitable for them. But I just don't see things getting done correctly up to production and scaled without people that know what they are doing. It's just not happening.Frankly, I'd like to pick up some talent, so if organizations start laying off their super senior staff that is going to be a boon for me.",Personal-Reality9045,2025-07-29 20:57:23,154,cscareerquestions,t3_1mcn29h,False,
n5v1x2m,"It’s just as likely we are currently hitting a high water mark for usage of AI in the workplace. As it gets more widely used, employers will come to better understand the substantial risks and problems that come with it, and regulations and legal standards will be developed for its use.This is a very aggressively hyped technology right now, but like most such technologies the reality rarely matches the promise, and that gap inevitably causes people to lose interest over time.It has some genuine productive use cases, but it isn’t nearly as widely applicable as AI companies are desperately trying to make us believe.",Due_Satisfaction2167,2025-07-29 20:51:21,92,cscareerquestions,t3_1mcn29h,False,
n5v527p,Nobody can predict the future. People should stop caring about stuff they can't control. AI might hit a bottleneck and not really progress from here on out or it will accelerate further with the massive r&d spending and compute being increased. Neither the AI bros that think AI will replace everybody or the people that think AI is a joke and completely useless are right. Nobody in history has been able to predict the future of innovation with any kind of accuracy. There are periods of history where there is massive continuous innovation in a given field in a short amount of time and then there are certain problems that nobody can solve for decades even hundreds of years. The next paradigm shifting innovation in AI could take another 100 years or it could happen in a dorm room at Stanford next month. None of this is predictable.I think with the AI we have now its clear there is some use cases that are very valuable and the tooling around it will get better. Which should increase productivity. But there is no clarity whether that will result in less jobs. In fact it could result in more jobs if you listen to some economists. There is no clarity in any of this.,nepalitechrecruiter,2025-07-29 21:06:00,9,cscareerquestions,t3_1mcn29h,False,
n5v52t5,"I’m not going to claim to have any solid insight on the topic or a crystal ball, but IMO it’s more likely that we’re re-running the dotcom bust and AI for devs becomes more like MS Excel became for accountants/finance. I’m not convinced that AI is going to get significantly more “intelligent” any time soon, just slightly smarter in ways that it’s unreliable right now.I also wouldn’t be surprised if costs for using it blow up in the recession and companies start rate-limiting its usage a little bit in the future when pricing is more aggressive.",ReasonSure5251,2025-07-29 21:06:05,17,cscareerquestions,t3_1mcn29h,False,
n5v1x7v,Who do you think will be pressing tab all the time when it DOES take over? Certainly not project managers. They'll still need us.,CarthurA,2025-07-29 20:51:22,26,cscareerquestions,t3_1mcn29h,False,
n5vbr50,I think we can all agree Chick Fil A should be open on Sundays,Dev22TX,2025-07-29 21:38:50,10,cscareerquestions,t3_1mcn29h,False,
n5v5b4x,"Some medical fields are even starting to introduce AI that I think will eventually replace a lot of the technologist positions. For instance, I work in sleep, with the ever more popular home studies followed up with AutoPAP, it has definitely taken a toll on smaller labs. I am fortunate in that I have worked in a larger health system whose patient population tends to be more special needs, so the home studies don't quite take the same chunk of business from us as it does smaller labs. I am fortunate that I have been working here long enough that I should be able to work here until I retire (been here 20 years and I am 44), but it's not a field I recommend getting into. Long story short, for younger people who have this similar concern, I highly recommend a trade. I have a lot of close friends who went into the trades (pipe fitters, welders, sprinkler fitters). They paid close to nothing for schooling and currently make over 100k a year (I know, its not a fortune, but for the area I live in, its considered living pretty well). There will also be a HUGE need for these positions in the upcoming years as many are retiring and they don't have the skilled work force to replace them. So, that's my 2 cents, take it for what its worth. Nothing is fool-proof, but the trades are what I would look into if I had to start over.",Sleeptech08,2025-07-29 21:07:11,3,cscareerquestions,t3_1mcn29h,False,
n5v99ov,"AGI in 4 yearsASI in 15 yearsClimate catastrophe in 16 yearsClimate solution in 25,000 years",dnbxna,2025-07-29 21:26:23,9,cscareerquestions,t3_1mcn29h,False,
n5v4m2t,What makes you think this coworker can predict the future? AI isn't capable of replacing even a junior dev right now. It may be at some point in the future. Nothing in AIs progress so far makes me think that future is anytime soon.,vervaincc,2025-07-29 21:03:52,6,cscareerquestions,t3_1mcn29h,False,
n5v4720,"Learn about ai agents, mcp servers, and how develop with ai, spec files ai steering etc. You'll be fine",Previous_Start_2248,2025-07-29 21:01:54,5,cscareerquestions,t3_1mcn29h,False,
n5neezg,"With an MSCS, you know more about theoretical CS but don't necessarily become more employable or earn more.Knowing more CS can be useful, but working with people (in a production setting), fighting fires (not just bugs, but can also be people) and having an intuition of which problems to solve and which not to, are stuff you can't really learn in school. You have to experience it.Something my first manager said that has always stuck with me is, a piece of code you wrote 6 months ago was written by someone else. In school and in Leetcode, people prioritize performance and brevity. In professional development, I much prefer code that is readable and quick to fix (in the sense that I can react, debug, and fix things quickly when shit hits the fan).",big_clout,2025-07-28 18:03:28,14,cscareerquestions,t3_1mbmvot,False,
n5nfk4l,MSCS is not really useful unless your undergraduate degree was not in CS.,beyphy,2025-07-28 18:08:46,25,cscareerquestions,t3_1mbmvot,False,
n5nnmca,"I think the better question is, what's to prevent that you won't end up in the same position? let's say you go do a Master's degree, then after the completion of that, whats to prevent you asking ""should I grind leetcode or should I go for a PhD"" later?",NewChameleon,2025-07-28 18:46:57,7,cscareerquestions,t3_1mbmvot,False,
n5nhvrz,"With MSCS, i agree with others. It's not rreally that necessary for us. It does help to make your resume look a bit nicer and might get you a slightly higher role and pay off the bat, but to me it's not worth 2 years of missing out on experience to do for an extra 5k-10k in pay you would've just likely had if you started to work. The key really is if you can get a job to pay for your masters degree. So in summary, it's not worth the MSCS unless you get someone to pay it for you or if you can escape paying minimal and not having to get loans. I had my job pay it for me and I grinded for 2 years as a part-time student and only had to pay 5k out of pocket those 2 years. But I also did summer courses as well to finish on time. As for your leetcode grind. I am not someone who really thinks you need to ""grind"" leetcode to get a job. You can and might be good at it to land the job, the problem is that many people think they can just grind it and dont care to learn the ins and outs of what they are doing. So they basically are hoping to get a similar question where they can think ""omg that's leetcode question #100 or similar to it, i just need a map"". But they dont care to learn why they need the map, or if there's a slightly different approach they could take. I have been in the job market twice in my career, never had to grind leetcode and I got into two big tech companies (one of them a Mag7 company) by just following a google DSA guide I will link below. It has videos from cracking the coding interview author that explain DSA very well. Also links free leetcode study guides with example questions to practice on. Companies dont care if you get the questions right, they only care if you know what you are doing and explain your thought process well in the questions. I got both those jobs and didnt do 100% well on the questions. A few times I got stuck but because I explained my thought process well they liked my approach. They know you wont get it 100% off the bat, they just want to know where your heads at. So for me i like to say ""hey i think I can possibly use a map here because of XYZ possibly a set"" and then I try it. I also go step by step. So usually the first thing I tackle is the return cases. I.e. if I am doing a array traversal the first thing I write is the return case if array is empty. It sounds dumb, but they appreciate when you tackle the small things first that could easily be forgotten. Also it's one of those things of once you start coding your nerves go down even if it's a simple lin. Then at the end I write test cases and try to go through multiple different cases (empty array, edge cases, etc). If any of them come out wrong, then I quickly refactor.Google DSA link is: [https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/](https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/)",Broad-Cranberry-9050,2025-07-28 18:19:39,3,cscareerquestions,t3_1mbmvot,False,
n5nj75c,"I think you would get the best value out of applying for jobs. Real interviews will help you more than playing around until you think you are ""ready"". YMMV if it is FAANG or bust.",marsman57,2025-07-28 18:25:55,2,cscareerquestions,t3_1mbmvot,False,
n5nk7xn,"For what it's worth, I went down the M.A.Sc route. I did it with the Comp Eng department, but the research was pretty much all coding. I also had my degree in Electrical Engineering so this was a nice way to transition to programming. Anyway, my supervisor had tons of industry contacts, and it made my job search so easy. Literally the easiest interview I've ever done, they sent me an easy assignment then shot the shit during my interview and I got a quick offer.I don't think the degree itself made much difference, but I don't think I could have got those industry contacts any other way. I was also somewhat considering the academic route, but realized pretty soon into the degree that I didn't want to.I think course based programs are pretty much useless. Make sure you do a research based program.",TraditionalClick992,2025-07-28 18:30:46,2,cscareerquestions,t3_1mbmvot,False,
n5nawv3,"MSCS is in my opinion a door to academic career but not industry. Unless it is an R&D position, nobody in the industry will care and ask about your masters degree (i am told so, correct me if exceptions exist).YOE matters first.",AbbreviationsTrue183,2025-07-28 17:47:33,4,cscareerquestions,t3_1mbmvot,False,
n5pqfo3,Just do leetcode or pursue a PhD. MS is a half way house with not enough juice for the squeeze,finfun123,2025-07-29 01:13:03,1,cscareerquestions,t3_1mbmvot,False,
n5rcusy,"The brutal truth is that grinding LeetCode and building projects will get you hired faster and cheaper than spending 2-3 years on a master's degree. Most tech companies care way more about your ability to solve coding problems and demonstrate practical skills than they do about advanced degrees. A master's degree might open some doors at research-heavy companies or for certain specialized roles, but for the majority of software engineering positions, you're better off investing that time and money into sharpening your interview skills and building a portfolio that shows you can actually code.That said, the interview grind is real and can be soul-crushing if you're not strategic about it. Focus on understanding patterns rather than memorizing solutions, and make sure your projects actually solve problems or demonstrate technologies that companies use. The market is tough right now, but candidates who can confidently navigate technical interviews still get offers. I'm on the team that built [AI interview helper](http://interviews.chat), and we created it specifically to handle those tricky interview moments when you're stuck on a problem or need to think through your approach out loud.",akornato,2025-07-29 08:35:50,1,cscareerquestions,t3_1mbmvot,False,
n5msh5c,Entry level CS/software jobs are not in high demand while supply of new grads has flooded the entry level market.,Illustrious-Pound266,2025-07-28 16:23:04,24,cscareerquestions,t3_1mbigaj,False,
n5msj2r,"Where did you go to college, IMHO, that matters.I think it is worth it, so long as you are aware just getting the degree is not enough to get a job. You will need to take advantage of whatever resources your college offers to get a job.Whether that is job fairs, company information sessions, hackathons, design/build teams, you need to utilize that as much as you can. That is the difference maker right now.",Drauren,2025-07-28 16:23:20,7,cscareerquestions,t3_1mbigaj,False,
n5mbok0,"Cdl making way more money than the average CS grad, or atleast thats what it seems like from this sub.Edit: Wow my first reddit award :face_holding_back_tears:. I was being sarcastic btw lamao. I myself am a Swe turned PM recently and couldn’t have done it without a cs degree.",DockerKafkaContainer,2025-07-28 15:03:45,15,cscareerquestions,t3_1mbigaj,False,
n5nk77h,Finish your degree. Leverage your domain experience with trucking to get a CS job in a related field. There are plenty of trucker adjacent tech companies.,marsman57,2025-07-28 18:30:40,2,cscareerquestions,t3_1mbigaj,False,
n5ob8gq,Definitely finish it.,ALAS_POOR_YORICK_LOL,2025-07-28 20:39:23,2,cscareerquestions,t3_1mbigaj,False,
n5ocfap,"Don’t listen to all these doomers on Reddit CS is alive and well and AI is no where near taking over comp sci jobs. Half the people here think that if they can’t get a fang job making 200k right out of college that CS is dead but that is not the reality. You should get your degree and start applying everywhere, with a CS degree you should be able to get a job doing just about anything in technology so just apply everywhere and start getting experience and then focus on finding a specialty you like!",Mundane_Mulberry_545,2025-07-28 20:44:58,2,cscareerquestions,t3_1mbigaj,False,
n5qttar,You need to pair your degree with [internships](https://www.levels.fyi/internships/). The ones screaming about not finding employment didn't do them.,GratedBonito,2025-07-29 05:38:00,2,cscareerquestions,t3_1mbigaj,False,
n5ow9u0,Its not in demand anymore dont even bother. Driving trucks is a good job,Comfortable-Insect-7,2025-07-28 22:25:06,2,cscareerquestions,t3_1mbigaj,False,
n5pjpg6,"Ready to join the herd of new grads all begging for work, eh?",MilkChugg,2025-07-29 00:34:35,1,cscareerquestions,t3_1mbigaj,False,
n5qbkm5,Is it too late to switch to an engineering degree?,Kevin_Smithy,2025-07-29 03:20:38,1,cscareerquestions,t3_1mbigaj,False,
n5uf5j7,"I work with people. Not their results. If I don't want to work with you, I don't want to work with you. Soft skills are much harder to develop. So I'll take the candidate with the better soft skills every time. Is the code solution binary?  Do you believe all that matters is the result, and the implementation irrelevant?That tells me a lot about your coding ability, and it's not painting a pretty picture.",drunkondata,2025-07-29 19:03:56,20,cscareerquestions,t3_1mcjeqk,False,
n5u8vzi,"Depends on the job specifically, but as a manger I disagree. Multiple people are going to pass the coding challenge most likely -- I can't hire you if I don't feel like I can work with you.",kmed1717,2025-07-29 18:34:57,19,cscareerquestions,t3_1mcjeqk,False,
n5uafts,">In my opinion the coding section is the most important as it is a very binary result. If you didn’t get the solution you failed the interview.I dont think it's as binary as you think. For me when I've taken coding interviews, i've gotten jobs at major companies when I dont even get the question entierely right. If im in the ball park and my explanation as to why I got there is correct, i've impressed the interviewer. There's def been times I didnt get the answer but I also realized my mistake or didnt and said ""my next idea would be to do XYZ since this didnt work"". For me all 3 are just as important but the more Jr you are the more the coding interview should matter. The more Senior you are the more leadership and system design should matter. Because as a Jr it's important to know how to code and learn system design within the company, as a principal it's more important to know design/leadership over code. Seniors and mid-level need to know more about leadership/system design than Jrs but less than principals. So for percentages id say:Jrs - 80% coding, 15% System, 5% leaderMid-level - 65% coding 25% system, 10% leaderSenior - 40% coding 30% system, 30% leaderPrincipal - 20% coding, 40% system, 40% leaderThe higher you go in this career the less you code so for a principal coding shouldnt be important because at that point it's assumed you already know.",Broad-Cranberry-9050,2025-07-29 18:42:08,6,cscareerquestions,t3_1mcjeqk,False,
n5v38l8,Vibes are the most important,SamWest98,2025-07-29 20:57:25,6,cscareerquestions,t3_1mcjeqk,False,
n5uoz7y,"I can tell you last year when I was job hunting one of the written offer I received I know for a fact that I did not fully pass the coding portion (it was a LC-hard in ~40min), explained logic and only managed to write partial code, the different interviewers were clearly satisfied with the overall performance (coding + system design + behavioral) during the debrief to extend offer anyway so, the answer isn't as clear as you think on which part is ""most important""",NewChameleon,2025-07-29 19:50:42,4,cscareerquestions,t3_1mcjeqk,False,
n5urei5,"I've interviewed a lot of developers. It is NOT a binary result.I tend to ask 3-6 questions of increasing difficulty. I'd say most people we've hired didn't finish all of them.It's all about seeing how you think about the questions, what solutions come to mind, and your ability to collaborate and think clearly because I'll help the candidates. For example, they might think of a straightforward brute force approach and we start with that, then I indicate towards a way they might be able to make it more efficient and see if they catch on and can take the hint and follow it to a better solution.It's also to account for people have one or two 'bad questions', like basically having a mental blank on one. You can mess up on the easiest question and still pass the interview (not common depending on how badly you mess up on the simplest question, but the point is it's not pass/fail).",StrangelyBrown,2025-07-29 20:02:07,3,cscareerquestions,t3_1mcjeqk,False,
n5v68ut,Do not listen to this advice.There are too many engineers that have zero people skills. People skills are hugely valuable.,ProfessorMiserable76,2025-07-29 21:11:40,3,cscareerquestions,t3_1mcjeqk,False,
n5v6rbi,"In my 15 YOE coding skills are less important on the job. Most people want to work with SWEs that work well together. The average coder is probably going to be fine as long as they can take feedback well.In an interview meeting the company specific hiring bar for coding is very important. You can have the best social skills in the world, if you don't show you meet the bar for coding you are not going to get the job. This doesn't mean social skills are not important, but I've never met somebody fail the coding portion and still got the job because of social skills. I have met people who excelled in the coding portion and had meh social skills. This is just my experience at non-tech companies in non-tech cities. I cannot comment at working in a tech company as I have never received an offer from one of those companies.",diablo1128,2025-07-29 21:14:09,3,cscareerquestions,t3_1mcjeqk,False,
n5uqvtp,Not really. You can pass the coding interview and still not get the job. Happened to me quite often.,Illustrious-Pound266,2025-07-29 19:59:39,2,cscareerquestions,t3_1mcjeqk,False,
n5uh9vs,"And this is where so many people go wrong. They overemphasize the coding part of the job when in reality it’s a people/problem-solving game. Coding is important, don’t get me wrong but it’s not the hard part of the job at all",grizltech,2025-07-29 19:13:55,1,cscareerquestions,t3_1mcjeqk,False,
n5pxf33,">Is getting a job with no internships having graduated from a mediocre/below average university a sheer numbers game? you could have asked this exact question back in ~2015 era and the answer would be yes now? the hiring bar and competition is like 10x more fierce >quite literally apply to every single open position in the country and just move wherever at a whim I mean, is there something that would prevent you from doing that? I remember when I was a new grad I had like 10 cities on my radar and I'd be willing to fly to any of them",NewChameleon,2025-07-29 01:53:31,13,cscareerquestions,t3_1mbygci,False,
n5rx1pw,"It has for many years been the case that it is a numbers game (especially in the digital applications era), and the degree is not sufficient. Internships, impressive academic projects, connections, etc. are ways to get more chances. Grinding applications is table stakes if you haven't landed anything prior to graduation.For the majority of jobs that are not basically localized services (e.g. education, healthcare), it is common as a new grad to have to apply broadly and relocate wherever the job is.Most or many new grads in a lot of fields don't end up working a job related to their field of study.A degree helps unlock a lot of paths but it is one step in a process, not the whole journey.",rajhm,2025-07-29 11:33:10,1,cscareerquestions,t3_1mbygci,False,
n5pvbuz,Everything is a numbers game. If you have a 1% to get an offer for each position then you only need to apply to one average 100 positions.,Haunting_Welder,2025-07-29 01:41:33,1,cscareerquestions,t3_1mbygci,False,
n5q5acx,"idk I've been thinking about trying really, really, really hard to get into Amazon but the fact that I went to a relatively unknown, bad university kinda makes me doubt I'm much higher categorywise than a bootcamp graduate",throwaway10015982,2025-07-29 02:40:22,2,cscareerquestions,t1_n5pthap,True,
n5pxrl8,>now? the hiring bar and competition is like 10x more fiercengl I'm increasingly wishing I had at least gotten a degree in something fun like music is if I knew CS was going to have literally zero employment opportunities for the average new gradas I get older I realize I honestly probably wouldn't have even been that bummed about doing music ed with some personal development and could have become a professor somewhere on a long enough timescale but now I'm kinda fucked permanently lol,throwaway10015982,2025-07-29 01:55:31,1,cscareerquestions,t1_n5pxf33,True,
n5qdl88,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 03:34:11,1,cscareerquestions,t1_n5qdl6s,False,moderator
n5pzeqk,">ngl I'm increasingly wishing I had at least gotten a degree in something fun like music is if I knew CS was going to have literally zero employment opportunities for the average new grad well, depends on year, imo most of the gloom and doom happened after 2023-onwards before-2019 I feel is the more ""normal"" era, but even back then it's normal to send out couple hundreds of applications then 2020 was covid, first half was doom with countless layoffs and offers rescinded, then second half was party again once Fed turned on infinite money printer then 2021-2022 was peak hiring frenzy with the money printer, people shouting things like ""name and shame on Google for only offering me $150k as new grad! I was expecting $200k!"" or ""Amazon offered me $190k as new grad is that good?"" and you'd have people reply ""nah that's a lowball I got $230k at Facebook""",NewChameleon,2025-07-29 02:05:05,3,cscareerquestions,t1_n5pxrl8,False,
n5q4wj0,"tbh I'm kinda just upset and being histrionic due to me feeling like this was a way out of my absolutely terrible life, so I'm going to keep trying until my new grad status expires (well I haven't been trying lately but I was on disability and just needed time to chill) and then try to change careers but it sucks how even STEM degrees are now essentially worthless in terms of social mobility I'm in the Bay Area so it's even worse",throwaway10015982,2025-07-29 02:38:02,1,cscareerquestions,t1_n5pzeqk,True,
n5eyvz3,">Before it was grinding DSA, web dev and some good projects.Recruiters [don't care](https://www.reddit.com/r/csMajors/comments/1jqjw5a/comment/mla5btc/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) [and won't](https://www.reddit.com/r/cscareerquestions/comments/1kkc998/comment/mrufd1i/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) [look at](https://www.reddit.com/r/cscareerquestions/comments/1kkc998/comment/mruik2v/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button) [your projects](https://www.reddit.com/r/cscareerquestions/comments/1m5ek9x/comment/n4bfu4s/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button). [Unless you go viral](https://www.reddit.com/r/cscareerquestions/comments/1m3nbuy/ive_got_my_first_swe_job_this_side_project_helped/) in which case you didn't need a CS degree.Study instead to make better grades or do non-project activities you are passionate about. That looks good in any form. I like volunteering. Web dev pays the lowest in all CS. I never grinded coding problems in my life.I like other comment telling you to look at job descriptions. They tell you what they want, which is work experience. Get an internship or co-op.",NewSchoolBoxer,2025-07-27 11:21:40,18,cscareerquestions,t3_1mah0mc,False,
n5ej9m5,Search for general software engineer roles in your desired location and see what the job requirements say consistently. This question is too open ended for someone to give a direct answer,honey495,2025-07-27 08:52:50,7,cscareerquestions,t3_1mah0mc,False,
n5frntk,"Look up five or ten open job positions at companies that you want to work at, check out their requirements for something in your qualification range. Create some projects that incorporate those requirements post that to your GitHub and add those projects to your resume. Recheck after a year to see if any requirements have changed significantly, maybe a new technology or pattern that you aren't aware about. Find an internship, note: if the internship is unpaid, they MUST be conscious of your time, nothing more than 10 hours per week should be expected.",gemini88mill,2025-07-27 14:26:51,4,cscareerquestions,t3_1mah0mc,False,
n5g3re7,The only thing that is actually in demand is being a renowned AI/ML researcher with a PhD from MIT/equivalent. Anything else is dime a dozen.,rocksrgud,2025-07-27 15:29:32,2,cscareerquestions,t3_1mah0mc,False,
n5g5tk3,Connect with all the other CS students and be a great collaborator. Your future jobs will come from people you worked with.,Spiritual-Theory,2025-07-27 15:39:52,2,cscareerquestions,t3_1mah0mc,False,
n5gxrh5,"It still is grinding DSA, web dev, and good projects, because that's where the most CS jobs fall under. Maybe studying AI is the best leverage in the market today",throwaway133731,2025-07-27 17:55:17,2,cscareerquestions,t3_1mah0mc,False,
n5g19n9,"Programming languages are more similar than they are different. Learning about the fundamentals of how they turn into machine code will enable you to pick up a new language much quicker.Doing your own project has value in learning new skills, but how applicable they are in actual work environments depends on the scale of your personal project.Learning how to read others code and build an understanding of existing systems is often more valuable than being able to create something from scratch.Consider contributing to bigger open source projects, as knowing how to collaborate is often more important than how many languages you know. You will also learn how to deal with know it all asshats in open source and be able to navigate toxic management when you get a job.",frosty5689,2025-07-27 15:16:56,2,cscareerquestions,t3_1mah0mc,False,
n5j56yo,"Nothing is gonna stand out to recruiters but to interview well you should focus on fundamentals first (data structures and algorithms), then really study computer architecture and operating systems. If you really understand those topics you will do well in interviews.",publicclassobject,2025-07-28 01:06:08,1,cscareerquestions,t3_1mah0mc,False,
n5k83pe,"In the circles I run in: Python, SQL, various AWS products, kubernetes, and being very comfortable in a *nix environment.",Ok_Experience_5151,2025-07-28 05:42:42,1,cscareerquestions,t3_1mah0mc,False,
n5n5r02,realistically there's a big gap between what's valuable and what's in-demand in the current market.,Wandering_Oblivious,2025-07-28 17:24:10,1,cscareerquestions,t3_1mah0mc,False,
n4ok2vc,I’d try to toughen it out and look for a new job as you continue to work. It’s usually easier to find a job when you have one.,findingjob,2025-07-23 09:14:50,27,cscareerquestions,t3_1m74ctp,False,
n4oq34x,"Regardless of the working condition, if there is a better job, go for it.If not, stick with it.Unless you have the money.",eminemkh,2025-07-23 10:10:18,15,cscareerquestions,t3_1m74ctp,False,
n4omi7g,"Both - look for work, while you stick it out. If you think the startup sucks, wait until you see the state of hiring in the industry rn. Startups usually have poor codebases (because everything is a rush) and low support (because developing product is more important than developing people) so it's par for the course. But you will learn a lot about businesses and development in general (outside of just coding) from startups, so make a note of what everyone learns/does so you can claim it as your own learnings in the next interview.",BulliedAtMicrosoft,2025-07-23 09:37:57,8,cscareerquestions,t3_1m74ctp,False,
n4pmxna,"\>there’s no senior developer to guide or mentor me.So you have the opportunity to plant your flag and do things better and you want to run from it?All jobs have their problems- and the ones with the most problems taught me the most. The grass isn't normally greener- take satisfaction first from your paycheck, next from how you're improving the situation.There won't be mentors who teach you patiently what you need to know- there are most likely going to be sr's who don't have the time to do much more than explain the general idea and expect you to take it from there.",dethswatch,2025-07-23 13:43:40,6,cscareerquestions,t3_1m74ctp,False,
n4rdsj4,this is how tech jobs are welcome to the game - its rare youll have someone be your daddy like it looks like your seekingmost if its under staffed teams and politics,Willing_Sentence_858,2025-07-23 18:35:18,3,cscareerquestions,t3_1m74ctp,False,
n4pai59,"If you don’t like at a place, look for something else.But in the meantime, you could improve the situation at the current place. Codebase messy? How could it be improved (automation, better processes, better tooling). Messy workplace? Speak up and try to get an agreement on improving. I’ve been the only woman in a team multiple times. You might want to get comfortable with that, because it can happen during your career. Having certain gender is no excuse for low quality work or work environment though. Find your voice.",LogicRaven_,2025-07-23 12:36:07,2,cscareerquestions,t3_1m74ctp,False,
n4tmg3s,"My first job I was there a lot longer than I wanted to be. What got me through was just upskilling when I had the time, and reading and learning as much as I could. It was more or less a dead-end job since there wasn't a lot of room for advancement/salary increase. Mentorship was non-existent as was training and pretty much everything else. Things were siloed and if you did what you were told you would get the job. I'm thankful I had the job because at least it was a foot in the door into IT. The second job I'm at is better in some ways and worse in others. We're very understaffed and are on a hiring freeze with a lot of technical debt that is overdue by years. Like a lot of organizations we want to be proactive by reacting to the latest trends in IT-- if you guessed AI, you'd be correct. We have a Github that's there more or less for some kind of version control, but it's used kind of rarely. Yes, the technical debt is to that degree. However, I'm lucky to have someone that's at least willing to work with me, and help me out and provides me some advice of things I should be doing-- that's when I buy a book on that topic and read it. I try to do a book a month when I have the time. My advice would be to do that, talk with someone you trust or who is willing to help a little and research on your own. People will take notice and be happy you cared. If there's other IT departments you work with, I'd also ask some questions what they do, their responsibilities and at least understand them from a cursory glance so if you know of something is their responsibility you can articulate yourself in a manner where people will at least see you're taking yourself seriously as a professional.",travelwithtbone,2025-07-24 01:29:18,2,cscareerquestions,t3_1m74ctp,False,
n4omh74,"with all the things listed, are there any positive parts to your job? Anything that you enjoy even just a little bit? How much experience you have? Is it an early career job or you have a couple years on you already? I'll make an assumption that the pay is decent at least? With that, could you continue as a remote worker so you can do you job from home?",CyberChipmunkChuckle,2025-07-23 09:37:42,2,cscareerquestions,t3_1m74ctp,False,
n4qqkxe,>quitting and focusing on finding a better opportunity Don't quit + side-work on finding better opportunity.,NotUpdated,2025-07-23 16:50:32,1,cscareerquestions,t3_1m74ctp,False,
n52adep,"Just curious, what does the company do that two part-time developers are all they need?",silvergreen123,2025-07-25 10:42:53,6,cscareerquestions,t3_1m8r2i0,False,
n54cyh1,"You're not too important, you're being taken advantage of. They'll milk you 'till you're burned out, and just get a new hire or consultant with double the pay. If they think you're that important, your pay wouldn't be 40 bucks per hour.Fuck them, and take care of yourself and family first.",amlug_,2025-07-25 17:20:27,5,cscareerquestions,t3_1m8r2i0,False,
n55etc9,"Do you have stake in this company? If they succeed, will you be a part of this success? Because it seems you’re sacrificing your mental health for someone else’s gains",iamgrzegorz,2025-07-25 20:22:32,3,cscareerquestions,t3_1m8r2i0,False,
n51h849,I rarely hear good things about situations that are similar to this. Most people who continue working while feeling this way end up completely quitting the field or they would be hospitalized. The best advice would be to know your limits in this company and try to understand whether the company's expectation of you is unreasonable.,Sufficient_Face_4973,2025-07-25 06:14:16,6,cscareerquestions,t3_1m8r2i0,False,
n51jei4,"Take 2 weeks off and everyone will realize you're not important at all and the show runs just fine.I've seen maybe people that were ""too important"" leave teams or go on extended time off, and not once was there a meaningful impact to the team.",Bobby-McBobster,2025-07-25 06:33:36,4,cscareerquestions,t3_1m8r2i0,False,
n56tj03,">The problem is, there are only two developers, with limited availability, and we are only getting more and more work, no new hires, and they are scared I’m about to quit.Cool, tell them you are not working more than 8 hours a day, 5 days a week. You will also being taking your lunch break and not working through that either. DO NOT settle for more money. Tell them you are working 8 hours and proceed to do that. If they fire you, great, you now have unemployment.Stop making up for their inability to hire new people or to extend their deadlines. Don't quit, just tell them you are working 8 hours a day and can no longer work more than that due to outside obligations. Don't ask for permission, you are not their slave. If it doesn't work for them, tough. Let them figure out what they want to do next.",Legitimate-mostlet,2025-07-26 00:59:37,1,cscareerquestions,t3_1m8r2i0,False,
n5iagzg,"Yes they may struggle if you take a break or leave, but it is not your responsibility to keep them afloat or save them. It is THEIR responsibility to create a work environment that is manageable such that employees can/want to stay.Your first responsibility is to yourself. Then your child and spouse. And then work. And you can't be there for anyone if you don't put your own oxygen mask on first!You're clearly a kind, generous, and thoughtful person. They're lucky to have you! And this will maybe be a very critical lesson they need to learn before they get any bigger and the stakes are higher",Urbanwoodartistry,2025-07-27 22:04:05,1,cscareerquestions,t3_1m8r2i0,False,
n5k98w6,"Been there. When you’re the duct tape holding a startup together, asking for time off feels like pulling the plug.But burnout isn’t weakness — it’s a system failure. I had to be brutally honest with leadership: “Here’s what I can give, here’s what happens if nothing changes.” Framed it as a team risk, not just personal burnout.Also: started documenting *everything* and pushed for LATAM support — fast, reliable, no drama hires. Total game-changer.You don’t have to quit to breathe. But you do have to stop carrying it all.",Acceptable-Energy425,2025-07-28 05:52:53,1,cscareerquestions,t3_1m8r2i0,False,
n54m2q4,"It’s not that we’re all they need, we’re all they have now and simply cannot keep up with the demands… they’re supposed to be hiring more devs soon, but that will be the opposite of making things easier for a long time if new hires even work out. I was full time but had to officially reduce my hours because I just cannot do it FT anymore due to my health/family",frootbeer,2025-07-25 18:02:16,2,cscareerquestions,t1_n52adep,True,
n5akw5t,100% this. If you are in the US you are completely being taken advantage of.,lechatsportif,2025-07-26 17:08:17,1,cscareerquestions,t1_n54cyh1,False,
n4u66xv,"You've gotta remember that Canada is a small, spread-out country, that has the \~'same number of people' (and a similar GDP) as California, as Texas, and as Florida (We aren't even going to consider New York at the moment). Oh, and then the US has another 47 states too (and all their major cities).The Canadian market is small, It's basically three major cities (separated by great distance and extreme environment - make sure you're applying in all 3), you're competing with Canadians, and the market **in general** is in a weird spot at the moment. Not to mention the visa issue.You're wasting your time.If you moved to the San Antonio, Austin, Houston - stretch of Texas... you'd have more opportunities within 200 miles than you would looking in Canada. I hope that helps put it in perspective.",AmSoMad,2025-07-24 03:30:31,40,cscareerquestions,t3_1m7surk,False,
n4tzi99,The Canadian SWE job market is significantly worse than the US one.Also post your resume.,polymorphicshade,2025-07-24 02:46:44,100,cscareerquestions,t3_1m7surk,False,
n4u9sb3,"If you want to live in Canada, you might as well just live in California. Same COL ratio but way better job prospects and weather",yellajaket,2025-07-24 03:55:32,21,cscareerquestions,t3_1m7surk,False,
n4u0jk0,it'd never be worth it man 1 usd is like 1.40 cad,iHadaLife,2025-07-24 02:53:17,28,cscareerquestions,t3_1m7surk,False,
n4uf1l2,Pretty sure ppl go from canada to US not the other way around lol,Improve2306,2025-07-24 04:34:37,22,cscareerquestions,t3_1m7surk,False,
n4u20xv,"Canada is mega-cooked my friend.No jobs, horrible CAD performance against the USD, millions of newcomers per year causing skyrocketing housing prices.",lordm1ke,2025-07-24 03:02:45,32,cscareerquestions,t3_1m7surk,False,
n4u8zgh,"As someone who moved from Canada to the US for a SWE role, don’t bother. Canada is cooked.",Delicious_Degree_434,2025-07-24 03:49:49,17,cscareerquestions,t3_1m7surk,False,
n4u6mzu,Why?American job market is objectively better than Canada despite politics.If you genuinely want to be Canadian I'm sure you'll find a job if you have good experience. They'll pay significantly less.,WanderingMind2432,2025-07-24 03:33:35,6,cscareerquestions,t3_1m7surk,False,
n4u0vqe,probably better to relocate within US to a better job market,yanks09champs,2025-07-24 02:55:27,4,cscareerquestions,t3_1m7surk,False,
n4udkh0,Everyone is talking about salary and COL which is fair but one major thing that's overlooked is the work culture in Canada can be vastly different (in a good way) than in the US.,SitDownBeHumbleBish,2025-07-24 04:23:20,5,cscareerquestions,t3_1m7surk,False,
n4ps42e,Generally speaking I don't quit my current job until I have an agreed upon offer letter and start date. I make sure to do math so the start date aligns with goals like time off and the standard 2 weeks notice.It's never going to be 100% safe. Your new job can let you go at any time if you are in the USA.,diablo1128,2025-07-23 14:09:58,19,cscareerquestions,t3_1m79zpb,False,
n4q2wnv,"I've always waited until I had a signed offer, start date, and complete background check.While the odds of something going wrong are minimal, it could have a high cost.",drew_eckhardt2,2025-07-23 15:01:15,6,cscareerquestions,t3_1m79zpb,False,
n4r7sz2,always wait until you have a signed letter and start date.,Terriblyboard,2025-07-23 18:07:32,1,cscareerquestions,t3_1m79zpb,False,
n4sef40,I always worry until the first day comes even with a signed offer letter so I understand what you're going through. The only thing I can say is to have options in case the worst case scenario comes you can pivot to another. Good luck!,exdos,2025-07-23 21:27:46,1,cscareerquestions,t3_1m79zpb,False,
n4vuk2t,"Your goals are fine. There's no legal requirement for 2 weeks notice. The reason you do that is to dick over the current team less and not get blackballed if you ever want to apply there again. Yes, offers can get revoked through no fault of your own.What I do is pass the background check, sign the forms, get a firm start date and only then give notice of leaving. Is usually 2-3 weeks, was 1 week once due to background check delay. I got blackballed, oh well. You want to give 2 days notice out of paranoia, you sure can.Negotiation, some companies refuse. Others, you need leverage in the form of another job offer, which they can match or give you a signing bonus instead or maybe 1 extra week of vacation. They just aren't going to give you more for the sake of it. That looks bad. Your pay was set from experience, job title, work unit and pay bands. No one rolled a d20.Other thing in negotiation, standard time to accept or refuse the offer is 1 or 2 weeks. I've asked for and received an extra week when given 1 week and explained I wanted to be fair and finish the rest of my scheduled interview with other companies. I've also asked after a final interview if I could get a verbal decision in less than a week.",NewSchoolBoxer,2025-07-24 11:55:21,1,cscareerquestions,t3_1m79zpb,False,
n4vv6pd,"I always wait till I have a signed offer/start date and any contingent checks outlined in the offer (background, reference, etc) are complete. I’ve never had an issue completing the checks before, but I have had them be held up. I’ve also had verbal offers made, but executives didn’t approve the actual offer letter, so I’m a bit more cautious these days in general. I also am not overly concerned with rounding down for 2 week notice (eg, if I give notice on a Wednesday, having my last day be the next Friday), or rounding up for my start date (eg, if given an offer on a Wednesday, not starting until the start of the next week after a full 2 weeks notice). I’ve never had a company give me any grief for these things on either side.",kittyhotdog,2025-07-24 11:59:25,1,cscareerquestions,t3_1m79zpb,False,
n4px5gy,"Unless you're willing to have an overlap, there is no way to be sure your offer won't be yanked before you start.Anyway, I don't give notice until the offer is signed with a start date.  In the past I've built in 4 weeks of notice to take some time off, but I'm not sure I would do that in today's market.",I_Miss_Kate,2025-07-23 14:34:22,1,cscareerquestions,t3_1m79zpb,False,
n4q0paq,"Can they let me go before the start date even if I’ve signed the offer? Obviously, it depends on the contract, but I’m speaking generally.",FellowMans,2025-07-23 14:51:06,3,cscareerquestions,t1_n4ps42e,True,
n4q2zx5,Yes within the United States given at-will employment.,drew_eckhardt2,2025-07-23 15:01:40,14,cscareerquestions,t1_n4q0paq,False,
n5u085b,"Id take the interview and expect nothing. See it more as interview practice. Think about it, if tomorrow you had a chance to work with your dream company, make twice as much as you do now, etc, you dont want that to be your first interview after a few years. You want to have already interviewed with other companies to get those nerves out the way and get an idea of what you can fix for the next interview. So again, a phone interivew is usually just the recuriter asking you what you do and to give brief descriuptions so he can send it to the hiring manager. It wont guarantee interviews at all, just that you are in the system. If you get interviews, I say take them and expect nothing from them. If you get it and you feel it's a better opportunity than you cross that bridge if you get there.",Broad-Cranberry-9050,2025-07-29 17:54:52,16,cscareerquestions,t3_1mchcvw,False,
n5tsew8,Unfortunately the modern interviewing process is a lot of wasted time and effort so I would recommend embracing the suck if you really want a new job,dsm4ck,2025-07-29 17:19:53,6,cscareerquestions,t3_1mchcvw,False,
n5uw32v,"If you don't want to study super hard, then just don't and take the interview anyway. 1% chance is still more than if you don't try at all. Probably still worth studying if you think you'll have a shot, though.The worst thing that happens in either of those cases is the same thing that happens if you decide not to take the interview, so...accept the interview.",skodinks,2025-07-29 20:24:14,3,cscareerquestions,t3_1mchcvw,False,
n5v18fw,"Honestly - it’ll be a very tough sell right now. As an example, I have over 12 YoE and I’m applying for senior level roles (despite my last two roles being staff and lead) and I have recruiters bringing up YoE on skills that wouldn’t have mattered to them 3 years ago.",ReasonSure5251,2025-07-29 20:48:12,2,cscareerquestions,t3_1mchcvw,False,
n5wc8mv,"You should take the interview but expect nothing. I used to believe studying super hard could help me land jobs, but in reality it's not like that. If you never take interview, once you take one, you will likely be super nervous and inconsistent.",Confident_Yogurt_389,2025-07-30 00:56:55,2,cscareerquestions,t3_1mchcvw,False,
n5ttih5,Imma be 100% with you. Study and hit some leetcode mediums. You're in consulting so you can probably sell yourself well. But using a technology for 8 months and only coding 2/3 years you've been working aren't exactly senior dev level despite what the HR rep says. I'd obviously try and get the job but I wouldn't be super optimistic,Reasonable_Bunch_458,2025-07-29 17:24:48,1,cscareerquestions,t3_1mchcvw,False,
n5u0udo,:thumbs_up: They also have a jr role that basically does the same thing as the Sr role according to the job description,br_234,2025-07-29 17:57:39,3,cscareerquestions,t1_n5u085b,True,
n5tt9qt,So you're saying forget it right?,br_234,2025-07-29 17:23:43,3,cscareerquestions,t1_n5tsew8,True,
n5tuf0c,"Technically 10 months. First project 8 months and second project 2 months but barely did anythingAnd currently doing helpdesk work. So I'm thinking of switching to IT/Cyber. It's always interested me, I already have some cloud certs and I think I found a solid IT job I might get once I get the Security+ cert. So I don't want to waste anytime on interviews like this",br_234,2025-07-29 17:28:53,1,cscareerquestions,t1_n5ttih5,True,
n5u4g5w,"Yeah, I wouldnt pay too much attention to description. It usually comes from the non-tech leads and managers just copy-paste most of it and maybe add some other stuff if they want something specific.",Broad-Cranberry-9050,2025-07-29 18:14:18,2,cscareerquestions,t1_n5u0udo,False,
n56rixb,If you’ve never done a commute like that (either) it will slowly diminish you. Neither are sustainable imo. 45 mins is about the max long term,totaleffindickhead,2025-07-26 00:47:30,50,cscareerquestions,t3_1m9fm5a,False,
n56tugp,"Out of curiosity, are you currently unemployed or desperate? Both of these don't sound great for different reasons (commute for offer 1 and the job itself for offer 2). If i had to pick, id do offer 1 and if you can't live with the commute, id get back on the market in a few months. I've done 1.5 hour commutes before, it definitely sucks but if its for a job you enjoy it's really not that bad. If it were me though, i'd say no to both and keep looking (assuming not unemployed)",lewlkewl,2025-07-26 01:01:34,5,cscareerquestions,t3_1m9fm5a,False,
n575kff,"I'll be honest with you, I can't imagine any scenario where 49 miles in LA translates to just an hour and a half during rush hour. Basically only if it's more outside of the city and you also live outside the city (on that same side and don't need to commute around/through the center of it). Like *maybe* if the commute was something like Moorpark to Santa Monica and the commute is mostly through the mountains/on PCH. But even then, it'll probably be a little dicey on a lot of days. Depending on where the second job is (assuming it isn't downtown or anything), I'd definitely take that, personally.",Great_Northern_Beans,2025-07-26 02:15:04,4,cscareerquestions,t3_1m9fm5a,False,
n56vrbv,Are you in an area where commuting is going to be tough for any job you land? On site is here to stay now that we’re in post pandemic era. Take the 1st offer and keep looking or get REALLY comfortable with podcasts and audiobooks.,TheLastDoofus,2025-07-26 01:13:17,4,cscareerquestions,t3_1m9fm5a,False,
n56wqtr,I'd do 1 simply because the team dynamic is much more important to me than the commute. I feel like offer 1 would be better to leverage a hybrid role after some time.,Chattypath747,2025-07-26 01:19:27,3,cscareerquestions,t3_1m9fm5a,False,
n56znjy,"Both commutes are bad enough that they will inevitably wear you down. How much you like your work environment will slow down (but only slow down) the erosion, so, IMHO, you should base your decision on how attractive each offers’ work environments are to you. In that case, from the way you’re describing them, offer 1 sounds far better.No matter which one you choose, you eventually will have to solve the commute issue, whether it’s somehow negotiating for remote/hybrid work in the future, looking for another role closer to you or remote when the market recovers, etc.Congrats on your offers!",YUGETBPLUS,2025-07-26 01:37:53,3,cscareerquestions,t3_1m9fm5a,False,
n56pwk4,"49 miles to DTLA? This really depends which part of LA we are talking about. 32 miles being an hour during traffic? I can drive 37 miles at like 2 pm on a weekday and it is an hour 15. I like company 1 more, but not sure if you are able to eventually move closer as that would be and factor long term.",honey1337,2025-07-26 00:37:39,3,cscareerquestions,t3_1m9fm5a,False,
n56sc0w,People are getting offers? Can't even get a dang interview,Lanky-Ad4698,2025-07-26 00:52:24,2,cscareerquestions,t3_1m9fm5a,False,
n57bptk,"Shorter commute. It's LA. Both of your estimates are for good days. On a bad day, add 50% to the commute. On a shit day, double that commute time. Once I was unemployed, and in a rather complicated situation that meant I wasn't just responsible for myself. I got lucky and got a job offer for almost 20k more than what I was making previously. The only issue was the new job was in a completely different part of the city.I didn't have a car yet, my previous job lined up nicely with the bus routes ( although coming home I usually just Uber'd to save time). With the new job I usually just Uber'd to work, this was fine. But I literally had some days where the Uber home would take so long I'd just fall asleep. We're talking about 45 minutes( one way) turning into 80 minutes on a bad day. Eventually I just moved within 10 minutes or so of my new office. It was a great job and a major stepping stone for me, but there's no way I could have done it without moving. Since you own your house and probably don't want to move, just take the shorter commute. That 32 minutes is probably going to average 45 minutes in reality. Which isn't the worst thing.",mcAlt009,2025-07-26 02:55:56,2,cscareerquestions,t3_1m9fm5a,False,
n56mjvg,Data analysis is dead afaik. I think your best bet is Java dev at a large firm (bank),totaleffindickhead,2025-07-26 00:17:28,9,cscareerquestions,t3_1m9eww9,False,
n56nbrl,"I think it's worth learning how to build a basic website - so you can start there. Make a github and make a basic site with HTML/CSS and host it and see if you enjoy that.If you do, move on to adding some dynamic functionality (js). If you still enjoy that, add a backend to your site to add some functionality to it.If you are still enjoying that process then start delving deeper into the more advanced technologies.",sunshard_art,2025-07-26 00:22:09,4,cscareerquestions,t3_1m9eww9,False,
n584ota,"So to start, this can vary a lot from person to person, but this may take a fair amount of time to pan out. With today's market, you got to be pretty competitive (4-5 years ago, you had a better chance of ""getting lucky""). Working full-time is a pain, and even putting just 10 hours a week into transitioning into SWE can be hard. All-in-all, I wouldn't be surprised if it took you over a year to line up your first job.I will say though, as a self taught dev with no degree, you got some strengths here: You have a CS degree and you've been working a job that will generally look respectable on a resume. I do think you have a pretty healthy shot at transitioning into SWE, but the market is bad and it's pretty rough out there.I'll assume you have some rough experience with programming (how to reasonably use classes, functions, if statements, for loops), or at the very least, all that will come back to you pretty quickly.If you want to get into fullstack, I would start off by focusing on Java / Springboot for backend, JavaScript / React for frontend, and use Git. I would ***probably*** recommend taking a Udemy course (I never personally tried Udemy, but I often hear good things) for both React and Springboot. You can just watch a YouTube tutorial for Git. Try to get to a point where you can work on a project pretty consistently. Just have one project you're pretty committed to.After that, there's interview prep. Go through the roadmap on https://neetcode.io (mainly focus on the video explanations, don't waste a ton of time trying to solve questions yourself at this stage). After the roadmap, do some random questions LeetCode, and try to get to a spot where you have like an 80% chance of solving an unfamiliar medium-level problem in under 60 minutes (if you haven't solved it after 2 hours, just look up the answer and try to think where you went wrong).More than anything else though ***talk through the problems***. You wanna be good at ""solving"" problems because sometimes you get ""assessments"" (basically you have to solve a LeetCode problem before getting to interview anybody), but for ""interviews"" you need to be good at talking technical. You should look up ""mock coding interviews"" on YouTube interviews to see what mean here.You should start applying before you're 100% confident with anything though (you're never going to be 100% ready to start applying). In fact, I would honestly recommend you just start sending out like 3 applications a week ***right now***. Just half ass it, get it out of the way, and get used to it. Don't waste too much time ""waiting to feel ready"" (I wasted a lot of time on this back in 2021).For your resume, skim through the wiki on r/EngineeringResumes. You'll have to adjust a bit though because of your background, but do what you can to leverage your current work experience (be detailed), and mainly try to sell yourself as ""an important team member that holds some key responsibilities and/or accomplishments"". I know that can be really awkward, but again, I think you got quite a respectable role.And finally, as far as applying goes, apply to any role that looks reasonably relevant, doesn't look too ""specialized"", and asks for less than 5 years of experience. Don't be too picky, just focus on playing the numbers game more than anything else.",SpookyLoop,2025-07-26 06:47:32,3,cscareerquestions,t3_1m9eww9,False,
n5enzh9,"You’re in a better spot than you think you’ve got a CS degree, recent hands-on experience in a technical environment, and a clear willingness to learn. That combo’s more valuable than you realize.Since you're already in biopharma, **data analytics** might give you the fastest runway into tech. Python, SQL (start writing your own soon!), Power BI/Tableau are great tools, and healthcare companies are constantly hiring analysts who can work with lab or patient data. Bonus: you can build portfolio projects using synthetic healthcare datasets to show immediate relevance.That said, if you’re more drawn to building things end-to-end, **full-stack with Java + JS** is solid—but it’ll take longer to ramp up, especially if your coding muscles are rusty. One middle path: try backend-focused roles or automation scripting in Python to bridge between the two.You don’t need to “catch up” on everything just pick a direction, build 2–3 focused projects, and you’ll have a strong story. Feel free to ask if you’d like free beginner-friendly project ideas or a platform where you can find study buddies to stay consistent.",Superb-Education-992,2025-07-27 09:40:41,2,cscareerquestions,t3_1m9eww9,False,
n5ciwf0,"In 2025, there is no chance of you getting a dev job as a 2021 grad with no experience unless you make an application that gets actual users. Just being realistic. A basic side project isn't going to do anything, doesn't matter what language you use to make it.Forget taking courses and just start building something and learn as you go.As for being a data analyst, there's not really much you can on your own to prove to an employer to hire you over someone with internships l.",futureproblemz,2025-07-26 23:35:01,1,cscareerquestions,t3_1m9eww9,False,
n56toxx,"Oh okay, I wasn't aware. Is this due to AI being able to do a lot of the data analysis workload? What changed in the industry to make it this way (if you know)? Thank you.",CasualFailure,2025-07-26 01:00:37,1,cscareerquestions,t1_n56mjvg,True,
n56twfr,"I know it's rather hard to get a job just doing this though as almost any CS grad can do it. Not trying to knock your advice, but what can separate a developer from hundreds of other entry-level developers in this regard is what I'm asking I guess.",CasualFailure,2025-07-26 01:01:54,1,cscareerquestions,t1_n56nbrl,True,
n58cbb5,"Wow, thanks a bunch for taking the time to write this out! This was very helpful. I've actually done a few uDemy courses over the years but I think that approach doesn't work for me as well because I don't really feel like I'm retaining any of the stuff just from watching a video and regurgitating. Maybe I'm taking the wrong courses. But yeah, I just started learning Java with Spring Boot tonight. Decided to do a common project (Making a Letterboxd ""clone"") , but rather than watch a video tutorial, I'm using chatGPT to learn. At first, it's been giving me a bunch of code snippets to paste and I'm going through with that to learn the process in how to make a project from start to finish with a backend and frontend, but I think moving forward, I'll ask it to give me less code snippets and more just explain concepts and theories with examples without the code directly related to the project I'm working on. Perhaps I'll try to get the fundamentals down again, maybe make a solid project or two (Nothing too crazy) and then start applying within the next week or two. Thanks for being encouraging about my chances. I'll try to leverage my science/healthcare background and maybe look for more niche roles in the biopharmaceutical industry related to tech/SWE. Obviously, they won't pay as big as tech or finance companies, but I'm just trying to learn and get my foot in the door ASAP to gain more relevant experience. Thanks again for the advice :)",CasualFailure,2025-07-26 08:00:07,2,cscareerquestions,t1_n584ota,True,
n5dlbkq,"That's fair. I get you're being realistic. I know the job market is really tough right now. I have a good network I would say though, maybe with a good large-scale project and a referral from my friends/peers, I can break into a tech job. I guess there's no harm in trying while I continue to work my current job. Thanks.",CasualFailure,2025-07-27 03:50:10,1,cscareerquestions,t1_n5ciwf0,True,
n56vhq2,"No it does before that. It’s a long story but in short there was a big-data movement which postulated that collecting tons of data, even if it wasn’t immediately apparent that it would be fruitful, they could parse it and create value from it later. But that never panned put",totaleffindickhead,2025-07-26 01:11:39,3,cscareerquestions,t1_n56toxx,False,
n4rvbl6,I’d do remote for like 20% less. 1/3 the pay and you’re almost getting paid like offshore.,BeansAndBelly,2025-07-23 19:57:49,106,cscareerquestions,t3_1m7jaye,False,
n4rulim,1/3 pay? Go office,poopine,2025-07-23 19:54:26,129,cscareerquestions,t3_1m7jaye,False,
n4rurje,"This is 100% a you question, not a strangers on Reddit question.",dowcet,2025-07-23 19:55:13,58,cscareerquestions,t3_1m7jaye,False,
n4rwoap,"If one job is 60K, and the other is 180K, take the higher paying job. If you meant to say ""1/3 less"", then that's different. 120K vs 180K won't make you happier.",davy_crockett_slayer,2025-07-23 20:04:07,37,cscareerquestions,t3_1m7jaye,False,
n4ruom8,"Remote is amazing but I'd take the money while you're getting experience. It's more than just the money, devs to talk to, learning how to behave in the office, and meeting people.Work on site for 2 years then look at remote.",funnyh0b0,2025-07-23 19:54:51,11,cscareerquestions,t3_1m7jaye,False,
n4ruw7l,"I agree with poopine. But also, how important is relocating to you? The fact that this is even a question makes me think you’re very against relocating?",DuneScimitar,2025-07-23 19:55:49,10,cscareerquestions,t3_1m7jaye,False,
n4rwvrd,1/3 is too much of a paycut. I rather go into the office at that point.,Illustrious-Pound266,2025-07-23 20:05:05,5,cscareerquestions,t3_1m7jaye,False,
n4rvpkk,What’s your situation? Are you solo or have a partner ? Relocation is a big ask and it takes about 15-24 months to get really acclimated to an area for a BIG move. Where’s the relocation to ? What’s the cost of living like ? Do you know anyone there and will you need to find roommates ? Are the fronting temporary housing and a few visits ?,HackVT,2025-07-23 19:59:38,2,cscareerquestions,t3_1m7jaye,False,
n4rvuzh,Move and you get 3 years of the pay that you would at the other company??? MOVE. You can afford to visit a half dozen times a year and still be up money even if you are flying lol,None,2025-07-23 20:00:19,2,cscareerquestions,t3_1m7jaye,False,
n4rw3vv,"I'd say remote to me would be worth up to a 15% pay cut. Beyond that, go to the office.The remote job is probably offering less pay because it is a startup with limited capital rather than because it is remote. See if they are offering equity. I prefer actual money to theoretical money, but some people strike big by taking the equity.",marsman57,2025-07-23 20:01:28,2,cscareerquestions,t3_1m7jaye,False,
n5lb7mn,"It's not unreasonable to feel dissatisfied, especially if your role isn't aligned with your skills and career goals. Acknowledge that you’ve given it time but still feel out of place. Clearly outline your frustration and express your desire to work in Java development, offering potential solutions or compromises. For example, ask if there’s a chance to transition into a more relevant project or team that aligns with your skills.",DojoLab_org,2025-07-28 11:38:39,3,cscareerquestions,t3_1mbc7c7,False,
n5mqyu9,"Data centric work involving Python, AI, BigQuery all sounds very exciting. You imagined doing something different. I would try to be flexible and open to any interesting work that comes your way. I'm sympathetic to the fact that you interviewed and signed on for one type of work, and they give you a different type of work. But I would try to be fleixble; and the work sounds actually interesting, at least to me. Java is great, but I wouldn't limit myself to one tool, I'd work with any interesting tool that comes my way. I do have limits; I'm sure if I got tasked with writing ancient COBOL or Visual Basic, I couldn't do that for very long.Every job is supposed to have a mix of tasks you enjoy and tasks you don't. The big red flag is if after six months or so, it's all tasks you don't like. In that situation, you should raise the issue to your manager, and ultimately, look for another job.Lastly, QA is often less interesting work than dev. But often they stick newer devs on QA, you learn how all the different internal systems and workflows and processes work, you make sure things don't break, and as you demonstrate competence you transition into actual development efforts. FWIW, I'm in a new dev job, I have 30 YOE, I'm officially a dev, but I'm limited to more QA type tasks at the moment. However, I'm learning how everything works, building rapport with colleagues, and building lists of improvements that would benefit the product, and I'm sure I will get the chance to implement some or most of my ideas, during the next year.",Joram2,2025-07-28 16:15:44,1,cscareerquestions,t3_1mbc7c7,False,
n5nnu4t,">I really want to continue working with Java.If this is the case, then you should keep bringing it up with your manager.That said, otherwise, learn Python and move on. You'll have better career opportunities with data science experience than as a Java developer in my opinion as someone who joined a company as a C# developer and now does Python almost exclusively in data science applications.",marsman57,2025-07-28 18:47:59,1,cscareerquestions,t3_1mbc7c7,False,
n4w3w1v,"Its pretty unrealistic that AI will produce your entire codebase, even by the end of next year. I would do what its always smart to do, keep your resume up to date, keep your network open, stay brushed up on relevant skills and wait it out. Worst case you get Severance and are prepared to leave. But in general, job security is not guaranteed in this field unless in Government, or at some company who prides themselves on low ""Involuntary Attrition"", which is rare. Always be prepared to leave.",Haunting-Speech2038,2025-07-24 12:51:53,17,cscareerquestions,t3_1m83g14,False,
n4w8znc,"""AI taking over all code production"" and ""AI migration"" probably means offshoring your jobs to cheaper developers who claim to use AI.Long term job security doesn't really exist in this field, never has, for the vast majority of SWE. The best thing to do is to limit your debt, live frugally, invest like crazy when your earnings are great.",jfcarr,2025-07-24 13:19:32,7,cscareerquestions,t3_1m83g14,False,
n4w4xc2,The happy middle ground is going to be a workforce that is very good at utilizing AI to speed up output.,v0idstar_,2025-07-24 12:57:32,3,cscareerquestions,t3_1m83g14,False,
n4wqecu,Man the world has turned to shit since Bush invaded Iraq,betterlogicthanu,2025-07-24 14:46:36,4,cscareerquestions,t3_1m83g14,False,
n50tiwr,"Yeah. As I said in the post, everyone knows -except for leadership apparently- that this is very unrealistic. Unfortunately, leadership at my company tries their hardest to make unreasonable things happen to the detriment of the employees. Mainly through layoffs & fear tacticsThanks for the reminder to update my resume + actively apply. Tbh I haven’t been great with that since getting hired",Puzzleheaded-Moment1,2025-07-25 03:14:22,3,cscareerquestions,t1_n4w3w1v,True,
n4xohm2,What is relevant when everyone is looking for an AI extension on some fucking serum.,Empty_Geologist9645,2025-07-24 17:21:48,2,cscareerquestions,t1_n4w3w1v,False,
n50tzq9,True but unfortunately leadership wants a pipe dream,Puzzleheaded-Moment1,2025-07-25 03:17:26,1,cscareerquestions,t1_n4w4xc2,True,
n5b5vwy,The world has turned to shit since the times of Reagan and Thatcher,anand_rishabh,2025-07-26 18:57:34,1,cscareerquestions,t1_n4wqecu,False,
n5ula0f,"120 means your team isn’t prioritizing system health at all.My previous job 1 a week, maybe. Current job, 1 - 2 a week",ChickensFloatOverAir,2025-07-29 19:33:02,15,cscareerquestions,t3_1mcijaq,False,
n5uld7o,120 pages is not normal for most jobs no.,chevybow,2025-07-29 19:33:27,15,cscareerquestions,t3_1mcijaq,False,
n5u36yg,"There's really no such thing as normal as it differs wildly from company to company, team to team, product to product etc. With that said, your experience is definitely worse than the average i have personally done, but ive never been part of a tier 0 service. Mine is usually 2-3 high sev pages a day, and maybe 1 incident every other on call. How often is your oncall and is it 24/7 or do you get to switch off at night?",lewlkewl,2025-07-29 18:08:28,5,cscareerquestions,t3_1mcijaq,False,
n5ucw0n,I’m so tired of poor alerts. Most of the alerts I get is not actionable. So why was the alert created?,qrcode23,2025-07-29 18:53:26,6,cscareerquestions,t3_1mcijaq,False,
n5u5fu4,"It differs on project. In my first job it was once a month for a day for major tasks and once every 3 months for 3-4 days for minor incidents. It depends on how well the automation is. I have only done it for 1 project. It wasnt great at first. Most of the automation wasnt built and most major issues came up from the same few things. Because it wasnt automated, we didnt notice until the customer complained and once customer complaned theyd wnat to get on a 3 hour call because they wanted an explanation. Then wehad to write a report to send to them. It sucked.We could get 20 tasks in a day of on-call. Once automation got better, there were less customer complaints and less tasks in general. Most days Id have at most 5, one time I had no incidents and it was like I hit the lotto. But this project was also a major big tech company with customers worldwide. My current company has on-call I have yet to be added to. From what I hear it's one week long. Unless it;'s major incident there is no requirement to fix it until the next business day.",Broad-Cranberry-9050,2025-07-29 18:18:56,2,cscareerquestions,t3_1mcijaq,False,
n5uxnk5,"That does not sound normal. On the other hand, looks like an opportunity to be a hero and do some operational improvement",zergling-,2025-07-29 20:31:30,2,cscareerquestions,t3_1mcijaq,False,
n5ujqme,"I've been called 3 times total on call at my current job, with 2 days a week being expected to be near a phone and able to get back to my machine in ~30 min.All but 1 time was upper management telling me I could go do whatever because we were going into the christmas break.",BellacosePlayer,2025-07-29 19:25:37,1,cscareerquestions,t3_1mcijaq,False,
n5uzbh8,"Depends on the teamUsually when your oncall is that bad you'll have either follow the sun (12 hours of oncall then another team picks it up) or you have 2-3 day rotations so that no one is completely wrecked.For all of the sev 2s that no one cares about, you should be working to get rid of those since no one cares.",termd,2025-07-29 20:39:19,1,cscareerquestions,t3_1mcijaq,False,
n5vl07h,Some weeks I don’t get a single page. Some weeks a few. It all depends on the company and how the dev organization has prioritized stability and error handling.,drpeppa654,2025-07-29 22:26:25,1,cscareerquestions,t3_1mcijaq,False,
n5vkar2,Sounds like you should work on your alerts.,Zealousideal_Dig39,2025-07-29 22:22:40,1,cscareerquestions,t1_n5ucw0n,False,
n5hg44u,No. This job market is not going to be kind to you. If you want another job search for one while you're working. Do not quit without another offer in hand.,Nick9502,2025-07-27 19:27:03,59,cscareerquestions,t3_1mav2t4,False,
n5hgf0t,"Unless it's affecting your mental health, I would always stay until you've got an offer. The market is not great right now, there's no guarantee that looking full time will be any faster. Also, there's nothing stopping you from checking out and doing the bare minimum at your current job while you focus on job hunting.",TraditionalClick992,2025-07-27 19:28:36,30,cscareerquestions,t3_1mav2t4,False,
n5hg3di,10 months in your first job is nothing. Stay longer and continue to look for new opportunities.,Cykon,2025-07-27 19:26:57,20,cscareerquestions,t3_1mav2t4,False,
n5hhz2l,Do it and learn a hard lesson.,cs_pewpew,2025-07-27 19:36:37,13,cscareerquestions,t3_1mav2t4,False,
n5hno4d,"I get where you're coming from. When you're employed and job searching unsuccessfully, your mind begins to think ""If I could just do this full time surely I'd line something up quickly and that'll solve all my problems!""The problem is that's not how it works. If you're getting 0 interviews now, job hunting ""full time"" will continue to get you 0 interviews. When you're not even getting *interviews*, that's not a problem you can solve by just buckling down and committing more time to the search.If you were struggling with leetcode, or performing well in interviews, that argument would hold more weight. More interview practice means better performance. But you're not even getting the interview. That's not something that'll get better if you ""practice"" 8 hours a day. There's nothing *to* practice.I'm not invalidating what you're feeling at all, I'm sure it absolutely feels like quickand, and that you're stuck in your career.But want to know a worse feeling? Being unemployed, draining your savings, while still having all of those exact same negative feelings. That'll be way worse. Getting into that hole is how a lot of people spiral into a deep career-ending depression.Quitting your job will not be a magic fix. If anything, it will make your search *harder*. It's always easier to find a job while you're employed with an income. An important consideration a lot of people don't think about is because you have an income you have the power to reject job offers that aren't good fits. Imagine you get another offer for a role *just like* the one you're currently in. Obviously you wouldn't want to accept that, right? That's the whole reason you're job searching, to get away from this kind of role.When you're employed, you just turn down the offer, and you continue the job search. There's no rush.When you're unemployed, you feel an intense pressure to accept *anything* because you need to put food on the table. So you accept a bad offer, and inadvertently end up back at square one.Hold onto this job, and job search on the side. This is how most people change jobs.",SouredRamen,2025-07-27 20:05:48,11,cscareerquestions,t3_1mav2t4,False,
n5hl8ar,"I did walk away from a job where the co-worker toxicity and the questionable company ethics led my exit. This was later proven to be a good idea when the Feds started arresting the owners a few months later. So, I'd say it depends on exactly how bad your situation is and if you feel you can wait it out until the job market improves.While you're waiting, live frugally and save up an emergency fund so that if you have to walk away at some point, you can. Since CS career path is often rocky, it's a good strategy to develop ""FU"" investment money so that you have options when things go wrong.",jfcarr,2025-07-27 19:53:15,6,cscareerquestions,t3_1mav2t4,False,
n5hm5qz,Of course not.,Gold-Antelope-4078,2025-07-27 19:58:00,3,cscareerquestions,t3_1mav2t4,False,
n5idyql,"1). Most of us have a rough adjustment to 9-5. Take it one day at a time, you can do it. 2). Find something (work related) that you can do that is valuable. It's rewarding. It rewires you to enjoy work, go hard, learn, and get better at your career. Don't just wait it out.",solid_soup_go_boop,2025-07-27 22:23:34,3,cscareerquestions,t3_1mav2t4,False,
n5i58a6,#NO,locke_5,2025-07-27 21:36:05,2,cscareerquestions,t3_1mav2t4,False,
n5eqx9f,"The Hexagon corporation in Europe has a good work culture. But yeah it sucks at most places. You can't keep leaving jobs for that reason. Hiring is expensive. Worst culture is in consulting. Everything is due yesterday. I never saw a repo written by IBM soulless creatures that had any unit testing code at all.>Management often hands out vague or incomplete specs, deadlines feel arbitrary, and developers are expected to be ""jack-of-all-trades""That happens everywhere. Part of your work experience is getting better at dealing with ambiguous design requires and anticipating changes to them cause we're ""Agile"" and ""embrace change"". No we don't, it's just an excuse to manage badly.>I’d be open to learning a new language if neededMost mainstream jobs are split between C# and Java. Learn one, not both. Then there's a stack of work using Angular or React. JavaScript sucks, see if you can get by with TypeScript. Then you got databases. Postgres is the easiest to install on your own and figure out that jobs actually use. Python is used everywhere but the jobs tend to want you to know one of the above as the main driver. Go aka Golang is up and coming but so far you can usually get a pass if you know C# or Java or Python and pick up on the job.Yeah learn something but don't think you can learn 3 languages to entry level at the same time. Pick and choose.",NewSchoolBoxer,2025-07-27 10:09:28,2,cscareerquestions,t3_1maijj7,False,
n5f4948,"I have bad experience with London. It included all you mentioned in greater amounts than elsewhere plus British fakeness, a lot of backstabbing with a lot of politics. People were either leaving like me, getting fired, suffering or running the show. One year of that was enough for me.",BeatTheMarket30,2025-07-27 12:04:07,1,cscareerquestions,t3_1maijj7,False,
n5f5z2q,How many years of experience do you have? Is it possible your expectations are unrealistic or you’re learning how to set boundaries?I find often times younger developers struggle to articulate the value of writing better code (or take it so far there isn’t business value). Have you considered focusing on that?,jamesg-net,2025-07-27 12:16:19,1,cscareerquestions,t3_1maijj7,False,
n5fz9s7,"It depends entirely on the company or sometimes a specific department. I wouldn't categorize an entire country as having bad coding practices... Have you considered looking for another job in Italy?If coding standards matter a lot to you, ask about it during the interview. What their code review process is like, are automated tests part of the unit of work, what CI/CD process is in-place, coding styles used, linters if any.Should give you a pretty good idea how much a place cares about code quality.",frosty5689,2025-07-27 15:06:40,1,cscareerquestions,t3_1maijj7,False,
n5ge2u7,"This may be rare, but here is my experience.I first worked for a private company in TX, USA.  They required new hires start as junior developers regardless of experience.  That worked for me because I was fresh out of college.  But looking back, I think that helped define a tier of authority and skill level with the project managers that were then able to instill patterns, practices, and responsibilities among each employee while allowing us to work as silo developers.Of course that all hinged on the managers being good at their job and leading by example.",Barkeep41,2025-07-27 16:20:29,1,cscareerquestions,t3_1maijj7,False,
n5ersdo,"Thanks!Fair, I know it's pretty shit generally, but I was wondering which ""base culture"" could make for the best odds at a good work culture.As for the specs; I'm not talking ""do X,Y,Z like this"" but ""Customer wants an e-commerce. Good luck."" kind of attitude.That's why I'm looking for collaboration and somewhere where management actually discusses stuff with engineers before making decisions; I do expect devs to be left with the integration details (with various degrees of independence depending on the team), I just don't want to transform random dreams into reality.I found that TDD makes this much better since: no clear specs => no code.As for the languages, I meant human languages; I'm comfortable with Go, TS, Bash, Py, Psql, MySQL, mongo and I'm picking up rust.I have experience in the field (software house, SaaS, B2B, B2C, cloud etc.), I'm not worried about the ""finding a job"" part, but worried about the ""putting effort into moving somewhere worth it"" part.",Loud_Ad_9603,2025-07-27 10:17:54,2,cscareerquestions,t1_n5eqx9f,True,
n5f5e3f,"Thanks for sharing your experience!The UK seems to be going through tough times, sadly...Some 15/10 years ago, a lot of people moved from around me to London, but now most of them are back or moved elsewhere.It's a shame that not many places in Europe seem to be doing well right now :')I hope you're better now!",Loud_Ad_9603,2025-07-27 12:12:09,2,cscareerquestions,t1_n5f4948,True,
n5f7fgv,"Four years.I valued it much more in the first couple of years and then got better with boundaries and understanding when it adds value and when it does not, but the general quality of software around here is pretty poor even with low to no expectations.It certainly does not help that I work with web technologies, so there's a lot of slop to be made in the dynamically typed languages (and frameworks with 5 different ways to do something) with bad patterns that ""just work"".In my daily work, I spend most of the time fixing legacy code written with no design or architecture in mind, and I know it's the ""norm"", but I'd like to figure out if there are better environments, with better specs, communication, documentation and testing, since it seems something that most people agree on the fact that those make for better code and DevX in general.",Loud_Ad_9603,2025-07-27 12:26:30,2,cscareerquestions,t1_n5f5z2q,True,
n5g15df,"Italy has a pretty interesting scene when it comes to tech and companies, having also work cultures shift strongly between regions; I've worked across three/four regions so far.I have always been in companies with decent ci/cd, linters, formatters etc., the main issue is the planning and management process; I've always been told ""do testing and all the fancy stuff, but we won't plan for that"". It's a mindset issue more than a skill issue (I've seen many talented devs bogged down by this).I'm generalizing for the sake of the discussion; I've heard of *some* healthy-er workplaces, but generally engineers aren't valued as much as other countries and the culture is pretty top-down when it comes to management.There's also a huge divide between north and south when it comes to compensation and quality of life.The main problem is; swe is a team sport, often with collaborating teams. I could get lucky, but what use is it to be doing well while everyone else is struggling? I'd be a layoff from being miserable again and could have to work with people that don't have the privilege of a good workspace and thus are stressed and struggle with good practices.I've had a discussion with some entrepreneurs telling me to go work in the X region, but what's the point when a couple regions are the exception? (I don't mirror said mentality, I'm just questioning its logic).",Loud_Ad_9603,2025-07-27 15:16:20,1,cscareerquestions,t1_n5fz9s7,True,
n5f8ojy,"I wonder if you would enjoy a highly regulated industry like aviation or healthcare.The pace will be much slower, and the quality will be generally higher as far as bugs. Probably not nearly as much interesting work around usability would be the trade-off.I work for a consumer facing financial technology company. For me it’s a good balance because obviously you can’t get money wrong, but we still have the startup Yolo mentality around experimentations and how to get people through the on boarding funnel or upsell.",jamesg-net,2025-07-27 12:35:04,1,cscareerquestions,t1_n5f7fgv,False,
n59ojgc,"In 2025, it will make a difference, especially at your YoE. I'd do it, especially if you can get your employer to pay for some or all of it.",I_Miss_Kate,2025-07-26 14:18:02,19,cscareerquestions,t3_1m9u3ce,False,
n59p6bt,"My experience with one AA, not even in tech, I got offered more jobs. With a BA (and 15 years of tech experience) I got offered better jobs, and that was in English and Asian studies. My masters in a technical field got me 6 figures and a 100% raise. Both the job before and the job after were with 20 plus years in tech. YMMV but hirers want proof you can “finish a thing”",doryllis,2025-07-26 14:21:31,4,cscareerquestions,t3_1m9u3ce,False,
n5ac435,"It won’t really hurtThese degrees are best for independent learners who can do a good job of putting in extra time and effort to really build stuffYou’re already doing that via your day job, it’ll be far easier for you than a walmart manager doing schoolwork + independent work after an unrelated jobIt’s good to have that degree box checked in a competitive market even with experience, a lot of your competition will have both.Just take care to avoid burn out, it’s gonna be easier to fall into if you go for this. We aren’t made to do the same shit for 16 hours a day",3slimesinatrenchcoat,2025-07-26 16:22:33,3,cscareerquestions,t3_1m9u3ce,False,
n5ec6nw,"At some point, a degree is going to be a hard bottleneck in your career progression. A LOT of positions have a degree as a hard requirement. All in all, you greatly increase your maneuverability in the job market with a degree.",Techatronix,2025-07-27 07:42:55,2,cscareerquestions,t3_1m9u3ce,False,
n59qs1f,"Yes, get the CS degree. You're more vulnerable to layoffs without it, unlikely to be promoted and no company in the US is going to hire you now if you go applying. If you had 5 YoE, some could give you a pass but send you back to entry level. I agree with u/I_Miss_Kate.And you know, the degree should help you with your job. The coursework isn't a waste. CS theory becomes more important the higher you move up and you should fill in your gaps that you undoubtedly have. A single Intro to whatever language course is 45 hours of instruction with 100 hours of homework and graded exams. That's about a bootcamp level of work that accepts anyone with a credit card and doesn't fail people out.>Or should I just double down on building projects, learning on my own, maybe picking up some certs?Recruiters will not look at or consider your projects and certs are scams they won't care about either, unless you see them as a plus in the job description. But sure, teach yourself some tech stacks before you're taking CS courses that will suck up your time and be more productive.",NewSchoolBoxer,2025-07-26 14:30:13,1,cscareerquestions,t3_1m9u3ce,False,
n59tyie,"If you looking to move into a more technical role it may be worth getting the CS degree but maybe not online. The most important thing you gain from a CS degree isn't knowledge, its technical credibility. If your job history only shows non-technical roles (HR, Business Systems Analyst), you would benefit more from a conventional college degree (maybe a masters to save some time).",Conscious-Secret-775,2025-07-26 14:47:23,1,cscareerquestions,t3_1m9u3ce,False,
n5aptvq,"in a similar boat and preparing for the WGU CS degree (see r/WGU_CompSci for info).for me, worth the time and money (\~CA$6k/semester) to one, check the HR box, and two, fill in all the gaps from teaching myself CS.",computer_porblem,2025-07-26 17:33:16,1,cscareerquestions,t3_1m9u3ce,False,
n5as2kn,What specific technical tasks do you do in your current job?,OkMathematician3516,2025-07-26 17:44:40,1,cscareerquestions,t3_1m9u3ce,False,
n5b3326,I did! Going to WGU for it. Company’s paying for it and I’m able to breeze through it since it’s self-paced.,h0408365,2025-07-26 18:42:30,1,cscareerquestions,t3_1m9u3ce,False,
n5dk72o,OMSCS while part time,Fit-Act2056,2025-07-27 03:41:53,6,cscareerquestions,t3_1mabvxs,False,
n5fatea,"I'm not familiar with the exact rules surrounding the GI Bill or what your company offers.You don't say what your Bachelor's is in or what your current job is, but since you want to become more specialized, I'm guessing that it's something related to technology/computers/software. Unless there's a compelling reason for you to leave your job and attend school full-time, I'd consider a part-time graduate program, perhaps even an online program from a reputable university. Expanding to online programs could expand the number of schools and specializations that you can consider, and keeping your job means you don't have to worry as much about the job market and it reduces financial risk after you finish the program.If being in an academic setting is important, you may not have to leave your current job for a part-time in-person or hybrid program at a local university. Depending on your current company's policies, you may be able to do a flex schedule at work that lets you attend at least some of your classes in person, and you should still get access to other campus resources.The state of the job market in 1-3 years, after you finish a graduate program, is probably the biggest question. This is especially true if you specialize in something your current company doesn't currently need. It's not clear how long it would take you to find a job using your new degree and specialized knowledge. It's common advice that it's easier to find a job when you already have one.",TomOwens,2025-07-27 12:49:12,1,cscareerquestions,t3_1mabvxs,False,
n5h7p8t,"Can I ask, how do you have a very high VA disability rating and yet can work just fine? I am not knocking you, but I know an others who also has a high rating and has zero issues working…like how does that work? I know the payout can be significant to the point that many just don’t even work.I’m not knocking it, country should help those in need. But finding it very strange people have super high VA disability ratings, get paid significant money from it, and yet can work just fine with zero special accommodations needed.",Legitimate-mostlet,2025-07-27 18:44:35,1,cscareerquestions,t3_1mabvxs,False,
n5b7u3s,You should understand that there’s a > 50% chance that nobody knows what the fuck they’re doing at this startup.,divulgingwords,2025-07-26 19:08:06,17,cscareerquestions,t3_1ma18nm,False,
n5berlf,"When this happened to me, it was pretty much a formality. VP asked me a couple of light questions about my experience, then gave me an offer.",TraditionalClick992,2025-07-26 19:46:00,2,cscareerquestions,t3_1ma18nm,False,
n5ctj2n,"Side question, does this level/role require more than a CS bachelors degree?",WinonasChainsaw,2025-07-27 00:42:27,1,cscareerquestions,t3_1ma18nm,False,
n5dtqsz,"This VP wants to see if you can grow into someone who contributes meaningfully to their AI strategy, so expect questions about your research approach, how you stay current with the field, and your thoughts on where AI/ML is heading. They'll likely ask about challenges you've faced in your research, how you approach ambiguous problems, and what excites you most about applying your skills in a startup environment.The key is showing intellectual curiosity and demonstrating that you can think beyond just executing tasks. Be ready to discuss specific projects from your research background in detail, but frame them in terms of business impact or real-world applications. VPs care about ROI and strategic thinking, even from juniors, so connect your technical work to broader outcomes. They might also probe your adaptability since startups move fast and priorities shift quickly compared to academic research environments.I'm on the team that built [AI interview helper](http://interviews.chat), and it's designed exactly for situations like this where you need to navigate senior-level conversations and think through how to position your experience effectively during high-stakes interviews.",akornato,2025-07-27 04:55:45,0,cscareerquestions,t3_1ma18nm,False,
n58as25,I think distributed systems is worth learning,migoden,2025-07-26 07:45:17,15,cscareerquestions,t3_1m9n7ny,False,
n58d0ip,">That being said, I value job security more.The way to be secure isn't to specialize in anything. It's to be good enough to change specializations whenever the time comes.",justUseAnSvm,2025-07-26 08:06:55,16,cscareerquestions,t3_1m9n7ny,False,
n58d3ai,"I mean who knows with exponential growth, but current LLMs can't even handle concurrency well. I think deep systems work is going to be in the long tail of what AIs learn to achieve",ArkGuardian,2025-07-26 08:07:39,5,cscareerquestions,t3_1m9n7ny,False,
n58gbta,No one knows what the world will look like in 15years,Cool-Double-5392,2025-07-26 08:39:56,2,cscareerquestions,t3_1m9n7ny,False,
n598xu9,Wondering the exact same thing lmao. I think this would also allow you to work on ML infra which in theory should only become more relevant.,feedkage,2025-07-26 12:43:44,2,cscareerquestions,t3_1m9n7ny,False,
n58n67w,"Specialization is not secure, period.That being said, not really. AI sucks at complex, creative or semi-creative tasks like systems engineering.",229-T,2025-07-26 09:48:18,1,cscareerquestions,t3_1m9n7ny,False,
n591kfc,"AI might become the thing that replaces an IDE, but it is still a toaster.",These-Bedroom-5694,2025-07-26 11:52:45,1,cscareerquestions,t3_1m9n7ny,False,
n59ryrd,Also interested in doing the same kind of masters. Have you decided on which one??,Legitimate-School-59,2025-07-26 14:36:41,1,cscareerquestions,t3_1m9n7ny,False,
n5fgxyp,"AI excels at popular tasks because it employs a statistical learning algorithm. The more data yields better results (until a point).Being relatively good at non-popular topics will always be safer from what we call ""AI"" today.That being said, systems are better off than frontend and data science, for instance.",Special-Bath-9433,2025-07-27 13:26:38,1,cscareerquestions,t3_1m9n7ny,False,
n58gobn,">That being said, I value job security more. ""job security"" hasn't really been a thing after ~2022 you don't get ""job security"" by being at a stable company, no such thing anymore, you DO get ""job security"" by the ability to find new jobs even if you lose your current one, if I lose my job I could probably line up 20+ interviews within a week just by replying to all the HRs that has been messaging on linkedin and that's not including internal referrals",NewChameleon,2025-07-26 08:43:22,1,cscareerquestions,t3_1m9n7ny,False,
n53vi6v,It may give you an advantage in a long run when you’ll be approaching higher positions.,Easy_Language_3186,2025-07-25 15:59:03,9,cscareerquestions,t3_1m92s7t,False,
n53ydjn,"I’m similar to you,and iv contemplated getting a formal CS degree as well. All I can say is you don’t NEED it if you already have decent experience. However if this for personal reasons not career it makes sense, but if you’re looking to increase your comp I know plenty of people making good money without having a formal CS degree",13cyah,2025-07-25 16:12:31,6,cscareerquestions,t3_1m92s7t,False,
n53uro4,Be proud of your degree if you pursue it. Do it for yourself and your own development.,Xx360StalinScopedxX,2025-07-25 15:55:38,3,cscareerquestions,t3_1m92s7t,False,
n53u77w,Do it,MathmoKiwi,2025-07-25 15:53:01,1,cscareerquestions,t3_1m92s7t,False,
n53zkpk,"It's a great idea. Having 2 full time jobs essentially is going to be fucking hard, but it won't get easier as you get older. Perhaps save HARD for a year so you can drop to part-time or contract work while studying, and start after your move.",PatchyWhiskers,2025-07-25 16:18:09,1,cscareerquestions,t3_1m92s7t,False,
n5aiq7i,"Get a degree. Working full time and going to school sucks but tons of people do it in similar situations to yourself, it’s not impossible. You can almost certainly do it faster than 4-5 years too.This field is moving in the direction of degrees mattering, anyone saying otherwise is being dishonest. Sure experience matters a ton too, but when your experience is up against someone else’s and they have a degree as well, you’ll be shit out of luck.",OccasionalGoodTakes,2025-07-26 16:57:15,1,cscareerquestions,t3_1m92s7t,False,
n5f1dsw,"I had the same experience and tried to do a SE (software engineering B. Eng.) while working full time… it’s not impossible but I’m assure you it gonna hard and long :face_with_tears_of_joy:. With kids and everything I just dropped out, but it’s feasible",AhBeinCestCa,2025-07-27 11:42:04,1,cscareerquestions,t3_1m92s7t,False,
n5i55ea,Perusing lol,Impossible_Ad_3146,2025-07-27 21:35:40,1,cscareerquestions,t3_1m92s7t,False,
n53yuqb,So you will be sacrificing around 300-400k of salary to instead spend 40k for basically no reason. The experience as a dev matters more than a degree which you already have. While you spend four years learning cs how much will ai have learned by then?,Setsuiii,2025-07-25 16:14:46,1,cscareerquestions,t3_1m92s7t,False,
n5vo719,"It's not as bad as last year and it is getting a bit better, but i just went through it. It took me 3 months to get a job but even then I got lucky. It was a lot of applications (in the hundreds) and only like 4 interviews I got out of it. It's not great. Basically expect to be unemployed for 3-6 months. I think you should go in with a plan and just start right away with the applications because companies are taking forever to respond. Then after 2-3 months if you dont have much going on, be ok with starting a contract or something.",Broad-Cranberry-9050,2025-07-29 22:43:22,9,cscareerquestions,t3_1mcpukl,False,
n5wjjb2,If you’re an American citizen trying to work in US it’s close to impossible to find a job. Unless we can send all the visa workers home and not bring any more in it’s time to switch careers. Any place that is hiring will have thousands of applicants.,Nofanta,2025-07-30 01:39:20,2,cscareerquestions,t3_1mcpukl,False,
n5vssx8,"C# and 6 years is probably gonna be okay, but still a few months. I have 8 years web development (mostly frontend) and took about 2.5 months to get a job. Time of the year also matters a lot—Id rather be unemployed than Q4.",aeroplanessky,2025-07-29 23:08:08,2,cscareerquestions,t3_1mcpukl,False,
n5vte3u,"My read from keeping tabs with my network (about half SWE, half data whatevers): it's not quite as bad as Reddit makes it sound, especially if you're both experienced and have the right degree(s), but it's still bad.",cy_kelly,2025-07-29 23:11:17,1,cscareerquestions,t3_1mcpukl,False,
n5vu7ox,"Not sure, been employed for 8 years with a 1 week break and 5 years before that. I interviewed once 3 years ago to get leverage for a large pay adjustment... worked out well.My team hasnt been hiring for a while but other engineering teams are onboarding every few months. Seems OK from that perspective.",-Dargs,2025-07-29 23:15:40,1,cscareerquestions,t3_1mcpukl,False,
n5vok85,"Thanks. It took me six months last year, so I hope it is better this year.",mmahowald,2025-07-29 22:45:20,1,cscareerquestions,t1_n5vo719,True,
n5v6puk,if you enjoy coding then software dev for sure,jkh911208,2025-07-29 21:13:57,25,cscareerquestions,t3_1mcnlxh,False,
n5vaplr,I would say that it's a lot easier to go from a developer into devops than devops to go into development.I personally would go developer and then when you hit the burnout stage maybe think about trying devops out.,tech_b90,2025-07-29 21:33:35,19,cscareerquestions,t3_1mcnlxh,False,
n5v8y6n,How about you request to shadow both teams for like 2 weeks each?And then make an decision based on which one you liked more.,CyberChipmunkChuckle,2025-07-29 21:24:48,8,cscareerquestions,t3_1mcnlxh,False,
n5vl2f5,"Software dev > dev ops. Being devops, sometimes you get the short end of the stick and need to be putting down fires all the time.Being sw dev, you have more flexibility. Ideally, dev ops is a sub set of being a sw dev.",TVBlink,2025-07-29 22:26:45,3,cscareerquestions,t3_1mcnlxh,False,
n5vrbxq,DevOps if you like being paged at 3 in the morning.,AngelicBread,2025-07-29 23:00:13,2,cscareerquestions,t3_1mcnlxh,False,
n5v966u,"You better pick right, dude. This determines the entire rest of your life, forever.",abluecolor,2025-07-29 21:25:55,6,cscareerquestions,t3_1mcnlxh,False,
n5vz3dx,"You’re going to be super overworked as devops, don’t do it. The devops folks at my company (F500) always have tons of work on their plate, as they’re supporting dozens of teams",epicfail1994,2025-07-29 23:42:03,1,cscareerquestions,t3_1mcnlxh,False,
n5w809y,"Software dev, for sure.",epelle9,2025-07-30 00:32:34,1,cscareerquestions,t3_1mcnlxh,False,
n5wiu86,"Dev Ops and Data Engineers are similar in a sense that people are happy when you build a useful pipeline, and then in their mind you don’t do anything until shit hits the fan and even then you’re never fast enough- and it’s your fault that it happened in the first place.Developers are just the magical wizards that are supposed to be little AI meat bags that learn complex concepts as fast as they can be thought up and produce them before EOD. Pick your poison and good luck!",nullstacks,2025-07-30 01:35:12,1,cscareerquestions,t3_1mcnlxh,False,
n5vgtnf,DevOps,Illustrious-Pound266,2025-07-29 22:04:34,1,cscareerquestions,t3_1mcnlxh,False,
n5dtp9w,"This is a very layered question. A few factors at play 1. Section 174 revision allows for alot of the cash flow issues involving dev salaries to be softened but it's sunset in 2029 pending another congressional budgetary hearing. 2. Foreign Visas - Joseph Edlow was recently confirmed to USCIS director. A major hawk when it comes to h1b and opt, F1 etc. Only good for domestic stem. 3. The fed rate - Naturally if debt becomes expensive, labor becomes expensive. This situation is still unravelling. Only time will tell So the answer is: Possibly. This situation is sticky. On one hand salaries in tech are great. But the market itself is volatile. Like anything it's a calculated risk. If you want to mitigate it and still remain in tech. Id consider a double major in math and target quant roles. Be warned, those devs comprise of some of the best engineers in the industry. Goodluck",LineageBJJ_Athlete,2025-07-27 04:55:23,8,cscareerquestions,t3_1madm0b,False,
n5dt8v2,"Don't tell op the following:CS Contractor, IT because it is CS related, Defense because it is easy, Government Job because it is east.The answer is easy because the whole cs related job market is FXXKed up.Give OP the real answer for everyone.",AlwaysNextGeneration,2025-07-27 04:51:41,5,cscareerquestions,t3_1madm0b,False,
n5evzlw,"You can work at your university's tech support. Won't help get a CS internship or co-op. If you work while a student, your grades will suffer. Intern and co-op pay is well above $18 an hour. You can apply for them as early as your third semester, if your grades don't suck.Competition is fierce. You know how overcrowded CS is. Don't stack the odds against yourself.",NewSchoolBoxer,2025-07-27 10:56:48,1,cscareerquestions,t3_1madm0b,False,
n5eg32q,"In UK £17.50 is graduate doctor salary. £8.50 is typical for zero hour driving jobs. My cohort worked bar jobs and the better off international students worked in banks (counting, nothing fancy).",primedsub,2025-07-27 08:20:52,1,cscareerquestions,t3_1madm0b,False,
n5du13k,Why aren't these real answers? Sound reasonable to me.,Illustrious-Pound266,2025-07-27 04:58:07,3,cscareerquestions,t1_n5dt8v2,False,
n5efkju,"why not? just because someone may not like the answer, does not mean the answer is incorrect one of my favorite quote in recent years: ""I didn't ask if you LIKED what I said, I asked if you UNDERSTOOD what I said, those are not the same""",NewChameleon,2025-07-27 08:15:42,1,cscareerquestions,t1_n5dt8v2,False,
n5q9paw,Competition is crazy for those hanging jobs,Excellent-Benefit124,2025-07-29 03:08:21,1,cscareerquestions,t1_n5evzlw,False,
n51bvtf,"Remove GPA. Experience first - then projects - then skills.Your experience doesn’t tell me much about what you did how you did it and what it accomplished. it reads more like a job description as of now. Make sure your experience explains 70-90% of your resume, if it’s not possible let projects fill in the gaps.",Real_nutty,2025-07-25 05:29:10,3,cscareerquestions,t3_1m8mzjr,False,
n51re5f,Thanks for the feedback! My experience just isn't CS relevant really so I tried to put projects first but I'll give the change a shot. I'll definitely change up my experience section. Thank you!,XCrease,2025-07-25 07:47:09,1,cscareerquestions,t1_n51bvtf,True,
n4tz21f,"Your rent on a 2br in that area is going to be about $3000 as best as I understand it. Even at the maximum salary for the position, your lifestyle will take a hit compared to now.",marsman57,2025-07-24 02:43:55,12,cscareerquestions,t3_1m7si3f,False,
n4upz8c,"Your only leverage is your current job situation, so anything you ask for has to be backed by that. IMO, you should frame the raise as incentive to leave your current financial environment, which I can only assume is very comfortable (even if it isn't, make it sound like it is). You actually have a decent amount of leverage here, since you'd be taking a paycut, even at the max salary as u/marsman57 mentioned, and you'd have to move and deal with all the financial and personal burdens associated with that. I wouldn't be surprised if you got at least your moving costs comped, if they aren't already.Congrats on your offer!",YUGETBPLUS,2025-07-24 06:03:54,4,cscareerquestions,t3_1m7si3f,False,
n4u6g3y,"If your ok with a lower quality of life, sure move to a big city",yarrowy,2025-07-24 03:32:16,5,cscareerquestions,t3_1m7si3f,False,
n4urz4s,I want to take your position in the LCOL. Where do you work?,One-League1685,2025-07-24 06:21:23,2,cscareerquestions,t3_1m7si3f,False,
n5fzdy0,"So you're going to add a state income tax (depending if you're in WA) OR a sales tax (if you're in oregon) and have to at least double your rent , probably for a studio apartment (modest Seattle 2 bedrooms start at $3500) not to mention everything else will be more expensive (gas, eating out, etc), so even maxing out to $135k the majority will be eaten up by taxes and rent.But in all honesty, if I was your age the trade off of leaving a rural area for a bigger city is worth it, so I would say go for it. There are definite downsides (traffic, noise, cost) and it's a different type of personality than you'll be used to but I think in the end a good opportunity.",havok4118,2025-07-27 15:07:15,2,cscareerquestions,t3_1m7si3f,False,
n4v7p6z,lookup levels.fyi but be mentally prepared for a lifestyle adjustment: you'll likely be (voluntarily) living with roommates and probably not going to be living in 2bdrm apartment in California before you throw out some ridiculous number like $400k+ for a new grad because you demand the same lifestyle,NewChameleon,2025-07-24 08:47:49,1,cscareerquestions,t3_1m7si3f,False,
n4vhhc6,"$950 rent is insane. God, Im incredibly jealous.You are staring down a rent payment of about 3k for California lol. Good luck!",Shock-Broad,2025-07-24 10:18:00,1,cscareerquestions,t3_1m7si3f,False,
n4vtvjr,I’m spending $1080 for a small room in NYC with roommates.,DiaA6383,2025-07-24 11:50:57,1,cscareerquestions,t3_1m7si3f,False,
n54ll5l,"I used to live in that area of CA, it is very expensive in every way. Job hunting around there for years I've never seen impressive salaries for how high the cost of living is. The salary you posted is good from what I've seen which is crazy. Imo you could still live comfortably on that salary if you're single though. At the lower end of the salary it'd be tough saving for a house or aggressive retirement savings. (Prob impossible saving up for a house if it's in that area :face_with_tears_of_joy:)",thegungeon,2025-07-25 17:59:57,1,cscareerquestions,t3_1m7si3f,False,
n5fzjkc,Why is it a lower quality of life?,havok4118,2025-07-27 15:08:05,1,cscareerquestions,t1_n4u6g3y,False,
n4o4gs3,"I guess it depends on what you are looking to learn, and specialize in?You can do any course (on Udemy for eg) on full stack development, front-end development, backend development, data engineering etc but it all depends on what goals you have and where you see yourself heading.Also IMO, with AI, technical skills are becoming more and more replaceable as it gets better, so don't neglect developing soft-skills as well since that can actually help you stand out from most other engineers, and something I personally also heavily utilized (in conjunction to technical books for improving my technical knowledge) to make greater impact, and get promotions. Also I am a UWaterloo CS alumni here lol - I haven't taken any WatSpeed courses but UWaterloo was quite mathematical at least in the CS degree so just FYI - but I could be wrongFeel free to reach out if you have any questions. happy to help",SomeRandomCSGuy,2025-07-23 06:46:32,1,cscareerquestions,t3_1m6x1yf,False,
n4pjbp5,You do have a point. Soft skills are very important. Thanks!,Little_Influence5518,2025-07-23 13:24:34,1,cscareerquestions,t1_n4o4gs3,True,
n5q50lh,It’ll take extra time that’s a given but it’s not over no. You need math for computer science thats without a doubt,styada,2025-07-29 02:38:43,10,cscareerquestions,t3_1mbzrpk,False,
n5q6t82,i had take math from remedial algebra at my cc all the way to calc 3 & linear. it was a grind but if i could do it you can definitely do it! take a math class every summer if you can. also you don’t have to wait for class to start coding.,SUsudo,2025-07-29 02:49:49,2,cscareerquestions,t3_1mbzrpk,False,
n5q4myd,lol no,Sufficient_Face_4973,2025-07-29 02:36:24,2,cscareerquestions,t3_1mbzrpk,False,
n5q8htv,"Nah. Keep going, your path sounds normal. I did all the same shit you’re describing except my pre cal was one semester. If it takes an extra year then who cares. Just focus on your gpa if you want to transfer.",ATXblazer,2025-07-29 03:00:29,1,cscareerquestions,t3_1mbzrpk,False,
n5qe1un,"if it makes you feel any better, when i went to regular state university i couldn't pass discrete math the first two times and because of that i couldn't move on to the rest of my CS courses for a year because they all depended on the students having passed discrete math.",spike021,2025-07-29 03:37:24,1,cscareerquestions,t3_1mbzrpk,False,
n5qgi07,"I had to take precalc in college freshman year, and even failed calc 1. now have a full time SWE job. so yeah you'll be fine.",LurkingSlav,2025-07-29 03:54:23,1,cscareerquestions,t3_1mbzrpk,False,
n5qlpuf,"I mean you probably have to take extra classes but it's legitimately no big deal. School isn't a race trust me. People start college late in life. Just actually take in the material and learn. Math IS programming. You know how in algebra you're manipulating equations and assigning variables and shit? That's literally how you think as a programmer. Those geometric proofs? That's essentially stepping out code. Math brain and code brain are very similar to a certain extent. Buckle down and take the classes more serious now. Don't worry about speeding through, actually learn. You'll be thankful later on you did",Edraitheru14,2025-07-29 04:32:34,1,cscareerquestions,t3_1mbzrpk,False,
n5qumqg,"I love calculus and wish everyone could learn it, but you really rarely use it in programming. Start coding now.",Traveling-Techie,2025-07-29 05:45:03,1,cscareerquestions,t3_1mbzrpk,False,
n5r943g,"If you decide to not take the earlier maths or learn on your own, it's over. If you decide to spend a year and a half catching up your math skills, you'll be fine.",Empty-Scale4971,2025-07-29 07:59:21,1,cscareerquestions,t3_1mbzrpk,False,
n5svwoq,Summer school to catch up (2026),ewhim,2025-07-29 14:48:55,1,cscareerquestions,t3_1mbzrpk,False,
n5m8buo,I mean I’d let them know once you have a signed offer letter and the background check and pre-employment paperwork is done. Just tell them after confirmation you’d like 2 weeks to give your current employer standard notice.,dareftw,2025-07-28 14:47:35,5,cscareerquestions,t3_1mbi1ij,False,
n5mdk6j,In the US? 2 weeks baby.Be a professional and work with your team for a clean handoff. If you're the devops lead then only a clown would cut your access the day of your resignation.,FlattestGuitar,2025-07-28 15:12:45,3,cscareerquestions,t3_1mbi1ij,False,
n5mbfrf,I hear OF is hiring.,Early-Surround7413,2025-07-28 15:02:34,4,cscareerquestions,t3_1mbhncu,False,
n5mmvle,Harvesting rice.,AdministrativeHost15,2025-07-28 15:56:33,5,cscareerquestions,t3_1mbhncu,False,
n5oqe9d,"Maybe something more hands-on like dentistry or trades (in Aus, trades are decently paid and very much in demand)",SolidGrabberoni,2025-07-28 21:54:07,1,cscareerquestions,t3_1mbhncu,False,
n5pec94,I wonder how cooked people are who got a game dev degree,Hot-Syrup,2025-07-29 00:03:49,1,cscareerquestions,t3_1mbhncu,False,
n5mnyfk,"I don’t think this field has much of a future, at least in the USA. How is the SWE field in the Phillipines? Are they at least hiring?The layoffs combined with not as many job postings means many are leaving the field in the USA. I would seriously question investing money into a masters to go into AI/ML if that is what you were considering. I think cybersecurity requires you to have probably more experience than you have. But that is up to you and this is just my opinion.",Legitimate-mostlet,2025-07-28 16:01:34,1,cscareerquestions,t3_1mbhncu,False,
n5m5k60,How is that?,TechRedditwastaken,2025-07-28 14:34:07,1,cscareerquestions,t1_n5m5hkk,True,
n5mon2b,Why question master in AI/ML?,Guiltz_,2025-07-28 16:04:47,1,cscareerquestions,t1_n5mnyfk,False,
n5m5zhu,damn. Really inspiring,TechRedditwastaken,2025-07-28 14:36:12,1,cscareerquestions,t1_n5m5rms,True,
n5inqxy,You can work at most top labs with an MS. PhD preferred is accurate,ArkGuardian,2025-07-27 23:20:06,2,cscareerquestions,t3_1mawp8a,False,
n5jbyuf,Can you link to a sample job posting or two? It likely depends on the exact kind of job you're targeting.,anemisto,2025-07-28 01:48:35,1,cscareerquestions,t3_1mawp8a,False,
n5l9nl4,"[ML Engineer - Spotify](https://www.lifeatspotify.com/jobs/machine-learning-engineer-personalization): This is less research oriented but could be a nice starting point? Does not say neither MS nor PhD. [ML Engineer I - Pinterest](https://www.pinterestcareers.com/jobs/6864992/machine-learning-engineer-i/?gh_jid=6864992): Requires MS/PhD [ML Engineer Graduate - TikTok](https://lifeattiktok.com/position/7380126065912908082/detail): Requires PhD [Research Scientist - Spotify](https://www.lifeatspotify.com/jobs/research-scientist-personalization): Requires PhD and publications at top conferences.I know these roles differ a bit, but this is generally the kind of position I’m targeting.As I mentioned, I have experience developing a personalization system during my internship, and I’m planning to work on a Master’s thesis related to personalization/recommendation, with a focus on bias/fairness as well.However, the companies I’m aiming for don’t have engineering offices in my country, so I’ve been trying to understand my chances of getting an offer for a role like this. If my thesis gets accepted to a top conference, would that be enough to stand out, or would I still need a PhD (for the roles that don’t explicitly require one)?",Select-Coconut-1161,2025-07-28 11:27:05,1,cscareerquestions,t1_n5jbyuf,True,
n5lzjts,"Contrary to most of my comments on this subject, I'm inclined to say you probably want the PhD, given that you're looking at the Spotify job listing and thinking ""that's the sort of job I might like"" and you'll regret that door being closed, either on an ""objective"" level (i.e. you'd be happier with that job) or just a personal level (a lot of ~~doing~~ finishing a PhD is about ego).I'm not familiar with Pinterest Labs specifically, but I know more than one successful ML Engineer at Pinterest with no PhD and ""labs"" doesn't appear *that* research-oriented. TikTok looks like the standard ML Engineer new grad job posting -- I'd bet they have a similar one for master's students. I'd expect the first Spotify post to have a de facto MS expectation for a new grad.I have an unrelated math PhD and no CS degree. 10 years ago, I would have applied to all of these and would likely have struck out on TikTok (no one wanted me in their new grad pipeline) and Spotify research (both because I'm arguably unqualified and because people focused on first-author papers and conference ""quality"" *do not* know how to interpret math CVs). The others probably would depend on which way the wind was blowing that day and the company culture (for example, Google seems willing to talk to anyone plausible).",anemisto,2025-07-28 14:03:57,1,cscareerquestions,t1_n5l9nl4,False,
n5m2ior,"Thank you for the detailed reply. I am also thinking like you, it'll probably open many doors and it does not worth saying ""what if"". However, after I complete my Master's, I'll probably try my luck with similar job listings while I wait for the results of my PhD applications, and evaluate my situation again.",Select-Coconut-1161,2025-07-28 14:19:00,1,cscareerquestions,t1_n5lzjts,True,
n5dcxpl,"A CS masters has an iffy ROI and is not necessarily the way to learn more about coding. The way to learn more about coding is to do more coding. If your company will pay for the masters, that's a possibly different matter, but still not necessarily a slam dunk yes.",gms_fan,2025-07-27 02:49:52,8,cscareerquestions,t3_1mabfdv,False,
n5ddfa7,decent way to future proof yourself given non cs undergrad imocheck out /r/OMSCS,IlIllIIIlIIlIIlIIIll,2025-07-27 02:53:13,7,cscareerquestions,t3_1mabfdv,False,
n5dir65,"Does your current company have software engineering positions? If yes, you could do an internal transfer. Given the current job market, I’m not sure if it’s worth quitting a good job for a masters in CS. Have you considered doing an online masters while keeping your current job?",evnaczar,2025-07-27 03:31:18,2,cscareerquestions,t3_1mabfdv,False,
n5di5fn,"No, probably not.You have a minor in CS, pretty good, but you're also an automation engineer. Doing the CS masters would be a great way to jump to a software role, or try to get into big tech.",justUseAnSvm,2025-07-27 03:26:50,3,cscareerquestions,t3_1mabfdv,False,
n5f4fri,"I'm about to finish Georgia Tech's OMS Cybersecurity program but I took some electives that are in the CS program. The courses (for the most part) are excellent but you truly get out what you put in. I've thoroughly enjoyed my Master's program and I got so much out of it, beyond simply having a Master's. As for the actual value... for me it has yet to materialize as I'm transitioning out of the military next year. I should also mention that military paid for my degree. All that said, I am already in the interview process for a few defense tech positions in the $150k-$185k range so I definitely don't regret pursuing my Master's.",SlipshodRaven,2025-07-27 12:05:27,1,cscareerquestions,t3_1mabfdv,False,
n5g8mvx,A CS degree is worthwhile until you’re doing senior engineering work and you’re approaching 10 years of experience.,drew_eckhardt2,2025-07-27 15:53:39,1,cscareerquestions,t3_1mabfdv,False,
n5gelbg,"don’t know about the ROI on this. I would recommend masters if you are potentially interested in research route otherwise if you want to continue with regular SWE, then your position, salary etc will solely depend on your interview performance and if an undergrad does better than you, they will end up with a better salary. So imo masters won’t be a good bet. Would highly recommend reading technical books to work on your fundamentals and get them strong and in parallel work on your soft skills (this is a game changer that most engineers don’t focus on and allows one to stand out). Doing this catapulted my career to senior from new grad in under 2 years over other engineers with 3-4x the amount of experience.The books you read will depend on what you want to focus on. For eg, my area of work was distributed systems so the main books I read were around that but the general ones I recommend are the following 2: DDIA, philosophy of software design. Then also diving into design patterns, pragmatic programmer, etcBased on what you are curious to learn and specialize in (FE, BE, DE, DS etc) you pick up relevant books there and start diving in. Also you don't have to read books cover to cover (though the previous 2 I mentioned, do read cover to cover) unless they excite you or you think you are learning from them. I usually use books as a frame of reference so when I get stuck I know where to look (tbh AI like ChatGPT has made that much easier now).For soft-skills (the real game changer), I would recommend focusing on good documentation (and I don't mean writing docs that no one reads, but being strategic with it) like writing summary docs to summarize complex discussions, writing well-thought-out design discussion tradeoff analysis docs to promote healthy, structured discussions and building alignment, etc. Speech is equally important - the phrasings used, the tonality used etc can immediately set an authority apart from a noob - this also translates 1:1 into slack threads, and code reviews as well. Small tweaks like that can instantly make someone come off as authoritative and knowledgeable.",SomeRandomCSGuy,2025-07-27 16:22:58,1,cscareerquestions,t3_1mabfdv,False,
n5ih6at,"if your company pays for it then go ahead, otherwise I wouldnt",Inner_Fuel3558,2025-07-27 22:41:59,1,cscareerquestions,t3_1mabfdv,False,
n5di6h2,This. since graduating I think my salary has tripled.,justUseAnSvm,2025-07-27 03:27:02,2,cscareerquestions,t1_n5ddfa7,False,
n5dja3l,"Yes, an online masters while working is exactly what I'm considering right now! We're a pretty small company and don't really have any true ""software engineering"" positions",DietMoon0,2025-07-27 03:35:08,1,cscareerquestions,t1_n5dir65,True,
n57a19g,"That’s really dynamic question.I work in automation and I could be doing invoice automation, which can be API, Django, Regex, SQL, AI, etc",SpareIntroduction721,2025-07-26 02:44:39,4,cscareerquestions,t3_1m9hh42,False,
n57ys11,"They're looking for your ability to think through real-world scenarios like ""how would you automate testing for a web application that has both UI and API components"" or ""design a CI/CD pipeline for a microservices architecture."" You'll want to focus on understanding testing frameworks like pytest, selenium, or requests for API testing, along with concepts around test design, data-driven testing, and handling flaky tests.The Python questions will likely be more practical than algorithmic - expect to write actual test scripts, parse configuration files, interact with APIs, or manipulate data structures in ways that relate to automation tasks. They might ask you to debug a failing test, explain how you'd structure a test suite, or discuss strategies for maintaining test reliability as applications evolve. Since these interviews can involve some tricky scenario-based questions that require thinking on your feet, I actually built [interview AI](http://interviews.chat) to help people navigate exactly these kinds of technical discussions and practice articulating their problem-solving approach in real-time.",akornato,2025-07-26 05:53:24,1,cscareerquestions,t3_1m9hh42,False,
n59n92n,"Possibly, but there are automation engineering jobs out there that are not specifically test automation",Responsible-Fan-2875,2025-07-26 14:10:53,1,cscareerquestions,t1_n57ys11,False,
n57fafy,Nope. That could be anything. My job descriptions rarely match the job itself,SpareIntroduction721,2025-07-26 03:20:33,1,cscareerquestions,t1_n57enhv,False,
n57gwjt,What was your interview like if you dont mind me asking?,RSufyan,2025-07-26 03:31:59,1,cscareerquestions,t1_n57fafy,True,
n57h8x5,"Mine was all high level, about what I’ve done, what I’ve automated, using what tools",SpareIntroduction721,2025-07-26 03:34:28,2,cscareerquestions,t1_n57gwjt,False,
n57l91u,Gotcha.  Thank u for the replies,RSufyan,2025-07-26 04:03:29,1,cscareerquestions,t1_n57h8x5,True,
n53jx3w,I think that's pretty cool,theorius,2025-07-25 15:05:40,3,cscareerquestions,t3_1m9084m,False,
n56an96,">It's become clear that getting a solid industry job, is a lot harder these days without a CS degree. The bootcamp/self-taught path (even if it's associate degree) rarely works anymore unless you're exceptional.It's almost impossible without a CS or Computer Engineering degree. Every entry level job gets over 100 applications so HR filters by degree for a sanity check. I like your plan.>as eventually staff/principal SWEI don't think that's what most people really want. At Team Lead, I was working 50 hours per week with 15-20 hours of meetings. I had responsibility to my team and the whole business unit such as tracking work intake and discussing if defects could impact other departments. For 10% more pay. Then it's a pyramid, rank in Top 10% of employees at your grade for a chance of making Principal. You made it that far? Now get 5 DMs per day of people asking you for help who will blame you if you don't. Be married to the job.>That said, I enjoy the field (I genuinely like math, I like coding (just not obsessed)) Me too. Coding isn't my hobby. I like it but it's just a job. I'd rather do most anything else in my free time. I don't know an accountant who does accounting for fun when they go home. I stepped up my math and statistics knowledge. I get more out of that.",NewSchoolBoxer,2025-07-25 23:09:13,3,cscareerquestions,t3_1m9084m,False,
n5cnlpe,Did you vote trump,According-Emu-8721,2025-07-27 00:03:50,1,cscareerquestions,t3_1m9084m,False,
n51djjx,Never was. Unless you’re doing like help desk work or security IT.,Known_Turn_8737,2025-07-25 05:42:57,40,cscareerquestions,t3_1m8r1y8,False,
n51ev0k,"Never was for any job requiring a CS or engineering degree. Help desk support dude that unlocked my account said he needed the A+ cert. Different world where certs aren't scams. I'm with u/Known_Turn_8737 here.In about 1 in 20 job applications, I'll see entry level AWS/Azure/GCP cert listed as a plus. That is all. Practitioner is a scam within that 95% scam. Associate is what is listed. I've never heard of CKA in 10 years of DevOps.Get an internship or co-op. That trumps everything else on your resume.",NewSchoolBoxer,2025-07-25 05:53:59,13,cscareerquestions,t3_1m8r1y8,False,
n51dza4,"For DevOps, look into CKA. Also, Azure and AWS certs will do you good.",Techatronix,2025-07-25 05:46:34,8,cscareerquestions,t3_1m8r1y8,False,
n51h4dw,"Yesn't. You are a fresher and have no way to prove anything without experience, so certifications do highlight things. But after that initial highlight it will boil down to your knowledge. The most qualified and reputed certification means nothing if u don't have knowledge to justify it. Once you get even a little bit of experience, the certification itself becomes useless.",Electronic_Pie_5135,2025-07-25 06:13:22,6,cscareerquestions,t3_1m8r1y8,False,
n51k1df,"Have a few AWS ones, never helped whatsoever. No one ever cared",nbabrokeman,2025-07-25 06:39:19,7,cscareerquestions,t3_1m8r1y8,False,
n51gimp,Certifications alone won’t help you need project work and tech stack which is in demand and also you should have good coding skills etc.Certifications are a piece of the solution to the puzzle not the whole solution you need to add other pieces to get hired.Still they are better than not having them just don’t expect to get hired based on getting them.Good luck :four_leaf_clover:,Synergisticit10,2025-07-25 06:08:06,4,cscareerquestions,t3_1m8r1y8,False,
n52hanq,"Niche fields usually require some certificates like Salesforce/SAP etc. Or often times with cloud tech such as GCP/AWS/Azure, but not as often as CRMs I listed above",Turk_the_Young,2025-07-25 11:34:51,3,cscareerquestions,t3_1m8r1y8,False,
n55sg1k,I don’t remember a time when the general wisdom wasn’t certificates are worthless.,nsxwolf,2025-07-25 21:30:02,3,cscareerquestions,t3_1m8r1y8,False,
n51tk6q,So who is doing my heart surgery?Nurse: We have this new junior doctor that would do your surgery sir,KlingonButtMasseuse,2025-07-25 08:07:36,2,cscareerquestions,t3_1m8r1y8,False,
n52aia9,No my last hiring manager and director of IT literally laughed when our team (about 4 people plus him =5) started talking about certsI think I remember him saying something like it might even be a sign of a bad candidate,betterlogicthanu,2025-07-25 10:43:58,2,cscareerquestions,t3_1m8r1y8,False,
n4ukytc,"I have gaps too from layoffs, I don't care, I ""deal with"" it by bucketing anyone that has bias against that as ""not a good fit"", oh company #18 rejected me? no worries, that just means not a good fit, I still have companies #22 25 26 17 19 wanting to interview with me >I don't care about the gaps financially, I have savings to last for it. But there does seem to be some bias against this. I know I was pressed by one recruiter who specifically treated me like I was hiding something due to the gaps. ""cool, next company""",NewChameleon,2025-07-24 05:21:25,3,cscareerquestions,t3_1m7ljxj,False,
n4se4m7,Appalachian trail,NotEqualInSQL,2025-07-23 21:26:18,2,cscareerquestions,t3_1m7ljxj,False,
n4sedfg,"This won't help you at this point OP, but having your own business for some contracting side gigs can be good during these times because it is something that technically still exists even when you aren't actively working it.",marsman57,2025-07-23 21:27:31,2,cscareerquestions,t3_1m7ljxj,False,
n50bw28,Have you ever sold anything on ebay? Bam! Entrepreneur! Make up a business name and say it was your company.,Pulte4janitor,2025-07-25 01:24:45,1,cscareerquestions,t3_1m7ljxj,False,
n55jhge,you were back-packing in between jobs b/c you didnt feel a need to rush back and look for a job.,Playful-Call7107,2025-07-25 20:45:11,1,cscareerquestions,t3_1m7ljxj,False,
n4sj9m1,How would you realistically get side contracting jobs though? Wouldn't this be as hard or harder than finding a job?,Legitimate-mostlet,2025-07-23 21:52:01,2,cscareerquestions,t1_n4sedfg,True,
n4seb79,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-23 21:27:12,1,cscareerquestions,t1_n4seb2t,False,moderator
n59pc49,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-26 14:22:24,1,cscareerquestions,t1_n59pc22,False,moderator
n4pwvms,"The truth is that you’re extremely unlikely to find another job that is as good as your current one unless its another programming job. If I were you I would try to think of what you genuinely have always wanted to do or learn, then try it without expectations and see where it leads you",maxmax4,2025-07-23 14:33:03,18,cscareerquestions,t3_1m7a2uz,False,
n4q0wsj,can i have your job,Impressive_Desk,2025-07-23 14:52:03,31,cscareerquestions,t3_1m7a2uz,False,
n4q5r4j,"Stop looking for a job that will be fulfilling. There are none. Get some interests and hobbies, thats your real issue. You sound out of touch tbh",ggprog,2025-07-23 15:14:28,26,cscareerquestions,t3_1m7a2uz,False,
n4pw8xb,"I feel similar to you. I’m pretty much done with this career and looking to pivot. Not liking where tech is headed and every other company does not seem appealing to me as much anymore. I’m not feeling fulfilled because of different reasons although it’s somewhat comparable to yours. I’m planning on an exit after I get bonus and traveling the world for a bit and get some inspiration as to what I want to do next.Can’t really provide you with any recommendations, everyone is different. But I would start exploring things or ideas you’ve been putting off. For me that’s photography and hiking/nature, traveling. I’ll find a way to monetize it hopefully.",Alcalide,2025-07-23 14:30:00,4,cscareerquestions,t3_1m7a2uz,False,
n4sisq3,"In my opinion, it might be useful to see a therapist in your down time during the workday. I think you're depressed. You literally are in a position where you could pull 130k/year AND have 4+ spare hours during the workday for something you actually enjoy. You are in a blessed circumstance.You won't find another career that pays this much with this little accountability with no prior experience, at least imho.",marsman57,2025-07-23 21:49:37,3,cscareerquestions,t3_1m7a2uz,False,
n4q39da,"youre not gonna find a better job with this kinda comfort. do something that you like in your freetime outside of development, learn a sport or write something",HADESsnow,2025-07-23 15:02:56,2,cscareerquestions,t3_1m7a2uz,False,
n4q71sg,Let me know if ya'll are hiring. 5-6 YoE.,Modullah,2025-07-23 15:20:25,2,cscareerquestions,t3_1m7a2uz,False,
n4rpf70,Hate to break it to you but this is as good as it gets. Be thankful and enjoy life outside of work,Thresher_XG,2025-07-23 19:29:40,2,cscareerquestions,t3_1m7a2uz,False,
n4pym8m,"Interesting situation for sure!To be transparent in advance I would fall under the category of wishing this was my situation, I’d love the opportunity to spend more and more time with my S/O or family or working on my passions (side-hustles) with free time.Another option to consider could be to jump into the OE route where because you have so much extra time and are essentially unsupervised, having a J2 could keep you occupied and make you less bored while being able to double your income.Lastly, finding out what makes you excited might be the real place to start",margielalos,2025-07-23 14:41:24,1,cscareerquestions,t3_1m7a2uz,False,
n5vzrhj,"Most applicants don’t have skills but your resume gets lost in the sea of people blatantly lying to get a job. Now every job has 500 applicants with PhDs from MIT.My advice is to network in real life. Meet people, laugh with them, share numbers, “hey speaking of that, yk I’m looking for a dev job”, yk get the word out that you’re qualified and looking and eventually (hopefully sooner than later) somebody who knows somebody will be like “hey I know a guy,” and boom, job. Might not be the best, but in the door is in the door.",Clear-Examination412,2025-07-29 23:45:45,1,cscareerquestions,t3_1mcls0f,False,
n5txtd1,"At this point you either know the material or you don't. Focus on being friendly, easy to get along with, and showing that you can work well with others. Don't be weird and awkward. If they're pouring Kool-Aid and you want the job, drink it.",Mahler911,2025-07-29 17:44:07,3,cscareerquestions,t3_1mchmhe,False,
n5u0ujp,If you made it this far than you likely have already past that leetcode grind and dont really need to do much else. If you think any coding questions may pop up I always recommend doing this good DSA study guide over grinding leetcode. It links videos and leetcode guides to DSA that include practice problems. For me I have never grinded leetcode and was able to get in 2 big tech companies. It's not about grinding leetcode it's about actually understanding DSA and sometimes the leetcode grind doesnt help you understand how DSAs truly work and sometimes it's noticeable when someone just grinded leetcode as opposed to someone who actually understands what each DSA does and the speed of it. Here is the link: [https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/](https://techdevguide.withgoogle.com/paths/data-structures-and-algorithms/),Broad-Cranberry-9050,2025-07-29 17:57:40,2,cscareerquestions,t3_1mchmhe,False,
n5u24ho,Thanks,DarkStarr7,2025-07-29 18:03:31,1,cscareerquestions,t1_n5u0ujp,True,
n5t2dtb,talk to your manager,bravelogitex,2025-07-29 15:19:30,22,cscareerquestions,t3_1mce6wv,False,
n5tcim7,Fire back in said public channel - “reviewed concerns above and turns out I was correct. No issues”,KratomDemon,2025-07-29 16:06:43,5,cscareerquestions,t3_1mce6wv,False,
n5t6l5n,"You’ve already answered your own question. Your boss wants you to transition to a leadership role. This most likely threatens this senior dev. If you do transition into a leadership role, you are going to have to approach this situation with that in mind. Go to your manager for mentoring.",stile213,2025-07-29 15:39:19,2,cscareerquestions,t3_1mce6wv,False,
n5tb941,"Have a chat with your line manager, any chance it's the same person for both of you? Additionally have a call with HR, there should be some kind of ethical codex internally that can address this. If there is a public callout again, I would not start defending myself publicly. Take a note, even say thank you for raising something. You need stay on the moral high ground there.",CyberChipmunkChuckle,2025-07-29 16:00:45,2,cscareerquestions,t3_1mce6wv,False,
n5ttkmg,"Like others said, bring concerns to manager. Say something like ""hey the senior dev I noticed has been a bit critical of my work recently and doing it in public spaces more often. I dont mind being called out but it seems like he's going out of his way just to do it to me is there anything you can suggest that I can do to best approach this. I dont mind talking to him but I felt it may be best to bring it up to you so to avoid the wrong approach."" Something like that.Unfortunately in this career there are always hostile devs. Some you can learn to co-exist with them, others it's impossible. I've worked with 2 guys like that. First guy, was a screamer. His way or the high-way. I was terrified of hij when I first go tthere. Then I had to work with him. Funny thing was, he ended up being the nicest guy. I learned how to work with him basically. I noticed that if I had a difference of opinion I had to back up my words. Most of the time I was still wrong lol, but sometimes I was right and he gave me credit. I think he liked that I did my own investiagation and even had my own points. I wasnt just taking his word as the god given truth. Now in my second job, I could never figure out the hostile dev. He had no people skills that I could crack. In a lot of ways I compare him to Michael Jordan. He was the guy that knew everything of the project. He produced in his sleep. He didnt mind working 12 hour days. He told managers how to do their job. I fhe didnt like your work ethic, he didnt want to work with you. And I think he realzied early on he didnt like my work ethic (Im more of a9-5 guy). I worked with him on a major project he had created and it went terribly. I kept finding erors and had to change my design like 20 times because each time I came up with a design, another problem would come up. Then he gave my manager a list of his complaints of me. My manager kind of walked on eggshells for him tbh. I will admit some was fair, but others just seemed unfair. The biggest one I remember that I felt was unfair was that my manager said that I have too many commits in my MRs. That happened once and it was because the design changed so much. I fought it but my manager even 6 months later was still using that against me. I ended up getting fired. I dont blame that dev but it defintelty felt like the beginning of the end when I wasnt on his good side.",Broad-Cranberry-9050,2025-07-29 17:25:04,1,cscareerquestions,t3_1mce6wv,False,
n5uk086,"Talk to the dev directly, but not aggressively or accusatory. If that doesn't work, talk to managementif that doesn't work, start shopping resumes around",BellacosePlayer,2025-07-29 19:26:54,1,cscareerquestions,t3_1mce6wv,False,
n5uohb0,They’re intimidated by you,imagebiot,2025-07-29 19:48:20,1,cscareerquestions,t3_1mce6wv,False,
n5v3kse,"So, I’m a senior and we’ve dealt with devs and senior devs like this on my last few teams. Sometimes they do this to cover their own mistakes using a highly visible chat. Sometimes they are completely clueless people that don’t understand that using a wide audience chat is not how you deal with things.So, we’ve fixed this a few ways. First step is to document every single time they call you out on a wide audience chat of any kind. If this person does this to others, probably should document that as well. The more records you have the better. Screenshots are also preferred.Second step is to let your manager know that you don’t appreciate being put on blast by this other dev in a company wide chat especially when they you’re not at fault for the issue. Include your record of every time they call you out specifically and what the actual issue was that had to be resolved. Ask your manager how this should be handled. The wrong answer is “nothing”. We had to do a meeting where all the devs agreed to not individually name people even in our team only chat for issues. Senior Devs can ping people directly and handle it not in a chat.Third step is if this behavior continues and your management doesn’t do anything, notify HR with your documentation. Make sure you have save this documentation somewhere you have access to in case they retaliate (manager, HR, senior dev).On most of my teams, we never had to get past step 2. Only once did we have someone get to step 3 and HR talked to the offending dev and manager. Behavior stopped for a few months and then started up again. In that case, the guy was gone in like 48 hours after he started again because he started blaming people who weren’t on our team or didn’t work on the project with issues.",Enabling_Turtle,2025-07-29 20:58:59,1,cscareerquestions,t3_1mce6wv,False,
n5t6dio,"100%. This is absolutely something your manager should be dealing with. Always remember “praise in public, criticize in private.” If someone isn’t doing that, it needs to be corrected.",ThomW,2025-07-29 15:38:19,3,cscareerquestions,t1_n5t2dtb,False,
n5t2kzl,"It’s the middle of the summer, every company hired for new grads to start after they graduated in May. The prestige of the companies you’ve worked at are absolutely not the thing that’s holding you back. Just keep it up and you’ll find something eventually. In the meantime always try and talk to your bosses to get the kind of work you want.",duggedanddrowsy,2025-07-29 15:20:26,7,cscareerquestions,t3_1mce4yb,False,
n5ubxhi,Stop comparing yourself to your brother first of all,LowWhiff,2025-07-29 18:49:02,8,cscareerquestions,t3_1mce4yb,False,
n5t9lmw,"You graduated in May. Currently it's July. Do the math if it feels like a long time while you already have a job. Yeah it sucks if it's not what they actually advertised. But still, you have a job try to make the best of it.I'm sure there were plenty of decent people at those ""no name companies"" that made you a ""dogshit unserious candidate"", you sure about being this harsh?",CyberChipmunkChuckle,2025-07-29 15:53:10,3,cscareerquestions,t3_1mce4yb,False,
n5tdcyf,very fair point I'm just insecure about where I am as I'm looking to get tech jobs from a pharma domain,myps5brokeitself,2025-07-29 16:10:39,0,cscareerquestions,t1_n5t9lmw,True,
n5umzjs,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 19:41:14,1,cscareerquestions,t1_n5umzgp,False,moderator
n5uzfw6,"Personally, I would take the option to move because that sounds tedious to work with, not because it's .NET Framework. If they are this slow getting to .NET, that timeline could expand further out too. Idk though it could be an important application where the risks and business value outweigh the migration. My view is if you are competent in .NET Framework, you'll be able to work in .NET in the first week so I wouldn't reject anyone based on that.",FSNovask,2025-07-29 20:39:54,1,cscareerquestions,t3_1mcdiw1,False,
n5t5eog,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 15:33:45,1,cscareerquestions,t1_n5t5ehj,False,moderator
n5sjbdj,"How much math goes into an ""IT degree""? I'm not sure if you are generalizing your degree, or if that's the degree you got and its general itself - but if the answer doesn't include ""up to Calc3, DiffEqs, Linear Algebra, and some stats"" then Data Science is gonna be a veryyyyyyyy hard sell for you. That being said, a lot of DS roles are centered around LLMS now, so if you have/can get exp with LLMs that might make things easier! However, for ""future proofing"" I think Cloud and DevOps are both the best ways to go. DevOps roles have struggled the least in this market - and most SWE/ML/AI Engineer roles explicitly require it now. Almost same with cloud computing, but maybe not to the extend of DevOps",csingleton1993,2025-07-29 13:46:48,3,cscareerquestions,t3_1mcalqh,False,
n5thtp0,None of those are future proof careers,No-Assist-8734,2025-07-29 16:31:32,3,cscareerquestions,t3_1mcalqh,False,
n5sow2r,How do you know DevOps are struggling the least?,jeddthedoge,2025-07-29 14:14:55,1,cscareerquestions,t1_n5sjbdj,False,
n5tsjn4,Not even sap?,Zlatan-Agrees,2025-07-29 17:20:29,0,cscareerquestions,t1_n5thtp0,True,
n5snq8i,"Sorry, you do not meet the minimum sitewide comment karma requirement of **10** to post a comment. This is comment karma exclusively, not post or overall karma nor karma on this subreddit alone. Please try again after you have acquired more karma. Please look at the [rules page](https://old.reddit.com/r/cscareerquestions/w/posting_rules) for more information.*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/cscareerquestions) if you have any questions or concerns.*",AutoModerator,2025-07-29 14:09:11,0,cscareerquestions,t1_n5snq5l,False,moderator
n5stkna,"I've seen wayyyyyy more DevOps roles than ML or SW roles (a quick guesstimation is out of all roles lets say 50% are DevOps and the other 50% are comprised of everything else), and the general SW/ML roles require it in some form or another - also keep in mind this is my perspective based on the job postings I've seen, other people with different applying habits may have noticed other trends",csingleton1993,2025-07-29 14:37:45,2,cscareerquestions,t1_n5sow2r,False,
n5r08kl,the truth is working harder doesn’t make you any less replaceable,octocode,2025-07-29 06:35:38,20,cscareerquestions,t3_1mc3vq5,False,
n5r42we,"By working 15 hours by default, you unknowingly set the expectations of your future work at the same level.Work 5-6 hours per day and only work more when absolutely necessary and/or advantageous.Want an example? Nobody cared about my long hours in my first year. But fixing that critical outage one Sunday while I wasn't even on standby? Still getting pats on the back for that one.Job security is more about the relationship with your colleagues and manager, than actual performance.",swiebertjee,2025-07-29 07:11:16,6,cscareerquestions,t3_1mc3vq5,False,
n5re0kz,"Never a good idea. 1. You are still perfectly replaceable and there are better people than you hire. (applies to almost all of us)2. If you work OVER and they don't pay for it extra, it means you lower your hourly salary yourself, make sure your hourly rate per 15 hours a day is still as good as you think it is...3. You will never finish more work than the incoming one. That's a lost fight, so don't bother.4. You will get burnt out, no doubt, just a matter of time. You can have a Porsche and love it, but would you still love it if you spent 15 hours a day in it, every day, while you technically had an 8-hour drive? Maybe for a short while, would quickly become a burden.5. There are plenty of good companies that people enjoy working for, don't overthink it, you are not the only one who is happy with the workplace. People are not after your job, relax.6. If you establish unrealistic perspective of yourself delivering the amount of work that requires 15 hours of work and pretend you work 8 hours then they'll quickly assume you work fast and you'll be expected to work that fast all the time. Once you finally get tired of it or how other things to do in your life (working 15 hours a day is a really bad idea, means you literally have no life off work), you will be seen as underperforming out of nowhere and you'll have to answer ""some"" questions.7. Overall if you work for a good company, as you said yourself, the amount of work and team velocity is more or less known and established. If you deliver on time the amount of work you are expected to deliver, you'll be fine and that should be your performance measurement. Working 15 hours a day only means working 7 hours too long and taking 7 hours a day from your life which you will never get back and cannot buy and you will regret it when you get older. You will realize how stupid that was not to use your life, but instead you either got extra money or/and better position. Neither of which are worth it.",Tango1777,2025-07-29 08:47:08,2,cscareerquestions,t3_1mc3vq5,False,
n5r12rg,Work hard but do it for yourself and take advantage of the opportunity to grow your skills. You are just a number to them.,SpiritualName2684,2025-07-29 06:43:29,1,cscareerquestions,t3_1mc3vq5,False,
n5r5855,How much experience do you have? I’m assuming junior by this comment; you will go through these stages. You will burn out and find a new ignition. You need to find the people that ignite you. The people around you will drive you—the whole way through your life.,beargambogambo,2025-07-29 07:21:54,1,cscareerquestions,t3_1mc3vq5,False,
n5rdt0x,">I feel like I might be on my way to burnoutYou know damn well that's what's going on, that's for sure. But can't admit to it because it might be too much of a shocking / shattering worldview disruption. You're *supposed to* have a good life, you've worked hard, and you have a solid job. You did it all right. So what gives? It might upturn all the tables in your world which you've constructed for yourself to realize this vital aspect of life has serious problems in your approach where you endorse your own burnout as a way of life. This burnout is the shape of *doing everything right* you learned growing up - how can you abandon it when *everything went right?* In a very human way, you somehow both know you are burning out and are also defending against realizing it by distancing yourself from the knowledge of this fact - cognitive dissonance.You feel real bad about it and come here thinking we can provide the correct mindset for you to peacefully exist in a state of cognitive dissonance. The only way out is to resolve it, not to live with it. That's your choice to make. You may be lying to yourself in other ways that promote your coping with unhappiness. If you find yourself asking yourself ""do I feel this way?"" You should perhaps instead ask ""if I felt this way, what do I do? Does that seem right, why or why not?"" I think the actions you'd suggest for yourself will bypass your thinking self and give you a gut reaction feeling that will tell you tons about what you really want and eliminate some confusionJust my thoughts and I'd be proud if any of this gives you any value",clotifoth,2025-07-29 08:45:06,1,cscareerquestions,t3_1mc3vq5,False,
n5rgwbb,"There is so value in you working any longer than 8 hours a day as a regular. Doing anything more deteriorates your output significantly if it is sustained for long periods of time. You have been warned not to do this because the company actually wants to retain you.You not heeding this warning will lead to you burning yourself out and reducing your performance over time. Eventually you are either going to burn out and quit or get fired for poor performance which you created in both scenarios.Nobody is going to remember or care how many hours you put in at work when you are on your deathbed. So instead of wasting the extra hours at work, do something more productive with your life and stay off the clock and enjoy the actual work life balance.",Helpjuice,2025-07-29 09:15:16,1,cscareerquestions,t3_1mc3vq5,False,
n5tbg6m,"You are experiencing what many people (especially in big tech) experience. Especially in corporate america. The idea that we need to work more and produce more, and when we finish, then we pick up the next thing. Is there a reason why you feel like this? Do you feel when you did 8 hours your coworkers were producing twice the work? Do you see people responding to emails or messages late at night?Your manager has said to not be like the guy who has no work life balance and you say it seems everybody has great work life balance. I worked at a job similar to yours, great opay, benefits, company that would make your resume look amazing, etc. Difference was, I never got the ""dont overwork yourself"" chat. I got more of the ""we dont expect you towork more than 40 hours \*wink-wink\*"" chat. Everybody I knew was answering emails and calls at like 11pm. Manager was taking laptop to his kids events. People on vacation would get on calls and chat threads to resolve issues. I tried drinking that kool-aid but I also tried respecting my hours. I ended up getting fire dwhen my work obviously didnt compare well to my teammates who were doing 60+ hour weeks when I was strictly maintaining myself to 40-50 hours.'But that job had the culture of working more. Your job doesnt. It's great that you have that mindset to do more and it will get you to keep your job but that's where you need to have communication with your manager. Start doing 8 hours again and every manager meet ask him how you feel you are doing, if he feels you are ahead or on time with things.",Broad-Cranberry-9050,2025-07-29 16:01:41,1,cscareerquestions,t3_1mc3vq5,False,
n5r5ca2,Make this more known :raising_hands: we are not slaves,beargambogambo,2025-07-29 07:23:00,1,cscareerquestions,t1_n5r08kl,False,
n5hchwo,You could look into data engineering. All of the telemetry sent in by IoT swarms needs to be stored and analyzed.,Patient_Pumpkin_4532,2025-07-27 19:08:41,5,cscareerquestions,t3_1maswhn,False,
n5h2xha,"Professional street magician, no more CS jobs in SWE (jk)",Solidus-CTE,2025-07-27 18:20:43,5,cscareerquestions,t3_1maswhn,False,
n5my4rs,"For embedded Id recommend defense/aerospace industry. I worked there for 4 years and I know each company and project is different but in general pros and cons are:Pros:\- Chill and relaxed. Deadlines aren't a big thing in this industry and most of the time past 5 pm you dont hasve to think about work. THe office is ghost town after like 6pm. \- Easy to coast - i knew people who worked 4 hour days and coasted the rest of the day. Some older people would leave after 4-6 hours and charge 8. \- Work life balance is amazing. \- Good benefits.\- 9/80 - you set your own time but you can't work more than 80s hours in a pay period. So what a lot of people like to do is work 9/80s. Basically it's working 8 days of 9 hours (monday-thursday of both weeks), then work an 8 hour day on one friday to get the 2nd friday off. Some companies allow you to put extra hours in a OT bank hours. Since you can't charge OT, you put it in that bank and can use it to leave a bit early on a different week. What most people di dwas use it to save on vacation hours. So theyd work enough to have a week worth of OT hours and then use those hours instead of their PTO when they were on vacation.\- Job security - I cant speak now (especially with some of tracking of government jobs) but befroe that, the defense industry was a great place to have job security. Because you needed securty clearance and that's expensive to get. So even in years where the companies didnt do too good, theyd avoid trying to layoff engineers becauset ehy knew once things got back on track theyd need as much as they could get. \- The projects are really cool and working with real hardware makes it worthwhile.Cons:\- Lack of learning. It's very easy to coast and because of it, unless you really try you wont really learn much and going to a bigger company you may feel behind on how to work in big code systems with huge deadlines. \- You can get stuck in maintenance hell. If the company is running out of projects, they may keep you in maintenance in one of their legacy projects. Lack of developing there. \- Pay isnt that great compared to other CS industries. It's still better than most careers but dont expect big tech pay and you may need to jump around your first 10 years to get a good check. I made 75k off of college and with a promotion and few raises was at 90k after 4 years. Some of my friends who job-hopped to competitors are making like 120-140k as Senior level engineers. \- No RSUs. \-",Broad-Cranberry-9050,2025-07-28 16:49:51,2,cscareerquestions,t3_1maswhn,False,
n5h0p0v,there will always be jobs in network engineering,Inner_Fuel3558,2025-07-27 18:09:37,2,cscareerquestions,t3_1maswhn,False,
n5iywyi,"I, myself thinking of moving into healthcare. There's a barrier of entry, like doing a bachelor's at least for 4 years, but that also makes this field less competitive.",rafinryan99,2025-07-28 00:27:01,2,cscareerquestions,t3_1maswhn,False,
n5gzb9l,"If you want job security my friends in cyber security seem to have a pretty good safety net. If you like embedded we always need engineers in that area, but not sure how tough that market is now. I know in the medical sector there are a lot of boring but safe jobs there.I myself am in software, but I’m seeing breaking in is a little difficult now even if you’re good.",brutusnair,2025-07-27 18:02:49,1,cscareerquestions,t3_1maswhn,False,
n5gyz1r,"I’m pretty optimistic about cyber security specialisations, even if software R&D investment continues to stall there will be an ever increasing amount of software to keep secure and an increasing number of hostile actors trying to exploit things.",Sad-Movie2267,2025-07-27 18:01:08,1,cscareerquestions,t3_1maswhn,False,
n5h0jmc,"I read the first line the same way, less than 100K for a new grad. Well, I would hope so! Regarding the OPs question. No, do not “slow warble” for any reason. You enjoy the work, so do it. If you ever begin to enjoy it less, then apply yourself appropriately. Be careful of the rat race. Working hard to get the next promotion will always lead to deep disappointment, as there are many time you will be the “second pick” for a promotion. If the money is fair, find joy in your work and your relationships, not in climbing ladders.",Joe_Starbuck,2025-07-27 18:08:52,2,cscareerquestions,t3_1marhll,False,
n5graxz,"So under $100K with a few years experience = low pay?And then you you make more and are expected to work more for that extra money, it's a burden and you need to figure out a way to get out of working more.This is why I love this sub.",Early-Surround7413,2025-07-27 17:24:24,1,cscareerquestions,t3_1marhll,False,
n5guudr,Idk if I miswrote or you misread but I'm happy and motivated to work more. I'm wondering whether I should slow down so that I don't finish a project that should take 3-4 weeks in like 5 days and set unrealistic expectations.I think 100k is also pretty expected considering I live in probably the highest cost of living area and I went to a tier 1 University.,wont-share-food,2025-07-27 17:41:21,3,cscareerquestions,t1_n5graxz,True,
n5jju84,"you 60% in, you don't know if the last 40% will take 2 weeks or 2 days and you don't know if what you'll turn in will be 'great' or 'mid' or 'oh crap completely wrong direction' ... I wouldn't ever turn in something in 5 days with a 2-4 week timeline, I would pull in someone to 'check' my progress and if their response wasn't 'oh wow you got so much done so quickly' .. then I'd ask them what percentage they think I were done of the task.",NotUpdated,2025-07-28 02:38:37,1,cscareerquestions,t1_n5guudr,False,
n5h73jz,">I'm happy and motivated to work more.Why would you be happy to work more? Ignore the person who you responded too, the person sounds like a workaholic who has zero self respect.But it makes zero sense to be happy to work more hours. That is less personal time to you. I find it weird certain people can’t work 8 hours and log off. Any hours above that is time you will never get back in your life for a job that doesn’t care about you.",Legitimate-mostlet,2025-07-27 18:41:31,0,cscareerquestions,t1_n5guudr,False,
n5fnl89,"Nashville has some companies but outside of that city, the region is not really a tech hub",ArkGuardian,2025-07-27 14:04:38,3,cscareerquestions,t3_1maj7tm,False,
n5h3ysh,Buckle up. The job market is terrible at the moment.,Salty_Permit4437,2025-07-27 18:25:53,2,cscareerquestions,t3_1maj7tm,False,
n5fupf0,"There are essentially zero tech jobs aside from a few small companies. If you want to make bank, you have to move to a tech hub, which right now are: NYC, Seattle, SF, Austin (to a certain extend)",BigPepeNumberOne,2025-07-27 14:42:48,1,cscareerquestions,t3_1maj7tm,False,
n5g4w2f,Yeah you better off trying to find a remote job if you are living in Nashville,wolfenstein734,2025-07-27 15:35:12,1,cscareerquestions,t3_1maj7tm,False,
n5ls6r4,I wouldn't want to move here right now...you might be better off convincing him to move to europe.,Creative-Package6213,2025-07-28 13:24:49,0,cscareerquestions,t3_1maj7tm,False,
n5lsrc3,Its terrible everywhere. Last time I checked the unemployment rate in the US is lower than Europe.,Altruistic-Web1987,2025-07-28 13:27:59,1,cscareerquestions,t1_n5h3ysh,True,
n5lsw10,I don‘t have to make bank. I just need a job with at least 70k salary.,Altruistic-Web1987,2025-07-28 13:28:42,1,cscareerquestions,t1_n5fupf0,True,
n5lsn4x,why is that?,Altruistic-Web1987,2025-07-28 13:27:20,2,cscareerquestions,t1_n5ls6r4,True,
n5lxn13,"If you don’t have US work authorization already there’s almost zero chance. That said since you will have it, the other hurdle is that entry level jobs are particularly scarce. Senior level is low unemployment but entry level is high. https://www.oxfordeconomics.com/resource/educated-but-unemployed-a-rising-reality-for-us-college-grads/AI is distorting the job market like I’ve never seen.",Salty_Permit4437,2025-07-28 13:54:07,1,cscareerquestions,t1_n5lsrc3,False,
n5m5iml,70k should be super doable. Up to 130/150 is doable outside tech hubs. Not sure about where you are going tho.,BigPepeNumberOne,2025-07-28 14:33:54,1,cscareerquestions,t1_n5lsw10,False,
n5dwypn,"If you’re going to double major eng + ___ make some art(or some other humanities to enrich yourself) or double down with math or physics. Unless you’re just academically inclined, being active and competitive in one major is >>> double majoring and not standing out in either imo.",TheBlueSully,2025-07-27 05:22:35,3,cscareerquestions,t3_1madp23,False,
n5dye47,"If you are sure about tech, an MS is definitely worth it. You can usually get a lucrative specialization including AI/ML, computer graphics, or distributed systems.",ArkGuardian,2025-07-27 05:34:56,4,cscareerquestions,t3_1madp23,False,
n5esb0y,"I have a BSEE and got into CS through consulting which staffs engineering for all positions. DO NOT DO OPTION 2.Have you seen the engineering degree outline of courses each semester? You have 0 free electives. Recruiters will not care in either CS or engineering that you have the other degree. You will earn worse grades taking extra stacked courseloads each semester and not graduate within 6 years.Mechanical, Electrical and Civil have relatively good job markets, much better than CS. Computer Engineering is in the same mess as CS, maybe worse because they hold out for hardware jobs.If you have to have a CS career, get the best degree for it. If not, do engineering and avoid this mess. Also...don't get an MS in CS. Get hired with the BS on back of an internship or co-op. MS is a scam to extract more federal money out of you.",NewSchoolBoxer,2025-07-27 10:22:55,2,cscareerquestions,t3_1madp23,False,
n5dv165,Honestly bro I’d double major in some engineering vocation in case ai absolutely fucks cs,Cautious-Bet-9707,2025-07-27 05:06:23,0,cscareerquestions,t3_1madp23,False,
n5fi47y,CS and computer engineering might have a fair bit of overlap if you decide to go that way.,Ok_Experience_5151,2025-07-27 13:33:36,-1,cscareerquestions,t3_1madp23,False,
n5hakyk,You could finish earlier,zninjamonkey,2025-07-27 18:58:58,0,cscareerquestions,t3_1madp23,False,
n5ibtsb,"I would bs in cs and computer engineering if that's an option, cover hardware and software. Can you not also get an ms after that if you would like",Conscious_Jeweler196,2025-07-27 22:11:35,0,cscareerquestions,t3_1madp23,False,
n5flpe7,"Agreed, every double major I’ve met now works with only one of them, and some had a really hard time breaking into the workforce, and this was years ago when the market was better.",no-sleep-only-code,2025-07-27 13:54:10,1,cscareerquestions,t1_n5dwypn,False,
n5dzy76,"At my alma mater one of the most common combined majors was CS+microbiology. At the time, it was mostly pre-meds/pre-pharma kids who had CS as a backup, but the backup is probably the other way around these days.",Ok_scene_6981,2025-07-27 05:48:42,-5,cscareerquestions,t1_n5dv165,False,
